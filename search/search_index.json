{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. abc ahuh 111","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. abc ahuh 111","title":"Project layout"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/","text":"\u57fa\u672c\u4fe1\u606f \u4e2a\u4eba\u6982\u51b5 1998\u5e7410\u67086\u65e5\u51fa\u751f\uff0c2021\u5e74\u6bd5\u4e1a\u4e8e\u6cb3\u6c60\u5b66\u9662\uff0c\u76ee\u524d\u5728\u5b9c\u5dde\u533a\u7b2c\u4e8c\u5e7c\u513f\u56ed\u5f53\u8001\u5e08\uff0c\u5df2\u8003\u4e0a\u7f16\u5236\u3002 \u5bb6\u4e2d\u59d0\u5f1f\u4e09\u4eba\uff0c\u5927\u59d01987\u5e74\u751f\u4eba\uff0c\u5df2\u5a5a\uff0c\u6709\u4e24\u4e2a\u513f\u5b50\u3002\u4e4b\u524d\u6709\u4e2a\u54e5\u54e5\uff0c\u5c0f\u65f6\u5019\u6eba\u4ea1\u3002\u73b0\u5728\u8c46\u8c46\u6392\u8001\u4e8c\u3002\u5f1f\u5f1f\u97e6\u950b\u5728\u8fbd\u5b81\u5f53\u5175\uff0c\u5df2\u6ee1\u4e09\u5e74\u3002 \u5bb6\u5728\u90fd\u5b89\u62c9\u70c8\u8857\u3002 \u8eab\u4efd\u8bc1\u53f7\uff1a452730199810064720 \u7535\u8bdd\u53f7\u7801\uff1a13768481792 \u6559\u80b2\u60c5\u51b5 \u7b2c\u4e00\u5b66\u5386\u5927\u4e13\uff0c\u81ea\u8003\u672c\u79d1\u3002 \u751f\u65e5 1998\u5e7410\u67086\u65e5\uff0c\u519c\u5386\u516b\u6708\u521d\u4e8c\u3002 \u559c\u6b22\u7684\u4e1c\u897f \u5403 \u6536\u8d27\u5730\u5740 \u5e7f\u897f\u6cb3\u6c60\u5e02\u5b9c\u5dde\u533a\u7b2c\u4e8c\u5e7c\u513f\u56ed \u751f\u7406\u671f \u751f\u7406\u5468\u671f\uff1a38\u5929 \u6301\u7eed\u65f6\u95f4\uff1a7\u5929 \u7ecf\u671f\u7efc\u5408\u5f81\uff1a\u8170\u817f\u75bc\u75db\uff0c\u80f8\u90e8\u80c0\u75db\uff0c\u809a\u5b50\u5076\u5c14\u4f1a\u75bc \u536b\u751f\u5dfe\uff1a\u5979\u7814\u793e \u8fc7\u5f80\u60c5\u53f2 \u5df2\u77e5\u6709\u4e00\u4efb\u524d\u7537\u53cb\u3002 \u53d1\u751f\u5728\u5927\u4e8c\u65f6\u671f\uff0c\u4e49\u65e0\u53cd\u987e\u5730\u8ffd\u5bfb\u6240\u8c13\u201c\u7231\u60c5\u201d\uff0c\u4e3a\u524d\u7537\u53cb\u4ed8\u51fa\u6240\u6709\u3002","title":"\u57fa\u672c\u4fe1\u606f"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_1","text":"","title":"\u57fa\u672c\u4fe1\u606f"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_2","text":"1998\u5e7410\u67086\u65e5\u51fa\u751f\uff0c2021\u5e74\u6bd5\u4e1a\u4e8e\u6cb3\u6c60\u5b66\u9662\uff0c\u76ee\u524d\u5728\u5b9c\u5dde\u533a\u7b2c\u4e8c\u5e7c\u513f\u56ed\u5f53\u8001\u5e08\uff0c\u5df2\u8003\u4e0a\u7f16\u5236\u3002 \u5bb6\u4e2d\u59d0\u5f1f\u4e09\u4eba\uff0c\u5927\u59d01987\u5e74\u751f\u4eba\uff0c\u5df2\u5a5a\uff0c\u6709\u4e24\u4e2a\u513f\u5b50\u3002\u4e4b\u524d\u6709\u4e2a\u54e5\u54e5\uff0c\u5c0f\u65f6\u5019\u6eba\u4ea1\u3002\u73b0\u5728\u8c46\u8c46\u6392\u8001\u4e8c\u3002\u5f1f\u5f1f\u97e6\u950b\u5728\u8fbd\u5b81\u5f53\u5175\uff0c\u5df2\u6ee1\u4e09\u5e74\u3002 \u5bb6\u5728\u90fd\u5b89\u62c9\u70c8\u8857\u3002 \u8eab\u4efd\u8bc1\u53f7\uff1a452730199810064720 \u7535\u8bdd\u53f7\u7801\uff1a13768481792","title":"\u4e2a\u4eba\u6982\u51b5"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_3","text":"\u7b2c\u4e00\u5b66\u5386\u5927\u4e13\uff0c\u81ea\u8003\u672c\u79d1\u3002","title":"\u6559\u80b2\u60c5\u51b5"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_4","text":"1998\u5e7410\u67086\u65e5\uff0c\u519c\u5386\u516b\u6708\u521d\u4e8c\u3002","title":"\u751f\u65e5"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_5","text":"\u5403","title":"\u559c\u6b22\u7684\u4e1c\u897f"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_6","text":"\u5e7f\u897f\u6cb3\u6c60\u5e02\u5b9c\u5dde\u533a\u7b2c\u4e8c\u5e7c\u513f\u56ed","title":"\u6536\u8d27\u5730\u5740"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_7","text":"\u751f\u7406\u5468\u671f\uff1a38\u5929 \u6301\u7eed\u65f6\u95f4\uff1a7\u5929 \u7ecf\u671f\u7efc\u5408\u5f81\uff1a\u8170\u817f\u75bc\u75db\uff0c\u80f8\u90e8\u80c0\u75db\uff0c\u809a\u5b50\u5076\u5c14\u4f1a\u75bc \u536b\u751f\u5dfe\uff1a\u5979\u7814\u793e","title":"\u751f\u7406\u671f"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/#_8","text":"\u5df2\u77e5\u6709\u4e00\u4efb\u524d\u7537\u53cb\u3002 \u53d1\u751f\u5728\u5927\u4e8c\u65f6\u671f\uff0c\u4e49\u65e0\u53cd\u987e\u5730\u8ffd\u5bfb\u6240\u8c13\u201c\u7231\u60c5\u201d\uff0c\u4e3a\u524d\u7537\u53cb\u4ed8\u51fa\u6240\u6709\u3002","title":"\u8fc7\u5f80\u60c5\u53f2"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E8%B1%86%E8%B1%86%E7%9A%84%E7%AC%AC%E4%B8%80%E5%B0%81%E4%BF%A1/","text":"\u8c46\u8c46\u7684\u7b2c\u4e00\u5c01\u4fe1 To \u5174\u7ef4\uff1a \u201c\u4e8e\u5343\u4e07\u4eba\u4e4b\u4e2d\uff0c\u9047\u89c1\u4f60\u6240\u8981\u9047\u89c1\u7684\u4eba\u3002\u4e8e\u5343\u4e07\u5e74\u4e4b\u4e2d\uff0c\u65f6\u95f4\u7684\u65e0\u6daf\u8352\u91ce\u91cc\uff0c\u6ca1\u6709\u65e9\u4e00\u6b65\uff0c\u4e5f\u6ca1\u6709\u665a\u4e00\u6b65\uff0c\u521a\u5de7\u8d76\u4e0a\u4e86\uff0c\u6ca1\u6709\u522b\u7684\u8bdd\u53ef\u8bf4\uff0c\u60df\u6709\u8f7b\u8f7b\u5730\u95ee\u4e00\u58f0\uff1a\u2018\u5662\uff0c\u4f60\u4e5f\u5728\u8fd9\u91cc\uff1f\u2019\u201d\u8fd9\u662f\u5f20\u7231\u73b2\u5728\u300a\u7231\u300b\u91cc\u5199\u5230\u7684\u4e00\u6bb5\u8bdd\u3002\u501f\u7528\u8fd9\u53e5\u8bdd\u4e5f\u662f\u60f3\u8868\u8fbe\u521a\u5de7\u8d76\u4e0a\u4e86\u4f60\u7684\u51fa\u73b0\uff0c\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u7684\u610f\u5916\uff0c\u6b63\u5728\u5907\u8bfe\u5ba4\u5907\u7740\u8bfe\u5c31\u6709\u4eba\u7ed9\u4ecb\u7ecd\u5bf9\u8c61\u4e86\uff0c\u7136\u540e\u89c1\u9762\u4e5f\u633a\u4ed3\u4fc3\u7684\u3002\u7b2c\u4e00\u5370\u8c61\u4e2d\u7684\u4f60\u5c31\u662f\u61a8\u61a8\u7684\u6837\u5b50\uff0c\u5f88\u8e0f\u5b9e\u5f88\u8212\u670d\u7684\u4e00\u79cd\u611f\u89c9\uff0c\u5979\u4eec\u8bf4\u4f60\u4e0d\u7231\u8bb2\u8bdd\u5565\u7684\uff0c\u6728\u5934\u5565\u7684\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u4e0d\u8fc7\u540e\u6765\u6211\u53d1\u73b0\u804a\u5f00\u4e4b\u540e\u7684\u4f60\u624d\u662f\u6700\u771f\u5b9e\u7684\u4f60\uff08\u4e5f\u8bb8\u8fd8\u6709\u66f4\u771f\u5b9e\u7684\u6211\u4e0d\u77e5\u9053\u800c\u5df2\uff09\uff0c\u4e5f\u8bb8\u662f\u4e39\u59d0\u90fd\u4e0d\u77e5\u9053\u7684\u4e00\u9762\u3002\u5f00\u59cb\u6211\u8fd8\u89c9\u5f97\u4e5f\u8bb8\u4f1a\u804a\u4e0d\u4e0b\u53bb\uff0c\u6bd5\u7adf\u5e74\u9f84\u5dee\u52a0\u4e0a\u4ee3\u6c9f\uff0c\u54ce\uff0c\u6ca1\u60f3\u5230\u6211\u4e00\u70b9\u6ca1\u611f\u89c9\u5230\u5e74\u9f84\u5dee\uff0c\u5c31\u50cf\u662f\u5e73\u65f6\u8ddf\u6211\u670b\u53cb\u5520\u55d1\uff0c\u6240\u4ee5\u4f60\u4e5f\u6210\u4e3a\u6211\u7684\u597d\u670b\u53cb\u5566\u3002\u6211\u89c9\u5f97\u5f88\u60ca\u8bb6\u7684\u5c31\u662f\u4f60\u7ed9\u6211\u9001\u82b1\u7684\u65f6\u5019\uff0c\u6bd5\u7adf\u90a3\u4f1a\u513f\u521a\u8ba4\u8bc6\u4e0d\u4e45\uff0c\u8fd8\u4e0d\u662f\u5f88\u719f\uff0c\u82b1\u5e97\u7ed9\u6211\u6253\u7535\u8bdd\u6211\u4ee5\u4e3a\u6253\u9519\u4e86\uff0c\u7136\u540e\u90a3\u4e2a\u5c0f\u59d0\u59d0\u8bf4\u201c\u4f60\u4e0d\u662f\u8c46\u8c46\u5417\uff1f\u201d\u5e26\u7740\u7591\u60d1\u4e0b\u697c\u9886\u4e86\u82b1\u770b\u4e86\u7f72\u540d\uff0c\u7136\u540e\u4e00\u76ee\u4e86\u7136\uff0c\u662f\u975e\u5e38\u5f00\u5fc3\u7684\uff0c\u6bd5\u7adf\u7b2c\u4e00\u6b21\u6536\u5230\u7537\u5b69\u5b50\u9001\u7684\u82b1\u5440\uff0c\u8c22\u8c22\u4f60\u3002\u4f46\u662f\u6709\u65f6\u5019\u8fd8\u662f\u89c9\u5f97\u4f60\u7684\u5fc3\u601d\u633a\u96be\u7422\u78e8\u7684\uff0c\u54c8\u54c8\u54c8\uff0c\u6765\u65e5\u65b9\u957f\uff0c\u6162\u6162\u6765\u5427\uff0c\u5982\u679c\u6709\u53ef\u80fd\u7684\u8bdd\u3002 From \u8c46\u8c46 \u8fd9\u5c31\u662f\u6587\u827a\u5973\u9752\u5e74\u5417\uff1f","title":"\u8c46\u8c46\u7684\u7b2c\u4e00\u5c01\u4fe1"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E8%B1%86%E8%B1%86%E7%9A%84%E7%AC%AC%E4%B8%80%E5%B0%81%E4%BF%A1/#_1","text":"To \u5174\u7ef4\uff1a \u201c\u4e8e\u5343\u4e07\u4eba\u4e4b\u4e2d\uff0c\u9047\u89c1\u4f60\u6240\u8981\u9047\u89c1\u7684\u4eba\u3002\u4e8e\u5343\u4e07\u5e74\u4e4b\u4e2d\uff0c\u65f6\u95f4\u7684\u65e0\u6daf\u8352\u91ce\u91cc\uff0c\u6ca1\u6709\u65e9\u4e00\u6b65\uff0c\u4e5f\u6ca1\u6709\u665a\u4e00\u6b65\uff0c\u521a\u5de7\u8d76\u4e0a\u4e86\uff0c\u6ca1\u6709\u522b\u7684\u8bdd\u53ef\u8bf4\uff0c\u60df\u6709\u8f7b\u8f7b\u5730\u95ee\u4e00\u58f0\uff1a\u2018\u5662\uff0c\u4f60\u4e5f\u5728\u8fd9\u91cc\uff1f\u2019\u201d\u8fd9\u662f\u5f20\u7231\u73b2\u5728\u300a\u7231\u300b\u91cc\u5199\u5230\u7684\u4e00\u6bb5\u8bdd\u3002\u501f\u7528\u8fd9\u53e5\u8bdd\u4e5f\u662f\u60f3\u8868\u8fbe\u521a\u5de7\u8d76\u4e0a\u4e86\u4f60\u7684\u51fa\u73b0\uff0c\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u7684\u610f\u5916\uff0c\u6b63\u5728\u5907\u8bfe\u5ba4\u5907\u7740\u8bfe\u5c31\u6709\u4eba\u7ed9\u4ecb\u7ecd\u5bf9\u8c61\u4e86\uff0c\u7136\u540e\u89c1\u9762\u4e5f\u633a\u4ed3\u4fc3\u7684\u3002\u7b2c\u4e00\u5370\u8c61\u4e2d\u7684\u4f60\u5c31\u662f\u61a8\u61a8\u7684\u6837\u5b50\uff0c\u5f88\u8e0f\u5b9e\u5f88\u8212\u670d\u7684\u4e00\u79cd\u611f\u89c9\uff0c\u5979\u4eec\u8bf4\u4f60\u4e0d\u7231\u8bb2\u8bdd\u5565\u7684\uff0c\u6728\u5934\u5565\u7684\uff0c\u786e\u5b9e\u5982\u6b64\uff0c\u4e0d\u8fc7\u540e\u6765\u6211\u53d1\u73b0\u804a\u5f00\u4e4b\u540e\u7684\u4f60\u624d\u662f\u6700\u771f\u5b9e\u7684\u4f60\uff08\u4e5f\u8bb8\u8fd8\u6709\u66f4\u771f\u5b9e\u7684\u6211\u4e0d\u77e5\u9053\u800c\u5df2\uff09\uff0c\u4e5f\u8bb8\u662f\u4e39\u59d0\u90fd\u4e0d\u77e5\u9053\u7684\u4e00\u9762\u3002\u5f00\u59cb\u6211\u8fd8\u89c9\u5f97\u4e5f\u8bb8\u4f1a\u804a\u4e0d\u4e0b\u53bb\uff0c\u6bd5\u7adf\u5e74\u9f84\u5dee\u52a0\u4e0a\u4ee3\u6c9f\uff0c\u54ce\uff0c\u6ca1\u60f3\u5230\u6211\u4e00\u70b9\u6ca1\u611f\u89c9\u5230\u5e74\u9f84\u5dee\uff0c\u5c31\u50cf\u662f\u5e73\u65f6\u8ddf\u6211\u670b\u53cb\u5520\u55d1\uff0c\u6240\u4ee5\u4f60\u4e5f\u6210\u4e3a\u6211\u7684\u597d\u670b\u53cb\u5566\u3002\u6211\u89c9\u5f97\u5f88\u60ca\u8bb6\u7684\u5c31\u662f\u4f60\u7ed9\u6211\u9001\u82b1\u7684\u65f6\u5019\uff0c\u6bd5\u7adf\u90a3\u4f1a\u513f\u521a\u8ba4\u8bc6\u4e0d\u4e45\uff0c\u8fd8\u4e0d\u662f\u5f88\u719f\uff0c\u82b1\u5e97\u7ed9\u6211\u6253\u7535\u8bdd\u6211\u4ee5\u4e3a\u6253\u9519\u4e86\uff0c\u7136\u540e\u90a3\u4e2a\u5c0f\u59d0\u59d0\u8bf4\u201c\u4f60\u4e0d\u662f\u8c46\u8c46\u5417\uff1f\u201d\u5e26\u7740\u7591\u60d1\u4e0b\u697c\u9886\u4e86\u82b1\u770b\u4e86\u7f72\u540d\uff0c\u7136\u540e\u4e00\u76ee\u4e86\u7136\uff0c\u662f\u975e\u5e38\u5f00\u5fc3\u7684\uff0c\u6bd5\u7adf\u7b2c\u4e00\u6b21\u6536\u5230\u7537\u5b69\u5b50\u9001\u7684\u82b1\u5440\uff0c\u8c22\u8c22\u4f60\u3002\u4f46\u662f\u6709\u65f6\u5019\u8fd8\u662f\u89c9\u5f97\u4f60\u7684\u5fc3\u601d\u633a\u96be\u7422\u78e8\u7684\uff0c\u54c8\u54c8\u54c8\uff0c\u6765\u65e5\u65b9\u957f\uff0c\u6162\u6162\u6765\u5427\uff0c\u5982\u679c\u6709\u53ef\u80fd\u7684\u8bdd\u3002 From \u8c46\u8c46 \u8fd9\u5c31\u662f\u6587\u827a\u5973\u9752\u5e74\u5417\uff1f","title":"\u8c46\u8c46\u7684\u7b2c\u4e00\u5c01\u4fe1"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E8%B1%86%E8%B1%86%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%B0%81%E4%BF%A1/","text":"\u8c46\u8c46\u7684\u7b2c\u4e8c\u5c01\u4fe1 \u61a8\u61a8\uff1a \u6211\u4eec\u5728\u4e00\u8d77\u5feb\u4e24\u4e2a\u6708\u4e86\uff0c\u201c\u4e0e\u541b\u521d\u76f8\u8bc6\uff0c\u72b9\u5982\u6545\u4eba\u5f52\u201d\uff0c\u8fd9\u662f\u6211\u76ee\u524d\u4e3a\u6b62\u6700\u5927\u7684\u611f\u89e6\uff0c\u4f46\u66f4\u591a\u7684\u611f\u89e6\u5c31\u662f\u4f60\u8ba9\u6211\u4f53\u4f1a\u5230\u4e86\u201c\u603b\u6709\u4eba\u7b28\u62d9\u5730\u60f3\u628a\u6240\u6709\u7684\u6e29\u67d4\u90fd\u7ed9\u4f60\u201d\u3002 \u521a\u5728\u4e00\u8d77\u7684\u65f6\u5019\u633a\u62c5\u5fc3\u7684\uff0c\u6211\u4e5f\u6ca1\u6709\u5f88\u5927\u7684\u5e95\u6c14\u76f8\u4fe1\u6211\u4eec\u80fd\u591f\u575a\u6301\u591a\u4e45\uff0c\u4f46\u5f53\u4f60\u4e5f\u613f\u610f\u5411\u6211\u8d70\u6765\u7684\u65f6\u5019\uff0c\u5c31\u575a\u5b9a\u4e86\u6211\u7684\u60f3\u6cd5\uff0c\u65e0\u6bd4\u7684\u5f00\u5fc3\u548c\u611f\u52a8\u3002\u4e0d\u7792\u4f60\u8bf4\uff0c\u5feb\u4e24\u4e2a\u6708\u4ee5\u6765\uff0c\u6211\u7761\u5f97\u771f\u7684\u5f88\u597d\uff0c\u65e0\u8bba\u5de5\u4f5c\u6216\u751f\u6d3b\u4e0a\u6709\u591a\u5927\u7684\u538b\u529b\u3001\u4e0d\u5f00\u5fc3\uff0c\u4f46\u53ea\u8981\u770b\u5230\u4f60\uff0c\u80fd\u548c\u4f60\u8bf4\u4e0a\u8bdd\u5fc3\u91cc\u5c31\u5f88\u8212\u670d\u4e86\u3002\u6211\u662f\u85cf\u4e0d\u4f4f\u4e8b\u7684\uff0c\u4f46\u4e5f\u4e0d\u662f\u548c\u8c01\u90fd\u8bf4\uff0c\u4f46\u90a3\u4e2a\u4eba\u662f\u4f60\uff0c\u6211\u5c31\u613f\u610f\u8bf4\u5416\u3002 \u65e9\u5728\u4f60\u7ed9\u6211\u5265\u6854\u5b50\u548c\u67da\u5b50\u7684\u65f6\u5019\u6211\u5c31\u89c9\u5f97\u6211\u53ef\u80fd\u8d70\u5230\u5751\u91cc\u4e86\uff0c\u4e00\u4e2a\u6ee1\u662f\u6e29\u67d4\u4e0e\u7231\u7684\u5751\u3002\u6211\u4ece\u6ca1\u60f3\u8fc7\u4f1a\u6709\u4eba\u80fd\u4e3a\u6211\u505a\u8fd9\u4e9b\u5c0f\u5230\u6211\u53ef\u4ee5\u81ea\u5df1\u5b8c\u6210\u7684\u4e8b\u60c5\uff0c\u4ee5\u524d\u90fd\u662f\u6211\u7fa1\u6155\u522b\u4eba\uff0c\u73b0\u5728\u6211\u4e0d\u7528\u5566\uff0c\u56e0\u4e3a\u6211\u4e5f\u62e5\u6709\u4e86\u8fd9\u6837\u7684\u6e29\u67d4\uff0c\u96be\u80fd\u53ef\u8d35\u4e5f\u6ee1\u5fc3\u6b22\u559c\u3002\u4ee5\u524d\u89c9\u5f97\u604b\u7231\u633a\u9ebb\u70e6\u7684\uff0c\u8981\u4ece\u5934\u4e86\u89e3\u4e00\u4e2a\u4eba\uff0c\u5f7c\u6b64\u8bd5\u63a2\uff0c\u52aa\u529b\u8ba9\u5bf9\u65b9\u5bf9\u4f60\u4ea7\u751f\u597d\u611f\uff0c\u6700\u540e\u653e\u4e0b\u9632\u5907\u3002\u4f46\u6211\u89c9\u5f97\u6709\u8bdd\u76f4\u8bf4\u6bd4\u8f83\u5b9e\u5728\uff0c\u4f55\u5fc5\u82b1\u65f6\u95f4\u8bd5\u63a2\uff0c\u65e2\u7136\u9009\u62e9\u4e86\u5c31\u4e49\u65e0\u53cd\u987e\uff0c\u4e0e\u5176\u82b1\u65f6\u95f4\u8bd5\u63a2\uff0c\u4e0d\u5982\u82b1\u65f6\u95f4\u7ec6\u54c1\u5f7c\u6b64\u7684\u6e29\u67d4\uff0c\u53cd\u6b63\u6211\u633a\u6ee1\u8db3\u7684\uff0c\u6ca1\u6709\u8981\u6c42\u4e5f\u6ca1\u6709\u8bd5\u63a2\uff0c\u4e00\u8d77\u63a2\u8ba8\u73b0\u5728\u3001\u4ee5\u540e\u7684\u95ee\u9898\u548c\u751f\u6d3b\uff0c\u4ece\u800c\u589e\u957f\u5f7c\u6b64\u7684\u89c1\u8bc6\u4e5f\u589e\u8fdb\u6211\u4eec\u7684\u611f\u60c5\u5416\uff0c\u5728\u8fd9\u671f\u95f4\u4e5f\u80fd\u5f88\u597d\u7684\u4e86\u89e3\u5230\u5f7c\u6b64\u7684\u6027\u683c\u5416\u3002 \u8bb0\u5f97\u4e4b\u524d\u4f60\u7ed9\u6211\u53d1\u4e86\u4e00\u5f20\u56fe\u8bf4\u5230\u804a\u5929\u6280\u80fd\u7684\uff0c\u6211\u89c9\u5f97\u73b0\u5728\u4f60\u4e3a\u4e86\u6211\u8ba9\u4f60\u7684\u6587\u5b57\u804a\u5929\u6280\u80fd\u9010\u6b65\u964d\u4f4e\uff0c\u89c6\u9891\u804a\u5929\u6280\u80fd\u7206\u68da\uff01\u4f60\u597d\u68d2\u5416\uff01 \u8fd8\u6709\u8bb8\u591a\u7684\u5e73\u65f6\u7684\u65f6\u5019\u90fd\u548c\u4f60\u8bf4\u4e86\u5f88\u591a\u4e86\u3002\u672c\u6765\u60f3\u7740\u7ed9\u5f55\u4e0b\u6765\u7684\uff0c\u4f46\u662f\u6211\u60f3\u5416\uff0c\u5728\u79d1\u6280\u53d1\u8fbe\u7684\u65f6\u4ee3\uff0c\u80fd\u7528\u6587\u5b57\u8868\u8fbe\u7684\u60c5\u611f\u96be\u80fd\u53ef\u8d35\uff0c\u6211\u60f3\u8ba9\u4f60\u4e5f\u62e5\u6709\u8fd9\u79cd\u72ec\u7279\u53c8\u6df3\u6734\u7684\u6d6a\u6f2b\u3002 \u80d6\u8c46 2022 \u5e74 3 \u6708 21 \u65e5 \u8fd9\u5929\u591c\u91cc\u8c46\u8c46\u60f3\u6211\u60f3\u5230\u54ed\u4e86\uff0c\u7b2c\u4e00\u6b21\u89c1\u5979\u6d41\u6cea\u7684\u6837\u5b50\uff0c\u53c8\u4e0d\u80fd\u7ed9\u5979\u4eb2\u543b\u548c\u62e5\u62b1\uff0c\u633a\u96be\u53d7\u7684\u3002","title":"\u8c46\u8c46\u7684\u7b2c\u4e8c\u5c01\u4fe1"},{"location":"Life/%E5%85%B3%E4%BA%8E%E8%B1%86%E8%B1%86/%E8%B1%86%E8%B1%86%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%B0%81%E4%BF%A1/#_1","text":"\u61a8\u61a8\uff1a \u6211\u4eec\u5728\u4e00\u8d77\u5feb\u4e24\u4e2a\u6708\u4e86\uff0c\u201c\u4e0e\u541b\u521d\u76f8\u8bc6\uff0c\u72b9\u5982\u6545\u4eba\u5f52\u201d\uff0c\u8fd9\u662f\u6211\u76ee\u524d\u4e3a\u6b62\u6700\u5927\u7684\u611f\u89e6\uff0c\u4f46\u66f4\u591a\u7684\u611f\u89e6\u5c31\u662f\u4f60\u8ba9\u6211\u4f53\u4f1a\u5230\u4e86\u201c\u603b\u6709\u4eba\u7b28\u62d9\u5730\u60f3\u628a\u6240\u6709\u7684\u6e29\u67d4\u90fd\u7ed9\u4f60\u201d\u3002 \u521a\u5728\u4e00\u8d77\u7684\u65f6\u5019\u633a\u62c5\u5fc3\u7684\uff0c\u6211\u4e5f\u6ca1\u6709\u5f88\u5927\u7684\u5e95\u6c14\u76f8\u4fe1\u6211\u4eec\u80fd\u591f\u575a\u6301\u591a\u4e45\uff0c\u4f46\u5f53\u4f60\u4e5f\u613f\u610f\u5411\u6211\u8d70\u6765\u7684\u65f6\u5019\uff0c\u5c31\u575a\u5b9a\u4e86\u6211\u7684\u60f3\u6cd5\uff0c\u65e0\u6bd4\u7684\u5f00\u5fc3\u548c\u611f\u52a8\u3002\u4e0d\u7792\u4f60\u8bf4\uff0c\u5feb\u4e24\u4e2a\u6708\u4ee5\u6765\uff0c\u6211\u7761\u5f97\u771f\u7684\u5f88\u597d\uff0c\u65e0\u8bba\u5de5\u4f5c\u6216\u751f\u6d3b\u4e0a\u6709\u591a\u5927\u7684\u538b\u529b\u3001\u4e0d\u5f00\u5fc3\uff0c\u4f46\u53ea\u8981\u770b\u5230\u4f60\uff0c\u80fd\u548c\u4f60\u8bf4\u4e0a\u8bdd\u5fc3\u91cc\u5c31\u5f88\u8212\u670d\u4e86\u3002\u6211\u662f\u85cf\u4e0d\u4f4f\u4e8b\u7684\uff0c\u4f46\u4e5f\u4e0d\u662f\u548c\u8c01\u90fd\u8bf4\uff0c\u4f46\u90a3\u4e2a\u4eba\u662f\u4f60\uff0c\u6211\u5c31\u613f\u610f\u8bf4\u5416\u3002 \u65e9\u5728\u4f60\u7ed9\u6211\u5265\u6854\u5b50\u548c\u67da\u5b50\u7684\u65f6\u5019\u6211\u5c31\u89c9\u5f97\u6211\u53ef\u80fd\u8d70\u5230\u5751\u91cc\u4e86\uff0c\u4e00\u4e2a\u6ee1\u662f\u6e29\u67d4\u4e0e\u7231\u7684\u5751\u3002\u6211\u4ece\u6ca1\u60f3\u8fc7\u4f1a\u6709\u4eba\u80fd\u4e3a\u6211\u505a\u8fd9\u4e9b\u5c0f\u5230\u6211\u53ef\u4ee5\u81ea\u5df1\u5b8c\u6210\u7684\u4e8b\u60c5\uff0c\u4ee5\u524d\u90fd\u662f\u6211\u7fa1\u6155\u522b\u4eba\uff0c\u73b0\u5728\u6211\u4e0d\u7528\u5566\uff0c\u56e0\u4e3a\u6211\u4e5f\u62e5\u6709\u4e86\u8fd9\u6837\u7684\u6e29\u67d4\uff0c\u96be\u80fd\u53ef\u8d35\u4e5f\u6ee1\u5fc3\u6b22\u559c\u3002\u4ee5\u524d\u89c9\u5f97\u604b\u7231\u633a\u9ebb\u70e6\u7684\uff0c\u8981\u4ece\u5934\u4e86\u89e3\u4e00\u4e2a\u4eba\uff0c\u5f7c\u6b64\u8bd5\u63a2\uff0c\u52aa\u529b\u8ba9\u5bf9\u65b9\u5bf9\u4f60\u4ea7\u751f\u597d\u611f\uff0c\u6700\u540e\u653e\u4e0b\u9632\u5907\u3002\u4f46\u6211\u89c9\u5f97\u6709\u8bdd\u76f4\u8bf4\u6bd4\u8f83\u5b9e\u5728\uff0c\u4f55\u5fc5\u82b1\u65f6\u95f4\u8bd5\u63a2\uff0c\u65e2\u7136\u9009\u62e9\u4e86\u5c31\u4e49\u65e0\u53cd\u987e\uff0c\u4e0e\u5176\u82b1\u65f6\u95f4\u8bd5\u63a2\uff0c\u4e0d\u5982\u82b1\u65f6\u95f4\u7ec6\u54c1\u5f7c\u6b64\u7684\u6e29\u67d4\uff0c\u53cd\u6b63\u6211\u633a\u6ee1\u8db3\u7684\uff0c\u6ca1\u6709\u8981\u6c42\u4e5f\u6ca1\u6709\u8bd5\u63a2\uff0c\u4e00\u8d77\u63a2\u8ba8\u73b0\u5728\u3001\u4ee5\u540e\u7684\u95ee\u9898\u548c\u751f\u6d3b\uff0c\u4ece\u800c\u589e\u957f\u5f7c\u6b64\u7684\u89c1\u8bc6\u4e5f\u589e\u8fdb\u6211\u4eec\u7684\u611f\u60c5\u5416\uff0c\u5728\u8fd9\u671f\u95f4\u4e5f\u80fd\u5f88\u597d\u7684\u4e86\u89e3\u5230\u5f7c\u6b64\u7684\u6027\u683c\u5416\u3002 \u8bb0\u5f97\u4e4b\u524d\u4f60\u7ed9\u6211\u53d1\u4e86\u4e00\u5f20\u56fe\u8bf4\u5230\u804a\u5929\u6280\u80fd\u7684\uff0c\u6211\u89c9\u5f97\u73b0\u5728\u4f60\u4e3a\u4e86\u6211\u8ba9\u4f60\u7684\u6587\u5b57\u804a\u5929\u6280\u80fd\u9010\u6b65\u964d\u4f4e\uff0c\u89c6\u9891\u804a\u5929\u6280\u80fd\u7206\u68da\uff01\u4f60\u597d\u68d2\u5416\uff01 \u8fd8\u6709\u8bb8\u591a\u7684\u5e73\u65f6\u7684\u65f6\u5019\u90fd\u548c\u4f60\u8bf4\u4e86\u5f88\u591a\u4e86\u3002\u672c\u6765\u60f3\u7740\u7ed9\u5f55\u4e0b\u6765\u7684\uff0c\u4f46\u662f\u6211\u60f3\u5416\uff0c\u5728\u79d1\u6280\u53d1\u8fbe\u7684\u65f6\u4ee3\uff0c\u80fd\u7528\u6587\u5b57\u8868\u8fbe\u7684\u60c5\u611f\u96be\u80fd\u53ef\u8d35\uff0c\u6211\u60f3\u8ba9\u4f60\u4e5f\u62e5\u6709\u8fd9\u79cd\u72ec\u7279\u53c8\u6df3\u6734\u7684\u6d6a\u6f2b\u3002 \u80d6\u8c46 2022 \u5e74 3 \u6708 21 \u65e5 \u8fd9\u5929\u591c\u91cc\u8c46\u8c46\u60f3\u6211\u60f3\u5230\u54ed\u4e86\uff0c\u7b2c\u4e00\u6b21\u89c1\u5979\u6d41\u6cea\u7684\u6837\u5b50\uff0c\u53c8\u4e0d\u80fd\u7ed9\u5979\u4eb2\u543b\u548c\u62e5\u62b1\uff0c\u633a\u96be\u53d7\u7684\u3002","title":"\u8c46\u8c46\u7684\u7b2c\u4e8c\u5c01\u4fe1"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/1.%E7%9B%B8%E8%AF%86/","text":"\u76f8\u8bc6 2021 \u5e74 5 \u6708 6 \u65e5\u665a\uff0c\u4e0e\u8c46\u8c46\u76f8\u8bc6\u4e8e\u4eba\u751f\u4e2d\u7684\u7b2c\u4e00\u6b21\u76f8\u4eb2\uff0c\u8fd9\u4e5f\u53ef\u80fd\u662f\u552f\u4e00\u4e00\u6b21\u76f8\u4eb2\u4e86\u3002 \u7b2c\u4e00\u6b21\u76f8\u4eb2\uff0c\u5185\u5fc3\u5f88\u5fd0\u5fd1\uff0c\u4e5f\u5f88\u671f\u5f85\u3002\u867d\u7136\u662f\u4eb2\u59d0\u6512\u7684\u5c40\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u7ec6\u8bf4\u5bf9\u65b9\u7684\u4fe1\u606f\uff0c\u53ea\u77e5\u9053\u4eba\u5f88 nice\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6ca1\u6709\u8c08\u8fc7\u604b\u7231\u4e14\u5bf9\u7231\u60c5\u6709\u4e00\u5b9a\u61a7\u61ac\u7684\u5c11\u7537\uff0c\u5bf9\u8fd9\u6b21\u76f8\u4eb2\u6709\u7740\u83ab\u540d\u5b8c\u7f8e\u7684\u60f3\u8c61\u3002\u4f46\u662f\u5728\u89c1\u9762\u4e4b\u540e\uff0c\u5374\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u611f\u89c9\u3002\u6700\u4e3b\u8981\u7684\u539f\u56e0\u5e94\u8be5\u662f\u989c\u503c\u6ca1\u6709\u8ba9\u4eba\u773c\u524d\u4e00\u4eae\u7684\u611f\u89c9\uff0c\u53ef\u4ee5\u8bf4\u662f\u5f88\u666e\u901a\uff0c\u5e76\u6ca1\u6709\u5438\u5f15\u5230\u6211\u7684\u5730\u65b9\u3002\u73b0\u5728\u60f3\u60f3\uff0c\u989c\u503c\u80fd\u8fbe\u5230\u90a3\u79cd\u4e0d\u5207\u5b9e\u9645\u7684\u671f\u5f85\u7684\uff0c\u4e5f\u4e0d\u4f1a\u6765\u548c\u6211\u76f8\u4eb2\u4e86\uff0c\u4e5f\u5c31\u91ca\u7136\u4e86\u3002\u5728\u6574\u4e2a\u64b8\u4e32\u7684\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u5df1\u90fd\u6ca1\u8bf4\u51e0\u53e5\u8bdd\uff0c\u4e00\u76f4\u5728\u542c\u6c14\u6c1b\u7ec4\u548c\u8bc4\u5ba1\u56e2\u5439\u725b\u3002\u6bd5\u7adf\u6211\u548c\u4ed6\u4eec\u90fd\u4e0d\u662f\u4e00\u4e2a\u5708\u5b50\u7684\u4eba\uff0c\u6ca1\u4ec0\u4e48\u80fd\u804a\u7684\u8bdd\u9898\uff0c\u64b8\u64b8\u4e32\u559d\u559d\u9152\u505a\u4e00\u4e2a\u542c\u4f17\u4e5f\u662f\u633a\u597d\u7684\u3002\u8bb0\u5fc6\u4e2d\u751a\u81f3\u90fd\u6ca1\u6709\u548c\u8c46\u8c46\u7684\u76f4\u63a5\u5bf9\u8bdd\uff0c\u53ea\u662f\u95ee\u4e86\u8981\u4e0d\u8981\u591a\u70b9\u4e9b\u4e32\uff0c\u7136\u540e\u53c8\u52a0\u9910\u4e86\u3002\u6700\u540e\u5728\u6c14\u6c1b\u7ec4\u7684\u5e26\u52a8\u4e0b\u52a0\u4e86\u5fae\u4fe1\u597d\u53cb\uff0c\u5728\u6b22\u58f0\u7b11\u8bed\u4e2d\u7ed3\u675f\u4e86\u7b2c\u4e00\u6b21\u4f1a\u9762\u3002 \u672c\u4ee5\u4e3a\u5728\u793c\u8c8c\u7684\u9053\u522b\u4e4b\u540e\uff0c\u4e0d\u4f1a\u518d\u6709\u4efb\u4f55\u540e\u7eed\u4e86\uff0c\u56e0\u4e3a\u81ea\u5df1\u5bf9\u5bf9\u65b9\u65e0\u611f\uff0c\u5e76\u6ca1\u6709\u7ee7\u7eed\u6df1\u5165\u4e86\u89e3\u7684\u610f\u613f\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4e3b\u52a8\u518d\u53bb\u8054\u7cfb\u4e86\u3002\u5374\u5728\u7b2c\u4e8c\u5929\u665a\u4e0a\u6536\u5230\u4e86\u8c46\u8c46\u7684\u6d88\u606f\uff0c\u8fd9\u7684\u786e\u662f\u51fa\u4e4e\u6211\u7684\u610f\u6599\u7684\u3002\u4e0d\u8fc7\u6211\u7b2c\u4e8c\u5929\u5c31\u8981\u8fd4\u6df1\u4e86\uff0c\u793c\u8c8c\u6027\u7684\u804a\u4e86\u51e0\u53e5\uff0c\u4fbf\u4e92\u9053\u665a\u5b89\u4e86\u3002 \u4e5f\u8bb8\u5728\u8fd9\u65f6\uff0c\u6211\u7684\u5fc3\u6001\u4fbf\u5df2\u7ecf\u5f00\u59cb\u6709\u4e86\u53d8\u5316\u5427\u3002\u6bd5\u7adf\u4e00\u822c\u5973\u751f\u90fd\u662f\u77dc\u6301\u7684\uff0c\u89c1\u9762\u540e\u7537\u751f\u6ca1\u6709\u7ee7\u7eed\u8054\u7cfb\uff0c\u5e94\u8be5\u5c31\u5df2\u7ecf\u4f20\u8fbe\u51fa\u4e86\u5230\u6b64\u4e3a\u6b62\u7684\u4fe1\u53f7\u3002\u8fd9\u4e2a\u5973\u4eba\u5374\u5728\u8fd9\u79cd\u60c5\u51b5\u4e3b\u52a8\u7ed9\u6211\u53d1\u4e86\u6d88\u606f\uff0c\u65e0\u8bba\u662f\u51fa\u4e8e\u793c\u8c8c\u8fd8\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u90fd\u535a\u5f97\u4e86\u6211\u7684\u4e00\u70b9\u597d\u611f\uff0c\u52fe\u8d77\u4e86\u6211\u7684\u4e00\u70b9\u5174\u8da3\u3002 \u8fd9\u4e2a\u5973\u4eba\uff0c\u597d\u50cf\u6709\u70b9\u610f\u601d\u3002","title":"\u76f8\u8bc6"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/1.%E7%9B%B8%E8%AF%86/#_1","text":"2021 \u5e74 5 \u6708 6 \u65e5\u665a\uff0c\u4e0e\u8c46\u8c46\u76f8\u8bc6\u4e8e\u4eba\u751f\u4e2d\u7684\u7b2c\u4e00\u6b21\u76f8\u4eb2\uff0c\u8fd9\u4e5f\u53ef\u80fd\u662f\u552f\u4e00\u4e00\u6b21\u76f8\u4eb2\u4e86\u3002 \u7b2c\u4e00\u6b21\u76f8\u4eb2\uff0c\u5185\u5fc3\u5f88\u5fd0\u5fd1\uff0c\u4e5f\u5f88\u671f\u5f85\u3002\u867d\u7136\u662f\u4eb2\u59d0\u6512\u7684\u5c40\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u7ec6\u8bf4\u5bf9\u65b9\u7684\u4fe1\u606f\uff0c\u53ea\u77e5\u9053\u4eba\u5f88 nice\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6ca1\u6709\u8c08\u8fc7\u604b\u7231\u4e14\u5bf9\u7231\u60c5\u6709\u4e00\u5b9a\u61a7\u61ac\u7684\u5c11\u7537\uff0c\u5bf9\u8fd9\u6b21\u76f8\u4eb2\u6709\u7740\u83ab\u540d\u5b8c\u7f8e\u7684\u60f3\u8c61\u3002\u4f46\u662f\u5728\u89c1\u9762\u4e4b\u540e\uff0c\u5374\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u611f\u89c9\u3002\u6700\u4e3b\u8981\u7684\u539f\u56e0\u5e94\u8be5\u662f\u989c\u503c\u6ca1\u6709\u8ba9\u4eba\u773c\u524d\u4e00\u4eae\u7684\u611f\u89c9\uff0c\u53ef\u4ee5\u8bf4\u662f\u5f88\u666e\u901a\uff0c\u5e76\u6ca1\u6709\u5438\u5f15\u5230\u6211\u7684\u5730\u65b9\u3002\u73b0\u5728\u60f3\u60f3\uff0c\u989c\u503c\u80fd\u8fbe\u5230\u90a3\u79cd\u4e0d\u5207\u5b9e\u9645\u7684\u671f\u5f85\u7684\uff0c\u4e5f\u4e0d\u4f1a\u6765\u548c\u6211\u76f8\u4eb2\u4e86\uff0c\u4e5f\u5c31\u91ca\u7136\u4e86\u3002\u5728\u6574\u4e2a\u64b8\u4e32\u7684\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u5df1\u90fd\u6ca1\u8bf4\u51e0\u53e5\u8bdd\uff0c\u4e00\u76f4\u5728\u542c\u6c14\u6c1b\u7ec4\u548c\u8bc4\u5ba1\u56e2\u5439\u725b\u3002\u6bd5\u7adf\u6211\u548c\u4ed6\u4eec\u90fd\u4e0d\u662f\u4e00\u4e2a\u5708\u5b50\u7684\u4eba\uff0c\u6ca1\u4ec0\u4e48\u80fd\u804a\u7684\u8bdd\u9898\uff0c\u64b8\u64b8\u4e32\u559d\u559d\u9152\u505a\u4e00\u4e2a\u542c\u4f17\u4e5f\u662f\u633a\u597d\u7684\u3002\u8bb0\u5fc6\u4e2d\u751a\u81f3\u90fd\u6ca1\u6709\u548c\u8c46\u8c46\u7684\u76f4\u63a5\u5bf9\u8bdd\uff0c\u53ea\u662f\u95ee\u4e86\u8981\u4e0d\u8981\u591a\u70b9\u4e9b\u4e32\uff0c\u7136\u540e\u53c8\u52a0\u9910\u4e86\u3002\u6700\u540e\u5728\u6c14\u6c1b\u7ec4\u7684\u5e26\u52a8\u4e0b\u52a0\u4e86\u5fae\u4fe1\u597d\u53cb\uff0c\u5728\u6b22\u58f0\u7b11\u8bed\u4e2d\u7ed3\u675f\u4e86\u7b2c\u4e00\u6b21\u4f1a\u9762\u3002 \u672c\u4ee5\u4e3a\u5728\u793c\u8c8c\u7684\u9053\u522b\u4e4b\u540e\uff0c\u4e0d\u4f1a\u518d\u6709\u4efb\u4f55\u540e\u7eed\u4e86\uff0c\u56e0\u4e3a\u81ea\u5df1\u5bf9\u5bf9\u65b9\u65e0\u611f\uff0c\u5e76\u6ca1\u6709\u7ee7\u7eed\u6df1\u5165\u4e86\u89e3\u7684\u610f\u613f\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4e3b\u52a8\u518d\u53bb\u8054\u7cfb\u4e86\u3002\u5374\u5728\u7b2c\u4e8c\u5929\u665a\u4e0a\u6536\u5230\u4e86\u8c46\u8c46\u7684\u6d88\u606f\uff0c\u8fd9\u7684\u786e\u662f\u51fa\u4e4e\u6211\u7684\u610f\u6599\u7684\u3002\u4e0d\u8fc7\u6211\u7b2c\u4e8c\u5929\u5c31\u8981\u8fd4\u6df1\u4e86\uff0c\u793c\u8c8c\u6027\u7684\u804a\u4e86\u51e0\u53e5\uff0c\u4fbf\u4e92\u9053\u665a\u5b89\u4e86\u3002 \u4e5f\u8bb8\u5728\u8fd9\u65f6\uff0c\u6211\u7684\u5fc3\u6001\u4fbf\u5df2\u7ecf\u5f00\u59cb\u6709\u4e86\u53d8\u5316\u5427\u3002\u6bd5\u7adf\u4e00\u822c\u5973\u751f\u90fd\u662f\u77dc\u6301\u7684\uff0c\u89c1\u9762\u540e\u7537\u751f\u6ca1\u6709\u7ee7\u7eed\u8054\u7cfb\uff0c\u5e94\u8be5\u5c31\u5df2\u7ecf\u4f20\u8fbe\u51fa\u4e86\u5230\u6b64\u4e3a\u6b62\u7684\u4fe1\u53f7\u3002\u8fd9\u4e2a\u5973\u4eba\u5374\u5728\u8fd9\u79cd\u60c5\u51b5\u4e3b\u52a8\u7ed9\u6211\u53d1\u4e86\u6d88\u606f\uff0c\u65e0\u8bba\u662f\u51fa\u4e8e\u793c\u8c8c\u8fd8\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u90fd\u535a\u5f97\u4e86\u6211\u7684\u4e00\u70b9\u597d\u611f\uff0c\u52fe\u8d77\u4e86\u6211\u7684\u4e00\u70b9\u5174\u8da3\u3002 \u8fd9\u4e2a\u5973\u4eba\uff0c\u597d\u50cf\u6709\u70b9\u610f\u601d\u3002","title":"\u76f8\u8bc6"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/","text":"\u524d\u671f\u62c9\u626f 2021-5-9 \u7531\u6211\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u3002 \u6216\u8bb8\u662f\u51fa\u4e8e\u5bf9\u4e4b\u524d\u8c46\u8c46\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u7684\u56de\u62a5\uff0c\u4e5f\u662f\u5bf9\u6211\u59d0\u5b89\u6392\u7684\u76f8\u4eb2\u7684\u8d1f\u8d23\uff0c\u6211\u7b2c\u4e00\u6b21\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u3002 \u804a\u5929\u5185\u5bb9\u90fd\u662f\u4e00\u4e9b\u65e5\u5e38\u751f\u6d3b\uff0c\u5f53\u65f6\u6211\u5728\u770b\u300a\u65e0\u8bc1\u4e4b\u7f6a\u300b\uff0c\u8c46\u8c46\u8bf4\u4e86\u5979\u4e5f\u559c\u6b22\u60ac\u7591\u7247\u3002 \u8c46\u8c46\u4e3b\u52a8\u544a\u8bc9\u4e86\u6211\u5979\u7684\u5168\u540d\u3002 \u4e5f\u8c08\u5230\u4e86\u6211\u4eec\u4e24\u4e2a\u5708\u5b50\u7684\u76f8\u4f3c\u6027\uff0c\u5355\u8eab\u7684\u539f\u56e0\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u719f\u4eba\u4ecb\u7ecd\u662f\u4e00\u4e2a\u6bd4\u8f83\u9760\u8c31\u7684\u8131\u5355\u9014\u5f84\u3002 \u4ece\u804a\u5929\u4f53\u9a8c\u6765\u8bf4\uff0c\u6c9f\u901a\u65e0\u969c\u788d\uff0c\u8bf4\u8bdd\u6709\u56de\u5e94\uff0c\u6ca1\u6709\u4ee3\u6c9f\uff0c\u86ee\u8212\u670d\u7684\u3002\u81f3\u5c11\u5728\u8fd9\u4e2a\u89d2\u5ea6\u770b\u6765\uff0c\u6211\u5bf9\u8fd9\u4eba\u4e0d\u53cd\u611f\u3002\u6216\u8bb8\u4e24\u4e2a\u4e92\u76f8\u4e0d\u53cd\u611f\u7684\u4eba\u90fd\u6709\u53d1\u5c55\u7684\u673a\u4f1a\uff1f 2021-5-10 \u8c46\u8c46\u5f88\u65e9\u5c31\u4e3b\u52a8\u6253\u62db\u547c\u4e86\uff0c\u5176\u5b9e\u7ed9\u4e86\u6211\u4e00\u70b9\u5fc3\u7406\u4e0a\u7684\u538b\u529b\uff0c\u6211\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u9891\u7e41\u7684\u804a\u5929\u7684\u3002 \u804a\u5929\u5185\u5bb9\u4f9d\u7136\u662f\u5206\u4eab\u65e5\u5e38\u3002 \u8c46\u8c46\u7ed9\u6211\u770b\u4e86\u4e8c\u5e7c\u7684\u4f19\u98df\uff0c\u786e\u5b9e\u4e0d\u9519\uff0c\u5e38\u5e74\u5403\u5916\u5356\u7684\u4eba\u7740\u5b9e\u7fa1\u6155\u3002 \u5979\u5b66\u6821\u751a\u81f3\u8fd8\u517b\u4e86\u732a\uff0c\u5e74\u5e95\u8fd8\u6709\u732a\u8089\u5206\u7ea2\uff0c\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u798f\u5229\u3002 2022-2-2 \u5927\u5e74\u521d\u4e8c\uff0c\u5728\u65fa\u5bb6\u559d\u9152\uff0c\u5fae\u91ba\u3002 \u804a\u5230\u8c46\u8c46\u7684[[00. \u57fa\u672c\u4fe1\u606f#\u8fc7\u5f80\u60c5\u53f2|\u524d\u4efb]]\uff0c\u5fc3\u810f\u9aa4\u505c\u3002 \u9152\u9189\uff0c\u52a0\u4e0a\u5fc3\u6001\u5d29\u6e83\uff0c\u5e94\u8be5\u662f\u8fd9\u4e48\u591a\u5e74\u6765\u6700\u96be\u8fc7\u7684\u65f6\u5019\u4e86\u3002 \u51cc\u6668\u548c\u97ec\u54e5\u804a\u4e86\u4e00\u4f1a\u513f\uff0c\u60c5\u7eea\u7b97\u662f\u6709\u70b9\u7f13\u548c\u4e0b\u6765\u4e86\uff0c\u907f\u514d\u4e86\u5fc3\u585e\u5230\u5929\u4eae\u3002 \u5c3d\u7ba1\u9189\u5f97\u5389\u5bb3\uff0c\u4f9d\u7136\u5199\u4e86\u4e00\u5927\u6bb5\u6587\u5b57\u7ed9\u8c46\u8c46\uff0c\u8bb0\u5f55\u5982\u4e0b\uff1a \u5e74\u9f84\u4e0d\u4f1a\u8ba9\u4eba\u6210\u719f\uff0c\u7ecf\u5386\u624d\u4f1a\u3002\u6211\u5c31\u6015\u9047\u4e0a\u6bd4\u6211\u7ecf\u5386\u4e30\u5bcc\u7684\u4eba\u3002\u6211\u4e00\u76f4\u662f\u4e2a\u957f\u4e0d\u5927\u7684\u5c0f\u5b69\uff0c\u4f60\u4eec\u5927\u4eba\u7684\u4e16\u754c\u592a\u590d\u6742\uff0c\u6211\u5bb3\u6015\u3002 \u76f8\u4eb2\u4e5f\u8bb8\u662f\u5f62\u5f0f\u6240\u8feb\uff0c\u5f53\u7136\u4e5f\u6ca1\u62b1\u4efb\u4f55\u5e0c\u671b\uff0c\u4f46\u662f\u4f60\u7684\u70ed\u60c5\u4e00\u76f4\u8ba9\u6211\u5f88\u611f\u6fc0\uff0c\u4e5f\u5f88\u6127\u759a\uff0c\u6211\u7684\u88ab\u52a8\u5e94\u8be5\u7ed9\u4f60\u4e0d\u5c11\u9ebb\u70e6\uff0c\u800c\u4f60\u4e00\u76f4\u613f\u610f\u4fdd\u6301\u8054\u7cfb\uff0c\u975e\u5e38\u611f\u6fc0\u4f60\uff01 \u5904\u5973\u60c5\u7ed3\u7684\u95ee\u9898\uff0c\u4ece\u751f\u7406\u4e0a\u6765\u8bf4\uff0c\u4e0d\u662f\u5927\u95ee\u9898\uff0c\u5fc3\u7406\u7684\u95ee\u9898\u66f4\u5927\u3002\u6211\u53ea\u662f\u7275\u8fc7\u4f60\u7684\u624b\uff0c\u6211\u65e0\u6cd5\u7ed9\u51fa\u4efb\u4f55\u627f\u8bfa\u3002 \u4e00\u76f4\u4ee5\u6765\uff0c\u6211\u5c31\u6015\u803d\u8bef\u4f60\u7684\u65f6\u95f4\uff0c\u6bd5\u7adf\u5927\u597d\u7684\u9752\u6625\uff0c\u4e0d\u5e94\u8be5\u6d6a\u8d39\u5728\u6211\u8eab\u4e0a\u3002\u800c\u6211\u5462\uff0c\u662f\u4e2a\u4e0d\u90a3\u4e48\u575a\u5b9a\u7684\u4e0d\u5a5a\u4e3b\u4e49\u8005\uff0c\u4f60\u4e00\u5ea6\u8ba9\u6211\u770b\u5230\u4e86\u5a5a\u59fb\u751f\u6d3b\u7684\u7f8e\u597d\u3002\u6216\u8bb8\u662f\u5728\u6211\u7684\u60f3\u8c61\u4e4b\u4e2d\uff0c\u90a3\u91cc\u6216\u8bb8\u7f8e\u597d\u3002\u8fd9\u4ef6\u4e8b\u60c5\u5728\u6211\u5fc3\u91cc\u7559\u4e0b\u4e86\u4e00\u9053\u574e\u3002 \u73b0\u5728\u9152\u559d\u591a\u4e86\uff0c\u611f\u89c9\u6211\u597d\u50cf\u5728\u5a5a\u4e0e\u4e0d\u5a5a\u4e4b\u95f4\u505a\u6289\u62e9\u3002\u5a5a\uff0c\u5c31\u662f\u4f60\uff0c\u56e0\u4e3a\u6211\u4e5f\u6ca1\u6709\u5176\u4ed6\u9009\u9879\u3002\u4e0d\u5a5a\uff0c\u5c31\u662f\u6211\u4e00\u4e2a\u4eba\uff0c\u8fd9\u6837\u7684\u751f\u6d3b\u5df2\u7ecf\u8fc7\u4e86\u4e09\u5341\u5e74\uff0c\u63a5\u4e0b\u6765\u51e0\u5341\u5e74\u4e5f\u4e0d\u6015\u4e86\u3002 \u5fc3\u91cc\u8fd9\u9053\u574e\u600e\u4e48\u8fc7\uff0c\u6211\u771f\u7684\u4e0d\u77e5\u9053\uff0c\u6211\u771f\u6ca1\u6709\u8fd9\u6837\u7684\u7ecf\u9a8c\u3002\u8fd9\u662f\u5fc3\u7406\u95ee\u9898\u3002\u5927\u6982\u548c\u5728\u4ea7\u623f\u91cc\u966a\u4ea7\u7684\u7537\u4eba\u65e0\u6cd5\u52c3\u8d77\u4e00\u6837\uff0c\u9700\u8981\u758f\u5bfc\u3002\u600e\u4e48\u505a\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u3002 \u4e0d\u7ba1\u4ee5\u540e\u600e\u6837\uff0c\u6211\u4eec\u6c38\u8fdc\u90fd\u80fd\u505a\u670b\u53cb\u3002\u4f60\u4e0d\u51c6\u518d\u548c\u6211\u59d0\u8bf4\u89c1\u9762\u5c34\u5c2c\u4ec0\u4e48\u7684\u3002\u6211\u4e0d\u6015\u89c1\u9762\uff0c\u4f60\u8bf4\u7684\u8bdd\uff0c\u4e00\u4e2a\u6807\u70b9\u7b26\u53f7\u90fd\u4e0d\u4f1a\u4ece\u6211\u8fd9\u91cc\u6f0f\u51fa\u53bb\u3002\u6211\u628a\u4f60\u5f53\u670b\u53cb\uff0c\u4f60\u5c31\u6c38\u8fdc\u4e0d\u7528\u62c5\u5fc3\u4f60\u662f\u6211\u4eec\u9152\u684c\u7684\u8c08\u8d44\u3002\u6211\u4e0d\u5141\u8bb8\u4efb\u4f55\u4eba\u5728\u80cc\u540e\u8bae\u8bba\u6211\u7684\u670b\u53cb\u3002 \u867d\u7136\u559d\u9189\u4e86\uff0c\u4f46\u8fd8\u662f\u7761\u4e0d\u7740\uff0c\u6211\u5bf9\u8fd9\u4e2a\u4e16\u754c\u6709\u4e86\u65b0\u7684\u8ba4\u77e5\u3002\u6211\u8fd8\u662f\u8fc7\u4e8e\u5355\u7eaf\u8001\u5b9e\u3002\u95ee\u9898\u4e5f\u4e0d\u5728\u4f60\uff0c\u8fd9\u4e2a\u4e16\u754c\u4e00\u76f4\u5c31\u662f\u8fd9\u4e48\u8fd0\u884c\u7684\u3002\u662f\u6211\u5728\u8111\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u4e0d\u73b0\u5b9e\u7684\u4e16\u754c\u3002 \u5df2\u7ecf\u6ca1\u6709\u903b\u8f91\u4e86\uff0c\u8fd8\u662f\u60f3\u8bb0\u4e0b\u73b0\u5728\u7684\u60f3\u6cd5\uff0c\u5e0c\u671b\u5929\u4eae\u4e4b\u540e\u7684\u6211\u66f4\u52a0\u6210\u719f\u3002\u4e0d\u5a5a\u4e3b\u4e49\uff0c\u662f\u5bf9\u73b0\u5b9e\u7684\u53cd\u6297\uff0c\u90a3\u6211\u81ea\u5df1\u7684\u6297\u4e89\u5982\u4f55\u8fdb\u884c\uff0c\u81ea\u5df1\u90fd\u6ca1\u641e\u6e05\u695a\u3002\u53ea\u662f\u4e0d\u60f3\u548c\u522b\u4eba\u4e00\u6837\uff0c\u5230\u4ec0\u4e48\u5e74\u7eaa\u505a\u4ec0\u4e48\u4e8b\u3002\u6211\u60f3\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4eba\uff0c\u6709\u81ea\u5df1\u7684\u601d\u8003\uff0c\u6709\u601d\u60f3\u7684\u4eba\u3002 \u5a5a\u4e0e\u4e0d\u5a5a\uff0c\u53ea\u662f\u672a\u6765\u51e0\u5341\u5e74\u7684\u8def\u4e0d\u4e00\u6837\u3002\u5a5a\u5e26\u6765\u7684\u538b\u529b\uff0c\u548c\u5e26\u6765\u7684\u5e78\u798f\u611f\u662f\u5426\u7b49\u4ef7\uff0c\u65e0\u4ece\u8003\u5bdf\u3002\u4f46\u662f\u4e0d\u5a5a\uff0c\u5df2\u7ecf\u6709\u4e86\u8fc7\u5f80\u7684\u7ecf\u9a8c\uff0c\u4e0d\u9700\u8981\u8fdb\u5165\u5168\u65b0\u7684\u4e16\u754c\u53bb\u63a2\u7d22\u3002\u4eba\u7c7b\u6700\u5927\u7684\u6050\u60e7\uff0c\u5c31\u662f\u672a\u77e5\u3002\u6216\u8bb8\u6211\u5c31\u8be5\u505a\u4e00\u4e2a\u4e00\u7ebf\u57ce\u5e02\u7684\u87ba\u4e1d\u9489\uff0c\u71c3\u70e7\u5b8c\u6211\u7684\u4ef7\u503c\uff0c\u7136\u540e\u9ed8\u9ed8\u6d88\u5931\u3002\u5e76\u6ca1\u6709\u4eba\u5728\u4e4e\u6211\u5a5a\u4e0e\u4e0d\u5a5a\uff0c\u8fd9\u4e2a\u4e16\u754c\u53ea\u9700\u8981\u66f4\u591a\u7684\u5e74\u8f7b\u4eba\u5949\u732e\u4ed6\u4eec\u7684\u9752\u6625\uff0c\u6216\u8bb8\u8fd9\u5c31\u662f\u5f53\u4eca\u65f6\u4ee3\u5a5a\u59fb\u7684\u610f\u4e49\uff1f \u771f\u7684\u9189\u4e86\u3002 \u751a\u81f3\u6015\u548c\u4f60\u8054\u7cfb\uff0c\u4ee5\u524d\u4f60\u8bb2\u60f3\u6211\uff0c\u6211\u6015\u8fdb\u7a0b\u592a\u5feb\uff1b\u73b0\u5728\u4f60\u8bb2\u60f3\u6211\uff0c\u6211\u6015\u662f\u4f8b\u884c\u516c\u4e8b\u3002\u4e0d\u6562\u63e3\u6d4b\uff0c\u4e5f\u4e0d\u613f\u63e3\u6d4b\u3002\u6211\u5e0c\u671b\u6211\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u82b1\u5728\u6211\u773c\u524d\u7684\uff0c\u6211\u7231\u7684\uff0c\u5177\u4f53\u7684\u4eba\u8eab\u4e0a\u3002\u4f60\u4e5f\u4e00\u6837\u3002\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u5f88\u5b9d\u8d35\u7684\u4e1c\u897f\u3002\u5176\u4ed6\u5c31\u7b97\u5929\u584c\u4e86\uff0c\u8fd8\u6709\u9ad8\u4e2a\u5b50\uff0c\u8f6e\u4e0d\u5230\u6211\u4eec\u64cd\u5fc3\u3002 \u4e00\u5982\u65e2\u5f80\uff0c\u5e0c\u671b\u4f60\u6709\u4e2a\u597d\u68a6\u3002 \u4e0d\u8bf4\u559c\u6b22\u4e0d\u559c\u6b22\uff0c\u7231\u4e0d\u7231\uff0c\u6211\u60f3\u505a\u4e2a\u7ec5\u58eb\uff0c\u6211\u613f\u505a\u4e2a\u7ec5\u58eb\u3002\u6211\u4e5f\u77e5\u9053\u8fd9\u6837\u7684\u60f3\u6cd5\u5f88\u5e7c\u7a1a\u3002 \u5904\u5973\u60c5\u7ed3\uff0c\u5728\u7537\u65b9\u662f\u5904\u7537\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u52a0\u7a81\u51fa\u3002\u751f\u7406\u5230\u5fc3\u7406\u7684\u9690\u79c1\uff0c\u90fd\u522b\u4eba\u5f00\u653e\u4e86\uff0c\u7ed9\u81ea\u5df1\u7684\u7231\u4eba\u7559\u4e0b\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u95ee\u9898\u6216\u8bb8\u9700\u8981\u8ba8\u8bba\uff0c\u6211\u7684\u60f3\u6cd5\u4e0d\u4e00\u5b9a\u662f\u5bf9\u7684\u3002 \u4e0d\u8c08\u8fc7\u5f80\uff0c\u6211\u4eec\u9700\u8981\u5411\u524d\u770b\u3002\u6211\u4eec\u662f\u4e0d\u662f\u771f\u7684\u9700\u8981\u548c\u522b\u4eba\u4e00\u8d77\u8d70\uff0c\u80a9\u5e76\u80a9\u7684\u4eba\u8be5\u5982\u4f55\u6311\u9009\uff0c\u6211\u4e5f\u6ca1\u6709\u60f3\u6e05\u695a\u3002 \u6211\u90fd\u5199\u4e86\u70b9\u4ec0\u4e48\uff1f\u90fd 17 \u4e86\u3002\u6beb\u65e0\u903b\u8f91\u3002\u4e0d\u770b\u4e5f\u7f62\u3002\u5168\u662f\u5c41\u8bdd\u3002\u4f9d\u7136\u795d\u4f60\u597d\u68a6\u3002 \u4f46\u662f\u6211\u7761\u4e0d\u7740\uff0c\u6216\u8005\u8bf4\u4e0d\u613f\u610f\u7761\u3002\u5f88\u665a\u4e86\uff0c\u627e\u4e2a\u4eba\u804a\u5929\uff0c\u5e0c\u671b TA \u80fd\u5e2e\u5e2e\u6211\uff0c\u518d\u6b21\u597d\u68a6\u3002 2022-2-4 \u5927\u5e74\u521d\u56db\u8981\u5230\u8c46\u8c46\u5bb6\u62dc\u5e74\uff0c\u51fa\u53d1\u524d\u4e00\u665a\u6ca1\u7761\u7740\uff0c\u51cc\u6668\u4e09\u70b9\u591a\u8fd8\u7ed9\u8c46\u8c46\u53d1\u4e86\u4e00\u6bb5\u6587\u5b57\uff0c\u6458\u6284\u5982\u4e0b\uff1a \u5173\u4e8e\u4f60\u7684\u8fc7\u53bb\uff0c\u6211\u5176\u5b9e\u65e0\u6743\u8bc4\u5224\uff0c\u6bd5\u7adf\u5f53\u65f6\u6211\u4eec\u5e76\u4e0d\u8ba4\u8bc6\u3002\u524d\u4e00\u665a\u6211\u8bf4\u4e86\u4e0d\u5c11\u8fc7\u6fc0\u7684\u8bdd\uff0c\u6211\u5411\u4f60\u9053\u6b49\u3002\u56e0\u4e3a\u6211\u5f53\u65f6\u4ee3\u5165\u7684\u8eab\u4efd\u662f\u4f60\u7684\u73b0\u7537\u53cb\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u5934\u8111\u53d1\u70ed\u4e86\u3002\u90a3\u65f6\u5df2\u7ecf\u9152\u8fc7\u4e09\u5de1\uff0c\u6211\u624d\u521a\u521a\u5411\u5c0f\u4f19\u4f34\u4eec\u4ecb\u7ecd\u6211\u5168\u5bb6\u90fd\u5b9d\u8d1d\u7684\u672a\u6765\u5ab3\u5987\uff0c\u5f97\u610f\u7684\u7b11\u5bb9\u8fd8\u5728\u8138\u4e0a\uff0c\u7acb\u9a6c\u7ed9\u4e86\u6211\u4e00\u4e2a\u66b4\u51fb\u3002\u4eba\u751f\u554a\uff0c\u771f\u4ed6\u5988\u64cd\u86cb\u3002\u4f46\u662f\u6211\u63a9\u9970\u5f97\u5f88\u597d\uff0c\u6ca1\u6709\u53d1\u73b0\u6211\u6709\u54ea\u91cc\u4e0d\u5bf9\u52b2\uff0c\u4f9d\u7136\u966a\u7740\u5c0f\u4f19\u4f34\u4eec\u548c\u957f\u8f88\u63a8\u676f\u6362\u76cf\uff0c\u6c14\u6c1b\u706b\u70ed\u3002\u4f46\u662f\u5fc3\u91cc\u771f\u7684\u597d\u51b7\u3002\u8fd9\u4e5f\u7b97\u662f\u6211\u7a0d\u5fae\u6210\u719f\u4e00\u70b9\u7684\u5730\u65b9\uff0c\u80fd\u81ea\u5df1\u6d88\u5316\u4e0d\u826f\u60c5\u7eea\uff0c\u4e0d\u4f1a\u501f\u7740\u9152\u52b2\u653e\u7eb5\u81ea\u5df1\u5185\u5fc3\u7684\u9634\u6697\u3002 \u8fd8\u6709\u4e00\u4ef6\u4e8b\u9700\u8981\u5411\u4f60\u9053\u6b49\uff0c\u524d\u4e00\u665a\u8bf4\u4e86\u4e0d\u4f1a\u900f\u9732\u51fa\u53bb\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u548c\u6211\u59d0\u8bf4\u4e86\u3002\u5979\u662f\u6211\u53ef\u4ee5\u7edd\u5bf9\u4fe1\u4efb\u7684\u4eba\uff0c\u4e5f\u4e0d\u4f1a\u501f\u7740\u8fd9\u4e2a\u4e8b\u60c5\u5bf9\u4f60\u6709\u4ec0\u4e48\u7279\u522b\u7684\u770b\u6cd5\u3002\u6211\u7684\u8bf4\u6cd5\u662f\u201c\u4f60\u88ab\u6e23\u7537\u9a97\u8fc7\u201d\u3002\u6211\u4e24\u4e2a\u59d0\u90fd\u5728\u529d\u6211\uff0c\u8981\u8de8\u8fc7\u8fd9\u9053\u574e\u3002\u5979\u4eec\u90fd\u662f\u8fc7\u6765\u4eba\uff0c\u89c9\u5f97\u4f60\u8fd9\u6837\u7684\u7ecf\u5386\u751a\u81f3\u90fd\u4e0d\u503c\u4e00\u63d0\u3002\u5f53\u6211\u8df3\u8131\u51fa\u6765\uff0c\u4e0d\u4ee5\u7b2c\u4e00\u4eba\u79f0\u4ee3\u5165\uff0c\u4f3c\u4e4e\u4e5f\u6ca1\u6709\u60f3\u8c61\u7684\u90a3\u4e48\u4e25\u91cd\u3002\u548c\u4f60\u5f53\u521d\u65e2\u8822\u53c8\u52c7\u5730\u8ffd\u5bfb\u4f60\u60f3\u8981\u7684\u7231\u60c5\u4e00\u6837\uff0c\u6211\u4e5f\u6709\u5bf9\u7f8e\u597d\u7231\u60c5\u7684\u61a7\u61ac\uff0c\u5e0c\u671b\u80fd\u9047\u5230\u548c\u81ea\u5df1\u4e00\u6837\u7684\u4eba\u3002\u5904\u5973\u60c5\u7ed3\uff0c\u5bf9\u5904\u7537\u6765\u8bf4\uff0c\u66f4\u591a\u7684\u662f\u4e00\u79cd\u7b49\u4ef7\u4ea4\u6362\u5427\uff1f\u4f5c\u4e3a\u4e00\u4e2a\u5904\u7537\u6765\u8bf4\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u4f60\u7684\u5206\u6570\u76f4\u63a5\u6253\u4e86\u5f88\u5927\u7684\u6298\u6263\u3002\u4f46\u662f\u4f60\u662f\u4e00\u4e2a\u62e5\u6709\u72ec\u7acb\u4eba\u683c\u7684\uff0c\u6d3b\u751f\u751f\u7684\u4e00\u4e2a\u4eba\uff0c\u6211\u6709\u4ec0\u4e48\u8d44\u683c\u7ed9\u4f60\u6253\u5206\uff1f\u4e0d\u7ba1\u73b0\u5728\u4ee5\u4ec0\u4e48\u8eab\u4efd\u6765\u8bf4\uff0c\u6211\u90fd\u5e0c\u671b\u4f60\u4ee5\u540e\u4f9d\u7136\u5f88\u52c7\uff0c\u4f46\u662f\u8bf7\u4e0d\u8981\u90a3\u4e48\u8822\u4e86\u3002\u987a\u4fbf\u6084\u54aa\u54aa\u95ee\u4e00\u53e5\uff0c\u4f60\u662f\u4e0d\u662f\u89c9\u5f97\u6211\u4f1a\u53bb\u548c\u4f60\u7236\u6bcd\u8c08\u8fd9\u4e2a\u4e8b\uff1f\u6211\u505a\u4e0d\u51fa\u8fd9\u79cd\u4e8b\u3002 \u4e4b\u524d\u6211\u4eec\u5bf9\u5f7c\u6b64\u7684\u4e86\u89e3\u90fd\u4e0d\u591f\uff0c\u4e5f\u8bb8\u6211\u4eec\u90fd\u662f\u5728\u548c\u6211\u4eec\u60f3\u8c61\u4e2d\u7684\u5bf9\u65b9\u4ea4\u5f80\u3002\u6b63\u597d\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u4e92\u76f8\u8ba4\u8bc6\u4e00\u4e0b\uff0c\u8ba4\u771f\u5730\uff0c\u771f\u8bda\u5730\u8c08\u8c08\u8bdd\u3002\u6211\u60f3\u4e86\u89e3\u4f60\u7684\u8fc7\u53bb\u3002\u4ece\u5fc3\u7406\u5c42\u9762\u4e0a\uff0c\u5973\u6027\u662f\u6bd4\u7537\u6027\u6210\u719f\u7684\u66f4\u65e9\uff0c\u5973\u6027\u5f00\u59cb\u8ffd\u5bfb\u7231\u60c5\u7684\u5e74\u9f84\u662f\u76f8\u5bf9\u66f4\u5c0f\u3002\u6211\u8bf4\u8fc7\uff0c\u6211\u6015\u9047\u4e0a\u7ecf\u5386\u8fc7\u4e8e\u4e30\u5bcc\u7684\u4eba\uff0c\u6211\u5bb3\u6015\u9ebb\u70e6\u3002\u4f60\u53ef\u4ee5\u5728\u6211\u4eec\u89c1\u9762\u4e4b\u524d\u8003\u8651\u8981\u4e0d\u8981\u8c08\u3002 \u672c\u6765\u5e94\u8be5\u8fd8\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u60f3\u60f3\u8fd8\u662f\u5148\u8fd9\u6837\u5427\u3002 \u8bf4\u7684\u633a\u597d\uff0c\u8ba4\u771f\u5730\u8c08\u8c08\uff1f\u4e00\u89c1\u9762\u5c31\u6ca1\u7ef7\u4f4f\uff0c\u8111\u5b50\u4e00\u7247\u7a7a\u767d\uff0c\u8fd9\u4e2a\u5973\u4eba\u662f\u4e0d\u662f\u7ed9\u6211\u4e0b\u86ca\u4e86\uff1f 2022-2-6 \u521d\u516d\u51cc\u6668\uff0c\u53c8\u7ed9\u8c46\u8c46\u5199\u4e86\u4e00\u4e9b\u5e9f\u8bdd\uff0c\u8bb0\u5f55\u5982\u4e0b\uff1a \u53c8\u5230\u4e86\u6df1\u591c\u590d\u76d8\u65f6\u95f4\u3002 \u4eca\u5929\u4f60\u80fd\u51fa\u6765\u89c1\u9762\uff0c\u53c8\u4e3a\u6211\u4eec\u5173\u7cfb\u7684\u53d1\u5c55\u52a9\u63a8\u4e86\u4e00\u5927\u6b65\u3002\u524d\u4e00\u665a\u4e00\u76f4\u5728\u60f3\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u518d\u89c1\uff0c\u4e00\u65e9\u4f60\u8bf4\u4e89\u53d6\u6765\u89c1\u9762\uff0c\u6211\u5fc3\u91cc\u5f88\u671f\u5f85\uff0c\u4f46\u4e5f\u8fd8\u5728\u8d4c\u6c14\u3002\u5bb6\u91cc\u4eba\u90fd\u53eb\u6211\u63a5\u4f60\u56de\u5bb6\u5403\u996d\uff0c\u6211\u53ea\u60f3\u548c\u4f60\u5728\u5916\u8fb9\u81ea\u5df1\u8c08\u8c08\uff0c\u5c31\u4e0d\u8981\u89c1\u5bb6\u4eba\u4e86\u3002\u88ab\u5bb6\u91cc\u957f\u8f88\u5404\u79cd\u6279\u8bc4\uff0c\u6211\u90fd\u7ed9\u4e94\u59d1\u6446\u81ed\u8138\u4e86\u3002\u5f53\u7136\u6700\u540e\u4e5f\u662f\u542c\u8bdd\u5e26\u4f60\u56de\u5bb6\u4e86\u3002\u6211\u4eec\u8fd9\u8fb9\u4e00\u5806\u4eba\u65e9\u996d\u90fd\u6ca1\u5403\uff0c\u4e3a\u7b49\u4f60\u76f4\u5230\u4e24\u70b9\u624d\u5f00\u53d1\uff0c\u8fd9\u4e5f\u662f\u4e00\u5927\u5bb6\u5b50\u4eba\u4e3a\u6211\u505a\u51fa\u52aa\u529b\u4e86\u3002\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u6309\u6211\u8fd9\u94a2\u94c1\u76f4\u7537\u7684\u6027\u683c\uff0c\u6050\u6015\u4eca\u5929\u80fd\u628a\u4e8b\u60c5\u641e\u7838\u3002\u5728\u6cb3\u8fb9\u7684\u65f6\u5019\uff0c\u6211\u8c08\u5230\u5728\u5916\u8fb9\u4e00\u4e2a\u4eba\u72ec\u5c45\u7684\u751f\u6d3b\u72b6\u6001\uff0c\u4f60\u95ee\u6211\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u6ca1\u6562\u56de\u7b54\u3002\u5f53\u65f6\u6211\u4eec\u7684\u611f\u60c5\u5728\u6211\u773c\u91cc\u8fd8\u662f\u5f88\u8106\u5f31\uff0c\u6211\u53ef\u80fd\u66f4\u559c\u6b22\u4e00\u4e2a\u4eba\u7684\u72b6\u6001\uff0c\u52a0\u4e0a\u5f02\u5730\uff0c\u800c\u653e\u5f03\u8fd9\u6bb5\u611f\u60c5\u3002\u8fd8\u662f\u8001\u6bdb\u75c5\uff0c\u6211\u4e0d\u591f\u52c7\u6562\u3002\u4e0d\u8fc7\u73b0\u5728\u5df2\u7ecf\u6ca1\u6709\u4e86\u8fd9\u6837\u7684\u60f3\u6cd5\u3002\u5f53\u65f6\u5728\u6d69\u54e5\u7684\u8f66\u4e0a\uff0c\u4f4e\u5934\u4e00\u773c\u77a5\u89c1\u4f60\u62ac\u5934\u770b\u6211\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u8be5\u63a5\u543b\u4e86\u3002\u6211\u6ca1\u90a3\u4e48\u8822\uff0c\u6211\u8fd8\u662f\u61c2\u7684\u3002\u4f46\u662f\u7406\u6027\u8fd8\u5728\uff0c\u6211\u5c45\u7136\u8fd8\u5728\u8003\u8651\u73af\u5883\u5408\u4e0d\u5408\u9002\uff0c\u81ea\u5df1\u8981\u4e0d\u8981\u575a\u6301\u8fd9\u6bb5\u611f\u60c5\u3002\u76f4\u5230\u4f60\u4eb2\u4e86\u6211\u7684\u8138\uff0c\u6211\u5fc3\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u4f60\u4e00\u4e2a\u5973\u5b69\u5b50\u5df2\u7ecf\u5411\u6211\u8d70\u4e86\u90a3\u4e48\u591a\u6b65\uff0c\u6211\u8fd8\u5728\u539f\u5730\u754f\u754f\u7f29\u7f29\uff0c\u5c31\u662f\u5728\u8f9c\u8d1f\u4f60\u7684\u52aa\u529b\u3002\u6211\u662f\u4e2a\u4eba\uff0c\u4e0d\u662f\u673a\u5668\u4eba\uff0c\u6709\u7684\u65f6\u5019\u5c31\u8be5\u8ba9\u8377\u5c14\u8499\u652f\u914d\u81ea\u5df1\u3002\u8fd9\u624d\u6709\u4e86\u6211\u751c\u871c\u7684[[002. First Kiss|\u521d\u543b]]\u3002\u597d\u751c\u554a\uff01 \u73b0\u5728\u60f3\u60f3\uff0c\u6211\u771f\u7684\u662f\u4e2a\u50bb\u903c\uff0c\u5f53\u65f6\u5c31\u8be5\u76f4\u63a5\u62b1\u7740\u4f60\u5543\u5230\u7a92\u606f\u3002 \u795d\u597d\u68a6\u3002 \u60f3\u4f60\u3002","title":"\u524d\u671f\u62c9\u626f"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#_1","text":"","title":"\u524d\u671f\u62c9\u626f"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#2021-5-9","text":"\u7531\u6211\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u3002 \u6216\u8bb8\u662f\u51fa\u4e8e\u5bf9\u4e4b\u524d\u8c46\u8c46\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u7684\u56de\u62a5\uff0c\u4e5f\u662f\u5bf9\u6211\u59d0\u5b89\u6392\u7684\u76f8\u4eb2\u7684\u8d1f\u8d23\uff0c\u6211\u7b2c\u4e00\u6b21\u4e3b\u52a8\u53d1\u8d77\u5bf9\u8bdd\u3002 \u804a\u5929\u5185\u5bb9\u90fd\u662f\u4e00\u4e9b\u65e5\u5e38\u751f\u6d3b\uff0c\u5f53\u65f6\u6211\u5728\u770b\u300a\u65e0\u8bc1\u4e4b\u7f6a\u300b\uff0c\u8c46\u8c46\u8bf4\u4e86\u5979\u4e5f\u559c\u6b22\u60ac\u7591\u7247\u3002 \u8c46\u8c46\u4e3b\u52a8\u544a\u8bc9\u4e86\u6211\u5979\u7684\u5168\u540d\u3002 \u4e5f\u8c08\u5230\u4e86\u6211\u4eec\u4e24\u4e2a\u5708\u5b50\u7684\u76f8\u4f3c\u6027\uff0c\u5355\u8eab\u7684\u539f\u56e0\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u719f\u4eba\u4ecb\u7ecd\u662f\u4e00\u4e2a\u6bd4\u8f83\u9760\u8c31\u7684\u8131\u5355\u9014\u5f84\u3002 \u4ece\u804a\u5929\u4f53\u9a8c\u6765\u8bf4\uff0c\u6c9f\u901a\u65e0\u969c\u788d\uff0c\u8bf4\u8bdd\u6709\u56de\u5e94\uff0c\u6ca1\u6709\u4ee3\u6c9f\uff0c\u86ee\u8212\u670d\u7684\u3002\u81f3\u5c11\u5728\u8fd9\u4e2a\u89d2\u5ea6\u770b\u6765\uff0c\u6211\u5bf9\u8fd9\u4eba\u4e0d\u53cd\u611f\u3002\u6216\u8bb8\u4e24\u4e2a\u4e92\u76f8\u4e0d\u53cd\u611f\u7684\u4eba\u90fd\u6709\u53d1\u5c55\u7684\u673a\u4f1a\uff1f","title":"2021-5-9"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#2021-5-10","text":"\u8c46\u8c46\u5f88\u65e9\u5c31\u4e3b\u52a8\u6253\u62db\u547c\u4e86\uff0c\u5176\u5b9e\u7ed9\u4e86\u6211\u4e00\u70b9\u5fc3\u7406\u4e0a\u7684\u538b\u529b\uff0c\u6211\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u9891\u7e41\u7684\u804a\u5929\u7684\u3002 \u804a\u5929\u5185\u5bb9\u4f9d\u7136\u662f\u5206\u4eab\u65e5\u5e38\u3002 \u8c46\u8c46\u7ed9\u6211\u770b\u4e86\u4e8c\u5e7c\u7684\u4f19\u98df\uff0c\u786e\u5b9e\u4e0d\u9519\uff0c\u5e38\u5e74\u5403\u5916\u5356\u7684\u4eba\u7740\u5b9e\u7fa1\u6155\u3002 \u5979\u5b66\u6821\u751a\u81f3\u8fd8\u517b\u4e86\u732a\uff0c\u5e74\u5e95\u8fd8\u6709\u732a\u8089\u5206\u7ea2\uff0c\u4e5f\u662f\u4e2a\u4e0d\u9519\u7684\u798f\u5229\u3002","title":"2021-5-10"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#2022-2-2","text":"\u5927\u5e74\u521d\u4e8c\uff0c\u5728\u65fa\u5bb6\u559d\u9152\uff0c\u5fae\u91ba\u3002 \u804a\u5230\u8c46\u8c46\u7684[[00. \u57fa\u672c\u4fe1\u606f#\u8fc7\u5f80\u60c5\u53f2|\u524d\u4efb]]\uff0c\u5fc3\u810f\u9aa4\u505c\u3002 \u9152\u9189\uff0c\u52a0\u4e0a\u5fc3\u6001\u5d29\u6e83\uff0c\u5e94\u8be5\u662f\u8fd9\u4e48\u591a\u5e74\u6765\u6700\u96be\u8fc7\u7684\u65f6\u5019\u4e86\u3002 \u51cc\u6668\u548c\u97ec\u54e5\u804a\u4e86\u4e00\u4f1a\u513f\uff0c\u60c5\u7eea\u7b97\u662f\u6709\u70b9\u7f13\u548c\u4e0b\u6765\u4e86\uff0c\u907f\u514d\u4e86\u5fc3\u585e\u5230\u5929\u4eae\u3002 \u5c3d\u7ba1\u9189\u5f97\u5389\u5bb3\uff0c\u4f9d\u7136\u5199\u4e86\u4e00\u5927\u6bb5\u6587\u5b57\u7ed9\u8c46\u8c46\uff0c\u8bb0\u5f55\u5982\u4e0b\uff1a \u5e74\u9f84\u4e0d\u4f1a\u8ba9\u4eba\u6210\u719f\uff0c\u7ecf\u5386\u624d\u4f1a\u3002\u6211\u5c31\u6015\u9047\u4e0a\u6bd4\u6211\u7ecf\u5386\u4e30\u5bcc\u7684\u4eba\u3002\u6211\u4e00\u76f4\u662f\u4e2a\u957f\u4e0d\u5927\u7684\u5c0f\u5b69\uff0c\u4f60\u4eec\u5927\u4eba\u7684\u4e16\u754c\u592a\u590d\u6742\uff0c\u6211\u5bb3\u6015\u3002 \u76f8\u4eb2\u4e5f\u8bb8\u662f\u5f62\u5f0f\u6240\u8feb\uff0c\u5f53\u7136\u4e5f\u6ca1\u62b1\u4efb\u4f55\u5e0c\u671b\uff0c\u4f46\u662f\u4f60\u7684\u70ed\u60c5\u4e00\u76f4\u8ba9\u6211\u5f88\u611f\u6fc0\uff0c\u4e5f\u5f88\u6127\u759a\uff0c\u6211\u7684\u88ab\u52a8\u5e94\u8be5\u7ed9\u4f60\u4e0d\u5c11\u9ebb\u70e6\uff0c\u800c\u4f60\u4e00\u76f4\u613f\u610f\u4fdd\u6301\u8054\u7cfb\uff0c\u975e\u5e38\u611f\u6fc0\u4f60\uff01 \u5904\u5973\u60c5\u7ed3\u7684\u95ee\u9898\uff0c\u4ece\u751f\u7406\u4e0a\u6765\u8bf4\uff0c\u4e0d\u662f\u5927\u95ee\u9898\uff0c\u5fc3\u7406\u7684\u95ee\u9898\u66f4\u5927\u3002\u6211\u53ea\u662f\u7275\u8fc7\u4f60\u7684\u624b\uff0c\u6211\u65e0\u6cd5\u7ed9\u51fa\u4efb\u4f55\u627f\u8bfa\u3002 \u4e00\u76f4\u4ee5\u6765\uff0c\u6211\u5c31\u6015\u803d\u8bef\u4f60\u7684\u65f6\u95f4\uff0c\u6bd5\u7adf\u5927\u597d\u7684\u9752\u6625\uff0c\u4e0d\u5e94\u8be5\u6d6a\u8d39\u5728\u6211\u8eab\u4e0a\u3002\u800c\u6211\u5462\uff0c\u662f\u4e2a\u4e0d\u90a3\u4e48\u575a\u5b9a\u7684\u4e0d\u5a5a\u4e3b\u4e49\u8005\uff0c\u4f60\u4e00\u5ea6\u8ba9\u6211\u770b\u5230\u4e86\u5a5a\u59fb\u751f\u6d3b\u7684\u7f8e\u597d\u3002\u6216\u8bb8\u662f\u5728\u6211\u7684\u60f3\u8c61\u4e4b\u4e2d\uff0c\u90a3\u91cc\u6216\u8bb8\u7f8e\u597d\u3002\u8fd9\u4ef6\u4e8b\u60c5\u5728\u6211\u5fc3\u91cc\u7559\u4e0b\u4e86\u4e00\u9053\u574e\u3002 \u73b0\u5728\u9152\u559d\u591a\u4e86\uff0c\u611f\u89c9\u6211\u597d\u50cf\u5728\u5a5a\u4e0e\u4e0d\u5a5a\u4e4b\u95f4\u505a\u6289\u62e9\u3002\u5a5a\uff0c\u5c31\u662f\u4f60\uff0c\u56e0\u4e3a\u6211\u4e5f\u6ca1\u6709\u5176\u4ed6\u9009\u9879\u3002\u4e0d\u5a5a\uff0c\u5c31\u662f\u6211\u4e00\u4e2a\u4eba\uff0c\u8fd9\u6837\u7684\u751f\u6d3b\u5df2\u7ecf\u8fc7\u4e86\u4e09\u5341\u5e74\uff0c\u63a5\u4e0b\u6765\u51e0\u5341\u5e74\u4e5f\u4e0d\u6015\u4e86\u3002 \u5fc3\u91cc\u8fd9\u9053\u574e\u600e\u4e48\u8fc7\uff0c\u6211\u771f\u7684\u4e0d\u77e5\u9053\uff0c\u6211\u771f\u6ca1\u6709\u8fd9\u6837\u7684\u7ecf\u9a8c\u3002\u8fd9\u662f\u5fc3\u7406\u95ee\u9898\u3002\u5927\u6982\u548c\u5728\u4ea7\u623f\u91cc\u966a\u4ea7\u7684\u7537\u4eba\u65e0\u6cd5\u52c3\u8d77\u4e00\u6837\uff0c\u9700\u8981\u758f\u5bfc\u3002\u600e\u4e48\u505a\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u3002 \u4e0d\u7ba1\u4ee5\u540e\u600e\u6837\uff0c\u6211\u4eec\u6c38\u8fdc\u90fd\u80fd\u505a\u670b\u53cb\u3002\u4f60\u4e0d\u51c6\u518d\u548c\u6211\u59d0\u8bf4\u89c1\u9762\u5c34\u5c2c\u4ec0\u4e48\u7684\u3002\u6211\u4e0d\u6015\u89c1\u9762\uff0c\u4f60\u8bf4\u7684\u8bdd\uff0c\u4e00\u4e2a\u6807\u70b9\u7b26\u53f7\u90fd\u4e0d\u4f1a\u4ece\u6211\u8fd9\u91cc\u6f0f\u51fa\u53bb\u3002\u6211\u628a\u4f60\u5f53\u670b\u53cb\uff0c\u4f60\u5c31\u6c38\u8fdc\u4e0d\u7528\u62c5\u5fc3\u4f60\u662f\u6211\u4eec\u9152\u684c\u7684\u8c08\u8d44\u3002\u6211\u4e0d\u5141\u8bb8\u4efb\u4f55\u4eba\u5728\u80cc\u540e\u8bae\u8bba\u6211\u7684\u670b\u53cb\u3002 \u867d\u7136\u559d\u9189\u4e86\uff0c\u4f46\u8fd8\u662f\u7761\u4e0d\u7740\uff0c\u6211\u5bf9\u8fd9\u4e2a\u4e16\u754c\u6709\u4e86\u65b0\u7684\u8ba4\u77e5\u3002\u6211\u8fd8\u662f\u8fc7\u4e8e\u5355\u7eaf\u8001\u5b9e\u3002\u95ee\u9898\u4e5f\u4e0d\u5728\u4f60\uff0c\u8fd9\u4e2a\u4e16\u754c\u4e00\u76f4\u5c31\u662f\u8fd9\u4e48\u8fd0\u884c\u7684\u3002\u662f\u6211\u5728\u8111\u91cc\u6784\u5efa\u4e86\u4e00\u4e2a\u4e0d\u73b0\u5b9e\u7684\u4e16\u754c\u3002 \u5df2\u7ecf\u6ca1\u6709\u903b\u8f91\u4e86\uff0c\u8fd8\u662f\u60f3\u8bb0\u4e0b\u73b0\u5728\u7684\u60f3\u6cd5\uff0c\u5e0c\u671b\u5929\u4eae\u4e4b\u540e\u7684\u6211\u66f4\u52a0\u6210\u719f\u3002\u4e0d\u5a5a\u4e3b\u4e49\uff0c\u662f\u5bf9\u73b0\u5b9e\u7684\u53cd\u6297\uff0c\u90a3\u6211\u81ea\u5df1\u7684\u6297\u4e89\u5982\u4f55\u8fdb\u884c\uff0c\u81ea\u5df1\u90fd\u6ca1\u641e\u6e05\u695a\u3002\u53ea\u662f\u4e0d\u60f3\u548c\u522b\u4eba\u4e00\u6837\uff0c\u5230\u4ec0\u4e48\u5e74\u7eaa\u505a\u4ec0\u4e48\u4e8b\u3002\u6211\u60f3\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4eba\uff0c\u6709\u81ea\u5df1\u7684\u601d\u8003\uff0c\u6709\u601d\u60f3\u7684\u4eba\u3002 \u5a5a\u4e0e\u4e0d\u5a5a\uff0c\u53ea\u662f\u672a\u6765\u51e0\u5341\u5e74\u7684\u8def\u4e0d\u4e00\u6837\u3002\u5a5a\u5e26\u6765\u7684\u538b\u529b\uff0c\u548c\u5e26\u6765\u7684\u5e78\u798f\u611f\u662f\u5426\u7b49\u4ef7\uff0c\u65e0\u4ece\u8003\u5bdf\u3002\u4f46\u662f\u4e0d\u5a5a\uff0c\u5df2\u7ecf\u6709\u4e86\u8fc7\u5f80\u7684\u7ecf\u9a8c\uff0c\u4e0d\u9700\u8981\u8fdb\u5165\u5168\u65b0\u7684\u4e16\u754c\u53bb\u63a2\u7d22\u3002\u4eba\u7c7b\u6700\u5927\u7684\u6050\u60e7\uff0c\u5c31\u662f\u672a\u77e5\u3002\u6216\u8bb8\u6211\u5c31\u8be5\u505a\u4e00\u4e2a\u4e00\u7ebf\u57ce\u5e02\u7684\u87ba\u4e1d\u9489\uff0c\u71c3\u70e7\u5b8c\u6211\u7684\u4ef7\u503c\uff0c\u7136\u540e\u9ed8\u9ed8\u6d88\u5931\u3002\u5e76\u6ca1\u6709\u4eba\u5728\u4e4e\u6211\u5a5a\u4e0e\u4e0d\u5a5a\uff0c\u8fd9\u4e2a\u4e16\u754c\u53ea\u9700\u8981\u66f4\u591a\u7684\u5e74\u8f7b\u4eba\u5949\u732e\u4ed6\u4eec\u7684\u9752\u6625\uff0c\u6216\u8bb8\u8fd9\u5c31\u662f\u5f53\u4eca\u65f6\u4ee3\u5a5a\u59fb\u7684\u610f\u4e49\uff1f \u771f\u7684\u9189\u4e86\u3002 \u751a\u81f3\u6015\u548c\u4f60\u8054\u7cfb\uff0c\u4ee5\u524d\u4f60\u8bb2\u60f3\u6211\uff0c\u6211\u6015\u8fdb\u7a0b\u592a\u5feb\uff1b\u73b0\u5728\u4f60\u8bb2\u60f3\u6211\uff0c\u6211\u6015\u662f\u4f8b\u884c\u516c\u4e8b\u3002\u4e0d\u6562\u63e3\u6d4b\uff0c\u4e5f\u4e0d\u613f\u63e3\u6d4b\u3002\u6211\u5e0c\u671b\u6211\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u82b1\u5728\u6211\u773c\u524d\u7684\uff0c\u6211\u7231\u7684\uff0c\u5177\u4f53\u7684\u4eba\u8eab\u4e0a\u3002\u4f60\u4e5f\u4e00\u6837\u3002\u65f6\u95f4\u548c\u7cbe\u529b\u662f\u5f88\u5b9d\u8d35\u7684\u4e1c\u897f\u3002\u5176\u4ed6\u5c31\u7b97\u5929\u584c\u4e86\uff0c\u8fd8\u6709\u9ad8\u4e2a\u5b50\uff0c\u8f6e\u4e0d\u5230\u6211\u4eec\u64cd\u5fc3\u3002 \u4e00\u5982\u65e2\u5f80\uff0c\u5e0c\u671b\u4f60\u6709\u4e2a\u597d\u68a6\u3002 \u4e0d\u8bf4\u559c\u6b22\u4e0d\u559c\u6b22\uff0c\u7231\u4e0d\u7231\uff0c\u6211\u60f3\u505a\u4e2a\u7ec5\u58eb\uff0c\u6211\u613f\u505a\u4e2a\u7ec5\u58eb\u3002\u6211\u4e5f\u77e5\u9053\u8fd9\u6837\u7684\u60f3\u6cd5\u5f88\u5e7c\u7a1a\u3002 \u5904\u5973\u60c5\u7ed3\uff0c\u5728\u7537\u65b9\u662f\u5904\u7537\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u52a0\u7a81\u51fa\u3002\u751f\u7406\u5230\u5fc3\u7406\u7684\u9690\u79c1\uff0c\u90fd\u522b\u4eba\u5f00\u653e\u4e86\uff0c\u7ed9\u81ea\u5df1\u7684\u7231\u4eba\u7559\u4e0b\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u95ee\u9898\u6216\u8bb8\u9700\u8981\u8ba8\u8bba\uff0c\u6211\u7684\u60f3\u6cd5\u4e0d\u4e00\u5b9a\u662f\u5bf9\u7684\u3002 \u4e0d\u8c08\u8fc7\u5f80\uff0c\u6211\u4eec\u9700\u8981\u5411\u524d\u770b\u3002\u6211\u4eec\u662f\u4e0d\u662f\u771f\u7684\u9700\u8981\u548c\u522b\u4eba\u4e00\u8d77\u8d70\uff0c\u80a9\u5e76\u80a9\u7684\u4eba\u8be5\u5982\u4f55\u6311\u9009\uff0c\u6211\u4e5f\u6ca1\u6709\u60f3\u6e05\u695a\u3002 \u6211\u90fd\u5199\u4e86\u70b9\u4ec0\u4e48\uff1f\u90fd 17 \u4e86\u3002\u6beb\u65e0\u903b\u8f91\u3002\u4e0d\u770b\u4e5f\u7f62\u3002\u5168\u662f\u5c41\u8bdd\u3002\u4f9d\u7136\u795d\u4f60\u597d\u68a6\u3002 \u4f46\u662f\u6211\u7761\u4e0d\u7740\uff0c\u6216\u8005\u8bf4\u4e0d\u613f\u610f\u7761\u3002\u5f88\u665a\u4e86\uff0c\u627e\u4e2a\u4eba\u804a\u5929\uff0c\u5e0c\u671b TA \u80fd\u5e2e\u5e2e\u6211\uff0c\u518d\u6b21\u597d\u68a6\u3002","title":"2022-2-2"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#2022-2-4","text":"\u5927\u5e74\u521d\u56db\u8981\u5230\u8c46\u8c46\u5bb6\u62dc\u5e74\uff0c\u51fa\u53d1\u524d\u4e00\u665a\u6ca1\u7761\u7740\uff0c\u51cc\u6668\u4e09\u70b9\u591a\u8fd8\u7ed9\u8c46\u8c46\u53d1\u4e86\u4e00\u6bb5\u6587\u5b57\uff0c\u6458\u6284\u5982\u4e0b\uff1a \u5173\u4e8e\u4f60\u7684\u8fc7\u53bb\uff0c\u6211\u5176\u5b9e\u65e0\u6743\u8bc4\u5224\uff0c\u6bd5\u7adf\u5f53\u65f6\u6211\u4eec\u5e76\u4e0d\u8ba4\u8bc6\u3002\u524d\u4e00\u665a\u6211\u8bf4\u4e86\u4e0d\u5c11\u8fc7\u6fc0\u7684\u8bdd\uff0c\u6211\u5411\u4f60\u9053\u6b49\u3002\u56e0\u4e3a\u6211\u5f53\u65f6\u4ee3\u5165\u7684\u8eab\u4efd\u662f\u4f60\u7684\u73b0\u7537\u53cb\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u5934\u8111\u53d1\u70ed\u4e86\u3002\u90a3\u65f6\u5df2\u7ecf\u9152\u8fc7\u4e09\u5de1\uff0c\u6211\u624d\u521a\u521a\u5411\u5c0f\u4f19\u4f34\u4eec\u4ecb\u7ecd\u6211\u5168\u5bb6\u90fd\u5b9d\u8d1d\u7684\u672a\u6765\u5ab3\u5987\uff0c\u5f97\u610f\u7684\u7b11\u5bb9\u8fd8\u5728\u8138\u4e0a\uff0c\u7acb\u9a6c\u7ed9\u4e86\u6211\u4e00\u4e2a\u66b4\u51fb\u3002\u4eba\u751f\u554a\uff0c\u771f\u4ed6\u5988\u64cd\u86cb\u3002\u4f46\u662f\u6211\u63a9\u9970\u5f97\u5f88\u597d\uff0c\u6ca1\u6709\u53d1\u73b0\u6211\u6709\u54ea\u91cc\u4e0d\u5bf9\u52b2\uff0c\u4f9d\u7136\u966a\u7740\u5c0f\u4f19\u4f34\u4eec\u548c\u957f\u8f88\u63a8\u676f\u6362\u76cf\uff0c\u6c14\u6c1b\u706b\u70ed\u3002\u4f46\u662f\u5fc3\u91cc\u771f\u7684\u597d\u51b7\u3002\u8fd9\u4e5f\u7b97\u662f\u6211\u7a0d\u5fae\u6210\u719f\u4e00\u70b9\u7684\u5730\u65b9\uff0c\u80fd\u81ea\u5df1\u6d88\u5316\u4e0d\u826f\u60c5\u7eea\uff0c\u4e0d\u4f1a\u501f\u7740\u9152\u52b2\u653e\u7eb5\u81ea\u5df1\u5185\u5fc3\u7684\u9634\u6697\u3002 \u8fd8\u6709\u4e00\u4ef6\u4e8b\u9700\u8981\u5411\u4f60\u9053\u6b49\uff0c\u524d\u4e00\u665a\u8bf4\u4e86\u4e0d\u4f1a\u900f\u9732\u51fa\u53bb\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u548c\u6211\u59d0\u8bf4\u4e86\u3002\u5979\u662f\u6211\u53ef\u4ee5\u7edd\u5bf9\u4fe1\u4efb\u7684\u4eba\uff0c\u4e5f\u4e0d\u4f1a\u501f\u7740\u8fd9\u4e2a\u4e8b\u60c5\u5bf9\u4f60\u6709\u4ec0\u4e48\u7279\u522b\u7684\u770b\u6cd5\u3002\u6211\u7684\u8bf4\u6cd5\u662f\u201c\u4f60\u88ab\u6e23\u7537\u9a97\u8fc7\u201d\u3002\u6211\u4e24\u4e2a\u59d0\u90fd\u5728\u529d\u6211\uff0c\u8981\u8de8\u8fc7\u8fd9\u9053\u574e\u3002\u5979\u4eec\u90fd\u662f\u8fc7\u6765\u4eba\uff0c\u89c9\u5f97\u4f60\u8fd9\u6837\u7684\u7ecf\u5386\u751a\u81f3\u90fd\u4e0d\u503c\u4e00\u63d0\u3002\u5f53\u6211\u8df3\u8131\u51fa\u6765\uff0c\u4e0d\u4ee5\u7b2c\u4e00\u4eba\u79f0\u4ee3\u5165\uff0c\u4f3c\u4e4e\u4e5f\u6ca1\u6709\u60f3\u8c61\u7684\u90a3\u4e48\u4e25\u91cd\u3002\u548c\u4f60\u5f53\u521d\u65e2\u8822\u53c8\u52c7\u5730\u8ffd\u5bfb\u4f60\u60f3\u8981\u7684\u7231\u60c5\u4e00\u6837\uff0c\u6211\u4e5f\u6709\u5bf9\u7f8e\u597d\u7231\u60c5\u7684\u61a7\u61ac\uff0c\u5e0c\u671b\u80fd\u9047\u5230\u548c\u81ea\u5df1\u4e00\u6837\u7684\u4eba\u3002\u5904\u5973\u60c5\u7ed3\uff0c\u5bf9\u5904\u7537\u6765\u8bf4\uff0c\u66f4\u591a\u7684\u662f\u4e00\u79cd\u7b49\u4ef7\u4ea4\u6362\u5427\uff1f\u4f5c\u4e3a\u4e00\u4e2a\u5904\u7537\u6765\u8bf4\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u4f60\u7684\u5206\u6570\u76f4\u63a5\u6253\u4e86\u5f88\u5927\u7684\u6298\u6263\u3002\u4f46\u662f\u4f60\u662f\u4e00\u4e2a\u62e5\u6709\u72ec\u7acb\u4eba\u683c\u7684\uff0c\u6d3b\u751f\u751f\u7684\u4e00\u4e2a\u4eba\uff0c\u6211\u6709\u4ec0\u4e48\u8d44\u683c\u7ed9\u4f60\u6253\u5206\uff1f\u4e0d\u7ba1\u73b0\u5728\u4ee5\u4ec0\u4e48\u8eab\u4efd\u6765\u8bf4\uff0c\u6211\u90fd\u5e0c\u671b\u4f60\u4ee5\u540e\u4f9d\u7136\u5f88\u52c7\uff0c\u4f46\u662f\u8bf7\u4e0d\u8981\u90a3\u4e48\u8822\u4e86\u3002\u987a\u4fbf\u6084\u54aa\u54aa\u95ee\u4e00\u53e5\uff0c\u4f60\u662f\u4e0d\u662f\u89c9\u5f97\u6211\u4f1a\u53bb\u548c\u4f60\u7236\u6bcd\u8c08\u8fd9\u4e2a\u4e8b\uff1f\u6211\u505a\u4e0d\u51fa\u8fd9\u79cd\u4e8b\u3002 \u4e4b\u524d\u6211\u4eec\u5bf9\u5f7c\u6b64\u7684\u4e86\u89e3\u90fd\u4e0d\u591f\uff0c\u4e5f\u8bb8\u6211\u4eec\u90fd\u662f\u5728\u548c\u6211\u4eec\u60f3\u8c61\u4e2d\u7684\u5bf9\u65b9\u4ea4\u5f80\u3002\u6b63\u597d\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u4e92\u76f8\u8ba4\u8bc6\u4e00\u4e0b\uff0c\u8ba4\u771f\u5730\uff0c\u771f\u8bda\u5730\u8c08\u8c08\u8bdd\u3002\u6211\u60f3\u4e86\u89e3\u4f60\u7684\u8fc7\u53bb\u3002\u4ece\u5fc3\u7406\u5c42\u9762\u4e0a\uff0c\u5973\u6027\u662f\u6bd4\u7537\u6027\u6210\u719f\u7684\u66f4\u65e9\uff0c\u5973\u6027\u5f00\u59cb\u8ffd\u5bfb\u7231\u60c5\u7684\u5e74\u9f84\u662f\u76f8\u5bf9\u66f4\u5c0f\u3002\u6211\u8bf4\u8fc7\uff0c\u6211\u6015\u9047\u4e0a\u7ecf\u5386\u8fc7\u4e8e\u4e30\u5bcc\u7684\u4eba\uff0c\u6211\u5bb3\u6015\u9ebb\u70e6\u3002\u4f60\u53ef\u4ee5\u5728\u6211\u4eec\u89c1\u9762\u4e4b\u524d\u8003\u8651\u8981\u4e0d\u8981\u8c08\u3002 \u672c\u6765\u5e94\u8be5\u8fd8\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u60f3\u60f3\u8fd8\u662f\u5148\u8fd9\u6837\u5427\u3002 \u8bf4\u7684\u633a\u597d\uff0c\u8ba4\u771f\u5730\u8c08\u8c08\uff1f\u4e00\u89c1\u9762\u5c31\u6ca1\u7ef7\u4f4f\uff0c\u8111\u5b50\u4e00\u7247\u7a7a\u767d\uff0c\u8fd9\u4e2a\u5973\u4eba\u662f\u4e0d\u662f\u7ed9\u6211\u4e0b\u86ca\u4e86\uff1f","title":"2022-2-4"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/2.%E5%89%8D%E6%9C%9F%E6%8B%89%E6%89%AF/#2022-2-6","text":"\u521d\u516d\u51cc\u6668\uff0c\u53c8\u7ed9\u8c46\u8c46\u5199\u4e86\u4e00\u4e9b\u5e9f\u8bdd\uff0c\u8bb0\u5f55\u5982\u4e0b\uff1a \u53c8\u5230\u4e86\u6df1\u591c\u590d\u76d8\u65f6\u95f4\u3002 \u4eca\u5929\u4f60\u80fd\u51fa\u6765\u89c1\u9762\uff0c\u53c8\u4e3a\u6211\u4eec\u5173\u7cfb\u7684\u53d1\u5c55\u52a9\u63a8\u4e86\u4e00\u5927\u6b65\u3002\u524d\u4e00\u665a\u4e00\u76f4\u5728\u60f3\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u518d\u89c1\uff0c\u4e00\u65e9\u4f60\u8bf4\u4e89\u53d6\u6765\u89c1\u9762\uff0c\u6211\u5fc3\u91cc\u5f88\u671f\u5f85\uff0c\u4f46\u4e5f\u8fd8\u5728\u8d4c\u6c14\u3002\u5bb6\u91cc\u4eba\u90fd\u53eb\u6211\u63a5\u4f60\u56de\u5bb6\u5403\u996d\uff0c\u6211\u53ea\u60f3\u548c\u4f60\u5728\u5916\u8fb9\u81ea\u5df1\u8c08\u8c08\uff0c\u5c31\u4e0d\u8981\u89c1\u5bb6\u4eba\u4e86\u3002\u88ab\u5bb6\u91cc\u957f\u8f88\u5404\u79cd\u6279\u8bc4\uff0c\u6211\u90fd\u7ed9\u4e94\u59d1\u6446\u81ed\u8138\u4e86\u3002\u5f53\u7136\u6700\u540e\u4e5f\u662f\u542c\u8bdd\u5e26\u4f60\u56de\u5bb6\u4e86\u3002\u6211\u4eec\u8fd9\u8fb9\u4e00\u5806\u4eba\u65e9\u996d\u90fd\u6ca1\u5403\uff0c\u4e3a\u7b49\u4f60\u76f4\u5230\u4e24\u70b9\u624d\u5f00\u53d1\uff0c\u8fd9\u4e5f\u662f\u4e00\u5927\u5bb6\u5b50\u4eba\u4e3a\u6211\u505a\u51fa\u52aa\u529b\u4e86\u3002\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u6309\u6211\u8fd9\u94a2\u94c1\u76f4\u7537\u7684\u6027\u683c\uff0c\u6050\u6015\u4eca\u5929\u80fd\u628a\u4e8b\u60c5\u641e\u7838\u3002\u5728\u6cb3\u8fb9\u7684\u65f6\u5019\uff0c\u6211\u8c08\u5230\u5728\u5916\u8fb9\u4e00\u4e2a\u4eba\u72ec\u5c45\u7684\u751f\u6d3b\u72b6\u6001\uff0c\u4f60\u95ee\u6211\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u6ca1\u6562\u56de\u7b54\u3002\u5f53\u65f6\u6211\u4eec\u7684\u611f\u60c5\u5728\u6211\u773c\u91cc\u8fd8\u662f\u5f88\u8106\u5f31\uff0c\u6211\u53ef\u80fd\u66f4\u559c\u6b22\u4e00\u4e2a\u4eba\u7684\u72b6\u6001\uff0c\u52a0\u4e0a\u5f02\u5730\uff0c\u800c\u653e\u5f03\u8fd9\u6bb5\u611f\u60c5\u3002\u8fd8\u662f\u8001\u6bdb\u75c5\uff0c\u6211\u4e0d\u591f\u52c7\u6562\u3002\u4e0d\u8fc7\u73b0\u5728\u5df2\u7ecf\u6ca1\u6709\u4e86\u8fd9\u6837\u7684\u60f3\u6cd5\u3002\u5f53\u65f6\u5728\u6d69\u54e5\u7684\u8f66\u4e0a\uff0c\u4f4e\u5934\u4e00\u773c\u77a5\u89c1\u4f60\u62ac\u5934\u770b\u6211\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u8be5\u63a5\u543b\u4e86\u3002\u6211\u6ca1\u90a3\u4e48\u8822\uff0c\u6211\u8fd8\u662f\u61c2\u7684\u3002\u4f46\u662f\u7406\u6027\u8fd8\u5728\uff0c\u6211\u5c45\u7136\u8fd8\u5728\u8003\u8651\u73af\u5883\u5408\u4e0d\u5408\u9002\uff0c\u81ea\u5df1\u8981\u4e0d\u8981\u575a\u6301\u8fd9\u6bb5\u611f\u60c5\u3002\u76f4\u5230\u4f60\u4eb2\u4e86\u6211\u7684\u8138\uff0c\u6211\u5fc3\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u4f60\u4e00\u4e2a\u5973\u5b69\u5b50\u5df2\u7ecf\u5411\u6211\u8d70\u4e86\u90a3\u4e48\u591a\u6b65\uff0c\u6211\u8fd8\u5728\u539f\u5730\u754f\u754f\u7f29\u7f29\uff0c\u5c31\u662f\u5728\u8f9c\u8d1f\u4f60\u7684\u52aa\u529b\u3002\u6211\u662f\u4e2a\u4eba\uff0c\u4e0d\u662f\u673a\u5668\u4eba\uff0c\u6709\u7684\u65f6\u5019\u5c31\u8be5\u8ba9\u8377\u5c14\u8499\u652f\u914d\u81ea\u5df1\u3002\u8fd9\u624d\u6709\u4e86\u6211\u751c\u871c\u7684[[002. First Kiss|\u521d\u543b]]\u3002\u597d\u751c\u554a\uff01 \u73b0\u5728\u60f3\u60f3\uff0c\u6211\u771f\u7684\u662f\u4e2a\u50bb\u903c\uff0c\u5f53\u65f6\u5c31\u8be5\u76f4\u63a5\u62b1\u7740\u4f60\u5543\u5230\u7a92\u606f\u3002 \u795d\u597d\u68a6\u3002 \u60f3\u4f60\u3002","title":"2022-2-6"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/3.First%20Kiss/","text":"First Kiss 2022-2-5\uff0c\u4e34\u522b\u7684\u70ed\u543b\uff0c\u523b\u5165\u7075\u9b42\u3002 \u8fd9\u4e2a\u543b\u6211\u662f\u614e\u91cd\u8003\u8651\u8fc7\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u6289\u62e9\u7684\u4fe1\u53f7\uff0c\u6211\u51b3\u5b9a\u8981\u548c\u8fd9\u4e2a\u5973\u4eba\u4e00\u8d77\u8d70\u4e0b\u53bb\uff0c\u521d\u543b\u5c31\u5f53\u4f5c\u6211\u4eec\u6b63\u5f0f\u5728\u4e00\u8d77\u7684\u7eaa\u5ff5\u5427\u3002","title":"First Kiss"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/3.First%20Kiss/#first-kiss","text":"2022-2-5\uff0c\u4e34\u522b\u7684\u70ed\u543b\uff0c\u523b\u5165\u7075\u9b42\u3002 \u8fd9\u4e2a\u543b\u6211\u662f\u614e\u91cd\u8003\u8651\u8fc7\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u6289\u62e9\u7684\u4fe1\u53f7\uff0c\u6211\u51b3\u5b9a\u8981\u548c\u8fd9\u4e2a\u5973\u4eba\u4e00\u8d77\u8d70\u4e0b\u53bb\uff0c\u521d\u543b\u5c31\u5f53\u4f5c\u6211\u4eec\u6b63\u5f0f\u5728\u4e00\u8d77\u7684\u7eaa\u5ff5\u5427\u3002","title":"First Kiss"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/4.%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BA%B2%E5%AF%86/","text":"\u7b2c\u4e00\u6b21\u4eb2\u5bc6 2022 \u5e74 5 \u6708 1 \u65e5\u51cc\u6668\uff0c\u7b2c\u4e00\u6b21\u4eb2\u5bc6\u63a5\u89e6\u3002 \u5176\u5b9e\u524d\u671f\u6211\u4eec\u804a\u4e86\u5f88\u591a\uff0c\u5728\u653e\u5f00\u8c08\u5230\u6027\u4e4b\u540e\uff0c\u611f\u89c9\u6211\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u4e86\u4e00\u4e2a\u8d28\u7684\u98de\u8dc3\uff0c\u5f77\u4f5b\u6211\u4eec\u66fe\u7ecf\u62e5\u6709\u8fc7\u5f7c\u6b64\u3002\u5728\u67d0\u4e2a\u7545\u8c08\u7684\u6df1\u591c\uff0c\u6211\u4eec\u4fbf\u7ea6\u597d\u4e86\uff0c\u201c\u4e0b\u6b21\u89c1\u9762\u5c31\u505a\u7231\u5427\u201d\u3002 \u611f\u89c9\u6709\u5f88\u591a\u60f3\u5199\u7684\uff0c\u6709\u65f6\u95f4\u518d\u6765\u5199\u5427\uff0c\u5148\u6574\u7406\u7b14\u8bb0\u3002","title":"\u7b2c\u4e00\u6b21\u4eb2\u5bc6"},{"location":"Life/%E6%81%8B%E7%88%B1%E9%82%A3%E7%82%B9%E5%B0%8F%E4%BA%8B/4.%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BA%B2%E5%AF%86/#_1","text":"2022 \u5e74 5 \u6708 1 \u65e5\u51cc\u6668\uff0c\u7b2c\u4e00\u6b21\u4eb2\u5bc6\u63a5\u89e6\u3002 \u5176\u5b9e\u524d\u671f\u6211\u4eec\u804a\u4e86\u5f88\u591a\uff0c\u5728\u653e\u5f00\u8c08\u5230\u6027\u4e4b\u540e\uff0c\u611f\u89c9\u6211\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u6709\u4e86\u4e00\u4e2a\u8d28\u7684\u98de\u8dc3\uff0c\u5f77\u4f5b\u6211\u4eec\u66fe\u7ecf\u62e5\u6709\u8fc7\u5f7c\u6b64\u3002\u5728\u67d0\u4e2a\u7545\u8c08\u7684\u6df1\u591c\uff0c\u6211\u4eec\u4fbf\u7ea6\u597d\u4e86\uff0c\u201c\u4e0b\u6b21\u89c1\u9762\u5c31\u505a\u7231\u5427\u201d\u3002 \u611f\u89c9\u6709\u5f88\u591a\u60f3\u5199\u7684\uff0c\u6709\u65f6\u95f4\u518d\u6765\u5199\u5427\uff0c\u5148\u6574\u7406\u7b14\u8bb0\u3002","title":"\u7b2c\u4e00\u6b21\u4eb2\u5bc6"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/","text":"Visual Studio \u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u529f\u80fd\u7b80\u4ecb \u4ecevisual studio 2017 \u5f00\u59cb\u5fae\u8f6f\u63a8\u51fa\u4e86 vs \u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u5728 vs \u4e2d\u7f16\u8f91\u4ee3\u7801\uff0c\u968f\u540e\u8fdb\u884c\u8de8\u5e73\u53f0\u7f16\u8bd1\u548c\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u5c06\u539f\u5148\u6211\u4eec\u9700\u8981\u624b\u52a8\u5b8c\u6210\u7684\u5de5\u4f5c\u8fdb\u884c\u4e86\u81ea\u52a8\u5316\uff0c\u5927\u5e45\u51cf\u8f7b\u4e86\u6211\u4eec\u7684\u8d1f\u62c5\u3002\u5176\u4e2d\u652f\u6301\u7684\u5e73\u53f0\u5305\u62ec Android \u548c Linux\u3002 vs \u8fdb\u884c\u8fdc\u7a0b\u5f00\u53d1\u5206\u4e3a\u4e24\u6b65\uff1a \u521b\u5efa\u8fdc\u7a0b\u73af\u5883\u7684\u8fde\u63a5\uff0c\u968f\u540e\u8ba9 vs \u5c06\u8fdc\u7a0b\u73af\u5883\u4e2d\u7684\u7cfb\u7edf\u5934\u6587\u4ef6\u540c\u6b65\u5230\u672c\u5730\uff08\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5176\u4ed6\u5730\u65b9\u7684\u5934\u6587\u4ef6\uff0c\u540e\u9762\u4f1a\u8bb2\u89e3\uff09\uff0cc++ \u7684\u4ee3\u7801\u8865\u5168\u53ea\u9700\u8981\u5934\u6587\u4ef6\u5373\u53ef\u3002 \u5f53\u4ee3\u7801\u5199\u597d\u540e\uff0c\u9009\u62e9\u5408\u9002\u7684\u8fdc\u7a0b\u73af\u5883\uff0cvs \u5c06\u76ee\u6807\u6587\u4ef6\u548c\u4ee3\u7801\u590d\u5236\u5230\u8fdc\u7a0b\u73af\u5883\u7684\u6307\u5b9a\u4f4d\u7f6e\uff0c\u63a5\u7740\u6839\u636e\u4f60\u7684\u914d\u7f6e\u8fdb\u884c\u7f16\u8bd1\u3002 \u968f\u540e vs \u5c06\u4f1a\u5728 console \u7684 gdb \u6216 gdbserver \u4e2d\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u5728\u6b64\u671f\u95f4\u4f60\u53ef\u4ee5\u5145\u5206\u4eab\u53d7 vs debugger \u5e26\u6765\u7684\u9ad8\u6548\u548c\u4fbf\u5229\u3002 Linux \u8fdc\u7a0b\u5f00\u53d1 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u9996\u5148\u8981\u505a\u70b9\u51c6\u5907\u5de5\u4f5c\uff1a \u5b89\u88c5\u597d vs2019\uff0c\u4e14\u52fe\u9009\u4e86 C++ for Linux \u529f\u80fd\uff1b \u51c6\u5907\u4e00\u4e2a\u53ef\u7528\u7684 Linux \u8fdc\u7a0b\u73af\u5883\uff0c\u4f8b\u5982\u914d\u7f6e\u4e86\u9759\u6001 IP \u7684 Linux \u865a\u62df\u673a\uff0c\u5e76\u4e14\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 GCC\u5de5\u5177\u94fe\u4ee5\u53ca openssh\u3002 \u6dfb\u52a0\u8fdc\u7a0b\u73af\u5883 \u6709\u4e86\u8fdc\u7a0b\u73af\u5883\u6211\u4eec\u624d\u80fd\u540c\u6b65\u5934\u6587\u4ef6\u6216\u8005\u8fdb\u884c\u8c03\u8bd5\u8fd0\u884c\u3002 \u53ef\u5728\u8c03\u8bd5\u2192\u9009\u9879\u2192\u8de8\u5e73\u53f0\u2192\u8fde\u63a5\u7ba1\u7406\u5668\u4e2d\u8bbe\u7f6e\u8fdc\u7a0b\u4e3b\u673a\u4fe1\u606f\u3002 \u7ba1\u7406\u5668\u4e0b\u9762\u8fd8\u6709\u4e00\u4e2a\u8fdc\u7a0b\u6807\u5934\u7ba1\u7406\u5668\u7684\u8bbe\u7f6e\u9879\uff0c\u8fd9\u5c31\u662f\u7528\u6765\u540c\u6b65\u5934\u6587\u4ef6\u7684\u3002\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u5c31\u4f1a\u5f00\u59cb\u540c\u6b65\u5934\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u4f1a\u88ab\u7f13\u5b58\u5728\u672c\u5730\u3002 \u521b\u5efa\u9879\u76ee \u5b89\u88c5\u597d C++ for Linux \u529f\u80fd\u540e\u4f1a\u5728\u521b\u5efa\u65b0\u9879\u76ee\u7684\u9762\u677f\u4e2d\u770b\u5230 Linux \u7684\u9009\u9879\uff0c\u5982\u56fe\uff1a ![[vs_linux_1.png]] \u9009\u62e9\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e4b\u540e\u9009\u62e9\u9879\u76ee\u7684\u5b58\u50a8\u4f4d\u7f6e\uff08\u8fd9\u91cc\u662f\u672c\u5730\u7684\u4f4d\u7f6e\uff09\uff0c\u70b9\u51fb\u521b\u5efa\uff0c\u8fdc\u7a0b\u5f00\u53d1\u9879\u76ee\u5c31\u521b\u5efa\u6210\u529f\u4e86\u3002 \u914d\u7f6e\u8fdc\u7a0b\u9879\u76ee \u5728\u9879\u76ee\u5c5e\u6027\u9875\u4e2d\u53ef\u8fdb\u884c\u57fa\u672c\u914d\u7f6e\uff1a ![[vs_linux_2.png]] \u8fd9\u91cc\u4e00\u822c\u4e0d\u9700\u8981\u6539\u52a8\u3002 \u8c03\u8bd5\u90e8\u5206\u63d0\u4f9b\u4e86 gdb \u548c gdbserver\uff0c\u524d\u8005\u662f\u8ba9 vs \u5728 Linux \u4e0a\u542f\u52a8\u4e00\u4e2a console\uff0c\u7136\u540e\u5728\u5176\u4e2d\u8fd0\u884c\u5e76\u8fd4\u56de\u8f93\u51fa\uff1b\u4f7f\u7528 gdbserver \u65f6\u4f1a\u5728\u8fdc\u7a0b\u542f\u7528 gdbserver\uff0c\u672c\u5730 vs \u89e3\u6790\u56de\u4f20\u7684\u6570\u636e\u4e0d\u4f1a\u51fa\u73b0\u6742\u97f3\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u4e86 gdbserver\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u65e0\u6cd5\u6253\u65ad\u70b9\uff0c\u90a3\u4e48\u53c2\u8003\u5fae\u8f6f\u7684\u5efa\u8bae\uff0c\u6362\u56de gdb \u65b9\u6848\uff1a ![[vs_linux_3.png]] \u63a5\u7740\u662f\u914d\u7f6e\u7684\u91cd\u70b9\uff0c\u9996\u5148\u662f\u914d\u7f6e\u9700\u8981\u540c\u6b65\u7684\u8fdc\u7a0b\u73af\u5883\u7684\u5934\u6587\u4ef6\uff0c\u6709\u4e86\u5934\u6587\u4ef6 vs \u624d\u80fd\u5bf9\u4ee3\u7801\u8fdb\u884c\u81ea\u52a8\u8865\u5168\u548c\u63d0\u793a\uff1a ![[vs_linux_4.png]] \u9ed8\u8ba4\u4ece /usr/include \uff0c /usr/local/include \uff0c\u4ee5\u53ca GCC \u7684\u5934\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u8fdb\u884c\u590d\u5236\u3002\u5982\u679c\u9700\u8981\u5176\u4ed6\u4f4d\u7f6e\u7684\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u81ea\u884c\u914d\u7f6e\u3002 \u9ed8\u8ba4\u590d\u5236\u7684\u8def\u5f84\u901a\u5e38\u5df2\u7ecf\u5305\u542b\u4e86 Linux \u4e0a\u5927\u90e8\u5206\u7684\u5934\u6587\u4ef6\uff0c\u901a\u5e38\u4e5f\u4e0d\u9700\u8981\u505a\u66f4\u6539\u3002\u5934\u6587\u4ef6\u7684\u540c\u6b65\u53d1\u751f\u5728\u7b2c\u4e00\u6b21\u6784\u5efa\u9879\u76ee\u6210\u529f\u540e\u6216\u6dfb\u52a0\u8fdc\u7a0b\u8fde\u63a5\u540e\u624b\u52a8\u540c\u6b65\u3002 \u63a5\u7740\u662f\u7f16\u8bd1\u5668\u7684\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u5bf9 gcc \u548c g++ \u7f16\u8bd1\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u9009\u62e9\u5408\u9002\u7684 C++ \u6807\u51c6\u7248\u672c\uff1a ![[vs_linux_5.png]]","title":"Visual Studio \u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u529f\u80fd\u7b80\u4ecb"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/#visual-studio","text":"\u4ecevisual studio 2017 \u5f00\u59cb\u5fae\u8f6f\u63a8\u51fa\u4e86 vs \u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u5728 vs \u4e2d\u7f16\u8f91\u4ee3\u7801\uff0c\u968f\u540e\u8fdb\u884c\u8de8\u5e73\u53f0\u7f16\u8bd1\u548c\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u5c06\u539f\u5148\u6211\u4eec\u9700\u8981\u624b\u52a8\u5b8c\u6210\u7684\u5de5\u4f5c\u8fdb\u884c\u4e86\u81ea\u52a8\u5316\uff0c\u5927\u5e45\u51cf\u8f7b\u4e86\u6211\u4eec\u7684\u8d1f\u62c5\u3002\u5176\u4e2d\u652f\u6301\u7684\u5e73\u53f0\u5305\u62ec Android \u548c Linux\u3002 vs \u8fdb\u884c\u8fdc\u7a0b\u5f00\u53d1\u5206\u4e3a\u4e24\u6b65\uff1a \u521b\u5efa\u8fdc\u7a0b\u73af\u5883\u7684\u8fde\u63a5\uff0c\u968f\u540e\u8ba9 vs \u5c06\u8fdc\u7a0b\u73af\u5883\u4e2d\u7684\u7cfb\u7edf\u5934\u6587\u4ef6\u540c\u6b65\u5230\u672c\u5730\uff08\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5176\u4ed6\u5730\u65b9\u7684\u5934\u6587\u4ef6\uff0c\u540e\u9762\u4f1a\u8bb2\u89e3\uff09\uff0cc++ \u7684\u4ee3\u7801\u8865\u5168\u53ea\u9700\u8981\u5934\u6587\u4ef6\u5373\u53ef\u3002 \u5f53\u4ee3\u7801\u5199\u597d\u540e\uff0c\u9009\u62e9\u5408\u9002\u7684\u8fdc\u7a0b\u73af\u5883\uff0cvs \u5c06\u76ee\u6807\u6587\u4ef6\u548c\u4ee3\u7801\u590d\u5236\u5230\u8fdc\u7a0b\u73af\u5883\u7684\u6307\u5b9a\u4f4d\u7f6e\uff0c\u63a5\u7740\u6839\u636e\u4f60\u7684\u914d\u7f6e\u8fdb\u884c\u7f16\u8bd1\u3002 \u968f\u540e vs \u5c06\u4f1a\u5728 console \u7684 gdb \u6216 gdbserver \u4e2d\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\uff0c\u5728\u6b64\u671f\u95f4\u4f60\u53ef\u4ee5\u5145\u5206\u4eab\u53d7 vs debugger \u5e26\u6765\u7684\u9ad8\u6548\u548c\u4fbf\u5229\u3002","title":"Visual Studio \u7684\u8de8\u5e73\u53f0\u5f00\u53d1\u529f\u80fd\u7b80\u4ecb"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/#linux","text":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u9996\u5148\u8981\u505a\u70b9\u51c6\u5907\u5de5\u4f5c\uff1a \u5b89\u88c5\u597d vs2019\uff0c\u4e14\u52fe\u9009\u4e86 C++ for Linux \u529f\u80fd\uff1b \u51c6\u5907\u4e00\u4e2a\u53ef\u7528\u7684 Linux \u8fdc\u7a0b\u73af\u5883\uff0c\u4f8b\u5982\u914d\u7f6e\u4e86\u9759\u6001 IP \u7684 Linux \u865a\u62df\u673a\uff0c\u5e76\u4e14\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 GCC\u5de5\u5177\u94fe\u4ee5\u53ca openssh\u3002","title":"Linux \u8fdc\u7a0b\u5f00\u53d1"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/#_1","text":"\u6709\u4e86\u8fdc\u7a0b\u73af\u5883\u6211\u4eec\u624d\u80fd\u540c\u6b65\u5934\u6587\u4ef6\u6216\u8005\u8fdb\u884c\u8c03\u8bd5\u8fd0\u884c\u3002 \u53ef\u5728\u8c03\u8bd5\u2192\u9009\u9879\u2192\u8de8\u5e73\u53f0\u2192\u8fde\u63a5\u7ba1\u7406\u5668\u4e2d\u8bbe\u7f6e\u8fdc\u7a0b\u4e3b\u673a\u4fe1\u606f\u3002 \u7ba1\u7406\u5668\u4e0b\u9762\u8fd8\u6709\u4e00\u4e2a\u8fdc\u7a0b\u6807\u5934\u7ba1\u7406\u5668\u7684\u8bbe\u7f6e\u9879\uff0c\u8fd9\u5c31\u662f\u7528\u6765\u540c\u6b65\u5934\u6587\u4ef6\u7684\u3002\u70b9\u51fb\u201c\u4e0b\u8f7d\u201d\u6309\u94ae\u5c31\u4f1a\u5f00\u59cb\u540c\u6b65\u5934\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u4f1a\u88ab\u7f13\u5b58\u5728\u672c\u5730\u3002","title":"\u6dfb\u52a0\u8fdc\u7a0b\u73af\u5883"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/#_2","text":"\u5b89\u88c5\u597d C++ for Linux \u529f\u80fd\u540e\u4f1a\u5728\u521b\u5efa\u65b0\u9879\u76ee\u7684\u9762\u677f\u4e2d\u770b\u5230 Linux \u7684\u9009\u9879\uff0c\u5982\u56fe\uff1a ![[vs_linux_1.png]] \u9009\u62e9\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e4b\u540e\u9009\u62e9\u9879\u76ee\u7684\u5b58\u50a8\u4f4d\u7f6e\uff08\u8fd9\u91cc\u662f\u672c\u5730\u7684\u4f4d\u7f6e\uff09\uff0c\u70b9\u51fb\u521b\u5efa\uff0c\u8fdc\u7a0b\u5f00\u53d1\u9879\u76ee\u5c31\u521b\u5efa\u6210\u529f\u4e86\u3002","title":"\u521b\u5efa\u9879\u76ee"},{"location":"Linux/%E4%BD%BF%E7%94%A8%20Visual%20Studio%202019%20%E8%BF%9B%E8%A1%8C%20Linux%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91/#_3","text":"\u5728\u9879\u76ee\u5c5e\u6027\u9875\u4e2d\u53ef\u8fdb\u884c\u57fa\u672c\u914d\u7f6e\uff1a ![[vs_linux_2.png]] \u8fd9\u91cc\u4e00\u822c\u4e0d\u9700\u8981\u6539\u52a8\u3002 \u8c03\u8bd5\u90e8\u5206\u63d0\u4f9b\u4e86 gdb \u548c gdbserver\uff0c\u524d\u8005\u662f\u8ba9 vs \u5728 Linux \u4e0a\u542f\u52a8\u4e00\u4e2a console\uff0c\u7136\u540e\u5728\u5176\u4e2d\u8fd0\u884c\u5e76\u8fd4\u56de\u8f93\u51fa\uff1b\u4f7f\u7528 gdbserver \u65f6\u4f1a\u5728\u8fdc\u7a0b\u542f\u7528 gdbserver\uff0c\u672c\u5730 vs \u89e3\u6790\u56de\u4f20\u7684\u6570\u636e\u4e0d\u4f1a\u51fa\u73b0\u6742\u97f3\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u4e86 gdbserver\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u65e0\u6cd5\u6253\u65ad\u70b9\uff0c\u90a3\u4e48\u53c2\u8003\u5fae\u8f6f\u7684\u5efa\u8bae\uff0c\u6362\u56de gdb \u65b9\u6848\uff1a ![[vs_linux_3.png]] \u63a5\u7740\u662f\u914d\u7f6e\u7684\u91cd\u70b9\uff0c\u9996\u5148\u662f\u914d\u7f6e\u9700\u8981\u540c\u6b65\u7684\u8fdc\u7a0b\u73af\u5883\u7684\u5934\u6587\u4ef6\uff0c\u6709\u4e86\u5934\u6587\u4ef6 vs \u624d\u80fd\u5bf9\u4ee3\u7801\u8fdb\u884c\u81ea\u52a8\u8865\u5168\u548c\u63d0\u793a\uff1a ![[vs_linux_4.png]] \u9ed8\u8ba4\u4ece /usr/include \uff0c /usr/local/include \uff0c\u4ee5\u53ca GCC \u7684\u5934\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u8fdb\u884c\u590d\u5236\u3002\u5982\u679c\u9700\u8981\u5176\u4ed6\u4f4d\u7f6e\u7684\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u81ea\u884c\u914d\u7f6e\u3002 \u9ed8\u8ba4\u590d\u5236\u7684\u8def\u5f84\u901a\u5e38\u5df2\u7ecf\u5305\u542b\u4e86 Linux \u4e0a\u5927\u90e8\u5206\u7684\u5934\u6587\u4ef6\uff0c\u901a\u5e38\u4e5f\u4e0d\u9700\u8981\u505a\u66f4\u6539\u3002\u5934\u6587\u4ef6\u7684\u540c\u6b65\u53d1\u751f\u5728\u7b2c\u4e00\u6b21\u6784\u5efa\u9879\u76ee\u6210\u529f\u540e\u6216\u6dfb\u52a0\u8fdc\u7a0b\u8fde\u63a5\u540e\u624b\u52a8\u540c\u6b65\u3002 \u63a5\u7740\u662f\u7f16\u8bd1\u5668\u7684\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u5bf9 gcc \u548c g++ \u7f16\u8bd1\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u9009\u62e9\u5408\u9002\u7684 C++ \u6807\u51c6\u7248\u672c\uff1a ![[vs_linux_5.png]]","title":"\u914d\u7f6e\u8fdc\u7a0b\u9879\u76ee"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/","text":"\u6982\u8ff0 \u5728 Linux \u7ec8\u7aef\uff0c\u9762\u5bf9\u547d\u4ee4\u4e0d\u77e5\u9053\u600e\u4e48\u7528\uff0c\u6216\u4e0d\u8bb0\u5f97\u547d\u4ee4\u7684\u62fc\u5199\u53ca\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6c42\u52a9\u4e8e\u7cfb\u7edf\u7684\u5e2e\u52a9\u6587\u6863\uff1bLinux \u7cfb\u7edf\u5185\u7f6e\u7684\u5e2e\u52a9\u6587\u6863\u5f88\u8be6\u7ec6\uff0c\u901a\u5e38\u80fd\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u638c\u63e1\u5982\u4f55\u6b63\u786e\u7684\u53bb\u4f7f\u7528\u5b83\u4eec\u3002 \u5728\u53ea\u8bb0\u5f97\u90e8\u5206\u547d\u4ee4\u5173\u952e\u5b57\u7684\u573a\u5408\uff0c\u6211\u4eec\u53ef\u901a\u8fc7 man -k \u6765\u641c\u7d22\u3002 \u9700\u8981\u77e5\u9053\u67d0\u4e2a\u547d\u4ee4\u7684\u7b80\u8981\u8bf4\u660e\uff0c\u53ef\u4ee5\u4f7f\u7528 whatis \uff1b\u800c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u5219\u53ef\u7528 info \u547d\u4ee4\u3002 \u67e5\u770b\u547d\u4ee4\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 which \u3002 \u800c\u5bf9\u4e8e\u547d\u4ee4\u7684\u5177\u4f53\u53c2\u6570\u53ca\u4f7f\u7528\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u5f3a\u5927\u7684 man \u3002 \u547d\u4ee4\u4f7f\u7528 \u67e5\u770b\u547d\u4ee4\u7684\u7b80\u8981\u8bf4\u660e \u7b80\u8981\u8bf4\u660e\u547d\u4ee4\u7684\u4f5c\u7528\uff08\u663e\u793a\u547d\u4ee4\u6240\u5904\u7684 man \u5206\u7c7b\u9875\u9762\uff09\uff1a whatis command \u6b63\u5219\u5339\u914d\uff1a whatis -w \"loca*\" \u66f4\u52a0\u8be6\u7ec6\u7684\u8bf4\u660e\u6587\u6863\uff1a info command \u4f7f\u7528 man \u67e5\u8be2\u547d\u4ee4 command \u7684\u8bf4\u660e\u6587\u6863\uff1a man command \u4f7f\u7528 page up \u548c page down \u6765\u4e0a\u4e0b\u7ffb\u9875\u3002 \u5728 man \u7684\u5e2e\u52a9\u624b\u518c\u4e2d\uff0c\u5c06\u5e2e\u52a9\u6587\u6863\u5206\u4e3a 9 \u4e2a\u7c7b\u522b\uff0c\u5bf9\u4e8e\u6709\u7684\u5173\u952e\u5b57\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7c7b\u522b\u4e2d\uff0c \u6211\u4eec\u5c31\u9700\u8981\u6307\u5b9a\u7279\u5b9a\u7684\u7c7b\u522b\u6765\u67e5\u770b\uff1b\uff08\u4e00\u822c\u6211\u4eec\u67e5\u8be2 bash \u547d\u4ee4\uff0c\u5f52\u7c7b\u57281\u7c7b\u4e2d\uff09\u3002 man \u9875\u9762\u6240\u5c5e\u7684\u5206\u7c7b\u6807\u8bc6\uff08\u5e38\u7528\u7684\u662f\u5206\u7c7b 1 \u548c\u5206\u7c7b 3\uff09\uff1a \u7528\u6237\u53ef\u4ee5\u64cd\u4f5c\u7684\u547d\u4ee4\u6216\u8005\u662f\u53ef\u6267\u884c\u6587\u4ef6 \u7cfb\u7edf\u6838\u5fc3\u53ef\u8c03\u7528\u7684\u51fd\u6570\u4e0e\u5de5\u5177\u7b49 \u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u4e0e\u6570\u636e\u5e93 \u8bbe\u5907\u6587\u4ef6\u7684\u8bf4\u660e \u8bbe\u7f6e\u6587\u4ef6\u6216\u8005\u67d0\u4e9b\u6587\u4ef6\u7684\u683c\u5f0f \u6e38\u620f \u60ef\u4f8b\u4e0e\u534f\u8bae\u7b49\u3002\u4f8b\u5982 Linux \u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u534f\u8bae\u3001ASC\u2161\uff0c\u7801\u7b49\u8bf4\u660e\u5185\u5bb9 \u7cfb\u7edf\u7ba1\u7406\u5458\u53ef\u7528\u7684\u7ba1\u7406\u6761\u4ee4 \u4e0e\u5185\u6838\u6709\u5173\u7684\u6587\u4ef6 \u4f8b\u5982\uff1a whatis printf printf ( 1 ) - format and print data printf ( 3 ) - formatted output conversion \u6211\u4eec\u770b\u5230 printf \u5728\u5206\u7c7b 1 \u548c\u5206\u7c7b 3 \u4e2d\u90fd\u6709\uff1b\u5206\u7c7b 1 \u4e2d\u7684\u9875\u9762\u662f\u547d\u4ee4\u64cd\u4f5c\u53ca\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5e2e\u52a9\uff1b\u800c 3 \u662f\u5e38\u7528\u51fd\u6570\u5e93\u8bf4\u660e\uff1b\u5982\u679c\u6211\u4eec\u60f3\u770b\u7684\u662f C \u8bed\u8a00\u4e2d printf \u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u67e5\u770b\u5206\u7c7b 3 \u7684\u5e2e\u52a9\uff1a man 3 printf man -k \u6839\u636e\u547d\u4ee4\u4e2d\u90e8\u5206\u5173\u952e\u5b57\u6765\u67e5\u8be2\u547d\u4ee4\uff0c\u9002\u7528\u4e8e\u53ea\u8bb0\u4f4f\u90e8\u5206\u547d\u4ee4\u7684\u573a\u5408\u3002 \u4f8b\u5982\uff0c\u67e5\u627e GNOME \u7684 config \u914d\u7f6e\u5de5\u5177\u547d\u4ee4\uff1a man -k GNOME config | grep 1 \u67e5\u770b\u8def\u5f84 \u67e5\u770b\u7a0b\u5e8f\u7684 binary \u6587\u4ef6\u6240\u5728\u8def\u5f84\uff1a which command \u4f8b\u5982\u67e5\u770b make \u7a0b\u5e8f\u5b89\u88c5\u8def\u5f84\uff1a which make /usr/bin/make \u67e5\u770b\u7a0b\u5e8f\u7684\u641c\u7d22\u8def\u5f84\uff1a whereis make make: /usr/bin/make /usr/share/man/man1/make.1.gz \u5f53\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86\u540c\u4e00\u8f6f\u4ef6\u7684\u591a\u4e2a\u7248\u672c\u65f6\uff0c\u4e0d\u786e\u5b9a\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u7248\u672c\u65f6\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u80fd\u6d3e\u4e0a\u7528\u573a\u3002","title":"\u6982\u8ff0"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/#_1","text":"\u5728 Linux \u7ec8\u7aef\uff0c\u9762\u5bf9\u547d\u4ee4\u4e0d\u77e5\u9053\u600e\u4e48\u7528\uff0c\u6216\u4e0d\u8bb0\u5f97\u547d\u4ee4\u7684\u62fc\u5199\u53ca\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6c42\u52a9\u4e8e\u7cfb\u7edf\u7684\u5e2e\u52a9\u6587\u6863\uff1bLinux \u7cfb\u7edf\u5185\u7f6e\u7684\u5e2e\u52a9\u6587\u6863\u5f88\u8be6\u7ec6\uff0c\u901a\u5e38\u80fd\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u638c\u63e1\u5982\u4f55\u6b63\u786e\u7684\u53bb\u4f7f\u7528\u5b83\u4eec\u3002 \u5728\u53ea\u8bb0\u5f97\u90e8\u5206\u547d\u4ee4\u5173\u952e\u5b57\u7684\u573a\u5408\uff0c\u6211\u4eec\u53ef\u901a\u8fc7 man -k \u6765\u641c\u7d22\u3002 \u9700\u8981\u77e5\u9053\u67d0\u4e2a\u547d\u4ee4\u7684\u7b80\u8981\u8bf4\u660e\uff0c\u53ef\u4ee5\u4f7f\u7528 whatis \uff1b\u800c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u5219\u53ef\u7528 info \u547d\u4ee4\u3002 \u67e5\u770b\u547d\u4ee4\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 which \u3002 \u800c\u5bf9\u4e8e\u547d\u4ee4\u7684\u5177\u4f53\u53c2\u6570\u53ca\u4f7f\u7528\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u5f3a\u5927\u7684 man \u3002","title":"\u6982\u8ff0"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/#_2","text":"","title":"\u547d\u4ee4\u4f7f\u7528"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/#_3","text":"\u7b80\u8981\u8bf4\u660e\u547d\u4ee4\u7684\u4f5c\u7528\uff08\u663e\u793a\u547d\u4ee4\u6240\u5904\u7684 man \u5206\u7c7b\u9875\u9762\uff09\uff1a whatis command \u6b63\u5219\u5339\u914d\uff1a whatis -w \"loca*\" \u66f4\u52a0\u8be6\u7ec6\u7684\u8bf4\u660e\u6587\u6863\uff1a info command","title":"\u67e5\u770b\u547d\u4ee4\u7684\u7b80\u8981\u8bf4\u660e"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/#man","text":"\u67e5\u8be2\u547d\u4ee4 command \u7684\u8bf4\u660e\u6587\u6863\uff1a man command \u4f7f\u7528 page up \u548c page down \u6765\u4e0a\u4e0b\u7ffb\u9875\u3002 \u5728 man \u7684\u5e2e\u52a9\u624b\u518c\u4e2d\uff0c\u5c06\u5e2e\u52a9\u6587\u6863\u5206\u4e3a 9 \u4e2a\u7c7b\u522b\uff0c\u5bf9\u4e8e\u6709\u7684\u5173\u952e\u5b57\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7c7b\u522b\u4e2d\uff0c \u6211\u4eec\u5c31\u9700\u8981\u6307\u5b9a\u7279\u5b9a\u7684\u7c7b\u522b\u6765\u67e5\u770b\uff1b\uff08\u4e00\u822c\u6211\u4eec\u67e5\u8be2 bash \u547d\u4ee4\uff0c\u5f52\u7c7b\u57281\u7c7b\u4e2d\uff09\u3002 man \u9875\u9762\u6240\u5c5e\u7684\u5206\u7c7b\u6807\u8bc6\uff08\u5e38\u7528\u7684\u662f\u5206\u7c7b 1 \u548c\u5206\u7c7b 3\uff09\uff1a \u7528\u6237\u53ef\u4ee5\u64cd\u4f5c\u7684\u547d\u4ee4\u6216\u8005\u662f\u53ef\u6267\u884c\u6587\u4ef6 \u7cfb\u7edf\u6838\u5fc3\u53ef\u8c03\u7528\u7684\u51fd\u6570\u4e0e\u5de5\u5177\u7b49 \u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u4e0e\u6570\u636e\u5e93 \u8bbe\u5907\u6587\u4ef6\u7684\u8bf4\u660e \u8bbe\u7f6e\u6587\u4ef6\u6216\u8005\u67d0\u4e9b\u6587\u4ef6\u7684\u683c\u5f0f \u6e38\u620f \u60ef\u4f8b\u4e0e\u534f\u8bae\u7b49\u3002\u4f8b\u5982 Linux \u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u534f\u8bae\u3001ASC\u2161\uff0c\u7801\u7b49\u8bf4\u660e\u5185\u5bb9 \u7cfb\u7edf\u7ba1\u7406\u5458\u53ef\u7528\u7684\u7ba1\u7406\u6761\u4ee4 \u4e0e\u5185\u6838\u6709\u5173\u7684\u6587\u4ef6 \u4f8b\u5982\uff1a whatis printf printf ( 1 ) - format and print data printf ( 3 ) - formatted output conversion \u6211\u4eec\u770b\u5230 printf \u5728\u5206\u7c7b 1 \u548c\u5206\u7c7b 3 \u4e2d\u90fd\u6709\uff1b\u5206\u7c7b 1 \u4e2d\u7684\u9875\u9762\u662f\u547d\u4ee4\u64cd\u4f5c\u53ca\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5e2e\u52a9\uff1b\u800c 3 \u662f\u5e38\u7528\u51fd\u6570\u5e93\u8bf4\u660e\uff1b\u5982\u679c\u6211\u4eec\u60f3\u770b\u7684\u662f C \u8bed\u8a00\u4e2d printf \u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u67e5\u770b\u5206\u7c7b 3 \u7684\u5e2e\u52a9\uff1a man 3 printf man -k \u6839\u636e\u547d\u4ee4\u4e2d\u90e8\u5206\u5173\u952e\u5b57\u6765\u67e5\u8be2\u547d\u4ee4\uff0c\u9002\u7528\u4e8e\u53ea\u8bb0\u4f4f\u90e8\u5206\u547d\u4ee4\u7684\u573a\u5408\u3002 \u4f8b\u5982\uff0c\u67e5\u627e GNOME \u7684 config \u914d\u7f6e\u5de5\u5177\u547d\u4ee4\uff1a man -k GNOME config | grep 1","title":"\u4f7f\u7528man"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/00.%20%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B8%AE%E5%8A%A9/#_4","text":"\u67e5\u770b\u7a0b\u5e8f\u7684 binary \u6587\u4ef6\u6240\u5728\u8def\u5f84\uff1a which command \u4f8b\u5982\u67e5\u770b make \u7a0b\u5e8f\u5b89\u88c5\u8def\u5f84\uff1a which make /usr/bin/make \u67e5\u770b\u7a0b\u5e8f\u7684\u641c\u7d22\u8def\u5f84\uff1a whereis make make: /usr/bin/make /usr/share/man/man1/make.1.gz \u5f53\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86\u540c\u4e00\u8f6f\u4ef6\u7684\u591a\u4e2a\u7248\u672c\u65f6\uff0c\u4e0d\u786e\u5b9a\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u7248\u672c\u65f6\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u80fd\u6d3e\u4e0a\u7528\u573a\u3002","title":"\u67e5\u770b\u8def\u5f84"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/","text":"\u6587\u4ef6\u7ba1\u7406\u4e0d\u5916\u4e4e\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u521b\u5efa\u3001\u5220\u9664\u3001\u67e5\u8be2\u3001\u79fb\u52a8\uff0c\u6709 mkdir/rm/mv \u3002 \u6587\u4ef6\u67e5\u8be2\u662f\u91cd\u70b9\uff0c\u7528 find \u6765\u8fdb\u884c\u67e5\u8be2\uff1b find \u7684\u53c2\u6570\u4e30\u5bcc\uff0c\u4e5f\u975e\u5e38\u5f3a\u5927\u3002 \u6709\u65f6\u5019\uff0c\u9700\u8981\u7ed9\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a\u522b\u540d\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230 ln \uff0c\u4f7f\u7528\u8fd9\u4e2a\u522b\u540d\u548c\u4f7f\u7528\u539f\u6587\u4ef6\u662f\u76f8\u540c\u7684\u6548\u679c\u3002 \u521b\u5efa\u548c\u5220\u9664 \u521b\u5efa\uff1a mkdir \u5220\u9664\uff1a rm \u5220\u9664\u975e\u7a7a\u76ee\u5f55\uff1a rm -rf dir \u5220\u9664\u65e5\u5fd7\uff1a rm log \uff08\u7b49\u4ef7\uff1a find ./ -name \"log\" -exec rm {}; \uff09 \u79fb\u52a8\uff1a mv \u590d\u5236\uff1a cp \uff08\u590d\u5236\u76ee\u5f55\uff1a cp -r \uff09 \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u6587\u4ef6\u4e2a\u6570\uff1a find ./ | wc -l 6 \u590d\u5236\u76ee\u5f55\uff1a cp -r source_dir dest_dir \u76ee\u5f55\u5207\u6362 \u627e\u5230\u6587\u4ef6/\u76ee\u5f55\u4f4d\u7f6e\uff1a cd \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u76ee\u5f55\uff1a cd - \u5207\u6362\u5230 home \u76ee\u5f55\uff1a cd \u6216\u8005 cd ~ \u663e\u793a\u5f53\u524d\u8def\u5f84\uff1a pwd \u66f4\u6539\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e3a path\uff1a cd path \u5217\u51fa\u76ee\u5f55\u9879 \u663e\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff1a ls \u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u4ee5\u5217\u8868\u7684\u65b9\u5f0f\u663e\u793a\u76ee\u5f55\u9879\uff1a ls -lrt \u8fd9\u4e2a\u547d\u4ee4\u4f7f\u7528\u7684\u9891\u7387\u975e\u5e38\u9ad8\uff0c\u53ef\u4ee5\u4e3a\u5b83\u5efa\u7acb\u4e00\u4e2a\u5feb\u6377\u547d\u4ee4\u65b9\u5f0f\u3002 \u5728 .bashrc \u4e2d\u8bbe\u7f6e\u547d\u4ee4\u522b\u540d\uff1a alias lsl = 'ls -lrt' alias lm = 'ls -al|more' \u8fd9\u6837\uff0c\u4f7f\u7528 lsl \uff0c\u5c31\u53ef\u4ee5\u663e\u793a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u6309\u7167\u4fee\u6539\u65f6\u95f4\u6392\u5e8f\u3002 .bashrc \u5728/home/\u4f60\u7684\u7528\u6237\u540d/ \u6587\u4ef6\u5939\u4e0b\uff0c\u4ee5\u9690\u85cf\u6587\u4ef6\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u53ef\u4f7f\u7528 ls -a \u67e5\u770b\u3002 \u7ed9\u6bcf\u9879\u6587\u4ef6\u524d\u9762\u589e\u52a0\u4e00\u4e2a id \u7f16\u53f7\uff0c\u770b\u4e0a\u53bb\u66f4\u52a0\u6574\u6d01\uff1a ls | cat -n 1 gui.py 2 ls 3 main.py 4 __pycache__ \u67e5\u627e\u76ee\u5f55\u53ca\u6587\u4ef6 \u641c\u5bfb\u6587\u4ef6\u6216\u76ee\u5f55\uff1a find ./ -name \"core*\" | xargs file \u67e5\u627e\u76ee\u6807\u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709 obj \u6587\u4ef6\uff1a find ./ -name '*.o' \u9012\u5f52\u5f53\u524d\u76ee\u5f55\u53ca\u5b50\u76ee\u5f55\u5220\u9664\u6240\u6709 .o \u6587\u4ef6\uff1a find ./ -name \"*.o\" -exec rm {} \\; find \u662f\u5b9e\u65f6\u67e5\u627e\uff0c\u5982\u679c\u9700\u8981\u66f4\u5feb\u7684\u67e5\u8be2\uff0c\u53ef\u8bd5\u8bd5 locate \uff1b locate \u4f1a\u4e3a\u6587\u4ef6\u7cfb\u7edf\u5efa\u7acb\u7d22\u5f15\u6570\u636e\u5e93\uff0c\u5982\u679c\u6709\u6587\u4ef6\u66f4\u65b0\uff0c\u9700\u8981\u5b9a\u671f\u6267\u884c\u66f4\u65b0\u547d\u4ee4\u6765\u66f4\u65b0\u7d22\u5f15\u5e93\u3002 Ubuntu 20.04 \u6ca1\u6709\u5185\u7f6e locate\uff0c\u9700\u8981\u81ea\u884c\u5b89\u88c5\uff1a sudo apt install mlocate \u5bfb\u627e\u5305\u542b\u6709 string \u7684\u8def\u5f84\uff1a locate string \u66f4\u65b0\u7d22\u5f15\u5e93\uff1a sudo updatedb \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \u663e\u793a\u65f6\u540c\u65f6\u663e\u793a\u884c\u53f7\uff1a cat -n filename cat filename -n \u6309\u9875\u663e\u793a\u5217\u8868\u5185\u5bb9\uff1a ls -al | more \u53ea\u770b\u524d 10 \u884c\uff1a head -10 filename \u53ea\u770b\u5012\u6570 5 \u884c\uff1a tail -5 filename \u67e5\u770b\u4e24\u4e2a\u6587\u4ef6\u95f4\u7684\u5dee\u522b\uff1a diff file1 file2 \u52a8\u6001\u663e\u793a\u6587\u672c\u6700\u65b0\u4fe1\u606f\uff1a tail -f filename \u6587\u4ef6\u4e0e\u76ee\u5f55\u6743\u9650\u4fee\u6539 \u6539\u53d8\u6587\u4ef6\u7684\u62e5\u6709\u8005\uff1a chown \u6539\u53d8\u6587\u4ef6\u8bfb\u3001\u5199\u3001\u6267\u884c\u7b49\u5c5e\u6027\uff1a chmod \u9012\u5f52\u5b50\u76ee\u5f55\u4fee\u6539\uff1achown -R tuxapp source \u589e\u52a0\u811a\u672c\u53ef\u6267\u884c\u6743\u9650\uff1a chmod a+x myscript \u7ed9\u6587\u4ef6\u589e\u52a0\u522b\u540d \u521b\u5efa\u7b26\u53f7\u94fe\u63a5/\u786c\u94fe\u63a5\uff1a ln cc ccAgain ; \u786c\u94fe\u63a5\uff0c\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\uff0c\u5c06\u6254\u80fd\u627e\u5230 ln -s cc ccTo ; \u7b26\u53f7\u94fe\u63a5\uff08\u8f6f\u94fe\u63a5\uff09\uff0c\u5220\u9664\u6e90\uff0c\u53e6\u4e00\u4e2a\u65e0\u6cd5\u4f7f\u7528\uff08ccTo \u4e3a\u65b0\u5efa\u7684\u6587\u4ef6\uff09 \u7ba1\u9053\u548c\u91cd\u5b9a\u5411 \u6279\u5904\u7406\u547d\u4ee4\u8fde\u63a5\u6267\u884c\uff0c\u4f7f\u7528 | \u4e32\u8fde\uff1a\u4f7f\u7528\u5206\u53f7 ; \u524d\u9762\u6210\u529f\uff0c\u5219\u6267\u884c\u540e\u9762\u4e00\u6761\uff0c\u5426\u5219\uff0c\u4e0d\u6267\u884c\uff1a && \u524d\u9762\u5931\u8d25\uff0c\u5219\u540e\u4e00\u6761\u6267\u884c\uff1a || ls /proc && echo suss! || echo failed. \u4ee5\u4e0a\u547d\u4ee4\u80fd\u591f\u63d0\u793a\u547d\u540d\u6267\u884c\u6210\u529f\u6216\u8005\u5931\u8d25\u3002 \u7b49\u4ef7\u4e8e\uff1a if ls /proc ; then echo suss ; else echo file ; fi \u91cd\u5b9a\u5411\uff1a ls proc/*.c > list 2 > & 1 ; \u5c06\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u540c\u4e00\u6587\u4ef6 \u7b49\u4ef7\u4e8e\uff1a ls proc/*.c & > list \u6e05\u7a7a\u6587\u4ef6\uff1a ls proc/*.c & > list \u91cd\u5b9a\u5411\uff1a echo aa >> a.txt \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u542f\u52a8\u5e10\u53f7\u540e\u81ea\u52a8\u6267\u884c\u7684\u6587\u4ef6\u4e3a .profile\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\u53ef\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\u3002 \u5b89\u88c5\u7684\u8f6f\u4ef6\u8def\u5f84\u4e00\u822c\u9700\u8981\u52a0\u5165\u5230 path \u4e2d\uff1a PATH = $APPDIR :/opt/app/soft/bin: $PATH :/usr/local/bin: $TUXDIR /bin: $ORACLE_HOME /bin ; export PATH Bash \u5feb\u6377\u8f93\u5165\u6216\u5220\u9664 \u5feb\u6377\u952e\uff1a Ctl-U \u5220\u9664\u5149\u6807\u5230\u884c\u9996\u7684\u6240\u6709\u5b57\u7b26,\u5728\u67d0\u4e9b\u8bbe\u7f6e\u4e0b,\u5220\u9664\u5168\u884c Ctl-W \u5220\u9664\u5f53\u524d\u5149\u6807\u5230\u524d\u8fb9\u7684\u6700\u8fd1\u4e00\u4e2a\u7a7a\u683c\u4e4b\u95f4\u7684\u5b57\u7b26 Ctl-H backspace,\u5220\u9664\u5149\u6807\u524d\u8fb9\u7684\u5b57\u7b26 Ctl-R \u5339\u914d\u6700\u76f8\u8fd1\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u8f93\u51fa","title":"01. \u6587\u4ef6\u53ca\u76ee\u5f55\u7ba1\u7406"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_1","text":"\u521b\u5efa\uff1a mkdir \u5220\u9664\uff1a rm \u5220\u9664\u975e\u7a7a\u76ee\u5f55\uff1a rm -rf dir \u5220\u9664\u65e5\u5fd7\uff1a rm log \uff08\u7b49\u4ef7\uff1a find ./ -name \"log\" -exec rm {}; \uff09 \u79fb\u52a8\uff1a mv \u590d\u5236\uff1a cp \uff08\u590d\u5236\u76ee\u5f55\uff1a cp -r \uff09 \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u6587\u4ef6\u4e2a\u6570\uff1a find ./ | wc -l 6 \u590d\u5236\u76ee\u5f55\uff1a cp -r source_dir dest_dir","title":"\u521b\u5efa\u548c\u5220\u9664"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_2","text":"\u627e\u5230\u6587\u4ef6/\u76ee\u5f55\u4f4d\u7f6e\uff1a cd \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u76ee\u5f55\uff1a cd - \u5207\u6362\u5230 home \u76ee\u5f55\uff1a cd \u6216\u8005 cd ~ \u663e\u793a\u5f53\u524d\u8def\u5f84\uff1a pwd \u66f4\u6539\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e3a path\uff1a cd path","title":"\u76ee\u5f55\u5207\u6362"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_3","text":"\u663e\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff1a ls \u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u4ee5\u5217\u8868\u7684\u65b9\u5f0f\u663e\u793a\u76ee\u5f55\u9879\uff1a ls -lrt \u8fd9\u4e2a\u547d\u4ee4\u4f7f\u7528\u7684\u9891\u7387\u975e\u5e38\u9ad8\uff0c\u53ef\u4ee5\u4e3a\u5b83\u5efa\u7acb\u4e00\u4e2a\u5feb\u6377\u547d\u4ee4\u65b9\u5f0f\u3002 \u5728 .bashrc \u4e2d\u8bbe\u7f6e\u547d\u4ee4\u522b\u540d\uff1a alias lsl = 'ls -lrt' alias lm = 'ls -al|more' \u8fd9\u6837\uff0c\u4f7f\u7528 lsl \uff0c\u5c31\u53ef\u4ee5\u663e\u793a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u6309\u7167\u4fee\u6539\u65f6\u95f4\u6392\u5e8f\u3002 .bashrc \u5728/home/\u4f60\u7684\u7528\u6237\u540d/ \u6587\u4ef6\u5939\u4e0b\uff0c\u4ee5\u9690\u85cf\u6587\u4ef6\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u53ef\u4f7f\u7528 ls -a \u67e5\u770b\u3002 \u7ed9\u6bcf\u9879\u6587\u4ef6\u524d\u9762\u589e\u52a0\u4e00\u4e2a id \u7f16\u53f7\uff0c\u770b\u4e0a\u53bb\u66f4\u52a0\u6574\u6d01\uff1a ls | cat -n 1 gui.py 2 ls 3 main.py 4 __pycache__","title":"\u5217\u51fa\u76ee\u5f55\u9879"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_4","text":"\u641c\u5bfb\u6587\u4ef6\u6216\u76ee\u5f55\uff1a find ./ -name \"core*\" | xargs file \u67e5\u627e\u76ee\u6807\u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709 obj \u6587\u4ef6\uff1a find ./ -name '*.o' \u9012\u5f52\u5f53\u524d\u76ee\u5f55\u53ca\u5b50\u76ee\u5f55\u5220\u9664\u6240\u6709 .o \u6587\u4ef6\uff1a find ./ -name \"*.o\" -exec rm {} \\; find \u662f\u5b9e\u65f6\u67e5\u627e\uff0c\u5982\u679c\u9700\u8981\u66f4\u5feb\u7684\u67e5\u8be2\uff0c\u53ef\u8bd5\u8bd5 locate \uff1b locate \u4f1a\u4e3a\u6587\u4ef6\u7cfb\u7edf\u5efa\u7acb\u7d22\u5f15\u6570\u636e\u5e93\uff0c\u5982\u679c\u6709\u6587\u4ef6\u66f4\u65b0\uff0c\u9700\u8981\u5b9a\u671f\u6267\u884c\u66f4\u65b0\u547d\u4ee4\u6765\u66f4\u65b0\u7d22\u5f15\u5e93\u3002 Ubuntu 20.04 \u6ca1\u6709\u5185\u7f6e locate\uff0c\u9700\u8981\u81ea\u884c\u5b89\u88c5\uff1a sudo apt install mlocate \u5bfb\u627e\u5305\u542b\u6709 string \u7684\u8def\u5f84\uff1a locate string \u66f4\u65b0\u7d22\u5f15\u5e93\uff1a sudo updatedb","title":"\u67e5\u627e\u76ee\u5f55\u53ca\u6587\u4ef6"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_5","text":"\u663e\u793a\u65f6\u540c\u65f6\u663e\u793a\u884c\u53f7\uff1a cat -n filename cat filename -n \u6309\u9875\u663e\u793a\u5217\u8868\u5185\u5bb9\uff1a ls -al | more \u53ea\u770b\u524d 10 \u884c\uff1a head -10 filename \u53ea\u770b\u5012\u6570 5 \u884c\uff1a tail -5 filename \u67e5\u770b\u4e24\u4e2a\u6587\u4ef6\u95f4\u7684\u5dee\u522b\uff1a diff file1 file2 \u52a8\u6001\u663e\u793a\u6587\u672c\u6700\u65b0\u4fe1\u606f\uff1a tail -f filename","title":"\u67e5\u770b\u6587\u4ef6\u5185\u5bb9"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_6","text":"\u6539\u53d8\u6587\u4ef6\u7684\u62e5\u6709\u8005\uff1a chown \u6539\u53d8\u6587\u4ef6\u8bfb\u3001\u5199\u3001\u6267\u884c\u7b49\u5c5e\u6027\uff1a chmod \u9012\u5f52\u5b50\u76ee\u5f55\u4fee\u6539\uff1achown -R tuxapp source \u589e\u52a0\u811a\u672c\u53ef\u6267\u884c\u6743\u9650\uff1a chmod a+x myscript","title":"\u6587\u4ef6\u4e0e\u76ee\u5f55\u6743\u9650\u4fee\u6539"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_7","text":"\u521b\u5efa\u7b26\u53f7\u94fe\u63a5/\u786c\u94fe\u63a5\uff1a ln cc ccAgain ; \u786c\u94fe\u63a5\uff0c\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\uff0c\u5c06\u6254\u80fd\u627e\u5230 ln -s cc ccTo ; \u7b26\u53f7\u94fe\u63a5\uff08\u8f6f\u94fe\u63a5\uff09\uff0c\u5220\u9664\u6e90\uff0c\u53e6\u4e00\u4e2a\u65e0\u6cd5\u4f7f\u7528\uff08ccTo \u4e3a\u65b0\u5efa\u7684\u6587\u4ef6\uff09","title":"\u7ed9\u6587\u4ef6\u589e\u52a0\u522b\u540d"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_8","text":"\u6279\u5904\u7406\u547d\u4ee4\u8fde\u63a5\u6267\u884c\uff0c\u4f7f\u7528 | \u4e32\u8fde\uff1a\u4f7f\u7528\u5206\u53f7 ; \u524d\u9762\u6210\u529f\uff0c\u5219\u6267\u884c\u540e\u9762\u4e00\u6761\uff0c\u5426\u5219\uff0c\u4e0d\u6267\u884c\uff1a && \u524d\u9762\u5931\u8d25\uff0c\u5219\u540e\u4e00\u6761\u6267\u884c\uff1a || ls /proc && echo suss! || echo failed. \u4ee5\u4e0a\u547d\u4ee4\u80fd\u591f\u63d0\u793a\u547d\u540d\u6267\u884c\u6210\u529f\u6216\u8005\u5931\u8d25\u3002 \u7b49\u4ef7\u4e8e\uff1a if ls /proc ; then echo suss ; else echo file ; fi \u91cd\u5b9a\u5411\uff1a ls proc/*.c > list 2 > & 1 ; \u5c06\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u540c\u4e00\u6587\u4ef6 \u7b49\u4ef7\u4e8e\uff1a ls proc/*.c & > list \u6e05\u7a7a\u6587\u4ef6\uff1a ls proc/*.c & > list \u91cd\u5b9a\u5411\uff1a echo aa >> a.txt","title":"\u7ba1\u9053\u548c\u91cd\u5b9a\u5411"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_9","text":"\u542f\u52a8\u5e10\u53f7\u540e\u81ea\u52a8\u6267\u884c\u7684\u6587\u4ef6\u4e3a .profile\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\u53ef\u8bbe\u7f6e\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\u3002 \u5b89\u88c5\u7684\u8f6f\u4ef6\u8def\u5f84\u4e00\u822c\u9700\u8981\u52a0\u5165\u5230 path \u4e2d\uff1a PATH = $APPDIR :/opt/app/soft/bin: $PATH :/usr/local/bin: $TUXDIR /bin: $ORACLE_HOME /bin ; export PATH","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/01.%20%E6%96%87%E4%BB%B6%E5%8F%8A%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#bash","text":"\u5feb\u6377\u952e\uff1a Ctl-U \u5220\u9664\u5149\u6807\u5230\u884c\u9996\u7684\u6240\u6709\u5b57\u7b26,\u5728\u67d0\u4e9b\u8bbe\u7f6e\u4e0b,\u5220\u9664\u5168\u884c Ctl-W \u5220\u9664\u5f53\u524d\u5149\u6807\u5230\u524d\u8fb9\u7684\u6700\u8fd1\u4e00\u4e2a\u7a7a\u683c\u4e4b\u95f4\u7684\u5b57\u7b26 Ctl-H backspace,\u5220\u9664\u5149\u6807\u524d\u8fb9\u7684\u5b57\u7b26 Ctl-R \u5339\u914d\u6700\u76f8\u8fd1\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u8f93\u51fa","title":"Bash \u5feb\u6377\u8f93\u5165\u6216\u5220\u9664"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/","text":"find \u6587\u4ef6\u67e5\u627e \u67e5\u627e txt \u548c pdf \u6587\u4ef6\uff1a find . \\( -name \"*.txt\" -o -name \"*.pdf\" \\) -print \u6b63\u5219\u65b9\u5f0f\u67e5\u627e txt \u548c pdf \uff1a find . -regex \".*\\(\\.txt|\\.pdf\\) $ \" iregex \uff1a \u5ffd\u7565\u5927\u5c0f\u5199\u7684\u6b63\u5219 \u5426\u5b9a\u53c2\u6570 ,\u67e5\u627e\u6240\u6709\u975e txt \u6587\u672c\uff1a find . ! -name \"*.txt\" -print \u6307\u5b9a\u641c\u7d22\u6df1\u5ea6,\u6253\u5370\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\uff08\u6df1\u5ea6\u4e3a1\uff09\uff1a find . -maxdepth 1 -type f \u5b9a\u5236\u641c\u7d22 \u6309\u7c7b\u578b\u641c\u7d22 find . -type d -print //\u53ea\u5217\u51fa\u6240\u6709\u76ee\u5f55 find \u652f\u6301\u7684\u6587\u4ef6\u68c0\u7d22\u7c7b\u578b\u53ef\u4ee5\u533a\u5206\u666e\u901a\u6587\u4ef6\u548c\u7b26\u53f7\u94fe\u63a5\u3001\u76ee\u5f55\u7b49\uff0c\u4f46\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7 find \u7684\u7c7b\u578b\u533a\u5206\u51fa\u6765\u3002 file \u547d\u4ee4\u53ef\u4ee5\u68c0\u67e5\u6587\u4ef6\u5177\u4f53\u7c7b\u578b\u3002 \u6309\u65f6\u95f4\u641c\u7d22 -atime \u8bbf\u95ee\u65f6\u95f4 (\u5355\u4f4d\u662f\u5929\uff0c\u5206\u949f\u5355\u4f4d\u5219\u662f -amin \uff0c\u4ee5\u4e0b\u7c7b\u4f3c\uff09 -mtime \u4fee\u6539\u65f6\u95f4 \uff08\u5185\u5bb9\u88ab\u4fee\u6539\uff09 -ctime \u53d8\u5316\u65f6\u95f4 \uff08\u5143\u6570\u636e\u6216\u6743\u9650\u53d8\u5316\uff09 \u6700\u8fd1\u7b2c 7 \u5929\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime 7 -type f -print \u6700\u8fd1 7 \u5929\u5185\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime -7 -type f -print \u67e5\u8be2 7 \u5929\u524d\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime +7 type f -print \u6309\u5927\u5c0f\u641c\u7d22 \u5bfb\u627e\u5927\u4e8e 2k \u7684\u6587\u4ef6\uff1a find . -type f -size +2k \u6309\u6743\u9650\u67e5\u627e \u5bfb\u627e\u7528\u6237 weber \u6240\u62e5\u6709\u7684\u6587\u4ef6\uff1a find . -type f -user weber -print \u627e\u5230\u540e\u7684\u540e\u7eed\u52a8\u4f5c \u5220\u9664 \u5220\u9664\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u7684 swp \u6587\u4ef6\uff1a find . -type f -name \"*.swp\" -delete \u53e6\u4e00\u79cd\u8bed\u6cd5\uff1a find . type f -name \"*.swp\" | xargs rm \u6267\u884c\u52a8\u4f5c \u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6743\u53d8\u66f4\u4e3a weber\uff1a find . -type f -user root -exec chown weber {} \\; **{} \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5339\u914d\u7684\u6587\u4ef6\uff0c {} \u4f1a\u88ab\u66ff\u6362\u6210\u76f8\u5e94\u7684\u6587\u4ef6\u540d\u3002** \u7ed3\u5408\u591a\u4e2a\u547d\u4ee4 \u5982\u679c\u9700\u8981\u540e\u7eed\u6267\u884c\u591a\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u547d\u4ee4\u5199\u6210\u4e00\u4e2a\u811a\u672c\u3002\u7136\u540e -exec \u8c03\u7528\u65f6\u6267\u884c\u811a\u672c\u5373\u53ef\uff1a -exec ./commands.sh {} \\; grep \u6587\u672c\u641c\u7d22 grep match_patten file // \u9ed8\u8ba4\u8bbf\u95ee\u5339\u914d\u884c \u5e38\u7528\u53c2\u6570\uff1a -o \u53ea\u8f93\u51fa\u5339\u914d\u7684\u6587\u672c\u884c -v \u53ea\u8f93\u51fa\u6ca1\u6709\u5339\u914d\u7684\u6587\u672c\u884c -c \u7edf\u8ba1\u6587\u4ef6\u4e2d\u5305\u542b\u6587\u672c\u7684\u6b21\u6570 -n \u6253\u5370\u5339\u914d\u7684\u884c\u53f7 -i \u641c\u7d22\u65f6\u5ffd\u7565\u5927\u5c0f\u5199 -l \u53ea\u6253\u5370\u6587\u4ef6\u540d \u5728\u591a\u7ea7\u76ee\u5f55\u4e2d\u5bf9\u6587\u672c\u9012\u5f52\u641c\u7d22\uff08\u7a0b\u5e8f\u5458\u641c\u4ee3\u7801\u7684\u6700\u7231\uff09\uff1a grep \"class\" . -R -n \u5339\u914d\u591a\u4e2a\u6a21\u5f0f\uff1a grep -e \"class\" -e \"vitural\" file xargs \u547d\u4ee4\u884c\u53c2\u6570\u8f6c\u6362 xargs \u80fd\u591f\u5c06\u8f93\u5165\u6570\u636e\u8f6c\u5316\u4e3a\u7279\u5b9a\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1b\u8fd9\u6837\uff0c\u53ef\u4ee5\u914d\u5408\u5f88\u591a\u547d\u4ee4\u6765\u7ec4\u5408\u4f7f\u7528\u3002\u6bd4\u5982 grep \uff0c\u6bd4\u5982 find \u3002 \u5c06\u591a\u884c\u8f93\u51fa\u8f6c\u5316\u4e3a\u5355\u884c\u8f93\u51fa\uff1a cat file.txt | xargs \u5c06\u5355\u884c\u8f6c\u5316\u4e3a\u591a\u884c\u8f93\u51fa\uff1a cat single.txt | xargs -n 3 ? sort \u6392\u5e8f \u5e38\u7528\u53c2\u6570\uff1a -n \u6309\u6570\u5b57\u8fdb\u884c\u6392\u5e8f -d \u6309\u5b57\u5178\u8fdb\u884c\u6392\u5e8f -r \u9006\u5e8f\u6392\u5e8f -k N \u6307\u5b9a\u6309\u7b2c N \u5217\u6392\u5e8f uniq \u6d88\u9664\u91cd\u590d\u884c \u6d88\u9664\u91cd\u590d\u884c sort unsort.txt | uniq \u7edf\u8ba1\u5404\u884c\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 sort unsort.txt | uniq -c \u627e\u51fa\u91cd\u590d\u884c sort unsort.txt | uniq -d wc \u7edf\u8ba1\u884c\u548c\u5b57\u7b26\u7684\u5de5\u5177 wc -l filename //\u7edf\u8ba1\u884c\u6570 wc -w filename //\u7edf\u8ba1\u5355\u8bcd\u6570 wc -c filename //\u7edf\u8ba1\u5b57\u7b26\u6570","title":"`find`\u6587\u4ef6\u67e5\u627e"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#find","text":"\u67e5\u627e txt \u548c pdf \u6587\u4ef6\uff1a find . \\( -name \"*.txt\" -o -name \"*.pdf\" \\) -print \u6b63\u5219\u65b9\u5f0f\u67e5\u627e txt \u548c pdf \uff1a find . -regex \".*\\(\\.txt|\\.pdf\\) $ \" iregex \uff1a \u5ffd\u7565\u5927\u5c0f\u5199\u7684\u6b63\u5219 \u5426\u5b9a\u53c2\u6570 ,\u67e5\u627e\u6240\u6709\u975e txt \u6587\u672c\uff1a find . ! -name \"*.txt\" -print \u6307\u5b9a\u641c\u7d22\u6df1\u5ea6,\u6253\u5370\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\uff08\u6df1\u5ea6\u4e3a1\uff09\uff1a find . -maxdepth 1 -type f","title":"find\u6587\u4ef6\u67e5\u627e"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_1","text":"","title":"\u5b9a\u5236\u641c\u7d22"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_2","text":"find . -type d -print //\u53ea\u5217\u51fa\u6240\u6709\u76ee\u5f55 find \u652f\u6301\u7684\u6587\u4ef6\u68c0\u7d22\u7c7b\u578b\u53ef\u4ee5\u533a\u5206\u666e\u901a\u6587\u4ef6\u548c\u7b26\u53f7\u94fe\u63a5\u3001\u76ee\u5f55\u7b49\uff0c\u4f46\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7 find \u7684\u7c7b\u578b\u533a\u5206\u51fa\u6765\u3002 file \u547d\u4ee4\u53ef\u4ee5\u68c0\u67e5\u6587\u4ef6\u5177\u4f53\u7c7b\u578b\u3002","title":"\u6309\u7c7b\u578b\u641c\u7d22"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_3","text":"-atime \u8bbf\u95ee\u65f6\u95f4 (\u5355\u4f4d\u662f\u5929\uff0c\u5206\u949f\u5355\u4f4d\u5219\u662f -amin \uff0c\u4ee5\u4e0b\u7c7b\u4f3c\uff09 -mtime \u4fee\u6539\u65f6\u95f4 \uff08\u5185\u5bb9\u88ab\u4fee\u6539\uff09 -ctime \u53d8\u5316\u65f6\u95f4 \uff08\u5143\u6570\u636e\u6216\u6743\u9650\u53d8\u5316\uff09 \u6700\u8fd1\u7b2c 7 \u5929\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime 7 -type f -print \u6700\u8fd1 7 \u5929\u5185\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime -7 -type f -print \u67e5\u8be2 7 \u5929\u524d\u88ab\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u6587\u4ef6\uff1a find . -atime +7 type f -print","title":"\u6309\u65f6\u95f4\u641c\u7d22"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_4","text":"\u5bfb\u627e\u5927\u4e8e 2k \u7684\u6587\u4ef6\uff1a find . -type f -size +2k","title":"\u6309\u5927\u5c0f\u641c\u7d22"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_5","text":"\u5bfb\u627e\u7528\u6237 weber \u6240\u62e5\u6709\u7684\u6587\u4ef6\uff1a find . -type f -user weber -print","title":"\u6309\u6743\u9650\u67e5\u627e"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_6","text":"","title":"\u627e\u5230\u540e\u7684\u540e\u7eed\u52a8\u4f5c"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_7","text":"\u5220\u9664\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u7684 swp \u6587\u4ef6\uff1a find . -type f -name \"*.swp\" -delete \u53e6\u4e00\u79cd\u8bed\u6cd5\uff1a find . type f -name \"*.swp\" | xargs rm","title":"\u5220\u9664"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_8","text":"\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6743\u53d8\u66f4\u4e3a weber\uff1a find . -type f -user root -exec chown weber {} \\; **{} \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5339\u914d\u7684\u6587\u4ef6\uff0c {} \u4f1a\u88ab\u66ff\u6362\u6210\u76f8\u5e94\u7684\u6587\u4ef6\u540d\u3002**","title":"\u6267\u884c\u52a8\u4f5c"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_9","text":"\u5982\u679c\u9700\u8981\u540e\u7eed\u6267\u884c\u591a\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a\u547d\u4ee4\u5199\u6210\u4e00\u4e2a\u811a\u672c\u3002\u7136\u540e -exec \u8c03\u7528\u65f6\u6267\u884c\u811a\u672c\u5373\u53ef\uff1a -exec ./commands.sh {} \\;","title":"\u7ed3\u5408\u591a\u4e2a\u547d\u4ee4"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#grep","text":"grep match_patten file // \u9ed8\u8ba4\u8bbf\u95ee\u5339\u914d\u884c \u5e38\u7528\u53c2\u6570\uff1a -o \u53ea\u8f93\u51fa\u5339\u914d\u7684\u6587\u672c\u884c -v \u53ea\u8f93\u51fa\u6ca1\u6709\u5339\u914d\u7684\u6587\u672c\u884c -c \u7edf\u8ba1\u6587\u4ef6\u4e2d\u5305\u542b\u6587\u672c\u7684\u6b21\u6570 -n \u6253\u5370\u5339\u914d\u7684\u884c\u53f7 -i \u641c\u7d22\u65f6\u5ffd\u7565\u5927\u5c0f\u5199 -l \u53ea\u6253\u5370\u6587\u4ef6\u540d \u5728\u591a\u7ea7\u76ee\u5f55\u4e2d\u5bf9\u6587\u672c\u9012\u5f52\u641c\u7d22\uff08\u7a0b\u5e8f\u5458\u641c\u4ee3\u7801\u7684\u6700\u7231\uff09\uff1a grep \"class\" . -R -n \u5339\u914d\u591a\u4e2a\u6a21\u5f0f\uff1a grep -e \"class\" -e \"vitural\" file","title":"grep\u6587\u672c\u641c\u7d22"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#xargs","text":"xargs \u80fd\u591f\u5c06\u8f93\u5165\u6570\u636e\u8f6c\u5316\u4e3a\u7279\u5b9a\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1b\u8fd9\u6837\uff0c\u53ef\u4ee5\u914d\u5408\u5f88\u591a\u547d\u4ee4\u6765\u7ec4\u5408\u4f7f\u7528\u3002\u6bd4\u5982 grep \uff0c\u6bd4\u5982 find \u3002 \u5c06\u591a\u884c\u8f93\u51fa\u8f6c\u5316\u4e3a\u5355\u884c\u8f93\u51fa\uff1a cat file.txt | xargs \u5c06\u5355\u884c\u8f6c\u5316\u4e3a\u591a\u884c\u8f93\u51fa\uff1a cat single.txt | xargs -n 3 ?","title":"xargs\u547d\u4ee4\u884c\u53c2\u6570\u8f6c\u6362"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#sort","text":"\u5e38\u7528\u53c2\u6570\uff1a -n \u6309\u6570\u5b57\u8fdb\u884c\u6392\u5e8f -d \u6309\u5b57\u5178\u8fdb\u884c\u6392\u5e8f -r \u9006\u5e8f\u6392\u5e8f -k N \u6307\u5b9a\u6309\u7b2c N \u5217\u6392\u5e8f","title":"sort\u6392\u5e8f"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#uniq","text":"\u6d88\u9664\u91cd\u590d\u884c sort unsort.txt | uniq \u7edf\u8ba1\u5404\u884c\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 sort unsort.txt | uniq -c \u627e\u51fa\u91cd\u590d\u884c sort unsort.txt | uniq -d","title":"uniq\u6d88\u9664\u91cd\u590d\u884c"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/02.%20%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#wc","text":"wc -l filename //\u7edf\u8ba1\u884c\u6570 wc -w filename //\u7edf\u8ba1\u5355\u8bcd\u6570 wc -c filename //\u7edf\u8ba1\u5b57\u7b26\u6570","title":"wc\u7edf\u8ba1\u884c\u548c\u5b57\u7b26\u7684\u5de5\u5177"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/","text":"\u67e5\u770b\u78c1\u76d8\u7a7a\u95f4 \u67e5\u770b\u78c1\u76d8\u7a7a\u95f4\u5229\u7528\u5927\u5c0f\uff1a df -h -h: human \u7f29\u5199\uff0c\u4ee5\u6613\u8bfb\u7684\u65b9\u5f0f\u663e\u793a\u7ed3\u679c\uff08\u5373\u5e26\u5355\u4f4d\uff1a\u6bd4\u5982 M/G\uff0c\u5982\u679c\u4e0d\u52a0\u8fd9\u4e2a\u53c2\u6570\uff0c\u663e\u793a\u7684\u6570\u5b57\u4ee5 B \u4e3a\u5355\u4f4d\uff09 df -h \u6587\u4ef6\u7cfb\u7edf \u5bb9\u91cf \u5df2\u7528 \u53ef\u7528 \u5df2\u7528% \u6302\u8f7d\u70b9 udev 1 .9G 0 1 .9G 0 % /dev tmpfs 390M 2 .0M 388M 1 % /run /dev/sda5 68G 13G 52G 20 % / tmpfs 2 .0G 0 2 .0G 0 % /dev/shm tmpfs 5 .0M 4 .0K 5 .0M 1 % /run/lock tmpfs 2 .0G 0 2 .0G 0 % /sys/fs/cgroup /dev/loop1 128K 128K 0 100 % /snap/bare/5 /dev/loop3 217M 217M 0 100 % /snap/code/78 /dev/loop2 100M 100M 0 100 % /snap/core/11993 /dev/loop4 100M 100M 0 100 % /snap/core/11606 /dev/loop0 223M 223M 0 100 % /snap/code/82 /dev/loop6 56M 56M 0 100 % /snap/core18/2253 /dev/loop8 66M 66M 0 100 % /snap/gtk-common-themes/1519 /dev/loop9 219M 219M 0 100 % /snap/gnome-3-34-1804/72 /dev/loop5 56M 56M 0 100 % /snap/core18/2246 /dev/loop10 51M 51M 0 100 % /snap/snap-store/547 /dev/loop12 66M 66M 0 100 % /snap/gtk-common-themes/1515 /dev/loop13 33M 33M 0 100 % /snap/snapd/13640 /dev/sda1 511M 4 .0K 511M 1 % /boot/efi tmpfs 390M 44K 390M 1 % /run/user/1000 /dev/loop15 43M 43M 0 100 % /snap/snapd/14066 /dev/loop14 62M 62M 0 100 % /snap/core20/1242 /dev/loop16 219M 219M 0 100 % /snap/gnome-3-34-1804/77 /dev/loop7 55M 55M 0 100 % /snap/snap-store/558 /dev/loop17 248M 248M 0 100 % /snap/gnome-3-38-2004/87 \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\uff1a du -sh -h \u4eba\u6027\u5316\u663e\u793a -s \u9012\u5f52\u6574\u4e2a\u76ee\u5f55\u7684\u5927\u5c0f du -sh 65M \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u5b50\u6587\u4ef6\u5939\u6392\u5e8f\u540e\u7684\u5927\u5c0f\uff1a for i in ` ls ` ; do du -sh $i ; done | sort \u6216\u8005\uff1a du -sh ` ls ` | sort \u6253\u5305/\u538b\u7f29 \u5728 Linux \u4e2d\u6253\u5305\u548c\u538b\u7f29\u662f\u5206\u4e24\u6b65\u6765\u5b9e\u73b0\u7684\u3002 \u6253\u5305 \u6253\u5305\u662f\u5c06\u591a\u4e2a\u6587\u4ef6\u5f52\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\uff1a tar -cvf etc.tar /etc //\u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29\uff01 \u538b\u7f29 gzip filename //\u751f\u6210 filename.gz \u89e3\u5305/\u89e3\u538b\u7f29 \u89e3\u5305 tar -xvf demo.tar \u89e3\u538b\u540e\u7f00\u4e3a .tar.gz \u7684\u6587\u4ef6\uff1a \u5148\u89e3\u538b\u7f29\uff0c\u751f\u6210 **.tar\uff1a gzip -d demo.tar.gz \u89e3\u5305\uff1a tar -xvf demo.tar","title":"\u67e5\u770b\u78c1\u76d8\u7a7a\u95f4"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_1","text":"\u67e5\u770b\u78c1\u76d8\u7a7a\u95f4\u5229\u7528\u5927\u5c0f\uff1a df -h -h: human \u7f29\u5199\uff0c\u4ee5\u6613\u8bfb\u7684\u65b9\u5f0f\u663e\u793a\u7ed3\u679c\uff08\u5373\u5e26\u5355\u4f4d\uff1a\u6bd4\u5982 M/G\uff0c\u5982\u679c\u4e0d\u52a0\u8fd9\u4e2a\u53c2\u6570\uff0c\u663e\u793a\u7684\u6570\u5b57\u4ee5 B \u4e3a\u5355\u4f4d\uff09 df -h \u6587\u4ef6\u7cfb\u7edf \u5bb9\u91cf \u5df2\u7528 \u53ef\u7528 \u5df2\u7528% \u6302\u8f7d\u70b9 udev 1 .9G 0 1 .9G 0 % /dev tmpfs 390M 2 .0M 388M 1 % /run /dev/sda5 68G 13G 52G 20 % / tmpfs 2 .0G 0 2 .0G 0 % /dev/shm tmpfs 5 .0M 4 .0K 5 .0M 1 % /run/lock tmpfs 2 .0G 0 2 .0G 0 % /sys/fs/cgroup /dev/loop1 128K 128K 0 100 % /snap/bare/5 /dev/loop3 217M 217M 0 100 % /snap/code/78 /dev/loop2 100M 100M 0 100 % /snap/core/11993 /dev/loop4 100M 100M 0 100 % /snap/core/11606 /dev/loop0 223M 223M 0 100 % /snap/code/82 /dev/loop6 56M 56M 0 100 % /snap/core18/2253 /dev/loop8 66M 66M 0 100 % /snap/gtk-common-themes/1519 /dev/loop9 219M 219M 0 100 % /snap/gnome-3-34-1804/72 /dev/loop5 56M 56M 0 100 % /snap/core18/2246 /dev/loop10 51M 51M 0 100 % /snap/snap-store/547 /dev/loop12 66M 66M 0 100 % /snap/gtk-common-themes/1515 /dev/loop13 33M 33M 0 100 % /snap/snapd/13640 /dev/sda1 511M 4 .0K 511M 1 % /boot/efi tmpfs 390M 44K 390M 1 % /run/user/1000 /dev/loop15 43M 43M 0 100 % /snap/snapd/14066 /dev/loop14 62M 62M 0 100 % /snap/core20/1242 /dev/loop16 219M 219M 0 100 % /snap/gnome-3-34-1804/77 /dev/loop7 55M 55M 0 100 % /snap/snap-store/558 /dev/loop17 248M 248M 0 100 % /snap/gnome-3-38-2004/87 \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\uff1a du -sh -h \u4eba\u6027\u5316\u663e\u793a -s \u9012\u5f52\u6574\u4e2a\u76ee\u5f55\u7684\u5927\u5c0f du -sh 65M \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u5b50\u6587\u4ef6\u5939\u6392\u5e8f\u540e\u7684\u5927\u5c0f\uff1a for i in ` ls ` ; do du -sh $i ; done | sort \u6216\u8005\uff1a du -sh ` ls ` | sort","title":"\u67e5\u770b\u78c1\u76d8\u7a7a\u95f4"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_2","text":"\u5728 Linux \u4e2d\u6253\u5305\u548c\u538b\u7f29\u662f\u5206\u4e24\u6b65\u6765\u5b9e\u73b0\u7684\u3002","title":"\u6253\u5305/\u538b\u7f29"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_3","text":"\u6253\u5305\u662f\u5c06\u591a\u4e2a\u6587\u4ef6\u5f52\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\uff1a tar -cvf etc.tar /etc //\u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29\uff01","title":"\u6253\u5305"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_4","text":"gzip filename //\u751f\u6210 filename.gz","title":"\u538b\u7f29"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_5","text":"","title":"\u89e3\u5305/\u89e3\u538b\u7f29"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/03.%20%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/#_6","text":"tar -xvf demo.tar \u89e3\u538b\u540e\u7f00\u4e3a .tar.gz \u7684\u6587\u4ef6\uff1a \u5148\u89e3\u538b\u7f29\uff0c\u751f\u6210 **.tar\uff1a gzip -d demo.tar.gz \u89e3\u5305\uff1a tar -xvf demo.tar","title":"\u89e3\u5305"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/04.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/","text":"\u4f7f\u7528\u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be2\u7a0b\u5e8f\u5f53\u524d\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u6216\u7ec8\u6b62\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u4efb\u4f55\u8fdb\u7a0b\u90fd\u4e0e\u6587\u4ef6\u5173\u8054\uff1b\u6211\u4eec\u4f1a\u7528\u5230 lsof \u5de5\u5177\uff08list opened files\uff09\uff0c\u4f5c\u7528\u662f\u5217\u4e3e\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u88ab\u6253\u5f00\u7684\u6587\u4ef6\u3002\u5728 Linux \u73af\u5883\u4e2d\uff0c\u4efb\u4f55\u4e8b\u7269\u90fd\u662f\u6587\u4ef6\uff0c\u8bbe\u5907\u662f\u6587\u4ef6\uff0c\u76ee\u5f55\u662f\u6587\u4ef6\uff0c\u751a\u81f3 sockets \u4e5f\u662f\u6587\u4ef6\u3002\u7528\u597d lsof \u547d\u4ee4\uff0c\u5bf9\u65e5\u5e38\u7684 Linux \u7ba1\u7406\u975e\u5e38\u6709\u5e2e\u52a9\u3002 \u67e5\u8be2\u8fdb\u7a0b \u67e5\u8be2\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4fe1\u606f\uff1a ps -ef \u67e5\u8be2\u5f52\u5c5e\u4e8e\u7528\u6237 colin115 \u7684\u8fdb\u7a0b\uff1a ps -ef | grep colin115 ps -lu colin115 pgrep \u67e5\u8be2\u8fdb\u7a0b ID\uff08\u9002\u5408\u53ea\u8bb0\u5f97\u90e8\u5206\u8fdb\u7a0b\u5b57\u6bb5\uff09\u3002 \u67e5\u8be2\u8fdb\u7a0b\u540d\u4e2d\u542b\u6709 re \u7684\u8fdb\u7a0b\uff1a pgrep -l re 2 kthreadd 29 oom_reaper 87 devfreq_wq 93 ecryptfs-kthrea 431 vmware-vmblock- 722 systemd-resolve 2058 at-spi2-registr 2131 gsd-screensaver 2245 snap-store 2310 evolution-addre \u4ee5\u5b8c\u6574\u7684\u683c\u5f0f\u663e\u793a\u6240\u6709\u7684\u8fdb\u7a0b\uff1a ps -ajx \u663e\u793a\u8fdb\u7a0b\u4fe1\u606f\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0\uff1a top \u67e5\u770b\u7aef\u53e3\u5360\u7528\u7684\u8fdb\u7a0b\u72b6\u6001\uff1a lsof -i:3306 \u67e5\u770b\u7528\u6237 username \u7684\u8fdb\u7a0b\u6240\u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -u username \u67e5\u8be2 init \u8fdb\u7a0b\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -c init \u67e5\u8be2\u6307\u5b9a\u7684\u8fdb\u7a0b ID(23295) \u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -p 23295 \u67e5\u8be2\u6307\u5b9a\u76ee\u5f55\u4e0b\u88ab\u8fdb\u7a0b\u5f00\u542f\u7684\u6587\u4ef6\uff08\u4f7f\u7528 +D \u9012\u5f52\u76ee\u5f55\uff09\uff1a lsof +d mydir/ \u7ec8\u6b62\u8fdb\u7a0b \u6740\u6b7b\u6307\u5b9a PID \u7684\u8fdb\u7a0b (PID \u4e3a Process ID)\uff1a kill PID \u6740\u6b7b\u76f8\u5173\u8fdb\u7a0b\uff1a kill -9 3334 \u6740\u6b7b job \u5de5\u4f5c (job \u4e3a job number)\uff1a kill %job \u8fdb\u7a0b\u76d1\u63a7 \u67e5\u770b\u7cfb\u7edf\u4e2d\u4f7f\u7528 CPU\u3001\u4f7f\u7528\u5185\u5b58\u6700\u591a\u7684\u8fdb\u7a0b\uff1a \uff1f","title":"04. \u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/04.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_1","text":"\u67e5\u8be2\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4fe1\u606f\uff1a ps -ef \u67e5\u8be2\u5f52\u5c5e\u4e8e\u7528\u6237 colin115 \u7684\u8fdb\u7a0b\uff1a ps -ef | grep colin115 ps -lu colin115 pgrep \u67e5\u8be2\u8fdb\u7a0b ID\uff08\u9002\u5408\u53ea\u8bb0\u5f97\u90e8\u5206\u8fdb\u7a0b\u5b57\u6bb5\uff09\u3002 \u67e5\u8be2\u8fdb\u7a0b\u540d\u4e2d\u542b\u6709 re \u7684\u8fdb\u7a0b\uff1a pgrep -l re 2 kthreadd 29 oom_reaper 87 devfreq_wq 93 ecryptfs-kthrea 431 vmware-vmblock- 722 systemd-resolve 2058 at-spi2-registr 2131 gsd-screensaver 2245 snap-store 2310 evolution-addre \u4ee5\u5b8c\u6574\u7684\u683c\u5f0f\u663e\u793a\u6240\u6709\u7684\u8fdb\u7a0b\uff1a ps -ajx \u663e\u793a\u8fdb\u7a0b\u4fe1\u606f\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0\uff1a top \u67e5\u770b\u7aef\u53e3\u5360\u7528\u7684\u8fdb\u7a0b\u72b6\u6001\uff1a lsof -i:3306 \u67e5\u770b\u7528\u6237 username \u7684\u8fdb\u7a0b\u6240\u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -u username \u67e5\u8be2 init \u8fdb\u7a0b\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -c init \u67e5\u8be2\u6307\u5b9a\u7684\u8fdb\u7a0b ID(23295) \u6253\u5f00\u7684\u6587\u4ef6\uff1a lsof -p 23295 \u67e5\u8be2\u6307\u5b9a\u76ee\u5f55\u4e0b\u88ab\u8fdb\u7a0b\u5f00\u542f\u7684\u6587\u4ef6\uff08\u4f7f\u7528 +D \u9012\u5f52\u76ee\u5f55\uff09\uff1a lsof +d mydir/","title":"\u67e5\u8be2\u8fdb\u7a0b"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/04.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_2","text":"\u6740\u6b7b\u6307\u5b9a PID \u7684\u8fdb\u7a0b (PID \u4e3a Process ID)\uff1a kill PID \u6740\u6b7b\u76f8\u5173\u8fdb\u7a0b\uff1a kill -9 3334 \u6740\u6b7b job \u5de5\u4f5c (job \u4e3a job number)\uff1a kill %job","title":"\u7ec8\u6b62\u8fdb\u7a0b"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/04.%20%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_3","text":"\u67e5\u770b\u7cfb\u7edf\u4e2d\u4f7f\u7528 CPU\u3001\u4f7f\u7528\u5185\u5b58\u6700\u591a\u7684\u8fdb\u7a0b\uff1a \uff1f","title":"\u8fdb\u7a0b\u76d1\u63a7"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/05.%20%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/","text":"\u67e5\u8be2\u7f51\u7edc\u670d\u52a1\u548c\u7aef\u53e3 netstat \u547d\u4ee4\u7528\u4e8e\u663e\u793a\u5404\u79cd\u7f51\u7edc\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u7f51\u7edc\u8fde\u63a5\uff0c\u8def\u7531\u8868\uff0c\u63a5\u53e3\u72b6\u6001 (Interface Statistics)\uff0cmasquerade \u8fde\u63a5\uff0c\u591a\u64ad\u6210\u5458 (Multicast Memberships) \u7b49\u7b49\u3002 \u5217\u51fa\u6240\u6709\u7aef\u53e3 (\u5305\u62ec\u76d1\u542c\u548c\u672a\u76d1\u542c\u7684)\uff1a netstat -a \u5217\u51fa\u6240\u6709 tcp \u7aef\u53e3\uff1a netstat -at \u6fc0\u6d3bInternet\u8fde\u63a5 ( \u670d\u52a1\u5668\u548c\u5df2\u5efa\u7acb\u8fde\u63a5\u7684 ) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 localhost:domain 0 .0.0.0:* LISTEN tcp 0 0 0 .0.0.0:ssh 0 .0.0.0:* LISTEN tcp 0 0 localhost:ipp 0 .0.0.0:* LISTEN tcp 0 0 localhost:6010 0 .0.0.0:* LISTEN tcp 0 36 ubuntu:ssh 192 .168.232.1:1611 ESTABLISHED tcp 0 0 ubuntu:ssh 192 .168.232.1:1612 ESTABLISHED tcp6 0 0 [ :: ] :ssh [ :: ] :* LISTEN tcp6 0 0 ip6-localhost:ipp [ :: ] :* LISTEN tcp6 0 0 ip6-localhost:6010 [ :: ] :* LISTEN \u5217\u51fa\u6240\u6709\u6709\u76d1\u542c\u7684\u670d\u52a1\u72b6\u6001\uff1a netstat -l \u4f7f\u7528 netstat \u5de5\u5177\u67e5\u8be2\u7aef\u53e3\uff1a","title":"\u67e5\u8be2\u7f51\u7edc\u670d\u52a1\u548c\u7aef\u53e3"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/05.%20%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/#_1","text":"netstat \u547d\u4ee4\u7528\u4e8e\u663e\u793a\u5404\u79cd\u7f51\u7edc\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u7f51\u7edc\u8fde\u63a5\uff0c\u8def\u7531\u8868\uff0c\u63a5\u53e3\u72b6\u6001 (Interface Statistics)\uff0cmasquerade \u8fde\u63a5\uff0c\u591a\u64ad\u6210\u5458 (Multicast Memberships) \u7b49\u7b49\u3002 \u5217\u51fa\u6240\u6709\u7aef\u53e3 (\u5305\u62ec\u76d1\u542c\u548c\u672a\u76d1\u542c\u7684)\uff1a netstat -a \u5217\u51fa\u6240\u6709 tcp \u7aef\u53e3\uff1a netstat -at \u6fc0\u6d3bInternet\u8fde\u63a5 ( \u670d\u52a1\u5668\u548c\u5df2\u5efa\u7acb\u8fde\u63a5\u7684 ) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 localhost:domain 0 .0.0.0:* LISTEN tcp 0 0 0 .0.0.0:ssh 0 .0.0.0:* LISTEN tcp 0 0 localhost:ipp 0 .0.0.0:* LISTEN tcp 0 0 localhost:6010 0 .0.0.0:* LISTEN tcp 0 36 ubuntu:ssh 192 .168.232.1:1611 ESTABLISHED tcp 0 0 ubuntu:ssh 192 .168.232.1:1612 ESTABLISHED tcp6 0 0 [ :: ] :ssh [ :: ] :* LISTEN tcp6 0 0 ip6-localhost:ipp [ :: ] :* LISTEN tcp6 0 0 ip6-localhost:6010 [ :: ] :* LISTEN \u5217\u51fa\u6240\u6709\u6709\u76d1\u542c\u7684\u670d\u52a1\u72b6\u6001\uff1a netstat -l \u4f7f\u7528 netstat \u5de5\u5177\u67e5\u8be2\u7aef\u53e3\uff1a","title":"\u67e5\u8be2\u7f51\u7edc\u670d\u52a1\u548c\u7aef\u53e3"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/","text":"\u7528\u6237 \u6dfb\u52a0\u7528\u6237 useradd -m username \u8be5\u547d\u4ee4\u4e3a\u7528\u6237\u521b\u5efa\u76f8\u5e94\u7684\u5e10\u53f7\u548c\u7528\u6237\u76ee\u5f55/home/username\uff1b \u7528\u6237\u6dfb\u52a0\u4e4b\u540e\uff0c\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5bc6\u7801\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u521b\u5efa\uff1a passwd username \u5220\u9664\u7528\u6237 userdel -r username \u4e0d\u5e26\u9009\u9879\u4f7f\u7528 userdel \uff0c\u53ea\u4f1a\u5220\u9664\u7528\u6237\u3002\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u5c06\u4ecd\u4f1a\u5728/home\u76ee\u5f55\u4e0b\u3002\u8981\u5b8c\u5168\u7684\u5220\u9664\u7528\u6237\u4fe1\u606f\uff0c\u4f7f\u7528 -r \u9009\u9879\u3002 \u8d26\u53f7\u5207\u6362 \u767b\u5f55\u5e10\u53f7\u4e3a userA \u7528\u6237\u72b6\u6001\u4e0b\uff0c\u5207\u6362\u5230 userB \u7528\u6237\u5e10\u53f7\u5de5\u4f5c\uff1a su userB \u7528\u6237\u7684\u7ec4 \u5c06\u7528\u6237\u52a0\u5165\u5230\u7ec4 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6dfb\u52a0\u7528\u6237\u64cd\u4f5c\u4e5f\u4f1a\u76f8\u5e94\u7684\u589e\u52a0\u4e00\u4e2a\u540c\u540d\u7684\u7ec4\uff0c\u7528\u6237\u5c5e\u4e8e\u540c\u540d\u7ec4\uff1b \u67e5\u770b\u5f53\u524d\u7528\u6237\u6240\u5c5e\u7684\u7ec4\uff1a groups \u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u5c5e\u4e8e\u591a\u4e2a\u7ec4\uff0c\u5c06\u7528\u6237\u52a0\u5165\u5230\u7ec4\uff1a usermod -G groupname username \u53d8\u66f4\u7528\u6237\u6240\u5c5e\u7684\u6839\u7ec4\uff08\u5c06\u7528\u52a0\u5165\u5230\u65b0\u7684\u7ec4\uff0c\u5e76\u4ece\u539f\u6709\u7684\u7ec4\u4e2d\u9664\u53bb\uff09\uff1a usermod -g groupname username \u67e5\u770b\u7cfb\u7edf\u6240\u6709\u7ec4 \u7cfb\u7edf\u7684\u6240\u6709\u7528\u6237\u53ca\u6240\u6709\u7ec4\u4fe1\u606f\u5206\u522b\u8bb0\u5f55\u5728\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff1a/etc/passwd , /etc/group \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5bf9\u6240\u6709\u7528\u6237\u53ef\u8bfb\u3002 \u67e5\u770b\u6240\u6709\u7528\u6237\u53ca\u6743\u9650\uff1a more /etc/passwd \u67e5\u770b\u6240\u6709\u7684\u7528\u6237\u7ec4\u53ca\u6743\u9650\uff1a more /etc/group","title":"\u7528\u6237"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_1","text":"","title":"\u7528\u6237"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_2","text":"useradd -m username \u8be5\u547d\u4ee4\u4e3a\u7528\u6237\u521b\u5efa\u76f8\u5e94\u7684\u5e10\u53f7\u548c\u7528\u6237\u76ee\u5f55/home/username\uff1b \u7528\u6237\u6dfb\u52a0\u4e4b\u540e\uff0c\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5bc6\u7801\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u521b\u5efa\uff1a passwd username","title":"\u6dfb\u52a0\u7528\u6237"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_3","text":"userdel -r username \u4e0d\u5e26\u9009\u9879\u4f7f\u7528 userdel \uff0c\u53ea\u4f1a\u5220\u9664\u7528\u6237\u3002\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u5c06\u4ecd\u4f1a\u5728/home\u76ee\u5f55\u4e0b\u3002\u8981\u5b8c\u5168\u7684\u5220\u9664\u7528\u6237\u4fe1\u606f\uff0c\u4f7f\u7528 -r \u9009\u9879\u3002","title":"\u5220\u9664\u7528\u6237"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_4","text":"\u767b\u5f55\u5e10\u53f7\u4e3a userA \u7528\u6237\u72b6\u6001\u4e0b\uff0c\u5207\u6362\u5230 userB \u7528\u6237\u5e10\u53f7\u5de5\u4f5c\uff1a su userB","title":"\u8d26\u53f7\u5207\u6362"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_5","text":"","title":"\u7528\u6237\u7684\u7ec4"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_6","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6dfb\u52a0\u7528\u6237\u64cd\u4f5c\u4e5f\u4f1a\u76f8\u5e94\u7684\u589e\u52a0\u4e00\u4e2a\u540c\u540d\u7684\u7ec4\uff0c\u7528\u6237\u5c5e\u4e8e\u540c\u540d\u7ec4\uff1b \u67e5\u770b\u5f53\u524d\u7528\u6237\u6240\u5c5e\u7684\u7ec4\uff1a groups \u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u5c5e\u4e8e\u591a\u4e2a\u7ec4\uff0c\u5c06\u7528\u6237\u52a0\u5165\u5230\u7ec4\uff1a usermod -G groupname username \u53d8\u66f4\u7528\u6237\u6240\u5c5e\u7684\u6839\u7ec4\uff08\u5c06\u7528\u52a0\u5165\u5230\u65b0\u7684\u7ec4\uff0c\u5e76\u4ece\u539f\u6709\u7684\u7ec4\u4e2d\u9664\u53bb\uff09\uff1a usermod -g groupname username","title":"\u5c06\u7528\u6237\u52a0\u5165\u5230\u7ec4"},{"location":"Linux/Linux%E5%9F%BA%E7%A1%80/06.%20%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/#_7","text":"\u7cfb\u7edf\u7684\u6240\u6709\u7528\u6237\u53ca\u6240\u6709\u7ec4\u4fe1\u606f\u5206\u522b\u8bb0\u5f55\u5728\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff1a/etc/passwd , /etc/group \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5bf9\u6240\u6709\u7528\u6237\u53ef\u8bfb\u3002 \u67e5\u770b\u6240\u6709\u7528\u6237\u53ca\u6743\u9650\uff1a more /etc/passwd \u67e5\u770b\u6240\u6709\u7684\u7528\u6237\u7ec4\u53ca\u6743\u9650\uff1a more /etc/group","title":"\u67e5\u770b\u7cfb\u7edf\u6240\u6709\u7ec4"},{"location":"Programming/00.%20%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B/","text":"\u4ec0\u4e48\u662f\u7f16\u7a0b \u7f16\u7a0b\u662f\u7f16\u5b9a \u7a0b\u5e8f \u7684\u4e2d\u6587\u7b80\u79f0\uff0c\u5c31\u662f\u8ba9 \u8ba1\u7b97\u673a \u4ee3\u7801\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\uff0c\u5bf9\u67d0\u4e2a\u8ba1\u7b97\u4f53\u7cfb\u89c4\u5b9a\u4e00\u5b9a\u7684\u8fd0\u7b97\u65b9\u5f0f\uff0c\u4f7f\u8ba1\u7b97\u4f53\u7cfb\u6309\u7167\u8be5\u8ba1\u7b97\u65b9\u5f0f\u8fd0\u884c\uff0c\u5e76\u6700\u7ec8\u5f97\u5230\u76f8\u5e94\u7ed3\u679c\u7684\u8fc7\u7a0b\u3002 \u4e3a\u4e86\u4f7f\u8ba1\u7b97\u673a\u80fd\u591f\u7406\u89e3\u4eba\u7684 \u610f\u56fe \uff0c\u4eba\u7c7b\u5c31\u5fc5\u987b\u5c06\u9700\u89e3\u51b3\u7684\u95ee\u9898\u7684\u601d\u8def\u3001\u65b9\u6cd5\u548c\u624b\u6bb5\u901a\u8fc7\u8ba1\u7b97\u673a\u80fd\u591f\u7406\u89e3\u7684\u5f62\u5f0f\u544a\u8bc9 \u8ba1\u7b97\u673a \uff0c\u4f7f\u5f97\u8ba1\u7b97\u673a\u80fd\u591f\u6839\u636e\u4eba\u7684 \u6307\u4ee4 \u4e00\u6b65\u4e00\u6b65\u53bb\u5de5\u4f5c\uff0c\u5b8c\u6210\u67d0\u79cd\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u8fd9\u79cd\u4eba\u548c\u8ba1\u7b97\u4f53\u7cfb\u4e4b\u95f4\u4ea4\u6d41\u7684\u8fc7\u7a0b\u5c31\u662f\u7f16\u7a0b\u3002 \u7f16\u7a0b\uff1a\u8bbe\u8ba1\u5177\u5907 \u903b\u8f91 \u6d41\u52a8\u4f5c\u7528\u7684\u4e00\u79cd\u201c\u53ef\u63a7\u4f53\u7cfb\u201d\u3010\u6ce8\uff1a\u7f16\u7a0b\u4e0d\u4e00\u5b9a\u662f\u9488\u5bf9\u8ba1\u7b97\u673a\u7a0b\u5e8f\u800c\u8a00\u7684\uff0c\u9488\u5bf9\u5177\u5907\u903b\u8f91\u8ba1\u7b97\u529b\u7684\u4f53\u7cfb\uff0c\u90fd\u53ef\u4ee5\u7b97\u7f16\u7a0b\u3002\u3011 \u7f16\u7a0b\u8bed\u8a00 \u7f16\u7a0b\u8bed\u8a00\uff08programming language\uff09\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u4e00\u79cd\u8ba1\u7b97\u673a\u548c\u4eba\u90fd\u80fd\u8bc6\u522b\u7684\u8bed\u8a00\u3002\u4e00\u79cd\u8ba1\u7b97\u673a\u8bed\u8a00\u8ba9\u7a0b\u5e8f\u5458\u80fd\u591f\u51c6\u786e\u5730\u5b9a\u4e49\u8ba1\u7b97\u673a\u6240\u9700\u8981\u4f7f\u7528\u7684\u6570\u636e\uff0c\u5e76\u7cbe\u786e\u5730\u5b9a\u4e49\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u6240\u5e94\u5f53\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u7f16\u7a0b\u8bed\u8a00\u5904\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\u548c\u53d8\u5316\u4e2d\uff0c\u4ece\u6700\u521d\u7684 \u673a\u5668\u8bed\u8a00 \u53d1\u5c55\u5230\u5982\u4eca\u7684 2500 \u79cd\u4ee5\u4e0a\u7684 \u9ad8\u7ea7\u8bed\u8a00 \uff0c\u6bcf\u79cd\u8bed\u8a00\u90fd\u6709\u5176\u7279\u5b9a\u7684\u7528\u9014\u548c\u4e0d\u540c\u7684\u53d1\u5c55\u8f68\u8ff9\u3002\u7f16\u7a0b\u8bed\u8a00\u5e76\u4e0d\u50cf\u4eba\u7c7b\u81ea\u7136\u8bed\u8a00\u53d1\u5c55\u53d8\u5316\u4e00\u6837\u7684\u7f13\u6162\u800c\u53c8\u6301\u4e45\uff0c\u5176\u53d1\u5c55\u662f\u76f8\u5f53\u5feb\u901f\u7684\uff0c\u8fd9\u4e3b\u8981\u662f \u8ba1\u7b97\u673a\u786c\u4ef6 \u3001 \u4e92\u8054\u7f51 \u548c IT \u4e1a\u7684\u53d1\u5c55\u4fc3\u8fdb\u4e86\u7f16\u7a0b\u8bed\u8a00\u7684\u53d1\u5c55\u3002","title":"\u4ec0\u4e48\u662f\u7f16\u7a0b"},{"location":"Programming/00.%20%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B/#_1","text":"\u7f16\u7a0b\u662f\u7f16\u5b9a \u7a0b\u5e8f \u7684\u4e2d\u6587\u7b80\u79f0\uff0c\u5c31\u662f\u8ba9 \u8ba1\u7b97\u673a \u4ee3\u7801\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\uff0c\u5bf9\u67d0\u4e2a\u8ba1\u7b97\u4f53\u7cfb\u89c4\u5b9a\u4e00\u5b9a\u7684\u8fd0\u7b97\u65b9\u5f0f\uff0c\u4f7f\u8ba1\u7b97\u4f53\u7cfb\u6309\u7167\u8be5\u8ba1\u7b97\u65b9\u5f0f\u8fd0\u884c\uff0c\u5e76\u6700\u7ec8\u5f97\u5230\u76f8\u5e94\u7ed3\u679c\u7684\u8fc7\u7a0b\u3002 \u4e3a\u4e86\u4f7f\u8ba1\u7b97\u673a\u80fd\u591f\u7406\u89e3\u4eba\u7684 \u610f\u56fe \uff0c\u4eba\u7c7b\u5c31\u5fc5\u987b\u5c06\u9700\u89e3\u51b3\u7684\u95ee\u9898\u7684\u601d\u8def\u3001\u65b9\u6cd5\u548c\u624b\u6bb5\u901a\u8fc7\u8ba1\u7b97\u673a\u80fd\u591f\u7406\u89e3\u7684\u5f62\u5f0f\u544a\u8bc9 \u8ba1\u7b97\u673a \uff0c\u4f7f\u5f97\u8ba1\u7b97\u673a\u80fd\u591f\u6839\u636e\u4eba\u7684 \u6307\u4ee4 \u4e00\u6b65\u4e00\u6b65\u53bb\u5de5\u4f5c\uff0c\u5b8c\u6210\u67d0\u79cd\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u8fd9\u79cd\u4eba\u548c\u8ba1\u7b97\u4f53\u7cfb\u4e4b\u95f4\u4ea4\u6d41\u7684\u8fc7\u7a0b\u5c31\u662f\u7f16\u7a0b\u3002 \u7f16\u7a0b\uff1a\u8bbe\u8ba1\u5177\u5907 \u903b\u8f91 \u6d41\u52a8\u4f5c\u7528\u7684\u4e00\u79cd\u201c\u53ef\u63a7\u4f53\u7cfb\u201d\u3010\u6ce8\uff1a\u7f16\u7a0b\u4e0d\u4e00\u5b9a\u662f\u9488\u5bf9\u8ba1\u7b97\u673a\u7a0b\u5e8f\u800c\u8a00\u7684\uff0c\u9488\u5bf9\u5177\u5907\u903b\u8f91\u8ba1\u7b97\u529b\u7684\u4f53\u7cfb\uff0c\u90fd\u53ef\u4ee5\u7b97\u7f16\u7a0b\u3002\u3011","title":"\u4ec0\u4e48\u662f\u7f16\u7a0b"},{"location":"Programming/00.%20%E7%BC%96%E7%A8%8B%E7%AE%80%E4%BB%8B/#_2","text":"\u7f16\u7a0b\u8bed\u8a00\uff08programming language\uff09\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u4e00\u79cd\u8ba1\u7b97\u673a\u548c\u4eba\u90fd\u80fd\u8bc6\u522b\u7684\u8bed\u8a00\u3002\u4e00\u79cd\u8ba1\u7b97\u673a\u8bed\u8a00\u8ba9\u7a0b\u5e8f\u5458\u80fd\u591f\u51c6\u786e\u5730\u5b9a\u4e49\u8ba1\u7b97\u673a\u6240\u9700\u8981\u4f7f\u7528\u7684\u6570\u636e\uff0c\u5e76\u7cbe\u786e\u5730\u5b9a\u4e49\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u6240\u5e94\u5f53\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u7f16\u7a0b\u8bed\u8a00\u5904\u5728\u4e0d\u65ad\u7684\u53d1\u5c55\u548c\u53d8\u5316\u4e2d\uff0c\u4ece\u6700\u521d\u7684 \u673a\u5668\u8bed\u8a00 \u53d1\u5c55\u5230\u5982\u4eca\u7684 2500 \u79cd\u4ee5\u4e0a\u7684 \u9ad8\u7ea7\u8bed\u8a00 \uff0c\u6bcf\u79cd\u8bed\u8a00\u90fd\u6709\u5176\u7279\u5b9a\u7684\u7528\u9014\u548c\u4e0d\u540c\u7684\u53d1\u5c55\u8f68\u8ff9\u3002\u7f16\u7a0b\u8bed\u8a00\u5e76\u4e0d\u50cf\u4eba\u7c7b\u81ea\u7136\u8bed\u8a00\u53d1\u5c55\u53d8\u5316\u4e00\u6837\u7684\u7f13\u6162\u800c\u53c8\u6301\u4e45\uff0c\u5176\u53d1\u5c55\u662f\u76f8\u5f53\u5feb\u901f\u7684\uff0c\u8fd9\u4e3b\u8981\u662f \u8ba1\u7b97\u673a\u786c\u4ef6 \u3001 \u4e92\u8054\u7f51 \u548c IT \u4e1a\u7684\u53d1\u5c55\u4fc3\u8fdb\u4e86\u7f16\u7a0b\u8bed\u8a00\u7684\u53d1\u5c55\u3002","title":"\u7f16\u7a0b\u8bed\u8a00"},{"location":"Programming/00.%20C%2B%2B/00.%20C%2B%2B%20%E7%AE%80%E4%BB%8B/","text":"C++ C++ \u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7531 C \u8bed\u8a00 \u6269\u5c55\u5347\u7ea7\u800c\u4ea7\u751f\uff0c\u6700\u65e9\u4e8e 1979 \u5e74\u7531 \u672c\u8d3e\u5c3c\u00b7\u65af\u7279\u52b3\u65af\u7279\u5362\u666e \u5728 AT&T \u8d1d\u5c14\u5de5\u4f5c\u5ba4\u7814\u53d1\u3002 C++ \u65e2\u53ef\u4ee5\u8fdb\u884c C \u8bed\u8a00\u7684\u8fc7\u7a0b\u5316 \u7a0b\u5e8f\u8bbe\u8ba1 \uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u4e3a\u7279\u70b9\u7684\u57fa\u4e8e\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u7ee7\u627f\u548c\u591a\u6001\u4e3a\u7279\u70b9\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002C++ \u64c5\u957f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002 C++ \u62e5\u6709\u8ba1\u7b97\u673a\u8fd0\u884c\u7684\u5b9e\u7528\u6027\u7279\u5f81\uff0c\u540c\u65f6\u8fd8\u81f4\u529b\u4e8e\u63d0\u9ad8\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684[[00. \u7f16\u7a0b\u7b80\u4ecb#\u4ec0\u4e48\u662f\u7f16\u7a0b|\u7f16\u7a0b]]\u8d28\u91cf\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u95ee\u9898\u63cf\u8ff0\u80fd\u529b\u3002","title":"C++"},{"location":"Programming/00.%20C%2B%2B/00.%20C%2B%2B%20%E7%AE%80%E4%BB%8B/#c","text":"C++ \u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7531 C \u8bed\u8a00 \u6269\u5c55\u5347\u7ea7\u800c\u4ea7\u751f\uff0c\u6700\u65e9\u4e8e 1979 \u5e74\u7531 \u672c\u8d3e\u5c3c\u00b7\u65af\u7279\u52b3\u65af\u7279\u5362\u666e \u5728 AT&T \u8d1d\u5c14\u5de5\u4f5c\u5ba4\u7814\u53d1\u3002 C++ \u65e2\u53ef\u4ee5\u8fdb\u884c C \u8bed\u8a00\u7684\u8fc7\u7a0b\u5316 \u7a0b\u5e8f\u8bbe\u8ba1 \uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u4e3a\u7279\u70b9\u7684\u57fa\u4e8e\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u7ee7\u627f\u548c\u591a\u6001\u4e3a\u7279\u70b9\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002C++ \u64c5\u957f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002 C++ \u62e5\u6709\u8ba1\u7b97\u673a\u8fd0\u884c\u7684\u5b9e\u7528\u6027\u7279\u5f81\uff0c\u540c\u65f6\u8fd8\u81f4\u529b\u4e8e\u63d0\u9ad8\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684[[00. \u7f16\u7a0b\u7b80\u4ecb#\u4ec0\u4e48\u662f\u7f16\u7a0b|\u7f16\u7a0b]]\u8d28\u91cf\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u95ee\u9898\u63cf\u8ff0\u80fd\u529b\u3002","title":"C++"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%20%E7%9A%84%20new/","text":"\u5728 C++ \u4e2d\uff0c\u4e00\u822c\u90fd\u662f\u4ee5 new / delete \u6765\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58\u3002 \u6839\u636e\u300aC++ Primer, Fourth Edition\u300b\u4e2d5.11\u8282 The new and delete Expressions \u4e2d\u5173\u4e8e new \u7684\u63cf\u8ff0\uff0c new A \u5c5e\u4e8e Default Initializing of Dynamically Allocated Objects\uff08\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u7684\u9ed8\u8ba4\u521d\u59cb\u5316\uff09\uff0c\u800c new A() \u5219\u5c5e\u4e8e Value Initializing of Dynamically Allocated Objects\uff08\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u7684\u503c\u521d\u59cb\u5316\uff09\u3002 \u5f53\u4e3a\u9ed8\u8ba4\u521d\u59cb\u5316\u64cd\u4f5c\u65f6\uff0c\u82e5\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u6309\u71672.3.4\u8282 Variable Initialization Rules \u7684\u89c4\u5219\u8fdb\u884c\u521d\u59cb\u5316\uff1a - \u5bf9\u8c61\u4e3a\u5185\u7f6e\u7c7b\u578b\u65f6\uff0c\u4efb\u4f55\u5728\u51fd\u6570\u4f53\u5916\u5b9a\u4e49\u7684\u53d8\u91cf\u90fd\u4f1a\u88ab\u521d\u59cb\u53160\uff08\u5168\u5c40\u53d8\u91cf\u6216\u8005\u9759\u6001\u53d8\u91cf\uff09\uff0c\u5728\u51fd\u6570\u4f53\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u90fd\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316 - \u5bf9\u8c61\u4e3a\u7c7b\u7c7b\u578b\u65f6\uff0c\u8c03\u7528\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u5f53\u4e3a\u503c\u521d\u59cb\u5316\u64cd\u4f5c\u65f6\uff0c\u82e5\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u8ba4\u4e3a\u5bf9\u8be5\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u3002 \u4e0d\u540c new \u7684\u7528\u6cd5\u5bf9\u5e94\u7684\u521d\u59cb\u5316\u903b\u8f91\u603b\u7ed3\u5982\u4e0b\uff1a | |new A|nwe A()|new A(parameter)| |:-:|:-:|:-:|:-:| |A \u4e3a\u5185\u7f6e\u7c7b\u578b|\u65e0\u521d\u59cb\u5316\u52a8\u4f5c|\u8fdb\u884c\u503c\u521d\u59cb\u5316\uff0c\u4f8b\uff1aA \u4e3a int \u578b\uff0c\u5219\u521d\u59cb\u5316\u4e3a 0|\u8fdb\u884c\u503c\u521d\u59cb\u5316\uff0cA \u88ab\u521d\u59cb\u5316\u4e3a parameter| |A \u4e3a class/struct|\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0cA \u4e2d\u6210\u5458\u662f\u5426\u521d\u59cb\u5316\u4f9d\u8d56\u4e8e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u5b9e\u73b0|\u82e5\u81ea\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u5426\u5219\u8c03\u7528\u7cfb\u7edf\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5e76\u5bf9\u6210\u5458\u8fdb\u884c\u503c\u521d\u59cb\u5316|\u8c03\u7528 A \u7684\u81ea\u5b9a\u4e49\u6784\u9020\u51fd\u6570|","title":"C++ \u7684 new"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%20%E8%B0%83%E7%94%A8%20Python/","text":"\u73af\u5883\u914d\u7f6e \u9700\u8981\u5c06 Python \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 include \u548c libs \u6587\u4ef6\u5939\u62f7\u8d1d\u5230 C++ \u5de5\u7a0b\u76ee\u5f55\uff0c\u5e76\u5305\u542b\u5230\u5de5\u7a0b\u4e2d\u3002 Python \u811a\u672c\u9700\u8981\u62f7\u8d1d\u5230 exe \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 C++ \u4ee3\u7801 \u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 Python.h \u521d\u59cb\u5316 Python \u73af\u5883 Py_Initialize() \u6dfb\u52a0\u6a21\u5757\u8def\u5f84\uff08\u6216\u8005\u8bf4\u811a\u672c\u8def\u5f84\uff09PyRun_SimpleString() \u5bfc\u5165\u6a21\u5757 PyImport_ImportModule() \u5bfc\u5165\u51fd\u6570 PyObject_GetAttrString() \u8c03\u7528\u51fd\u6570 \u7ed3\u675f\u91ca\u653e\u8d44\u6e90 Py_Finalize() \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <Python.h> int main () { //\u521d\u59cb\u5316Python\u73af\u5883 Py_Initialize (); PyRun_SimpleString ( \"import sys\" ); //\u6dfb\u52a0Insert\u6a21\u5757\u8def\u5f84 //PyRun_SimpleString(chdir_cmd.c_str()); PyRun_SimpleString ( \"sys.path.append('./')\" ); //\u5bfc\u5165\u6a21\u5757 PyObject * pModule = PyImport_ImportModule ( \"mytest\" ); if ( ! pModule ) { std :: cout << \"Python get module failed.\" << std :: endl ; return -1 ; } PyObject * pFunc1 = PyObject_GetAttrString ( pModule , \"func1\" ); if ( ! pFunc1 ) { return -2 ; } PyObject * pRet = PyObject_CallNoArgs ( pFunc1 ); //PyArg_Parse(pRet, \"s\", strRet); int nCheck = PyBytes_Check ( pRet ); nCheck = PyUnicode_Check ( pRet ); wchar_t * cTmp = PyUnicode_AsWideCharString ( pRet , nullptr ); PyObject * pFunc2 = PyObject_GetAttrString ( pModule , \"func2\" ); if ( ! pFunc2 ) { return -3 ; } pRet = PyObject_CallNoArgs ( pFunc2 ); cTmp = PyUnicode_AsWideCharString ( pRet , nullptr ); Py_Finalize (); return 0 ; } \u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/yangjf91/article/details/93062961","title":"\u73af\u5883\u914d\u7f6e"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%20%E8%B0%83%E7%94%A8%20Python/#_1","text":"\u9700\u8981\u5c06 Python \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 include \u548c libs \u6587\u4ef6\u5939\u62f7\u8d1d\u5230 C++ \u5de5\u7a0b\u76ee\u5f55\uff0c\u5e76\u5305\u542b\u5230\u5de5\u7a0b\u4e2d\u3002 Python \u811a\u672c\u9700\u8981\u62f7\u8d1d\u5230 exe \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002","title":"\u73af\u5883\u914d\u7f6e"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%20%E8%B0%83%E7%94%A8%20Python/#c","text":"\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 Python.h \u521d\u59cb\u5316 Python \u73af\u5883 Py_Initialize() \u6dfb\u52a0\u6a21\u5757\u8def\u5f84\uff08\u6216\u8005\u8bf4\u811a\u672c\u8def\u5f84\uff09PyRun_SimpleString() \u5bfc\u5165\u6a21\u5757 PyImport_ImportModule() \u5bfc\u5165\u51fd\u6570 PyObject_GetAttrString() \u8c03\u7528\u51fd\u6570 \u7ed3\u675f\u91ca\u653e\u8d44\u6e90 Py_Finalize() \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <Python.h> int main () { //\u521d\u59cb\u5316Python\u73af\u5883 Py_Initialize (); PyRun_SimpleString ( \"import sys\" ); //\u6dfb\u52a0Insert\u6a21\u5757\u8def\u5f84 //PyRun_SimpleString(chdir_cmd.c_str()); PyRun_SimpleString ( \"sys.path.append('./')\" ); //\u5bfc\u5165\u6a21\u5757 PyObject * pModule = PyImport_ImportModule ( \"mytest\" ); if ( ! pModule ) { std :: cout << \"Python get module failed.\" << std :: endl ; return -1 ; } PyObject * pFunc1 = PyObject_GetAttrString ( pModule , \"func1\" ); if ( ! pFunc1 ) { return -2 ; } PyObject * pRet = PyObject_CallNoArgs ( pFunc1 ); //PyArg_Parse(pRet, \"s\", strRet); int nCheck = PyBytes_Check ( pRet ); nCheck = PyUnicode_Check ( pRet ); wchar_t * cTmp = PyUnicode_AsWideCharString ( pRet , nullptr ); PyObject * pFunc2 = PyObject_GetAttrString ( pModule , \"func2\" ); if ( ! pFunc2 ) { return -3 ; } pRet = PyObject_CallNoArgs ( pFunc2 ); cTmp = PyUnicode_AsWideCharString ( pRet , nullptr ); Py_Finalize (); return 0 ; } \u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/yangjf91/article/details/93062961","title":"C++ \u4ee3\u7801"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%20%E9%9A%8F%E6%9C%BA%E6%95%B0/","text":"\u8981\u53d6\u5f97 [a, b) \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a))+ a \u8981\u53d6\u5f97 [a, b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a+1))+ a \u8981\u53d6\u5f97 (a, b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a))+ a + 1 \u901a\u7528\u516c\u5f0f\uff1a a + rand() % n \uff1b\u5176\u4e2d\u7684 a \u662f\u8d77\u59cb\u503c\uff0c n \u662f\u6574\u6570\u7684\u8303\u56f4\u3002 \u8981\u53d6\u5f97 a \u5230 b \u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570\uff0c\u53e6\u4e00\u79cd\u8868\u793a\uff1a a + (int)b * rand() / (RAND_MAX + 1) \u3002 \u8981\u53d6\u5f97 0\uff5e1 \u4e4b\u95f4\u7684\u6d6e\u70b9\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 rand() / double(RAND_MAX) \u3002","title":"C++ \u968f\u673a\u6570"},{"location":"Programming/00.%20C%2B%2B/c_str%28%29/","text":"\u8bed\u6cd5\uff1a const char * c_str (); c_str() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6b63\u89c4 C \u5b57\u7b26\u4e32\u7684\u6307\u9488\u5e38\u91cf, \u5185\u5bb9\u4e0e\u672c string \u4e32\u76f8\u540c\u3002 \u8fd9\u662f\u4e3a\u4e86\u4e0ec\u8bed\u8a00\u517c\u5bb9\uff0c\u5728c\u8bed\u8a00\u4e2d\u6ca1\u6709 string \u7c7b\u578b\uff0c\u6545\u5fc5\u987b\u901a\u8fc7 string \u7c7b\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570 c_str() \u628a string \u5bf9\u8c61\u8f6c\u6362\u6210 c \u4e2d\u7684\u5b57\u7b26\u4e32\u6837\u5f0f\u3002 \u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u4f7f\u7528 strcpy() \u51fd\u6570\u7b49\u6765\u64cd\u4f5c\u65b9\u6cd5 c_str() \u8fd4\u56de\u7684\u6307\u9488\u3002 \u6bd4\u5982\uff0c\u6700\u597d\u4e0d\u8981\u8fd9\u6837\uff1a char * c ; string s = \"1234\" ; c = s . c_str (); //c\u6700\u540e\u6307\u5411\u7684\u5185\u5bb9\u662f\u5783\u573e\uff0c\u56e0\u4e3as\u5bf9\u8c61\u88ab\u6790\u6784\uff0c\u5176\u5185\u5bb9\u88ab\u5904\u7406\uff0c\u540c\u65f6\uff0c\u7f16\u8bd1\u5668\u4e5f\u5c06\u62a5\u9519\u2014\u2014\u5c06\u4e00\u4e2aconst char *\u8d4b\u4e0e\u4e00\u4e2achar *\u3002 \u5e94\u8be5\u8fd9\u6837\u7528\uff1a char c [ 20 ]; string s = \"1234\" ; strcpy ( c , s . c_str ()); \u8fd9\u6837\u624d\u4e0d\u4f1a\u51fa\u9519\uff0c c_str() \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u4e34\u65f6\u6307\u9488\uff0c\u4e0d\u80fd\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u3002 \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c c_str() \u4ee5 char* \u5f62\u5f0f\u4f20\u56de string \u5185\u542b\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8981\u6c42 char* \u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 c_str() \u65b9\u6cd5\uff1a string s = \"Hello World!\" ; printf ( \"%s\" , s . c_str ()); //\u8f93\u51fa \"Hello World!\"","title":"C str()"},{"location":"Programming/00.%20C%2B%2B/xlnt%20%E5%BA%93/","text":"\u8de8\u5e73\u53f0\u7684 Excel \u64cd\u4f5c\u5e93\uff0c\u5f00\u6e90\uff0c\u4f46\u662f\u9700\u8981 C++11","title":"Xlnt \u5e93"},{"location":"Programming/00.%20C%2B%2B/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/","text":"cppreference\uff1a https://zh.cppreference.com/w/\u9996\u9875 learncpp\uff1a https://www.learncpp.com/ \uff1b\u4e2d\u6587\u7248\u76ee\u5f55\uff1a https://zhuanlan.zhihu.com/p/55227576 cplusplus\uff1a http://www.cplusplus.com/ TutorialPoint\uff1a http://www.tutorialspoint.com/index.htm Awesome C++\uff1a https://github.com/fffaraz/awesome-cpp#awesome-cpp \u4e66\u6808\u7f51\uff1a https://www.bookstack.cn/ \u725b\u5ba2\u7f51\uff1a https://www.nowcoder.com/ \u642c\u4e66\u5320\uff1a http://www.banshujiang.cn/ LeetCode/LintCode\u9898\u89e3\uff1a https://www.jiuzhang.com/solution/?utm_source=sc-zhihu-jw0603 https://github.com/521xueweihan/HelloGitHub","title":"\u4e00\u4e9b\u6709\u7528\u7684\u7f51\u7ad9"},{"location":"Programming/00.%20C%2B%2B/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%B5%AE%E7%82%B9%E6%95%B0/","text":"float Hex2Float ( unsigned long number ) { int sign = ( number & 0x80000000 ) ? -1 : 1 ; int exponent = (( number >> 23 ) & 0xff ) - 127 ; float mantissa = 1 + (( float )( number & 0x7fffff ) / 0x7fffff ); float res = sign * mantissa * pow ( 2.0 , exponet ); return res ; } double Hex2Double ( unsigned long long number ) { unsigned long long sign = ( number & 0x8000000000000000 ) ? -1 : 1 ; int exponent = (( number >> 52 ) & 0x7ff ) - 1023 ; double mantissa = 1 + (( double )( number & 0xfffffffffffff ) / 0xfffffffffffff ); double res = sign * mantissa * pow ( 2.0 , exponet ); return res ; } \u5177\u4f53\u53c2\u8003 IEEE 754 \u6807\u51c6\u3002 \u53e6\u5916\u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u8054\u5408\u4f53\uff0c\u5199\u5165\u8054\u5408\u4f53\u7684\u5341\u516d\u8fdb\u5236\u53d8\u91cf\uff0c\u8bfb\u53d6\u6d6e\u70b9\u578b\u53d8\u91cf\u5373\u53ef\u3002","title":"\u5341\u516d\u8fdb\u5236\u8f6c\u6d6e\u70b9\u6570"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/","text":"\u5f00\u6e90\u5e93 \u901a\u7528\u5e93 Boost Boost \u662f\u529f\u80fd\u76f8\u5f53\u4e30\u5bcc\u7684 C++ \u57fa\u7840\u5e93\uff0cboost \u91cc\u6709\u5f88\u591a\u597d\u7528\u7684\u7ec4\u4ef6\uff0c\u90fd\u503c\u5f97\u6211\u4eec\u5b66\u4e60\uff0c\u9020\u8f6e\u5b50\u65f6\u4e5f\u6709\u4e2a\u65b9\u5411\u3002\uff08\u8bdd\u8bf4\u4e00\u822c C++ \u6807\u51c6\u5e93\u597d\u591a\u4e1c\u897f\u4e5f\u90fd\u662f\u4ece Boost \u91cc\u62a0\u51fa\u6765\u7684\u3002\uff09 Folly Facebook\u7684\u5f00\u6e90\u5e93\uff0c\u548cBoost\u7c7b\u4f3c\uff0c\u4f46\u542c\u8bf4\u6bd4 Boost \u8fd8\u725b\u903c\u3002 Abseil Google \u7684 STL\uff0c\u4e3b\u8981\u6587\u6863\u6bd4\u8f83\u5168\uff0c\u5b98\u65b9\u6587\u6863\u5173\u4e8e Abseil \u4ecb\u7ecd\u7684\u4e5f\u5f88\u8be6\u7ec6\u3002 \u901a\u8baf zeromq zmq \u662f\u4e00\u4e2a\u4e3a\u53ef\u4f38\u7f29\u7684\u5206\u5e03\u5f0f\u6216\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u5f02\u6b65\u6d88\u606f\u5e93\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u9ad8\u6027\u80fd\u6d88\u606f\u961f\u5217\uff0c\u8be5\u5e93\u8bbe\u8ba1\u6210\u5e38\u89c1\u7684\u5957\u63a5\u5b57\u98ce\u683c\u7684 API\u3002 asio asio \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684 C++ \u7f51\u7edc\u7f16\u7a0b\u6846\u67b6\uff0c\u901a\u8fc7\u5148\u8fdb\u7684 C++ \u65b9\u6cd5\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u8fde\u7eed\u5f02\u6b65\u6a21\u578b\u3002 muduo muduo \u662f\u4e00\u4e2a\u57fa\u4e8e Reactor \u6a21\u5f0f\u7684\u73b0\u4ee3 C++ \u7f51\u7edc\u5e93\uff0c\u5b83\u91c7\u7528\u975e\u963b\u585e IO \u6a21\u578b\uff0c\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u548c\u56de\u8c03\uff0c\u652f\u6301\u591a\u6838\u591a\u7ebf\u7a0b\uff0c\u9002\u5408\u7f16\u5199 Linux \u670d\u52a1\u7aef\u591a\u7ebf\u7a0b\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u3002\uff08\u9648\u7855\u5927\u4f6c\u5199\u7684\uff0c\u503c\u5f97\u5b66\u4e60\uff0c\u8fd9\u91cc\u4e5f\u6781\u529b\u63a8\u8350\u9648\u7855\u5927\u4f6c\u7684\u300aLinux\u591a\u7ebf\u7a0b\u670d\u52a1\u7aef\u7f16\u7a0b\u300b\u4e66\u7c4d\uff0c\u6587\u4e2d\u5f88\u591a\u7bc7\u5e45\u90fd\u8bb2\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u73b0\u4ee3C++\uff0c\u5373\u4f7f\u4e0d\u8fdb\u884c\u7f51\u7edc\u5f00\u53d1\u4e5f\u63a8\u8350\u5b66\u4e60\u4e00\u4e0b\u8fd9\u672c\u4e66\u3002\uff09 protobuf Google \u51fa\u54c1\uff0cprotobuf \u4e00\u4e2a\u5177\u6709\u9ad8\u6548\u7684\u534f\u8bae\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u5de5\u5177\u5e93(\u7c7b\u4f3c Json )\uff0c\u4f46\u76f8\u6bd4\u4e8e Json\uff0cProtobuf \u6709\u66f4\u9ad8\u7684\u8f6c\u5316\u6548\u7387\uff0c\u65f6\u95f4\u6548\u7387\u548c\u7a7a\u95f4\u6548\u7387\u90fd\u662f JSON \u76843-5\u500d\u3002\uff08\u73b0\u5728\u7684 RPC\u57fa\u672c\u90fd\u662f\u7528 protobuf \u4f5c\u4e3a\u901a\u8baf\u6570\u636e\u683c\u5f0f\u3002\uff09 poco POCO \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 C++ \u7c7b\u5e93\u7684\u96c6\u5408\uff0c\u5b83\u4e3b\u8981\u63d0\u4f9b\u7b80\u5355\u7684\u3001\u5feb\u901f\u7684\u7f51\u7edc\u548c\u53ef\u79fb\u690d\u5e94\u7528\u7a0b\u5e8f\u7684 C++ \u5f00\u53d1\uff0c\u8fd9\u4e2a\u7c7b\u5e93\u548c C++ \u6807\u51c6\u5e93\u53ef\u4ee5\u5f88\u597d\u7684\u96c6\u6210\u5e76\u586b\u8865 C++ \u6807\u51c6\u5e93\u7684\u529f\u80fd\u7a7a\u7f3a\u3002POCO \u5e93\u7684\u6a21\u5757\u5316\u3001\u9ad8\u6548\u7684\u8bbe\u8ba1\u53ca\u5b9e\u73b0\u4f7f\u5f97 \u7279\u522b\u9002\u5408\u5d4c\u5165\u5f0f\u5f00\u53d1 \u3002 libevent Libevent \u662f\u4e00\u4e2a\u7528 C \u8bed\u8a00\u7f16\u5199\u7684\u3001\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u4e8b\u4ef6\u901a\u77e5\u5e93\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4eae\u70b9\uff1a\u4e8b\u4ef6\u9a71\u52a8\uff0c\u9ad8\u6027\u80fd\uff0c\u8f7b\u91cf\u7ea7\uff0c\u4e13\u6ce8\u4e8e\u7f51\u7edc\uff0c\u4e0d\u5982 ACE \u90a3\u4e48\u81c3\u80bf\u5e9e\u5927\uff1b\u6e90\u4ee3\u7801\u76f8\u5f53\u7cbe\u70bc\u3001\u6613\u8bfb\uff1b\u8de8\u5e73\u53f0\uff1b\u652f\u6301\u591a\u79cd I/O \u591a\u8def\u590d\u7528\u6280\u672f\uff1aepoll\u3001poll\u3001select \u548c kqueue \u7b49\uff1b\u652f\u6301 I/O\uff0c\u5b9a\u65f6\u5668\u548c\u4fe1\u53f7\u7b49\u4e8b\u4ef6\uff1b\u6ce8\u518c\u4e8b\u4ef6\u4f18\u5148\u7ea7\u7b49\u3002 \u97f3\u89c6\u9891 FFmpeg \u97f3\u89c6\u9891\u5c4a\u7684yyds\uff0c\u97f3\u89c6\u9891\u5f00\u53d1\u6709\u8c01\u80fd\u7ed5\u8fc7 ffmpeg \uff1fffmpeg \u7684\u529f\u80fd\u76f8\u5f53\u5f3a\u5927\uff0c\u97f3\u89c6\u9891\u91c7\u96c6\u3001\u97f3\u89c6\u9891\u683c\u5f0f\u8f6c\u6362\u3001\u6ee4\u955c\u3001\u6c34\u5370\u3001\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3001\u63a8\u9001\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u7b49\u7b49\uff0c\u592a\u591a\u4e86\uff0c\u5bf9\u89c6\u9891\u7684\u7edd\u5927\u591a\u6570\u5904\u7406\u90fd\u53ef\u4ee5\u4f7f\u7528 ffmpeg\uff0c\u53ef\u4ee5\u8bf4\u65e0\u6240\u4e0d\u80fd\u3002 \u56fe\u50cf\u5904\u7406 OpenCV OpenCV \u7528 C++ \u8bed\u8a00\u7f16\u5199\uff0c\u5b83\u5177\u6709 C ++\uff0cPython\uff0cJava \u548c MATLAB \u63a5\u53e3\uff0c\u5e76\u652f\u6301Windows\uff0cLinux\uff0cAndroid \u548c Mac OS \u591a\u79cd\u5e73\u53f0\uff0c \u5982\u4eca\u4e5f\u63d0\u4f9b\u5bf9\u4e8e C#\u3001Ch\u3001Ruby\uff0cGO \u7684\u652f\u6301\u3002\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u91cc\u975e\u5e38\u4e3e\u8db3\u8f7b\u91cd\u7684\u5e93\uff0c\u4e3b\u8981\u53ef\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b\u3001\u4eba\u8138\u68c0\u6d4b\u3001\u56fe\u50cf\u5904\u7406\u7b49\u3002 \u56fe\u5f62 OpenGL \u7528\u4e8e\u6e32\u67d3 2D\u30013D \u77e2\u91cf\u56fe\u5f62\u7684\u8de8\u8bed\u8a00\u3001\u8de8\u5e73\u53f0\u7684\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\uff0c\u56fe\u578b\u5f00\u53d1\u8005\u8c8c\u4f3c\u90fd\u79bb\u4e0d\u5f00 OpenGL\uff0c\u4e0e\u7eb9\u7406\u6709\u5173\u7684\u64cd\u4f5c\u57fa\u672c\u90fd\u4f1a\u7528\u5230 OpenGL\uff0c\u5e38\u7528\u4e8e CAD\u3001\u865a\u62df\u73b0\u5b9e\u3001\u79d1\u5b66\u53ef\u89c6\u5316\u7a0b\u5e8f\u548c\u7535\u5b50\u6e38\u620f\u5f00\u53d1\u3002 Vulkan \u4e0b\u4e00\u4ee3\u7684 OpenGL\uff0c\u53ef\u89e3\u51b3 OpenGL \u5f88\u591a\u6846\u67b6\u5c42\u9762\u7684\u7f3a\u9677\uff0c\u66f4\u9ad8\u6027\u80fd\uff0c\u53ef\u80fd\u6211\u4eec\u4ee5\u540e\u90fd\u4f1a\u4eceOpenGL \u8fc1\u79fb\u5230 Vulkan \u5427\uff0c\u4f46\u5347\u7ea7\u6c38\u8fdc\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613\uff0c\u6210\u672c\u592a\u9ad8\uff0c\u81f3\u5c11\u5b83\u73b0\u5728\u8fd8\u6ca1\u90a3\u4e48\u666e\u53ca\u3002 Ogre Ogre \u662f\u4e00\u4e2a\u4e09\u7ef4(3D)\u56fe\u5f62\u6e32\u67d3\u5f15\u64ce\u3002\u5b83\u662f\u9762\u5411\u5bf9\u8c61\u7684,\u5e76\u4e14\u9ad8\u6548\uff0c\u62bd\u8c61\u5316\u4e86\u4e0d\u540c\u7684 API \u548c\u5e73\u53f0\uff0c\u8fd9\u6837\u53ef\u4ee5\u4ee5\u573a\u666f\u4e3a\u5bf9\u8c61\u6765\u4f7f\u7528\u7269\u4f53\uff0c\u652f\u6301\u591a\u79cd\u573a\u666f\u3002\u5b83\u5df2\u7ecf\u6210\u529f\u5730\u88ab\u5e94\u7528\u4e8e\u8bf8\u591a\u4e09\u7ef4\u4eff\u771f\u9886\u57df\uff0c\u5305\u62ec\u7f51\u7edc\u6e38\u620f\u548c\u4e09\u7ef4\u4eff\u771f\u9879\u76ee\u3002\uff08\u6211\u4eec\u5e73\u65f6\u89c1\u5230\u7684\u5404\u79cd\u7279\u6548\uff0c\u6bd4\u5982\u5728\u4eba\u8111\u888b\u4e0a\u8d34\u4e2a\u5927\u6050\u9f99\uff0c\u8d34\u4e2aB\u7ad9\u5c0f\u7535\u89c6\uff0c\u53ef\u80fd\u5e95\u5c42\u5c31\u662f\u7528\u5230\u4e86 Ogre\u3002\uff09 bgfx bgfx \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u3001\u4e0e\u56fe\u5f62 API \u65e0\u5173\uff0c \"\u53ef\u6253\u9020\u4e2a\u6027\u5f15\u64ce/\u6846\u67b6\u201c \u98ce\u683c\u7684\u6e32\u67d3\u5e93\uff0c\u7c7b\u4f3c\u4e8eOgre\u3002 \u7ebf\u6027\u4ee3\u6570 Eigen Eigen \u662f\u4e00\u4e2a\u7ebf\u6027\u7b97\u672f\u7684 C++ \u6a21\u677f\u5e93\uff0c\u529f\u80fd\u5f3a\u5927\u3001\u5feb\u901f\u3001\u4f18\u96c5\u4ee5\u53ca\u652f\u6301\u591a\u5e73\u53f0\u3002\u60f3\u627e\u5173\u4e8e\u6570\u5b66\u8fd0\u7b97\u7684\u4e09\u65b9\u5e93\uff0c\u9996\u9009 Eigen \u5c31\u5bf9\u4e86\uff01 GLM \u7531\u4e8e C/C++ \u6807\u51c6\u5e93\u4e2d\u6ca1\u6709\u51e0\u4f55\u6570\u5b66\u5e93\uff0c\u8fd9\u6837\u9020\u6210\u5728\u5f00\u53d1\u4e00\u4e2a\u4e09\u7ef4\u7cfb\u7edf\u4e4b\u521d\u5f80\u5f80\u90fd\u9700\u8981\u81ea\u884c\u5b9e\u73b0\u4e00\u4e2a\u5b9e\u7528\u7684\u51e0\u4f55\u6570\u5b66\u5e93\uff0c\u8fd9\u6837\u592a\u8d39\u65f6\u8d39\u529b\u4e86\u3002GLM \u7684\u51fa\u73b0\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e14GLM \u4e0d\u9700\u8981\u7f16\u8bd1\u6210\u4efb\u4f55\u5e93\uff0c\u53ea\u9700\u8981\u4f9d\u8d56\u5934\u6587\u4ef6\u5373\u53ef\u4f7f\u7528\u3002 JSON rapidjson nlohmann/json cJSON C++\u8bed\u8a00\u5c31\u5728 rapidjson \u548c nlohmann/json \u4e2d\u9009\u4e00\u4e2a\uff0cC\u8bed\u8a00\u5c31\u7528 cJSON\u3002 \u670d\u52a1\u7aef\u5f15\u64ce workflow \u641c\u72d7\u516c\u53f8 C++ \u670d\u52a1\u5668\u5f15\u64ce\uff0c\u652f\u6491\u641c\u72d7\u51e0\u4e4e\u6240\u6709\u540e\u7aef C++ \u5728\u7ebf\u670d\u52a1\uff0c\u5305\u62ec\u6240\u6709\u641c\u7d22\u670d\u52a1\uff0c\u4e91\u8f93\u5165\u6cd5\uff0c\u5728\u7ebf\u5e7f\u544a\u7b49\uff0c\u6bcf\u65e5\u5904\u7406\u8d85\u767e\u4ebf\u8bf7\u6c42\u3002\u8fd9\u662f\u4e00\u4e2a\u8bbe\u8ba1\u8f7b\u76c8\u4f18\u96c5\u7684\u4f01\u4e1a\u7ea7\u7a0b\u5e8f\u5f15\u64ce\uff0c\u53ef\u4ee5\u6ee1\u8db3\u5927\u591a\u6570 C++ \u540e\u7aef\u5f00\u53d1\u9700\u6c42\u3002 log spdlog \u76ee\u524d\u6700\u706b\u7684C++log\u5e93\uff0c\u53ea\u9700\u8981\u5934\u6587\u4ef6\u5373\u53ef\uff0c\u517c\u5bb9C++11\uff0c\u76f8\u5f53\u65b9\u4fbf\u3002 \u7279\u70b9\uff1a \u975e\u5e38\u5feb \u65e0\u9700\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93 \u652f\u6301\u8de8\u5e73\u53f0 - Linux / Windows on 32/64 bits \u652f\u6301\u591a\u7ebf\u7a0b \u53ef\u5bf9\u65e5\u5fd7\u6587\u4ef6\u8fdb\u884c\u5faa\u73af\u8f93\u51fa \u53ef\u6bcf\u65e5\u751f\u6210\u65e5\u5fd7\u6587\u4ef6 \u652f\u6301\u63a7\u5236\u53f0\u65e5\u5fd7\u8f93\u51fa \u53ef\u9009\u7684\u5f02\u6b65\u65e5\u5fd7 \u652f\u6301\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b \u53ef\u81ea\u5b9a\u4e49\u65e5\u5fd7\u683c\u5f0f glog Google Glog \u662f\u4e00\u4e2a C++ \u8bed\u8a00\u7684\u5e94\u7528\u7ea7\u65e5\u5fd7\u8bb0\u5f55\u6846\u67b6\uff0c\u63d0\u4f9b\u4e86 C++ \u98ce\u683c\u7684\u6d41\u64cd\u4f5c\u548c\u5404\u79cd\u8f85\u52a9\u5b8f\u3002 fmtlib/fmt formatting \u5e93\uff0c\u76f8\u5f53\u4e0d\u9519\uff0c\u5982\u679c\u89c9\u5f97\u4e0b\u9762\u7684\u4ee3\u7801\u975e\u5e38\u7e41\u7410\uff0c\u53ef\u8003\u8651\u4f7f\u7528fmt\u3002 cout << \"(\" << a << \")(\" << b << \")(\" << c << \")\" << endl ; \u5e76\u53d1\u5e93 TBB openmp \u6df1\u5ea6\u5b66\u4e60 pytorch \u5185\u5b58(\u9ad8\u6548\u5185\u5b58\u5206\u914d\u5668\uff0c\u5c24\u5176\u591a\u7ebf\u7a0b\u573a\u666f) jemalloc tcmalloc tcmalloc\u66f4\u7a33\u5b9a\uff0c\u5360\u7528\u5185\u5b58\u66f4\u4f4e\uff0cjemalloc\u6027\u80fd\u66f4\u9ad8\uff0c\u5360\u7528\u5185\u5b58\u66f4\u9ad8\uff01 \u6570\u636e\u538b\u7f29 zlib zlib \u662f\u63d0\u4f9b\u6570\u636e\u538b\u7f29\u7528\u7684\u51fd\u6570\u5e93\uff0c\u8c8c\u4f3c\u5728 C++ \u4e2d\u4f7f\u7528\u6570\u636e\u538b\u7f29\u90fd\u4f1a\u7528 zlib\u3002 \u754c\u9762 Qt QT \u5de5\u5177\u4e30\u5bcc\u3001\u529f\u80fd\u4e30\u5bcc\u3001\u5f00\u6e90\u5e76\u8de8\u5e73\u53f0\u3001\u67b6\u6784\u7684\u4f18\u52bf\u7b49\uff0c\u5bfc\u81f4\u539f\u6765\u8d8a\u591a\u7684\u7a0b\u5e8f\u5458\u6295\u5411\u4e86 QT \u7684\u6000\u62b1\u3002 \u6570\u636e\u5e93 sqlite3 \u4e00\u6b3e\u8f7b\u578b\u7684\u6570\u636e\u5e93\u3002\u53c2\u8003\u94fe\u63a5\uff1a https://mp.weixin.qq.com/s/xrIxe9JE7uNzir0c8i1tsQ \u53c2\u6570\u89e3\u6790 gflags google \u5f00\u6e90\u7684 gflags \u662f\u4e00\u5957\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5de5\u5177\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\uff0cgflags \u8fd8\u652f\u6301\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u53c2\u6570\uff08\u53ef\u7528 gflags \u4ee3\u66ff\u914d\u7f6e\u6587\u4ef6\uff09\u3002 rpc brpc brpc \u53c8\u79f0\u4e3a baidu-rpc\uff0c\u767e\u5ea6\u51fa\u54c1\u3002brpc \u76ee\u524d\u88ab\u5e94\u7528\u4e8e\u767e\u5ea6\u516c\u53f8\u5185\u90e8\u548c\u5176\u4ed6\u5916\u90e8\u597d\u591a\u516c\u53f8\u7684\u5404\u79cd\u6838\u5fc3\u4e1a\u52a1\u4e0a\u3002 grpc gRPC \u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u73b0\u4ee3\u5f00\u6e90\u9ad8\u6027\u80fd RPC \u6846\u67b6\u3002google \u51fa\u54c1\uff0c\u5fc5\u5c5e\u7ecf\u5178\u3002","title":"\u5f00\u6e90\u5e93"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_1","text":"","title":"\u5f00\u6e90\u5e93"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_2","text":"","title":"\u901a\u7528\u5e93"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#boost","text":"Boost \u662f\u529f\u80fd\u76f8\u5f53\u4e30\u5bcc\u7684 C++ \u57fa\u7840\u5e93\uff0cboost \u91cc\u6709\u5f88\u591a\u597d\u7528\u7684\u7ec4\u4ef6\uff0c\u90fd\u503c\u5f97\u6211\u4eec\u5b66\u4e60\uff0c\u9020\u8f6e\u5b50\u65f6\u4e5f\u6709\u4e2a\u65b9\u5411\u3002\uff08\u8bdd\u8bf4\u4e00\u822c C++ \u6807\u51c6\u5e93\u597d\u591a\u4e1c\u897f\u4e5f\u90fd\u662f\u4ece Boost \u91cc\u62a0\u51fa\u6765\u7684\u3002\uff09","title":"Boost"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#folly","text":"Facebook\u7684\u5f00\u6e90\u5e93\uff0c\u548cBoost\u7c7b\u4f3c\uff0c\u4f46\u542c\u8bf4\u6bd4 Boost \u8fd8\u725b\u903c\u3002","title":"Folly"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#abseil","text":"Google \u7684 STL\uff0c\u4e3b\u8981\u6587\u6863\u6bd4\u8f83\u5168\uff0c\u5b98\u65b9\u6587\u6863\u5173\u4e8e Abseil \u4ecb\u7ecd\u7684\u4e5f\u5f88\u8be6\u7ec6\u3002","title":"Abseil"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_3","text":"","title":"\u901a\u8baf"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#zeromq","text":"zmq \u662f\u4e00\u4e2a\u4e3a\u53ef\u4f38\u7f29\u7684\u5206\u5e03\u5f0f\u6216\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u5f02\u6b65\u6d88\u606f\u5e93\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u9ad8\u6027\u80fd\u6d88\u606f\u961f\u5217\uff0c\u8be5\u5e93\u8bbe\u8ba1\u6210\u5e38\u89c1\u7684\u5957\u63a5\u5b57\u98ce\u683c\u7684 API\u3002","title":"zeromq"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#asio","text":"asio \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684 C++ \u7f51\u7edc\u7f16\u7a0b\u6846\u67b6\uff0c\u901a\u8fc7\u5148\u8fdb\u7684 C++ \u65b9\u6cd5\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u8fde\u7eed\u5f02\u6b65\u6a21\u578b\u3002","title":"asio"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#muduo","text":"muduo \u662f\u4e00\u4e2a\u57fa\u4e8e Reactor \u6a21\u5f0f\u7684\u73b0\u4ee3 C++ \u7f51\u7edc\u5e93\uff0c\u5b83\u91c7\u7528\u975e\u963b\u585e IO \u6a21\u578b\uff0c\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u548c\u56de\u8c03\uff0c\u652f\u6301\u591a\u6838\u591a\u7ebf\u7a0b\uff0c\u9002\u5408\u7f16\u5199 Linux \u670d\u52a1\u7aef\u591a\u7ebf\u7a0b\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u3002\uff08\u9648\u7855\u5927\u4f6c\u5199\u7684\uff0c\u503c\u5f97\u5b66\u4e60\uff0c\u8fd9\u91cc\u4e5f\u6781\u529b\u63a8\u8350\u9648\u7855\u5927\u4f6c\u7684\u300aLinux\u591a\u7ebf\u7a0b\u670d\u52a1\u7aef\u7f16\u7a0b\u300b\u4e66\u7c4d\uff0c\u6587\u4e2d\u5f88\u591a\u7bc7\u5e45\u90fd\u8bb2\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u73b0\u4ee3C++\uff0c\u5373\u4f7f\u4e0d\u8fdb\u884c\u7f51\u7edc\u5f00\u53d1\u4e5f\u63a8\u8350\u5b66\u4e60\u4e00\u4e0b\u8fd9\u672c\u4e66\u3002\uff09","title":"muduo"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#protobuf","text":"Google \u51fa\u54c1\uff0cprotobuf \u4e00\u4e2a\u5177\u6709\u9ad8\u6548\u7684\u534f\u8bae\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u5de5\u5177\u5e93(\u7c7b\u4f3c Json )\uff0c\u4f46\u76f8\u6bd4\u4e8e Json\uff0cProtobuf \u6709\u66f4\u9ad8\u7684\u8f6c\u5316\u6548\u7387\uff0c\u65f6\u95f4\u6548\u7387\u548c\u7a7a\u95f4\u6548\u7387\u90fd\u662f JSON \u76843-5\u500d\u3002\uff08\u73b0\u5728\u7684 RPC\u57fa\u672c\u90fd\u662f\u7528 protobuf \u4f5c\u4e3a\u901a\u8baf\u6570\u636e\u683c\u5f0f\u3002\uff09","title":"protobuf"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#poco","text":"POCO \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 C++ \u7c7b\u5e93\u7684\u96c6\u5408\uff0c\u5b83\u4e3b\u8981\u63d0\u4f9b\u7b80\u5355\u7684\u3001\u5feb\u901f\u7684\u7f51\u7edc\u548c\u53ef\u79fb\u690d\u5e94\u7528\u7a0b\u5e8f\u7684 C++ \u5f00\u53d1\uff0c\u8fd9\u4e2a\u7c7b\u5e93\u548c C++ \u6807\u51c6\u5e93\u53ef\u4ee5\u5f88\u597d\u7684\u96c6\u6210\u5e76\u586b\u8865 C++ \u6807\u51c6\u5e93\u7684\u529f\u80fd\u7a7a\u7f3a\u3002POCO \u5e93\u7684\u6a21\u5757\u5316\u3001\u9ad8\u6548\u7684\u8bbe\u8ba1\u53ca\u5b9e\u73b0\u4f7f\u5f97 \u7279\u522b\u9002\u5408\u5d4c\u5165\u5f0f\u5f00\u53d1 \u3002","title":"poco"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#libevent","text":"Libevent \u662f\u4e00\u4e2a\u7528 C \u8bed\u8a00\u7f16\u5199\u7684\u3001\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u4e8b\u4ef6\u901a\u77e5\u5e93\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4eae\u70b9\uff1a\u4e8b\u4ef6\u9a71\u52a8\uff0c\u9ad8\u6027\u80fd\uff0c\u8f7b\u91cf\u7ea7\uff0c\u4e13\u6ce8\u4e8e\u7f51\u7edc\uff0c\u4e0d\u5982 ACE \u90a3\u4e48\u81c3\u80bf\u5e9e\u5927\uff1b\u6e90\u4ee3\u7801\u76f8\u5f53\u7cbe\u70bc\u3001\u6613\u8bfb\uff1b\u8de8\u5e73\u53f0\uff1b\u652f\u6301\u591a\u79cd I/O \u591a\u8def\u590d\u7528\u6280\u672f\uff1aepoll\u3001poll\u3001select \u548c kqueue \u7b49\uff1b\u652f\u6301 I/O\uff0c\u5b9a\u65f6\u5668\u548c\u4fe1\u53f7\u7b49\u4e8b\u4ef6\uff1b\u6ce8\u518c\u4e8b\u4ef6\u4f18\u5148\u7ea7\u7b49\u3002","title":"libevent"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_4","text":"","title":"\u97f3\u89c6\u9891"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#ffmpeg","text":"\u97f3\u89c6\u9891\u5c4a\u7684yyds\uff0c\u97f3\u89c6\u9891\u5f00\u53d1\u6709\u8c01\u80fd\u7ed5\u8fc7 ffmpeg \uff1fffmpeg \u7684\u529f\u80fd\u76f8\u5f53\u5f3a\u5927\uff0c\u97f3\u89c6\u9891\u91c7\u96c6\u3001\u97f3\u89c6\u9891\u683c\u5f0f\u8f6c\u6362\u3001\u6ee4\u955c\u3001\u6c34\u5370\u3001\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3001\u63a8\u9001\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u7b49\u7b49\uff0c\u592a\u591a\u4e86\uff0c\u5bf9\u89c6\u9891\u7684\u7edd\u5927\u591a\u6570\u5904\u7406\u90fd\u53ef\u4ee5\u4f7f\u7528 ffmpeg\uff0c\u53ef\u4ee5\u8bf4\u65e0\u6240\u4e0d\u80fd\u3002","title":"FFmpeg"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_5","text":"","title":"\u56fe\u50cf\u5904\u7406"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#opencv","text":"OpenCV \u7528 C++ \u8bed\u8a00\u7f16\u5199\uff0c\u5b83\u5177\u6709 C ++\uff0cPython\uff0cJava \u548c MATLAB \u63a5\u53e3\uff0c\u5e76\u652f\u6301Windows\uff0cLinux\uff0cAndroid \u548c Mac OS \u591a\u79cd\u5e73\u53f0\uff0c \u5982\u4eca\u4e5f\u63d0\u4f9b\u5bf9\u4e8e C#\u3001Ch\u3001Ruby\uff0cGO \u7684\u652f\u6301\u3002\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u91cc\u975e\u5e38\u4e3e\u8db3\u8f7b\u91cd\u7684\u5e93\uff0c\u4e3b\u8981\u53ef\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b\u3001\u4eba\u8138\u68c0\u6d4b\u3001\u56fe\u50cf\u5904\u7406\u7b49\u3002","title":"OpenCV"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_6","text":"","title":"\u56fe\u5f62"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#opengl","text":"\u7528\u4e8e\u6e32\u67d3 2D\u30013D \u77e2\u91cf\u56fe\u5f62\u7684\u8de8\u8bed\u8a00\u3001\u8de8\u5e73\u53f0\u7684\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\uff0c\u56fe\u578b\u5f00\u53d1\u8005\u8c8c\u4f3c\u90fd\u79bb\u4e0d\u5f00 OpenGL\uff0c\u4e0e\u7eb9\u7406\u6709\u5173\u7684\u64cd\u4f5c\u57fa\u672c\u90fd\u4f1a\u7528\u5230 OpenGL\uff0c\u5e38\u7528\u4e8e CAD\u3001\u865a\u62df\u73b0\u5b9e\u3001\u79d1\u5b66\u53ef\u89c6\u5316\u7a0b\u5e8f\u548c\u7535\u5b50\u6e38\u620f\u5f00\u53d1\u3002","title":"OpenGL"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#vulkan","text":"\u4e0b\u4e00\u4ee3\u7684 OpenGL\uff0c\u53ef\u89e3\u51b3 OpenGL \u5f88\u591a\u6846\u67b6\u5c42\u9762\u7684\u7f3a\u9677\uff0c\u66f4\u9ad8\u6027\u80fd\uff0c\u53ef\u80fd\u6211\u4eec\u4ee5\u540e\u90fd\u4f1a\u4eceOpenGL \u8fc1\u79fb\u5230 Vulkan \u5427\uff0c\u4f46\u5347\u7ea7\u6c38\u8fdc\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613\uff0c\u6210\u672c\u592a\u9ad8\uff0c\u81f3\u5c11\u5b83\u73b0\u5728\u8fd8\u6ca1\u90a3\u4e48\u666e\u53ca\u3002","title":"Vulkan"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#ogre","text":"Ogre \u662f\u4e00\u4e2a\u4e09\u7ef4(3D)\u56fe\u5f62\u6e32\u67d3\u5f15\u64ce\u3002\u5b83\u662f\u9762\u5411\u5bf9\u8c61\u7684,\u5e76\u4e14\u9ad8\u6548\uff0c\u62bd\u8c61\u5316\u4e86\u4e0d\u540c\u7684 API \u548c\u5e73\u53f0\uff0c\u8fd9\u6837\u53ef\u4ee5\u4ee5\u573a\u666f\u4e3a\u5bf9\u8c61\u6765\u4f7f\u7528\u7269\u4f53\uff0c\u652f\u6301\u591a\u79cd\u573a\u666f\u3002\u5b83\u5df2\u7ecf\u6210\u529f\u5730\u88ab\u5e94\u7528\u4e8e\u8bf8\u591a\u4e09\u7ef4\u4eff\u771f\u9886\u57df\uff0c\u5305\u62ec\u7f51\u7edc\u6e38\u620f\u548c\u4e09\u7ef4\u4eff\u771f\u9879\u76ee\u3002\uff08\u6211\u4eec\u5e73\u65f6\u89c1\u5230\u7684\u5404\u79cd\u7279\u6548\uff0c\u6bd4\u5982\u5728\u4eba\u8111\u888b\u4e0a\u8d34\u4e2a\u5927\u6050\u9f99\uff0c\u8d34\u4e2aB\u7ad9\u5c0f\u7535\u89c6\uff0c\u53ef\u80fd\u5e95\u5c42\u5c31\u662f\u7528\u5230\u4e86 Ogre\u3002\uff09","title":"Ogre"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#bgfx","text":"bgfx \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u3001\u4e0e\u56fe\u5f62 API \u65e0\u5173\uff0c \"\u53ef\u6253\u9020\u4e2a\u6027\u5f15\u64ce/\u6846\u67b6\u201c \u98ce\u683c\u7684\u6e32\u67d3\u5e93\uff0c\u7c7b\u4f3c\u4e8eOgre\u3002","title":"bgfx"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_7","text":"","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#eigen","text":"Eigen \u662f\u4e00\u4e2a\u7ebf\u6027\u7b97\u672f\u7684 C++ \u6a21\u677f\u5e93\uff0c\u529f\u80fd\u5f3a\u5927\u3001\u5feb\u901f\u3001\u4f18\u96c5\u4ee5\u53ca\u652f\u6301\u591a\u5e73\u53f0\u3002\u60f3\u627e\u5173\u4e8e\u6570\u5b66\u8fd0\u7b97\u7684\u4e09\u65b9\u5e93\uff0c\u9996\u9009 Eigen \u5c31\u5bf9\u4e86\uff01","title":"Eigen"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#glm","text":"\u7531\u4e8e C/C++ \u6807\u51c6\u5e93\u4e2d\u6ca1\u6709\u51e0\u4f55\u6570\u5b66\u5e93\uff0c\u8fd9\u6837\u9020\u6210\u5728\u5f00\u53d1\u4e00\u4e2a\u4e09\u7ef4\u7cfb\u7edf\u4e4b\u521d\u5f80\u5f80\u90fd\u9700\u8981\u81ea\u884c\u5b9e\u73b0\u4e00\u4e2a\u5b9e\u7528\u7684\u51e0\u4f55\u6570\u5b66\u5e93\uff0c\u8fd9\u6837\u592a\u8d39\u65f6\u8d39\u529b\u4e86\u3002GLM \u7684\u51fa\u73b0\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e14GLM \u4e0d\u9700\u8981\u7f16\u8bd1\u6210\u4efb\u4f55\u5e93\uff0c\u53ea\u9700\u8981\u4f9d\u8d56\u5934\u6587\u4ef6\u5373\u53ef\u4f7f\u7528\u3002","title":"GLM"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#json","text":"","title":"JSON"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#rapidjson","text":"","title":"rapidjson"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#nlohmannjson","text":"","title":"nlohmann/json"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#cjson","text":"C++\u8bed\u8a00\u5c31\u5728 rapidjson \u548c nlohmann/json \u4e2d\u9009\u4e00\u4e2a\uff0cC\u8bed\u8a00\u5c31\u7528 cJSON\u3002","title":"cJSON"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_8","text":"","title":"\u670d\u52a1\u7aef\u5f15\u64ce"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#workflow","text":"\u641c\u72d7\u516c\u53f8 C++ \u670d\u52a1\u5668\u5f15\u64ce\uff0c\u652f\u6491\u641c\u72d7\u51e0\u4e4e\u6240\u6709\u540e\u7aef C++ \u5728\u7ebf\u670d\u52a1\uff0c\u5305\u62ec\u6240\u6709\u641c\u7d22\u670d\u52a1\uff0c\u4e91\u8f93\u5165\u6cd5\uff0c\u5728\u7ebf\u5e7f\u544a\u7b49\uff0c\u6bcf\u65e5\u5904\u7406\u8d85\u767e\u4ebf\u8bf7\u6c42\u3002\u8fd9\u662f\u4e00\u4e2a\u8bbe\u8ba1\u8f7b\u76c8\u4f18\u96c5\u7684\u4f01\u4e1a\u7ea7\u7a0b\u5e8f\u5f15\u64ce\uff0c\u53ef\u4ee5\u6ee1\u8db3\u5927\u591a\u6570 C++ \u540e\u7aef\u5f00\u53d1\u9700\u6c42\u3002","title":"workflow"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#log","text":"","title":"log"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#spdlog","text":"\u76ee\u524d\u6700\u706b\u7684C++log\u5e93\uff0c\u53ea\u9700\u8981\u5934\u6587\u4ef6\u5373\u53ef\uff0c\u517c\u5bb9C++11\uff0c\u76f8\u5f53\u65b9\u4fbf\u3002 \u7279\u70b9\uff1a \u975e\u5e38\u5feb \u65e0\u9700\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93 \u652f\u6301\u8de8\u5e73\u53f0 - Linux / Windows on 32/64 bits \u652f\u6301\u591a\u7ebf\u7a0b \u53ef\u5bf9\u65e5\u5fd7\u6587\u4ef6\u8fdb\u884c\u5faa\u73af\u8f93\u51fa \u53ef\u6bcf\u65e5\u751f\u6210\u65e5\u5fd7\u6587\u4ef6 \u652f\u6301\u63a7\u5236\u53f0\u65e5\u5fd7\u8f93\u51fa \u53ef\u9009\u7684\u5f02\u6b65\u65e5\u5fd7 \u652f\u6301\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b \u53ef\u81ea\u5b9a\u4e49\u65e5\u5fd7\u683c\u5f0f","title":"spdlog"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#glog","text":"Google Glog \u662f\u4e00\u4e2a C++ \u8bed\u8a00\u7684\u5e94\u7528\u7ea7\u65e5\u5fd7\u8bb0\u5f55\u6846\u67b6\uff0c\u63d0\u4f9b\u4e86 C++ \u98ce\u683c\u7684\u6d41\u64cd\u4f5c\u548c\u5404\u79cd\u8f85\u52a9\u5b8f\u3002","title":"glog"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#fmtlibfmt","text":"formatting \u5e93\uff0c\u76f8\u5f53\u4e0d\u9519\uff0c\u5982\u679c\u89c9\u5f97\u4e0b\u9762\u7684\u4ee3\u7801\u975e\u5e38\u7e41\u7410\uff0c\u53ef\u8003\u8651\u4f7f\u7528fmt\u3002 cout << \"(\" << a << \")(\" << b << \")(\" << c << \")\" << endl ;","title":"fmtlib/fmt"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_9","text":"","title":"\u5e76\u53d1\u5e93"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#tbb","text":"","title":"TBB"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#openmp","text":"","title":"openmp"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_10","text":"","title":"\u6df1\u5ea6\u5b66\u4e60"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#pytorch","text":"","title":"pytorch"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_11","text":"","title":"\u5185\u5b58(\u9ad8\u6548\u5185\u5b58\u5206\u914d\u5668\uff0c\u5c24\u5176\u591a\u7ebf\u7a0b\u573a\u666f)"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#jemalloc","text":"","title":"jemalloc"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#tcmalloc","text":"tcmalloc\u66f4\u7a33\u5b9a\uff0c\u5360\u7528\u5185\u5b58\u66f4\u4f4e\uff0cjemalloc\u6027\u80fd\u66f4\u9ad8\uff0c\u5360\u7528\u5185\u5b58\u66f4\u9ad8\uff01","title":"tcmalloc"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_12","text":"","title":"\u6570\u636e\u538b\u7f29"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#zlib","text":"zlib \u662f\u63d0\u4f9b\u6570\u636e\u538b\u7f29\u7528\u7684\u51fd\u6570\u5e93\uff0c\u8c8c\u4f3c\u5728 C++ \u4e2d\u4f7f\u7528\u6570\u636e\u538b\u7f29\u90fd\u4f1a\u7528 zlib\u3002","title":"zlib"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_13","text":"","title":"\u754c\u9762"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#qt","text":"QT \u5de5\u5177\u4e30\u5bcc\u3001\u529f\u80fd\u4e30\u5bcc\u3001\u5f00\u6e90\u5e76\u8de8\u5e73\u53f0\u3001\u67b6\u6784\u7684\u4f18\u52bf\u7b49\uff0c\u5bfc\u81f4\u539f\u6765\u8d8a\u591a\u7684\u7a0b\u5e8f\u5458\u6295\u5411\u4e86 QT \u7684\u6000\u62b1\u3002","title":"Qt"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_14","text":"","title":"\u6570\u636e\u5e93"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#sqlite3","text":"\u4e00\u6b3e\u8f7b\u578b\u7684\u6570\u636e\u5e93\u3002\u53c2\u8003\u94fe\u63a5\uff1a https://mp.weixin.qq.com/s/xrIxe9JE7uNzir0c8i1tsQ","title":"sqlite3"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#_15","text":"","title":"\u53c2\u6570\u89e3\u6790"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#gflags","text":"google \u5f00\u6e90\u7684 gflags \u662f\u4e00\u5957\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5de5\u5177\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\uff0cgflags \u8fd8\u652f\u6301\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u53c2\u6570\uff08\u53ef\u7528 gflags \u4ee3\u66ff\u914d\u7f6e\u6587\u4ef6\uff09\u3002","title":"gflags"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#rpc","text":"","title":"rpc"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#brpc","text":"brpc \u53c8\u79f0\u4e3a baidu-rpc\uff0c\u767e\u5ea6\u51fa\u54c1\u3002brpc \u76ee\u524d\u88ab\u5e94\u7528\u4e8e\u767e\u5ea6\u516c\u53f8\u5185\u90e8\u548c\u5176\u4ed6\u5916\u90e8\u597d\u591a\u516c\u53f8\u7684\u5404\u79cd\u6838\u5fc3\u4e1a\u52a1\u4e0a\u3002","title":"brpc"},{"location":"Programming/00.%20C%2B%2B/%E5%BC%80%E6%BA%90%E5%BA%93/#grpc","text":"gRPC \u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u73b0\u4ee3\u5f00\u6e90\u9ad8\u6027\u80fd RPC \u6846\u67b6\u3002google \u51fa\u54c1\uff0c\u5fc5\u5c5e\u7ecf\u5178\u3002","title":"grpc"},{"location":"Programming/00.%20C%2B%2B/%E8%B0%B7%E6%AD%8C%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/","text":"https://www.cnblogs.com/coderzh/archive/2009/04/06/1426758.html","title":"\u8c37\u6b4c\u6d4b\u8bd5\u6846\u67b6"},{"location":"Programming/00.%20C%2B%2B/Boost/Boost%20%E7%AE%80%E4%BB%8B/","text":"Boost \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u3001\u6784\u9020\u7cbe\u5de7\u3001\u8de8\u5e73\u53f0\u3001\u5f00\u6e90\u5e76\u4e14\u5b8c\u5168\u514d\u8d39\u7684 [[00. C++ \u7b80\u4ecb#C++|C++]] \u7a0b\u5e8f\u5e93\u3002\u5b98\u7f51\u5730\u5740\uff1a https://www.boost.org/ ^83e71d Boost \u5f3a\u8c03\u7a0b\u5e8f\u5e93\u8981\u4e0e C++ \u6807\u51c6\u5e93\u5f88\u597d\u5730\u5171\u540c\u5de5\u4f5c\uff0c\u5efa\u7acb\u5728\u201c\u65e2\u6709\u7684\u5b9e\u8df5\u201d\u4e4b\u4e0a\u5e76\u63d0\u4f9b\u53c2\u8003\u5b9e\u73b0\uff0c\u56e0\u6b64 Boost \u5e93\u53ef\u4ee5\u9002\u5408\u6700\u540e\u7684\u6807\u51c6\u5316\u3002 Boost \u6709\u7740\u5176\u4ed6\u7a0b\u5e8f\u5e93\u65e0\u6cd5\u6bd4\u62df\u7684\u4f18\u70b9\uff1a - \u9996\u5148\uff0c\u8bb8\u591a Boost \u5e93\u7684\u4f5c\u8005\u672c\u8eab\u5c31\u662f C++ \u6807\u51c6\u59d4\u5458\u4f1a\u6210\u5458\uff0c\u56e0\u6b64\uff0cBoost \u201c\u5929\u7136\u201d\u6210\u4e86\u6807\u51c6\u5e93\u7684\u540e\u5907\uff0c\u8d1f\u8d23\u5411\u65b0\u6807\u51c6\u8f93\u9001\u7ec4\u4ef6\uff0c\u8fd9\u4e5f\u4f7f\u5f97 Boost \u83b7\u5f97\u4e86\u201c\u51c6\u201d\u6807\u51c6\u5e93\u7684\u7f8e\u8a89\u3002 - \u5176\u6b21\uff0cBoost \u72ec\u7279\u7684\u540c\u884c\u5ba1\u67e5\u5236\u5ea6\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a Boost \u5e93\u7ec4\u4ef6\u90fd\u7ecf\u8fc7\u4e86\u4e25\u683c\u7684\u5ba1\u67e5\u548c\u9a8c\u8bc1\uff0c\u4f7f\u5176\u5177\u6709\u5f88\u9ad8\u7684\u5de5\u4e1a\u5f3a\u5ea6\uff0c\u751a\u81f3\u8d85\u8fc7\u5927\u591a\u6570\u5546\u4e1a\u4ea7\u54c1\u7684\u5b9e\u73b0\u3002 - \u518d\u6b21\uff0cBoost \u91c7\u7528\u4e86\u7c7b\u4f3c STL \u7684\u7f16\u7a0b\u8303\u5f0f\uff0c\u4f46\u5374\u5e76\u6ca1\u6709 STL \u90a3\u6837\u6666\u6da9\u96be\u61c2\uff0c\u5176\u4ee3\u7801\u683c\u5f0f\u4f18\u7f8e\u6e05\u6670\u3001\u6613\u4e8e\u9605\u8bfb\uff0c\u800c\u4e14 Boost \u9644\u5e26\u4e30\u5bcc\u7684\u8bf4\u660e\u6587\u6863\u2014\u2014\u5b83\u65e2\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5e93\uff0c\u4e5f\u662f\u4e00\u4e2a\u5f88\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u73b0\u4ee3 C++ \u7f16\u7a0b\u7684\u8303\u672c\u3002 - \u6700\u540e\uff0cBoost \u7684\u53d1\u5e03\u91c7\u7528 Boost Software License\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u540c\u4e8e GPL \u548c Apache\u7684\u975e\u5e38\u5bbd\u677e\u7684\u8bb8\u53ef\u8bc1\uff0c\u8be5\u8bb8\u53ef\u8bc1\u8fd0\u884c\u5e93\u7528\u6237\u5c06 Boost \u7528\u4e8e\u4efb\u4f55\u7528\u9014\uff0c\u65e2\u9f13\u52b1\u975e\u5546\u4e1a\u7528\u9014\uff0c\u4e5f\u9f13\u52b1\u5546\u4e1a\u7528\u9014\u3002\u7528\u6237\u65e0\u987b\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\uff0c\u4e0d\u53d7\u4efb\u4f55\u9650\u5236\uff0c\u5373\u53ef\u8f7b\u677e\u4eab\u6709 Boost \u7684\u5168\u90e8\u529f\u80fd\u3002 \u4f7f\u7528\u65b9\u5f0f Boost \u5e93\u7684\u5927\u591a\u6570\u7ec4\u4ef6\u4e0d\u9700\u8981\u7f16\u8bd1\u94fe\u63a5\uff0c\u6211\u4eec\u5728\u81ea\u5df1\u7684\u6e90\u7801\u91cc\u76f4\u63a5\u5305\u542b\u5934\u6587\u4ef6\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u4f7f\u7528 boost::tribool \uff0c\u53ea\u9700\u8981\u5728 C++ \u6e90\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b include \u8bed\u53e5\uff1a #include <boost/logic/tribool.hpp> //\u4f7f\u7528 tribool \u5e93 Boost \u5e93\u7684\u5934\u6587\u4ef6\u4e0e\u6211\u4eec\u5e73\u5e38\u6240\u7528\u7684\u5934\u6587\u4ef6\uff08 *.h \uff09\u6216\u8005 C++ \u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\uff08\u6ca1\u6709\u540e\u7f00\u540d\uff09\u4e0d\u540c\uff0c\u8fd9\u6b63\u662f Boost \u7684\u72ec\u7279\u4e4b\u5904\u3002\u5b83\u628a C++ \u7c7b\u7684\u58f0\u660e\u548c\u5b9e\u73b0\u653e\u5728\u4e86\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u5206\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u5373 .h + .cpp \uff0c\u6545\u540e\u7f00\u540d\u662f .hpp \u3002 \u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u4e0e\u666e\u901a\u7684 C \u5934\u6587\u4ef6\uff08 *.h \uff09\u533a\u5206\uff0c\u53e6\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u539f\u56e0\u5c31\u662f\u4f7f Boost \u5e93\u4e0d\u9700\u8981\u9884\u5148\u7f16\u8bd1\uff0c\u76f4\u63a5\u5c06\u5176\u5f15\u5165\u7a0b\u5e8f\u5458\u7684\u5de5\u7a0b\u5373\u53ef\u7f16\u8bd1\u94fe\u63a5\uff0c\u65b9\u4fbf\u4e86 Boost \u5e93\u7684\u4f7f\u7528\u3002 \u5269\u4e0b\u7684\u5c11\u91cf\u5e93\uff08\u5982 chrono \u3001 date_time \u3001 program_options \u3001 test \u3001 thread \u7b49\uff09\uff0c\u5fc5\u987b\u7f16\u8bd1\u6210\u9759\u6001\u5e93\u6216\u52a8\u6001\u5e93\uff0c\u5e76\u5728\u6784\u5efa\u65f6\u6307\u5b9a\u94fe\u63a5\u9009\u9879\u624d\u80fd\u4f7f\u7528\u3002","title":"Boost \u7b80\u4ecb"},{"location":"Programming/00.%20C%2B%2B/Boost/Boost%20%E7%AE%80%E4%BB%8B/#_1","text":"Boost \u5e93\u7684\u5927\u591a\u6570\u7ec4\u4ef6\u4e0d\u9700\u8981\u7f16\u8bd1\u94fe\u63a5\uff0c\u6211\u4eec\u5728\u81ea\u5df1\u7684\u6e90\u7801\u91cc\u76f4\u63a5\u5305\u542b\u5934\u6587\u4ef6\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u4f7f\u7528 boost::tribool \uff0c\u53ea\u9700\u8981\u5728 C++ \u6e90\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b include \u8bed\u53e5\uff1a #include <boost/logic/tribool.hpp> //\u4f7f\u7528 tribool \u5e93 Boost \u5e93\u7684\u5934\u6587\u4ef6\u4e0e\u6211\u4eec\u5e73\u5e38\u6240\u7528\u7684\u5934\u6587\u4ef6\uff08 *.h \uff09\u6216\u8005 C++ \u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\uff08\u6ca1\u6709\u540e\u7f00\u540d\uff09\u4e0d\u540c\uff0c\u8fd9\u6b63\u662f Boost \u7684\u72ec\u7279\u4e4b\u5904\u3002\u5b83\u628a C++ \u7c7b\u7684\u58f0\u660e\u548c\u5b9e\u73b0\u653e\u5728\u4e86\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u5206\u6210\u4e24\u4e2a\u6587\u4ef6\uff0c\u5373 .h + .cpp \uff0c\u6545\u540e\u7f00\u540d\u662f .hpp \u3002 \u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u4e0e\u666e\u901a\u7684 C \u5934\u6587\u4ef6\uff08 *.h \uff09\u533a\u5206\uff0c\u53e6\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u539f\u56e0\u5c31\u662f\u4f7f Boost \u5e93\u4e0d\u9700\u8981\u9884\u5148\u7f16\u8bd1\uff0c\u76f4\u63a5\u5c06\u5176\u5f15\u5165\u7a0b\u5e8f\u5458\u7684\u5de5\u7a0b\u5373\u53ef\u7f16\u8bd1\u94fe\u63a5\uff0c\u65b9\u4fbf\u4e86 Boost \u5e93\u7684\u4f7f\u7528\u3002 \u5269\u4e0b\u7684\u5c11\u91cf\u5e93\uff08\u5982 chrono \u3001 date_time \u3001 program_options \u3001 test \u3001 thread \u7b49\uff09\uff0c\u5fc5\u987b\u7f16\u8bd1\u6210\u9759\u6001\u5e93\u6216\u52a8\u6001\u5e93\uff0c\u5e76\u5728\u6784\u5efa\u65f6\u6307\u5b9a\u94fe\u63a5\u9009\u9879\u624d\u80fd\u4f7f\u7528\u3002","title":"\u4f7f\u7528\u65b9\u5f0f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/","text":"\u4e00\u76f4\u4ee5\u6765 C++ \u7f3a\u4e4f\u5bf9\u65f6\u95f4\u548c\u65e5\u671f\u7684\u5904\u7406\u80fd\u529b\uff0c\u800c\u5728\u663e\u793a\u751f\u6d3b\u4e2d\u7ecf\u5e38\u9047\u5230\u65f6\u95f4\u548c\u65e5\u671f\uff0c\u6240\u4ee5 C++ \u7a0b\u5e8f\u5458\u4e0d\u5f97\u4e0d\u501f\u52a9 C \u8bed\u8a00\uff0c\u4f7f\u7528\u5176\u7b28\u62d9\u7684\u7ed3\u6784\u548c\u51fd\u6570\u3002\u65e0\u6cd5\u5fcd\u53d7\u8fd9\u4e00\u60c5\u5f62\u7684\u7a0b\u5e8f\u5458\u5219\u624b\u52a8\u6784\u9020\u4e86\u81ea\u5df1\u7684\u5b9e\u73b0\u4ee5\u6ee1\u8db3\u5f00\u53d1\u6240\u9700\uff0c\u53ef\u4ee5\u60f3\u8c61\uff0c\u6709\u65e0\u6570\u7684\u7a0b\u5e8f\u5458\u5728\u8fd9\u65b9\u9762\u91cd\u590d\u4e86\u5927\u91cf\u7684\u5de5\u4f5c\u3002 [[Boost \u7b80\u4ecb#^83e71d|Boost]] \u4f7f\u7528 timer \u3001 date_time \u548c chrono \u5b8c\u7f8e\u5730\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002 timer \u5e93\u6982\u8ff0 timer \u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e93\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7b80\u6613\u7684\u5ea6\u91cf\u65f6\u95f4\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u4e8e\u6027\u80fd\u6d4b\u8bd5\u7b49\u9700\u8981\u8ba1\u65f6\u7684\u4efb\u52a1\uff0c\u5b83\u9002\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\u3002 Boost 1.48 \u7248\u672c\u4ee5\u540e\u7684 timer \u5e93\u7531\u4e24\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff1a\u65e9\u671f\u7684 timer (V1)\u548c\u65b0\u7684 cpu_timer (V2)\uff0c\u524d\u8005\u4f7f\u7528\u7684\u662f\u6807\u51c6 C/C++ \u5e93\u51fd\u6570\uff0c\u800c\u540e\u8005\u5219\u57fa\u4e8e chrono \u5e93\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684 API\uff0c\u5176\u8ba1\u65f6\u7cbe\u5ea6\u66f4\u9ad8\u3002V1 \u7248\u7684 timer \u7ec4\u4ef6\u7684\u8ba1\u65f6\u7cbe\u5ea6\u4f4e\uff0c Boost \u5b98\u65b9\u5df2\u7ecf\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\uff08\u7f16\u8bd1\u4f1a\u6709\u8b66\u544a\uff09 \uff0c\u4f46\u5bf9\u4e8e Boost \u521d\u5b66\u8005\u6765\u8bf4\u5b83\u4ecd\u7136\u5177\u6709\u4e00\u5b9a\u7684\u5b66\u4e60\u4ef7\u503c\u3002 timer \uff08V1\uff09\u5e93\u53c8\u5305\u542b\u4e24\u4e2a\u5c0f\u7ec4\u4ef6\uff0c\u5206\u522b\u662f timer \u548c progress_timer \uff0c\u4ee5\u4e0b\u5c06\u5206\u522b\u8be6\u8ff0\u3002 [[01. timer]] [[02. progress_timer]] [[03. date_time \u5e93\u6982\u8ff0]] [[04. \u5904\u7406\u65e5\u671f]] [[05. \u5904\u7406\u65f6\u95f4]]","title":"00. \u65f6\u95f4\u4e0e\u65e5\u671f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/#timer","text":"timer \u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e93\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7b80\u6613\u7684\u5ea6\u91cf\u65f6\u95f4\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u4e8e\u6027\u80fd\u6d4b\u8bd5\u7b49\u9700\u8981\u8ba1\u65f6\u7684\u4efb\u52a1\uff0c\u5b83\u9002\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\u3002 Boost 1.48 \u7248\u672c\u4ee5\u540e\u7684 timer \u5e93\u7531\u4e24\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff1a\u65e9\u671f\u7684 timer (V1)\u548c\u65b0\u7684 cpu_timer (V2)\uff0c\u524d\u8005\u4f7f\u7528\u7684\u662f\u6807\u51c6 C/C++ \u5e93\u51fd\u6570\uff0c\u800c\u540e\u8005\u5219\u57fa\u4e8e chrono \u5e93\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684 API\uff0c\u5176\u8ba1\u65f6\u7cbe\u5ea6\u66f4\u9ad8\u3002V1 \u7248\u7684 timer \u7ec4\u4ef6\u7684\u8ba1\u65f6\u7cbe\u5ea6\u4f4e\uff0c Boost \u5b98\u65b9\u5df2\u7ecf\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\uff08\u7f16\u8bd1\u4f1a\u6709\u8b66\u544a\uff09 \uff0c\u4f46\u5bf9\u4e8e Boost \u521d\u5b66\u8005\u6765\u8bf4\u5b83\u4ecd\u7136\u5177\u6709\u4e00\u5b9a\u7684\u5b66\u4e60\u4ef7\u503c\u3002 timer \uff08V1\uff09\u5e93\u53c8\u5305\u542b\u4e24\u4e2a\u5c0f\u7ec4\u4ef6\uff0c\u5206\u522b\u662f timer \u548c progress_timer \uff0c\u4ee5\u4e0b\u5c06\u5206\u522b\u8be6\u8ff0\u3002 [[01. timer]] [[02. progress_timer]] [[03. date_time \u5e93\u6982\u8ff0]] [[04. \u5904\u7406\u65e5\u671f]] [[05. \u5904\u7406\u65f6\u95f4]]","title":"timer\u5e93\u6982\u8ff0"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/01.%20timer/","text":"timer timer \u53ef\u4ee5\u6d4b\u91cf\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u8ba1\u65f6\u5668\uff0c\u53ef\u63d0\u4f9b\u6beb\u79d2\u7ea7\u522b\u7684\u8ba1\u65f6\u7cbe\u5ea6\u548c\u64cd\u4f5c\u51fd\u6570\uff0c\u4f9b\u7a0b\u5e8f\u5458\u624b\u5de5\u63a7\u5236\u4f7f\u7528\uff0c\u5b83\u5c31\u50cf\u4e2a\u79d2\u8868\u3002 timer \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/timer.hpp> using namespace boost ; \u7528\u6cd5 #include <iostream> #include <boost/timer.hpp> using namespace boost ; int main () { timer t ; std :: cout << \"max timespan:\" << t . elapsed_max () / 3600 << \"h\" << std :: endl ; std :: cout << \"min timespan:\" << t . elapsed_min () / 3600 << \"h\" << std :: endl ; std :: cout << \"now time elapsed:\" << t . elapsed () << \"s\" << std :: endl ; } \u4e0a\u8ff0\u4ee3\u7801\u57fa\u672c\u8bf4\u660e\u4e86 timer \u7684\u63a5\u53e3\u3002 timer \u5bf9\u8c61\u4e00\u65e6\u88ab\u58f0\u660e\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u5c31\u201c\u542f\u52a8\u201d\u4e86\u8ba1\u65f6\u5de5\u4f5c\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u968f\u65f6\u7528 elapsed() \u51fd\u6570\u7b80\u5355\u5730\u6d4b\u91cf\u81ea\u5bf9\u8c61\u521b\u5efa\u540e\u6240\u6d41\u901d\u7684\u65f6\u95f4\u3002\u6210\u5458\u51fd\u6570 elapsed_min() \u7528\u4e8e\u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5c0f\u65f6\u95f4\u8303\u56f4\uff0c elapsed_max() \u7528\u4e8e\u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u591a\u65f6\u95f4\u8303\u56f4\uff0c\u5b83\u4eec\u7684\u5355\u4f4d\u90fd\u662f\u79d2\u3002 \u8f93\u51fa\u7ed3\u679c\uff1a max timespan : 596.523 h min timespan : 2.77778e-07 h now time elapsed : 0.001 s \u7c7b\u6458\u8981 timer\u975e\u5e38\u5c0f\uff0c\u5168\u90e8\u5b9e\u73b0\uff08\u5305\u62ec\u6240\u6709\u6ce8\u91ca\uff09\u4e5f\u4e0d\u8fc770\u4f59\u884c\uff0c\u771f\u6b63\u7684\u5b9e\u73b0\u4ee3\u7801\u5219\u53ea\u6709\u4e0d\u523020\u884c\uff1a class timer { public : timer () { _start_time = std :: clock (); } // postcondition: elapsed()==0 // timer( const timer& src ); // post: elapsed()==src.elapsed() // ~timer(){} // timer& operator=( const timer& src ); // post: elapsed()==src.elapsed() void restart () { _start_time = std :: clock (); } // post: elapsed()==0 double elapsed () const // return elapsed time in seconds { return double ( std :: clock () - _start_time ) / CLOCKS_PER_SEC ; } double elapsed_max () const // return estimated maximum value for elapsed() // Portability warning: elapsed_max() may return too high a value on systems // where std::clock_t overflows or resets at surprising values. { return ( double (( std :: numeric_limits < std :: clock_t >:: max )()) - double ( _start_time )) / double ( CLOCKS_PER_SEC ); } double elapsed_min () const // return minimum value for elapsed() { return double ( 1 ) / double ( CLOCKS_PER_SEC ); } private : std :: clock_t _start_time ; }; // timer timer \u7684\u8ba1\u65f6\u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u5934\u6587\u4ef6 <ctime> \u91cc\u7684 std::clock() \u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u81ea\u8fdb\u7a0b\u542f\u52a8\u4ee5\u6765\u7684 clock \u6570\uff0c\u6bcf\u79d2\u7684 clock \u6570\u5219\u7531\u5b8f CLOCKS_PER_SEC \u5b9a\u4e49\u3002 timer \u7684\u6784\u9020\u51fd\u6570\u8bb0\u5f55\u5f53\u524d\u7684 clock \u6570\u4f5c\u4e3a\u8ba1\u65f6\u8d77\u70b9\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u79c1\u6709\u6210\u5458\u53d8\u91cf _start_time \u4e2d\u3002\u6bcf\u5f53\u8c03\u7528 elapsed() \u65f6\u5c31\u4f1a\u83b7\u53d6\u6b64\u65f6\u7684 clock \u6570\uff0c\u7528 clock \u6570\u51cf\u53bb\u8ba1\u65f6\u8d77\u70b9\uff0c\u518d\u9664\u4ee5 CLOCKS_PER_SEC \u53ef\u4ee5\u83b7\u5f97\u5df2\u7ecf\u6d41\u901d\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u8c03\u7528\u51fd\u6570 restart() \uff0c\u5219\u91cd\u65b0\u5f00\u59cb\u8ba1\u65f6\u3002 \u51fd\u6570 elapsed_min() \u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5c0f\u65f6\u95f4\u5355\u4f4d\uff0c\u662f CLOCKS_PER_SEC \u7684\u5012\u6570\u3002\u51fd\u6570 elapsed_max() \u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u7684\u6570\u503c\u6781\u9650\u7c7b numeric_limits \uff0c\u83b7\u5f97 clock_t \u7c7b\u578b\u7684\u6700\u5927\u503c\uff0c\u8be5\u51fd\u6570\u91c7\u7528\u7c7b\u4f3c elapsed() \u7684\u65b9\u5f0f\u8ba1\u7b97\u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5927\u65f6\u95f4\u8303\u56f4\u3002 timer\u6ca1\u6709\u5b9a\u4e49\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u6837\u505a\u662f\u6b63\u786e\u4e14\u5b89\u5168\u7684\u3002\u56e0\u4e3a\u5b83\u4ec5\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3a clock_t \u7684\u6210\u5458\u53d8\u91cf _start_time \uff0c\u6545\u6ca1\u6709\u5fc5\u8981\u5b9e\u73b0\u6790\u6784\u51fd\u6570\u6765\u7279\u610f\u91ca\u653e\u8d44\u6e90\uff08\u4e8b\u5b9e\u4e0a\uff0c\u4e5f\u65e0\u8d44\u6e90\u53ef\u4f9b\u91ca\u653e\uff09\u3002 \u4f7f\u7528\u5efa\u8bae timer \u63a5\u53e3\u7b80\u5355\u597d\u7528\uff0c\u9002\u7528\u4e8e\u5927\u90e8\u5206\u8981\u6c42\u4e0d\u9ad8\u7684\u7a0b\u5e8f\u8ba1\u65f6\u4efb\u52a1\u3002\u4f46\u5728\u4f7f\u7528 timer \u65f6\u6211\u4eec\u5fc5\u987b\u7406\u89e3 elapsed_max() \u548c elapsed_min() \u8fd9\u8fde\u4e2a\u8ba1\u65f6\u7cbe\u5ea6\u51fd\u6570\u7684\u542b\u4e49\uff0c\u5b83\u4eec\u8868\u660e\u4e86 timer \u7684\u80fd\u529b\u3002 timer \u4e0d\u9002\u7528\u4e8e\u9ad8\u7cbe\u5ea6\u7684\u65f6\u95f4\u6d4b\u91cf\u4efb\u52a1 \uff0c\u5b83\u7684\u7cbe\u5ea6\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u6216\u8005\u7f16\u8bd1\u5668\uff0c\u96be\u4ee5\u505a\u5230\u8de8\u5e73\u53f0\u3002 timer \u4e5f\u4e0d\u9002\u7528\u4e8e\u6d4b\u91cf\u5927\u8de8\u5ea6\u65f6\u95f4\u6bb5 \uff0c\u5982\u679c\u9700\u8981\u4ee5\u5929\u3001\u6708\uff0c\u751a\u81f3\u5e74\u4e3a\u65f6\u95f4\u5355\u4f4d\u5219\u4e0d\u80fd\u4f7f\u7528 timer \uff0c\u5e94\u4f7f\u7528 cpu_timer \u7ec4\u4ef6\u3002","title":"`timer`"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/01.%20timer/#timer","text":"timer \u53ef\u4ee5\u6d4b\u91cf\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u8ba1\u65f6\u5668\uff0c\u53ef\u63d0\u4f9b\u6beb\u79d2\u7ea7\u522b\u7684\u8ba1\u65f6\u7cbe\u5ea6\u548c\u64cd\u4f5c\u51fd\u6570\uff0c\u4f9b\u7a0b\u5e8f\u5458\u624b\u5de5\u63a7\u5236\u4f7f\u7528\uff0c\u5b83\u5c31\u50cf\u4e2a\u79d2\u8868\u3002 timer \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/timer.hpp> using namespace boost ;","title":"timer"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/01.%20timer/#_1","text":"#include <iostream> #include <boost/timer.hpp> using namespace boost ; int main () { timer t ; std :: cout << \"max timespan:\" << t . elapsed_max () / 3600 << \"h\" << std :: endl ; std :: cout << \"min timespan:\" << t . elapsed_min () / 3600 << \"h\" << std :: endl ; std :: cout << \"now time elapsed:\" << t . elapsed () << \"s\" << std :: endl ; } \u4e0a\u8ff0\u4ee3\u7801\u57fa\u672c\u8bf4\u660e\u4e86 timer \u7684\u63a5\u53e3\u3002 timer \u5bf9\u8c61\u4e00\u65e6\u88ab\u58f0\u660e\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u5c31\u201c\u542f\u52a8\u201d\u4e86\u8ba1\u65f6\u5de5\u4f5c\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u968f\u65f6\u7528 elapsed() \u51fd\u6570\u7b80\u5355\u5730\u6d4b\u91cf\u81ea\u5bf9\u8c61\u521b\u5efa\u540e\u6240\u6d41\u901d\u7684\u65f6\u95f4\u3002\u6210\u5458\u51fd\u6570 elapsed_min() \u7528\u4e8e\u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5c0f\u65f6\u95f4\u8303\u56f4\uff0c elapsed_max() \u7528\u4e8e\u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u591a\u65f6\u95f4\u8303\u56f4\uff0c\u5b83\u4eec\u7684\u5355\u4f4d\u90fd\u662f\u79d2\u3002 \u8f93\u51fa\u7ed3\u679c\uff1a max timespan : 596.523 h min timespan : 2.77778e-07 h now time elapsed : 0.001 s","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/01.%20timer/#_2","text":"timer\u975e\u5e38\u5c0f\uff0c\u5168\u90e8\u5b9e\u73b0\uff08\u5305\u62ec\u6240\u6709\u6ce8\u91ca\uff09\u4e5f\u4e0d\u8fc770\u4f59\u884c\uff0c\u771f\u6b63\u7684\u5b9e\u73b0\u4ee3\u7801\u5219\u53ea\u6709\u4e0d\u523020\u884c\uff1a class timer { public : timer () { _start_time = std :: clock (); } // postcondition: elapsed()==0 // timer( const timer& src ); // post: elapsed()==src.elapsed() // ~timer(){} // timer& operator=( const timer& src ); // post: elapsed()==src.elapsed() void restart () { _start_time = std :: clock (); } // post: elapsed()==0 double elapsed () const // return elapsed time in seconds { return double ( std :: clock () - _start_time ) / CLOCKS_PER_SEC ; } double elapsed_max () const // return estimated maximum value for elapsed() // Portability warning: elapsed_max() may return too high a value on systems // where std::clock_t overflows or resets at surprising values. { return ( double (( std :: numeric_limits < std :: clock_t >:: max )()) - double ( _start_time )) / double ( CLOCKS_PER_SEC ); } double elapsed_min () const // return minimum value for elapsed() { return double ( 1 ) / double ( CLOCKS_PER_SEC ); } private : std :: clock_t _start_time ; }; // timer timer \u7684\u8ba1\u65f6\u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u5934\u6587\u4ef6 <ctime> \u91cc\u7684 std::clock() \u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u81ea\u8fdb\u7a0b\u542f\u52a8\u4ee5\u6765\u7684 clock \u6570\uff0c\u6bcf\u79d2\u7684 clock \u6570\u5219\u7531\u5b8f CLOCKS_PER_SEC \u5b9a\u4e49\u3002 timer \u7684\u6784\u9020\u51fd\u6570\u8bb0\u5f55\u5f53\u524d\u7684 clock \u6570\u4f5c\u4e3a\u8ba1\u65f6\u8d77\u70b9\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u79c1\u6709\u6210\u5458\u53d8\u91cf _start_time \u4e2d\u3002\u6bcf\u5f53\u8c03\u7528 elapsed() \u65f6\u5c31\u4f1a\u83b7\u53d6\u6b64\u65f6\u7684 clock \u6570\uff0c\u7528 clock \u6570\u51cf\u53bb\u8ba1\u65f6\u8d77\u70b9\uff0c\u518d\u9664\u4ee5 CLOCKS_PER_SEC \u53ef\u4ee5\u83b7\u5f97\u5df2\u7ecf\u6d41\u901d\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u8c03\u7528\u51fd\u6570 restart() \uff0c\u5219\u91cd\u65b0\u5f00\u59cb\u8ba1\u65f6\u3002 \u51fd\u6570 elapsed_min() \u8fd4\u56de timer \u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5c0f\u65f6\u95f4\u5355\u4f4d\uff0c\u662f CLOCKS_PER_SEC \u7684\u5012\u6570\u3002\u51fd\u6570 elapsed_max() \u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u7684\u6570\u503c\u6781\u9650\u7c7b numeric_limits \uff0c\u83b7\u5f97 clock_t \u7c7b\u578b\u7684\u6700\u5927\u503c\uff0c\u8be5\u51fd\u6570\u91c7\u7528\u7c7b\u4f3c elapsed() \u7684\u65b9\u5f0f\u8ba1\u7b97\u80fd\u591f\u6d4b\u91cf\u7684\u6700\u5927\u65f6\u95f4\u8303\u56f4\u3002 timer\u6ca1\u6709\u5b9a\u4e49\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u6837\u505a\u662f\u6b63\u786e\u4e14\u5b89\u5168\u7684\u3002\u56e0\u4e3a\u5b83\u4ec5\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3a clock_t \u7684\u6210\u5458\u53d8\u91cf _start_time \uff0c\u6545\u6ca1\u6709\u5fc5\u8981\u5b9e\u73b0\u6790\u6784\u51fd\u6570\u6765\u7279\u610f\u91ca\u653e\u8d44\u6e90\uff08\u4e8b\u5b9e\u4e0a\uff0c\u4e5f\u65e0\u8d44\u6e90\u53ef\u4f9b\u91ca\u653e\uff09\u3002","title":"\u7c7b\u6458\u8981"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/01.%20timer/#_3","text":"timer \u63a5\u53e3\u7b80\u5355\u597d\u7528\uff0c\u9002\u7528\u4e8e\u5927\u90e8\u5206\u8981\u6c42\u4e0d\u9ad8\u7684\u7a0b\u5e8f\u8ba1\u65f6\u4efb\u52a1\u3002\u4f46\u5728\u4f7f\u7528 timer \u65f6\u6211\u4eec\u5fc5\u987b\u7406\u89e3 elapsed_max() \u548c elapsed_min() \u8fd9\u8fde\u4e2a\u8ba1\u65f6\u7cbe\u5ea6\u51fd\u6570\u7684\u542b\u4e49\uff0c\u5b83\u4eec\u8868\u660e\u4e86 timer \u7684\u80fd\u529b\u3002 timer \u4e0d\u9002\u7528\u4e8e\u9ad8\u7cbe\u5ea6\u7684\u65f6\u95f4\u6d4b\u91cf\u4efb\u52a1 \uff0c\u5b83\u7684\u7cbe\u5ea6\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u6216\u8005\u7f16\u8bd1\u5668\uff0c\u96be\u4ee5\u505a\u5230\u8de8\u5e73\u53f0\u3002 timer \u4e5f\u4e0d\u9002\u7528\u4e8e\u6d4b\u91cf\u5927\u8de8\u5ea6\u65f6\u95f4\u6bb5 \uff0c\u5982\u679c\u9700\u8981\u4ee5\u5929\u3001\u6708\uff0c\u751a\u81f3\u5e74\u4e3a\u65f6\u95f4\u5355\u4f4d\u5219\u4e0d\u80fd\u4f7f\u7528 timer \uff0c\u5e94\u4f7f\u7528 cpu_timer \u7ec4\u4ef6\u3002","title":"\u4f7f\u7528\u5efa\u8bae"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/02.%20progress_timer/","text":"progress_timer \u4e5f\u662f\u4e00\u4e2a\u8ba1\u65f6\u5668\uff0c\u5b83\u6d3e\u751f\u81eatimer\uff0c\u4f1a\u5728\u6790\u6784\u65f6\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4\uff0c\u7701\u53bb\u4e86 timer \u624b\u52a8\u8c03\u7528 elapsed() \u7684\u5de5\u4f5c\uff0c\u662f\u4e00\u4e2a\u76f8\u5f53\u65b9\u4fbf\u7684\u81ea\u52a8\u8ba1\u65f6\u7684\u5c0f\u5de5\u5177\u3002 progress_timer \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/progress.hpp> using namespace boost ; \u7528\u6cd5 progress_timer \u7ee7\u627f\u4e86 timer \u7684\u5168\u90e8\u529f\u80fd\uff0c\u53ef\u4ee5\u50cf\u4f7f\u7528 timer \u90a3\u6837\u4f7f\u7528\u5b83\u3002\u4f8b\u5982\uff1a progress_timer t ; //\u58f0\u660e\u4e00\u4e2aprogress_timer\u5bf9\u8c61 ... //\u4efb\u610f\u8ba1\u7b97\u3001\u5904\u7406\u5de5\u4f5c std :: cout << t . elapsed () << std :: endl ; //\u8f93\u51fa\u6d41\u901d\u7684\u65f6\u95f4 \u4f46 progress_timer \u6709\u66f4\u7b80\u5355\u7684\u7528\u6cd5\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u8c03\u7528\uff0c\u53ea\u8981\u58f0\u660e progress_timer \u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\uff1a int main () { progress_timer t ; //do something } //\u9000\u51fa\u4f5c\u7528\u57df\uff0c\u8c03\u7528 progress_timer \u7684\u6790\u6784\u51fd\u6570 \u8fd9\u6837\uff0c\u5728\u7a0b\u5e8f\u9000\u51fa\uff08\u51c6\u786e\u5730\u8bf4\u662f\u79bb\u5f00 main \u51fd\u6570\u5c40\u90e8\u57df\uff09\u5bfc\u81f4 progress_timer \u6790\u6784\u65f6\uff0c\u4f1a\u81ea\u52a8\u8f93\u51fa\u6d41\u901d\u7684\u65f6\u95f4\u3002 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u6d4b\u91cf\u591a\u4e2a\u65f6\u95f4\uff0c\u53ef\u4ee5\u7528\u82b1\u62ec\u53f7 {} \u9650\u5b9a progress_timer \u7684\u751f\u547d\u671f\uff1a { progress_timer t ; //\u7b2c\u4e00\u4e2a\u8ba1\u65f6 //do something } //pregress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4 { progress_timer t ; //\u7b2c\u4e8c\u4e2a\u8ba1\u65f6 //do something } //pregress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4 \u7c7b\u6458\u8981 progress_timer \u7684\u7c7b\u6458\u8981\u5982\u4e0b\uff1a class progress_timer : public timer , private noncopyable { public : explicit progress_timer ( std :: ostream & os = std :: cout ) // os is hint; implementation may ignore, particularly in embedded systems : timer (), noncopyable (), m_os ( os ) {} ~ progress_timer () { // A) Throwing an exception from a destructor is a Bad Thing. // B) The progress_timer destructor does output which may throw. // C) A progress_timer is usually not critical to the application. // Therefore, wrap the I/O in a try block, catch and ignore all exceptions. try { // use istream instead of ios_base to workaround GNU problem (Greg Chicares) std :: istream :: fmtflags old_flags = m_os . setf ( std :: istream :: fixed , std :: istream :: floatfield ); std :: streamsize old_prec = m_os . precision ( 2 ); m_os << elapsed () << \" s \\n \" // \"s\" is System International d'Unites std << std :: endl ; m_os . flags ( old_flags ); m_os . precision ( old_prec ); } catch (...) {} // eat any exceptions } // ~progress_timer private : std :: ostream & m_os ; }; progress_timer \u7ee7\u627f\u81ea timer \uff0c\u56e0\u6b64\u5b83\u7684\u63a5\u53e3\u4e0e timer \u76f8\u540c\uff0c\u4e5f\u5f88\u7b80\u5355\u3002\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u5176\u6784\u9020\u51fd\u6570\uff0c\u5b83\u5141\u8bb8\u5c06\u6790\u6784\u65f6\u7684\u8f93\u51fa\u5b9a\u5411\u5230\u6307\u5b9a\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u91cc\uff0c\u9ed8\u8ba4\u662f std::cout \u3002\u5982\u679c\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u7528\u5176\u4ed6\u6807\u51c6\u5e93\u8f93\u51fa\u6d41\uff08 ofstream \u3001 ostringstream \uff09\u5c06\u5176\u66ff\u6362\uff0c\u6216\u8005\u7528 cout.rdbuf() \u91cd\u5b9a\u5411 cout \u7684\u8f93\u51fa\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u628a progress_timer \u7684\u8f93\u51fa\u8f6c\u79fb\u5230\u4e86 stringstream \u4e2d\uff0c\u5b83\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u4f9b\u5176\u4ed6\u5e94\u7528\u4f7f\u7528\uff1a stringstream ss ; //\u4e00\u4e2a\u5b57\u7b26\u4e32\u6d41\u5bf9\u8c61 { progress_timer t ( ss ); //\u8981\u6c42 progress_timer \u8f93\u51fa\u5230 ss \u4e2d } //progress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4 std :: cout << ss . str ();","title":"02. progress timer"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/02.%20progress_timer/#_1","text":"progress_timer \u7ee7\u627f\u4e86 timer \u7684\u5168\u90e8\u529f\u80fd\uff0c\u53ef\u4ee5\u50cf\u4f7f\u7528 timer \u90a3\u6837\u4f7f\u7528\u5b83\u3002\u4f8b\u5982\uff1a progress_timer t ; //\u58f0\u660e\u4e00\u4e2aprogress_timer\u5bf9\u8c61 ... //\u4efb\u610f\u8ba1\u7b97\u3001\u5904\u7406\u5de5\u4f5c std :: cout << t . elapsed () << std :: endl ; //\u8f93\u51fa\u6d41\u901d\u7684\u65f6\u95f4 \u4f46 progress_timer \u6709\u66f4\u7b80\u5355\u7684\u7528\u6cd5\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u8c03\u7528\uff0c\u53ea\u8981\u58f0\u660e progress_timer \u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\uff1a int main () { progress_timer t ; //do something } //\u9000\u51fa\u4f5c\u7528\u57df\uff0c\u8c03\u7528 progress_timer \u7684\u6790\u6784\u51fd\u6570 \u8fd9\u6837\uff0c\u5728\u7a0b\u5e8f\u9000\u51fa\uff08\u51c6\u786e\u5730\u8bf4\u662f\u79bb\u5f00 main \u51fd\u6570\u5c40\u90e8\u57df\uff09\u5bfc\u81f4 progress_timer \u6790\u6784\u65f6\uff0c\u4f1a\u81ea\u52a8\u8f93\u51fa\u6d41\u901d\u7684\u65f6\u95f4\u3002 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u6d4b\u91cf\u591a\u4e2a\u65f6\u95f4\uff0c\u53ef\u4ee5\u7528\u82b1\u62ec\u53f7 {} \u9650\u5b9a progress_timer \u7684\u751f\u547d\u671f\uff1a { progress_timer t ; //\u7b2c\u4e00\u4e2a\u8ba1\u65f6 //do something } //pregress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4 { progress_timer t ; //\u7b2c\u4e8c\u4e2a\u8ba1\u65f6 //do something } //pregress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/02.%20progress_timer/#_2","text":"progress_timer \u7684\u7c7b\u6458\u8981\u5982\u4e0b\uff1a class progress_timer : public timer , private noncopyable { public : explicit progress_timer ( std :: ostream & os = std :: cout ) // os is hint; implementation may ignore, particularly in embedded systems : timer (), noncopyable (), m_os ( os ) {} ~ progress_timer () { // A) Throwing an exception from a destructor is a Bad Thing. // B) The progress_timer destructor does output which may throw. // C) A progress_timer is usually not critical to the application. // Therefore, wrap the I/O in a try block, catch and ignore all exceptions. try { // use istream instead of ios_base to workaround GNU problem (Greg Chicares) std :: istream :: fmtflags old_flags = m_os . setf ( std :: istream :: fixed , std :: istream :: floatfield ); std :: streamsize old_prec = m_os . precision ( 2 ); m_os << elapsed () << \" s \\n \" // \"s\" is System International d'Unites std << std :: endl ; m_os . flags ( old_flags ); m_os . precision ( old_prec ); } catch (...) {} // eat any exceptions } // ~progress_timer private : std :: ostream & m_os ; }; progress_timer \u7ee7\u627f\u81ea timer \uff0c\u56e0\u6b64\u5b83\u7684\u63a5\u53e3\u4e0e timer \u76f8\u540c\uff0c\u4e5f\u5f88\u7b80\u5355\u3002\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u5176\u6784\u9020\u51fd\u6570\uff0c\u5b83\u5141\u8bb8\u5c06\u6790\u6784\u65f6\u7684\u8f93\u51fa\u5b9a\u5411\u5230\u6307\u5b9a\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u91cc\uff0c\u9ed8\u8ba4\u662f std::cout \u3002\u5982\u679c\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u7528\u5176\u4ed6\u6807\u51c6\u5e93\u8f93\u51fa\u6d41\uff08 ofstream \u3001 ostringstream \uff09\u5c06\u5176\u66ff\u6362\uff0c\u6216\u8005\u7528 cout.rdbuf() \u91cd\u5b9a\u5411 cout \u7684\u8f93\u51fa\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u628a progress_timer \u7684\u8f93\u51fa\u8f6c\u79fb\u5230\u4e86 stringstream \u4e2d\uff0c\u5b83\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u4f9b\u5176\u4ed6\u5e94\u7528\u4f7f\u7528\uff1a stringstream ss ; //\u4e00\u4e2a\u5b57\u7b26\u4e32\u6d41\u5bf9\u8c61 { progress_timer t ( ss ); //\u8981\u6c42 progress_timer \u8f93\u51fa\u5230 ss \u4e2d } //progress_timer \u5728\u8fd9\u91cc\u6790\u6784\uff0c\u81ea\u52a8\u8f93\u51fa\u65f6\u95f4 std :: cout << ss . str ();","title":"\u7c7b\u6458\u8981"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/03.%20date_time%20%E5%BA%93%E6%A6%82%E8%BF%B0/","text":"\u65e5\u671f\u548c\u65f6\u95f4\u5728\u7a0b\u5e8f\u4e2d\u5c31\u50cf\u6574\u6570\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u7ecf\u5e38\u51fa\u73b0\u3002\u65e5\u671f\u548c\u65f6\u95f4\u4f5c\u4e3a\u4e00\u79cd\u57fa\u7840\u8bbe\u65bd\u5e7f\u6cdb\u5730\u7528\u5728\u5f88\u591a\u5730\u65b9\uff0c\u5982\u4f5c\u4e3a\u968f\u673a\u6570\u7684\u79cd\u5b50\u503c\u3002\u4f46\u7cbe\u786e\u5730\u64cd\u7eb5\u65f6\u95f4\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u65f6\u95f4\u672c\u8eab\u662f\u4e00\u4e2a\u96be\u4ee5\u5ea6\u91cf\u7684\u5b9e\u4f53\uff0c\u5b83\u6709\u8bb8\u591a\u53d8\u5316\u3002 \u6211\u4eec\u4f7f\u7528\u7684\u57fa\u672c\u65f6\u95f4\u5ea6\u91cf\u7684\u4f9d\u636e\u662f\u5730\u7403\u7684\u81ea\u8f6c\uff0c\u4f46\u5730\u7403\u7684\u81ea\u8f6c\u662f\u4e0d\u5747\u5300\u7684\uff08\u6709\u65f6\u975e\u5e38\u5267\u70c8\u7684\u5730\u8d28\u8fd0\u52a8\u4f1a\u5f71\u54cd\u5730\u7403\u7684\u81ea\u8f6c\uff09\uff0c\u56e0\u6b64\u9700\u8981\u7528\u95f0\u79d2\u3001\u95f0\u6708\u548c\u95f0\u5e74\u5bf9\u65f6\u95f4\u8fdb\u884c\u8c03\u6574\uff0c\u4e0d\u540c\u7684\u5730\u533a\u8fd8\u6709\u590f\u4ee4\u65f6\u3001\u65f6\u533a\u7b49\u4eba\u4e3a\u89c4\u5b9a\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5b58\u5728\u7740\u5f88\u591a\u4e2a\u65f6\u95f4\u5ea6\u91cf\u4f53\u7cfb\uff0c\u5982\u5112\u52d2\u5386\u3001\u683c\u91cc\u9ad8\u5229\u5386\u3001\u519c\u5386\u3001\u5370\u52a0\u5e1d\u56fd\u7684\u592a\u9633\u5386\u3001UTC \u7b49\uff0c\u975e\u5e38\u590d\u6742\u3002\u60f3\u8981\u5b9e\u73b0\u4e00\u4e2a\u53ef\u4ee5\u8ba1\u7b97\u5404\u79cd\u65f6\u95f4\u65e5\u671f\u7684\u76f8\u5173\u95ee\u9898\u7684\u5e93\u96be\u5ea6\u76f8\u5f53\u5927\u3002 date_time \u5e93\u52c7\u6562\u5730\u9762\u5bf9\u4e86\u8fd9\u4e2a\u6311\u6218\uff0c\u5e76\u6210\u529f\u5730\u89e3\u51b3\u4e86\u5927\u90e8\u5206\u95ee\u9898\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u5168\u9762\u4e14\u7075\u6d3b\u7684\u65e5\u671f\u65f6\u95f4\u5e93\uff0c\u57fa\u4e8e\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\u516c\u5386\uff08\u683c\u91cc\u9ad8\u5229\u5386\uff09\uff0c\u53ef\u4ee5\u63d0\u4f9b\u4e0e\u65f6\u95f4\u76f8\u5173\u7684\u5404\u79cd\u6240\u9700\u529f\u80fd\uff0c\u5982\u7cbe\u786e\u5b9a\u4e49\u65f6\u95f4\u70b9\u3001\u65f6\u95f4\u6bb5\u548c\u65f6\u95f4\u957f\u5ea6\u3001\u52a0\u51cf\u82e5\u5e72\u5929/\u6708/\u5e74\u3001\u65e5\u671f\u8fed\u4ee3\u5668\u7b49\u3002 date_time \u5e93\u8fd8\u652f\u6301\u65e0\u9650\u65f6\u95f4\u548c\u65e0\u6548\u65f6\u95f4\u8fd9\u79cd\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\u6709\u7528\u7684\u6982\u5ff5\uff0c\u800c\u4e14\u5b83\u53ef\u4ee5\u4e0e C \u8bed\u8a00\u7684\u4f20\u7edf\u65f6\u95f4\u7ed3\u6784 tm \u76f8\u4e92\u8f6c\u5316\uff0c\u63d0\u4f9b\u5411\u4e0b\u652f\u6301\u3002 \u4f7f\u7528\u65b9\u5f0f date_time \u5e93\u9700\u8981\u7f16\u8bd1\u624d\u80fd\u4f7f\u7528\u3002 date_time \u5e93\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u662f\u5904\u7406\u65e5\u671f\u7684 gregorian \u548c\u5904\u7406\u65f6\u95f4\u7684 posix_time \uff0c\u5b83\u4eec\u5404\u81ea\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a //\u5904\u7406\u65e5\u671f\u7684\u7ec4\u4ef6 #include <boost/date_time/gregorian/gregorian.hpp> using namespace boost :: gregorian ; //\u5904\u7406\u65f6\u95f4\u7684\u7ec4\u4ef6 #include <boost/date_time/posix_time/posix_time.hpp> using namespace boost :: posix_time ; \u57fa\u672c\u6982\u5ff5 \u5904\u7406\u65f6\u95f4\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u5728\u4f7f\u7528 date_time \u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u4e9b\u6982\u5ff5\u3002 \u5982\u679c\u628a\u65f6\u95f4\u60f3\u8c61\u6210\u4e00\u4e2a\u5411\u524d\u548c\u5411\u540e\u90fd\u65e0\u9650\u5ef6\u4f38\u7684\u5b9e\u6570\u8f74\uff0c\u90a3\u4e48\u65f6\u95f4\u70b9\u5c31\u662f\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u70b9\uff1b\u65f6\u95f4\u6bb5\u5c31\u662f\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u95f4\u4e00\u4e2a\u786e\u5b9a\u7684\u533a\u95f4\uff1b\u65f6\u957f\uff08\u65f6\u95f4\u957f\u5ea6\uff09\u5219\u662f\u4e00\u4e2a\u6709\u6b63\u8d1f\u53f7\u7684\u6807\u91cf\uff0c\u662f\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u5dee\uff0c\u4e0d\u5c5e\u4e8e\u6570\u8f74\u3002 \u65f6\u95f4\u70b9\u3001\u65f6\u95f4\u6bb5\u548c\u65f6\u957f\u4e09\u8005\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u201c\u65f6\u95f4\u70b9 + \u65f6\u957f = \u65f6\u95f4\u70b9\u201d \u201c\u65f6\u957f + \u65f6\u957f = \u65f6\u957f\u201d \u201c\u65f6\u95f4\u6bb5 \u2229 \u65f6\u95f4\u6bb5 = \u65f6\u95f4\u6bb5\u201d \u201c\u65f6\u95f4\u6bb5 \u2208 \u65f6\u95f4\u6bb5\u201d\u7b49\uff0c\u4f46\u6709\u4e9b\u8fd0\u7b97\u662f\u65e0\u610f\u4e49\u7684\uff0c\u5982\u201c\u65f6\u95f4\u70b9 + \u65f6\u95f4\u70b9\u201d \u201c\u65f6\u957f + \u65f6\u95f4\u6bb5\u201d\u7b49\u3002\u57fa\u4e8e\u751f\u6d3b\u5e38\u8bc6\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u4f46\u5728\u7f16\u5199\u65f6\u95f4\u5904\u7406\u7a0b\u5e8f\u65f6\u5fc5\u987b\u6ce8\u610f\u3002 date_time \u5e93\u652f\u6301\u65e0\u9650\u65f6\u95f4\u548c\u65e0\u6548\u65f6\u95f4\uff08Not Available Date Time, NADT\uff09\u8fd9\u6837\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\uff0c\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e2d\u6781\u9650\u7684\u542b\u4e49\u3002\u65f6\u95f4\u70b9\u548c\u65f6\u957f\u90fd\u6709\u65e0\u9650\u7684\u503c\uff0c\u5b83\u4eec\u7684\u8fd0\u7b97\u89c4\u5219\u6bd4\u8f83\u7279\u522b\uff0c\u5982\u201c+\u221e\u65f6\u95f4\u70b9 + \u65f6\u957f = +\u221e\u65f6\u95f4\u70b9\u201d \u201c\u65f6\u95f4\u70b9 + \u221e\u65f6\u957f = +\u221e\u65f6\u95f4\u70b9\u201d\u3002\u5982\u679c\u5c06\u6b63\u65e0\u9650\u503c\u4e0e\u8d1f\u65e0\u9650\u503c\u8fdb\u884c\u8fd0\u7b97\u5c06\u6709\u53ef\u80fd\u5f97\u5230\u65e0\u6548\u65f6\u95f4\uff0c\u5982\u201c+\u221e\u65f6\u957f - \u221e\u65f6\u957f = NADT\u201d\u3002 date_time \u5e93\u4e2d\u7528\u679a\u4e3e special_values \u5b9a\u4e49\u4e86\u8fd9\u4e9b\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\uff0c\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost::date_time \uff0c\u5e76\u88ab using \u8bed\u53e5\u5f15\u5165\u5176\u4ed6\u5b50\u540d\u5b57\u7a7a\u95f4\u3002 - pos_infin \uff1a\u8868\u793a\u6b63\u65e0\u9650\u3002 - neg_infin \uff1a\u8868\u793a\u8d1f\u65e0\u9650\u3002 - not_a_date_time \uff1a\u65e0\u6548\u65f6\u95f4 - min_date_time \uff1a\u53ef\u8868\u793a\u7684\u6700\u5c0f\u65e5\u671f\u6216\u65f6\u95f4\u3002 - max_date_time \uff1a\u53ef\u8868\u793a\u7684\u6700\u5927\u65e5\u671f\u6216\u65f6\u95f4\u3002","title":"03. date time \u5e93\u6982\u8ff0"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/03.%20date_time%20%E5%BA%93%E6%A6%82%E8%BF%B0/#_1","text":"date_time \u5e93\u9700\u8981\u7f16\u8bd1\u624d\u80fd\u4f7f\u7528\u3002 date_time \u5e93\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u662f\u5904\u7406\u65e5\u671f\u7684 gregorian \u548c\u5904\u7406\u65f6\u95f4\u7684 posix_time \uff0c\u5b83\u4eec\u5404\u81ea\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a //\u5904\u7406\u65e5\u671f\u7684\u7ec4\u4ef6 #include <boost/date_time/gregorian/gregorian.hpp> using namespace boost :: gregorian ; //\u5904\u7406\u65f6\u95f4\u7684\u7ec4\u4ef6 #include <boost/date_time/posix_time/posix_time.hpp> using namespace boost :: posix_time ;","title":"\u4f7f\u7528\u65b9\u5f0f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/03.%20date_time%20%E5%BA%93%E6%A6%82%E8%BF%B0/#_2","text":"\u5904\u7406\u65f6\u95f4\u5f88\u590d\u6742\uff0c\u6240\u4ee5\u5728\u4f7f\u7528 date_time \u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u4e9b\u6982\u5ff5\u3002 \u5982\u679c\u628a\u65f6\u95f4\u60f3\u8c61\u6210\u4e00\u4e2a\u5411\u524d\u548c\u5411\u540e\u90fd\u65e0\u9650\u5ef6\u4f38\u7684\u5b9e\u6570\u8f74\uff0c\u90a3\u4e48\u65f6\u95f4\u70b9\u5c31\u662f\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u70b9\uff1b\u65f6\u95f4\u6bb5\u5c31\u662f\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u95f4\u4e00\u4e2a\u786e\u5b9a\u7684\u533a\u95f4\uff1b\u65f6\u957f\uff08\u65f6\u95f4\u957f\u5ea6\uff09\u5219\u662f\u4e00\u4e2a\u6709\u6b63\u8d1f\u53f7\u7684\u6807\u91cf\uff0c\u662f\u4e24\u4e2a\u65f6\u95f4\u70b9\u4e4b\u5dee\uff0c\u4e0d\u5c5e\u4e8e\u6570\u8f74\u3002 \u65f6\u95f4\u70b9\u3001\u65f6\u95f4\u6bb5\u548c\u65f6\u957f\u4e09\u8005\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97\uff0c\u5982\u201c\u65f6\u95f4\u70b9 + \u65f6\u957f = \u65f6\u95f4\u70b9\u201d \u201c\u65f6\u957f + \u65f6\u957f = \u65f6\u957f\u201d \u201c\u65f6\u95f4\u6bb5 \u2229 \u65f6\u95f4\u6bb5 = \u65f6\u95f4\u6bb5\u201d \u201c\u65f6\u95f4\u6bb5 \u2208 \u65f6\u95f4\u6bb5\u201d\u7b49\uff0c\u4f46\u6709\u4e9b\u8fd0\u7b97\u662f\u65e0\u610f\u4e49\u7684\uff0c\u5982\u201c\u65f6\u95f4\u70b9 + \u65f6\u95f4\u70b9\u201d \u201c\u65f6\u957f + \u65f6\u95f4\u6bb5\u201d\u7b49\u3002\u57fa\u4e8e\u751f\u6d3b\u5e38\u8bc6\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u4f46\u5728\u7f16\u5199\u65f6\u95f4\u5904\u7406\u7a0b\u5e8f\u65f6\u5fc5\u987b\u6ce8\u610f\u3002 date_time \u5e93\u652f\u6301\u65e0\u9650\u65f6\u95f4\u548c\u65e0\u6548\u65f6\u95f4\uff08Not Available Date Time, NADT\uff09\u8fd9\u6837\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\uff0c\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e2d\u6781\u9650\u7684\u542b\u4e49\u3002\u65f6\u95f4\u70b9\u548c\u65f6\u957f\u90fd\u6709\u65e0\u9650\u7684\u503c\uff0c\u5b83\u4eec\u7684\u8fd0\u7b97\u89c4\u5219\u6bd4\u8f83\u7279\u522b\uff0c\u5982\u201c+\u221e\u65f6\u95f4\u70b9 + \u65f6\u957f = +\u221e\u65f6\u95f4\u70b9\u201d \u201c\u65f6\u95f4\u70b9 + \u221e\u65f6\u957f = +\u221e\u65f6\u95f4\u70b9\u201d\u3002\u5982\u679c\u5c06\u6b63\u65e0\u9650\u503c\u4e0e\u8d1f\u65e0\u9650\u503c\u8fdb\u884c\u8fd0\u7b97\u5c06\u6709\u53ef\u80fd\u5f97\u5230\u65e0\u6548\u65f6\u95f4\uff0c\u5982\u201c+\u221e\u65f6\u957f - \u221e\u65f6\u957f = NADT\u201d\u3002 date_time \u5e93\u4e2d\u7528\u679a\u4e3e special_values \u5b9a\u4e49\u4e86\u8fd9\u4e9b\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\uff0c\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost::date_time \uff0c\u5e76\u88ab using \u8bed\u53e5\u5f15\u5165\u5176\u4ed6\u5b50\u540d\u5b57\u7a7a\u95f4\u3002 - pos_infin \uff1a\u8868\u793a\u6b63\u65e0\u9650\u3002 - neg_infin \uff1a\u8868\u793a\u8d1f\u65e0\u9650\u3002 - not_a_date_time \uff1a\u65e0\u6548\u65f6\u95f4 - min_date_time \uff1a\u53ef\u8868\u793a\u7684\u6700\u5c0f\u65e5\u671f\u6216\u65f6\u95f4\u3002 - max_date_time \uff1a\u53ef\u8868\u793a\u7684\u6700\u5927\u65e5\u671f\u6216\u65f6\u95f4\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/","text":"date_time \u5e93\u7684\u65e5\u671f\u57fa\u4e8e\u683c\u91cc\u9ad8\u5229\u5386\uff0c\u652f\u6301\u4ece\u201c1400-01-01\u201d\u5230\u201c9999-12-31\u201d\u4e4b\u95f4\u7684\u65e5\u671f\u8ba1\u7b97\uff08\u5f88\u9057\u61be\uff0c\u5b83\u4e0d\u80fd\u5904\u7406\u516c\u5143\u524d\u7684\u65e5\u671f\uff0c\u4e0d\u80fd\u7528\u6765\u7814\u7a76\u53e4\u8001\u7684\u5386\u53f2\uff09\u3002\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost::gregorian \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/date_time/gregorian/gregorian.hpp> using namespace boost :: gregorian ; \u65e5\u671f date \u662f date_time \u5e93\u5904\u7406\u65e5\u671f\u7684\u6838\u5fc3\u7c7b\uff0c\u4f7f\u7528\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u5185\u90e8\u5b58\u50a8\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\u8868\u793a\u65f6\u95f4\u70b9\u6982\u5ff5\u3002 date \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u5904\u7406\u6548\u7387\u5f88\u9ad8\uff0c\u53ef\u4ee5\u88ab\u62f7\u8d1d\u4f20\u503c\u3002 date \u4e5f\u5168\u9762\u652f\u6301\u6bd4\u8f83\u64cd\u4f5c\u548c\u6d41\u8f93\u5165\u8f93\u51fa\uff0c\u56e0\u6b64\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e int \u3001 string \u7684\u57fa\u672c\u7c7b\u578b\u6765\u4f7f\u7528\u3002 \u521b\u5efa\u65e5\u671f\u5bf9\u8c61 \u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u521b\u5efa\u65e5\u671f\u5bf9\u8c61\u3002 \u7a7a\u7684\u6784\u9020\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u503c\u4e3a not_a_date_time \u7684\u65e0\u6548\u65e5\u671f\uff1b\u987a\u5e8f\u4f20\u5165\u5e74\u3001\u6708\u3001\u65e5\u503c\u5219\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u65e5\u671f\u7684date\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a date d1 ; //\u4e00\u4e2a\u65e0\u6548\u7684\u65e5\u671f date d2 ( 2010 , 1 , 1 ); //\u4f7f\u7528\u6570\u5b57\u6784\u9020\u65e5\u671f date d3 ( 2000 , Jan , 1 ); //\u4e5f\u53ef\u4ee5\u4f7f\u7528\u82f1\u6587\u6307\u5b9a\u6708\u4efd date d4 ( d2 ); //date \u652f\u6301\u62f7\u8d1d\u6784\u9020 assert ( d1 == date ( not_a_date_time )); //\u6bd4\u8f83\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61 assert ( d2 == d4 ); //date \u652f\u6301\u6bd4\u8f83\u64cd\u4f5c assert ( d3 < d4 ); \u5982\u679c\u4e0d\u5e0c\u671b date \u9ed8\u8ba4\u6784\u9020\u51fa\u65e0\u6548\u65e5\u671f\uff0c\u53ef\u4ee5\u5728\u4fdd\u62a4\u5934\u6587\u4ef6\u524d\u5b9a\u4e49\u5b8f DATE_TIME_NO_DEFAULT_CONSTRUCTOR \uff0c\u4ece\u800c\u7981\u6b62\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 date \u4e5f\u5141\u8bb8\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ea7\u751f\uff0c\u8fd9\u9700\u8981\u4f7f\u7528\u5de5\u5382\u51fd\u6570 from_string() \u6216 from_undelimited_string() \u3002\u524d\u8005\u4f7f\u7528\u5206\u9694\u7b26\uff08\u659c\u6760\u6216\u8fde\u5b57\u7b26\uff09\u5206\u9694\u5e74\u3001\u6708\u3001\u65e5\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u540e\u8005\u5219\u662f\u65e0\u5206\u9694\u7b26\u7684\u7eaf\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a date d5 = from_string ( \"1999-12-31\" ); date d6 ( from_string ( \"2015/1/1\" )); date d7 = from_undelimited_string ( \"20110208\" ); day_clock \u662f\u4e00\u4e2a\u5929\u7ea7\u522b\u7684\u65f6\u949f\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u8c03\u7528\u5b83\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 local_day() \u6216 universal_day() \u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f53\u5929\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u5206\u522b\u662f\u672c\u5730\u65e5\u671f\u548c UTC \u65e5\u671f\u3002 day_clock \u5185\u90e8\u4f7f\u7528\u4e86 C \u6807\u51c6\u5e93\u7684\u51fd\u6570 localtime() \u548c gmtime() \uff0c \u56e0\u6b64 local_day() \u7684\u884c\u4e3a\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u533a\u8bbe\u7f6e \u3002\u4f8b\u5982\uff1a std :: cout << day_clock :: local_day () << day_clock :: universal_day () << std :: endl ; \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\u679a\u4e3e special_values \u6765\u521b\u5efa\u4e00\u4e9b\u7279\u6b8a\u7684\u65e5\u671f\uff0c\u5728\u67d0\u4e9b\u60c5\u5f62\u4e0b\uff08\u5982\u65e0\u9650\u671f\uff09\u4f1a\u5f88\u6709\u7528\uff1a date d1 ( neg_infin ); //\u8d1f\u65e0\u9650\u65e5\u671f date d2 ( pos_infin ); //\u6b63\u65e0\u9650\u65e5\u671f date d3 ( not_a_date_time ); //\u65e0\u6548\u65e5\u671f date d4 ( max_date_time ); //\u6700\u5927\u53ef\u80fd\u65e5\u671f date d5 ( min_date_time ); //\u6700\u5c0f\u53ef\u80fd\u65e5\u671f \u7528 std::cout \u5c06\u5b83\u4eec\u8f93\u51fa\uff0c\u663e\u793a\u5982\u4e0b\uff1a - infinity + infinity not - a - date - time 9999 - Dec -31 1400 - Jan -01 \u5982\u679c\u5728\u521b\u5efa\u65e5\u671f\u5bf9\u8c61\u65f6\u4f7f\u7528\u4e86\u975e\u6cd5\u503c\uff0c\u5982\u65e5\u671f\u8d85\u51fa\u4e86\u4ece 1400-01-01 \u5230 9999-12-31 \u7684\u8303\u56f4\uff0c\u6216\u8005\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u6708\u4efd\u6216\u65e5\u671f\uff0c\u90a3\u4e48 date_time \u5e93\u4f1a\u629b\u51fa\u5f02\u5e38\uff08\u800c\u4e0d\u662f\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65e0\u6548\u65e5\u671f\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 what() \u83b7\u5f97\u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u8bbf\u95ee\u65e5\u671f date \u7684\u5bf9\u5916\u63a5\u53e3\u5f88\u50cf C \u8bed\u8a00\u4e2d\u7684 tm \u7ed3\u6784\uff0c\u53ef\u4ee5\u83b7\u53d6\u5b83\u4fdd\u5b58\u7684\u5e74\u3001\u6708\u3001\u65e5\u3001\u661f\u671f\u7b49\u6210\u5206\uff0c\u4f46 date \u8fd8\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u3002 \u6210\u5458\u51fd\u6570 year() \u3001 month() \u548c day() \u5206\u522b\u8fd4\u56de\u65e5\u671f\u7684\u5e74\u3001\u6708\u3001\u65e5\uff1a date d ( 2017 , 6 , 1 ); assert ( d . year () == 2017 ); assert ( d . month () == 6 ); assert ( d . day () == 1 ); \u6210\u5458\u51fd\u6570 year_month_day() \u8fd4\u56de\u4e00\u4e2a date::ymd_type \u7ed3\u6784\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u5730\u83b7\u53d6\u5e74\u3001\u6708\u3001\u65e5\u6570\u636e\uff1a date d ( 2017 , 6 , 1 ); date :: ymd_type ymd = d . year_month_day (); assert ( ymd . year == 2017 ); assert ( ymd . month == 6 ); assert ( ymd . day == 1 ); \u6210\u5458\u51fd\u6570 day_of_week() \u8fd4\u56dedate\u7684\u661f\u671f\u6570\uff0c0 \u8868\u793a\u661f\u671f\u5929\u3002 day_of_year() \u8fd4\u56de date \u662f\u5f53\u5e74\u7684\u7b2c\u51e0\u5929\uff08\u6700\u5927\u503c\u662f 366\uff09\u3002 end_of_month() \u8fd4\u56de\u5f53\u6708\u7684\u6700\u540e\u4e00\u5929\u7684 date \u5bf9\u8c61\uff1a date d ( 2017 , 6 , 1 ); std :: cout << d . day_of_week () << std :: endl ; std :: cout << d . day_of_year () << std :: endl ; assert ( d . end_of_month () == date ( 2017 , 6 , 30 )); \u6210\u5458\u51fd\u6570 week_number() \u8fd4\u56de date \u6240\u5728\u7684\u5468\u662f\u5f53\u5e74\u7684\u7b2c\u51e0\u5468\uff0c\u5176\u8303\u56f4\u662f 0~53\uff1a std :: cout << date ( 2015 , 1 , 10 ). week_number () << std :: endl ; std :: cout << date ( 2016 , 1 , 10 ). week_number () << std :: endl ; std :: cout << date ( 2017 , 1 , 10 ). week_number () << std :: endl ; date \u8fd8\u6709 5 \u4e2a is_xxx() \u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u9a8c\u65e5\u671f\u662f\u5426\u65f6\u4e00\u5171\u7279\u6b8a\u65e5\u671f\uff0c\u5177\u4f53\u5982\u4e0b\uff1a - is_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u65e0\u9650\u65e5\u671f - is_neg_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u8d1f\u65e0\u9650\u65e5\u671f - is_pos_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u6b63\u65e0\u9650\u65e5\u671f - is_not_a_date() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u65e0\u6548\u65e5\u671f - is_special() \uff1a\u662f\u5426\u662f\u4efb\u610f\u4e00\u4e2a\u7279\u6b8a\u65e5\u671f \u5b83\u4eec\u7684\u7528\u6cd5\u5982\u4e0b\uff1a assert ( date ( pos_infin ). is_infinity ()); assert ( date ( pos_infin ). is_pos_infinity ()); assert ( date ( neg_infin ). is_neg_infinity ()); assert ( date ( not_a_date_time ). is_not_a_date ()); assert ( date ( not_a_date_time ). is_special ()); assert ( ! date ( 2017 , 5 , 31 ). is_special ()); \u65e5\u671f\u7684\u8f93\u51fa \u53ef\u4ee5\u5c06 date \u5bf9\u8c61\u5f88\u65b9\u4fbf\u5730\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5b83\u63d0\u4f9b\u4e86 3 \u4e2a\u81ea\u7531\u51fd\u6570\u3002 - to_simple_string() \uff1a\u8f6c\u6362\u4e3a YYYY-mmm-DD \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\uff0cmmm \u4e3a 3 \u5b57\u7b26\u7684\u82f1\u6587\u6708\u4efd\u540d - to_iso_string() \uff1a\u8f6c\u6362\u4e3a YYYYMMDD \u683c\u5f0f\u7684\u6570\u5b57\u5b57\u7b26\u4e32 - to_iso_extended_string() \uff1a\u8f6c\u6362\u4e3a YYYY-MM-DD \u683c\u5f0f\u7684\u6570\u5b57\u5b57\u7b26\u4e32 date \u4e5f\u652f\u6301\u6d41\u8f93\u5165\u8f93\u51fa\uff0c\u9ed8\u8ba4\u4f7f\u7528 YYYY-mmm-DD \u683c\u5f0f\u3002\u4f8b\u5982\uff1a date d ( 2017 , 6 , 1 ); std :: cout << to_simple_string ( d ) << std :: endl ; std :: cout << to_iso_string ( d ) << std :: endl ; std :: cout << to_iso_extended_string ( d ) << std :: endl ; std :: cout << d << std :: endl ; \u8f6c\u6362 C \u7ed3\u6784 date \u652f\u6301\u4e0e C \u8bed\u8a00\u4e2d\u7684 tm \u7ed3\u6784\u76f8\u4e92\u8f6c\u6362\uff0c\u8f6c\u6362\u7684\u89c4\u5219\u548c\u51fd\u6570\u5982\u4e0b\u3002 - to_tm(date) \uff1a date \u8f6c\u6362\u5230 tm \u3002\u5c06 tm \u7684\u65f6\u3001\u5206\u3001\u79d2\u6210\u5458\uff08 tm_hour / tm_min / tim_sec \uff09\u5747\u7f6e\u4e3a 0\uff0c\u5c06\u590f\u4ee4\u65f6\u6807\u5fd7 tm_isdst \u7f6e\u4e3a -1\uff08\u8868\u793a\u672a\u77e5\uff09\u3002 - date_from_tm(datetm) \uff1a tm \u8f6c\u6362\u5230 date \u3002\u53ea\u4f7f\u7528\u5e74\u3001\u6708\u3001\u65e5 3 \u4e2a\u6210\u5458\uff08 tm_year / tm_mon / tm_mday \uff09\uff0c\u5176\u4ed6\u6210\u5458\u5747\u88ab\u5ffd\u7565\u3002 \u65e5\u671f\u957f\u5ea6 \u65e5\u671f\u957f\u5ea6\u662f\u4ee5\u5929\u4e3a\u5355\u4f4d\u7684\u65f6\u957f\uff0c\u662f\u5ea6\u91cf\u65f6\u95f4\u957f\u5ea6\u7684\u4e00\u4e2a\u6807\u91cf\u3002\u5b83\u4e0e\u65e5\u671f\u4e0d\u540c\uff0c\u5176\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\uff0c\u53ef\u6b63\u53ef\u8d1f\u3002\u57fa\u672c\u7684\u65e5\u671f\u957f\u5ea6\u7c7b\u662f date_duration \u3002 date_duration \u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65e5\u671f\u957f\u5ea6\uff0c\u6210\u5458\u51fd\u6570 days() \u8fd4\u56de\u65f6\u957f\u7684\u5929\u6570\uff0c\u5982\u679c\u4f20\u5165\u7279\u6b8a\u65f6\u95f4\u679a\u4e3e\u503c\u5219\u4f1a\u6784\u9020\u51fa\u4e00\u4e2a\u7279\u6b8a\u65f6\u957f\u5bf9\u8c61\u3002 is_special() \u548c is_negative() \u53ef\u4ee5\u5224\u65ad date_duration \u5bf9\u8c61\u662f\u5426\u4e3a\u7279\u6b8a\u503c\uff0c\u662f\u5426\u4e3a\u8d1f\u503c\u3002 unit() \u8fd4\u56de\u65f6\u957f\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5373 date_duration(1) \u3002 date_duration \u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u64cd\u4f5c\uff08 == \u3001 != \u3001 < \u3001 <= \u7b49\uff09\uff0c\u4e5f\u652f\u6301\u5b8c\u5168\u7684\u52a0\u51cf\u6cd5\u548c\u9012\u589e\u9012\u51cf\u64cd\u4f5c\uff0c\u7528\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u6574\u6570\u3002\u6b64\u5916 date_duration \u8fd8\u652f\u6301\u9664\u6cd5\u8fd0\u7b97\uff0c\u53ef\u4ee5\u9664\u4ee5\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u4e0d\u80fd\u9664\u4ee5\u53e6\u4e00\u4e2a date_duration \uff0c\u5b83\u4e0d\u652f\u6301\u5176\u4ed6\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5982\u4e58\u6cd5\u3001\u53d6\u6a21\u3001\u53d6\u4f59\u7b49\u3002 date_time \u5e93\u4e3a date_duration \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u7528\u7684 typedef \uff1a days \uff0c\u8fd9\u4e2a\u65b0\u540d\u5b57\u66f4\u597d\u5730\u8bf4\u660e\u4e86 date_duration \u7684\u542b\u4e49\u2014\u2014\u5b83\u53ef\u4ee5\u7528\u6765\u8ba1\u91cf\u5929\u6570\u3002 \u793a\u8303 days \uff08 duration \uff09\u7528\u6cd5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a days dd1 ( 10 ), dd2 ( -100 ), dd3 ( 255 ); assert ( dd1 > dd2 && dd1 < dd3 ); assert ( dd1 + dd2 == days ( -90 )); assert (( dd1 + dd3 ). days () == 265 ); assert ( dd3 / 5 == days ( 51 )); \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u65f6\u95f4\u957f\u5ea6\uff0c date_time \u5e93\u8fd8\u63d0\u4f9b\u4e86 months \u3001 years \u3001 weeks 3 \u4e2a\u65f6\u957f\u7c7b\uff0c\u5206\u522b\u7528\u6765\u8868\u793a\u6708\u3001\u5e74\u548c\u661f\u671f\uff0c\u5b83\u4eec\u7684\u542b\u4e49\u4e0e days \u7c7b\u4f3c\uff0c\u4f46\u5176\u884c\u4e3a\u4e0d\u592a\u76f8\u540c\u3002 months \u548c years \u5168\u9762\u652f\u6301\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\uff0c\u4f7f\u7528\u6210\u5458\u51fd\u6570 number_of_months() \u548c number_of_years() \u53ef\u83b7\u5f97\u8868\u793a\u7684\u6708\u6570\u548c\u5e74\u6570\u3002 weeks \u662f date_duration \u7684\u5b50\u7c7b\uff0c\u9664\u6784\u9020\u51fd\u6570\u4ee5 7 \u4e3a\u5355\u4f4d\u5916\uff0c\u5176\u4ed6\u7684\u884c\u4e3a\u4e0e days \u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u4ee5\u8bf4\u5b83\u662f days \u7684\u8fd1\u4e49\u8bcd\u3002 \u65e5\u671f\u8fd0\u7b97 date \u652f\u6301\u52a0\u51cf\u8fd0\u7b97\uff0c\u4f46\u4e24\u4e2a date \u5bf9\u8c61\u7684\u52a0\u6cd5\u64cd\u4f5c\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff08 date_time \u5e93\u4f1a\u4ee5\u7f16\u8bd1\u9519\u8bef\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\uff09\uff0c date \u4e3b\u8981\u7528\u6765\u4e0e\u65f6\u957f\u6982\u5ff5\u8fdb\u884c\u8fd0\u7b97\u3002 \u65e5\u671f\u4e0e\u7279\u6b8a\u65e5\u671f\u957f\u5ea6\u3001\u7279\u6b8a\u65e5\u671f\u4e0e\u65e5\u671f\u957f\u5ea6\u8fdb\u884c\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u7279\u6b8a\u65e5\u671f\u3002 \u5728\u4e8e months \u3001 years \u8fd9\u4e24\u4e2a\u65f6\u957f\u7c7b\u8fdb\u884c\u8ba1\u7b97\u65f6\u8981\u6ce8\u610f\uff1a\u5982\u679c\u65e5\u671f\u662f\u6708\u672b\u7684\u6700\u540e\u4e00\u5929\uff0c\u90a3\u4e48\u52a0\u51cf\u6708\u6216\u5e74\u4f1a\u5f97\u5230\u540c\u6837\u7684\u6708\u672b\u65f6\u95f4\uff0c\u8fd9\u662f\u5408\u4e4e\u751f\u6d3b\u5e38\u8bc6\u7684\u3002\u4f46\u5f53\u5929\u6570\u662f\u6708\u672b\u7684 28 \u6216 29 \u65f6\uff0c\u5982\u679c\u52a0\u51cf\u6708\u4efd\u5230 2 \u6708\u4efd\uff0c\u90a3\u4e48\u968f\u540e\u7684\u8fd0\u7b97\u5c31\u603b\u662f\u6708\u672b\u64cd\u4f5c\uff0c\u539f\u6765\u7684\u5929\u6570\u4fe1\u606f\u5c31\u4f1a\u4e22\u5931\u3002 \u4f7f\u7528 days \u5219\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5982\u679c\u62c5\u5fc3 weeks \u3001 months \u3001 years \u8fd9\u4e9b\u65f6\u957f\u7c7b\u88ab\u65e0\u610f\u4f7f\u7528\u8fdb\u800c\u6270\u4e71\u4e86\u4ee3\u7801\uff0c\u53ef\u4ee5 undef \u5b8f BOOST_DATE_TIME_OPTIONAL_GREGORIAN_TYPES \uff0c\u8fd9\u5c06\u4f7f date_time \u5e93\u4e0d\u5305\u542b\u5b83\u4eec\u7684\u5b9a\u4e49\u5934\u6587\u4ef6 <boost/date_time/gregorian/greg_duration_types.hpp> \u3002 \u65e5\u671f\u533a\u95f4 date_time \u5e93\u4f7f\u7528 date_period \u6765\u8868\u793a\u65e5\u671f\u533a\u95f4\u7684\u6982\u5ff5\uff0c\u5b83\u662f\u65f6\u95f4\u8f74\u4e0a\u7684\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u5176\u7aef\u70b9\u662f\u4e24\u4e2a date \u5bf9\u8c61\u3002\u65e5\u671f\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u5fc5\u987b\u5c0f\u4e8e\u53f3\u8fb9\u754c\uff0c\u5426\u5219 date_period \u5c06\u8868\u793a\u4e00\u4e2a\u65e0\u6548\u7684\u65e5\u671f\u533a\u95f4\u3002 date_period \u53ef\u4ee5\u6307\u5b9a\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u6784\u9020\u533a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5de6\u7aef\u70b9\u518d\u52a0\u4e0a\u65f6\u957f\u6784\u9020\u533a\u95f4\uff0c\u901a\u5e38\u540e\u4e00\u79cd\u65b9\u6cd5\u6bd4\u8f83\u5e38\u7528\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5728\u751f\u6d3b\u4e2d\u4ece\u67d0\u5929\u5f00\u59cb\u7684\u4e00\u4e2a\u5468\u671f\u3002 \u6210\u5458\u51fd\u6570 begin() \u548c last() \u8fd4\u56de\u65e5\u671f\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u800c end() \u8fd4\u56de last() \u540e\u7684\u7b2c\u4e00\u5929\uff0c\u4e0e\u6807\u51c6\u5bb9\u5668\u4e2d\u7684 end() \u542b\u4e49\u76f8\u540c\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u903e\u5c3e\u7684\u4f4d\u7f6e\u201d\u3002 length() \u8fd4\u56de\u65e5\u671f\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u5728\u6784\u9020\u65e5\u671f\u533a\u95f4\u65f6\u4f7f\u7528\u4e86\u5de6\u5927\u53f3\u5c0f\u7684\u7aef\u70b9\u6216\u65e5\u671f\u957f\u5ea6\u662f 0\uff0c\u90a3\u4e48 is_null() \u51fd\u6570\u5c06\u8fd4\u56de true \u3002 date_period \u53ef\u4ee5\u8fdb\u884c\u5168\u5e8f\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4f46\u5b83\u7684\u4f9d\u636e\u5e76\u4e0d\u662f\u65e5\u671f\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u800c\u662f\u533a\u95f4\u7684\u7aef\u70b9\uff0c\u5373\u7b2c\u4e00\u4e2a\u533a\u95f4\u7684 end() \u548c\u7b2c\u4e8c\u4e2a\u533a\u95f4\u7684 begin() \uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u533a\u95f4\u5728\u65f6\u95f4\u8f74\u4e0a\u7684\u4f4d\u7f6e\u5927\u5c0f\u3002\u5982\u679c\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u76f8\u4ea4\u6216\u5305\u542b\uff0c\u90a3\u4e48\u6bd4\u8f83\u64cd\u4f5c\u5c31\u65e0\u610f\u4e49\u3002 date_period \u8fd8\u652f\u6301\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u7b26\uff0c\u9ed8\u8ba4\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u662f\u4e00\u4e2a [YYYY-mmm-DD / YYYY-mmm-DD] \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 \u65e5\u671f\u533a\u95f4\u8fd0\u7b97 date_period \u540c date \u3001 days \u4e00\u6837\uff0c\u4e5f\u652f\u6301\u5f88\u591a\u8fd0\u7b97\u3002 \u6210\u5458\u51fd\u6570 shift() \u548c expand() \u53ef\u4ee5\u53d8\u52a8\u533a\u95f4\uff1a shift() \u5c06\u65e5\u671f\u533a\u95f4\u5e73\u79fb n \u5929\u800c\u957f\u5ea6\u4e0d\u53d8\uff0c expand() \u5c06\u65e5\u671f\u533a\u95f4\u5411\u4e24\u7aef\u5ef6\u4f38 n \u5929\uff0c\u76f8\u5f53\u4e8e\u533a\u95f4\u957f\u5ea6\u589e\u52a0 2n \u5929\u3002 date_period \u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u51fd\u6570\u5224\u65ad\u67d0\u4e2a\u65e5\u671f\u662f\u5426\u5728\u533a\u95f4\u5185\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u65e5\u671f\u533a\u95f4\u7684\u4ea4\u96c6\u3002 - is_before() / is_after() \uff1a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5728\u65e5\u671f\u524d\u6216\u540e - contains() \uff1a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5305\u542b\u53e6\u4e00\u4e2a\u533a\u95f4\u6216\u65e5\u671f - intersects() \uff1a\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5b58\u5728\u4ea4\u96c6 - intersection() \uff1a\u8fd4\u56de\u4e24\u4e2a\u533a\u95f4\u7684\u4ea4\u96c6\uff0c\u5982\u679c\u65e0\u4ea4\u96c6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u65e0\u6548\u533a\u95f4 - is_adjacent() \uff1a\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u662f\u5426\u76f8\u90bb date_period \u63d0\u4f9b\u4e86\u4e24\u79cd\u5e76\u96c6\u64cd\u4f5c\u3002 - merge() \uff1a\u8fd4\u56de\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u7684\u5e76\u96c6\uff0c\u5982\u679c\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u65e0\u4ea4\u96c6\u6216\u4e0d\u76f8\u90bb\uff0c\u5219\u8fd4\u56de\u65e0\u6548\u533a\u95f4 - span() \uff1a\u5408\u5e76\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u53ca\u4e24\u8005\u95f4\u7684\u95f4\u9694\uff0c\u76f8\u5f53\u4e8e\u5e7f\u4e49\u7684 merge() \u65e5\u671f\u8fed\u4ee3\u5668 date_time \u5e93\u4e3a\u65e5\u671f\u5904\u7406\u63d0\u4f9b\u4e86\u65e5\u671f\u8fed\u4ee3\u5668\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u9012\u589e\u6216\u9012\u51cf\u64cd\u4f5c\u7b26\u8fde\u7eed\u8bbf\u95ee\u65e5\u671f\uff0c\u8fd9\u4e9b\u65e5\u671f\u8fed\u4ee3\u5668\u5305\u62ec day_iterator \u3001 week_iterator \u3001 month_iterator \u548c year_iterator \uff0c\u5b83\u4eec\u5206\u522b\u4ee5\u5929\u3001\u5468\u3001\u6708\u548c\u5e74\u4e3a\u5355\u4f4d\u3002 \u65e5\u671f\u8fed\u4ee3\u5668\u7684\u7528\u6cd5\u57fa\u672c\u7c7b\u4f3c\uff0c\u90fd\u9700\u8981\u5728\u6784\u9020\u662f\u4f20\u5165\u4e00\u4e2a\u8d77\u59cb\u65e5\u671f\u548c\u589e\u51cf\u6b65\u957f\uff08\u53ef\u4ee5\u662f\u4e00\u5929\u3001\u5468\u6216 n \u4e2a\u6708\u7b49\uff0c\u9ed8\u8ba4\u662f 1 \u4e2a\u5355\u4f4d\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528 operator++ \u3001 operator-- \u53d8\u5316\u65e5\u671f\u3002\u8fed\u4ee3\u5668\u76f8\u5f53\u4e8e\u4e00\u4e2a date \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26 * \u83b7\u5f97\u65e5\u671f\u8fed\u4ee3\u5668\u5f53\u524d\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u7528 -> \u76f4\u63a5\u8c03\u7528\u65e5\u671f\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u3002 \u8003\u8651\u5230\u8fd0\u7b97\u6548\u7387\uff0c\u65e5\u671f\u8fed\u4ee3\u5668\u53ea\u63d0\u4f9b\u524d\u7f6e\u5f0f\u7684 ++ \u3001 -- \u64cd\u4f5c\u7b26\uff0c\u4e0d\u63d0\u4f9b\u540e\u7f6e\u5f0f\u64cd\u4f5c\u7b26\u3002 \u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\uff0c\u65e5\u671f\u8fed\u4ee3\u5668\u8fd8\u91cd\u8f7d\u4e86\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff0c\u4e0d\u9700\u8981\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e0e\u5176\u4ed6\u65e5\u671f\u5bf9\u8c61\u6bd4\u8f83\u5927\u5c0f\u3002 \u793a\u8303\u65e5\u671f\u8fed\u4ee3\u5668\u7684\u57fa\u672c\u7528\u6cd5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a date d ( 2017 , 6 , 1 ); day_iterator d_iter ( d ); //\u589e\u51cf\u6b65\u957f\u9ed8\u8ba4\u4e3a1 assert ( d_iter == d ); ++ d_iter ; //\u9012\u589e1\u5929 year_iterator y_iter ( * d_iter , 10 ); //\u589e\u51cf\u6b65\u957f\u4e3a10\u5e74 ++ y_iter ; //\u9012\u589e10\u5e74 assert ( y_iter -> year () == 2027 ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136 day_iterator \u3001 week_iterator \u7684\u540d\u5b57\u53eb\u8fed\u4ee3\u5668\uff0c\u4f46\u5b83\u5e76\u4e0d\u7b26\u5408\u6807\u51c6\u8fed\u4ee3\u5668\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u6ca1\u6709 difference_type \u3001 pointer \u3001 referenct \u7b49\u5185\u90e8\u7c7b\u578b\u5b9a\u4e49\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528 std::advance() \u6216 operator+= \u6765\u524d\u8fdb\u6216\u540e\u9000\u3002 \u5176\u4ed6\u529f\u80fd boost::gregorian::gregorian_calendar \u7c7b\u63d0\u4f9b\u4e86\u683c\u91cc\u9ad8\u5229\u5386\u7684\u4e00\u4e9b\u64cd\u4f5c\u51fd\u6570\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u51fd\u6570\u57fa\u672c\u4e0a\u88ab date \u7c7b\u5185\u90e8\u4f7f\u7528\uff0c\u7528\u6237\u5f88\u5c11\u4f1a\u7528\u5230\u3002\u4f46\u5b83\u4e5f\u63d0\u4f9b\u4e86\u51e0\u4e2a\u6709\u7528\u7684\u9759\u6001\u51fd\u6570\uff1a\u6210\u5458\u51fd\u6570 is_leap_year() \u53ef\u4ee5\u5224\u65ad\u5e74\u4efd\u662f\u5426\u662f\u95f0\u5e74\uff1b end_of_month_day() \u53ef\u4ee5\u7ed9\u5b9a\u5e74\u4efd\u548c\u6708\u4efd\uff0c\u5e76\u8fd4\u56de\u8be5\u6708\u7684\u6700\u540e\u4e00\u5929\u3002","title":"04. \u5904\u7406\u65e5\u671f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_1","text":"date \u662f date_time \u5e93\u5904\u7406\u65e5\u671f\u7684\u6838\u5fc3\u7c7b\uff0c\u4f7f\u7528\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u5185\u90e8\u5b58\u50a8\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\u8868\u793a\u65f6\u95f4\u70b9\u6982\u5ff5\u3002 date \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u5904\u7406\u6548\u7387\u5f88\u9ad8\uff0c\u53ef\u4ee5\u88ab\u62f7\u8d1d\u4f20\u503c\u3002 date \u4e5f\u5168\u9762\u652f\u6301\u6bd4\u8f83\u64cd\u4f5c\u548c\u6d41\u8f93\u5165\u8f93\u51fa\uff0c\u56e0\u6b64\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u5b83\u5f53\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e int \u3001 string \u7684\u57fa\u672c\u7c7b\u578b\u6765\u4f7f\u7528\u3002","title":"\u65e5\u671f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_2","text":"\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u521b\u5efa\u65e5\u671f\u5bf9\u8c61\u3002 \u7a7a\u7684\u6784\u9020\u51fd\u6570\u4f1a\u521b\u5efa\u4e00\u4e2a\u503c\u4e3a not_a_date_time \u7684\u65e0\u6548\u65e5\u671f\uff1b\u987a\u5e8f\u4f20\u5165\u5e74\u3001\u6708\u3001\u65e5\u503c\u5219\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u65e5\u671f\u7684date\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a date d1 ; //\u4e00\u4e2a\u65e0\u6548\u7684\u65e5\u671f date d2 ( 2010 , 1 , 1 ); //\u4f7f\u7528\u6570\u5b57\u6784\u9020\u65e5\u671f date d3 ( 2000 , Jan , 1 ); //\u4e5f\u53ef\u4ee5\u4f7f\u7528\u82f1\u6587\u6307\u5b9a\u6708\u4efd date d4 ( d2 ); //date \u652f\u6301\u62f7\u8d1d\u6784\u9020 assert ( d1 == date ( not_a_date_time )); //\u6bd4\u8f83\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61 assert ( d2 == d4 ); //date \u652f\u6301\u6bd4\u8f83\u64cd\u4f5c assert ( d3 < d4 ); \u5982\u679c\u4e0d\u5e0c\u671b date \u9ed8\u8ba4\u6784\u9020\u51fa\u65e0\u6548\u65e5\u671f\uff0c\u53ef\u4ee5\u5728\u4fdd\u62a4\u5934\u6587\u4ef6\u524d\u5b9a\u4e49\u5b8f DATE_TIME_NO_DEFAULT_CONSTRUCTOR \uff0c\u4ece\u800c\u7981\u6b62\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 date \u4e5f\u5141\u8bb8\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ea7\u751f\uff0c\u8fd9\u9700\u8981\u4f7f\u7528\u5de5\u5382\u51fd\u6570 from_string() \u6216 from_undelimited_string() \u3002\u524d\u8005\u4f7f\u7528\u5206\u9694\u7b26\uff08\u659c\u6760\u6216\u8fde\u5b57\u7b26\uff09\u5206\u9694\u5e74\u3001\u6708\u3001\u65e5\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u540e\u8005\u5219\u662f\u65e0\u5206\u9694\u7b26\u7684\u7eaf\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a date d5 = from_string ( \"1999-12-31\" ); date d6 ( from_string ( \"2015/1/1\" )); date d7 = from_undelimited_string ( \"20110208\" ); day_clock \u662f\u4e00\u4e2a\u5929\u7ea7\u522b\u7684\u65f6\u949f\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u8c03\u7528\u5b83\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 local_day() \u6216 universal_day() \u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f53\u5929\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u5206\u522b\u662f\u672c\u5730\u65e5\u671f\u548c UTC \u65e5\u671f\u3002 day_clock \u5185\u90e8\u4f7f\u7528\u4e86 C \u6807\u51c6\u5e93\u7684\u51fd\u6570 localtime() \u548c gmtime() \uff0c \u56e0\u6b64 local_day() \u7684\u884c\u4e3a\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u533a\u8bbe\u7f6e \u3002\u4f8b\u5982\uff1a std :: cout << day_clock :: local_day () << day_clock :: universal_day () << std :: endl ; \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u65f6\u95f4\u6982\u5ff5\u679a\u4e3e special_values \u6765\u521b\u5efa\u4e00\u4e9b\u7279\u6b8a\u7684\u65e5\u671f\uff0c\u5728\u67d0\u4e9b\u60c5\u5f62\u4e0b\uff08\u5982\u65e0\u9650\u671f\uff09\u4f1a\u5f88\u6709\u7528\uff1a date d1 ( neg_infin ); //\u8d1f\u65e0\u9650\u65e5\u671f date d2 ( pos_infin ); //\u6b63\u65e0\u9650\u65e5\u671f date d3 ( not_a_date_time ); //\u65e0\u6548\u65e5\u671f date d4 ( max_date_time ); //\u6700\u5927\u53ef\u80fd\u65e5\u671f date d5 ( min_date_time ); //\u6700\u5c0f\u53ef\u80fd\u65e5\u671f \u7528 std::cout \u5c06\u5b83\u4eec\u8f93\u51fa\uff0c\u663e\u793a\u5982\u4e0b\uff1a - infinity + infinity not - a - date - time 9999 - Dec -31 1400 - Jan -01 \u5982\u679c\u5728\u521b\u5efa\u65e5\u671f\u5bf9\u8c61\u65f6\u4f7f\u7528\u4e86\u975e\u6cd5\u503c\uff0c\u5982\u65e5\u671f\u8d85\u51fa\u4e86\u4ece 1400-01-01 \u5230 9999-12-31 \u7684\u8303\u56f4\uff0c\u6216\u8005\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u6708\u4efd\u6216\u65e5\u671f\uff0c\u90a3\u4e48 date_time \u5e93\u4f1a\u629b\u51fa\u5f02\u5e38\uff08\u800c\u4e0d\u662f\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65e0\u6548\u65e5\u671f\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 what() \u83b7\u5f97\u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\u3002","title":"\u521b\u5efa\u65e5\u671f\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_3","text":"date \u7684\u5bf9\u5916\u63a5\u53e3\u5f88\u50cf C \u8bed\u8a00\u4e2d\u7684 tm \u7ed3\u6784\uff0c\u53ef\u4ee5\u83b7\u53d6\u5b83\u4fdd\u5b58\u7684\u5e74\u3001\u6708\u3001\u65e5\u3001\u661f\u671f\u7b49\u6210\u5206\uff0c\u4f46 date \u8fd8\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u3002 \u6210\u5458\u51fd\u6570 year() \u3001 month() \u548c day() \u5206\u522b\u8fd4\u56de\u65e5\u671f\u7684\u5e74\u3001\u6708\u3001\u65e5\uff1a date d ( 2017 , 6 , 1 ); assert ( d . year () == 2017 ); assert ( d . month () == 6 ); assert ( d . day () == 1 ); \u6210\u5458\u51fd\u6570 year_month_day() \u8fd4\u56de\u4e00\u4e2a date::ymd_type \u7ed3\u6784\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u5730\u83b7\u53d6\u5e74\u3001\u6708\u3001\u65e5\u6570\u636e\uff1a date d ( 2017 , 6 , 1 ); date :: ymd_type ymd = d . year_month_day (); assert ( ymd . year == 2017 ); assert ( ymd . month == 6 ); assert ( ymd . day == 1 ); \u6210\u5458\u51fd\u6570 day_of_week() \u8fd4\u56dedate\u7684\u661f\u671f\u6570\uff0c0 \u8868\u793a\u661f\u671f\u5929\u3002 day_of_year() \u8fd4\u56de date \u662f\u5f53\u5e74\u7684\u7b2c\u51e0\u5929\uff08\u6700\u5927\u503c\u662f 366\uff09\u3002 end_of_month() \u8fd4\u56de\u5f53\u6708\u7684\u6700\u540e\u4e00\u5929\u7684 date \u5bf9\u8c61\uff1a date d ( 2017 , 6 , 1 ); std :: cout << d . day_of_week () << std :: endl ; std :: cout << d . day_of_year () << std :: endl ; assert ( d . end_of_month () == date ( 2017 , 6 , 30 )); \u6210\u5458\u51fd\u6570 week_number() \u8fd4\u56de date \u6240\u5728\u7684\u5468\u662f\u5f53\u5e74\u7684\u7b2c\u51e0\u5468\uff0c\u5176\u8303\u56f4\u662f 0~53\uff1a std :: cout << date ( 2015 , 1 , 10 ). week_number () << std :: endl ; std :: cout << date ( 2016 , 1 , 10 ). week_number () << std :: endl ; std :: cout << date ( 2017 , 1 , 10 ). week_number () << std :: endl ; date \u8fd8\u6709 5 \u4e2a is_xxx() \u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u9a8c\u65e5\u671f\u662f\u5426\u65f6\u4e00\u5171\u7279\u6b8a\u65e5\u671f\uff0c\u5177\u4f53\u5982\u4e0b\uff1a - is_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u65e0\u9650\u65e5\u671f - is_neg_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u8d1f\u65e0\u9650\u65e5\u671f - is_pos_infinity() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u6b63\u65e0\u9650\u65e5\u671f - is_not_a_date() \uff1a\u662f\u5426\u662f\u4e00\u4e2a\u65e0\u6548\u65e5\u671f - is_special() \uff1a\u662f\u5426\u662f\u4efb\u610f\u4e00\u4e2a\u7279\u6b8a\u65e5\u671f \u5b83\u4eec\u7684\u7528\u6cd5\u5982\u4e0b\uff1a assert ( date ( pos_infin ). is_infinity ()); assert ( date ( pos_infin ). is_pos_infinity ()); assert ( date ( neg_infin ). is_neg_infinity ()); assert ( date ( not_a_date_time ). is_not_a_date ()); assert ( date ( not_a_date_time ). is_special ()); assert ( ! date ( 2017 , 5 , 31 ). is_special ());","title":"\u8bbf\u95ee\u65e5\u671f"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_4","text":"\u53ef\u4ee5\u5c06 date \u5bf9\u8c61\u5f88\u65b9\u4fbf\u5730\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5b83\u63d0\u4f9b\u4e86 3 \u4e2a\u81ea\u7531\u51fd\u6570\u3002 - to_simple_string() \uff1a\u8f6c\u6362\u4e3a YYYY-mmm-DD \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\uff0cmmm \u4e3a 3 \u5b57\u7b26\u7684\u82f1\u6587\u6708\u4efd\u540d - to_iso_string() \uff1a\u8f6c\u6362\u4e3a YYYYMMDD \u683c\u5f0f\u7684\u6570\u5b57\u5b57\u7b26\u4e32 - to_iso_extended_string() \uff1a\u8f6c\u6362\u4e3a YYYY-MM-DD \u683c\u5f0f\u7684\u6570\u5b57\u5b57\u7b26\u4e32 date \u4e5f\u652f\u6301\u6d41\u8f93\u5165\u8f93\u51fa\uff0c\u9ed8\u8ba4\u4f7f\u7528 YYYY-mmm-DD \u683c\u5f0f\u3002\u4f8b\u5982\uff1a date d ( 2017 , 6 , 1 ); std :: cout << to_simple_string ( d ) << std :: endl ; std :: cout << to_iso_string ( d ) << std :: endl ; std :: cout << to_iso_extended_string ( d ) << std :: endl ; std :: cout << d << std :: endl ;","title":"\u65e5\u671f\u7684\u8f93\u51fa"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#c","text":"date \u652f\u6301\u4e0e C \u8bed\u8a00\u4e2d\u7684 tm \u7ed3\u6784\u76f8\u4e92\u8f6c\u6362\uff0c\u8f6c\u6362\u7684\u89c4\u5219\u548c\u51fd\u6570\u5982\u4e0b\u3002 - to_tm(date) \uff1a date \u8f6c\u6362\u5230 tm \u3002\u5c06 tm \u7684\u65f6\u3001\u5206\u3001\u79d2\u6210\u5458\uff08 tm_hour / tm_min / tim_sec \uff09\u5747\u7f6e\u4e3a 0\uff0c\u5c06\u590f\u4ee4\u65f6\u6807\u5fd7 tm_isdst \u7f6e\u4e3a -1\uff08\u8868\u793a\u672a\u77e5\uff09\u3002 - date_from_tm(datetm) \uff1a tm \u8f6c\u6362\u5230 date \u3002\u53ea\u4f7f\u7528\u5e74\u3001\u6708\u3001\u65e5 3 \u4e2a\u6210\u5458\uff08 tm_year / tm_mon / tm_mday \uff09\uff0c\u5176\u4ed6\u6210\u5458\u5747\u88ab\u5ffd\u7565\u3002","title":"\u8f6c\u6362 C \u7ed3\u6784"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_5","text":"\u65e5\u671f\u957f\u5ea6\u662f\u4ee5\u5929\u4e3a\u5355\u4f4d\u7684\u65f6\u957f\uff0c\u662f\u5ea6\u91cf\u65f6\u95f4\u957f\u5ea6\u7684\u4e00\u4e2a\u6807\u91cf\u3002\u5b83\u4e0e\u65e5\u671f\u4e0d\u540c\uff0c\u5176\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\uff0c\u53ef\u6b63\u53ef\u8d1f\u3002\u57fa\u672c\u7684\u65e5\u671f\u957f\u5ea6\u7c7b\u662f date_duration \u3002 date_duration \u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65e5\u671f\u957f\u5ea6\uff0c\u6210\u5458\u51fd\u6570 days() \u8fd4\u56de\u65f6\u957f\u7684\u5929\u6570\uff0c\u5982\u679c\u4f20\u5165\u7279\u6b8a\u65f6\u95f4\u679a\u4e3e\u503c\u5219\u4f1a\u6784\u9020\u51fa\u4e00\u4e2a\u7279\u6b8a\u65f6\u957f\u5bf9\u8c61\u3002 is_special() \u548c is_negative() \u53ef\u4ee5\u5224\u65ad date_duration \u5bf9\u8c61\u662f\u5426\u4e3a\u7279\u6b8a\u503c\uff0c\u662f\u5426\u4e3a\u8d1f\u503c\u3002 unit() \u8fd4\u56de\u65f6\u957f\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5373 date_duration(1) \u3002 date_duration \u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u64cd\u4f5c\uff08 == \u3001 != \u3001 < \u3001 <= \u7b49\uff09\uff0c\u4e5f\u652f\u6301\u5b8c\u5168\u7684\u52a0\u51cf\u6cd5\u548c\u9012\u589e\u9012\u51cf\u64cd\u4f5c\uff0c\u7528\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u6574\u6570\u3002\u6b64\u5916 date_duration \u8fd8\u652f\u6301\u9664\u6cd5\u8fd0\u7b97\uff0c\u53ef\u4ee5\u9664\u4ee5\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u4e0d\u80fd\u9664\u4ee5\u53e6\u4e00\u4e2a date_duration \uff0c\u5b83\u4e0d\u652f\u6301\u5176\u4ed6\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5982\u4e58\u6cd5\u3001\u53d6\u6a21\u3001\u53d6\u4f59\u7b49\u3002 date_time \u5e93\u4e3a date_duration \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u7528\u7684 typedef \uff1a days \uff0c\u8fd9\u4e2a\u65b0\u540d\u5b57\u66f4\u597d\u5730\u8bf4\u660e\u4e86 date_duration \u7684\u542b\u4e49\u2014\u2014\u5b83\u53ef\u4ee5\u7528\u6765\u8ba1\u91cf\u5929\u6570\u3002 \u793a\u8303 days \uff08 duration \uff09\u7528\u6cd5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a days dd1 ( 10 ), dd2 ( -100 ), dd3 ( 255 ); assert ( dd1 > dd2 && dd1 < dd3 ); assert ( dd1 + dd2 == days ( -90 )); assert (( dd1 + dd3 ). days () == 265 ); assert ( dd3 / 5 == days ( 51 )); \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u65f6\u95f4\u957f\u5ea6\uff0c date_time \u5e93\u8fd8\u63d0\u4f9b\u4e86 months \u3001 years \u3001 weeks 3 \u4e2a\u65f6\u957f\u7c7b\uff0c\u5206\u522b\u7528\u6765\u8868\u793a\u6708\u3001\u5e74\u548c\u661f\u671f\uff0c\u5b83\u4eec\u7684\u542b\u4e49\u4e0e days \u7c7b\u4f3c\uff0c\u4f46\u5176\u884c\u4e3a\u4e0d\u592a\u76f8\u540c\u3002 months \u548c years \u5168\u9762\u652f\u6301\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\uff0c\u4f7f\u7528\u6210\u5458\u51fd\u6570 number_of_months() \u548c number_of_years() \u53ef\u83b7\u5f97\u8868\u793a\u7684\u6708\u6570\u548c\u5e74\u6570\u3002 weeks \u662f date_duration \u7684\u5b50\u7c7b\uff0c\u9664\u6784\u9020\u51fd\u6570\u4ee5 7 \u4e3a\u5355\u4f4d\u5916\uff0c\u5176\u4ed6\u7684\u884c\u4e3a\u4e0e days \u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u4ee5\u8bf4\u5b83\u662f days \u7684\u8fd1\u4e49\u8bcd\u3002","title":"\u65e5\u671f\u957f\u5ea6"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_6","text":"date \u652f\u6301\u52a0\u51cf\u8fd0\u7b97\uff0c\u4f46\u4e24\u4e2a date \u5bf9\u8c61\u7684\u52a0\u6cd5\u64cd\u4f5c\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff08 date_time \u5e93\u4f1a\u4ee5\u7f16\u8bd1\u9519\u8bef\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\uff09\uff0c date \u4e3b\u8981\u7528\u6765\u4e0e\u65f6\u957f\u6982\u5ff5\u8fdb\u884c\u8fd0\u7b97\u3002 \u65e5\u671f\u4e0e\u7279\u6b8a\u65e5\u671f\u957f\u5ea6\u3001\u7279\u6b8a\u65e5\u671f\u4e0e\u65e5\u671f\u957f\u5ea6\u8fdb\u884c\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u7279\u6b8a\u65e5\u671f\u3002 \u5728\u4e8e months \u3001 years \u8fd9\u4e24\u4e2a\u65f6\u957f\u7c7b\u8fdb\u884c\u8ba1\u7b97\u65f6\u8981\u6ce8\u610f\uff1a\u5982\u679c\u65e5\u671f\u662f\u6708\u672b\u7684\u6700\u540e\u4e00\u5929\uff0c\u90a3\u4e48\u52a0\u51cf\u6708\u6216\u5e74\u4f1a\u5f97\u5230\u540c\u6837\u7684\u6708\u672b\u65f6\u95f4\uff0c\u8fd9\u662f\u5408\u4e4e\u751f\u6d3b\u5e38\u8bc6\u7684\u3002\u4f46\u5f53\u5929\u6570\u662f\u6708\u672b\u7684 28 \u6216 29 \u65f6\uff0c\u5982\u679c\u52a0\u51cf\u6708\u4efd\u5230 2 \u6708\u4efd\uff0c\u90a3\u4e48\u968f\u540e\u7684\u8fd0\u7b97\u5c31\u603b\u662f\u6708\u672b\u64cd\u4f5c\uff0c\u539f\u6765\u7684\u5929\u6570\u4fe1\u606f\u5c31\u4f1a\u4e22\u5931\u3002 \u4f7f\u7528 days \u5219\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5982\u679c\u62c5\u5fc3 weeks \u3001 months \u3001 years \u8fd9\u4e9b\u65f6\u957f\u7c7b\u88ab\u65e0\u610f\u4f7f\u7528\u8fdb\u800c\u6270\u4e71\u4e86\u4ee3\u7801\uff0c\u53ef\u4ee5 undef \u5b8f BOOST_DATE_TIME_OPTIONAL_GREGORIAN_TYPES \uff0c\u8fd9\u5c06\u4f7f date_time \u5e93\u4e0d\u5305\u542b\u5b83\u4eec\u7684\u5b9a\u4e49\u5934\u6587\u4ef6 <boost/date_time/gregorian/greg_duration_types.hpp> \u3002","title":"\u65e5\u671f\u8fd0\u7b97"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_7","text":"date_time \u5e93\u4f7f\u7528 date_period \u6765\u8868\u793a\u65e5\u671f\u533a\u95f4\u7684\u6982\u5ff5\uff0c\u5b83\u662f\u65f6\u95f4\u8f74\u4e0a\u7684\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u5176\u7aef\u70b9\u662f\u4e24\u4e2a date \u5bf9\u8c61\u3002\u65e5\u671f\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u5fc5\u987b\u5c0f\u4e8e\u53f3\u8fb9\u754c\uff0c\u5426\u5219 date_period \u5c06\u8868\u793a\u4e00\u4e2a\u65e0\u6548\u7684\u65e5\u671f\u533a\u95f4\u3002 date_period \u53ef\u4ee5\u6307\u5b9a\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u6784\u9020\u533a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5de6\u7aef\u70b9\u518d\u52a0\u4e0a\u65f6\u957f\u6784\u9020\u533a\u95f4\uff0c\u901a\u5e38\u540e\u4e00\u79cd\u65b9\u6cd5\u6bd4\u8f83\u5e38\u7528\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5728\u751f\u6d3b\u4e2d\u4ece\u67d0\u5929\u5f00\u59cb\u7684\u4e00\u4e2a\u5468\u671f\u3002 \u6210\u5458\u51fd\u6570 begin() \u548c last() \u8fd4\u56de\u65e5\u671f\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u800c end() \u8fd4\u56de last() \u540e\u7684\u7b2c\u4e00\u5929\uff0c\u4e0e\u6807\u51c6\u5bb9\u5668\u4e2d\u7684 end() \u542b\u4e49\u76f8\u540c\uff0c\u8fd9\u662f\u4e00\u4e2a\u201c\u903e\u5c3e\u7684\u4f4d\u7f6e\u201d\u3002 length() \u8fd4\u56de\u65e5\u671f\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4ee5\u5929\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u5728\u6784\u9020\u65e5\u671f\u533a\u95f4\u65f6\u4f7f\u7528\u4e86\u5de6\u5927\u53f3\u5c0f\u7684\u7aef\u70b9\u6216\u65e5\u671f\u957f\u5ea6\u662f 0\uff0c\u90a3\u4e48 is_null() \u51fd\u6570\u5c06\u8fd4\u56de true \u3002 date_period \u53ef\u4ee5\u8fdb\u884c\u5168\u5e8f\u6bd4\u8f83\u8fd0\u7b97\uff0c\u4f46\u5b83\u7684\u4f9d\u636e\u5e76\u4e0d\u662f\u65e5\u671f\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u800c\u662f\u533a\u95f4\u7684\u7aef\u70b9\uff0c\u5373\u7b2c\u4e00\u4e2a\u533a\u95f4\u7684 end() \u548c\u7b2c\u4e8c\u4e2a\u533a\u95f4\u7684 begin() \uff0c\u5224\u65ad\u8fd9\u4e24\u4e2a\u533a\u95f4\u5728\u65f6\u95f4\u8f74\u4e0a\u7684\u4f4d\u7f6e\u5927\u5c0f\u3002\u5982\u679c\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u76f8\u4ea4\u6216\u5305\u542b\uff0c\u90a3\u4e48\u6bd4\u8f83\u64cd\u4f5c\u5c31\u65e0\u610f\u4e49\u3002 date_period \u8fd8\u652f\u6301\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u7b26\uff0c\u9ed8\u8ba4\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u662f\u4e00\u4e2a [YYYY-mmm-DD / YYYY-mmm-DD] \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002","title":"\u65e5\u671f\u533a\u95f4"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_8","text":"date_period \u540c date \u3001 days \u4e00\u6837\uff0c\u4e5f\u652f\u6301\u5f88\u591a\u8fd0\u7b97\u3002 \u6210\u5458\u51fd\u6570 shift() \u548c expand() \u53ef\u4ee5\u53d8\u52a8\u533a\u95f4\uff1a shift() \u5c06\u65e5\u671f\u533a\u95f4\u5e73\u79fb n \u5929\u800c\u957f\u5ea6\u4e0d\u53d8\uff0c expand() \u5c06\u65e5\u671f\u533a\u95f4\u5411\u4e24\u7aef\u5ef6\u4f38 n \u5929\uff0c\u76f8\u5f53\u4e8e\u533a\u95f4\u957f\u5ea6\u589e\u52a0 2n \u5929\u3002 date_period \u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u51fd\u6570\u5224\u65ad\u67d0\u4e2a\u65e5\u671f\u662f\u5426\u5728\u533a\u95f4\u5185\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u65e5\u671f\u533a\u95f4\u7684\u4ea4\u96c6\u3002 - is_before() / is_after() \uff1a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5728\u65e5\u671f\u524d\u6216\u540e - contains() \uff1a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5305\u542b\u53e6\u4e00\u4e2a\u533a\u95f4\u6216\u65e5\u671f - intersects() \uff1a\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u662f\u5426\u5b58\u5728\u4ea4\u96c6 - intersection() \uff1a\u8fd4\u56de\u4e24\u4e2a\u533a\u95f4\u7684\u4ea4\u96c6\uff0c\u5982\u679c\u65e0\u4ea4\u96c6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u65e0\u6548\u533a\u95f4 - is_adjacent() \uff1a\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u662f\u5426\u76f8\u90bb date_period \u63d0\u4f9b\u4e86\u4e24\u79cd\u5e76\u96c6\u64cd\u4f5c\u3002 - merge() \uff1a\u8fd4\u56de\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u7684\u5e76\u96c6\uff0c\u5982\u679c\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u65e0\u4ea4\u96c6\u6216\u4e0d\u76f8\u90bb\uff0c\u5219\u8fd4\u56de\u65e0\u6548\u533a\u95f4 - span() \uff1a\u5408\u5e76\u4e24\u4e2a\u65e5\u671f\u533a\u95f4\u53ca\u4e24\u8005\u95f4\u7684\u95f4\u9694\uff0c\u76f8\u5f53\u4e8e\u5e7f\u4e49\u7684 merge()","title":"\u65e5\u671f\u533a\u95f4\u8fd0\u7b97"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_9","text":"date_time \u5e93\u4e3a\u65e5\u671f\u5904\u7406\u63d0\u4f9b\u4e86\u65e5\u671f\u8fed\u4ee3\u5668\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u9012\u589e\u6216\u9012\u51cf\u64cd\u4f5c\u7b26\u8fde\u7eed\u8bbf\u95ee\u65e5\u671f\uff0c\u8fd9\u4e9b\u65e5\u671f\u8fed\u4ee3\u5668\u5305\u62ec day_iterator \u3001 week_iterator \u3001 month_iterator \u548c year_iterator \uff0c\u5b83\u4eec\u5206\u522b\u4ee5\u5929\u3001\u5468\u3001\u6708\u548c\u5e74\u4e3a\u5355\u4f4d\u3002 \u65e5\u671f\u8fed\u4ee3\u5668\u7684\u7528\u6cd5\u57fa\u672c\u7c7b\u4f3c\uff0c\u90fd\u9700\u8981\u5728\u6784\u9020\u662f\u4f20\u5165\u4e00\u4e2a\u8d77\u59cb\u65e5\u671f\u548c\u589e\u51cf\u6b65\u957f\uff08\u53ef\u4ee5\u662f\u4e00\u5929\u3001\u5468\u6216 n \u4e2a\u6708\u7b49\uff0c\u9ed8\u8ba4\u662f 1 \u4e2a\u5355\u4f4d\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528 operator++ \u3001 operator-- \u53d8\u5316\u65e5\u671f\u3002\u8fed\u4ee3\u5668\u76f8\u5f53\u4e8e\u4e00\u4e2a date \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26 * \u83b7\u5f97\u65e5\u671f\u8fed\u4ee3\u5668\u5f53\u524d\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u7528 -> \u76f4\u63a5\u8c03\u7528\u65e5\u671f\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u3002 \u8003\u8651\u5230\u8fd0\u7b97\u6548\u7387\uff0c\u65e5\u671f\u8fed\u4ee3\u5668\u53ea\u63d0\u4f9b\u524d\u7f6e\u5f0f\u7684 ++ \u3001 -- \u64cd\u4f5c\u7b26\uff0c\u4e0d\u63d0\u4f9b\u540e\u7f6e\u5f0f\u64cd\u4f5c\u7b26\u3002 \u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u4f7f\u7528\uff0c\u65e5\u671f\u8fed\u4ee3\u5668\u8fd8\u91cd\u8f7d\u4e86\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff0c\u4e0d\u9700\u8981\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e0e\u5176\u4ed6\u65e5\u671f\u5bf9\u8c61\u6bd4\u8f83\u5927\u5c0f\u3002 \u793a\u8303\u65e5\u671f\u8fed\u4ee3\u5668\u7684\u57fa\u672c\u7528\u6cd5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a date d ( 2017 , 6 , 1 ); day_iterator d_iter ( d ); //\u589e\u51cf\u6b65\u957f\u9ed8\u8ba4\u4e3a1 assert ( d_iter == d ); ++ d_iter ; //\u9012\u589e1\u5929 year_iterator y_iter ( * d_iter , 10 ); //\u589e\u51cf\u6b65\u957f\u4e3a10\u5e74 ++ y_iter ; //\u9012\u589e10\u5e74 assert ( y_iter -> year () == 2027 ); \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136 day_iterator \u3001 week_iterator \u7684\u540d\u5b57\u53eb\u8fed\u4ee3\u5668\uff0c\u4f46\u5b83\u5e76\u4e0d\u7b26\u5408\u6807\u51c6\u8fed\u4ee3\u5668\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u6ca1\u6709 difference_type \u3001 pointer \u3001 referenct \u7b49\u5185\u90e8\u7c7b\u578b\u5b9a\u4e49\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528 std::advance() \u6216 operator+= \u6765\u524d\u8fdb\u6216\u540e\u9000\u3002","title":"\u65e5\u671f\u8fed\u4ee3\u5668"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/04.%20%E5%A4%84%E7%90%86%E6%97%A5%E6%9C%9F/#_10","text":"boost::gregorian::gregorian_calendar \u7c7b\u63d0\u4f9b\u4e86\u683c\u91cc\u9ad8\u5229\u5386\u7684\u4e00\u4e9b\u64cd\u4f5c\u51fd\u6570\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u51fd\u6570\u57fa\u672c\u4e0a\u88ab date \u7c7b\u5185\u90e8\u4f7f\u7528\uff0c\u7528\u6237\u5f88\u5c11\u4f1a\u7528\u5230\u3002\u4f46\u5b83\u4e5f\u63d0\u4f9b\u4e86\u51e0\u4e2a\u6709\u7528\u7684\u9759\u6001\u51fd\u6570\uff1a\u6210\u5458\u51fd\u6570 is_leap_year() \u53ef\u4ee5\u5224\u65ad\u5e74\u4efd\u662f\u5426\u662f\u95f0\u5e74\uff1b end_of_month_day() \u53ef\u4ee5\u7ed9\u5b9a\u5e74\u4efd\u548c\u6708\u4efd\uff0c\u5e76\u8fd4\u56de\u8be5\u6708\u7684\u6700\u540e\u4e00\u5929\u3002","title":"\u5176\u4ed6\u529f\u80fd"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/","text":"date_time \u5e93\u5728\u683c\u91cc\u9ad8\u5229\u5386\u7684\u57fa\u7840\u4e0a\u63d0\u4f9b\u4e86\u5fae\u79d2\u7ea7\u522b\u7684\u65f6\u95f4\u7cfb\u7edf\uff0c\u5982\u679c\u9700\u8981\uff0c\u5b83\u6700\u9ad8\u53ef\u4ee5\u8fbe\u5230\u7eb3\u79d2\u7ea7\u522b\u7684\u7cbe\u786e\u5ea6\u3002 date_time \u5e93\u7684\u65f6\u95f4\u529f\u80fd\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost::posix_time \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/date_time/posix_time/posix_time.hpp> using namespace boost :: posix_time ; \u65f6\u95f4\u957f\u5ea6 \u4e0e\u65e5\u671f\u957f\u5ea6 date_duration \u7c7b\u4f3c\uff0c date_time \u5e93\u4f7f\u7528 time_duration \u5ea6\u91cf\u65f6\u95f4\u957f\u5ea6\u3002 time_duration \u5f88\u50cf C \u8bed\u8a00\u4e2d tm \u7ed3\u6784\u4e2d\u7684\u65f6\u3001\u5206\u3001\u79d2\u90e8\u5206\uff0c\u53ef\u4ee5\u5ea6\u91cf\u57fa\u672c\u7684\u5c0f\u65f6\u3001\u5206\u949f\u548c\u79d2\u949f\uff0c\u8fd8\u53ef\u4ee5\u7cbe\u786e\u5230\u5fae\u79d2\u3002\u5982\u679c\u5728\u5934\u6587\u4ef6\u4e4b\u524d\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \uff0c\u90a3\u4e48\u5b83\u8fd8\u53ef\u4ee5\u7cbe\u786e\u5230\u7eb3\u79d2\u3002 \u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c time_duration \u4e5f\u6709\u51e0\u4e2a\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5ea6\u91cf\u4e0d\u540c\u7684\u65f6\u95f4\u5206\u8fa8\u7387\uff0c\u5b83\u4eec\u7684\u540d\u5b57\u5f88\u5bb9\u6613\u8bb0\uff0c\u5206\u522b\u662f\uff1a hours \u3001 minutes \u3001 seconds \u3001 millisec \u3001 microsec \u548c nanosec \u3002 time_duration \u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u64cd\u4f5c\u548c\u8f93\u5165\u8f93\u51fa\uff0c\u800c\u4e14\u6bd4 date_duration \u652f\u6301\u7684\u7b97\u6570\u8fd0\u7b97\u591a\uff0c\u53ef\u4ee5\u7528\u5b83\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u56db\u5219\u8fd0\u7b97\u3002 \u64cd\u4f5c\u65f6\u95f4\u957f\u5ea6 time_duration \u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u65f6\u6307\u5b9a\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u79d2\uff0c\u5982\u521b\u5efa\u4e00\u4e2a 1 \u5c0f\u65f6 10 \u5206\u949f 30 \u79d2 1 \u6beb\u79d2\uff081000\u5fae\u79d2\uff09\u7684\u65f6\u95f4\u957f\u5ea6\uff1a time_duration td ( 1 , 10 , 30 , 1000 ); \u65f6\u3001\u5206\u3001\u79d2\u7b49\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u503c\uff0c\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5728\u5b83\u4eec\u7684\u9650\u5ea6\u91cc\uff0c\u8d85\u51fa\u7684\u65f6\u95f4\u4f1a\u81ea\u52a8\u8fdb\u4f4d\u6216\u501f\u4f4d\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8868\u793a 2 \u5c0f\u65f6 01 \u5206 06.001 \u79d2\uff1a time_duration td ( 1 , 60 , 60 , 1000 * 1000 * 6 + 1000 ); \u4f7f\u7528 time_duration \u7684\u5b50\u7c7b\u53ef\u4ee5\u66f4\u76f4\u89c2\u5730\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\uff1a hours h ( 1 ); //1 \u5c0f\u65f6 minutes m ( 10 ); //10\u5206\u949f seconds s ( 30 ); //30\u79d2\u949f millisec ms ( 1 ); //1 \u6beb\u79d2 time_duration td = h + m + s + ms ; //\u53ef\u4ee5\u8d4b\u503c\u7ed9 time_duration time_duration td2 = hours ( 2 ) + seconds ( 10 ); //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \u4f7f\u7528\u5de5\u5382\u51fd\u6570 duration_from_string() \uff0c time_duration \u4e5f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u521b\u5efa\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u79d2\u9700\u8981\u7528\u5192\u53f7\u9694\u5f00\uff1a time_duration td = duration_from_string ( \"1:20:32:001\" ); time_duration \u91cc\u7684\u65f6\u3001\u5206\u3001\u79d2\u53ef\u4ee5\u7528 hours() \u3001 minutes() \u3001 seconds() \u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002 total_seconds() \u3001 total_milliseconds() \u3001 total_microseconds() \u5206\u522b\u8fd4\u56de\u65f6\u95f4\u957f\u5ea6\u7684\u603b\u79d2\u6570\u3001\u603b\u6beb\u79d2\u6570\u548c\u603b\u5fae\u79d2\u6570\u3002 fractional_seconds() \u4ee5 long \u8fd4\u56de\u5fae\u79d2\u6570\u3002 time_duration \u5141\u8bb8\u53d6\u8d1f\u503c\uff0c\u6709\u4e00\u4e2a\u6210\u5458\u51fd\u6570 is_negative() \u4e13\u95e8\u7528\u6765\u5224\u65ad\u5b83\u7684\u6b63\u8d1f\u53f7\u3002\u6210\u5458\u51fd\u6570 invert_sign() \u53ef\u4ee5\u6539\u53d8\u65f6\u95f4\u957f\u5ea6\u7b26\u53f7\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u957f\u5ea6\u3002 time_duration \u4e5f\u53ef\u4ee5\u8d4b\u503c\u7279\u6b8a\u65f6\u95f4\u503c\uff0c\u5305\u62ec not_a_date_time \u3001 pos_infin \u7b49\uff0c\u540c\u6837\u4e5f\u6709\u7c7b\u4f3c\u7684 is_xxx() \u51fd\u6570\u7528\u4e8e\u68c0\u6d4b\u5b83\u662f\u5426\u4e3a\u7279\u6b8a\u65f6\u95f4\uff0c\u5176\u7528\u6cd5\u4e0e date \u3001 date_duration \u7c7b\u4f3c\u3002 \u5982\u679c\u60f3\u8981\u5f97\u5230 time_duration \u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u7531\u51fd\u6570 to_simple_string() \u548c to_iso_string() \uff0c\u5b83\u4eec\u5206\u522b\u8fd4\u56de HH : MM : SS . fffffffff \u548c HHMMSS . fffffffff \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a time_duration td = duration_from_string ( \"1:20:32:001\" ); std :: cout << to_simple_string ( td ) << std :: endl ; std :: cout << to_iso_string ( td ) << std :: endl ; time_duration \u4e5f\u53ef\u4ee5\u4f7f\u7528 to_tm() \u51fd\u6570\u8f6c\u6362\u5230 tm \u7ed3\u6784\uff0c \u4f46\u4e0d\u80fd\u8fdb\u884c\u53cd\u5411\u8f6c\u6362 \u3002 \u65f6\u95f4\u7cbe\u786e\u5ea6 date_time \u5e93\u9ed8\u8ba4\u65f6\u95f4\u7cbe\u5ea6\u662f\u5fae\u79d2\uff0c\u7eb3\u79d2\u76f8\u5173\u7684\u7c7b\u548c\u51fd\u6570\uff08\u5982 nanosec \u548c\u6210\u5458\u51fd\u6570 nanoseconds() \u3001 total_nanoseconds() \uff09\u90fd\u4e0d\u53ef\u7528\uff0c\u79d2\u4ee5\u4e0b\u7684\u65f6\u95f4\u5ea6\u91cf\u90fd\u4f7f\u7528\u5fae\u79d2\u3002 \u5f53\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \u65f6\uff0c time_duration \u7684\u4e00\u4e9b\u884c\u4e3a\u5c06\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u7684\u65f6\u95f4\u5206\u8fa8\u7387\u5c06\u7cbe\u786e\u5230\u7eb3\u79d2\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u79d2\u4ee5\u4e0b\u7684\u65f6\u95f4\u5ea6\u91cf\u5355\u4f4d\u4e5f\u4f1a\u53d8\u6210\u7eb3\u79d2\u3002 \u6210\u5458\u51fd\u6570 fractional_seconds() \u4ecd\u7136\u8fd4\u56de\u79d2\u7684\u5c0f\u6570\u90e8\u5206\uff0c\u4f46\u5355\u4f4d\u662f\u7eb3\u79d2\uff0c\u8fd9\u4e5f\u662f\u5b83\u7684\u540d\u79f0\u4e0d\u662f milliseconds() \u6216 nano_seconds() \u7684\u539f\u56e0\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570unit()\u8fd4\u56de\u4e00\u4e2a time_duration \u5bf9\u8c61\uff0c\u5b83\u662f time_duration \u8ba1\u91cf\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u76f8\u5f53\u4e8e time_duration(0, 0, 0, 1) \uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5176\u5355\u4f4d\u662f\u5fae\u79d2\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \uff0c\u5219\u5176\u5355\u4f4d\u662f\u7eb3\u79d2\u3002 time_duration \u63d0\u4f9b\u9759\u6001\u6210\u5458\u51fd\u6570 resolution() \u548c num_fractional_digits() \u6765\u68c0\u6d4b\u5f53\u524d\u7684\u65f6\u95f4\u7cbe\u5ea6\u3002 - resolution() \u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u503ctime_resolutions\uff0c\u8868\u793a\u65f6\u95f4\u957f\u5ea6\u7684\u5206\u8fa8\u7387\u3002 - num_fractional_digits() \u8fd4\u56de\u79d2\u7684\u5c0f\u6570\u90e8\u5206\u7684\u4f4d\u6570\uff08\u5fae\u79d2\u4e3a 6 \u4f4d\uff0c\u7eb3\u79d2\u4e3a 9 \u4f4d\uff09\u3002 BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \u5b8f\u4e3b\u8981\u5f71\u54cd time_duration \u6784\u9020\u51fd\u6570\u4e2d\u5c0f\u6570\u79d2\u7684\u89e3\u91ca\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662f\u5fae\u79d2\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\u7eb3\u79d2\u7cbe\u5ea6\uff0c\u5219\u5355\u4f4d\u662f\u7eb3\u79d2\u3002\u5982\u679c\u8981\u7f16\u5199\u4e0e\u5206\u8fa8\u7387\u65e0\u5173\u7684\u4ee3\u7801\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u8fd9\u79cd\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 millisec / milliseconds \u3001 microsec / microseconds \u8fd9\u4e9b\u9884\u5148\u5b9a\u4e49\u597d\u7684\u65f6\u95f4\u5355\u4f4d\u6765\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\u3002 \u6210\u5458\u51fd\u6570 ticks_per_second() \u662f C \u4e2d\u5b8f CLOCK_PER_SEC \u7684\u5f3a\u5316\uff0c\u5b83\u8fd4\u56de\u6bcf\u79d2\u949f\u5185\u7684 tick \u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u7f16\u5199\u4e0e\u65f6\u95f4\u7cbe\u5ea6\u65e0\u5173\u7684\u4ee3\u7801\uff1a time_duration :: tick_type my_millisec = //\u81ea\u5b9a\u4e49\u6beb\u79d2\u5355\u4f4d time_duration :: ticks_per_second () / 1000 ; time_duration td ( 1 , 10 , 30 , 10 * my_millisec ); //10\u6beb\u79d2\uff0c\u53730.01\u79d2 \u65f6\u95f4\u70b9 ptime \u662f date_time \u5e93\u5904\u7406\u65f6\u95f4\u7684\u6838\u5fc3\u7c7b\uff0c\u5b83\u4f7f\u7528 64 \u4f4d\uff08\u5fae\u79d2\u7ea7\u522b\uff09\u6216 96 \u4f4d\uff08\u7eb3\u79d2\u7ea7\u522b\uff09\u7684\u6574\u6570\u5728\u5185\u90e8\u5b58\u50a8\u65f6\u95f4\u6570\u636e\uff0c\u4f9d\u8d56\u4e8e date \u548c time_duration \uff0c\u56e0\u6b64\u5176\u63a5\u53e3\u5f88\u5c0f\uff08\u5c11\uff1f\uff09\u3002 ptime\u4e5f\u662f\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u88ab\u9ad8\u6548\u5730\u4efb\u610f\u62f7\u8d1d\u3001\u8d4b\u503c\uff0c\u4e5f\u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u8fd0\u7b97\u548c\u52a0\u51cf\u8fd0\u7b97\u3002 \u521b\u5efa\u65f6\u95f4\u70b9\u5bf9\u8c61 \u6700\u57fa\u672c\u7684\u521b\u5efa ptime \u7684\u65b9\u5f0f\u662f\u5728\u6784\u9020\u51fd\u6570\u4e2d\u540c\u65f6\u6307\u5b9a date \u548c time_duration \u5bf9\u8c61\uff0c\u4ee4 ptime \u7b49\u4e8e\u4e00\u4e2a\u65e5\u671f\u52a0\u5f53\u5929\u7684\u65f6\u95f4\u504f\u79fb\u91cf\u3002\u5982\u679c\u4e0d\u6307\u5b9a time_duration \uff0c\u5219\u9ed8\u8ba4\u4e3a\u5f53\u5929\u7684\u96f6\u70b9\u3002\u4f8b\u5982\uff1a //posix_time \u540d\u5b57\u7a7a\u95f4\u4e0d\u5305\u542b gregorian \u540d\u5b57\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u4e0a\u5bf9\u5b83\u7684\u5f15\u7528 using namespace boost :: gregorian ; ptime p ( date ( 2021 , 8 , 12 ), hours ( 1 )); //2021\u5e748\u670812\u65e5\u51cc\u66681\u70b9 ptime \u8036\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u6784\u9020\uff0c\u4f7f\u7528\u5de5\u5382\u51fd\u6570 time_from_string() \u548c from_iso_string() \u5373\u53ef\u3002\u524d\u8005\u4f7f\u7528\u5206\u9694\u7b26\u5206\u9694\u65e5\u671f\u65f6\u95f4\uff0c\u540e\u8005\u5219\u662f\u8fde\u7eed\u7684\u6570\u5b57\u65e5\u671f\u4e0e\u65f6\u95f4\u7528\u5b57\u6bcd T \u9694\u5f00\uff1a ptime p1 = time_from_string ( \"2021-8-12 01:00:00\" ); ptime p2 = from_iso_string ( \"20210812T010000\" ); date_time \u5e93\u4e5f\u4e3a ptime \u63d0\u4f9b\u4e86\u65f6\u949f\u7c7b\uff0c\u53ef\u4ee5\u4ece\u65f6\u949f\u4ea7\u751f\u5f53\u524d\u65f6\u95f4\u3002\u56e0\u4e3a\u65f6\u95f4\u5177\u6709\u4e0d\u540c\u7684\u5206\u8fa8\u7387\uff0c\u6240\u4ee5\u6709 second_clock \u548c microsec_clock \u4e24\u4e2a\u7c7b\u5206\u522b\u63d0\u4f9b\u79d2\u7ea7\u548c\u5fae\u79d2\u7ea7\u7684\u5206\u8fa8\u7387\uff0c\u5b83\u4eec\u7684\u63a5\u53e3\u662f\u76f8\u540c\u7684\uff0c local_time() \u83b7\u5f97\u672c\u5730\u7684\u5f53\u524d\u65f6\u95f4\uff0c universal_time() \u83b7\u5f97 UTC \u65f6\u95f4\u3002 ptime \u53ef\u4ee5\u6784\u9020\u4e3a\u7279\u6b8a\u65f6\u95f4\u503c\uff0c\u5982\u65e0\u6548\u65f6\u95f4\u3001\u65e0\u9650\u65f6\u95f4\uff0c\u540c\u6837\u6709 is_xxx() \u6765\u68c0\u9a8c\u7279\u6b8a\u503c\u3002 \u64cd\u4f5c\u65f6\u95f4\u70b9\u5bf9\u8c61 \u7531\u4e8e ptime \u76f8\u5f53\u4e8e date + time_duration \uff0c\u6240\u4ee5\u5bf9\u5b83\u7684\u64cd\u4f5c\u53ef\u4ee5\u5206\u89e3\u4e3a\u5bf9\u8fd9\u4e2a\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u64cd\u4f5c\u3002 ptime \u4f7f\u7528 date() \u548c time_of_day() \u4e24\u4e2a\u6210\u5458\u51fd\u6570\u83b7\u5f97\u65f6\u95f4\u70b9\u4e2d\u7684\u65e5\u671f\u957f\u5ea6\u548c\u65f6\u95f4\u957f\u5ea6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5206\u522b\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002 ptime \u652f\u6301\u6bd4\u8f83\u64cd\u4f5c\u4e0e\u52a0\u51cf\u8fd0\u7b97\uff0c\u5176\u8fd0\u7b97\u89c4\u5219\u4e0e\u65e5\u671f\u7c7b\u4f3c\u3002 ptime \u63d0\u4f9b\u4e86 3 \u4e2a\u81ea\u7531\u51fd\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5177\u4f53\u5982\u4e0b\uff1a - to_simple_string() \uff1a\u8f6c\u6362\u4e3a YYYY-mmm-DD HH : MM : SS . ffffff \u683c\u5f0f - to_iso_string() \uff1a\u8f6c\u6362\u4e3a YYYYMMDDTHHMMSS, ffffff \u683c\u5f0f - to_iso_extended_string() \uff1a\u8f6c\u6362\u4e3a YYYY-MM-DDTHH : MM : SS, ffffff \u683c\u5f0f \u5176\u4e2d\u7684 ffffff \u662f\u79d2\u7684\u5c0f\u6570\u90e8\u5206\uff0c\u5982\u679c\u4e3a 0 \u5219\u4e0d\u663e\u793a\uff0cT \u662f\u65e5\u671f\u4e0e\u65f6\u95f4\u7684\u5206\u9694\u7b26\u3002 \u8f6c\u6362 C \u7ed3\u6784 \u4f7f\u7528\u51fd\u6570 to_tm() \uff0c ptime \u53ef\u4ee5\u8f6c\u6362\u5230 tm \u7ed3\u6784\uff0c\u8f6c\u6362\u89c4\u5219\u662f\u5c06 date \u548c time_duration \u7ec4\u5408\uff0c\u800c\u4f7f\u7528 ptime_from_tm() \u51fd\u6570\u53ef\u4ee5\u628a tm \u7ed3\u6784\u8f6c\u6362\u6210 ptime \u3002 \u51fd\u6570 from_time_t() \u548c to_time_t() \u53ef\u4ee5\u5728 time_t \u548c ptime \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362\u3002 \u65f6\u95f4\u533a\u95f4 \u4e0e\u65e5\u671f\u533a\u95f4 date_period \u5bf9\u5e94\uff0c date_time \u5e93\u4e5f\u6709\u65f6\u95f4\u533a\u95f4\u7684\u6982\u5ff5\uff0c time_period \u4f7f\u7528 ptime \u4f5c\u4e3a\u65f6\u95f4\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u65f6\u95f4\u533a\u95f4\u540c\u6837\u4e5f\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u3002 time_period \u7684\u7528\u6cd5\u4e0e date_period \u57fa\u672c\u76f8\u540c\uff0c\u53ef\u4ee5\u7528 begin() \u548c last() \u8fd4\u56de\u65f6\u95f4\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff1b\u7528 length() \u8fd4\u56de\u65f6\u95f4\u533a\u95f4\u7684\u957f\u5ea6\uff1b\u7528 shift() \u548c expand() \u53ef\u4ee5\u53d8\u52a8\u65f6\u95f4\u533a\u95f4\uff0c\u4e5f\u80fd\u8ba1\u7b97\u533a\u95f4\u7684\u4ea4\u96c6\u548c\u5e76\u96c6\u2014\u2014\u5c31\u50cf date_period \u7684\u4e00\u4e2a\u65f6\u95f4\u5206\u8fa8\u7387\u7684\u589e\u5f3a\u7248\u3002 \u65f6\u95f4\u8fed\u4ee3\u5668 \u4e0d\u540c\u4e8e\u65e5\u671f\u8fed\u4ee3\u5668\uff0c\u65f6\u95f4\u8fed\u4ee3\u5668\u53ea\u6709\u4e00\u4e2a time_iterator \u3002\u5b83\u5728\u6784\u9020\u65f6\u4f20\u5165\u4e00\u4e2a\u8d77\u59cb\u65f6\u95f4\u70b9 ptime \u5bf9\u8c61\u548c\u4e00\u4e2a\u6b65\u957f time_duration \u5bf9\u8c61\uff0c\u7136\u540e\u5c31\u540c\u65e5\u671f\u8fed\u4ee3\u5668\u4e00\u6837\u4f7f\u7528\u524d\u7f6e\u5f0f operator++ \u3001 operator-- \u6765\u9012\u589e\u6216\u9012\u51cf\u65f6\u95f4\uff0c\u4f7f\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u8fd4\u56de\u4e00\u4e2a ptime \u5bf9\u8c61\u3002 time_iterator \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0e ptime \u6bd4\u8f83\uff0c\u65e0\u987b\u518d\u4f7f\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u3002","title":"05. \u5904\u7406\u65f6\u95f4"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_1","text":"\u4e0e\u65e5\u671f\u957f\u5ea6 date_duration \u7c7b\u4f3c\uff0c date_time \u5e93\u4f7f\u7528 time_duration \u5ea6\u91cf\u65f6\u95f4\u957f\u5ea6\u3002 time_duration \u5f88\u50cf C \u8bed\u8a00\u4e2d tm \u7ed3\u6784\u4e2d\u7684\u65f6\u3001\u5206\u3001\u79d2\u90e8\u5206\uff0c\u53ef\u4ee5\u5ea6\u91cf\u57fa\u672c\u7684\u5c0f\u65f6\u3001\u5206\u949f\u548c\u79d2\u949f\uff0c\u8fd8\u53ef\u4ee5\u7cbe\u786e\u5230\u5fae\u79d2\u3002\u5982\u679c\u5728\u5934\u6587\u4ef6\u4e4b\u524d\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \uff0c\u90a3\u4e48\u5b83\u8fd8\u53ef\u4ee5\u7cbe\u786e\u5230\u7eb3\u79d2\u3002 \u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c time_duration \u4e5f\u6709\u51e0\u4e2a\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5ea6\u91cf\u4e0d\u540c\u7684\u65f6\u95f4\u5206\u8fa8\u7387\uff0c\u5b83\u4eec\u7684\u540d\u5b57\u5f88\u5bb9\u6613\u8bb0\uff0c\u5206\u522b\u662f\uff1a hours \u3001 minutes \u3001 seconds \u3001 millisec \u3001 microsec \u548c nanosec \u3002 time_duration \u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u64cd\u4f5c\u548c\u8f93\u5165\u8f93\u51fa\uff0c\u800c\u4e14\u6bd4 date_duration \u652f\u6301\u7684\u7b97\u6570\u8fd0\u7b97\u591a\uff0c\u53ef\u4ee5\u7528\u5b83\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u56db\u5219\u8fd0\u7b97\u3002","title":"\u65f6\u95f4\u957f\u5ea6"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_2","text":"time_duration \u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u65f6\u6307\u5b9a\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u79d2\uff0c\u5982\u521b\u5efa\u4e00\u4e2a 1 \u5c0f\u65f6 10 \u5206\u949f 30 \u79d2 1 \u6beb\u79d2\uff081000\u5fae\u79d2\uff09\u7684\u65f6\u95f4\u957f\u5ea6\uff1a time_duration td ( 1 , 10 , 30 , 1000 ); \u65f6\u3001\u5206\u3001\u79d2\u7b49\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u503c\uff0c\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5728\u5b83\u4eec\u7684\u9650\u5ea6\u91cc\uff0c\u8d85\u51fa\u7684\u65f6\u95f4\u4f1a\u81ea\u52a8\u8fdb\u4f4d\u6216\u501f\u4f4d\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u8868\u793a 2 \u5c0f\u65f6 01 \u5206 06.001 \u79d2\uff1a time_duration td ( 1 , 60 , 60 , 1000 * 1000 * 6 + 1000 ); \u4f7f\u7528 time_duration \u7684\u5b50\u7c7b\u53ef\u4ee5\u66f4\u76f4\u89c2\u5730\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\uff1a hours h ( 1 ); //1 \u5c0f\u65f6 minutes m ( 10 ); //10\u5206\u949f seconds s ( 30 ); //30\u79d2\u949f millisec ms ( 1 ); //1 \u6beb\u79d2 time_duration td = h + m + s + ms ; //\u53ef\u4ee5\u8d4b\u503c\u7ed9 time_duration time_duration td2 = hours ( 2 ) + seconds ( 10 ); //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \u4f7f\u7528\u5de5\u5382\u51fd\u6570 duration_from_string() \uff0c time_duration \u4e5f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u521b\u5efa\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u65f6\u3001\u5206\u3001\u79d2\u3001\u5fae\u79d2\u9700\u8981\u7528\u5192\u53f7\u9694\u5f00\uff1a time_duration td = duration_from_string ( \"1:20:32:001\" ); time_duration \u91cc\u7684\u65f6\u3001\u5206\u3001\u79d2\u53ef\u4ee5\u7528 hours() \u3001 minutes() \u3001 seconds() \u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002 total_seconds() \u3001 total_milliseconds() \u3001 total_microseconds() \u5206\u522b\u8fd4\u56de\u65f6\u95f4\u957f\u5ea6\u7684\u603b\u79d2\u6570\u3001\u603b\u6beb\u79d2\u6570\u548c\u603b\u5fae\u79d2\u6570\u3002 fractional_seconds() \u4ee5 long \u8fd4\u56de\u5fae\u79d2\u6570\u3002 time_duration \u5141\u8bb8\u53d6\u8d1f\u503c\uff0c\u6709\u4e00\u4e2a\u6210\u5458\u51fd\u6570 is_negative() \u4e13\u95e8\u7528\u6765\u5224\u65ad\u5b83\u7684\u6b63\u8d1f\u53f7\u3002\u6210\u5458\u51fd\u6570 invert_sign() \u53ef\u4ee5\u6539\u53d8\u65f6\u95f4\u957f\u5ea6\u7b26\u53f7\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u957f\u5ea6\u3002 time_duration \u4e5f\u53ef\u4ee5\u8d4b\u503c\u7279\u6b8a\u65f6\u95f4\u503c\uff0c\u5305\u62ec not_a_date_time \u3001 pos_infin \u7b49\uff0c\u540c\u6837\u4e5f\u6709\u7c7b\u4f3c\u7684 is_xxx() \u51fd\u6570\u7528\u4e8e\u68c0\u6d4b\u5b83\u662f\u5426\u4e3a\u7279\u6b8a\u65f6\u95f4\uff0c\u5176\u7528\u6cd5\u4e0e date \u3001 date_duration \u7c7b\u4f3c\u3002 \u5982\u679c\u60f3\u8981\u5f97\u5230 time_duration \u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u7531\u51fd\u6570 to_simple_string() \u548c to_iso_string() \uff0c\u5b83\u4eec\u5206\u522b\u8fd4\u56de HH : MM : SS . fffffffff \u548c HHMMSS . fffffffff \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a time_duration td = duration_from_string ( \"1:20:32:001\" ); std :: cout << to_simple_string ( td ) << std :: endl ; std :: cout << to_iso_string ( td ) << std :: endl ; time_duration \u4e5f\u53ef\u4ee5\u4f7f\u7528 to_tm() \u51fd\u6570\u8f6c\u6362\u5230 tm \u7ed3\u6784\uff0c \u4f46\u4e0d\u80fd\u8fdb\u884c\u53cd\u5411\u8f6c\u6362 \u3002","title":"\u64cd\u4f5c\u65f6\u95f4\u957f\u5ea6"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_3","text":"date_time \u5e93\u9ed8\u8ba4\u65f6\u95f4\u7cbe\u5ea6\u662f\u5fae\u79d2\uff0c\u7eb3\u79d2\u76f8\u5173\u7684\u7c7b\u548c\u51fd\u6570\uff08\u5982 nanosec \u548c\u6210\u5458\u51fd\u6570 nanoseconds() \u3001 total_nanoseconds() \uff09\u90fd\u4e0d\u53ef\u7528\uff0c\u79d2\u4ee5\u4e0b\u7684\u65f6\u95f4\u5ea6\u91cf\u90fd\u4f7f\u7528\u5fae\u79d2\u3002 \u5f53\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \u65f6\uff0c time_duration \u7684\u4e00\u4e9b\u884c\u4e3a\u5c06\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u7684\u65f6\u95f4\u5206\u8fa8\u7387\u5c06\u7cbe\u786e\u5230\u7eb3\u79d2\uff0c\u6784\u9020\u51fd\u6570\u4e2d\u79d2\u4ee5\u4e0b\u7684\u65f6\u95f4\u5ea6\u91cf\u5355\u4f4d\u4e5f\u4f1a\u53d8\u6210\u7eb3\u79d2\u3002 \u6210\u5458\u51fd\u6570 fractional_seconds() \u4ecd\u7136\u8fd4\u56de\u79d2\u7684\u5c0f\u6570\u90e8\u5206\uff0c\u4f46\u5355\u4f4d\u662f\u7eb3\u79d2\uff0c\u8fd9\u4e5f\u662f\u5b83\u7684\u540d\u79f0\u4e0d\u662f milliseconds() \u6216 nano_seconds() \u7684\u539f\u56e0\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570unit()\u8fd4\u56de\u4e00\u4e2a time_duration \u5bf9\u8c61\uff0c\u5b83\u662f time_duration \u8ba1\u91cf\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u76f8\u5f53\u4e8e time_duration(0, 0, 0, 1) \uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5176\u5355\u4f4d\u662f\u5fae\u79d2\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\u5b8f BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \uff0c\u5219\u5176\u5355\u4f4d\u662f\u7eb3\u79d2\u3002 time_duration \u63d0\u4f9b\u9759\u6001\u6210\u5458\u51fd\u6570 resolution() \u548c num_fractional_digits() \u6765\u68c0\u6d4b\u5f53\u524d\u7684\u65f6\u95f4\u7cbe\u5ea6\u3002 - resolution() \u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u503ctime_resolutions\uff0c\u8868\u793a\u65f6\u95f4\u957f\u5ea6\u7684\u5206\u8fa8\u7387\u3002 - num_fractional_digits() \u8fd4\u56de\u79d2\u7684\u5c0f\u6570\u90e8\u5206\u7684\u4f4d\u6570\uff08\u5fae\u79d2\u4e3a 6 \u4f4d\uff0c\u7eb3\u79d2\u4e3a 9 \u4f4d\uff09\u3002 BOOST_DATE_TIME_POSIX_TIME_STD_CONFIG \u5b8f\u4e3b\u8981\u5f71\u54cd time_duration \u6784\u9020\u51fd\u6570\u4e2d\u5c0f\u6570\u79d2\u7684\u89e3\u91ca\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662f\u5fae\u79d2\uff0c\u5982\u679c\u5b9a\u4e49\u4e86\u7eb3\u79d2\u7cbe\u5ea6\uff0c\u5219\u5355\u4f4d\u662f\u7eb3\u79d2\u3002\u5982\u679c\u8981\u7f16\u5199\u4e0e\u5206\u8fa8\u7387\u65e0\u5173\u7684\u4ee3\u7801\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u8fd9\u79cd\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 millisec / milliseconds \u3001 microsec / microseconds \u8fd9\u4e9b\u9884\u5148\u5b9a\u4e49\u597d\u7684\u65f6\u95f4\u5355\u4f4d\u6765\u521b\u5efa\u65f6\u95f4\u957f\u5ea6\u3002 \u6210\u5458\u51fd\u6570 ticks_per_second() \u662f C \u4e2d\u5b8f CLOCK_PER_SEC \u7684\u5f3a\u5316\uff0c\u5b83\u8fd4\u56de\u6bcf\u79d2\u949f\u5185\u7684 tick \u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u7f16\u5199\u4e0e\u65f6\u95f4\u7cbe\u5ea6\u65e0\u5173\u7684\u4ee3\u7801\uff1a time_duration :: tick_type my_millisec = //\u81ea\u5b9a\u4e49\u6beb\u79d2\u5355\u4f4d time_duration :: ticks_per_second () / 1000 ; time_duration td ( 1 , 10 , 30 , 10 * my_millisec ); //10\u6beb\u79d2\uff0c\u53730.01\u79d2","title":"\u65f6\u95f4\u7cbe\u786e\u5ea6"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_4","text":"ptime \u662f date_time \u5e93\u5904\u7406\u65f6\u95f4\u7684\u6838\u5fc3\u7c7b\uff0c\u5b83\u4f7f\u7528 64 \u4f4d\uff08\u5fae\u79d2\u7ea7\u522b\uff09\u6216 96 \u4f4d\uff08\u7eb3\u79d2\u7ea7\u522b\uff09\u7684\u6574\u6570\u5728\u5185\u90e8\u5b58\u50a8\u65f6\u95f4\u6570\u636e\uff0c\u4f9d\u8d56\u4e8e date \u548c time_duration \uff0c\u56e0\u6b64\u5176\u63a5\u53e3\u5f88\u5c0f\uff08\u5c11\uff1f\uff09\u3002 ptime\u4e5f\u662f\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u88ab\u9ad8\u6548\u5730\u4efb\u610f\u62f7\u8d1d\u3001\u8d4b\u503c\uff0c\u4e5f\u652f\u6301\u5168\u5e8f\u6bd4\u8f83\u8fd0\u7b97\u548c\u52a0\u51cf\u8fd0\u7b97\u3002","title":"\u65f6\u95f4\u70b9"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_5","text":"\u6700\u57fa\u672c\u7684\u521b\u5efa ptime \u7684\u65b9\u5f0f\u662f\u5728\u6784\u9020\u51fd\u6570\u4e2d\u540c\u65f6\u6307\u5b9a date \u548c time_duration \u5bf9\u8c61\uff0c\u4ee4 ptime \u7b49\u4e8e\u4e00\u4e2a\u65e5\u671f\u52a0\u5f53\u5929\u7684\u65f6\u95f4\u504f\u79fb\u91cf\u3002\u5982\u679c\u4e0d\u6307\u5b9a time_duration \uff0c\u5219\u9ed8\u8ba4\u4e3a\u5f53\u5929\u7684\u96f6\u70b9\u3002\u4f8b\u5982\uff1a //posix_time \u540d\u5b57\u7a7a\u95f4\u4e0d\u5305\u542b gregorian \u540d\u5b57\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u4e0a\u5bf9\u5b83\u7684\u5f15\u7528 using namespace boost :: gregorian ; ptime p ( date ( 2021 , 8 , 12 ), hours ( 1 )); //2021\u5e748\u670812\u65e5\u51cc\u66681\u70b9 ptime \u8036\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u6784\u9020\uff0c\u4f7f\u7528\u5de5\u5382\u51fd\u6570 time_from_string() \u548c from_iso_string() \u5373\u53ef\u3002\u524d\u8005\u4f7f\u7528\u5206\u9694\u7b26\u5206\u9694\u65e5\u671f\u65f6\u95f4\uff0c\u540e\u8005\u5219\u662f\u8fde\u7eed\u7684\u6570\u5b57\u65e5\u671f\u4e0e\u65f6\u95f4\u7528\u5b57\u6bcd T \u9694\u5f00\uff1a ptime p1 = time_from_string ( \"2021-8-12 01:00:00\" ); ptime p2 = from_iso_string ( \"20210812T010000\" ); date_time \u5e93\u4e5f\u4e3a ptime \u63d0\u4f9b\u4e86\u65f6\u949f\u7c7b\uff0c\u53ef\u4ee5\u4ece\u65f6\u949f\u4ea7\u751f\u5f53\u524d\u65f6\u95f4\u3002\u56e0\u4e3a\u65f6\u95f4\u5177\u6709\u4e0d\u540c\u7684\u5206\u8fa8\u7387\uff0c\u6240\u4ee5\u6709 second_clock \u548c microsec_clock \u4e24\u4e2a\u7c7b\u5206\u522b\u63d0\u4f9b\u79d2\u7ea7\u548c\u5fae\u79d2\u7ea7\u7684\u5206\u8fa8\u7387\uff0c\u5b83\u4eec\u7684\u63a5\u53e3\u662f\u76f8\u540c\u7684\uff0c local_time() \u83b7\u5f97\u672c\u5730\u7684\u5f53\u524d\u65f6\u95f4\uff0c universal_time() \u83b7\u5f97 UTC \u65f6\u95f4\u3002 ptime \u53ef\u4ee5\u6784\u9020\u4e3a\u7279\u6b8a\u65f6\u95f4\u503c\uff0c\u5982\u65e0\u6548\u65f6\u95f4\u3001\u65e0\u9650\u65f6\u95f4\uff0c\u540c\u6837\u6709 is_xxx() \u6765\u68c0\u9a8c\u7279\u6b8a\u503c\u3002","title":"\u521b\u5efa\u65f6\u95f4\u70b9\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_6","text":"\u7531\u4e8e ptime \u76f8\u5f53\u4e8e date + time_duration \uff0c\u6240\u4ee5\u5bf9\u5b83\u7684\u64cd\u4f5c\u53ef\u4ee5\u5206\u89e3\u4e3a\u5bf9\u8fd9\u4e2a\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u64cd\u4f5c\u3002 ptime \u4f7f\u7528 date() \u548c time_of_day() \u4e24\u4e2a\u6210\u5458\u51fd\u6570\u83b7\u5f97\u65f6\u95f4\u70b9\u4e2d\u7684\u65e5\u671f\u957f\u5ea6\u548c\u65f6\u95f4\u957f\u5ea6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5206\u522b\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002 ptime \u652f\u6301\u6bd4\u8f83\u64cd\u4f5c\u4e0e\u52a0\u51cf\u8fd0\u7b97\uff0c\u5176\u8fd0\u7b97\u89c4\u5219\u4e0e\u65e5\u671f\u7c7b\u4f3c\u3002 ptime \u63d0\u4f9b\u4e86 3 \u4e2a\u81ea\u7531\u51fd\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5177\u4f53\u5982\u4e0b\uff1a - to_simple_string() \uff1a\u8f6c\u6362\u4e3a YYYY-mmm-DD HH : MM : SS . ffffff \u683c\u5f0f - to_iso_string() \uff1a\u8f6c\u6362\u4e3a YYYYMMDDTHHMMSS, ffffff \u683c\u5f0f - to_iso_extended_string() \uff1a\u8f6c\u6362\u4e3a YYYY-MM-DDTHH : MM : SS, ffffff \u683c\u5f0f \u5176\u4e2d\u7684 ffffff \u662f\u79d2\u7684\u5c0f\u6570\u90e8\u5206\uff0c\u5982\u679c\u4e3a 0 \u5219\u4e0d\u663e\u793a\uff0cT \u662f\u65e5\u671f\u4e0e\u65f6\u95f4\u7684\u5206\u9694\u7b26\u3002","title":"\u64cd\u4f5c\u65f6\u95f4\u70b9\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#c","text":"\u4f7f\u7528\u51fd\u6570 to_tm() \uff0c ptime \u53ef\u4ee5\u8f6c\u6362\u5230 tm \u7ed3\u6784\uff0c\u8f6c\u6362\u89c4\u5219\u662f\u5c06 date \u548c time_duration \u7ec4\u5408\uff0c\u800c\u4f7f\u7528 ptime_from_tm() \u51fd\u6570\u53ef\u4ee5\u628a tm \u7ed3\u6784\u8f6c\u6362\u6210 ptime \u3002 \u51fd\u6570 from_time_t() \u548c to_time_t() \u53ef\u4ee5\u5728 time_t \u548c ptime \u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362\u3002","title":"\u8f6c\u6362 C \u7ed3\u6784"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_7","text":"\u4e0e\u65e5\u671f\u533a\u95f4 date_period \u5bf9\u5e94\uff0c date_time \u5e93\u4e5f\u6709\u65f6\u95f4\u533a\u95f4\u7684\u6982\u5ff5\uff0c time_period \u4f7f\u7528 ptime \u4f5c\u4e3a\u65f6\u95f4\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u65f6\u95f4\u533a\u95f4\u540c\u6837\u4e5f\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u3002 time_period \u7684\u7528\u6cd5\u4e0e date_period \u57fa\u672c\u76f8\u540c\uff0c\u53ef\u4ee5\u7528 begin() \u548c last() \u8fd4\u56de\u65f6\u95f4\u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\uff1b\u7528 length() \u8fd4\u56de\u65f6\u95f4\u533a\u95f4\u7684\u957f\u5ea6\uff1b\u7528 shift() \u548c expand() \u53ef\u4ee5\u53d8\u52a8\u65f6\u95f4\u533a\u95f4\uff0c\u4e5f\u80fd\u8ba1\u7b97\u533a\u95f4\u7684\u4ea4\u96c6\u548c\u5e76\u96c6\u2014\u2014\u5c31\u50cf date_period \u7684\u4e00\u4e2a\u65f6\u95f4\u5206\u8fa8\u7387\u7684\u589e\u5f3a\u7248\u3002","title":"\u65f6\u95f4\u533a\u95f4"},{"location":"Programming/00.%20C%2B%2B/Boost/00.%20%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/05.%20%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4/#_8","text":"\u4e0d\u540c\u4e8e\u65e5\u671f\u8fed\u4ee3\u5668\uff0c\u65f6\u95f4\u8fed\u4ee3\u5668\u53ea\u6709\u4e00\u4e2a time_iterator \u3002\u5b83\u5728\u6784\u9020\u65f6\u4f20\u5165\u4e00\u4e2a\u8d77\u59cb\u65f6\u95f4\u70b9 ptime \u5bf9\u8c61\u548c\u4e00\u4e2a\u6b65\u957f time_duration \u5bf9\u8c61\uff0c\u7136\u540e\u5c31\u540c\u65e5\u671f\u8fed\u4ee3\u5668\u4e00\u6837\u4f7f\u7528\u524d\u7f6e\u5f0f operator++ \u3001 operator-- \u6765\u9012\u589e\u6216\u9012\u51cf\u65f6\u95f4\uff0c\u4f7f\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u8fd4\u56de\u4e00\u4e2a ptime \u5bf9\u8c61\u3002 time_iterator \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0e ptime \u6bd4\u8f83\uff0c\u65e0\u987b\u518d\u4f7f\u7528\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\u3002","title":"\u65f6\u95f4\u8fed\u4ee3\u5668"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/00.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","text":"\u5185\u5b58\u7ba1\u7406\u4e00\u76f4\u662f\u4ee4 C++ \u7a0b\u5e8f\u5458\u6700\u5934\u75bc\u7684\u5de5\u4f5c\u3002C++ \u8bed\u8a00\u7ee7\u627f\u4e86 C \u8bed\u8a00\u9ad8\u6548\u53c8\u7075\u6d3b\u7684\u6307\u9488\uff0c\u4f7f\u7528 C++ \u8bed\u8a00\u65f6\u7a0d\u4e0d\u6ce8\u610f\u5c31\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3001\u6307\u9488\u60ac\u7a7a\u3001\u8bbf\u95ee\u8d8a\u754c\u7b49\u95ee\u9898\u3002 [[Boost \u7b80\u4ecb#^83e71d|Boost]] \u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u6848\u3002 [[01. smart_ptr \u5e93\u6982\u8ff0]] [[02. scoped_ptr]] [[03. shared_ptr]] [[04. weak_ptr]] [[05. pool \u5e93\u6982\u8ff0]]","title":"00. \u5185\u5b58\u7ba1\u7406"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/01.%20smart_ptr%20%E5%BA%93%E6%A6%82%E8%BF%B0/","text":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u5f88\u591a\u79cd\u8d44\u6e90\uff0c\u5185\u5b58\u662f\u6211\u4eec\u6700\u5e38\u7528\u5230\u7684\u8d44\u6e90\uff0c\u6b64\u5916\u8fd8\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001socket\u3001\u64cd\u4f5c\u7cfb\u7edf handle\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7b49\uff0c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u7533\u8bf7\u8fd9\u4e9b\u8d44\u6e90\u540e\u5fc5\u987b\u53ca\u65f6\u5f52\u8fd8\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u96be\u4ee5\u9884\u6599\u7684\u540e\u679c\u3002 RAII \u673a\u5236 \u4e3a\u4e86\u7ba1\u7406\u5185\u5b58\u7b49\u8d44\u6e90\uff0cC++ \u7a0b\u5e8f\u5458\u901a\u5e38\u91c7\u7528 RAII \u673a\u5236\uff08Resource Acquisition Is Initialization\uff0c\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u91cc\u7533\u8bf7\u8d44\u6e90\uff0c\u7136\u540e\u4f7f\u7528\u8d44\u6e90\uff0c\u6700\u7ec8\u5728\u6790\u6784\u51fd\u6570\u4e2d\u91ca\u653e\u8d44\u6e90\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u7528\u751f\u547d\u7684\u65b9\u5f0f\u5728\u6808\u4e0a\u521b\u5efa\u7684\uff08\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\uff09\uff0c\u90a3\u4e48 RAII \u673a\u5236\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff0c\u5f53\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u8be5\u5bf9\u8c61\u4f1a\u81ea\u52a8\u9500\u6bc1\uff0c\u4ece\u800c\u8c03\u7528\u6790\u6784\u51fd\u6570\u91ca\u653e\u8d44\u6e90\u3002 \u4f46\u5982\u679c\u5bf9\u8c61\u65f6\u7528 new \u64cd\u4f5c\u7b26\u5728\u5806\u4e0a\u521b\u5efa\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u6790\u6784\u51fd\u6570\u5c06\u65e0\u6cd5\u81ea\u52a8\u8c03\u7528\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u660e\u786e\u5730\u7528\u5bf9\u5e94\u7684 delete \u64cd\u4f5c\u7b26\u9500\u6bc1\u5b83\uff0c\u624d\u80fd\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u5c31\u5b58\u5728\u7740\u8d44\u6e90\u6cc4\u9732\u7684\u9690\u60a3\uff0c\u56e0\u4e3a\u8fd9\u65f6\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u5bf9\u5df2\u7ecf\u83b7\u53d6\u7684\u8d44\u6e90\u8d1f\u8d23\uff0c\u5982\u679c\u56e0\u67d0\u4e9b\u4ee5\u5916\u5bfc\u81f4\u7a0b\u5e8f\u672a\u80fd\u6267\u884c delete \u8bed\u53e5\uff0c\u90a3\u4e48\u5185\u5b58\u7b49\u8d44\u6e90\u5c31\u4f1a\u6c38\u4e45\u4e22\u5931\u3002\u4f8b\u5982\uff1a auto p = new class_need_resource ; //\u521b\u5efa\u5bf9\u8c61\uff0c\u83b7\u53d6\u8d44\u6e90 ... //\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732 delete p ; //\u5220\u9664\u5bf9\u8c61 new \u3001 delete \u53ca\u6307\u9488\u7684\u4e0d\u6070\u5f53\u8fd0\u7528\u662f C++ \u8bed\u8a00\u4e2d\u9020\u6210\u8d44\u6e90\u83b7\u53d6\u3001\u91ca\u653e\u95ee\u9898\u7684\u6839\u6e90\uff0c\u80fd\u5426\u6b63\u786e\u5730\u8fd0\u7528 delete \u662f\u533a\u5206 C++ \u8bed\u8a00\u65b0\u624b\u4e0e\u719f\u624b\u7684\u5173\u952e\u3002\u4f46\u5f88\u591a\u4eba\u2014\u2014\u5373\u4f7f\u662f\u719f\u7ec3\u7684 C++ \u7a0b\u5e8f\u5458\uff0c\u4e5f\u7ecf\u5e38\u4f1a\u5fd8\u8bb0\u8c03\u7528 delete \u3002 \u667a\u80fd\u6307\u9488 \u5411 C++ \u5f15\u5165\u5f02\u5e38\u673a\u5236\u540e\uff0c\u667a\u80fd\u6307\u9488\u7531\u4e00\u79cd\u6280\u5de7\u5347\u7ea7\u4e3a\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u6280\u672f\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u667a\u80fd\u6307\u9488\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u4fdd\u8bc1 new \u5bf9\u8c61\u80fd\u5728\u6b63\u786e\u7684\u65f6\u673a delete \uff0c\u5fc5\u987b\u5bfc\u51fa\u7f16\u5199\u5f02\u5e38\u6355\u83b7\u4ee3\u7801\u4ee5\u91ca\u653e\u8d44\u6e90\uff0c\u800c\u667a\u80fd\u6307\u9488\u5219\u53ef\u4ee5\u5728\u9000\u51fa\u4f5c\u7528\u57df\u65f6\uff08\u65e0\u8bba\u662f\u56e0\u6b63\u5e38\u6d41\u7a0b\u79bb\u5f00\u8fd8\u662f\u56e0\u4e3a\u5f02\u5e38\u79bb\u5f00\uff09\u603b\u8c03\u7528 delete \u6765\u6790\u6784\u5728\u5806\u4e0a\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u3002 boost. smart_ptr \u5e93\u63d0\u4f9b\u4e86\u5f88\u591a\u667a\u80fd\u6307\u9488\uff0c\u5e38\u7528\u7684\u6709 scoped_ptr \u3001 shared_ptr \u3001 weak_ptr \u548c intrusive_ptr \u3002\u5b83\u4eec\u662f\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u5176\u901f\u5ea6\u4e0e\u539f\u59cb\u6307\u9488\u76f8\u5dee\u65e0\u51e0\uff0c\u90fd\u662f\u5f02\u5e38\u5b89\u5168\u7684\uff08exception safe\uff09\uff0c\u800c\u4e14\u5bf9\u4e8e\u6240\u6307\u5411\u7684\u7c7b\u578b T \u4e5f\u4ec5\u6709\u4e00\u4e2a\u5f88\u5c0f\u4e14\u5f88\u5408\u7406\u7684\u8981\u6c42\uff1a\u7c7b\u578b T \u7684\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u8fd9\u4e9b\u667a\u80fd\u6307\u9488\u90fd\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/smart_ptr.hpp> using namespace boost ;","title":"01. smart ptr \u5e93\u6982\u8ff0"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/01.%20smart_ptr%20%E5%BA%93%E6%A6%82%E8%BF%B0/#raii","text":"\u4e3a\u4e86\u7ba1\u7406\u5185\u5b58\u7b49\u8d44\u6e90\uff0cC++ \u7a0b\u5e8f\u5458\u901a\u5e38\u91c7\u7528 RAII \u673a\u5236\uff08Resource Acquisition Is Initialization\uff0c\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u91cc\u7533\u8bf7\u8d44\u6e90\uff0c\u7136\u540e\u4f7f\u7528\u8d44\u6e90\uff0c\u6700\u7ec8\u5728\u6790\u6784\u51fd\u6570\u4e2d\u91ca\u653e\u8d44\u6e90\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u7528\u751f\u547d\u7684\u65b9\u5f0f\u5728\u6808\u4e0a\u521b\u5efa\u7684\uff08\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\uff09\uff0c\u90a3\u4e48 RAII \u673a\u5236\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff0c\u5f53\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u8be5\u5bf9\u8c61\u4f1a\u81ea\u52a8\u9500\u6bc1\uff0c\u4ece\u800c\u8c03\u7528\u6790\u6784\u51fd\u6570\u91ca\u653e\u8d44\u6e90\u3002 \u4f46\u5982\u679c\u5bf9\u8c61\u65f6\u7528 new \u64cd\u4f5c\u7b26\u5728\u5806\u4e0a\u521b\u5efa\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u6790\u6784\u51fd\u6570\u5c06\u65e0\u6cd5\u81ea\u52a8\u8c03\u7528\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u660e\u786e\u5730\u7528\u5bf9\u5e94\u7684 delete \u64cd\u4f5c\u7b26\u9500\u6bc1\u5b83\uff0c\u624d\u80fd\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u5c31\u5b58\u5728\u7740\u8d44\u6e90\u6cc4\u9732\u7684\u9690\u60a3\uff0c\u56e0\u4e3a\u8fd9\u65f6\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u5bf9\u5df2\u7ecf\u83b7\u53d6\u7684\u8d44\u6e90\u8d1f\u8d23\uff0c\u5982\u679c\u56e0\u67d0\u4e9b\u4ee5\u5916\u5bfc\u81f4\u7a0b\u5e8f\u672a\u80fd\u6267\u884c delete \u8bed\u53e5\uff0c\u90a3\u4e48\u5185\u5b58\u7b49\u8d44\u6e90\u5c31\u4f1a\u6c38\u4e45\u4e22\u5931\u3002\u4f8b\u5982\uff1a auto p = new class_need_resource ; //\u521b\u5efa\u5bf9\u8c61\uff0c\u83b7\u53d6\u8d44\u6e90 ... //\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732 delete p ; //\u5220\u9664\u5bf9\u8c61 new \u3001 delete \u53ca\u6307\u9488\u7684\u4e0d\u6070\u5f53\u8fd0\u7528\u662f C++ \u8bed\u8a00\u4e2d\u9020\u6210\u8d44\u6e90\u83b7\u53d6\u3001\u91ca\u653e\u95ee\u9898\u7684\u6839\u6e90\uff0c\u80fd\u5426\u6b63\u786e\u5730\u8fd0\u7528 delete \u662f\u533a\u5206 C++ \u8bed\u8a00\u65b0\u624b\u4e0e\u719f\u624b\u7684\u5173\u952e\u3002\u4f46\u5f88\u591a\u4eba\u2014\u2014\u5373\u4f7f\u662f\u719f\u7ec3\u7684 C++ \u7a0b\u5e8f\u5458\uff0c\u4e5f\u7ecf\u5e38\u4f1a\u5fd8\u8bb0\u8c03\u7528 delete \u3002","title":"RAII \u673a\u5236"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/01.%20smart_ptr%20%E5%BA%93%E6%A6%82%E8%BF%B0/#_1","text":"\u5411 C++ \u5f15\u5165\u5f02\u5e38\u673a\u5236\u540e\uff0c\u667a\u80fd\u6307\u9488\u7531\u4e00\u79cd\u6280\u5de7\u5347\u7ea7\u4e3a\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u6280\u672f\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u667a\u80fd\u6307\u9488\uff0c\u7a0b\u5e8f\u5458\u5fc5\u987b\u4fdd\u8bc1 new \u5bf9\u8c61\u80fd\u5728\u6b63\u786e\u7684\u65f6\u673a delete \uff0c\u5fc5\u987b\u5bfc\u51fa\u7f16\u5199\u5f02\u5e38\u6355\u83b7\u4ee3\u7801\u4ee5\u91ca\u653e\u8d44\u6e90\uff0c\u800c\u667a\u80fd\u6307\u9488\u5219\u53ef\u4ee5\u5728\u9000\u51fa\u4f5c\u7528\u57df\u65f6\uff08\u65e0\u8bba\u662f\u56e0\u6b63\u5e38\u6d41\u7a0b\u79bb\u5f00\u8fd8\u662f\u56e0\u4e3a\u5f02\u5e38\u79bb\u5f00\uff09\u603b\u8c03\u7528 delete \u6765\u6790\u6784\u5728\u5806\u4e0a\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\u3002 boost. smart_ptr \u5e93\u63d0\u4f9b\u4e86\u5f88\u591a\u667a\u80fd\u6307\u9488\uff0c\u5e38\u7528\u7684\u6709 scoped_ptr \u3001 shared_ptr \u3001 weak_ptr \u548c intrusive_ptr \u3002\u5b83\u4eec\u662f\u8f7b\u91cf\u7ea7\u7684\u5bf9\u8c61\uff0c\u5176\u901f\u5ea6\u4e0e\u539f\u59cb\u6307\u9488\u76f8\u5dee\u65e0\u51e0\uff0c\u90fd\u662f\u5f02\u5e38\u5b89\u5168\u7684\uff08exception safe\uff09\uff0c\u800c\u4e14\u5bf9\u4e8e\u6240\u6307\u5411\u7684\u7c7b\u578b T \u4e5f\u4ec5\u6709\u4e00\u4e2a\u5f88\u5c0f\u4e14\u5f88\u5408\u7406\u7684\u8981\u6c42\uff1a\u7c7b\u578b T \u7684\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u8fd9\u4e9b\u667a\u80fd\u6307\u9488\u90fd\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/smart_ptr.hpp> using namespace boost ;","title":"\u667a\u80fd\u6307\u9488"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/","text":"scoped_ptr \u662f\u4e00\u4e2a\u4e0e auto_ptr / unique_ptr \u5f88\u7c7b\u4f3c\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u5305\u88c5\u4e86 new \u64cd\u4f5c\u7b26\u5728\u5bf9\u4e0a\u5206\u914d\u7684\u52a8\u6001\u5bf9\u8c61\uff0c\u80fd\u591f\u4fdd\u8bc1\u52a8\u6001\u521b\u5efa\u7684\u5bf9\u8c61\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u88ab\u6b63\u786e\u5730\u5220\u9664\u3002\u4f46 scoped_ptr \u7684\u6240\u6709\u6743\u66f4\u52a0\u4e25\u683c\uff0c\u4e0d\u80fd\u8f6c\u8ba9\uff0c\u4e00\u65e6 scoped_ptr \u83b7\u53d6\u4e86\u5bf9\u8c61\u7684\u7ba1\u7406\u6743\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u518d\u4ece\u5b83\u90a3\u91cc\u6536\u56de\u6765\u3002 scoped_ptr \u62e5\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u540d\u5b57\uff0c\u5b83\u5411\u4ee3\u7801\u7684\u9605\u8bfb\u8005\u4f20\u9012\u4e86\u660e\u786e\u7684\u4fe1\u606f\uff1a\u8fd9\u4e2a\u53ea\u80fd\u6307\u9488\u53ea\u80fd\u5728\u672c\u4f5c\u7528\u57df\u91cc\u4f7f\u7528\uff0c\u4e0d\u5e0c\u671b\u88ab\u8f6c\u8ba9\u3002 \u64cd\u4f5c\u51fd\u6570 scoped_ptr \u7684\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u7c7b\u578b\u4e3a T* \u7684\u6307\u9488 p \uff0c\u521b\u5efa\u51fa\u4e00\u4e2a scoped_ptr \u5bf9\u8c61\uff0c\u5e76\u5728\u5185\u90e8\u4fdd\u8bc1\u6307\u9488 p \u3002 p \u5fc5\u987b\u662f\u4e00\u4e2a new \u8868\u8fbe\u5f0f\u52a8\u6001\u5206\u914d\u7684\u7ed3\u679c\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff08 nullptr \uff09\u3002\u5f53 scoped_ptr \u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u4f7f\u7528 delete \u64cd\u4f5c\u7b26\u81ea\u52a8\u9500\u6bc1\u6240\u4fdd\u5b58\u7684\u6307\u9488\u5bf9\u8c61\uff0c\u4ece\u800c\u6b63\u786e\u5730\u56de\u6536\u8d44\u6e90\u3002 scoped_ptr \u540c\u65f6\u628a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\u90fd\u58f0\u660e\u4e3a\u79c1\u6709\u7684\uff0c\u7981\u6b62\u5bf9\u667a\u80fd\u6307\u9488\u8fdb\u884c\u62f7\u8d1d\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u4e86\u88ab\u5b83\u7ba1\u7406\u7684\u6307\u9488\u7684\u6240\u6709\u6743\u4e0d\u80fd\u88ab\u8f6c\u8ba9\u3002 \u6210\u5458\u51fd\u6570 reset() \u7684\u529f\u80fd\u662f\u91cd\u7f6e scoped_ptr \uff1a\u5b83\u5220\u9664\u539f\u6765\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u518d\u4fdd\u5b58\u65b0\u7684\u6307\u9488\u503c p \u3002\u5982\u679c p \u662f\u7a7a\u6307\u9488\uff0c\u90a3\u4e48 scoped_ptr \u5c06\u4e0d\u6301\u6709\u4efb\u4f55\u6307\u9488\u3002\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c reset() \u4e0d\u5e94\u8be5\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u5b83\u8fdd\u80cc\u4e86 scoped_ptr \u7684\u672c\u610f\u2014\u2014\u8d44\u6e90\u5e94\u8be5\u4e00\u76f4\u7531 scoped_ptr \u81ea\u52a8\u7ba1\u7406\u3002 scoped_ptr \u7528 operator*() \u548c operator->() \u91cd\u8f7d\u4e86\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26 * \u548c\u7bad\u5934\u64cd\u4f5c\u7b26 -> \uff0c\u4ee5\u6a21\u4eff\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u6307\u9488\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5982\u540c\u4f7f\u7528\u6307\u9488\u4e00\u6837\u4f7f\u7528 scoped_ptr \u5bf9\u8c61\u3002\u5982\u679c scoped_ptr \u4fdd\u5b58\u7684\u662f\u7a7a\u6307\u9488\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7684\u884c\u4e3a\u672a\u5b9a\u4e49\u3002 scoped_ptr \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728 bool \u8bed\u53e5\uff08\u5982 if \u6761\u4ef6\u8868\u8fbe\u5f0f\uff09\u4e2d\u81ea\u52a8\u8f6c\u6362\u6210 bool \u503c\u7684\u529f\u80fd\uff0c\u7528\u6765\u6d4b\u8bd5 scoped_ptr \u662f\u5426\u6301\u6709\u4e00\u4e2a\u6709\u6548\u7684\u6307\u9488\uff08\u975e\u7a7a\uff09\u3002\u5b83\u53ef\u4ee5\u4ee3\u66ff\u4e0e\u7a7a\u6307\u9488\u7684\u6bd4\u8f83\u64cd\u4f5c\uff0c\u800c\u4e14\u5176\u5199\u6cd5\u66f4\u7b80\u5355\u3002 \u6210\u5458\u51fd\u6570 swap() \u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a scoped_ptr \u4fdd\u5b58\u7684\u539f\u59cb\u6307\u9488\uff0c\u6b64\u64cd\u4f5c\u5f88\u9ad8\u6548\uff0c\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0 reset() \u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u88ab std::swap() \u4f7f\u7528\u3002 \u6210\u5458\u51fd\u6570 get() \u8fd4\u56de scoped_ptr \u5185\u90e8\u4fdd\u5b58\u7684\u539f\u59cb\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u5728\u67d0\u4e9b\u8981\u6c42\u5fc5\u987b\u662f\u539f\u59cb\u6307\u9488\u7684\u573a\u666f\uff08\u5982\u5e95\u5c42\u7684 C \u63a5\u53e3\uff09\u3002\u4f46\u5728\u4f7f\u7528\u51fd\u6570 get() \u65f6\u5fc5\u987b\u5c0f\u5fc3\uff0c\u8fd9\u5c06\u4f7f\u539f\u59cb\u6307\u9488\u8131\u79bb scoped_ptr \u7684\u63a7\u5236\uff0c\u4e0d\u80fd\u5bf9\u8fd9\u4e2a\u6307\u9488\u8fdb\u884c delete \u64cd\u4f5c\uff0c\u5426\u5219\u5728 scoped_ptr \u6790\u6784\u65f6\u4f1a\u5bf9\u5df2\u7ecf\u5220\u9664\u7684\u6307\u9488\u518d\u6b21\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u53d1\u751f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 scoped_ptr \u652f\u6301\u6709\u9650\u7684\u6bd4\u8f83\u64cd\u4f5c\uff0c\u4e0d\u80fd\u518d\u4e24\u4e2a scoped_ptr \u4e4b\u95f4\u8fdb\u884c\u76f8\u7b49\u6216\u4e0d\u7b49\u6d4b\u8bd5\uff0c\u9ed8\u8ba4\u5b83\u4ec5\u652f\u6301\u4e0e nullptr \u8fdb\u884c\u6bd4\u8f83\uff08\u4e5f\u53ef\u4ee5\u662f NULL \u6216 0 \uff0c\u56e0\u4e3a\u8fd9\u4e24\u8005\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a nullptr \uff09\u3002 \u7528\u6cd5 scoped_ptr \u7684\u7528\u6cd5\u5f88\u7b80\u5355\uff1a\u5728\u539f\u672c\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u63a5\u6536 new \u8868\u8fbe\u5f0f\u7ed3\u679c\u7684\u5730\u65b9\u6539\u6210\u7528 scoped_ptr \u5bf9\u8c61\u63a5\u6536 new \u8868\u8fbe\u5f0f\u7ed3\u679c\uff0c\u7136\u540e\u53bb\u6389\u591a\u4f59\u7684 try / catch \u548c delete \u64cd\u4f5c\u5373\u53ef\u3002\u4f8b\u5982\uff1a scoped_ptr < std :: string > sp ( new std :: string ( \"text\" )); std :: cout << * sp << std :: endl ; std :: cout << sp -> size () << std :: endl ; \u5982\u679c\u4ee3\u7801\u7f16\u5199\u8005\u4f01\u56fe\u4ece\u4e00\u4e2a scoped_ptr \u6784\u9020\u6216\u8d4b\u503c\u53e6\u4e00\u4e2a scoped_ptr \uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u963b\u6b62\u4ed6\u8fd9\u4e48\u505a\uff0c\u4ece\u800c\u4fdd\u62a4\u4e86\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u800c\u4e14\u8fd9\u4e00\u884c\u4e3a\u53d1\u751f\u5728\u8fd0\u884c\u4ee3\u7801\u4e4b\u524d\u3002 scoped_ptr \u660e\u786e\u5730\u8868\u660e\u4e86\u4ee3\u7801\u539f\u59cb\u7f16\u5199\u8005\u7684\u610f\u56fe\uff1a\u53ea\u80fd\u5728\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u5185\u4f7f\u7528\uff0c\u4e0d\u53ef\u8f6c\u8ba9\uff0c\u8fd9\u5728\u4ee3\u7801\u540e\u7eed\u7684\u7ef4\u62a4\u751f\u547d\u5468\u671f\u4e2d\u5f88\u91cd\u8981\u3002 \u7531\u6b64\u4e5f\u5f15\u51fa\u4e86\u53e6\u5916\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u4e00\u4e2a\u7c7b\u6301\u6709 scoped_ptr \u6210\u5458\u53d8\u91cf\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u662f\u4e0d\u53ef\u62f7\u8d1d\u548c\u8d4b\u503c\u7684\u3002\u4f8b\u5982\uff1a class ptr_owned final //\u4e00\u4e2a\u6301\u6709scoped_ptr\u6210\u5458\u53d8\u91cf\u7684\u7c7b { scoped_ptr < int > m_ptr ; //scoped_ptr\u6210\u5458 }; ptr_owned p ; //\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b ptr_owned p2 ( p ); //\u7f16\u8bd1\u9519\u8bef\uff0c\u4e0d\u80fd\u62f7\u8d1d\u6784\u9020 \u9664 * \u3001 -> \u4e4b\u5916\uff0c scoped_ptr \u6ca1\u6709\u5b9a\u4e49\u5176\u4ed6\u64cd\u4f5c\u7b26\uff0c\u6240\u4ee5\u4e0d\u80fd\u5bf9 scoped_ptr \u8fdb\u884c ++ \u3001 -- \u7b49\u6307\u9488\u7b97\u6570\u64cd\u4f5c\u3002\u4e0e\u666e\u901a\u6307\u9488\u76f8\u6bd4\uff0c\u5b83\u53ea\u6709\u5f88\u5c0f\u7684\u63a5\u53e3\uff0c\u8fd9\u4e00\u70b9\u4f7f\u5f97\u4f7f\u7528\u6307\u9488\u66f4\u52a0\u5b89\u5168\u3001\u66f4\u5bb9\u6613\u4e14\u4e0d\u5bb9\u6613\u88ab\u8bef\u7528\u3002 \u4f7f\u7528 scoped_ptr \u4f1a\u5e26\u6765\u4e24\u4e2a\u597d\u5904\uff1a\u4e00\u662f\u4f7f\u4ee3\u7801\u53d8\u5f97\u6e05\u6670\u7b80\u5355\uff0c\u800c\u7b80\u5355\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef\uff1b\u4e8c\u662f\u5b83\u5e76\u6ca1\u6709\u589e\u52a0\u591a\u4f59\u7684\u64cd\u4f5c\uff0c\u5b89\u5168\u7684\u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387\uff0c\u53ef\u4ee5\u83b7\u5f97\u4e0e\u539f\u59cb\u6307\u9488\u540c\u6837\u7684\u901f\u5ea6\u3002 \u5bf9\u6bd4\u6807\u51c6 unique_ptr \u662f\u5728 C++ \u6807\u51c6\u4e2d\u5b9a\u4e49\u7684\u65b0\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u53d6\u4ee3\u66fe\u7ecf\u7684 auto_ptr \u3002\u6839\u636e C++ \u6807\u51c6\u5b9a\u4e49\uff0c unique_ptr \u4e0d\u4ec5\u80fd\u591f\u4ee3\u7406 new \u521b\u5efa\u7684\u5355\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u80fd\u591f\u4ee3\u7406 new[] \u521b\u5efa\u7684\u6570\u7ec4\u5bf9\u8c61\u3002 unique_ptr unique_ptr \u7684\u57fa\u672c\u80fd\u529b\u548c scoped_ptr \u76f8\u540c\uff0c\u540c\u6837\u53ef\u4ee5\u5728\u4f5c\u7528\u57df\u5185\u7ba1\u7406\u6307\u9488\uff0c\u4e5f\u4e0d\u5141\u8bb8\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\uff08\u4f46\u652f\u6301\u8f6c\u79fb\u8bed\u4e49\uff09\u3002 \u4f46 unique_ptr \u8981\u6bd4 scoped_ptr \u6709\u66f4\u591a\u7684\u529f\u80fd\uff1a unique_ptr \u53ef\u4ee5\u50cf\u539f\u59cb\u6307\u9488\u4e00\u6837\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u50cf shared_ptr \u4e00\u6837\u5b9a\u5236\u5220\u9664\u5668\uff0c\u4e5f\u53ef\u4ee5\u5b89\u5168\u5730\u653e\u5165\u6807\u51c6\u5bb9\u5668\u3002\u56e0\u6b64\uff0c \u5982\u679c\u7f16\u8bd1\u5668\u652f\u6301 C++11 \u6807\u51c6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6beb\u4e0d\u72b9\u8c6b\u5730\u4f7f\u7528 unique_ptr \u6765\u4ee3\u66ff scoped_ptr \u3002 make_unique C++11 \u6807\u51c6\u867d\u7136\u5b9a\u4e49\u4e86 unique_ptr \uff0c\u4f46\u5374\u201c\u9057\u5fd8\u201d\u4e86\u5bf9\u5e94\u7684\u5de5\u5382\u51fd\u6570 make_unique() \uff08C++14 \u6807\u51c6\u8865\u4e0a\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\uff09\uff0c\u4e8e\u662fboost . smart_ptr \u5e93\u7279\u610f\u5728\u5934\u6587\u4ef6 <boost/smart_ptr/make_unique.hpp> \u91cc\u5b9e\u73b0\u4e86 make_unique() \u51fd\u6570\u3002 \u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a\u5176\u4e00\uff0c\u5b83\u4e0d\u542b\u5728\u5934\u6587\u4ef6 <boost/smart_ptr.hpp> \u91cc\uff0c\u5fc5\u987b\u5355\u72ec\u5305\u542b\uff1b\u5176\u4e8c\uff0c\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \u800c\u4e0d\u662f std \uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u6f5c\u5728\u7684\u51b2\u7a81\u3002 #include <boost/smart_ptr/make_unique.hpp> using namespace boost ; auto p = boost :: make_unique < int > ( 10 ); scoped_ptr \u4e0d\u9700\u8981\u4e5f\u4e0d\u53ef\u80fd\u6709 make_scoped() \u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u62f7\u8d1d\u4e5f\u4e0d\u80fd\u8f6c\u79fb\u3002","title":"02. scoped ptr"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/#_1","text":"scoped_ptr \u7684\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u7c7b\u578b\u4e3a T* \u7684\u6307\u9488 p \uff0c\u521b\u5efa\u51fa\u4e00\u4e2a scoped_ptr \u5bf9\u8c61\uff0c\u5e76\u5728\u5185\u90e8\u4fdd\u8bc1\u6307\u9488 p \u3002 p \u5fc5\u987b\u662f\u4e00\u4e2a new \u8868\u8fbe\u5f0f\u52a8\u6001\u5206\u914d\u7684\u7ed3\u679c\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff08 nullptr \uff09\u3002\u5f53 scoped_ptr \u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u4f7f\u7528 delete \u64cd\u4f5c\u7b26\u81ea\u52a8\u9500\u6bc1\u6240\u4fdd\u5b58\u7684\u6307\u9488\u5bf9\u8c61\uff0c\u4ece\u800c\u6b63\u786e\u5730\u56de\u6536\u8d44\u6e90\u3002 scoped_ptr \u540c\u65f6\u628a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\u90fd\u58f0\u660e\u4e3a\u79c1\u6709\u7684\uff0c\u7981\u6b62\u5bf9\u667a\u80fd\u6307\u9488\u8fdb\u884c\u62f7\u8d1d\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u4e86\u88ab\u5b83\u7ba1\u7406\u7684\u6307\u9488\u7684\u6240\u6709\u6743\u4e0d\u80fd\u88ab\u8f6c\u8ba9\u3002 \u6210\u5458\u51fd\u6570 reset() \u7684\u529f\u80fd\u662f\u91cd\u7f6e scoped_ptr \uff1a\u5b83\u5220\u9664\u539f\u6765\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u518d\u4fdd\u5b58\u65b0\u7684\u6307\u9488\u503c p \u3002\u5982\u679c p \u662f\u7a7a\u6307\u9488\uff0c\u90a3\u4e48 scoped_ptr \u5c06\u4e0d\u6301\u6709\u4efb\u4f55\u6307\u9488\u3002\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c reset() \u4e0d\u5e94\u8be5\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u5b83\u8fdd\u80cc\u4e86 scoped_ptr \u7684\u672c\u610f\u2014\u2014\u8d44\u6e90\u5e94\u8be5\u4e00\u76f4\u7531 scoped_ptr \u81ea\u52a8\u7ba1\u7406\u3002 scoped_ptr \u7528 operator*() \u548c operator->() \u91cd\u8f7d\u4e86\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26 * \u548c\u7bad\u5934\u64cd\u4f5c\u7b26 -> \uff0c\u4ee5\u6a21\u4eff\u88ab\u4ee3\u7406\u7684\u539f\u59cb\u6307\u9488\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5982\u540c\u4f7f\u7528\u6307\u9488\u4e00\u6837\u4f7f\u7528 scoped_ptr \u5bf9\u8c61\u3002\u5982\u679c scoped_ptr \u4fdd\u5b58\u7684\u662f\u7a7a\u6307\u9488\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7684\u884c\u4e3a\u672a\u5b9a\u4e49\u3002 scoped_ptr \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5728 bool \u8bed\u53e5\uff08\u5982 if \u6761\u4ef6\u8868\u8fbe\u5f0f\uff09\u4e2d\u81ea\u52a8\u8f6c\u6362\u6210 bool \u503c\u7684\u529f\u80fd\uff0c\u7528\u6765\u6d4b\u8bd5 scoped_ptr \u662f\u5426\u6301\u6709\u4e00\u4e2a\u6709\u6548\u7684\u6307\u9488\uff08\u975e\u7a7a\uff09\u3002\u5b83\u53ef\u4ee5\u4ee3\u66ff\u4e0e\u7a7a\u6307\u9488\u7684\u6bd4\u8f83\u64cd\u4f5c\uff0c\u800c\u4e14\u5176\u5199\u6cd5\u66f4\u7b80\u5355\u3002 \u6210\u5458\u51fd\u6570 swap() \u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a scoped_ptr \u4fdd\u5b58\u7684\u539f\u59cb\u6307\u9488\uff0c\u6b64\u64cd\u4f5c\u5f88\u9ad8\u6548\uff0c\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0 reset() \u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u88ab std::swap() \u4f7f\u7528\u3002 \u6210\u5458\u51fd\u6570 get() \u8fd4\u56de scoped_ptr \u5185\u90e8\u4fdd\u5b58\u7684\u539f\u59cb\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u5728\u67d0\u4e9b\u8981\u6c42\u5fc5\u987b\u662f\u539f\u59cb\u6307\u9488\u7684\u573a\u666f\uff08\u5982\u5e95\u5c42\u7684 C \u63a5\u53e3\uff09\u3002\u4f46\u5728\u4f7f\u7528\u51fd\u6570 get() \u65f6\u5fc5\u987b\u5c0f\u5fc3\uff0c\u8fd9\u5c06\u4f7f\u539f\u59cb\u6307\u9488\u8131\u79bb scoped_ptr \u7684\u63a7\u5236\uff0c\u4e0d\u80fd\u5bf9\u8fd9\u4e2a\u6307\u9488\u8fdb\u884c delete \u64cd\u4f5c\uff0c\u5426\u5219\u5728 scoped_ptr \u6790\u6784\u65f6\u4f1a\u5bf9\u5df2\u7ecf\u5220\u9664\u7684\u6307\u9488\u518d\u6b21\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u53d1\u751f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 scoped_ptr \u652f\u6301\u6709\u9650\u7684\u6bd4\u8f83\u64cd\u4f5c\uff0c\u4e0d\u80fd\u518d\u4e24\u4e2a scoped_ptr \u4e4b\u95f4\u8fdb\u884c\u76f8\u7b49\u6216\u4e0d\u7b49\u6d4b\u8bd5\uff0c\u9ed8\u8ba4\u5b83\u4ec5\u652f\u6301\u4e0e nullptr \u8fdb\u884c\u6bd4\u8f83\uff08\u4e5f\u53ef\u4ee5\u662f NULL \u6216 0 \uff0c\u56e0\u4e3a\u8fd9\u4e24\u8005\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a nullptr \uff09\u3002","title":"\u64cd\u4f5c\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/#_2","text":"scoped_ptr \u7684\u7528\u6cd5\u5f88\u7b80\u5355\uff1a\u5728\u539f\u672c\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u63a5\u6536 new \u8868\u8fbe\u5f0f\u7ed3\u679c\u7684\u5730\u65b9\u6539\u6210\u7528 scoped_ptr \u5bf9\u8c61\u63a5\u6536 new \u8868\u8fbe\u5f0f\u7ed3\u679c\uff0c\u7136\u540e\u53bb\u6389\u591a\u4f59\u7684 try / catch \u548c delete \u64cd\u4f5c\u5373\u53ef\u3002\u4f8b\u5982\uff1a scoped_ptr < std :: string > sp ( new std :: string ( \"text\" )); std :: cout << * sp << std :: endl ; std :: cout << sp -> size () << std :: endl ; \u5982\u679c\u4ee3\u7801\u7f16\u5199\u8005\u4f01\u56fe\u4ece\u4e00\u4e2a scoped_ptr \u6784\u9020\u6216\u8d4b\u503c\u53e6\u4e00\u4e2a scoped_ptr \uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u963b\u6b62\u4ed6\u8fd9\u4e48\u505a\uff0c\u4ece\u800c\u4fdd\u62a4\u4e86\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u800c\u4e14\u8fd9\u4e00\u884c\u4e3a\u53d1\u751f\u5728\u8fd0\u884c\u4ee3\u7801\u4e4b\u524d\u3002 scoped_ptr \u660e\u786e\u5730\u8868\u660e\u4e86\u4ee3\u7801\u539f\u59cb\u7f16\u5199\u8005\u7684\u610f\u56fe\uff1a\u53ea\u80fd\u5728\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u5185\u4f7f\u7528\uff0c\u4e0d\u53ef\u8f6c\u8ba9\uff0c\u8fd9\u5728\u4ee3\u7801\u540e\u7eed\u7684\u7ef4\u62a4\u751f\u547d\u5468\u671f\u4e2d\u5f88\u91cd\u8981\u3002 \u7531\u6b64\u4e5f\u5f15\u51fa\u4e86\u53e6\u5916\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5982\u679c\u4e00\u4e2a\u7c7b\u6301\u6709 scoped_ptr \u6210\u5458\u53d8\u91cf\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u662f\u4e0d\u53ef\u62f7\u8d1d\u548c\u8d4b\u503c\u7684\u3002\u4f8b\u5982\uff1a class ptr_owned final //\u4e00\u4e2a\u6301\u6709scoped_ptr\u6210\u5458\u53d8\u91cf\u7684\u7c7b { scoped_ptr < int > m_ptr ; //scoped_ptr\u6210\u5458 }; ptr_owned p ; //\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b ptr_owned p2 ( p ); //\u7f16\u8bd1\u9519\u8bef\uff0c\u4e0d\u80fd\u62f7\u8d1d\u6784\u9020 \u9664 * \u3001 -> \u4e4b\u5916\uff0c scoped_ptr \u6ca1\u6709\u5b9a\u4e49\u5176\u4ed6\u64cd\u4f5c\u7b26\uff0c\u6240\u4ee5\u4e0d\u80fd\u5bf9 scoped_ptr \u8fdb\u884c ++ \u3001 -- \u7b49\u6307\u9488\u7b97\u6570\u64cd\u4f5c\u3002\u4e0e\u666e\u901a\u6307\u9488\u76f8\u6bd4\uff0c\u5b83\u53ea\u6709\u5f88\u5c0f\u7684\u63a5\u53e3\uff0c\u8fd9\u4e00\u70b9\u4f7f\u5f97\u4f7f\u7528\u6307\u9488\u66f4\u52a0\u5b89\u5168\u3001\u66f4\u5bb9\u6613\u4e14\u4e0d\u5bb9\u6613\u88ab\u8bef\u7528\u3002 \u4f7f\u7528 scoped_ptr \u4f1a\u5e26\u6765\u4e24\u4e2a\u597d\u5904\uff1a\u4e00\u662f\u4f7f\u4ee3\u7801\u53d8\u5f97\u6e05\u6670\u7b80\u5355\uff0c\u800c\u7b80\u5355\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef\uff1b\u4e8c\u662f\u5b83\u5e76\u6ca1\u6709\u589e\u52a0\u591a\u4f59\u7684\u64cd\u4f5c\uff0c\u5b89\u5168\u7684\u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387\uff0c\u53ef\u4ee5\u83b7\u5f97\u4e0e\u539f\u59cb\u6307\u9488\u540c\u6837\u7684\u901f\u5ea6\u3002","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/#_3","text":"unique_ptr \u662f\u5728 C++ \u6807\u51c6\u4e2d\u5b9a\u4e49\u7684\u65b0\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u53d6\u4ee3\u66fe\u7ecf\u7684 auto_ptr \u3002\u6839\u636e C++ \u6807\u51c6\u5b9a\u4e49\uff0c unique_ptr \u4e0d\u4ec5\u80fd\u591f\u4ee3\u7406 new \u521b\u5efa\u7684\u5355\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u80fd\u591f\u4ee3\u7406 new[] \u521b\u5efa\u7684\u6570\u7ec4\u5bf9\u8c61\u3002","title":"\u5bf9\u6bd4\u6807\u51c6"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/#unique_ptr","text":"unique_ptr \u7684\u57fa\u672c\u80fd\u529b\u548c scoped_ptr \u76f8\u540c\uff0c\u540c\u6837\u53ef\u4ee5\u5728\u4f5c\u7528\u57df\u5185\u7ba1\u7406\u6307\u9488\uff0c\u4e5f\u4e0d\u5141\u8bb8\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\uff08\u4f46\u652f\u6301\u8f6c\u79fb\u8bed\u4e49\uff09\u3002 \u4f46 unique_ptr \u8981\u6bd4 scoped_ptr \u6709\u66f4\u591a\u7684\u529f\u80fd\uff1a unique_ptr \u53ef\u4ee5\u50cf\u539f\u59cb\u6307\u9488\u4e00\u6837\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u50cf shared_ptr \u4e00\u6837\u5b9a\u5236\u5220\u9664\u5668\uff0c\u4e5f\u53ef\u4ee5\u5b89\u5168\u5730\u653e\u5165\u6807\u51c6\u5bb9\u5668\u3002\u56e0\u6b64\uff0c \u5982\u679c\u7f16\u8bd1\u5668\u652f\u6301 C++11 \u6807\u51c6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6beb\u4e0d\u72b9\u8c6b\u5730\u4f7f\u7528 unique_ptr \u6765\u4ee3\u66ff scoped_ptr \u3002","title":"unique_ptr"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/02.%20scoped_ptr/#make_unique","text":"C++11 \u6807\u51c6\u867d\u7136\u5b9a\u4e49\u4e86 unique_ptr \uff0c\u4f46\u5374\u201c\u9057\u5fd8\u201d\u4e86\u5bf9\u5e94\u7684\u5de5\u5382\u51fd\u6570 make_unique() \uff08C++14 \u6807\u51c6\u8865\u4e0a\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\uff09\uff0c\u4e8e\u662fboost . smart_ptr \u5e93\u7279\u610f\u5728\u5934\u6587\u4ef6 <boost/smart_ptr/make_unique.hpp> \u91cc\u5b9e\u73b0\u4e86 make_unique() \u51fd\u6570\u3002 \u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a\u5176\u4e00\uff0c\u5b83\u4e0d\u542b\u5728\u5934\u6587\u4ef6 <boost/smart_ptr.hpp> \u91cc\uff0c\u5fc5\u987b\u5355\u72ec\u5305\u542b\uff1b\u5176\u4e8c\uff0c\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \u800c\u4e0d\u662f std \uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u6f5c\u5728\u7684\u51b2\u7a81\u3002 #include <boost/smart_ptr/make_unique.hpp> using namespace boost ; auto p = boost :: make_unique < int > ( 10 ); scoped_ptr \u4e0d\u9700\u8981\u4e5f\u4e0d\u53ef\u80fd\u6709 make_scoped() \u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u62f7\u8d1d\u4e5f\u4e0d\u80fd\u8f6c\u79fb\u3002","title":"make_unique"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/03.%20shared_ptr/","text":"shared_ptr \u662f\u4e00\u4e2a\u6700\u50cf\u6307\u9488\u7684\u201c\u667a\u80fd\u6307\u9488\u201d\uff0c\u5b83\u662f boost . smart_ptr \u5e93\u4e2d\u6700\u6709\u4ef7\u503c\u3001\u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0cBoost \u5e93\u7684\u8bb8\u591a\u7ec4\u4ef6\uff08\u751a\u81f3\u8fd8\u5305\u62ec\u4e00\u4e9b\u5176\u4ed6\u9886\u57df\u7684\u667a\u80fd\u6307\u9488\uff09\u90fd\u4f7f\u7528\u4e86 shared_ptr \uff0c\u6240\u4ee5\u5b83\u88ab\u6beb\u65e0\u60ac\u5ff5\u5730\u6536\u5165 C++11 \u6807\u51c6\u3002 shared_ptr \u4e0e scoped_ptr \u4e00\u6837\u5305\u88c5\u4e86 new \u64cd\u4f5c\u7b26\u5728\u5806\u4e0a\u5206\u914d\u7684\u52a8\u6001\u5bf9\u8c61\uff0c\u4f46\u5b83\u5b9e\u73b0\u7684\u662f\u5f15\u7528\u8ba1\u6570\u578b\u7684\u667a\u80fd\u6307\u9488\uff0c\u53ef\u4ee5\u88ab\u81ea\u7531\u5730\u62f7\u8d1d\u548c\u8d4b\u503c\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u7684\u5730\u65b9\u5171\u4eab\u5b83\uff0c\u5f53\u6ca1\u6709\u4ee3\u7801\u4f7f\u7528\u5b83\u65f6\uff08\u5f15\u7528\u8ba1\u6570\u4e3a 0 \uff09\uff0c\u624d\u5220\u9664\u88ab\u5305\u88c5\u7684\u52a8\u6001\u5206\u914d\u5bf9\u8c61\u3002 shared_ptr \u4e5f\u53ef\u4ee5\u5b89\u5168\u5730\u653e\u5230\u6807\u51c6\u5bb9\u5668\u4e2d\uff0c\u8fd9\u662f\u5728 STL \u5bb9\u5668\u4e2d\u5b58\u50a8\u6307\u9488\u7684\u6700\u6807\u51c6\u7684\u89e3\u6cd5\u3002 \u64cd\u4f5c\u51fd\u6570 shared_ptr \u4e0e scoped_ptr \u540c\u6837\u662f\u7528\u4e8e\u7ba1\u7406 new \u52a8\u6001\u5206\u914d\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\uff0c\u56e0\u6b64\u5176\u529f\u80fd\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff1a\u5b83\u4eec\u90fd\u91cd\u8f7d\u4e86 * \u3001 -> \u64cd\u4f5c\u7b26\u4ee5\u6a21\u4eff\u539f\u59cb\u6307\u9488\u7684\u884c\u4e3a\uff0c\u63d0\u4f9b\u663e\u5f0f bool \u503c\u8f6c\u6362\u4ee5\u5224\u65ad\u6307\u9488\u7684\u6709\u6548\u6027\uff0c get() \u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u539f\u59cb\u6307\u9488\uff0c\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u6307\u9488\u7b97\u6570\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u7ba1\u7406 new[] \u4ea7\u751f\u7684\u52a8\u6001\u6570\u7ec4\u6307\u9488\u3002 \u4f46 shared_ptr \u7684\u540d\u5b57\u8868\u660e\u4e86\u5b83\u4e0e scoped_ptr \u7684\u4e3b\u8981\u4e0d\u540c\u4e4b\u5904\uff1a\u5b83\u662f\u53ef\u4ee5\u88ab\u5b89\u5168\u5171\u4eab\u7684\u3002 shared_ptr \u662f\u4e00\u4e2a\u201c\u5168\u529f\u80fd\u201d\u7684\u7c7b\uff0c\u6709\u7740\u6b63\u5e38\u7684\u62f7\u8d1d\u3001\u8d4b\u503c\u8bed\u4e49\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c shared_ptr \u95f4\u7684\u6bd4\u8f83\uff0c\u662f\u201c\u6700\u667a\u80fd\u201d\u7684\u667a\u80fd\u6307\u9488\u3002 shared_ptr \u6709\u591a\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u53ef\u80fd\u7684\u60c5\u5f62\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a - \u65e0\u53c2\u7684 shared_ptr() \uff1a\u521b\u5efa\u4e00\u4e2a\u6301\u6709\u7a7a\u6307\u9488\u7684 shared_ptr \u3002 - shared_ptr(Y * p) \uff1a\u83b7\u5f97\u6307\u5411\u7c7b\u578b T \u7684\u6307\u9488 p \u7684\u7ba1\u7406\u6743\uff0c\u540c\u65f6\u5c06\u5f15\u7528\u8ba1\u6570\u7f6e\u4e3a 1\uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8981\u6c42 Y \u7c7b\u578b\u5fc5\u987b\u80fd\u591f\u8f6c\u6362\u4e3a T \u7c7b\u578b\u3002 - shared_ptr(shared_ptr const & r) \uff1a\u4ece\u53e6\u5916\u4e00\u4e2a shared_ptr \u83b7\u5f97\u6307\u9488\u7684\u7ba1\u7406\u6743\uff0c\u540c\u65f6\u5f15\u7528\u8ba1\u6570\u52a0 1\uff0c\u7ed3\u679c\u662f\u4e24\u4e2a shared_ptr \u5171\u4eab\u4e00\u4e2a\u6307\u9488\u7684\u7ba1\u7406\u6743\u3002 - operator= \uff1a\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u4ece\u53e6\u5916\u4e00\u4e2a shared_ptr \u83b7\u5f97\u6307\u9488\u7684\u7ba1\u7406\u6743\uff0c\u5176\u884c\u4e3a\u540c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 - shared_ptr(Y * p, D d) \uff1a\u5176\u884c\u4e3a\u7c7b\u4f3c shared_ptr(Y * p) \uff0c\u4f46\u5b83\u4f7f\u7528\u53c2\u6570d\u6307\u5b9a\u4e86\u6790\u6784\u65f6\u7684\u5b9a\u5236\u5220\u9664\u5668\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684 delete \u3002 - aliasing \uff1a\u522b\u540d\u6784\u9020\u51fd\u6570\u662f\u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u7684\u7279\u6b8a\u7528\u6cd5\u3002 shared_ptr \u7684 reset() \u51fd\u6570\u7684\u884c\u4e3a\u4e0e scoped_ptr \u4e0d\u5c3d\u76f8\u540c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u5f15\u7528\u8ba1\u6570\u51cf 1\uff0c\u505c\u6b62\u5bf9\u6307\u9488\u7684\u5171\u4eab\uff0c\u9664\u975e\u5f15\u7528\u8ba1\u6570\u4e3a 0\uff0c\u5426\u5219\u4e0d\u4f1a\u53d1\u751f\u5220\u9664\u64cd\u4f5c\u3002\u5e26\u53c2\u6570\u7684 reset() \u51fd\u6570\u7c7b\u4f3c\u76f8\u540c\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff0c\u5728\u539f\u6307\u9488\u5f15\u7528\u8ba1\u6570\u51cf 1 \u7684\u540c\u65f6\u6539\u4e3a\u7ba1\u7406\u53e6\u4e00\u4e2a\u6307\u9488\u3002 shared_ptr \u6709\u4e24\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\u7528\u6765\u68c0\u67e5\u5f15\u7528\u8ba1\u6570\uff1a unique() \u5728 shared_ptr \u662f\u6307\u9488\u7684\u552f\u4e00\u6240\u6709\u8005\u65f6\u8fd4\u56de true \uff08\u8fd9\u65f6 shared_ptr \u7684\u884c\u4e3a\u7c7b\u4f3c scoped_ptr \u6216 unique_ptr \uff09\uff1b use_count() \u8fd4\u56de\u5f53\u524d\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u3002\u8981\u5c0f\u5fc3\uff0c use_count() \u5e94\u8be5\u4ec5\u4ec5\u7528\u4e8e\u6d4b\u8bd5\u6216\u8c03\u8bd5\uff0c\u5b83\u4e0d\u63d0\u4f9b\u9ad8\u6548\u7387\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u6709\u7684\u65f6\u5019\u5b83\u662f\u4e0d\u53ef\u7528\u7684\uff08\u6781\u5c11\u6570\u60c5\u5f62\uff09\u3002\u800c unique() \u662f\u53ef\u9760\u7684\uff0c\u4efb\u4f55\u65f6\u5019\u5b83\u90fd\u53ef\u7528\uff0c\u800c\u4e14\u5b83\u6bd4 use_count() == 1 \u7684\u901f\u5ea6\u66f4\u5feb\u3002 shared_ptr \u8fd8\u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u4e24\u4e2a shared_ptr \u76f8\u7b49\u4e0e\u5426\uff0c\u6bd4\u8f83\u57fa\u4e8e\u5185\u90e8\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u76f8\u5f53\u4e8e a.get() == b.get() \u3002 shared_ptr() \u8fd8\u53ef\u4ee5\u4f7f\u7528 operator< \u6bd4\u8f83\u5927\u5c0f\uff0c\u4f46\u4e0d\u63d0\u4f9b\u9664 operator< \u4ee5\u5916\u7684\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4f7f\u5f97 shared_ptr \u53ef\u4ee5\u88ab\u7528\u4e8e\u6807\u51c6\u7ba1\u7406\u5bb9\u5668\uff08 set \u548c map \uff09\u3002 \u6b64\u5916\uff0c shared_ptr \u8fd8\u652f\u6301\u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26 operator<< \uff0c\u8f93\u51fa\u5185\u90e8\u7684\u6307\u9488\u503c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002 \u5bf9\u6bd4 std::shared_ptr C++11 \u6807\u51c6\u4e2d\u5b9a\u4e49\u4e86 std::shared_ptr \uff0c\u529f\u80fd\u4e0e boost::shared_ptr \u57fa\u672c\u76f8\u540c\uff0c\u5b8c\u5168\u53ef\u4ee5\u7b49\u4ef7\u4e92\u6362\u3002","title":"03. shared ptr"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/03.%20shared_ptr/#_1","text":"shared_ptr \u4e0e scoped_ptr \u540c\u6837\u662f\u7528\u4e8e\u7ba1\u7406 new \u52a8\u6001\u5206\u914d\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\uff0c\u56e0\u6b64\u5176\u529f\u80fd\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff1a\u5b83\u4eec\u90fd\u91cd\u8f7d\u4e86 * \u3001 -> \u64cd\u4f5c\u7b26\u4ee5\u6a21\u4eff\u539f\u59cb\u6307\u9488\u7684\u884c\u4e3a\uff0c\u63d0\u4f9b\u663e\u5f0f bool \u503c\u8f6c\u6362\u4ee5\u5224\u65ad\u6307\u9488\u7684\u6709\u6548\u6027\uff0c get() \u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u539f\u59cb\u6307\u9488\uff0c\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u6307\u9488\u7b97\u6570\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u7ba1\u7406 new[] \u4ea7\u751f\u7684\u52a8\u6001\u6570\u7ec4\u6307\u9488\u3002 \u4f46 shared_ptr \u7684\u540d\u5b57\u8868\u660e\u4e86\u5b83\u4e0e scoped_ptr \u7684\u4e3b\u8981\u4e0d\u540c\u4e4b\u5904\uff1a\u5b83\u662f\u53ef\u4ee5\u88ab\u5b89\u5168\u5171\u4eab\u7684\u3002 shared_ptr \u662f\u4e00\u4e2a\u201c\u5168\u529f\u80fd\u201d\u7684\u7c7b\uff0c\u6709\u7740\u6b63\u5e38\u7684\u62f7\u8d1d\u3001\u8d4b\u503c\u8bed\u4e49\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c shared_ptr \u95f4\u7684\u6bd4\u8f83\uff0c\u662f\u201c\u6700\u667a\u80fd\u201d\u7684\u667a\u80fd\u6307\u9488\u3002 shared_ptr \u6709\u591a\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u53ef\u80fd\u7684\u60c5\u5f62\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a - \u65e0\u53c2\u7684 shared_ptr() \uff1a\u521b\u5efa\u4e00\u4e2a\u6301\u6709\u7a7a\u6307\u9488\u7684 shared_ptr \u3002 - shared_ptr(Y * p) \uff1a\u83b7\u5f97\u6307\u5411\u7c7b\u578b T \u7684\u6307\u9488 p \u7684\u7ba1\u7406\u6743\uff0c\u540c\u65f6\u5c06\u5f15\u7528\u8ba1\u6570\u7f6e\u4e3a 1\uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8981\u6c42 Y \u7c7b\u578b\u5fc5\u987b\u80fd\u591f\u8f6c\u6362\u4e3a T \u7c7b\u578b\u3002 - shared_ptr(shared_ptr const & r) \uff1a\u4ece\u53e6\u5916\u4e00\u4e2a shared_ptr \u83b7\u5f97\u6307\u9488\u7684\u7ba1\u7406\u6743\uff0c\u540c\u65f6\u5f15\u7528\u8ba1\u6570\u52a0 1\uff0c\u7ed3\u679c\u662f\u4e24\u4e2a shared_ptr \u5171\u4eab\u4e00\u4e2a\u6307\u9488\u7684\u7ba1\u7406\u6743\u3002 - operator= \uff1a\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u4ece\u53e6\u5916\u4e00\u4e2a shared_ptr \u83b7\u5f97\u6307\u9488\u7684\u7ba1\u7406\u6743\uff0c\u5176\u884c\u4e3a\u540c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 - shared_ptr(Y * p, D d) \uff1a\u5176\u884c\u4e3a\u7c7b\u4f3c shared_ptr(Y * p) \uff0c\u4f46\u5b83\u4f7f\u7528\u53c2\u6570d\u6307\u5b9a\u4e86\u6790\u6784\u65f6\u7684\u5b9a\u5236\u5220\u9664\u5668\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684 delete \u3002 - aliasing \uff1a\u522b\u540d\u6784\u9020\u51fd\u6570\u662f\u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u7684\u7279\u6b8a\u7528\u6cd5\u3002 shared_ptr \u7684 reset() \u51fd\u6570\u7684\u884c\u4e3a\u4e0e scoped_ptr \u4e0d\u5c3d\u76f8\u540c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u5f15\u7528\u8ba1\u6570\u51cf 1\uff0c\u505c\u6b62\u5bf9\u6307\u9488\u7684\u5171\u4eab\uff0c\u9664\u975e\u5f15\u7528\u8ba1\u6570\u4e3a 0\uff0c\u5426\u5219\u4e0d\u4f1a\u53d1\u751f\u5220\u9664\u64cd\u4f5c\u3002\u5e26\u53c2\u6570\u7684 reset() \u51fd\u6570\u7c7b\u4f3c\u76f8\u540c\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff0c\u5728\u539f\u6307\u9488\u5f15\u7528\u8ba1\u6570\u51cf 1 \u7684\u540c\u65f6\u6539\u4e3a\u7ba1\u7406\u53e6\u4e00\u4e2a\u6307\u9488\u3002 shared_ptr \u6709\u4e24\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\u7528\u6765\u68c0\u67e5\u5f15\u7528\u8ba1\u6570\uff1a unique() \u5728 shared_ptr \u662f\u6307\u9488\u7684\u552f\u4e00\u6240\u6709\u8005\u65f6\u8fd4\u56de true \uff08\u8fd9\u65f6 shared_ptr \u7684\u884c\u4e3a\u7c7b\u4f3c scoped_ptr \u6216 unique_ptr \uff09\uff1b use_count() \u8fd4\u56de\u5f53\u524d\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u3002\u8981\u5c0f\u5fc3\uff0c use_count() \u5e94\u8be5\u4ec5\u4ec5\u7528\u4e8e\u6d4b\u8bd5\u6216\u8c03\u8bd5\uff0c\u5b83\u4e0d\u63d0\u4f9b\u9ad8\u6548\u7387\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u6709\u7684\u65f6\u5019\u5b83\u662f\u4e0d\u53ef\u7528\u7684\uff08\u6781\u5c11\u6570\u60c5\u5f62\uff09\u3002\u800c unique() \u662f\u53ef\u9760\u7684\uff0c\u4efb\u4f55\u65f6\u5019\u5b83\u90fd\u53ef\u7528\uff0c\u800c\u4e14\u5b83\u6bd4 use_count() == 1 \u7684\u901f\u5ea6\u66f4\u5feb\u3002 shared_ptr \u8fd8\u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u4e24\u4e2a shared_ptr \u76f8\u7b49\u4e0e\u5426\uff0c\u6bd4\u8f83\u57fa\u4e8e\u5185\u90e8\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u76f8\u5f53\u4e8e a.get() == b.get() \u3002 shared_ptr() \u8fd8\u53ef\u4ee5\u4f7f\u7528 operator< \u6bd4\u8f83\u5927\u5c0f\uff0c\u4f46\u4e0d\u63d0\u4f9b\u9664 operator< \u4ee5\u5916\u7684\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4f7f\u5f97 shared_ptr \u53ef\u4ee5\u88ab\u7528\u4e8e\u6807\u51c6\u7ba1\u7406\u5bb9\u5668\uff08 set \u548c map \uff09\u3002 \u6b64\u5916\uff0c shared_ptr \u8fd8\u652f\u6301\u6d41\u8f93\u51fa\u64cd\u4f5c\u7b26 operator<< \uff0c\u8f93\u51fa\u5185\u90e8\u7684\u6307\u9488\u503c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002","title":"\u64cd\u4f5c\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/03.%20shared_ptr/#stdshared_ptr","text":"C++11 \u6807\u51c6\u4e2d\u5b9a\u4e49\u4e86 std::shared_ptr \uff0c\u529f\u80fd\u4e0e boost::shared_ptr \u57fa\u672c\u76f8\u540c\uff0c\u5b8c\u5168\u53ef\u4ee5\u7b49\u4ef7\u4e92\u6362\u3002","title":"\u5bf9\u6bd4std::shared_ptr"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/04.%20weak_ptr/","text":"weak_ptr \u662f\u4e3a\u914d\u5408 shared_ptr \u800c\u5f15\u5165\u7684\u4e00\u79cd\u667a\u80fd\u6307\u9488\uff0c\u5b83\u66f4\u50cf\u662f shared_ptr \u7684\u4e00\u4e2a\u201c\u52a9\u624b\u201d\uff0c\u800c\u4e0d\u662f\u667a\u80fd\u6307\u9488\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5177\u6709\u666e\u901a\u6307\u9488\u7684\u884c\u4e3a\uff0c\u6ca1\u6709\u91cd\u8f7d operator* \u548c -> \u3002\u5b83\u7684\u6700\u5927\u4f5c\u7528\u5728\u4e8e\u534f\u52a9 shared_ptr \u5de5\u4f5c\uff0c\u5b83\u50cf\u65c1\u89c2\u8005\u90a3\u6837\u89c2\u6d4b\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u3002 \u7528\u6cd5 weak_ptr \u88ab\u8bbe\u8ba1\u4e3a\u4e0e shared_ptr \u534f\u540c\u5de5\u4f5c\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a shared_ptr \u6216\u53e6\u4e00\u4e2a weak_ptr \u5bf9\u8c61\u6784\u9020\u4ee5\u83b7\u5f97\u8d44\u6e90\u7684\u89c2\u6d4b\u6743\u3002\u4f46 weak_ptr \u6ca1\u6709\u5171\u4eab\u8d44\u6e90\uff0c\u5b83\u7684\u6784\u9020\u4e0d\u4f1a\u5f15\u8d77\u6307\u9488\u5f15\u7528\u8ba1\u6570\u7684\u589e\u52a0\u3002\u540c\u6837\uff0c weak_ptr \u6790\u6784\u65f6\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u201c\u9759\u9759\u7684\u65c1\u89c2\u8005\u201d\u3002 \u4f7f\u7528 weak_ptr \u7684\u6210\u5458\u51fd\u6570 use_count() \u53ef\u4ee5\u89c2\u6d4b\u8d44\u6e90\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u53e6\u4e00\u4e2a\u6210\u5458\u51fd\u6570 expired() \u7684\u529f\u80fd\u7b49\u4ef7\u4e8e use_count() == 0 \uff0c\u4f46 expired() \u66f4\u5feb\uff0c\u5b83\u8868\u793a\u88ab\u89c2\u6d4b\u7684\u8d44\u6e90\uff08\u4e5f\u5c31\u662f\u88ab shared_ptr \u7ba1\u7406\u7684\u8d44\u6e90\uff09\u5df2\u7ecf\u4e0d\u590d\u5b58\u5728\u3002 weak_ptr \u6ca1\u6709\u91cd\u8f7d operator* \u548c -> \uff0c\u56e0\u4e3a\u5b83\u4e0d\u5171\u4eab\u6307\u9488\uff0c\u4e0d\u80fd\u64cd\u4f5c\u8d44\u6e90\uff0c\u8fd9\u6b63\u662f\u4ed6\u201c\u5f31\u201d\u7684\u539f\u56e0\u3002\u4f46\u5b83\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6210\u5458\u51fd\u6570 lock() \u4ece\u88ab\u89c2\u6d4b\u7684 shared_ptr \u83b7\u5f97\u4e00\u4e2a\u53ef\u7528\u7684 shared_ptr \u5bf9\u8c61\uff0c\u628a\u201d\u5f31\u201c\u5173\u7cfb\u8f6c\u6362\u4e3a\u201d\u5f3a\u201c\u5173\u7cfb\uff0c\u4ece\u800c\u64cd\u4f5c\u8d44\u6e90\u3002\u4f46\u5f53 expired() == true \u65f6\uff0c lock() \u51fd\u6570\u5c06\u8fd4\u56de\u4e00\u4e2a\u5b58\u50a8\u7a7a\u6307\u9488\u7684 shared_ptr \u3002 \u5bf9\u8c61\u81ea\u6211\u7ba1\u7406 weak_ptr \u7684\u4e00\u4e2a\u91cd\u8981\u7528\u9014\u662f\u83b7\u5f97 this \u6307\u9488\u7684 shared_ptr \uff0c\u4f7f\u5bf9\u8c61\u81ea\u5df1\u80fd\u591f\u751f\u4ea7 shared_ptr \u7ba1\u7406\u81ea\u5df1\uff1a\u5bf9\u8c61\u4f7f\u7528 weak_ptr \u89c2\u6d4b this \u6307\u9488\uff0c\u8fd9\u5e76\u4e0d\u5f71\u54cd\u5f15\u7528\u8ba1\u6570\uff0c\u9700\u8981\u7684\u65f6\u5019\u5c31\u8c03\u7528 lock() \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684 shared_ptr \u4f9b\u5916\u754c\u4f7f\u7528\u3002 \u6253\u7834\u5faa\u73af\u5f15\u7528 \u6709\u65f6\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u5faa\u73af\u5f15\u7528\uff0c\u8fd9\u65f6 shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u673a\u5236\u5c31\u4f1a\u5931\u6548\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u8d44\u6e90\u3002 \u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 weak_ptr \uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u589e\u52a0\u667a\u80fd\u6307\u9488\u7684\u533b\u7528\u8ba1\u6570\uff0c\u8fd9\u6837\u5c31\u628a\u539f\u6765\u7684\u201c\u5f3a\u201d\u5f15\u7528\u6539\u6210\u201c\u5f31\u201d\u5f15\u7528\uff0c\u5728\u53ef\u80fd\u5b58\u5728\u5faa\u73af\u5f15\u7528\u7684\u5730\u65b9\u6253\u7834\u4e86\u5faa\u73af\uff0c\u800c\u5728\u771f\u6b63\u9700\u8981 shared_ptr \u7684\u65f6\u5019\u8c03\u7528 weak_ptr \u7684 lock() \u51fd\u6570\u3002","title":"04. weak ptr"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/04.%20weak_ptr/#_1","text":"weak_ptr \u88ab\u8bbe\u8ba1\u4e3a\u4e0e shared_ptr \u534f\u540c\u5de5\u4f5c\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a shared_ptr \u6216\u53e6\u4e00\u4e2a weak_ptr \u5bf9\u8c61\u6784\u9020\u4ee5\u83b7\u5f97\u8d44\u6e90\u7684\u89c2\u6d4b\u6743\u3002\u4f46 weak_ptr \u6ca1\u6709\u5171\u4eab\u8d44\u6e90\uff0c\u5b83\u7684\u6784\u9020\u4e0d\u4f1a\u5f15\u8d77\u6307\u9488\u5f15\u7528\u8ba1\u6570\u7684\u589e\u52a0\u3002\u540c\u6837\uff0c weak_ptr \u6790\u6784\u65f6\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u201c\u9759\u9759\u7684\u65c1\u89c2\u8005\u201d\u3002 \u4f7f\u7528 weak_ptr \u7684\u6210\u5458\u51fd\u6570 use_count() \u53ef\u4ee5\u89c2\u6d4b\u8d44\u6e90\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u53e6\u4e00\u4e2a\u6210\u5458\u51fd\u6570 expired() \u7684\u529f\u80fd\u7b49\u4ef7\u4e8e use_count() == 0 \uff0c\u4f46 expired() \u66f4\u5feb\uff0c\u5b83\u8868\u793a\u88ab\u89c2\u6d4b\u7684\u8d44\u6e90\uff08\u4e5f\u5c31\u662f\u88ab shared_ptr \u7ba1\u7406\u7684\u8d44\u6e90\uff09\u5df2\u7ecf\u4e0d\u590d\u5b58\u5728\u3002 weak_ptr \u6ca1\u6709\u91cd\u8f7d operator* \u548c -> \uff0c\u56e0\u4e3a\u5b83\u4e0d\u5171\u4eab\u6307\u9488\uff0c\u4e0d\u80fd\u64cd\u4f5c\u8d44\u6e90\uff0c\u8fd9\u6b63\u662f\u4ed6\u201c\u5f31\u201d\u7684\u539f\u56e0\u3002\u4f46\u5b83\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6210\u5458\u51fd\u6570 lock() \u4ece\u88ab\u89c2\u6d4b\u7684 shared_ptr \u83b7\u5f97\u4e00\u4e2a\u53ef\u7528\u7684 shared_ptr \u5bf9\u8c61\uff0c\u628a\u201d\u5f31\u201c\u5173\u7cfb\u8f6c\u6362\u4e3a\u201d\u5f3a\u201c\u5173\u7cfb\uff0c\u4ece\u800c\u64cd\u4f5c\u8d44\u6e90\u3002\u4f46\u5f53 expired() == true \u65f6\uff0c lock() \u51fd\u6570\u5c06\u8fd4\u56de\u4e00\u4e2a\u5b58\u50a8\u7a7a\u6307\u9488\u7684 shared_ptr \u3002","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/04.%20weak_ptr/#_2","text":"weak_ptr \u7684\u4e00\u4e2a\u91cd\u8981\u7528\u9014\u662f\u83b7\u5f97 this \u6307\u9488\u7684 shared_ptr \uff0c\u4f7f\u5bf9\u8c61\u81ea\u5df1\u80fd\u591f\u751f\u4ea7 shared_ptr \u7ba1\u7406\u81ea\u5df1\uff1a\u5bf9\u8c61\u4f7f\u7528 weak_ptr \u89c2\u6d4b this \u6307\u9488\uff0c\u8fd9\u5e76\u4e0d\u5f71\u54cd\u5f15\u7528\u8ba1\u6570\uff0c\u9700\u8981\u7684\u65f6\u5019\u5c31\u8c03\u7528 lock() \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684 shared_ptr \u4f9b\u5916\u754c\u4f7f\u7528\u3002","title":"\u5bf9\u8c61\u81ea\u6211\u7ba1\u7406"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/04.%20weak_ptr/#_3","text":"\u6709\u65f6\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u5faa\u73af\u5f15\u7528\uff0c\u8fd9\u65f6 shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u673a\u5236\u5c31\u4f1a\u5931\u6548\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u8d44\u6e90\u3002 \u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 weak_ptr \uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u589e\u52a0\u667a\u80fd\u6307\u9488\u7684\u533b\u7528\u8ba1\u6570\uff0c\u8fd9\u6837\u5c31\u628a\u539f\u6765\u7684\u201c\u5f3a\u201d\u5f15\u7528\u6539\u6210\u201c\u5f31\u201d\u5f15\u7528\uff0c\u5728\u53ef\u80fd\u5b58\u5728\u5faa\u73af\u5f15\u7528\u7684\u5730\u65b9\u6253\u7834\u4e86\u5faa\u73af\uff0c\u800c\u5728\u771f\u6b63\u9700\u8981 shared_ptr \u7684\u65f6\u5019\u8c03\u7528 weak_ptr \u7684 lock() \u51fd\u6570\u3002","title":"\u6253\u7834\u5faa\u73af\u5f15\u7528"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/05.%20pool%20%E5%BA%93%E6%A6%82%E8%BF%B0/","text":"boost.pool \u5e93\u57fa\u4e8e\u7b80\u5355\u5206\u9694\u5b58\u50a8\u7684\u601d\u60f3\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5feb\u901f\u3001\u7d27\u51d1\u7684\u5185\u5b58\u6c60\u5e93\uff0c\u4e0d\u4ec5\u80fd\u591f\u7ba1\u7406\u5927\u91cf\u7684\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u7528\u4f5c STL \u7684\u5185\u5b58\u5206\u914d\u5668\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8bb2\uff0c\u5b83\u8fd1\u4f3c\u4e8e\u4e00\u4e2a\u5c0f\u578b\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u5728\u9700\u8981\u5927\u91cf\u5206\u914d/\u91ca\u653e\u5c0f\u5bf9\u8c61\u65f6\u5176\u6548\u7387\u5f88\u9ad8\uff0c\u800c\u4e14\u5b8c\u5168\u4e0d\u9700\u8981\u8003\u8651 delete\u3002 pool \u5e93\u5305\u542b 4 \u4e2a\u7ec4\u6210\u90e8\u5206\uff1a\u6700\u7b80\u5355\u7684 pool \u3001\u5206\u914d\u7c7b\u5b9e\u4f8b\u7684 object_pool \u3001\u5355\u4ef6\u5185\u5b58\u6c60 singleton_pool \u548c\u53ef\u7528\u4e8e\u6807\u51c6\u5e93\u7684 pool_alloc \u3002 [[06. pool]] [[07. object_pool]] [[08. singleton_pool]]","title":"05. pool \u5e93\u6982\u8ff0"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/06.%20pool/","text":"pool \u662f\u6700\u7b80\u5355\u3001\u6700\u5bb9\u6613\u4f7f\u7528\u7684\u5185\u5b58\u6c60\u7c7b\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff08POD\uff0c\u666e\u901a\u65e7\u5f0f\u6570\u636e\uff09\u7684\u5185\u5b58\u6307\u9488\u3002\u5b83\u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u95ee\u9898\u5982\u4e0b\uff1a #include <boost/pool/pool.hpp> using namespace boost ; \u64cd\u4f5c\u51fd\u6570 pool \u7684\u6a21\u677f\u7c7b\u578b\u53c2\u6570 UserAllocator \u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5185\u5b58\u5206\u914d\u5668\uff0c\u5b83\u5b9e\u73b0\u4e86\u7279\u5b9a\u7684\u5185\u5b58\u5206\u914d\u7b97\u6cd5\uff0c\u901a\u5e38\u53ef\u4ee5\u76f4\u63a5\u7528\u9ed8\u8ba4\u7684 default_user_allocator_new_delete \uff0c\u5b83\u4f7f\u7528 new[] \u548c delete[] \u5206\u914d\u5185\u5b58\u3002 pool \u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a size_type \u7c7b\u578b\u7684\u6574\u6570 requested_size \uff0c\u6307\u793a\u6bcf\u6b21\u5206\u914d\u5185\u5b58\u5757\u7684\u5927\u5c0f\uff08\u800c\u4e0d\u662f\u5185\u5b58\u6c60\u7684\u5927\u5c0f\uff09\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528 get_requested_size() \u83b7\u5f97\u3002 pool \u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u5730\u5411\u7cfb\u7edf\u7533\u8bf7\u6216\u5f52\u8fd8\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5728\u6790\u6784\u65f6\uff0c pool \u5c06\u81ea\u52a8\u91ca\u653e\u5b83\u6240\u6301\u6709\u7684\u6240\u6709\u5185\u5b58\u3002 \u6210\u5458\u51fd\u6570 malloc() \u548c ordered_malloc() \u7684\u884c\u4e3a\u7c7b\u4f3c C \u4e2d\u7684\u5168\u5c40\u51fd\u6570 malloc() \uff0c\u7528 void* \u578b\u6307\u9488\u8fd4\u56de\u4ece\u5185\u5b58\u6c60\u4e2d\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u5176\u5185\u5b58\u5927\u5c0f\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 requested_size \u3002\u5982\u679c\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de 0\uff08\u7a7a\u6307\u9488\uff09\uff0c\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 malloc() \u4ece\u5185\u5b58\u6c60\u4e2d\u4efb\u610f\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u800c ordered_malloc() \u5219\u5728\u5206\u914d\u7684\u540c\u65f6\u5408\u5e76\u7a7a\u95f2\u5757\u94fe\u8868\u3002 ordered_malloc() \u5e26\u53c2\u6570\u7684\u5f62\u5f0f\u8fd8\u53ef\u4ee5\u8fde\u7eed\u5206\u914d n \u5757\u5185\u5b58\u3002\u53ef\u4ee5\u7528 is_from() \u51fd\u6570\u6d4b\u8bd5\u5206\u914d\u540e\u7684\u5185\u5b58\u6b3e\u662f\u5426\u662f\u4ece\u8fd9\u4e2a\u5185\u5b58\u6c60\u5206\u914d\u51fa\u53bb\u7684\u3002 \u4e0e malloc() \u5bf9\u5e94\u7684\u4e00\u7ec4\u51fd\u6570\u662f free() \uff0c free() \u7528\u6765\u624b\u52a8\u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u8fd9\u4e9b\u5185\u5b58\u5757\u5fc5\u987b\u662f\u4ece\u8fd9\u4e2a\u5185\u5b58\u6c60\u5206\u914d\u51fa\u53bb\u7684\uff08 is_from() == true \uff09\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5185\u5b58\u6c60\u4f1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u5206\u914d\uff0c\u4e0d\u5e94\u8be5\u8c03\u7528 free() \uff0c\u9664\u975e\u4f60\u8ba4\u4e3a\u5185\u5b58\u6c60\u7684\u7a7a\u95f4\u5df2\u7ecf\u4e0d\u8db3\uff0c\u5fc5\u987b\u91ca\u653e\u5df2\u7ecf\u5206\u914d\u7684\u5185\u5b58\u3002 \u6700\u540e\u8fd8\u6709\u4e24\u4e2a\u51fd\u6570\uff1a release_memory() \u8ba9\u5185\u5b58\u6c60\u91ca\u653e\u6240\u6709\u672a\u88ab\u5206\u914d\u7684\u5185\u5b58\uff0c\u4f46\u5df2\u5206\u914d\u7684\u5185\u5b58\u5757\u4e0d\u53d7\u5176\u5f71\u54cd\uff1b purge_memory() \u5219\u5f3a\u5236\u91ca\u653e pool \u6301\u6709\u7684\u6240\u6709\u5185\u5b58\uff08\u4e0d\u7ba1\u5185\u5b58\u5757\u91ca\u653e\u88ab\u4f7f\u7528\uff09\u3002\u5b9e\u9645\u4e0a\uff0c pool \u7684\u6790\u6784\u51fd\u6570\u5c31\u662f\u8c03\u7528\u7684 purge_memory() \u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u5e94\u8be5\u7531\u7a0b\u5e8f\u5458\u624b\u52a8\u8c03\u7528\u3002 \u7528\u6cd5 pool \u5f88\u5bb9\u6613\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u50cf C \u4e2d\u7684 malloc() \u4e00\u6837\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u968f\u610f\u4f7f\u7528\u5185\u5b58\u3002\u9664\u975e\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u5426\u5219\u4e0d\u5fc5\u5bf9\u5206\u914d\u7684\u5185\u5b58\u8c03\u7528 free() \u91ca\u653e\uff0c pool \u4f1a\u5f88\u597d\u5730\u7ba1\u7406\u5185\u5b58\u3002\u4f8b\u5982\uff1a int main () { pool <> pl ( sizeof ( int )); //\u4e00\u4e2a\u53ef\u5206\u914dint\u7684\u5185\u5b58\u6c60 int * p = static_cast < int *> ( pl . malloc ()); //\u5fc5\u987b\u5427void*\u8f6c\u6362\u6210\u9700\u8981\u7684\u7c7b\u578b assert ( pl . is_from ( p )); pl . free ( p ); //\u91ca\u653e\u5185\u5b58\u6c60\u5206\u914d\u7684\u5185\u5b58\u5757 for ( int i = 0 ; i < 100 ; ++ i ) //\u8fde\u7eed\u5206\u914d\u5927\u91cf\u7684\u5185\u5b58 { pl . ordered_malloc ( 10 ); } } \u56e0\u4e3a pool \u5728\u5206\u914d\u5185\u5b58\u5757\u5931\u8d25\u7684\u65f6\u5019\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u6240\u4ee5\u65f6\u95f4\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u8be5\u68c0\u67e5 malloc() \u51fd\u6570\u8fd4\u56de\u7684\u6307\u9488\uff0c\u4ee5\u9632\u6b62\u7a7a\u6307\u9488\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u8fc7\u901a\u5e38\u8fd9\u79cd\u60c5\u51b5\u5f88\u5c11\u51fa\u73b0\uff1a int * p = static_cast < int *> ( pl . malloc ()); if ( nullptr != p ) { ... } \u5173\u4e8e pool \u53ea\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5b83\u53ea\u80fd\u4f5c\u4e3a\u666e\u901a\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\u7684\u5185\u5b58\u6c60\uff0c\u4e0d\u80fd\u5c06\u5176\u5e94\u7528\u4e0e\u590d\u6742\u7684\u7c7b\u548c\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b83\u53ea\u5206\u914d\u5185\u5b58\uff0c\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u9700\u8981\u7528 object_pool \u3002","title":"06. pool"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/06.%20pool/#_1","text":"pool \u7684\u6a21\u677f\u7c7b\u578b\u53c2\u6570 UserAllocator \u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5185\u5b58\u5206\u914d\u5668\uff0c\u5b83\u5b9e\u73b0\u4e86\u7279\u5b9a\u7684\u5185\u5b58\u5206\u914d\u7b97\u6cd5\uff0c\u901a\u5e38\u53ef\u4ee5\u76f4\u63a5\u7528\u9ed8\u8ba4\u7684 default_user_allocator_new_delete \uff0c\u5b83\u4f7f\u7528 new[] \u548c delete[] \u5206\u914d\u5185\u5b58\u3002 pool \u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a size_type \u7c7b\u578b\u7684\u6574\u6570 requested_size \uff0c\u6307\u793a\u6bcf\u6b21\u5206\u914d\u5185\u5b58\u5757\u7684\u5927\u5c0f\uff08\u800c\u4e0d\u662f\u5185\u5b58\u6c60\u7684\u5927\u5c0f\uff09\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528 get_requested_size() \u83b7\u5f97\u3002 pool \u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u5730\u5411\u7cfb\u7edf\u7533\u8bf7\u6216\u5f52\u8fd8\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5728\u6790\u6784\u65f6\uff0c pool \u5c06\u81ea\u52a8\u91ca\u653e\u5b83\u6240\u6301\u6709\u7684\u6240\u6709\u5185\u5b58\u3002 \u6210\u5458\u51fd\u6570 malloc() \u548c ordered_malloc() \u7684\u884c\u4e3a\u7c7b\u4f3c C \u4e2d\u7684\u5168\u5c40\u51fd\u6570 malloc() \uff0c\u7528 void* \u578b\u6307\u9488\u8fd4\u56de\u4ece\u5185\u5b58\u6c60\u4e2d\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u5176\u5185\u5b58\u5927\u5c0f\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u7684 requested_size \u3002\u5982\u679c\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de 0\uff08\u7a7a\u6307\u9488\uff09\uff0c\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 malloc() \u4ece\u5185\u5b58\u6c60\u4e2d\u4efb\u610f\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u800c ordered_malloc() \u5219\u5728\u5206\u914d\u7684\u540c\u65f6\u5408\u5e76\u7a7a\u95f2\u5757\u94fe\u8868\u3002 ordered_malloc() \u5e26\u53c2\u6570\u7684\u5f62\u5f0f\u8fd8\u53ef\u4ee5\u8fde\u7eed\u5206\u914d n \u5757\u5185\u5b58\u3002\u53ef\u4ee5\u7528 is_from() \u51fd\u6570\u6d4b\u8bd5\u5206\u914d\u540e\u7684\u5185\u5b58\u6b3e\u662f\u5426\u662f\u4ece\u8fd9\u4e2a\u5185\u5b58\u6c60\u5206\u914d\u51fa\u53bb\u7684\u3002 \u4e0e malloc() \u5bf9\u5e94\u7684\u4e00\u7ec4\u51fd\u6570\u662f free() \uff0c free() \u7528\u6765\u624b\u52a8\u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u8fd9\u4e9b\u5185\u5b58\u5757\u5fc5\u987b\u662f\u4ece\u8fd9\u4e2a\u5185\u5b58\u6c60\u5206\u914d\u51fa\u53bb\u7684\uff08 is_from() == true \uff09\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5185\u5b58\u6c60\u4f1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u5206\u914d\uff0c\u4e0d\u5e94\u8be5\u8c03\u7528 free() \uff0c\u9664\u975e\u4f60\u8ba4\u4e3a\u5185\u5b58\u6c60\u7684\u7a7a\u95f4\u5df2\u7ecf\u4e0d\u8db3\uff0c\u5fc5\u987b\u91ca\u653e\u5df2\u7ecf\u5206\u914d\u7684\u5185\u5b58\u3002 \u6700\u540e\u8fd8\u6709\u4e24\u4e2a\u51fd\u6570\uff1a release_memory() \u8ba9\u5185\u5b58\u6c60\u91ca\u653e\u6240\u6709\u672a\u88ab\u5206\u914d\u7684\u5185\u5b58\uff0c\u4f46\u5df2\u5206\u914d\u7684\u5185\u5b58\u5757\u4e0d\u53d7\u5176\u5f71\u54cd\uff1b purge_memory() \u5219\u5f3a\u5236\u91ca\u653e pool \u6301\u6709\u7684\u6240\u6709\u5185\u5b58\uff08\u4e0d\u7ba1\u5185\u5b58\u5757\u91ca\u653e\u88ab\u4f7f\u7528\uff09\u3002\u5b9e\u9645\u4e0a\uff0c pool \u7684\u6790\u6784\u51fd\u6570\u5c31\u662f\u8c03\u7528\u7684 purge_memory() \u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u5e94\u8be5\u7531\u7a0b\u5e8f\u5458\u624b\u52a8\u8c03\u7528\u3002","title":"\u64cd\u4f5c\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/06.%20pool/#_2","text":"pool \u5f88\u5bb9\u6613\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u50cf C \u4e2d\u7684 malloc() \u4e00\u6837\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u968f\u610f\u4f7f\u7528\u5185\u5b58\u3002\u9664\u975e\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u5426\u5219\u4e0d\u5fc5\u5bf9\u5206\u914d\u7684\u5185\u5b58\u8c03\u7528 free() \u91ca\u653e\uff0c pool \u4f1a\u5f88\u597d\u5730\u7ba1\u7406\u5185\u5b58\u3002\u4f8b\u5982\uff1a int main () { pool <> pl ( sizeof ( int )); //\u4e00\u4e2a\u53ef\u5206\u914dint\u7684\u5185\u5b58\u6c60 int * p = static_cast < int *> ( pl . malloc ()); //\u5fc5\u987b\u5427void*\u8f6c\u6362\u6210\u9700\u8981\u7684\u7c7b\u578b assert ( pl . is_from ( p )); pl . free ( p ); //\u91ca\u653e\u5185\u5b58\u6c60\u5206\u914d\u7684\u5185\u5b58\u5757 for ( int i = 0 ; i < 100 ; ++ i ) //\u8fde\u7eed\u5206\u914d\u5927\u91cf\u7684\u5185\u5b58 { pl . ordered_malloc ( 10 ); } } \u56e0\u4e3a pool \u5728\u5206\u914d\u5185\u5b58\u5757\u5931\u8d25\u7684\u65f6\u5019\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u6240\u4ee5\u65f6\u95f4\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u8be5\u68c0\u67e5 malloc() \u51fd\u6570\u8fd4\u56de\u7684\u6307\u9488\uff0c\u4ee5\u9632\u6b62\u7a7a\u6307\u9488\u53d1\u751f\u9519\u8bef\uff0c\u4e0d\u8fc7\u901a\u5e38\u8fd9\u79cd\u60c5\u51b5\u5f88\u5c11\u51fa\u73b0\uff1a int * p = static_cast < int *> ( pl . malloc ()); if ( nullptr != p ) { ... } \u5173\u4e8e pool \u53ea\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5b83\u53ea\u80fd\u4f5c\u4e3a\u666e\u901a\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\u7684\u5185\u5b58\u6c60\uff0c\u4e0d\u80fd\u5c06\u5176\u5e94\u7528\u4e0e\u590d\u6742\u7684\u7c7b\u548c\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5b83\u53ea\u5206\u914d\u5185\u5b58\uff0c\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6\uff0c\u9700\u8981\u7528 object_pool \u3002","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/07.%20object_pool/","text":"object_pool \u662f\u7528\u4e8e\u7c7b\u5b9e\u4f8b\uff08\u5bf9\u8c61\uff09\u7684\u5185\u5b58\u6c60\uff0c\u5b83\u7684\u529f\u80fd\u4e0e pool \u7c7b\u4f3c\uff0c\u4f46\u5b83\u4f1a\u5728\u6790\u6784\u65f6\u5bf9\u6240\u6709\u5df2\u7ecf\u5206\u914d\u7684\u5185\u5b58\u5757\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u4ece\u800c\u6b63\u786e\u5730\u91ca\u653e\u8d44\u6e90\u3002 object_pool \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/pool/object_pool.hpp> using namespace boost ; \u64cd\u4f5c\u51fd\u6570 object_pool \u662f pool \u7684\u5b50\u7c7b\uff0c\u4f46\u5b83\u4f7f\u7528\u7684\u662f\u4fdd\u62a4\u7ee7\u627f\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528 pool \u7684\u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u7684\u57fa\u672c\u64cd\u4f5c\u8fd8\u662f\u76f8\u4f3c\u7684\u3002 object_pool \u7684\u6a21\u677f\u7c7b\u578b\u53c2\u6570 T \u6307\u5b9a\u4e86 object_pool \u8981\u5206\u914d\u7684\u5143\u7d20\u7c7b\u578b\uff0c\u8981\u6c42\u5176\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38\u3002\u4e00\u65e6\u5728\u6a21\u677f\u4e2d\u6307\u5b9a\u4e86\u7c7b\u578b\uff0c object_pool \u5b9e\u4f8b\u5c31\u4e0d\u80fd\u518d\u7528\u4e8e\u5206\u914d\u5176\u4ed6\u7c7b\u578b\u3002 malloc() \u548c free() \u51fd\u6570\u5206\u522b\u5206\u914d\u548c\u91ca\u653e\u4e00\u5757\u7c7b\u578b\u4e3a T* \u7684\u5185\u5b58\u5757\uff0c\u540c\u6837\uff0c\u53ef\u4ee5\u7528 is_from() \u6765\u6d4b\u8bd5\u5185\u5b58\u5757\u7684\u5f52\u5c5e\uff0c\u53ea\u6709\u672c\u5185\u5b58\u6c60\u5206\u914d\u7684\u5185\u5b58\u624d\u80fd\u88ab free() \u91ca\u653e\u3002\u4f46\u5b83\u4eec\u88ab\u8c03\u7528\u65f6\u5e76\u4e0d\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u64cd\u4f5c\u7684\u662f\u4e00\u5757\u539f\u59cb\u5185\u5b58\u5757\uff0c\u91cc\u9762\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u5f53\u5c3d\u91cf\u5c11\u4f7f\u7528 malloc() \u548c free() \u3002 object_pool \u7684\u7279\u6b8a\u4e4b\u5904\u662f construct() \u548c destroy() \u51fd\u6570\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u662f object_pool \u7684\u771f\u6b63\u4ef7\u503c\u6240\u5728\u3002 construct() \u5b9e\u9645\u4e0a\u662f\u4e00\u7ec4\u51fd\u6570\uff0c\u6709\u591a\u4e2a\u53c2\u6570\u7684\u91cd\u8f7d\u5f62\u5f0f\uff08\u76ee\u524d\u6700\u591a\u652f\u6301 3 \u4e2a\u53c2\u6570\uff0c\u4f46\u53ef\u4ee5\u6269\u5c55\uff09\uff0c\u5b83\u5148\u8c03\u7528 malloc() \u5206\u914d\u5185\u5b58\uff0c\u518d\u5728\u5185\u5b58\u5757\u4e0a\u4f7f\u7528\u4f20\u5165\u7684\u53c2\u6570\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u6307\u9488\u3002 destroy() \u5219\u5148\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u7528 free() \u91ca\u653e\u5185\u5b58\u5757\u3002 \u8fd9\u4e9b\u51fd\u6570\u90fd\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5982\u679c\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u5c06\u8fd4\u56de 0\uff08\u7a7a\u6307\u9488\uff09\u3002 \u7528\u6cd5 object_pool \u7684\u7528\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u50cf\u4f7f\u7528 pool \u90a3\u6837\u4f7f\u7528 object_pool \u5206\u914d\u539f\u59cb\u5185\u5b58\u5757\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 construct() \u76f4\u63a5\u5728\u5185\u5b58\u6c60\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002\u5f53\u7136\uff0c\u540e\u4e00\u79cd\u4f7f\u7528\u65b9\u6cd5\u662f\u6700\u65b9\u4fbf\u7684\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u793a\u8303\u4e86 object_pool \u7684\u7528\u6cd5\uff1a class demo_class //\u4e00\u4e2a\u793a\u8303\u7528\u7684\u7c7b { public : int a , b , c ; demo_class ( int x = 1 , int y = 2 , int z = 3 ) : a ( x ), b ( y ), c ( z ) {} }; int main () { object_pool < demo_class > pl ; //\u5bf9\u8c61\u5185\u5b58\u6c60 auto p = pl . malloc (); //\u5206\u914d\u4e00\u4e2a\u539f\u59cb\u5185\u5b58\u5757 assert ( pl . is_from ( p )); //p\u6307\u5411\u7684\u5185\u5b58\u672a\u7ecf\u8fc7\u521d\u59cb\u5316 assert ( p -> a != 1 || p -> b != 2 || p -> c != 3 ); p = pl . construct ( 7 , 8 , 9 ); //\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570 assert ( p -> a == 7 ); object_pool < std :: string > pls ; //\u5b9a\u4e49\u4e00\u4e2a\u5206\u914dstring\u5bf9\u8c61\u7684\u5185\u5b58\u6c60 for ( int i = 0 ; i < 10 ; i ++ ) //\u8fde\u7eed\u5206\u914d\u5927\u91cfstring\u5bf9\u8c61 { std :: string * ps = pls . construct ( \"hello object_pool\" ); std :: cout << * ps << std :: endl ; } } \u66f4\u591a\u7684\u6784\u9020\u53c2\u6570 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u4f7f\u7528 object_pool \u7684 construct() \u7684\u65f6\u5019\u6211\u4eec\u6700\u591a\u53ea\u80fd\u4f7f\u7528 3 \u4e2a\u53c2\u6570\u6765\u521b\u5efa\u5bf9\u8c61\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fd9\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4f46\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u5b9a\u4e493 \u4e2a\u4ee5\u4e0a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6b64\u65f6 construct() \u7684\u9ed8\u8ba4\u91cd\u8f7d\u5f62\u5f0f\u5c31\u4e0d\u591f\u7528\u4e86\u3002 \u5f88\u9057\u61be\uff0c construct() \u5e76\u6ca1\u6709\u53ca\u65f6\u8ddf\u8fdb C++ \u6807\u51c6\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u6784\u9020\u3002\u5b83\u57fa\u4e8e\u5b8f\u9884\u5904\u7406m4\uff08\u901a\u5e38 UNIX \u7cfb\u7edf\u81ea\u5e26\uff0c\u4e5f\u6709 Windows \u7684\u7248\u672c\uff09\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53d8\u901a\u7684\u6269\u5c55\u673a\u5236\uff0c\u53ef\u4ee5\u751f\u6210\u63a5\u6536\u4efb\u610f\u6570\u91cf\u53c2\u6570\u7684 construct() \u51fd\u6570\u4ee3\u7801\u3002 pool \u5e93\u5728\u76ee\u5f55 boost/pool/detail \u4e0b\u63d0\u4f9b\u4e86\u4e24\u4e2a\u540d\u4e3a pool_construct.m4 \u548c pool_construct_simple.m4 \u7684\u811a\u672c\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u53ef\u5728 UNIX \u548c Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8fd0\u884c\u7684\u540c\u540d sh \u548c bat \u53ef\u6267\u884c\u811a\u672c\u6587\u4ef6\u3002\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6279\u5904\u7406\u811a\u672c\u4f20\u9012\u4e00\u4e2a\u6574\u6570\u7684\u53c2\u6570 N\uff0cm4 \u5c31\u4f1a\u81ea\u52a8\u751f\u6210\u80fd\u591f\u521b\u5efa\u5177\u6709 N \u4e2a\u53c2\u6570\u7684 construct() \u51fd\u6570\u7684\u6e90\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./pool_construct_simple.sh 5 ./pool_construct.sh 5 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u5c06\u751f\u6210\u4e24\u4e2a\u540c\u540d\u7684 .ipp \u6587\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u4e86\u65b0\u7684 construct() \u51fd\u6570\u5b9a\u4e49\uff0c\u6700\u591a\u80fd\u591f\u652f\u6301\u4f20\u9012 5 \u4e2a\u53c2\u6570\u521b\u5efa\u5bf9\u8c61\u3002 m4 \u7684\u89e3\u51b3\u65b9\u6848\u663e\u5f97\u6bd4\u8f83\u201c\u7b28\u62d9\u201d\uff0c\u4f7f\u7528 C++11 \u7684\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u6a21\u677f\u51fd\u6570\uff0c\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4ee5\u5f7b\u5e95\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a template < typename P , typename ... Args > inline typename P :: element_type * construct ( P & p , Args && ... args ) { typename P :: element_type * mem = p . malloc (); assert ( mem != 0 ); new ( mem ) typename P :: element_type ( std :: forward < Args > ( args ) ...); return mem ; } \u81ea\u7531\u51fd\u6570 construct() \u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f object_pool \u5bf9\u8c61\uff0c\u5176\u540e\u662f\u521b\u5efa\u5bf9\u8c61\u6240\u9700\u7684\u53c2\u6570\uff0c\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 object_pool \u7684\u5185\u90e8\u7c7b\u578b\u5b9a\u4e49 element_type \u6765\u83b7\u5f97\u3002\u8be5\u51fd\u6570\u9996\u5148\u8c03\u7528 malloc() \u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u7136\u540e\u8c03\u7528\u4e0d\u592a\u5e38\u89c1\u7684\u201c\u5b9a\u4f4d new \u8868\u8fbe\u5f0f\u201d\uff08placement new expression\uff09\u6765\u521b\u5efa\u5bf9\u8c61\u3002 \u5047\u8bbe\u6709\u5982\u4e0b\u7684\u4e00\u4e2a\u7531 4 \u4e2a\u53c2\u6570\u7ec4\u6210\u7684\u6784\u9020\u51fd\u6570\u7684\u7c7b\uff1a class demo_class //\u4e00\u4e2a\u793a\u8303\u7528\u7684\u7c7b { public : demo_class ( int , int , int , int ) //\u6784\u9020\u51fd\u6570\u63a5\u6536 4 \u4e2a\u53c2\u6570 { std :: cout << \"demo_class contructor\" << std :: endl ; } ~ demo_class () { std :: cout << \"demo_class destructor\" << std :: endl ; } }; \u90a3\u4e48\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 construct() \u521b\u5efa\u5bf9\u8c61\u7684\u4ee3\u7801\u5982\u4e0b\uff1a object_pool < demo_class > pl ; //\u5bf9\u8c61\u5185\u5b58\u6c60 auto d = construct ( pl , 1 , 2 , 3 , 4 ); //\u4f7f\u7528\u81ea\u5b9a\u4e49\u6269\u5c55","title":"07. object pool"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/07.%20object_pool/#_1","text":"object_pool \u662f pool \u7684\u5b50\u7c7b\uff0c\u4f46\u5b83\u4f7f\u7528\u7684\u662f\u4fdd\u62a4\u7ee7\u627f\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528 pool \u7684\u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u7684\u57fa\u672c\u64cd\u4f5c\u8fd8\u662f\u76f8\u4f3c\u7684\u3002 object_pool \u7684\u6a21\u677f\u7c7b\u578b\u53c2\u6570 T \u6307\u5b9a\u4e86 object_pool \u8981\u5206\u914d\u7684\u5143\u7d20\u7c7b\u578b\uff0c\u8981\u6c42\u5176\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38\u3002\u4e00\u65e6\u5728\u6a21\u677f\u4e2d\u6307\u5b9a\u4e86\u7c7b\u578b\uff0c object_pool \u5b9e\u4f8b\u5c31\u4e0d\u80fd\u518d\u7528\u4e8e\u5206\u914d\u5176\u4ed6\u7c7b\u578b\u3002 malloc() \u548c free() \u51fd\u6570\u5206\u522b\u5206\u914d\u548c\u91ca\u653e\u4e00\u5757\u7c7b\u578b\u4e3a T* \u7684\u5185\u5b58\u5757\uff0c\u540c\u6837\uff0c\u53ef\u4ee5\u7528 is_from() \u6765\u6d4b\u8bd5\u5185\u5b58\u5757\u7684\u5f52\u5c5e\uff0c\u53ea\u6709\u672c\u5185\u5b58\u6c60\u5206\u914d\u7684\u5185\u5b58\u624d\u80fd\u88ab free() \u91ca\u653e\u3002\u4f46\u5b83\u4eec\u88ab\u8c03\u7528\u65f6\u5e76\u4e0d\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u64cd\u4f5c\u7684\u662f\u4e00\u5757\u539f\u59cb\u5185\u5b58\u5757\uff0c\u91cc\u9762\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5e94\u5f53\u5c3d\u91cf\u5c11\u4f7f\u7528 malloc() \u548c free() \u3002 object_pool \u7684\u7279\u6b8a\u4e4b\u5904\u662f construct() \u548c destroy() \u51fd\u6570\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u662f object_pool \u7684\u771f\u6b63\u4ef7\u503c\u6240\u5728\u3002 construct() \u5b9e\u9645\u4e0a\u662f\u4e00\u7ec4\u51fd\u6570\uff0c\u6709\u591a\u4e2a\u53c2\u6570\u7684\u91cd\u8f7d\u5f62\u5f0f\uff08\u76ee\u524d\u6700\u591a\u652f\u6301 3 \u4e2a\u53c2\u6570\uff0c\u4f46\u53ef\u4ee5\u6269\u5c55\uff09\uff0c\u5b83\u5148\u8c03\u7528 malloc() \u5206\u914d\u5185\u5b58\uff0c\u518d\u5728\u5185\u5b58\u5757\u4e0a\u4f7f\u7528\u4f20\u5165\u7684\u53c2\u6570\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u6307\u9488\u3002 destroy() \u5219\u5148\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u7528 free() \u91ca\u653e\u5185\u5b58\u5757\u3002 \u8fd9\u4e9b\u51fd\u6570\u90fd\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5982\u679c\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u5c06\u8fd4\u56de 0\uff08\u7a7a\u6307\u9488\uff09\u3002","title":"\u64cd\u4f5c\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/07.%20object_pool/#_2","text":"object_pool \u7684\u7528\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u65e2\u53ef\u4ee5\u50cf\u4f7f\u7528 pool \u90a3\u6837\u4f7f\u7528 object_pool \u5206\u914d\u539f\u59cb\u5185\u5b58\u5757\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 construct() \u76f4\u63a5\u5728\u5185\u5b58\u6c60\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002\u5f53\u7136\uff0c\u540e\u4e00\u79cd\u4f7f\u7528\u65b9\u6cd5\u662f\u6700\u65b9\u4fbf\u7684\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u793a\u8303\u4e86 object_pool \u7684\u7528\u6cd5\uff1a class demo_class //\u4e00\u4e2a\u793a\u8303\u7528\u7684\u7c7b { public : int a , b , c ; demo_class ( int x = 1 , int y = 2 , int z = 3 ) : a ( x ), b ( y ), c ( z ) {} }; int main () { object_pool < demo_class > pl ; //\u5bf9\u8c61\u5185\u5b58\u6c60 auto p = pl . malloc (); //\u5206\u914d\u4e00\u4e2a\u539f\u59cb\u5185\u5b58\u5757 assert ( pl . is_from ( p )); //p\u6307\u5411\u7684\u5185\u5b58\u672a\u7ecf\u8fc7\u521d\u59cb\u5316 assert ( p -> a != 1 || p -> b != 2 || p -> c != 3 ); p = pl . construct ( 7 , 8 , 9 ); //\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570 assert ( p -> a == 7 ); object_pool < std :: string > pls ; //\u5b9a\u4e49\u4e00\u4e2a\u5206\u914dstring\u5bf9\u8c61\u7684\u5185\u5b58\u6c60 for ( int i = 0 ; i < 10 ; i ++ ) //\u8fde\u7eed\u5206\u914d\u5927\u91cfstring\u5bf9\u8c61 { std :: string * ps = pls . construct ( \"hello object_pool\" ); std :: cout << * ps << std :: endl ; } }","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/07.%20object_pool/#_3","text":"\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u4f7f\u7528 object_pool \u7684 construct() \u7684\u65f6\u5019\u6211\u4eec\u6700\u591a\u53ea\u80fd\u4f7f\u7528 3 \u4e2a\u53c2\u6570\u6765\u521b\u5efa\u5bf9\u8c61\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fd9\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4f46\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u5b9a\u4e493 \u4e2a\u4ee5\u4e0a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6b64\u65f6 construct() \u7684\u9ed8\u8ba4\u91cd\u8f7d\u5f62\u5f0f\u5c31\u4e0d\u591f\u7528\u4e86\u3002 \u5f88\u9057\u61be\uff0c construct() \u5e76\u6ca1\u6709\u53ca\u65f6\u8ddf\u8fdb C++ \u6807\u51c6\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u6784\u9020\u3002\u5b83\u57fa\u4e8e\u5b8f\u9884\u5904\u7406m4\uff08\u901a\u5e38 UNIX \u7cfb\u7edf\u81ea\u5e26\uff0c\u4e5f\u6709 Windows \u7684\u7248\u672c\uff09\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53d8\u901a\u7684\u6269\u5c55\u673a\u5236\uff0c\u53ef\u4ee5\u751f\u6210\u63a5\u6536\u4efb\u610f\u6570\u91cf\u53c2\u6570\u7684 construct() \u51fd\u6570\u4ee3\u7801\u3002 pool \u5e93\u5728\u76ee\u5f55 boost/pool/detail \u4e0b\u63d0\u4f9b\u4e86\u4e24\u4e2a\u540d\u4e3a pool_construct.m4 \u548c pool_construct_simple.m4 \u7684\u811a\u672c\uff0c\u540c\u65f6\u63d0\u4f9b\u4e86\u53ef\u5728 UNIX \u548c Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8fd0\u884c\u7684\u540c\u540d sh \u548c bat \u53ef\u6267\u884c\u811a\u672c\u6587\u4ef6\u3002\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6279\u5904\u7406\u811a\u672c\u4f20\u9012\u4e00\u4e2a\u6574\u6570\u7684\u53c2\u6570 N\uff0cm4 \u5c31\u4f1a\u81ea\u52a8\u751f\u6210\u80fd\u591f\u521b\u5efa\u5177\u6709 N \u4e2a\u53c2\u6570\u7684 construct() \u51fd\u6570\u7684\u6e90\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./pool_construct_simple.sh 5 ./pool_construct.sh 5 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u5c06\u751f\u6210\u4e24\u4e2a\u540c\u540d\u7684 .ipp \u6587\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u4e86\u65b0\u7684 construct() \u51fd\u6570\u5b9a\u4e49\uff0c\u6700\u591a\u80fd\u591f\u652f\u6301\u4f20\u9012 5 \u4e2a\u53c2\u6570\u521b\u5efa\u5bf9\u8c61\u3002 m4 \u7684\u89e3\u51b3\u65b9\u6848\u663e\u5f97\u6bd4\u8f83\u201c\u7b28\u62d9\u201d\uff0c\u4f7f\u7528 C++11 \u7684\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u6a21\u677f\u51fd\u6570\uff0c\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4ee5\u5f7b\u5e95\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a template < typename P , typename ... Args > inline typename P :: element_type * construct ( P & p , Args && ... args ) { typename P :: element_type * mem = p . malloc (); assert ( mem != 0 ); new ( mem ) typename P :: element_type ( std :: forward < Args > ( args ) ...); return mem ; } \u81ea\u7531\u51fd\u6570 construct() \u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f object_pool \u5bf9\u8c61\uff0c\u5176\u540e\u662f\u521b\u5efa\u5bf9\u8c61\u6240\u9700\u7684\u53c2\u6570\uff0c\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 object_pool \u7684\u5185\u90e8\u7c7b\u578b\u5b9a\u4e49 element_type \u6765\u83b7\u5f97\u3002\u8be5\u51fd\u6570\u9996\u5148\u8c03\u7528 malloc() \u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u7136\u540e\u8c03\u7528\u4e0d\u592a\u5e38\u89c1\u7684\u201c\u5b9a\u4f4d new \u8868\u8fbe\u5f0f\u201d\uff08placement new expression\uff09\u6765\u521b\u5efa\u5bf9\u8c61\u3002 \u5047\u8bbe\u6709\u5982\u4e0b\u7684\u4e00\u4e2a\u7531 4 \u4e2a\u53c2\u6570\u7ec4\u6210\u7684\u6784\u9020\u51fd\u6570\u7684\u7c7b\uff1a class demo_class //\u4e00\u4e2a\u793a\u8303\u7528\u7684\u7c7b { public : demo_class ( int , int , int , int ) //\u6784\u9020\u51fd\u6570\u63a5\u6536 4 \u4e2a\u53c2\u6570 { std :: cout << \"demo_class contructor\" << std :: endl ; } ~ demo_class () { std :: cout << \"demo_class destructor\" << std :: endl ; } }; \u90a3\u4e48\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 construct() \u521b\u5efa\u5bf9\u8c61\u7684\u4ee3\u7801\u5982\u4e0b\uff1a object_pool < demo_class > pl ; //\u5bf9\u8c61\u5185\u5b58\u6c60 auto d = construct ( pl , 1 , 2 , 3 , 4 ); //\u4f7f\u7528\u81ea\u5b9a\u4e49\u6269\u5c55","title":"\u66f4\u591a\u7684\u6784\u9020\u53c2\u6570"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/08.%20singleton_pool/","text":"singleton_pool \u4e0e pool \u7684\u63a5\u53e3\u5b8c\u5168\u4e00\u81f4\uff0c\u53ef\u4ee5\u7528\u5b83\u5206\u914d\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff08POD\uff09\u7684\u5185\u5b58\u6307\u9488\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u201c\u5355\u4ef6\u201d\u3002 singleton_pool \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/pool/singleton_pool.hpp> using namespace boost ; singleton_pool \u9ed8\u8ba4\u4f7f\u7528 boost.thread \u5e93\u63d0\u4f9b\u7ebf\u7a0b\u5b89\u5168\u4fdd\u8bc1\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5b83\u94fe\u63a5 boost_thread \u5e93\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u524d\u5b9a\u4e49\u5b8f BOOST_POOL_NO_MT \u3002 \u7528\u6cd5 singleton_pool \u4e3b\u8981\u6709\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff08\u5176\u4f59\u7684\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\uff09\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570 Tag \u4ec5\u4ec5\u7528\u4e8e\u6807\u8bb0\u4e0d\u540c\u7684\u5355\u95f4\uff0c\u53ef\u4ee5\u662f\u7a7a\u7c7b\uff0c\u751a\u81f3\u53ef\u4ee5\u53ea\u8fdb\u884c\u58f0\u660e\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570 RequestedSize \u7b49\u540c\u4e8e pool \u6784\u9020\u51fd\u6570\u4e2d\u7684\u6574\u6570 requested_size \uff0c\u53ef\u4ee5\u6307\u793a pool \u5206\u914d\u7684\u5185\u5b58\u5757\u7684\u5927\u5c0f\u3002 singleton_pool \u7684\u63a5\u53e3\u4e0e pool \u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u5176\u6210\u5458\u51fd\u6570\u5747\u662f\u9759\u6001\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u58f0\u660e singleton_pool \u7684\u5b9e\u4f8b\uff0c\u76f4\u63a5\u7528\u57df\u64cd\u4f5c\u7b26 :: \u6765\u8c03\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u5373\u53ef\u3002\u56e0\u4e3a singleton_pool \u662f\u5355\u4ef6\uff0c\u6240\u4ee5\u5b83\u7684\u751f\u547d\u5468\u671f\u4e0e\u6574\u4e2a\u7a0b\u5e8f\u540c\u6837\u957f\uff0c\u9664\u975e\u624b\u52a8\u8c03\u7528 release_memory() \u6216 purge_memory() \uff0c\u5426\u5219 singleton_pool \u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u6240\u5360\u7528\u7684\u5185\u5b58\u3002\u9664\u4e86\u4ee5\u4e0a\u4e24\u70b9\uff0c singleton_pool \u7684\u7528\u6cd5\u4e0e pool \u5b8c\u5168\u76f8\u540c\u3002 \u4ee5\u4e0b\u4ee3\u7801\u793a\u8303\u4e86 singleton_pool \u7684\u7528\u6cd5\uff1a struct pool_tag {}; typedef singleton_pool < pool_tag , sizeof ( int ) > spl ; //\u5185\u5b58\u6c60\u5b9a\u4e49 int main () { int * p = ( int * ) spl :: malloc (); //\u5206\u914d\u4e00\u4e2a\u6574\u6570\u5185\u5b58\u5757 assert ( spl :: is_from ( p )); spl :: release_memory (); //\u91ca\u653e\u6240\u6709\u672a\u88ab\u5206\u914d\u7684\u5185\u5b58 } //spl \u7684\u5185\u5b58\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u624d\u5b8c\u5168\u91ca\u653e\uff0c\u800c\u4e0d\u662f\u9000\u51fa\u4f5c\u7528\u57df \u5728\u4f7f\u7528 singleton_pool \u65f6\u6700\u597d\u4f7f\u7528 typedef \u6765\u7b80\u5316\u5176\u540d\u79f0\uff0c\u5426\u5219\u4f1a\u4f7f\u7c7b\u578b\u540d\u8fc7\u4e8e\u5197\u957f\u800c\u96be\u4ee5\u4f7f\u7528\u3002","title":"08. singleton pool"},{"location":"Programming/00.%20C%2B%2B/Boost/01.%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/08.%20singleton_pool/#_1","text":"singleton_pool \u4e3b\u8981\u6709\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff08\u5176\u4f59\u7684\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\uff09\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570 Tag \u4ec5\u4ec5\u7528\u4e8e\u6807\u8bb0\u4e0d\u540c\u7684\u5355\u95f4\uff0c\u53ef\u4ee5\u662f\u7a7a\u7c7b\uff0c\u751a\u81f3\u53ef\u4ee5\u53ea\u8fdb\u884c\u58f0\u660e\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570 RequestedSize \u7b49\u540c\u4e8e pool \u6784\u9020\u51fd\u6570\u4e2d\u7684\u6574\u6570 requested_size \uff0c\u53ef\u4ee5\u6307\u793a pool \u5206\u914d\u7684\u5185\u5b58\u5757\u7684\u5927\u5c0f\u3002 singleton_pool \u7684\u63a5\u53e3\u4e0e pool \u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u5176\u6210\u5458\u51fd\u6570\u5747\u662f\u9759\u6001\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u58f0\u660e singleton_pool \u7684\u5b9e\u4f8b\uff0c\u76f4\u63a5\u7528\u57df\u64cd\u4f5c\u7b26 :: \u6765\u8c03\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u5373\u53ef\u3002\u56e0\u4e3a singleton_pool \u662f\u5355\u4ef6\uff0c\u6240\u4ee5\u5b83\u7684\u751f\u547d\u5468\u671f\u4e0e\u6574\u4e2a\u7a0b\u5e8f\u540c\u6837\u957f\uff0c\u9664\u975e\u624b\u52a8\u8c03\u7528 release_memory() \u6216 purge_memory() \uff0c\u5426\u5219 singleton_pool \u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u6240\u5360\u7528\u7684\u5185\u5b58\u3002\u9664\u4e86\u4ee5\u4e0a\u4e24\u70b9\uff0c singleton_pool \u7684\u7528\u6cd5\u4e0e pool \u5b8c\u5168\u76f8\u540c\u3002 \u4ee5\u4e0b\u4ee3\u7801\u793a\u8303\u4e86 singleton_pool \u7684\u7528\u6cd5\uff1a struct pool_tag {}; typedef singleton_pool < pool_tag , sizeof ( int ) > spl ; //\u5185\u5b58\u6c60\u5b9a\u4e49 int main () { int * p = ( int * ) spl :: malloc (); //\u5206\u914d\u4e00\u4e2a\u6574\u6570\u5185\u5b58\u5757 assert ( spl :: is_from ( p )); spl :: release_memory (); //\u91ca\u653e\u6240\u6709\u672a\u88ab\u5206\u914d\u7684\u5185\u5b58 } //spl \u7684\u5185\u5b58\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u624d\u5b8c\u5168\u91ca\u653e\uff0c\u800c\u4e0d\u662f\u9000\u51fa\u4f5c\u7528\u57df \u5728\u4f7f\u7528 singleton_pool \u65f6\u6700\u597d\u4f7f\u7528 typedef \u6765\u7b80\u5316\u5176\u540d\u79f0\uff0c\u5426\u5219\u4f1a\u4f7f\u7c7b\u578b\u540d\u8fc7\u4e8e\u5197\u957f\u800c\u96be\u4ee5\u4f7f\u7528\u3002","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/00.%20noncopyable/","text":"[[Boost \u7b80\u4ecb#^83e71d|Boost]] \u4e2d\u7684 noncopyable \u5141\u8bb8\u7a0b\u5e8f\u8f7b\u677e\u5730\u5b9e\u73b0\u4e00\u4e2a\u7981\u6b62\u62f7\u8d1d\u7684\u7c7b\u3002 noncopyable \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/noncopyable.hpp> using namespace boost ; \u539f\u7406 \u5728 C++ \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5982\u679c\u4e0d\u660e\u786e\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u751f\u6210\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\u8fd9\u79cd\u64cd\u4f5c\u662f\u6709\u7528\u7684\uff0c\u6bd4\u5982\u53ef\u4ee5\u81ea\u52a8\u652f\u6301 copy() \u3001\u7b26\u5408\u5bb9\u5668\u7684\u62f7\u8d1d\u8bed\u4e49\u3001\u53ef\u4ee5\u653e\u5165\u6807\u51c6\u5bb9\u5668\u5904\u7406\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u7c7b\u7684\u62f7\u8d1d\u8bed\u4e49\uff0c\u5e0c\u671b\u7981\u6b62\u62f7\u8d1d\u5b9e\u4f8b\u3002 \u8fd9\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684 C++ \u60ef\u7528\u6cd5\uff0c\u5176\u539f\u7406\u5f88\u597d\u7406\u89e3\uff0c\u53ea\u9700\u8981\u201c\u79c1\u6709\u5316\u201d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\u5373\u53ef\uff0c\u4f8b\u5982\uff1a class do_not_copy { private : do_not_copy ( const do_not_copy & ); //\u79c1\u6709\u5316\uff0c\u58f0\u660e\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u4ee3\u7801 void operator = ( const do_not_copy & ); //\u79c1\u6709\u5316\uff0c\u58f0\u660e\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u4ee3\u7801 } \u4f46\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u5927\u91cf\u8fd9\u6837\u7684\u7c7b\uff0c\u91cd\u590d\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u76f8\u5f53\u4e4f\u5473\u7684\uff0c\u800c\u4e14\u4ee3\u7801\u51fa\u73b0\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8d8a\u5bb9\u6613\u589e\u52a0\u624b\u5199\u4ee3\u7801\u51fa\u9519\u7684\u6982\u7387\u3002\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u5e26\u53c2\u6570\u7684\u5b8f\u6765\u51cf\u5c11\u91cd\u590d\uff0c\u4f46\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u4e0d\u591f\u201c\u4f18\u96c5\u201d\u3002 \u7528\u6cd5 noncopyable \u4e3a\u5b9e\u73b0\u4e0d\u53ef\u62f7\u8d1d\u7684\u7c7b\u63d0\u4f9b\u4e86\u7b80\u5355\u6e05\u6670\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u4ece boost::noncopyable \u6d3e\u751f\u5373\u53ef\u3002 \u4f7f\u7528 noncopyable\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u7b80\u5316\u4e3a\uff1a class do_not_copy : boost :: noncopyable //\u6ce8\u610f\u8fd9\u91cc\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u79c1\u6709\u7ee7\u627f\u662f\u5141\u8bb8\u7684 { ... }; \u6211\u4eec\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa private \u6216 public \u4fee\u9970\u8bcd\uff0c\u4f46\u5176\u6548\u679c\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u6709\u5176\u4ed6\u4eba\u8bef\u5199\u4e86\u4ee3\u7801\uff08\u5f88\u53ef\u80fd\u662f\u6ca1\u6709\u4ed4\u7ec6\u9605\u8bfb\u63a5\u53e3\u6587\u6863\uff09\uff0c\u4f01\u56fe\u62f7\u8d1d\u6784\u9020\u6216\u8d4b\u503c\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5176\u64cd\u4f5c\u5c06\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u5668\u7684\u5ba1\u67e5\u3002 \u53ea\u8981\u6709\u53ef\u80fd\uff0c\u5c31\u4f7f\u7528 boost::noncopyable \uff0c\u5b83\u660e\u786e\u65e0\u8bef\u5730\u8868\u8fbe\u4e86\u7c7b\u8bbe\u8ba1\u8005\u7684\u610f\u56fe\uff0c\u5bf9\u7528\u6237\u66f4\u52a0\u53cb\u597d\uff0c\u800c\u4e14\u4e0e\u5176\u4ed6 Boost \u5e93\u4e5f\u914d\u5408\u7684\u5f88\u597d\u3002","title":"00. noncopyable"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/00.%20noncopyable/#_1","text":"\u5728 C++ \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5982\u679c\u4e0d\u660e\u786e\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u751f\u6210\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\u8fd9\u79cd\u64cd\u4f5c\u662f\u6709\u7528\u7684\uff0c\u6bd4\u5982\u53ef\u4ee5\u81ea\u52a8\u652f\u6301 copy() \u3001\u7b26\u5408\u5bb9\u5668\u7684\u62f7\u8d1d\u8bed\u4e49\u3001\u53ef\u4ee5\u653e\u5165\u6807\u51c6\u5bb9\u5668\u5904\u7406\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u9700\u8981\u7c7b\u7684\u62f7\u8d1d\u8bed\u4e49\uff0c\u5e0c\u671b\u7981\u6b62\u62f7\u8d1d\u5b9e\u4f8b\u3002 \u8fd9\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684 C++ \u60ef\u7528\u6cd5\uff0c\u5176\u539f\u7406\u5f88\u597d\u7406\u89e3\uff0c\u53ea\u9700\u8981\u201c\u79c1\u6709\u5316\u201d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\u5373\u53ef\uff0c\u4f8b\u5982\uff1a class do_not_copy { private : do_not_copy ( const do_not_copy & ); //\u79c1\u6709\u5316\uff0c\u58f0\u660e\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u4ee3\u7801 void operator = ( const do_not_copy & ); //\u79c1\u6709\u5316\uff0c\u58f0\u660e\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u4ee3\u7801 } \u4f46\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u5927\u91cf\u8fd9\u6837\u7684\u7c7b\uff0c\u91cd\u590d\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u76f8\u5f53\u4e4f\u5473\u7684\uff0c\u800c\u4e14\u4ee3\u7801\u51fa\u73b0\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u8d8a\u5bb9\u6613\u589e\u52a0\u624b\u5199\u4ee3\u7801\u51fa\u9519\u7684\u6982\u7387\u3002\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u5e26\u53c2\u6570\u7684\u5b8f\u6765\u51cf\u5c11\u91cd\u590d\uff0c\u4f46\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u4e0d\u591f\u201c\u4f18\u96c5\u201d\u3002","title":"\u539f\u7406"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/00.%20noncopyable/#_2","text":"noncopyable \u4e3a\u5b9e\u73b0\u4e0d\u53ef\u62f7\u8d1d\u7684\u7c7b\u63d0\u4f9b\u4e86\u7b80\u5355\u6e05\u6670\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u4ece boost::noncopyable \u6d3e\u751f\u5373\u53ef\u3002 \u4f7f\u7528 noncopyable\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u7b80\u5316\u4e3a\uff1a class do_not_copy : boost :: noncopyable //\u6ce8\u610f\u8fd9\u91cc\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u79c1\u6709\u7ee7\u627f\u662f\u5141\u8bb8\u7684 { ... }; \u6211\u4eec\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa private \u6216 public \u4fee\u9970\u8bcd\uff0c\u4f46\u5176\u6548\u679c\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u6709\u5176\u4ed6\u4eba\u8bef\u5199\u4e86\u4ee3\u7801\uff08\u5f88\u53ef\u80fd\u662f\u6ca1\u6709\u4ed4\u7ec6\u9605\u8bfb\u63a5\u53e3\u6587\u6863\uff09\uff0c\u4f01\u56fe\u62f7\u8d1d\u6784\u9020\u6216\u8d4b\u503c\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u5176\u64cd\u4f5c\u5c06\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u5668\u7684\u5ba1\u67e5\u3002 \u53ea\u8981\u6709\u53ef\u80fd\uff0c\u5c31\u4f7f\u7528 boost::noncopyable \uff0c\u5b83\u660e\u786e\u65e0\u8bef\u5730\u8868\u8fbe\u4e86\u7c7b\u8bbe\u8ba1\u8005\u7684\u610f\u56fe\uff0c\u5bf9\u7528\u6237\u66f4\u52a0\u53cb\u597d\uff0c\u800c\u4e14\u4e0e\u5176\u4ed6 Boost \u5e93\u4e5f\u914d\u5408\u7684\u5f88\u597d\u3002","title":"\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/01.%20ignore_unused/","text":"\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u6709\u65f6\u4f1a\u51fa\u73b0\u4e00\u4e9b\u6682\u65f6\u7528\u4e0d\u5230\u4f46\u53c8\u5fc5\u987b\u4fdd\u7559\u7684\u53d8\u91cf\uff0cGCC \u7b49\u7f16\u8bd1\u5668\u4f1a\u5bf9\u6b64\u53d1\u51fa\u8b66\u544a\uff0c\u4f7f\u7528 -Wunused \u53ef\u4ee5\u5173\u95ed\u8fd9\u4e9b\u8b66\u544a\u6d88\u606f\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u6709\u53ef\u80fd\u5bfc\u81f4\u6f5c\u5728\u7684\u9690\u60a3\u3002\u53e4\u8001\u7684\u529e\u6cd5\u662f\u4f7f\u7528 (void)var \u7684\u5f62\u5f0f\u6765\u201c\u4f7f\u7528\u201d\u4e00\u4e0b\u53d8\u91cf\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u542b\u4e49\u4e0d\u660e\u786e\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4\u3002 [[Boost \u7b80\u4ecb#^83e71d|Boost]] \u7a0b\u5e8f\u5e93\u7684 ignore_unused \u7ec4\u4ef6\u5c31\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u4e86\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u539f\u672c\u662f proto \u5e93\u91cc\u7684\u4e00\u4e2a\u5c0f\u5de5\u5177\uff0c\u56e0\u4e3a\u5728\u5f88\u591a\u5176\u4ed6\u7ec4\u4ef6\u4e2d\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u589e\u5f3a\u4e86\u529f\u80fd\u540e\u5907\u88ab\u201c\u6276\u6b63\u201d\u3002 ignore_unused \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4 boost \uff0c\u9700\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a #include <boost/core/ignore_unused.hpp> using namespace boost ; \u57fa\u672c\u7528\u6cd5 ignore_unused \u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f\uff0c\u652f\u6301\u4efb\u610f\u6570\u91cf\u3001\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u201c\u4f7f\u7528\u201d\u4e86\u4e00\u4e0b\uff0c\u4ece\u800c\u201c\u9a97\u201d\u8fc7\u7f16\u8bd1\u5668\uff0c\u8fbe\u5230\u4e0e (void)var \u5b8c\u5168\u76f8\u540c\u7684\u6548\u679c\u3002\u4f46\u5b83\u7684\u547d\u540d\u66f4\u6e05\u6670\uff0c\u5199\u6cd5\u4e5f\u66f4\u7b80\u5355\uff0c\u800c\u4e14\u7531\u4e8e\u4f7f\u7528\u7684\u662f inline \u51fd\u6570\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u5b8c\u5168\u6ca1\u6709\u6548\u7387\u635f\u5931\u3002 \u793a\u8303\u4ee3\u7801\uff1a int func ( int x , int y ) { int a ; ignore_unused ( a ); return x ; } \u6a21\u677f\u7528\u6cd5 ignore_unused \u5e93\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e\u672a\u4f7f\u7528\u7684\u5c40\u90e8\u7c7b\u578b\u5b9a\u4e49\u3002 ignore_unused \u5e93\u7684\u6a21\u677f\u7528\u6cd5\u4e0e\u51fd\u6570\u7684\u7528\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u800c\u662f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u91cc\u5199\u51fa\u8981\u5ffd\u7565\u7684\u7c7b\u578b\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u4e86\u4e00\u4e2atypedef\uff0c\u7136\u540e\u7528ignore_unuse\u5ffd\u7565\u5b83\uff1a void func () { typedef int result_type ; //\u6682\u672a\u4f7f\u7528\u7684\u7c7b\u578b\u5b9a\u4e49 ignore_unused < result_type > (); //\u5ffd\u7565\u672a\u4f7f\u7528\u7684\u7c7b\u578b\u5b9a\u4e49 }","title":"01. ignore unused"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/01.%20ignore_unused/#_1","text":"ignore_unused \u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f\uff0c\u652f\u6301\u4efb\u610f\u6570\u91cf\u3001\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u201c\u4f7f\u7528\u201d\u4e86\u4e00\u4e0b\uff0c\u4ece\u800c\u201c\u9a97\u201d\u8fc7\u7f16\u8bd1\u5668\uff0c\u8fbe\u5230\u4e0e (void)var \u5b8c\u5168\u76f8\u540c\u7684\u6548\u679c\u3002\u4f46\u5b83\u7684\u547d\u540d\u66f4\u6e05\u6670\uff0c\u5199\u6cd5\u4e5f\u66f4\u7b80\u5355\uff0c\u800c\u4e14\u7531\u4e8e\u4f7f\u7528\u7684\u662f inline \u51fd\u6570\uff0c\u6240\u4ee5\u8fd0\u884c\u65f6\u5b8c\u5168\u6ca1\u6709\u6548\u7387\u635f\u5931\u3002 \u793a\u8303\u4ee3\u7801\uff1a int func ( int x , int y ) { int a ; ignore_unused ( a ); return x ; }","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/Boost/02.%20%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/01.%20ignore_unused/#_2","text":"ignore_unused \u5e93\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e\u672a\u4f7f\u7528\u7684\u5c40\u90e8\u7c7b\u578b\u5b9a\u4e49\u3002 ignore_unused \u5e93\u7684\u6a21\u677f\u7528\u6cd5\u4e0e\u51fd\u6570\u7684\u7528\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u800c\u662f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u91cc\u5199\u51fa\u8981\u5ffd\u7565\u7684\u7c7b\u578b\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u4e86\u4e00\u4e2atypedef\uff0c\u7136\u540e\u7528ignore_unuse\u5ffd\u7565\u5b83\uff1a void func () { typedef int result_type ; //\u6682\u672a\u4f7f\u7528\u7684\u7c7b\u578b\u5b9a\u4e49 ignore_unused < result_type > (); //\u5ffd\u7565\u672a\u4f7f\u7528\u7684\u7c7b\u578b\u5b9a\u4e49 }","title":"\u6a21\u677f\u7528\u6cd5"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/000.%20C%2B%2B%2011%20%E7%AE%80%E4%BB%8B/","text":"C++ 11 C++11 \u6807\u51c6\u662f ISO/IEC 14882:2011 - Information technology -- Programming languages -- [[00. C++ \u7b80\u4ecb#C++|C++]] \u7684\u7b80\u79f0\u3002 C++11 \u6807\u51c6\u7531 \u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7 \uff08ISO\uff09\u548c \u56fd\u9645\u7535\u5de5\u59d4\u5458\u4f1a \uff08IEC\uff09\u65d7\u4e0b\u7684 C++ \u6807\u51c6\u59d4\u5458\u4f1a \uff08ISO/IEC JTC1/SC22/WG21\uff09\u4e8e 2011 \u5e748\u670812\u65e5\u516c\u5e03\uff0c\u5e76\u4e8e 2011 \u5e74 9 \u6708\u51fa\u7248\u30022012 \u5e74 2 \u6708 28\u65e5\u7684\u56fd\u9645\u6807\u51c6\u8349\u6848\uff08N3376\uff09\u662f\u6700\u63a5\u8fd1\u4e8e C++11 \u6807\u51c6\u7684\u8349\u6848\uff08\u4ec5\u7f16\u8f91\u4e0a\u7684\u4fee\u6b63\uff09\u3002\u6b64\u6b21\u6807\u51c6\u4e3aC++98 \u53d1\u5e03\u540e 13 \u5e74\u6765\u7b2c\u4e00\u6b21\u91cd\u5927\u4fee\u6b63\u3002","title":"C++ 11"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/000.%20C%2B%2B%2011%20%E7%AE%80%E4%BB%8B/#c-11","text":"C++11 \u6807\u51c6\u662f ISO/IEC 14882:2011 - Information technology -- Programming languages -- [[00. C++ \u7b80\u4ecb#C++|C++]] \u7684\u7b80\u79f0\u3002 C++11 \u6807\u51c6\u7531 \u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7 \uff08ISO\uff09\u548c \u56fd\u9645\u7535\u5de5\u59d4\u5458\u4f1a \uff08IEC\uff09\u65d7\u4e0b\u7684 C++ \u6807\u51c6\u59d4\u5458\u4f1a \uff08ISO/IEC JTC1/SC22/WG21\uff09\u4e8e 2011 \u5e748\u670812\u65e5\u516c\u5e03\uff0c\u5e76\u4e8e 2011 \u5e74 9 \u6708\u51fa\u7248\u30022012 \u5e74 2 \u6708 28\u65e5\u7684\u56fd\u9645\u6807\u51c6\u8349\u6848\uff08N3376\uff09\u662f\u6700\u63a5\u8fd1\u4e8e C++11 \u6807\u51c6\u7684\u8349\u6848\uff08\u4ec5\u7f16\u8f91\u4e0a\u7684\u4fee\u6b63\uff09\u3002\u6b64\u6b21\u6807\u51c6\u4e3aC++98 \u53d1\u5e03\u540e 13 \u5e74\u6765\u7b2c\u4e00\u6b21\u91cd\u5927\u4fee\u6b63\u3002","title":"C++ 11"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/C%2B%2B11%20%E5%AD%97%E7%AC%A6%E4%B8%B2/","text":"C++11 \u5e26\u6765\u7684\u6700\u65b0\u6539\u53d8 string \u5982\u4eca\u63d0\u4f9b\u4e86 front() \u548c back() \uff0c\u7528\u6765\u8bbf\u95ee\u7b2c\u4e00\u5143\u7d20\u548c\u6700\u672b\u5143\u7d20\uff0c\u8fd8\u63d0\u4f9b shrink_to_fit() \u7528\u6765\u7f29\u5c0f\u5bb9\u91cf\u3002 string \u5982\u4eca\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u51fd\u6570\u7528\u6765\u5c06 string \u8f6c\u6362\u4e3a\u6570\u503c\u3002 data() \u548c c_str() \u4e0d\u4f1a\u518d\u9020\u6210\u201c\u6307\u5411 string \u201d\u7684 reference\u3001iterator \u548c pointer \u65e0\u6548\u3002 string \u5982\u4eca\u652f\u6301move\u8bed\u4e49\u4ee5\u53ca\u521d\u503c\u5217\uff08initialize list\uff09\u3002 String Class \u7684\u76ee\u7684 [[00. C++ \u7b80\u4ecb#C++|C++]] \u6807\u51c6\u5e93\u4e2d\u7684 string class \u4f7f\u4f60\u5f97\u4ee5\u5c06 string \u5f53\u4f5c\u4e00\u822c\u7c7b\u578b\u800c\u4e0d\u4f1a\u4ee4\u7528\u6237\u611f\u89c9\u4efb\u4f55\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u50cf\u5bf9\u5f85\u57fa\u7840\u7c7b\u578b\u90a3\u6837\u9488\u5bf9 string \u590d\u5236\u3001\u8d4b\u503c\u548c\u6bd4\u8f83\uff0c\u518d\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u5185\u5b58\u662f\u5426\u8db3\u591f\u3001\u5360\u7528\u7684\u5185\u5b58\u5b9e\u9645\u957f\u5ea6\u7b49\u95ee\u9898\uff0c\u53ea\u9700\u8fd0\u7528\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4ee5 = \u8fdb\u884c\u8d4b\u503c\uff0c\u4ee5 == \u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5 + \u8fdb\u884c\u4e32\u8fde\u3002\u7b80\u800c\u8a00\u4e4b\uff0cC++ \u6807\u51c6\u5e93\u5bf9 string \u7684\u8bbe\u8ba1\u601d\u7ef4\u5c31\u662f\uff0c\u8ba9\u5b83\u7684\u884c\u4e3a\u5c3d\u53ef\u80fd\u50cf\u57fa\u7840\u7c7b\u578b\uff0c\u4e0d\u81f3\u4e8e\u5728\u64cd\u4f5c\u4e0a\u5f15\u8d77\u4ec0\u4e48\u9ebb\u70e6\u3002\u73b0\u4eca\u4e16\u754c\u7684\u6570\u636e\u5904\u7406\u5927\u90e8\u5206\u5c31\u662f string \u7684\u5904\u7406\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4ece C\u3001Fortran \u6216\u7c7b\u4f3c\u8bed\u8a00\u4e00\u8def\u8d70\u6765\u7684\u7a0b\u5e8f\u5458\u800c\u8a00\uff0c\u8fd9\u662f\u975e\u5e38\u91cd\u8981\u7684\u8fdb\u6b65\uff0c\u56e0\u4e3a string \u5728\u90a3\u4e9b\u8bed\u8a00\u4e2d\u5f80\u5f80\u662f\u70e6\u607c\u4e4b\u9884\u6e90\u3002","title":"C++11 \u5e26\u6765\u7684\u6700\u65b0\u6539\u53d8"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/C%2B%2B11%20%E5%AD%97%E7%AC%A6%E4%B8%B2/#c11","text":"string \u5982\u4eca\u63d0\u4f9b\u4e86 front() \u548c back() \uff0c\u7528\u6765\u8bbf\u95ee\u7b2c\u4e00\u5143\u7d20\u548c\u6700\u672b\u5143\u7d20\uff0c\u8fd8\u63d0\u4f9b shrink_to_fit() \u7528\u6765\u7f29\u5c0f\u5bb9\u91cf\u3002 string \u5982\u4eca\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u51fd\u6570\u7528\u6765\u5c06 string \u8f6c\u6362\u4e3a\u6570\u503c\u3002 data() \u548c c_str() \u4e0d\u4f1a\u518d\u9020\u6210\u201c\u6307\u5411 string \u201d\u7684 reference\u3001iterator \u548c pointer \u65e0\u6548\u3002 string \u5982\u4eca\u652f\u6301move\u8bed\u4e49\u4ee5\u53ca\u521d\u503c\u5217\uff08initialize list\uff09\u3002","title":"C++11 \u5e26\u6765\u7684\u6700\u65b0\u6539\u53d8"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/C%2B%2B11%20%E5%AD%97%E7%AC%A6%E4%B8%B2/#string-class","text":"[[00. C++ \u7b80\u4ecb#C++|C++]] \u6807\u51c6\u5e93\u4e2d\u7684 string class \u4f7f\u4f60\u5f97\u4ee5\u5c06 string \u5f53\u4f5c\u4e00\u822c\u7c7b\u578b\u800c\u4e0d\u4f1a\u4ee4\u7528\u6237\u611f\u89c9\u4efb\u4f55\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u50cf\u5bf9\u5f85\u57fa\u7840\u7c7b\u578b\u90a3\u6837\u9488\u5bf9 string \u590d\u5236\u3001\u8d4b\u503c\u548c\u6bd4\u8f83\uff0c\u518d\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u5185\u5b58\u662f\u5426\u8db3\u591f\u3001\u5360\u7528\u7684\u5185\u5b58\u5b9e\u9645\u957f\u5ea6\u7b49\u95ee\u9898\uff0c\u53ea\u9700\u8fd0\u7528\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4ee5 = \u8fdb\u884c\u8d4b\u503c\uff0c\u4ee5 == \u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5 + \u8fdb\u884c\u4e32\u8fde\u3002\u7b80\u800c\u8a00\u4e4b\uff0cC++ \u6807\u51c6\u5e93\u5bf9 string \u7684\u8bbe\u8ba1\u601d\u7ef4\u5c31\u662f\uff0c\u8ba9\u5b83\u7684\u884c\u4e3a\u5c3d\u53ef\u80fd\u50cf\u57fa\u7840\u7c7b\u578b\uff0c\u4e0d\u81f3\u4e8e\u5728\u64cd\u4f5c\u4e0a\u5f15\u8d77\u4ec0\u4e48\u9ebb\u70e6\u3002\u73b0\u4eca\u4e16\u754c\u7684\u6570\u636e\u5904\u7406\u5927\u90e8\u5206\u5c31\u662f string \u7684\u5904\u7406\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4ece C\u3001Fortran \u6216\u7c7b\u4f3c\u8bed\u8a00\u4e00\u8def\u8d70\u6765\u7684\u7a0b\u5e8f\u5458\u800c\u8a00\uff0c\u8fd9\u662f\u975e\u5e38\u91cd\u8981\u7684\u8fdb\u6b65\uff0c\u56e0\u4e3a string \u5728\u90a3\u4e9b\u8bed\u8a00\u4e2d\u5f80\u5f80\u662f\u70e6\u607c\u4e4b\u9884\u6e90\u3002","title":"String Class \u7684\u76ee\u7684"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/C%2B%2B11%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96/","text":"#include <chrono> #include <ctime> CString CHQConfigFileCheckDlg::GetLocalTimeString () { auto timeNow = std :: chrono :: system_clock :: now (); auto time = std :: chrono :: system_clock :: to_time_t ( timeNow ); CString strTime = _T ( \"\" ); char tmp [ 128 ] = { 0 }; tm t ; localtime_s ( & t , & time ); strftime ( tmp , 128 , \"%F %T\" , & t ); strTime = tmp ; return strTime ; }","title":"C++11\u65f6\u95f4\u683c\u5f0f\u5316"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/","text":"__func__ \u9884\u5b9a\u4e49\u6807\u8bc6\u7b26 __func__ \u7684\u529f\u80fd\u662f\u8fd4\u56de\u6240\u5728\u51fd\u6570\u7684\u540d\u5b57\uff0c\u8fd9\u5bf9\u4e8e\u8f7b\u91cf\u7ea7\u7684\u8c03\u8bd5\u4ee3\u7801\u5177\u6709\u5341\u5206\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5728[[000. C++ 11 \u7b80\u4ecb#C++ 11|C++11]]\u4e2d\uff0c\u6807\u51c6\u751a\u81f3\u5141\u8bb8\u5176\u4f7f\u7528\u5728\u7c7b\u6216\u8005\u7ed3\u6784\u4f53\u4e2d\u3002 _Pragma \u64cd\u4f5c\u7b26 \u5728 C/C++ \u6807\u51c6\u4e2d\uff0c #pragma \u662f\u4e00\u6761\u9884\u5904\u7406\u7684\u6307\u4ee4\uff0c\u7528\u6765\u5411\u7f16\u8bd1\u5668\u4f20\u5230\u8bed\u8a00\u6807\u51c6\u4ee5\u5916\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5f53\u4ee3\u7801\u7684\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86 #pragema once \uff0c\u90a3\u4e48\u8be5\u5934\u6587\u4ef6\u5e94\u8be5\u53ea\u88ab\u7f16\u8bd1\u4e00\u6b21\u3002\u8fd9\u4e0e\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u6765\u5b9a\u4e49\u5934\u6587\u4ef6\u6240\u8fbe\u5230\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 #ifndef THIS_HEADER #define THIS_HEADER //\u4e00\u4e9b\u5934\u6587\u4ef6\u7684\u5b9a\u4e49 #endif \u5728 C++11 \u4e2d\uff0c\u6807\u51c6\u5b9a\u4e49\u4e86\u4e0e\u9884\u5904\u7406\u6307\u4ee4 #pragma \u529f\u80fd\u76f8\u540c\u7684\u64cd\u4f5c\u7b26 _Pragma \u3002 _Pragma \u64cd\u4f5c\u7b26\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a _Pragma ( \u5b57\u7b26\u4e32\u5e38\u91cf ) \u5176\u4f7f\u7528\u65b9\u6cd5\u8ddf sizeof \u7b49\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u5c06\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u53c2\u6570\u5199\u5728\u62ec\u53f7\u5185\u5373\u53ef\u3002\u90a3\u4e48\u8981\u8fbe\u5230\u4e0e\u4e0a\u4f8b #pragma \u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5219\u53ea\u9700\u8981\u5982\u4e0b\u4ee3\u7801\u5373\u53ef\u3002 _Pragma ( \"once\" ); \u7531\u4e8e _Pragma \u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5728\u4e00\u4e9b\u5b8f\u4e2d\uff0c\u800c #pragma \u5219\u4e0d\u80fd\u5728\u5b8f\u4e2d\u5c55\u5f00\uff0c\u56e0\u6b64 _Pragma \u5177\u6709\u66f4\u5927\u7684\u7075\u6d3b\u6027\u3002 \u5bbd\u7a84\u5b57\u7b26\u4e32\u7684\u8fde\u63a5 \u5728\u4e4b\u524d\u7684 C++ \u6807\u51c6\u4e2d\uff0c\u5c06\u7a84\u5b57\u7b26\u4e32\uff08 char \uff09\u8f6c\u6362\u6210\u5bbd\u5b57\u7b26\u4e32\uff08 wchar_t \uff09\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\u800c\u5728C++11 \u6807\u51c6\u4e2d\uff0c\u5728\u5c06\u7a84\u5b57\u7b26\u4e32\u548c\u5bbd\u5b57\u7b26\u4e32\u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u652f\u6301 C++11 \u6807\u51c6\u7684\u7f16\u8bd1\u5668\u4f1a\u5c06\u7a84\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bbd\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u518d\u4e0e\u5bbd\u5b57\u7b26\u4e32\u8fdb\u884c\u8fde\u63a5\u3002 \u5b8f __cplusplus \u5728C\u4e0eC++\u6df7\u5408\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\uff0c\u5e38\u5e38\u4f1a\u5728\u5934\u6587\u4ef6\u91cc\u770b\u5230\u5982\u4e0b\u58f0\u660e\uff1a #ifdef __cplusplus extern \"C\" { #endif //\u4e00\u4e9b\u4ee3\u7801 #ifdef __cplusplus } #endif \u8fd9\u79cd\u7c7b\u578b\u7684\u5934\u6587\u4ef6\u53ef\u4ee5\u88ab #include \u5230C\u6587\u4ef6\u4e2d\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e5f\u53ef\u4ee5\u88ab #include \u5230C++\u6587\u4ef6\u4e2d\u8fdb\u884c\u7f16\u8bd1\u3002\u7531\u4e8e extern \"C\" \u53ef\u4ee5\u6291\u5236C++\u5bf9\u51fd\u6570\u540d\u3001\u53d8\u91cf\u540d\u7b49\u7b26\u53f7\uff08symbol\uff09\u8fdb\u884c\u540d\u79f0\u91cd\u6574\uff0c\u56e0\u6b64\u7f16\u8bd1\u51fa\u7684C\u76ee\u6807\u6587\u4ef6\u548cC++\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3001\u51fd\u6570\u540d\u79f0\u7b49\u7b26\u53f7\u90fd\u662f\u76f8\u540c\u7684\uff08\u5426\u5219\u4e0d\u540c\uff09\uff0c\u94fe\u63a5\u5668\u53ef\u4ee5\u53ef\u9760\u5730\u5bf9\u4e24\u79cd\u7c7b\u578b\u7684\u76ee\u6807\u6587\u4ef6\u8fdb\u884c\u94fe\u63a5\u3002 \u8fd9\u662fC\u4e0eC++\u6df7\u7528\u5934\u6587\u4ef6\u7684\u5178\u578b\u505a\u6cd5\u3002 \u9274\u4e8e\u4ee5\u4e0a\u7684\u505a\u6cd5\uff0c\u7a0b\u5e8f\u5458\u53ef\u80fd\u8ba4\u4e3a __cplusplus \u8fd9\u4e2a\u5b8f\u53ea\u6709\u201c\u88ab\u5b9a\u4e49\u4e86\u201d\u548c\u201c\u672a\u5b9a\u4e49\u201d\u4e24\u79cd\u72b6\u6001\u3002\u4e8b\u5b9e\u4e0a\uff0c __cplusplus \u8fd9\u4e2a\u5b8f\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6574\u578b\u503c\u3002\u800c\u4e14\u968f\u7740\u6807\u51c6\u53d8\u5316\uff0c __cplusplus \u5b8f\u4e00\u822c\u4f1a\u662f\u4e00\u4e2a\u6bd4\u4ee5\u5f80\u6807\u51c6\u4e2d\u66f4\u5927\u7684\u503c\u3002\u6bd4\u5982\u5728C++03\u6807\u51c6\u4e2d\uff0c __cplusplus \u7684\u503c\u88ab\u9884\u5b9a\u4e3a 199711L \uff0c\u800c\u5728C++11\u6807\u51c6\u4e2d\uff0c\u5b8f __cplusplus \u88ab\u9884\u5b9a\u4e49\u4e3a 201103L \u3002\u8fd9\u70b9\u53d8\u5316\u53ef\u4ee5\u4e3a\u4ee3\u7801\u6240\u7528\u3002\u6bd4\u5982\u7a0b\u5e8f\u5458\u5728\u60f3\u786e\u5b9a\u4ee3\u7801\u662f\u4f7f\u7528\u652f\u6301C++11\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u6cd5\u8fdb\u884c\u68c0\u6d4b\uff1a #if __cplusplus < 201103L #error \"should use C++11 implementation\" #endif \u8fd9\u91cc\u4f7f\u7528\u4e86\u9884\u5904\u7406\u6307\u4ee4 #error \uff0c\u8fd9\u4f7f\u5f97\u4e0d\u652f\u6301C++11\u7684\u4ee3\u7801\u7f16\u8bd1\u5668\u7acb\u5373\u62a5\u9519\u5e76\u7ec8\u6b62\u7f16\u8bd1\u3002 VS2019 __cplusplus \u5b8f\u7684\u503c\u4ecd\u4e3a 199711L \u7684\u95ee\u9898 \u56e0\u4e3a\u5f88\u591a\u73b0\u6709\u4ee3\u7801\u9700\u8981\u6b64\u5b8f\u7684\u503c\u4e0e 199711L \u5339\u914d\uff0c\u6240\u4ee5VS\u7cfb\u5217\u7684\u7f16\u8bd1\u5668\u4e0d\u4f1a\u66f4\u6539\u6b64\u5b8f\u7684\u503c\u3002\u5bf9\u6b64\u5fae\u8f6f\u5728VS2017\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u63d0\u4f9b\u4e86 /Zc:__cplusplus \u9009\u9879\u7528\u6765\u89e3\u51b3\u8be5\u95ee\u9898\u3002 \u6253\u5f00\u9879\u76ee\u7684\u201c\u5c5e\u6027\u9875\u201d \u5bf9\u8bdd\u6846\uff1b \u9009\u62e9 \"\u914d\u7f6e\u5c5e\u6027\" \" > c/c + + > \u547d\u4ee4\u884c\" \u5c5e\u6027\u9875\uff1b \u5c06 /Zc:__cplusplus \u6216 /Zc:__cplusplus- \u6dfb\u52a0\u5230\u201c\u5176\u4ed6\u9009\u9879:\u201d\u7a97\u683c\u3002 \u53c2\u8003\u94fe\u63a5\uff1a https://docs.microsoft.com/zh-cn/cpp/build/reference/zc-cplusplus?view=msvc-160&viewFallbackFrom=vs-2019 \u9759\u6001\u65ad\u8a00 \u65ad\u8a00\uff1a\u8fd0\u884c\u65f6\u4e0e\u9884\u5904\u7406\u65f6 \u65ad\u8a00\uff08assertion\uff09\u662f\u4e00\u79cd\u7f16\u7a0b\u4e2d\u5e38\u7528\u7684\u624b\u6bb5\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u65ad\u8a00\u5c31\u662f\u5c06\u4e00\u4e2a\u8fd4\u56de\u503c\u603b\u662f\u9700\u8981\u4e3a\u771f\u7684\u5224\u522b\u5f0f\u653e\u5728\u8bed\u53e5\u4e2d\uff0c\u7528\u4e8e\u6392\u9664\u5728\u8bbe\u8ba1\u7684\u903b\u8f91\u4e0a\u4e0d\u5e94\u8be5\u4ea7\u751f\u7684\u60c5\u51b5\u3002 \u4ece\u4e00\u4e9b\u610f\u4e49\u4e0a\u8bb2\uff0c\u65ad\u8a00\u5e76\u4e0d\u662f\u6b63\u5e38\u7a0b\u5e8f\u6240\u5fc5\u9700\u7684\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u7a0b\u5e8f\u8c03\u8bd5\u6765\u8bf4\uff0c\u901a\u5e38\u65ad\u8a00\u80fd\u591f\u5e2e\u52a9\u7a0b\u5e8f\u5f00\u53d1\u8005\u5feb\u901f\u5b9a\u4f4d\u90a3\u4e9b\u8fdd\u53cd\u4e86\u67d0\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u7a0b\u5e8f\u9519\u8bef\u3002\u5728C++\u4e2d\uff0c\u6807\u51c6\u5728 <cassert> \u6216 <asser.h> \u5934\u6587\u4ef6\u4e2d\u4e3a\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86 assert \u5b8f\uff0c\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u65ad\u8a00\u3002 \u5728C++\u4e2d\uff0c\u7a0b\u5e8f\u5458\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5b8f NDEBUG \u6765\u7981\u7528assert\u5b8f\u3002\u8fd9\u5bf9\u53d1\u5e03\u7a0b\u5e8f\u6765\u8bf4\u8fd8\u662f\u5fc5\u8981\u7684\u3002\u56e0\u4e3a\u7a0b\u5e8f\u7528\u6237\u5bf9\u7a0b\u5e8f\u9000\u51fa\u603b\u662f\u654f\u611f\u7684\uff0c\u800c\u4e14\u90e8\u5206\u7684\u7a0b\u5e8f\u9519\u8bef\u4e5f\u672a\u5fc5\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5168\u90e8\u529f\u80fd\u5931\u6548\u3002\u90a3\u4e48\u901a\u8fc7\u5b9a\u4e49 NDEBUG \u5b8f\u53d1\u5e03\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u5c3d\u91cf\u907f\u514d\u7a0b\u5e8f\u9000\u51fa\u7684\u72b6\u51b5\uff0c\u800c\u5f53\u7a0b\u5e8f\u6709\u95ee\u9898\u65f6\uff0c\u901a\u8fc7\u6ca1\u6709\u5b9a\u4e49 NDEBUG \u5b8f\u7684\u7248\u672c\uff0c\u5219\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u627e\u5230\u51fa\u95ee\u9898\u7684\u4f4d\u7f6e\u3002 assert \u5b8f\u5728 <cassert> \u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u4e0b\u5217\u5f62\u5f0f\uff1a #ifdef NDEBUG #define assert(expr) (static_cast<void>(0)) #else ... #endif \u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u5b9a\u4e49\u4e86 NDEBUG \u5b8f\uff0c assert \u5b8f\u5c06\u88ab\u5c55\u5f00\u4e3a\u4e00\u6761\u65e0\u610f\u4e49\u7684C\u8bed\u53e5\uff0c\u8fd9\u901a\u5e38\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u6389\u3002 \u9759\u6001\u65ad\u8a00\u4e0e static_assert \u65ad\u8a00 assert \u5b8f\u53ea\u6709\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u800c #error \u53ea\u5728\u7f16\u8bd1\u5668\u9884\u5904\u7406\u65f6\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u7f16\u8bd1\u65f6\u80fd\u505a\u4e00\u4e9b\u65ad\u8a00\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5229\u7528\u8bed\u8a00\u89c4\u5219\u5b9e\u73b0\u9759\u6001\u65ad\u8a00\u7684\u8ba8\u8bba\u975e\u5e38\u591a\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u5b9e\u73b0\u662f\u5f00\u6e90\u5e93Boost\u5185\u7f6e\u7684 BOOST_STATIC_ASSERT \u65ad\u8a00\u673a\u5236\uff08\u5229\u7528 sizeof \u64cd\u4f5c\u7b26\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u201c\u96640\u201d\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u62a5\u9519\u8fd9\u4e2a\u7279\u6027\u6765\u5b9e\u73b0\u9759\u6001\u65ad\u8a00\u3002 #define assert_static(e) \\ do \\ { \\ enum { assert_static__ = 1/(e) }; } while ( 0 ) \u8fd9\u4e2a\u5b8f\u4e2d\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u662f 1/(e) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u3002 \u5b9e\u673a\u8fd0\u884c\u4f1a\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u9664\u96f6\u9519\u8bef\u3002 \u65e0\u8bba\u662f\u54ea\u79cd\u65b9\u5f0f\u7684\u9759\u6001\u65ad\u8a00\uff0c\u5176\u7f3a\u9677\u90fd\u662f\u5f88\u660e\u663e\u7684\uff1a\u8bca\u65ad\u4fe1\u606f\u4e0d\u591f\u5145\u5206\uff0c\u4e0d\u719f\u6089\u8be5\u9759\u6001\u65ad\u8a00\u5b9e\u73b0\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4e00\u65f6\u65e0\u6cd5\u5c06\u9519\u8bef\u5bf9\u5e94\u5230\u65ad\u8a00\u9519\u8bef\u4e0a\uff0c\u4ece\u800c\u96be\u4ee5\u51c6\u786e\u5b9a\u4f4d\u9519\u8bef\u7684\u6839\u6e90\u3002 \u5728C++11\u6807\u51c6\u4e2d\uff0c\u5f15\u5165\u4e86 static_assert \u65ad\u8a00\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 static_assert \u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u65ad\u8a00\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u901a\u5e38\u9700\u8981\u8fd4\u56de\u4e00\u4e2a bool \u503c\uff1b\u4e00\u4e2a\u5219\u662f\u8b66\u544a\u4fe1\u606f\uff0c\u5b83\u901a\u5e38\u4e5f\u5c31\u662f\u4e00\u6bb5\u5b57\u7b26\u4e32\u3002\u7531\u4e8e static_assert \u662f\u7f16\u8bd1\u65f6\u671f\u7684\u65ad\u8a00\uff0c\u5176\u4f7f\u7528\u8303\u56f4\u4e0d\u50cf assert \u4e00\u6837\u53d7\u5230\u9650\u5236\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c static_assert \u53ef\u4ee5\u62e5\u6709\u4efb\u4f55\u540d\u5b57\u7a7a\u95f4\u3002\u4f8b\u5982\uff1a static_assert ( sizeof ( int ) == 8 , \"This 64-bit machine should follow this!\" ); int main () { return 0 ; } \u5c06 static_assert \u5199\u5728\u51fd\u6570\u4f53\u5916\u901a\u5e38\u662f\u8f83\u597d\u7684\u9009\u62e9\uff0c\u8fd9\u8ba9\u4ee3\u7801\u9605\u8bfb\u8005\u53ef\u4ee5\u8f83\u5bb9\u6613\u53d1\u73b0 static_assert \u4e3a\u65ad\u8a00\u800c\u975e\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u3002 \u5fc5\u987b\u6ce8\u610f\u7684\u662f\uff0c static_assert \u65ad\u8a00\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5fc5\u987b\u662f\u5728\u7f16\u8bd1\u65f6\u671f\u53ef\u4ee5\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f\uff0c\u5373\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u4f7f\u7528\u4e86\u53d8\u91cf\uff0c\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 noexcept \u4fee\u9970\u7b26\u4e0e noexcept \u64cd\u4f5c\u7b26 noexcept \u5f62\u5982\u5176\u540d\uff0c\u8868\u793a\u5176\u4fee\u9970\u7684\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u4e0e throw() \u52a8\u6001\u5f02\u5e38\u58f0\u660e\u4e0d\u540c\u7684\u662f\uff0c\u5728C++11\u4e2d\u5982\u679c noexcept \u4fee\u9970\u7684\u51fd\u6570\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u8c03\u7528 std::terminate() \u51fd\u6570\u6765\u7ec8\u6b62\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u8fd9\u6bd4\u57fa\u4e8e\u5f02\u5e38\u673a\u5236\u7684 throw() \u5728\u6548\u7387\u4e0a\u4f1a\u9ad8\u4e00\u4e9b\u3002\u8fd9\u662f\u56e0\u4e3a\u5f02\u5e38\u673a\u5236\u4f1a\u5e26\u6765\u4e00\u4e9b\u989d\u5916\u5f00\u9500\uff0c\u6bd4\u5982\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u51fd\u6570\u6808\u88ab\u4f9d\u6b21\u5730\u5c55\u5f00\uff08unwind\uff09\uff0c\u5e76\u4f9d\u5e27\u8c03\u7528\u5728\u672c\u5e27\u4e2d\u5df2\u6784\u9020\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570\u7b49\u3002 \u4ece\u8bed\u6cd5\u4e0a\u8bb2\uff0c noexcept \u4fee\u9970\u7b26\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u5c31\u662f\u7b80\u5355\u5730\u5728\u51fd\u6570\u58f0\u660e\u540e\u52a0\u4e0a noexcept \u5173\u952e\u5b57\u3002\u6bd4\u5982\uff1a void excpt_func () noexcept ; \u53e6\u5916\u4e00\u79cd\u5219\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a void ecpt_func () noexcept ( \u5e38\u91cf\u8868\u8fbe\u5f0f ); \u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4f1a\u88ab\u8f6c\u6362\u6210\u4e00\u4e2a bool \u7c7b\u578b\u7684\u503c\u3002\u8be5\u503c\u4e3a true \uff0c\u8868\u793a\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u53cd\u4e4b\uff0c\u5219\u6709\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002\u8fd9\u91cc\uff0c\u4e0d\u5e26\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684 noexcept \u76f8\u5f53\u4e8e\u58f0\u660e\u4e86 noexcept(true) \uff0c\u5373\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728C++11\u4e2d\u4f7f\u7528 noexcept \u53ef\u4ee5\u6709\u6548\u5730\u963b\u6b62\u5f02\u5e38\u7684\u4f20\u64ad\u4e0e\u6269\u6563\u3002 noexcept \u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u7b26\u662f\uff0c\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u6a21\u677f\u3002\u6bd4\u5982\uff1a template < class T > void func () noexcept ( noexcept ( T ())) {} \u8fd9\u91cc\uff0c func \u51fd\u6570\u662f\u5426\u662f\u4e00\u4e2a noexcept \u7684\u51fd\u6570\uff0c\u5c06\u7531 T() \u8868\u8fbe\u5f0f\u662f\u5426\u4f1a\u629b\u51fa\u5f02\u5e38\u6240\u51b3\u5b9a\u3002\u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a noexcept \u5c31\u662f\u4e00\u4e2a noexcept \u64cd\u4f5c\u7b26\u3002\u5f53\u5176\u53c2\u6570\u662f\u4e00\u4e2a\u6709\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u5176\u8fd4\u56de\u503c\u4e3a false \uff0c\u53cd\u4e4b\u5219\u4e3a true \u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u6a21\u677f\u51fd\u6570\u6839\u636e\u6761\u4ef6\u5b9e\u73b0 noexcept \u4fee\u9970\u7684\u7248\u672c\u6216\u65e0 noexcept \u4fee\u9970\u7684\u7248\u672c\u3002\u4ece\u6cdb\u578b\u7f16\u7a0b\u7684\u89d2\u5ea6\u770b\u6765\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4fdd\u8bc1\u4e86\u5173\u4e8e\u201c\u51fd\u6570\u662f\u5426\u629b\u51fa\u5f02\u5e38\u201d\u8fd9\u6837\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u8868\u8fbe\u5f0f\u8fdb\u884c\u63a8\u5bfc\u3002\u4e00\u6b21\u8fd9\u4e5f\u53ef\u4ee5\u89c6\u4f5cC++11\u4e3a\u4e86\u66f4\u597d\u5730\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u800c\u5f15\u5165\u7684\u7279\u6027\u3002 \u867d\u7136 noexcept \u4fee\u9970\u7684\u51fd\u6570\u901a\u8fc7 std::terminate() \u7684\u8c03\u7528\u6765\u7ed3\u675f\u7a0b\u5e8f\u7684\u6267\u884c\u7684\u65b9\u5f0f\u53ef\u80fd\u4f1a\u5e26\u6765\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u65e0\u6cd5\u4fdd\u8bc1\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u7684\u6b63\u5e38\u8c03\u7528\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6808\u7684\u81ea\u52a8\u91ca\u653e\u7b49\uff0c\u4f46\u5f88\u591a\u65f6\u5019\uff0c\u201c\u66b4\u529b\u201d\u5730\u7ec8\u6b62\u6574\u4e2a\u7a0b\u5e8f\u786e\u5b9e\u662f\u5f88\u7b80\u5355\u6709\u6548\u7684\u505a\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c noexcept \u88ab\u5e7f\u6cdb\u5730\u3001\u7cfb\u7edf\u5730\u5e94\u7528\u5728C++11\u7684\u6807\u51c6\u5e93\u4e2d\uff0c\u7528\u4e8e\u63d0\u9ad8\u6807\u51c6\u5e93\u7684\u6027\u80fd\uff0c\u4ee5\u53ca\u6ee1\u8db3\u4e00\u4e9b\u963b\u6b62\u5f02\u5e38\u6269\u6563\u7684\u9700\u6c42\u3002 \u6bd4\u5982\u5728C++98\u4e2d\uff0c\u5b58\u5728\u7740\u4f7f\u7528 throw() \u6765\u58f0\u660e\u4e0d\u629b\u51fa\u5f02\u5e38\u7684\u51fd\u6570\u3002 template < class T > class A { public : static constexpr T min () throw () { return T (); } static constexpr T max () throw () { return T (); } static constexpr T lowest () throw () { return T (); } ... }; \u800c\u5728C++11\u4e2d\uff0c\u5219\u4f7f\u7528 noexcept \u6765\u66ff\u6362 throw() \u3002 template < class T > class A { static constexpr T min () noexcept { return T (); } static constexpr T max () noexcept { return T (); } static constexpr T lowest () noexcept { return T (); } ... }; \u53c8\u6bd4\u5982\uff0c\u5728C++98\u4e2d\uff0c new \u53ef\u80fd\u4f1a\u5305\u542b\u4e00\u4e9b\u629b\u51fa\u7684 std::bad_alloc \u5f02\u5e38\u3002 void * operator new ( std :: size_t ) throw ( std :: bad_alloc ); void * operator new []( std :: size_t ) throw ( std :: bad_alloc ); \u800c\u5728C++11\u4e2d\uff0c\u5219\u4f7f\u7528 noexcept(false) \u6765\u8fdb\u884c\u66ff\u4ee3\u3002 void * operator new ( std :: size_t ) noexcept ( false ); void * operator new []( std :: size_t ) noexcept ( false ); \u5f53\u7136\uff0c noexcept \u66f4\u5927\u7684\u4f5c\u7528\u662f\u4fdd\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u3002\u6bd4\u5982\u4e00\u4e2a\u7c7b\u6790\u6784\u51fd\u6570\u4e0d\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5e38\u88ab\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684 delete \u51fd\u6570\u6765\u8bf4\uff0cC++11\u9ed8\u8ba4\u5c06 delete \u51fd\u6570\u8bbe\u7f6e\u6210 noexcept \uff0c\u5c31\u53ef\u4ee5\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\u3002 void operator delete ( void * ) noexcept ; void operator delete []( void * ) noexcept ; \u800c\u540c\u6837\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0cC++11\u6807\u51c6\u4e2d\u8ba9\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9ed8\u8ba4\u4e5f\u662f noexcept(true) \u7684\u3002\u5f53\u7136\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u663e\u5f0f\u5730\u4e3a\u6790\u6784\u51fd\u6570\u6307\u5b9a\u4e86 noexcept \uff0c\u6216\u8005\u7c7b\u7684\u57fa\u7c7b\u6216\u6210\u5458\u6709 noexcept(false) \u7684\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u4fdd\u6301\u9ed8\u8ba4\u503c\u3002 \u5feb\u901f\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf \u5728C++98\u4e2d\uff0c\u652f\u6301\u4e86\u5728\u7c7b\u58f0\u660e\u4e2d\u4f7f\u7528\u7b49\u53f7 = \u52a0\u521d\u59cb\u503c\u7684\u65b9\u5f0f\uff0c\u6765\u521d\u59cb\u5316 \u7c7b\u4e2d\u9759\u6001\u6210\u5458\u5e38\u91cf \u3002\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f\u4e5f\u88ab\u79f0\u4e3a\u201c\u5c31\u5730\u58f0\u660e\u201d\uff0cC++98\u5bf9\u7c7b\u4e2d\u5c31\u5730\u58f0\u660e\u7684\u8981\u6c42\u975e\u5e38\u9ad8\u3002\u5982\u679c\u9759\u6001\u6210\u5458\u4e0d\u6ee1\u8db3\u5e38\u91cf\u6027\uff0c\u5219\u4e0d\u53ef\u4ee5\u5c31\u5730\u58f0\u660e\uff0c\u800c\u4e14\u5373\u4f7f\u5e38\u91cf\u7684\u9759\u6001\u6210\u5458\u4e5f\u53ea\u80fd\u662f\u6574\u578b\u6216\u8005\u679a\u4e3e\u578b\u624d\u80fd\u5c31\u5730\u521d\u59cb\u5316\u3002\u800c\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5219\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u3002\u4f8b\u5b50\uff1a class Init { public : Init () : a ( 0 ) {} Init ( int d ) : a ( d ) {} private : int a ; const static int b = 0 ; int c = 1 ; //\u6210\u5458\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static int d = 0 ; //\u6210\u5458\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static const double e = 1.3 ; //\u975e\u6574\u578b\u6216\u8005\u679a\u4e3e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static const char * const f = \"e\" ; //\u975e\u6574\u578b\u6216\u8005\u679a\u4e3e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 }; \u5728C++11\u4e2d\uff0c\u6807\u51c6\u5141\u8bb8\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5f62\u5f0f\u6709\u591a\u79cd\u5f62\u5f0f\u3002\u5177\u4f53\u800c\u8a00\uff0c\u9664\u4e86\u521d\u59cb\u5316\u5217\u8868\u5916\uff0c\u5728C++11\u4e2d\uff0c\u6807\u51c6\u8fd8\u5141\u8bb8\u4f7f\u7528\u7b49\u53f7 = \u6216\u8005\u82b1\u62ec\u53f7 {} \u8fdb\u884c\u5c31\u5730\u7684\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u3002\u6bd4\u5982\uff1a struct init { int a = 1 ; double b { 1.2 }; }; \u8fd9\u79cd\u82b1\u62ec\u53f7\u5f0f\u7684\u96c6\u5408\uff08\u5217\u8868\uff09\u521d\u59cb\u5316\u5df2\u7ecf\u6210\u4e3aC++11\u4e2d\u521d\u59cb\u5316\u58f0\u660e\u7684\u4e00\u79cd\u901a\u7528\u5f62\u5f0f\uff0c\u800c\u5176\u6548\u679c\u7c7b\u4f3c\u4e8eC++98\u4e2d\u4f7f\u7528\u5706\u62ec\u53f7()\u5bf9\u81ea\u5b9a\u4e49\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u5217\u8868\u521d\u59cb\u5316\u3002 \u5728C++11\u6807\u51c6\u652f\u6301\u4e86\u5c31\u5730\u521d\u59cb\u5316\u975e\u9759\u6001\u6210\u5458\u7684\u540c\u65f6\uff0c\u521d\u59cb\u5316\u5217\u8868\u8fd9\u4e2a\u624b\u6bb5\u4e5f\u88ab\u4fdd\u7559\u4e0b\u6765\u4e86\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4e3a\u540c\u4e00\u6210\u5458\u53d8\u91cf\u65e2\u58f0\u660e\u5c31\u5730\u7684\u5217\u8868\u521d\u59cb\u5316\uff0c\u53c8\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u53ea\u4e0d\u8fc7\u521d\u59cb\u5316\u5217\u8868\u603b\u662f\u770b\u8d77\u6765\u201c\u540e\u4f5c\u7528\u4e8e\u201d\u975e\u9759\u6001\u6210\u5458\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u521d\u59cb\u5316\u5217\u8868\u7684\u6548\u679c\u603b\u662f\u4f18\u5148\u4e8e\u5c31\u5730\u521d\u59cb\u5316\u7684\u3002 final / override \u63a7\u5236 final \u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u4f7f\u6d3e\u751f\u7c7b\u4e0d\u53ef\u8986\u76d6\u5b83\u6240\u4fee\u9970\u7684\u865a\u51fd\u6570\u3002 struct Object { virtual void fun () = 0 ; }; struct Base : public Object { void fun () final ; //\u58f0\u660e\u4e3afinal }; struct Derived : public Base { void fun (); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 }; C++11\u4e2d\u5141\u8bb8\u5c06\u7c7b\u6807\u8bb0\u4e3a final \uff0c\u65b9\u6cd5\u662f\u76f4\u63a5\u5728\u7c7b\u540d\u79f0\u540e\u9762\u4f7f\u7528\u5173\u952e\u5b57 final \uff0c\u5982\u6b64\uff0c\u610f\u5473\u7740\u7ee7\u627f\u8be5\u7c7b\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a class Base final { ... }; \u5728C++11\u4e2d\u4e3a\u4e86\u5e2e\u52a9\u7a0b\u5e8f\u5458\u5199\u7ee7\u627f\u7ed3\u6784\u590d\u6742\u7684\u7c7b\u578b\uff0c\u5f15\u5165\u4e86\u865a\u51fd\u6570\u63cf\u8ff0\u7b26 override \uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u5728\u865a\u51fd\u6570\u58f0\u660e\u65f6\u4f7f\u7528\u4e86 override \u63cf\u8ff0\u7b26\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u5fc5\u987b\u91cd\u8f7d\u5176\u57fa\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\uff0c\u5426\u5219\u4ee3\u7801\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002 \u7ee7\u627f\u6784\u9020\u51fd\u6570 \u5982\u679c\u6d3e\u751f\u7c7b\u8981\u4f7f\u7528\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7 using \u58f0\u660e\u6765\u5b8c\u6210\u3002 struct Base { void f ( double i ) { std :: cout << \"Base:\" << i << std :: endl ; } }; struct Derived : Base { using Base :: f ; void f ( int i ) { std :: cout << \"Derived:\" << i << std :: endl ; } }; int main () { Base b ; b . f ( 4.5 ); //Base:4.5 Derived d ; d . f ( 4.5 ); //Base:4.5 } \u5982\u4e0a\u4ee3\u7801\uff0c\u57fa\u7c7b Base \u548c\u6d3e\u751f\u7c7b Derived \u58f0\u660e\u4e86\u540c\u540d\u7684\u51fd\u6570 f \uff0c\u4e0d\u8fc7\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u7248\u672c\u8ddf\u57fa\u7c7b\u4e0d\u540c\u3002\u6d3e\u751f\u7c7b\u4e2d\u7684 f \u51fd\u6570\u63a5\u53d7 int \u7c7b\u578b\u4e3a\u53c2\u6570\uff0c\u800c\u57fa\u7c7b\u4e2d\u63a5\u53d7 double \u7c7b\u578b\u7684\u53c2\u6570\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 using \u58f0\u660e\uff0c\u58f0\u660e\u6d3e\u751f\u7c7b Derived \u4e5f\u4f7f\u7528\u57fa\u7c7b\u7248\u672c\u7684\u51fd\u6570 f \u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6d3e\u751f\u7c7b\u4e2d\u5b9e\u9645\u5c31\u6709\u4e86\u4e24\u4e2a\u7248\u672c\u7684 f \u51fd\u6570\u3002 \u5728C++11\u4e2d\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u88ab\u6269\u5c55\u5230\u4e86\u6784\u9020\u51fd\u6570\u4e0a\u3002\u5b50\u7c7b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 using \u58f0\u660e\u6765\u58f0\u660e\u7ee7\u627f\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 struct A { A ( int i ) {} A ( double d , int i ) {} A ( float f , int i , const char * c ) {} //... }; struct B : A { using A :: A ; //\u7ee7\u627f\u6784\u9020\u51fd\u6570 //... virtual void ExtraInterface () {} }; \u8fd9\u91cc\u901a\u8fc7 using A::A \u7684\u58f0\u660e\uff0c\u628a\u57fa\u7c7b\u4e2d\u7684\u6784\u9020\u51fd\u6570\u6089\u6570\u7ee7\u627f\u5230\u6d3e\u751f\u7c7b B \u4e2d\u3002\u800c\u4e14\u66f4\u4e3a\u7cbe\u5de7\u7684\u662f\uff0cC++11\u6807\u51c6\u7ee7\u627f\u6784\u9020\u51fd\u6570\u88ab\u8bbe\u8ba1\u4e3a\u8ddf\u6d3e\u751f\u7c7b\u4e2d\u7684\u5404\u79cd\u7c7b\u9ed8\u8ba4\u51fd\u6570\uff08\u9ed8\u8ba4\u6784\u9020\u3001\u6790\u6784\u3001\u62f7\u8d1d\u6784\u9020\u7b49\uff09\u4e00\u6837\uff0c\u662f\u9690\u5f0f\u58f0\u660e\u7684\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e00\u4e2a\u7ee7\u627f\u6784\u9020\u51fd\u6570\u4e0d\u88ab\u76f8\u5173\u4ee3\u7801\u4f7f\u7528\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u5176\u4ea7\u751f\u771f\u6b63\u7684\u51fd\u6570\u4ee3\u7801\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\uff0c\u6216\u8005\u6d3e\u751f\u7c7b\u662f\u4ece\u57fa\u7c7b\u4e2d\u865a\u7ee7\u627f\u7684\u90a3\u4e48\u5c31\u4e0d\u80fd\u591f\u5728\u6d3e\u751f\u7c7b\u4e2d\u58f0\u660e\u7ee7\u627f\u6784\u9020\u51fd\u6570\u3002\u6b64\u5916\uff0c\u5982\u679c\u4e00\u65e6\u4f7f\u7528\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u4e3a\u6d3e\u751f\u7c7b\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e86\uff0c\u5f97\u6ce8\u610f\u662f\u5426\u5b58\u5728\u65e0\u53c2\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002 \u59d4\u6d3e\u6784\u9020\u51fd\u6570 \u4e0e\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e5f\u662fC++11\u4e2d\u5bf9C++\u7684\u6784\u9020\u51fd\u6570\u7684\u4e00\u9879\u6539\u52a8\uff0c\u5176\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c11\u7a0b\u5e8f\u5458\u7f16\u5199\u6784\u9020\u51fd\u6570\u7684\u65f6\u95f4\u3002\u901a\u8fc7\u59d4\u6d3e\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u591a\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7f16\u5199\u5c06\u66f4\u52a0\u5bb9\u6613\u3002 class Info { public : Info () : type ( 1 ), name ( 'a' ) { InitRest (); } Info ( int i ) : type ( i ), name ( 'a' ) { InitRest (); } Info ( char e ) : type ( 1 ), name ( e ) { InitRest (); } private : void InitRest () { /* \u5176\u5b83\u521d\u59cb\u5316 */ } int type ; char name ; //... }; \u5982\u4e0a\u4ee3\u7801\uff0c Info \u7c7b\u62e5\u67092\u4e2a\u6210\u5458\u53d8\u91cf\u4ee5\u53ca3\u4e2a\u6784\u9020\u51fd\u6570\u3002\u8fd9\u91cc\u76843\u4e2a\u6784\u9020\u51fd\u6570\u90fd\u58f0\u660e\u4e86\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u6210\u5458 type \u548c name \uff0c\u5e76\u4e14\u90fd\u8c03\u7528\u4e86\u76f8\u540c\u7684\u51fd\u6570 InitRest \u3002\u9664\u4e86\u521d\u59cb\u5316\u5217\u8868\u7684\u4e0d\u540c\uff0c\u5176\u5b83\u90e8\u5206\u7684\u4ee3\u7801\u5b58\u5728\u7740\u5f88\u591a\u91cd\u590d\u3002 \u5728C+11\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u7b80\u5316\u4ee3\u7801\u7684\u4e66\u5199\u3002\u9996\u5148\u8981\u62bd\u8c61\u51fa\u6700\u4e3a\u901a\u7528\u7684\u884c\u4e3a\uff0c\u5199\u4e00\u4e2a\u201c\u57fa\u51c6\u201d\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u8fd9\u4e2a\u201c\u57fa\u51c6\u201d\u6784\u9020\u51fd\u6570\u3002\u8c03\u7528\u8005\u79f0\u4e3a\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u8005\u79f0\u4e3a\u76ee\u6807\u6784\u9020\u51fd\u6570\u3002 \u4f7f\u7528\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff1a class Info { public : Info () : Info ( 1 , 'a' ) { } Info ( int i ) : Info ( i , 'a' ) { } Info ( char e ) : Info ( 1 , e ) { } private : Info ( int i , char e ) : type ( i ), name ( e ) { /* \u5176\u5b83\u521d\u59cb\u5316 */ } int type ; char name ; //... }; \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u79c1\u6709\u7684\u76ee\u6807\u6784\u9020\u51fd\u6570 Info(int, char) \uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u5c06\u53c2\u6570\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\u3002\u7531\u4e8e\u8fd9\u4e2a\u76ee\u6807\u6784\u9020\u51fd\u6570\u7684\u5b58\u5728\uff0c InitRest \u51fd\u6570\u4e5f\u4e0d\u518d\u9700\u8981\u4e86\uff0c\u800c\u662f\u5c06\u5176\u4ee3\u7801\u653e\u5165 Info(int, char) \u4e2d\u3002\u8fd9\u6837\uff0c\u5176\u4ed6\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u5c31\u53ef\u4ee5\u59d4\u6258\u8be5\u76ee\u6807\u51fd\u6570\u6765\u5b8c\u6210\u6784\u9020\u3002 1. \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u201c\u59d4\u6d3e\u201d\u548c\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\uff0c\u6240\u4ee5\u5982\u679c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u8981\u7ed9\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u521d\u59cb\u5316\u4ee3\u7801\u5fc5\u987b\u653e\u5728\u51fd\u6570\u4f53\u4e2d\uff1b 2. \u76ee\u6807\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u603b\u662f\u5148\u4e8e\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u907f\u514d\u76ee\u6807\u6784\u9020\u51fd\u6570\u548c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u521d\u59cb\u5316\u540c\u6837\u7684\u6210\u5458\u901a\u5e38\u662f\u5fc5\u8981\u7684\uff1b 3. \u76ee\u6807\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u80fd\u662f\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5f62\u6210\u94fe\u72b6\u7684\u59d4\u6d3e\u6784\u9020\u5173\u7cfb\uff0c\u8981\u6ce8\u610f\u907f\u514d\u5f62\u6210\u59d4\u6258\u73af\uff1b 4. \u5728\u5f02\u5e38\u5904\u7406\u65b9\u9762\uff0c\u5982\u679c\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 try \u7684\u8bdd\uff0c\u90a3\u4e48\u4ece\u76ee\u6807\u6784\u9020\u51fd\u6570\u4e2d\u4ea7\u751f\u7684\u5f02\u5e38\u90fd\u53ef\u4ee5\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u88ab\u6355\u6349\u5230\u3002 \u53f3\u503c\u5f15\u7528\uff1a\u79fb\u52a8\u8bed\u4e49\u548c\u5b8c\u7f8e\u8f6c\u53d1 \u6307\u9488\u6210\u5458\u4e0e\u62f7\u8d1d\u6784\u9020 \u7f16\u5199C++\u7a0b\u5e8f\u6709\u4e00\u6761\u5fc5\u987b\u6ce8\u610f\u7684\u89c4\u5219\uff0c\u5c31\u662f\u5728\u7c7b\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u9488\u6210\u5458\u7684\u8bdd\uff0c\u5c31\u8981\u7279\u522b\u5c0f\u5fc3\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f16\u5199\u3002\u5728\u672a\u58f0\u660e\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff0cC++\u4f1a\u4e3a\u7c7b\u751f\u6210\u4e00\u4e2a\u6d45\u62f7\u8d1d\u7684\u6784\u9020\u51fd\u6570\u3002 \u901a\u5e38\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0\u201c\u6df1\u62f7\u8d1d\u201d\u3002 \u5de6\u503c\u3001\u53f3\u503c\u4e0e\u53f3\u503c\u5f15\u7528 C++\u4e2d\u4e00\u4e2a\u88ab\u5e7f\u6cdb\u8ba4\u540c\u7684\u8bf4\u6cd5\uff0c\u53ef\u4ee5\u53d6\u5730\u5740\u7684\u3001\u6709\u540d\u5b57\u7684\u5c31\u662f\u5de6\u503c\uff0c\u53cd\u4e4b\uff0c\u4e0d\u80fd\u53d6\u5730\u5740\u7684\u3001\u6ca1\u6709\u540d\u5b57\u7684\u5c31\u662f\u53f3\u503c\u3002 \u66f4\u4e3a\u7ec6\u81f4\u5730\uff0c\u5728C++11\u4e2d\uff0c\u53f3\u503c\u662f\u7531\u4e24\u4e2a\u6982\u5ff5\u6784\u6210\u7684\uff0c\u4e00\u4e2a\u662f\u5c06\u4ea1\u503c\uff0c\u53e6\u4e00\u4e2a\u662f\u7eaf\u53f3\u503c\u3002 auto \u7c7b\u578b\u63a8\u5bfc C++11\u4e2d\u7c7b\u578b\u63a8\u5bfc\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\u662f\u91cd\u5b9a\u4e49\u4e86 auto \u5173\u952e\u5b57\uff0c\u53e6\u5916\u4e00\u4e2a\u5b9e\u73b0\u662f decltype \u3002 int main () { auto name = \"world. \\n \" ; std :: cout << \"hello, \" << name ; } \u8fd9\u91cc\u4f7f\u7528\u4e86 auto \u5173\u952e\u5b57\u6765\u8981\u6c42\u7f16\u8bd1\u5668\u5bf9\u53d8\u91cf name \u7684\u7c7b\u578b\u8fdb\u884c\u81ea\u52a8\u63a8\u5bfc\uff0c\u7f16\u8bd1\u5668\u6839\u636e\u5b83\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\uff0c\u63a8\u5bfc\u51fa name \u7684\u7c7b\u578b\u4e3a char* \u3002 auto \u58f0\u660e\u7684\u53d8\u91cf\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u4f7f\u7f16\u8bd1\u5668\u80fd\u591f\u4ece\u5176\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63a8\u5bfc\u51fa\u5176\u7c7b\u578b\u3002 auto \u5e76\u975e\u4e00\u79cd\u201c\u7c7b\u578b\u201d\u58f0\u660e\uff0c\u800c\u662f\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u201c\u5360\u4f4d\u7b26\u201d\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u671f\u4f1a\u5c06 auto \u66ff\u4ee3\u4e3a\u53d8\u91cf\u5b9e\u9645\u7684\u7c7b\u578b\u3002 auto \u7684\u4f18\u52bf auto \u63a8\u5bfc\u7684\u4e00\u4e2a\u6700\u5927\u4f18\u52bf\u5c31\u662f\u5728\u62e5\u6709\u521d\u59cb\u8868\u8fbe\u5f0f\u7684\u590d\u6742\u7c7b\u578b\u53d8\u91cf\u58f0\u660e\u65f6\u7b80\u5316\u4ee3\u7801\u3002 \u5728\u4e0d\u4f7f\u7528 using namespace std \u7684\u60c5\u51b5\u4e0b\u5bf9\u4e00\u4e2a vector \u6570\u7ec4\u8fdb\u884c\u5faa\u73af\uff0c\u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u65f6\u5019\u5fc5\u987b\u5199\u51fa std::vector<std::string>::iterator \u8fd9\u6837\u957f\u7684\u7c7b\u578b\u58f0\u660e\u3002\u800c\u4f7f\u7528 auto \u7684\u8bdd\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u53ef\u4ee5\u6210\u500d\u589e\u957f\u3002 void loopver ( std :: vector < std :: string > & vs ) { for ( auto i = vs . begin (); i < vs . end (); i ++ ) { //do something } } \u5982\u4e0a\u4ee3\u7801\uff0c\u4f7f\u7528\u4e86 auto \uff0c\u7a0b\u5e8f\u5458\u751a\u81f3\u53ef\u4ee5\u5c06\u8fed\u4ee3\u5668\u7684\u58f0\u660e\u653e\u5165 for \u5faa\u73af\u4e2d\uff0c i \u7684\u7c7b\u578b\u5c06\u7531\u8868\u8fbe\u5f0f vs.begin() \u63a8\u5bfc\u51fa\u6765\u3002\u5728C++11\u4e2d\uff0c\u7531\u4e8e auto \u7684\u5b58\u5728\uff0c\u4f7f\u7528 STL \u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff0c\u5199\u51fa\u7684\u4ee3\u7801\u4e5f\u4f1a\u66f4\u52a0\u6e05\u6670\u53ef\u8bfb\u3002 auto \u7684\u7b2c\u4e8c\u4e2a\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u514d\u9664\u7a0b\u5e8f\u5458\u5728\u4e00\u4e9b\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u9ebb\u70e6\uff0c\u6216\u8005\u907f\u514d\u4e00\u4e9b\u5728\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u9519\u8bef\u3002 auto \u7684\u7b2c\u4e09\u4e2a\u6709\u70b9\u5c31\u662f\u5176\u201c\u81ea\u9002\u5e94\u201d\u6027\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u3002 decltype \u4e0e auto \u7c7b\u4f3c\uff0c decltype \u4e5f\u80fd\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u8fc7\u4e24\u8005\u7684\u4f7f\u7528\u65b9\u5f0f\u5374\u53c8\u4e00\u5b9a\u7684\u533a\u522b\u3002 int main () { int i ; decltype ( i ) j = 0 ; std :: cout << typeid ( j ). name () << std :: endl ; float a ; double b ; decltype ( a + b ) c ; std :: cout << typeid ( c ). name () << std :: endl ; } \u4ece\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u5230\uff0c decltype \u7684\u7c7b\u578b\u63a8\u5bfc\u5e76\u4e0d\u662f\u50cf auto \u4e00\u6837\u662f\u4ece\u53d8\u91cf\u58f0\u660e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u83b7\u5f97\u53d8\u91cf\u7684\u7c7b\u578b\uff0c decltype \u603b\u662f\u4ee5\u4e00\u4e2a\u666e\u901a\u7684\u8868\u8fbe\u5f0f\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u8be5\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3002\u800c\u4e0e auto \u76f8\u540c\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\u578b\u6307\u793a\u7b26\uff0c decltype \u53ef\u4ee5\u5c06\u83b7\u5f97\u7684\u7c7b\u578b\u6765\u5b9a\u4e49\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u3002\u4e0e auto \u76f8\u540c\uff0c decltyp \u7c7b\u578b\u63a8\u5bfc\u4e5f\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\u3002 \u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af C++11\u5f15\u5165\u4e86\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\u3002 int main () { int arr [ 5 ] = { 1 , 2 , 3 , 4 , 5 }; for ( auto & e : arr ) e *= 2 ; for ( auto e : arr ) std :: cout << e << '\\t' ; } for \u5faa\u73af\u540e\u7684\u62ec\u53f7\u7531\u5192\u53f7 : \u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u8303\u56f4\u5185\u7528\u4e8e\u8fed\u4ee3\u7684\u53d8\u91cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u5219\u8868\u793a\u88ab\u8fed\u4ee3\u7684\u8303\u56f4\u3002\u5982\u679c\u8fed\u4ee3\u53d8\u91cf\u7684\u503c\u5728\u5faa\u73af\u4e2d\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u4e0d\u7528\u5f15\u7528\u7684\u65b9\u5f0f\u3002 \u662f\u5426\u80fd\u591f\u4f7f\u7528\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\uff0c\u5fc5\u987b\u4f9d\u8d56\u4e8e\u4e00\u4e9b\u6761\u4ef6\u3002\u9996\u5148\uff0c\u5c31\u662f for \u5faa\u73af\u8fed\u4ee3\u7684\u8303\u56f4\u662f\u786e\u5b9a\u7684\u3002\u5bf9\u4e8e\u7c7b\u6765\u8bf4\uff0c\u5982\u679c\u8be5\u7c7b\u6709 begin \u548c end \u51fd\u6570\uff0c\u90a3\u4e48 begin \u548c end \u4e4b\u95f4\u5c31\u662f for \u5faa\u73af\u8fed\u4ee3\u7684\u8303\u56f4\u3002\u5bf9\u4e8e\u6570\u7ec4\u800c\u8a00\uff0c\u5c31\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u95f4\u7684\u8303\u56f4\u3002\u5176\u6b21\uff0c\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\u8fd8\u8981\u6c42\u8fed\u4ee3\u7684\u5bf9\u8c61\u5b9e\u73b0 ++ \u548c == \u7b49\u64cd\u4f5c\u7b26\u3002\u5bf9\u4e8e\u6807\u51c6\u5e93\u5bb9\u5668\uff0c\u5982 string \u3001 array \u3001 vector \u3001 deque \u3001 list \u3001 queue \u3001 map \u3001 set \u7b49\uff0c\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u6807\u51c6\u5e93\u603b\u662f\u4fdd\u8bc1\u5176\u5bb9\u5668\u5b9a\u4e49\u4e86\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u666e\u901a\u7684\u5df2\u77e5\u957f\u5ea6\u7684\u6570\u7ec4\u4e5f\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\u800c\u7528\u6237\u81ea\u5df1\u5199\u7684\u7c7b\uff0c\u5219\u9700\u8981\u81ea\u884c\u63d0\u4f9b\u76f8\u5173\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u57fa\u4e8e\u8303\u56f4\u7684\u5faa\u73af\u4f7f\u7528\u5728\u6807\u51c6\u5bb9\u5668\u4e2d\u65f6\uff0c\u5982\u679c\u4f7f\u7528 auto \u6765\u58f0\u660e\u8fed\u4ee3\u7684\u5bf9\u8c61\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u4e0d\u4f1a\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 int main () { std :: vector < int > v = { 1 , 2 , 3 , 4 , 5 }; for ( auto i = v . begin (); i < v . end (); i ++ ) std :: cout << * i << std :: endl ; //i\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61 for ( auto e : v ) std :: cout << e << std :: endl ; //e\u662f\u89e3\u5f15\u7528\u540e\u7684\u5bf9\u8c61 } \u9ed8\u8ba4\u51fd\u6570\u7684\u63a7\u5236 \u7c7b\u4e0e\u9ed8\u8ba4\u51fd\u6570 \u5728C++\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5e2e\u52a9\u7a0b\u5e8f\u5458\u751f\u6210\u4e00\u4e9b\u4ed6\u4eec\u672a\u81ea\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\u3002\u8fd9\u6837\u7684\u51fd\u6570\u7248\u672c\u88ab\u79f0\u4e3a\u201c\u9ed8\u8ba4\u51fd\u6570\u201d\uff0c\u5305\u62ec\u4e86\u4ee5\u4e0b\u4e00\u4e9b\u51fd\u6570\uff1a - \u6784\u9020\u51fd\u6570 - \u62f7\u8d1d\u6784\u9020\u51fd\u6570 - \u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\uff08operator=\uff09 - \u79fb\u52a8\u6784\u9020\u51fd\u6570 - \u79fb\u52a8\u62f7\u8d1d\u51fd\u6570 - \u6790\u6784\u51fd\u6570 \u6b64\u5916\uff0cC++\u7f16\u8bd1\u5668\u8fd8\u4f1a\u4e3a\u4ee5\u4e0b\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u7c7b\u578b\u63d0\u4f9b\u5168\u5c40\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u51fd\u6570\uff1a - operator , - operator & - operator && - operator * - operator -> - operator ->* - operator new - operator delete \u5728C++\u8bed\u8a00\u89c4\u5219\u4e2d\uff0c\u4e00\u65e6\u7a0b\u5e8f\u5458\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u51fd\u6570\u7684\u81ea\u5b9a\u4e49\u7248\u672c\uff0c\u5219\u7f16\u8bd1\u5668\u4e0d\u4f1a\u518d\u4e3a\u8be5\u7c7b\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4\u7248\u672c\u3002\u6709\u65f6\u8fd9\u6837\u7684\u89c4\u5219\u4f1a\u88ab\u7a0b\u5e8f\u5458\u5fd8\u8bb0\uff0c\u6700\u5e38\u89c1\u7684\u662f\u58f0\u660e\u4e86\u5e26\u53c2\u6570\u7684\u6784\u9020\u7248\u672c\uff0c\u5219\u5fc5\u987b\u58f0\u660e\u4e0d\u5e26\u53c2\u6570\u7684\u7248\u672c\u4ee5\u5b8c\u6210\u65e0\u53c2\u7684\u53d8\u91cf\u521d\u59cb\u5316\u3002\u66f4\u4e3a\u4e25\u91cd\u7684\u95ee\u9898\u662f\uff0c\u4e00\u65e6\u58f0\u660e\u4e86\u81ea\u5b9a\u4e49\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u6709\u53ef\u80fd\u5bfc\u81f4\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u578b\u4e0d\u518d\u662fPOD\u7684\u3002 \u53d8\u4e3a\u975ePOD\u7c7b\u578b\u5e26\u6765\u4e00\u7cfb\u5217\u8d1f\u9762\u5f71\u54cd\u6709\u65f6\u662f\u7a0b\u5e8f\u5458\u6240\u4e0d\u5e0c\u671b\u7684\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u5931\u53bb\u4e86\u4f18\u5316\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u7684\u53ef\u80fd\u3002 \u56e0\u6b64\u9700\u8981\u4e00\u4e9b\u65b9\u5f0f\u6765\u4f7f\u5f97\u7b80\u5355\u7c7b\u578b\u201c\u6062\u590d\u201dPOD\u7684\u7279\u8d28\u3002 \u5728C++11\u6807\u51c6\u4e2d\uff0c\u901a\u8fc7\u63d0\u4f9b\u65b0\u7684\u673a\u5236\u6765\u63a7\u5236\u9ed8\u8ba4\u7248\u672c\u7684\u51fd\u6570\u7684\u751f\u6210\u6765\u5b8c\u6210\u8fd9\u4e2a\u76ee\u7684\u3002\u8fd9\u4e2a\u65b0\u673a\u5236\u91cd\u7528\u4e86 default \u5173\u952e\u5b57\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u9ed8\u8ba4\u51fd\u6570\u5b9a\u4e49\u6216\u8005\u58f0\u660e\u65f6\u52a0\u4e0a =default \uff0c\u4ece\u800c\u663e\u5f0f\u5730\u6307\u793a\u7f16\u8bd1\u5668\u751f\u6210\u8be5\u51fd\u6570\u7684\u9ed8\u8ba4\u7248\u672c\u3002\u800c\u5982\u679c\u6307\u5b9a\u4ea7\u751f\u9ed8\u8ba4\u7248\u672c\u540e\uff0c\u7a0b\u5e8f\u5458\u4e0d\u518d\u4e5f\u4e0d\u5e94\u8be5\u5b9e\u73b0\u4e00\u4efd\u540c\u540d\u7684\u51fd\u6570\u3002 class TwoCstor { public : //\u63d0\u4f9b\u4e86\u5e26\u53c2\u6570\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u6307\u793a\u7f16\u8bd1\u5668 //\u63d0\u4f9b\u9ed8\u8ba4\u7248\u672c\uff0c\u5219\u672c\u81ea\u5b9a\u4e49\u7c7b\u578b\u4f9d\u7136\u662fPOD\u7c7b\u578b TwoCstor () = default ; TwoCstor ( int i ) : data ( i ) {} private : int data ; }; int main () { std :: cout << std :: is_pod < TwoCstor >:: value << std :: endl ; //1 } \u53e6\u4e00\u65b9\u9762\uff0c\u7a0b\u5e8f\u5458\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u5e0c\u671b\u80fd\u591f\u9650\u5236\u4e00\u4e9b\u9ed8\u8ba4\u51fd\u6570\u7684\u751f\u6210\u3002\u6700\u5178\u578b\u5730\uff0c\u7c7b\u7684\u7f16\u5199\u8005\u6709\u65f6\u9700\u8981\u7981\u6b62\u4f7f\u7528\u8005\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5728C++98\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u7684\u505a\u6cd5\u662f\u5c06\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a private \u6210\u5458\uff0c\u5e76\u4e14\u4e0d\u63d0\u4f9b\u51fd\u6570\u5b9e\u73b0\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4e00\u65e6\u6709\u4eba\u8bd5\u56fe\uff08\u6216\u8005\u65e0\u610f\u8bc6\uff09\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\u3002 \u5728C++11\u4e2d\uff0c\u6807\u51c6\u5219\u7ed9\u51fa\u4e86\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5373\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u6216\u8005\u58f0\u660e\u52a0\u4e0a =delete \uff0c\u8fd9\u4f1a\u6307\u793a\u7f16\u8bd1\u5668\u4e0d\u751f\u6210\u51fd\u6570\u7684\u7f3a\u7701\u7248\u672c\u3002 class NoCopyCstor { public : NoCopyCstor () = default ; //\u4f7f\u7528 =delete \u53ef\u4ee5\u6709\u6548\u963b\u6b62\u7528\u6237\u9519\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 NoCopyCstor ( const NoCopyCstor & ) = delete ; }; int main () { NoCopyCstor a ; NoCopyCstor b ( a ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 } \u4e00\u65e6\u7f3a\u7701\u7248\u672c\u5220\u9664\u4e86\uff0c\u91cd\u8f7d\u8be5\u51fd\u6570\u4e5f\u662f\u975e\u6cd5\u7684\u3002 C++11\u6807\u51c6\u79f0 =default \u4fee\u9970\u7684\u51fd\u6570\u4e3a\u663e\u5f0f\u7f3a\u7701\u51fd\u6570\uff0c\u79f0 =delete \u4fee\u9970\u7684\u51fd\u6570\u4e3a\u663e\u5f0f\u5220\u9664\u51fd\u6570\u3002 \u5f15\u5165\u663e\u5f0f\u7f3a\u7701\u51fd\u6570\u548c\u663e\u793a\u5220\u9664\u51fd\u6570\u662f\u4e3a\u4e86\u589e\u5f3a\u5bf9\u7c7b\u9ed8\u8ba4\u51fd\u6570\u7684\u63a7\u5236\uff0c\u8ba9\u7a0b\u5e8f\u5458\u80fd\u591f\u66f4\u52a0\u7cbe\u7ec6\u5730\u63a7\u5236\u9ed8\u8ba4\u7248\u672c\u7684\u51fd\u6570\u3002\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u5b83\u4eec\u7684\u552f\u4e00\u529f\u80fd\uff0c\u4f7f\u7528\u4e0a\u4e5f\u4e0d\u4ec5\u4ec5\u5c40\u9650\u5728\u7c7b\u7684\u5b9a\u4e49\u5185\u3002 \u663e\u793a\u7f3a\u7701\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5b9a\u4e49\u4e4b\u5916\u4fee\u9970\u6210\u5458\u51fd\u6570\u3002\u5728\u7c7b\u5b9a\u4e49\u5916\u663e\u5f0f\u6307\u5b9a\u7f3a\u7701\u7248\u672c\u6240\u5e26\u6765\u7684\u597d\u5904\u662f\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5bf9\u4e00\u4e2a class \u5b9a\u4e49\u63d0\u4f9b\u591a\u4e2a\u5b9e\u73b0\u7248\u672c\uff08\u591a\u4e2acpp\u6587\u4ef6\uff09\u3002 \u663e\u5f0f\u5220\u9664\u4e5f\u5e76\u975e\u5c40\u9650\u4e8e\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u8fd8\u53ef\u4ee5\u907f\u514d\u7f16\u8bd1\u5668\u505a\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002 class ConvType { public : ConvType ( int i ) { }; ConvType ( char c ) = delete ; //\u5220\u9664 char \u7248\u672c }; void Func ( ConvType ct ) { } int main () { Func ( 3 ); Func ( 'a' ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 ConvType ci ( 3 ); ConvType cc ( 'a' ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 } \u5bf9\u4e8e\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u6765\u7981\u6b62\u7f16\u8bd1\u5668\u505a\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u7c7b\u578b\u8f6c\u6362\u4e0a\uff0c\u5e76\u4e0d\u5c40\u9650\u4e8e\u7f3a\u7701\u7248\u672c\u7684\u7c7b\u6210\u5458\u51fd\u6570\u6216\u8005\u5168\u5c40\u51fd\u6570\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u666e\u901a\u7684\u51fd\u6570\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u5220\u9664\u6765\u7981\u6b62\u7c7b\u578b\u8f6c\u6362\u3002 \u663e\u5f0f\u5220\u9664\u8fd8\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\u6bd4\u5982\u7a0b\u5e8f\u5458\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u6765\u5220\u9664\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684 operator new \u64cd\u4f5c\u7b26\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u907f\u514d\u5728\u5806\u4e0a\u5206\u914d\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 class NoHeapAlloc { public : void * operaotr new ( std :: size_t ) = delete ; }; int main () { NoHeapAlloc nha ; NoHeapAlloc * pha = new NoHeapAlloc ; //\u7f16\u8bd1\u5931\u8d25 return 0 ; } lambda \u51fd\u6570 int main () { int girls = 3 , boys = 4 ; auto totalChild = []( int x , int y ) -> int { return x + y ; }; return totalChild ( girls , boys ); } lambda \u51fd\u6570\u7684\u8bed\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a [ capture ]( parameters ) mutable -> return - type { statement ; } \u5176\u4e2d\uff0c - [capture] \uff1a\u6355\u6349\u5217\u8868\u3002\u6355\u6349\u5217\u8868\u603b\u662f\u51fa\u73b0\u5728 lambda \u51fd\u6570\u7684\u5f00\u59cb\u5904\u3002\u4e8b\u5b9e\u4e0a\uff0c [] \u662f lambda \u5f15\u51fa\u7b26\u3002\u7f16\u8bd1\u5668\u6839\u636e\u8be5\u5f15\u51fa\u7b26\u5224\u65ad\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u662f\u5426\u662f lambda \u51fd\u6570\u3002\u6355\u6349\u5217\u8868\u80fd\u591f\u6355\u6349\u4e0a\u4e0b\u6587\u4e2d\u7684\u53d8\u91cf\u4ee5\u63d0\u4f9b lambda \u51fd\u6570\u4f7f\u7528\u3002 - (parameters) \uff1a\u53c2\u6570\u5217\u8868\u3002\u4e0e\u666e\u901a\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u8fde\u540c\u62ec\u53f7 () \u4e00\u8d77\u7701\u7565\u3002 - mutable \uff1a mutable \u4fee\u9970\u7b26\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c lambda \u51fd\u6570\u603b\u662f\u4e00\u4e2a const \u51fd\u6570\uff0c mutable \u53ef\u4ee5\u53d6\u6d88\u5176\u5e38\u91cf\u6027\u3002\u5728\u4f7f\u7528\u8be5\u4fee\u9970\u7b26\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u53ef\u7701\u7565\uff08\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\uff09\u3002 - ->return-type \uff1a\u8fd4\u56de\u7c7b\u578b\u3002\u7528\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5f62\u5f0f\u58f0\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u3002\u51fa\u4e8e\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u8fd4\u56de\u503c\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u8fde\u540c\u7b26\u53f7 -> \u4e00\u8d77\u7701\u7565\u3002\u6b64\u5916\uff0c\u5728\u8fd4\u56de\u7c7b\u578b\u660e\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565\u8be5\u90e8\u5206\uff0c\u8ba9\u7f16\u8bd1\u5668\u5bf9\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u63a8\u5bfc\u3002 - statement \uff1a\u51fd\u6570\u4f53\u3002\u5185\u5bb9\u4e0e\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u4e0d\u8fc7\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u6355\u83b7\u7684\u53d8\u91cf\u3002 lambda \u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6700\u5927\u7684\u533a\u522b\u4e4b\u4e00\uff0c\u5c31\u662f lambda \u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u6355\u6349\u5217\u8868\u8bbf\u95ee\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u6570\u636e\uff0c\u5177\u4f53\u5730\uff0c\u6355\u6349\u5217\u8868\u63cf\u8ff0\u4e86\u4e0a\u4e0b\u6587\u4e2d\u54ea\u4e9b\u6570\u636e\u53ef\u4ee5\u88ab lambda \u4f7f\u7528\uff0c\u4ee5\u53ca\u4f7f\u7528\u65b9\u5f0f\uff08\u503c\u4f20\u9012\u6216\u5f15\u7528\u4f20\u9012\uff09\u3002 \u8bed\u6cd5\u4e0a\uff0c\u6355\u6349\u5217\u8868\u7531\u591a\u4e2a\u6355\u6349\u9879\u7ec4\u6210\uff0c\u5e76\u4ee5\u9017\u53f7\u5206\u5272\u3002\u6355\u6349\u5217\u8868\u7531\u5982\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a [var] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u53d8\u91cf var [=] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u6240\u6709\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u5305\u62ec this \uff09 [&var] \u8868\u793a\u5f15\u7528\u4f20\u9012\u6355\u6349\u53d8\u91cf var [&] \u8868\u793a\u5f15\u7528\u4f20\u9012\u6355\u6349\u6240\u6709\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u5305\u62ec this \uff09 [this] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u7684 this \u6307\u9488 \u6355\u6349\u5217\u8868\u4e0d\u5141\u8bb8\u53d8\u91cf\u91cd\u590d\u4f20\u9012\u3002 \u4f8b\u5982\uff1a [=, a] \u3001 [&, &this] \u4f1a\u5bfc\u81f4\u7f16\u8bd1\u65f6\u671f\u7684\u9519\u8bef\u3002","title":"`__func__`\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#__func__","text":"__func__ \u7684\u529f\u80fd\u662f\u8fd4\u56de\u6240\u5728\u51fd\u6570\u7684\u540d\u5b57\uff0c\u8fd9\u5bf9\u4e8e\u8f7b\u91cf\u7ea7\u7684\u8c03\u8bd5\u4ee3\u7801\u5177\u6709\u5341\u5206\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5728[[000. C++ 11 \u7b80\u4ecb#C++ 11|C++11]]\u4e2d\uff0c\u6807\u51c6\u751a\u81f3\u5141\u8bb8\u5176\u4f7f\u7528\u5728\u7c7b\u6216\u8005\u7ed3\u6784\u4f53\u4e2d\u3002","title":"__func__\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_pragma","text":"\u5728 C/C++ \u6807\u51c6\u4e2d\uff0c #pragma \u662f\u4e00\u6761\u9884\u5904\u7406\u7684\u6307\u4ee4\uff0c\u7528\u6765\u5411\u7f16\u8bd1\u5668\u4f20\u5230\u8bed\u8a00\u6807\u51c6\u4ee5\u5916\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5f53\u4ee3\u7801\u7684\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86 #pragema once \uff0c\u90a3\u4e48\u8be5\u5934\u6587\u4ef6\u5e94\u8be5\u53ea\u88ab\u7f16\u8bd1\u4e00\u6b21\u3002\u8fd9\u4e0e\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u6765\u5b9a\u4e49\u5934\u6587\u4ef6\u6240\u8fbe\u5230\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 #ifndef THIS_HEADER #define THIS_HEADER //\u4e00\u4e9b\u5934\u6587\u4ef6\u7684\u5b9a\u4e49 #endif \u5728 C++11 \u4e2d\uff0c\u6807\u51c6\u5b9a\u4e49\u4e86\u4e0e\u9884\u5904\u7406\u6307\u4ee4 #pragma \u529f\u80fd\u76f8\u540c\u7684\u64cd\u4f5c\u7b26 _Pragma \u3002 _Pragma \u64cd\u4f5c\u7b26\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a _Pragma ( \u5b57\u7b26\u4e32\u5e38\u91cf ) \u5176\u4f7f\u7528\u65b9\u6cd5\u8ddf sizeof \u7b49\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u5c06\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u53c2\u6570\u5199\u5728\u62ec\u53f7\u5185\u5373\u53ef\u3002\u90a3\u4e48\u8981\u8fbe\u5230\u4e0e\u4e0a\u4f8b #pragma \u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5219\u53ea\u9700\u8981\u5982\u4e0b\u4ee3\u7801\u5373\u53ef\u3002 _Pragma ( \"once\" ); \u7531\u4e8e _Pragma \u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5728\u4e00\u4e9b\u5b8f\u4e2d\uff0c\u800c #pragma \u5219\u4e0d\u80fd\u5728\u5b8f\u4e2d\u5c55\u5f00\uff0c\u56e0\u6b64 _Pragma \u5177\u6709\u66f4\u5927\u7684\u7075\u6d3b\u6027\u3002","title":"_Pragma\u64cd\u4f5c\u7b26"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_1","text":"\u5728\u4e4b\u524d\u7684 C++ \u6807\u51c6\u4e2d\uff0c\u5c06\u7a84\u5b57\u7b26\u4e32\uff08 char \uff09\u8f6c\u6362\u6210\u5bbd\u5b57\u7b26\u4e32\uff08 wchar_t \uff09\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\u800c\u5728C++11 \u6807\u51c6\u4e2d\uff0c\u5728\u5c06\u7a84\u5b57\u7b26\u4e32\u548c\u5bbd\u5b57\u7b26\u4e32\u8fdb\u884c\u8fde\u63a5\u65f6\uff0c\u652f\u6301 C++11 \u6807\u51c6\u7684\u7f16\u8bd1\u5668\u4f1a\u5c06\u7a84\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bbd\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u518d\u4e0e\u5bbd\u5b57\u7b26\u4e32\u8fdb\u884c\u8fde\u63a5\u3002","title":"\u5bbd\u7a84\u5b57\u7b26\u4e32\u7684\u8fde\u63a5"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#__cplusplus","text":"\u5728C\u4e0eC++\u6df7\u5408\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\uff0c\u5e38\u5e38\u4f1a\u5728\u5934\u6587\u4ef6\u91cc\u770b\u5230\u5982\u4e0b\u58f0\u660e\uff1a #ifdef __cplusplus extern \"C\" { #endif //\u4e00\u4e9b\u4ee3\u7801 #ifdef __cplusplus } #endif \u8fd9\u79cd\u7c7b\u578b\u7684\u5934\u6587\u4ef6\u53ef\u4ee5\u88ab #include \u5230C\u6587\u4ef6\u4e2d\u8fdb\u884c\u7f16\u8bd1\uff0c\u4e5f\u53ef\u4ee5\u88ab #include \u5230C++\u6587\u4ef6\u4e2d\u8fdb\u884c\u7f16\u8bd1\u3002\u7531\u4e8e extern \"C\" \u53ef\u4ee5\u6291\u5236C++\u5bf9\u51fd\u6570\u540d\u3001\u53d8\u91cf\u540d\u7b49\u7b26\u53f7\uff08symbol\uff09\u8fdb\u884c\u540d\u79f0\u91cd\u6574\uff0c\u56e0\u6b64\u7f16\u8bd1\u51fa\u7684C\u76ee\u6807\u6587\u4ef6\u548cC++\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3001\u51fd\u6570\u540d\u79f0\u7b49\u7b26\u53f7\u90fd\u662f\u76f8\u540c\u7684\uff08\u5426\u5219\u4e0d\u540c\uff09\uff0c\u94fe\u63a5\u5668\u53ef\u4ee5\u53ef\u9760\u5730\u5bf9\u4e24\u79cd\u7c7b\u578b\u7684\u76ee\u6807\u6587\u4ef6\u8fdb\u884c\u94fe\u63a5\u3002 \u8fd9\u662fC\u4e0eC++\u6df7\u7528\u5934\u6587\u4ef6\u7684\u5178\u578b\u505a\u6cd5\u3002 \u9274\u4e8e\u4ee5\u4e0a\u7684\u505a\u6cd5\uff0c\u7a0b\u5e8f\u5458\u53ef\u80fd\u8ba4\u4e3a __cplusplus \u8fd9\u4e2a\u5b8f\u53ea\u6709\u201c\u88ab\u5b9a\u4e49\u4e86\u201d\u548c\u201c\u672a\u5b9a\u4e49\u201d\u4e24\u79cd\u72b6\u6001\u3002\u4e8b\u5b9e\u4e0a\uff0c __cplusplus \u8fd9\u4e2a\u5b8f\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6574\u578b\u503c\u3002\u800c\u4e14\u968f\u7740\u6807\u51c6\u53d8\u5316\uff0c __cplusplus \u5b8f\u4e00\u822c\u4f1a\u662f\u4e00\u4e2a\u6bd4\u4ee5\u5f80\u6807\u51c6\u4e2d\u66f4\u5927\u7684\u503c\u3002\u6bd4\u5982\u5728C++03\u6807\u51c6\u4e2d\uff0c __cplusplus \u7684\u503c\u88ab\u9884\u5b9a\u4e3a 199711L \uff0c\u800c\u5728C++11\u6807\u51c6\u4e2d\uff0c\u5b8f __cplusplus \u88ab\u9884\u5b9a\u4e49\u4e3a 201103L \u3002\u8fd9\u70b9\u53d8\u5316\u53ef\u4ee5\u4e3a\u4ee3\u7801\u6240\u7528\u3002\u6bd4\u5982\u7a0b\u5e8f\u5458\u5728\u60f3\u786e\u5b9a\u4ee3\u7801\u662f\u4f7f\u7528\u652f\u6301C++11\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u6cd5\u8fdb\u884c\u68c0\u6d4b\uff1a #if __cplusplus < 201103L #error \"should use C++11 implementation\" #endif \u8fd9\u91cc\u4f7f\u7528\u4e86\u9884\u5904\u7406\u6307\u4ee4 #error \uff0c\u8fd9\u4f7f\u5f97\u4e0d\u652f\u6301C++11\u7684\u4ee3\u7801\u7f16\u8bd1\u5668\u7acb\u5373\u62a5\u9519\u5e76\u7ec8\u6b62\u7f16\u8bd1\u3002","title":"\u5b8f__cplusplus"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#vs2019__cplusplus199711l","text":"\u56e0\u4e3a\u5f88\u591a\u73b0\u6709\u4ee3\u7801\u9700\u8981\u6b64\u5b8f\u7684\u503c\u4e0e 199711L \u5339\u914d\uff0c\u6240\u4ee5VS\u7cfb\u5217\u7684\u7f16\u8bd1\u5668\u4e0d\u4f1a\u66f4\u6539\u6b64\u5b8f\u7684\u503c\u3002\u5bf9\u6b64\u5fae\u8f6f\u5728VS2017\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u63d0\u4f9b\u4e86 /Zc:__cplusplus \u9009\u9879\u7528\u6765\u89e3\u51b3\u8be5\u95ee\u9898\u3002 \u6253\u5f00\u9879\u76ee\u7684\u201c\u5c5e\u6027\u9875\u201d \u5bf9\u8bdd\u6846\uff1b \u9009\u62e9 \"\u914d\u7f6e\u5c5e\u6027\" \" > c/c + + > \u547d\u4ee4\u884c\" \u5c5e\u6027\u9875\uff1b \u5c06 /Zc:__cplusplus \u6216 /Zc:__cplusplus- \u6dfb\u52a0\u5230\u201c\u5176\u4ed6\u9009\u9879:\u201d\u7a97\u683c\u3002 \u53c2\u8003\u94fe\u63a5\uff1a https://docs.microsoft.com/zh-cn/cpp/build/reference/zc-cplusplus?view=msvc-160&viewFallbackFrom=vs-2019","title":"VS2019__cplusplus\u5b8f\u7684\u503c\u4ecd\u4e3a199711L\u7684\u95ee\u9898"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_2","text":"","title":"\u9759\u6001\u65ad\u8a00"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_3","text":"\u65ad\u8a00\uff08assertion\uff09\u662f\u4e00\u79cd\u7f16\u7a0b\u4e2d\u5e38\u7528\u7684\u624b\u6bb5\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u65ad\u8a00\u5c31\u662f\u5c06\u4e00\u4e2a\u8fd4\u56de\u503c\u603b\u662f\u9700\u8981\u4e3a\u771f\u7684\u5224\u522b\u5f0f\u653e\u5728\u8bed\u53e5\u4e2d\uff0c\u7528\u4e8e\u6392\u9664\u5728\u8bbe\u8ba1\u7684\u903b\u8f91\u4e0a\u4e0d\u5e94\u8be5\u4ea7\u751f\u7684\u60c5\u51b5\u3002 \u4ece\u4e00\u4e9b\u610f\u4e49\u4e0a\u8bb2\uff0c\u65ad\u8a00\u5e76\u4e0d\u662f\u6b63\u5e38\u7a0b\u5e8f\u6240\u5fc5\u9700\u7684\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u7a0b\u5e8f\u8c03\u8bd5\u6765\u8bf4\uff0c\u901a\u5e38\u65ad\u8a00\u80fd\u591f\u5e2e\u52a9\u7a0b\u5e8f\u5f00\u53d1\u8005\u5feb\u901f\u5b9a\u4f4d\u90a3\u4e9b\u8fdd\u53cd\u4e86\u67d0\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u7a0b\u5e8f\u9519\u8bef\u3002\u5728C++\u4e2d\uff0c\u6807\u51c6\u5728 <cassert> \u6216 <asser.h> \u5934\u6587\u4ef6\u4e2d\u4e3a\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86 assert \u5b8f\uff0c\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u65ad\u8a00\u3002 \u5728C++\u4e2d\uff0c\u7a0b\u5e8f\u5458\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5b8f NDEBUG \u6765\u7981\u7528assert\u5b8f\u3002\u8fd9\u5bf9\u53d1\u5e03\u7a0b\u5e8f\u6765\u8bf4\u8fd8\u662f\u5fc5\u8981\u7684\u3002\u56e0\u4e3a\u7a0b\u5e8f\u7528\u6237\u5bf9\u7a0b\u5e8f\u9000\u51fa\u603b\u662f\u654f\u611f\u7684\uff0c\u800c\u4e14\u90e8\u5206\u7684\u7a0b\u5e8f\u9519\u8bef\u4e5f\u672a\u5fc5\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5168\u90e8\u529f\u80fd\u5931\u6548\u3002\u90a3\u4e48\u901a\u8fc7\u5b9a\u4e49 NDEBUG \u5b8f\u53d1\u5e03\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u5c3d\u91cf\u907f\u514d\u7a0b\u5e8f\u9000\u51fa\u7684\u72b6\u51b5\uff0c\u800c\u5f53\u7a0b\u5e8f\u6709\u95ee\u9898\u65f6\uff0c\u901a\u8fc7\u6ca1\u6709\u5b9a\u4e49 NDEBUG \u5b8f\u7684\u7248\u672c\uff0c\u5219\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u627e\u5230\u51fa\u95ee\u9898\u7684\u4f4d\u7f6e\u3002 assert \u5b8f\u5728 <cassert> \u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u4e0b\u5217\u5f62\u5f0f\uff1a #ifdef NDEBUG #define assert(expr) (static_cast<void>(0)) #else ... #endif \u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u65e6\u5b9a\u4e49\u4e86 NDEBUG \u5b8f\uff0c assert \u5b8f\u5c06\u88ab\u5c55\u5f00\u4e3a\u4e00\u6761\u65e0\u610f\u4e49\u7684C\u8bed\u53e5\uff0c\u8fd9\u901a\u5e38\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u6389\u3002","title":"\u65ad\u8a00\uff1a\u8fd0\u884c\u65f6\u4e0e\u9884\u5904\u7406\u65f6"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#static_assert","text":"\u65ad\u8a00 assert \u5b8f\u53ea\u6709\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u800c #error \u53ea\u5728\u7f16\u8bd1\u5668\u9884\u5904\u7406\u65f6\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u7f16\u8bd1\u65f6\u80fd\u505a\u4e00\u4e9b\u65ad\u8a00\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5229\u7528\u8bed\u8a00\u89c4\u5219\u5b9e\u73b0\u9759\u6001\u65ad\u8a00\u7684\u8ba8\u8bba\u975e\u5e38\u591a\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u5b9e\u73b0\u662f\u5f00\u6e90\u5e93Boost\u5185\u7f6e\u7684 BOOST_STATIC_ASSERT \u65ad\u8a00\u673a\u5236\uff08\u5229\u7528 sizeof \u64cd\u4f5c\u7b26\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u201c\u96640\u201d\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u62a5\u9519\u8fd9\u4e2a\u7279\u6027\u6765\u5b9e\u73b0\u9759\u6001\u65ad\u8a00\u3002 #define assert_static(e) \\ do \\ { \\ enum { assert_static__ = 1/(e) }; } while ( 0 ) \u8fd9\u4e2a\u5b8f\u4e2d\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u662f 1/(e) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u3002 \u5b9e\u673a\u8fd0\u884c\u4f1a\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u9664\u96f6\u9519\u8bef\u3002 \u65e0\u8bba\u662f\u54ea\u79cd\u65b9\u5f0f\u7684\u9759\u6001\u65ad\u8a00\uff0c\u5176\u7f3a\u9677\u90fd\u662f\u5f88\u660e\u663e\u7684\uff1a\u8bca\u65ad\u4fe1\u606f\u4e0d\u591f\u5145\u5206\uff0c\u4e0d\u719f\u6089\u8be5\u9759\u6001\u65ad\u8a00\u5b9e\u73b0\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u4e00\u65f6\u65e0\u6cd5\u5c06\u9519\u8bef\u5bf9\u5e94\u5230\u65ad\u8a00\u9519\u8bef\u4e0a\uff0c\u4ece\u800c\u96be\u4ee5\u51c6\u786e\u5b9a\u4f4d\u9519\u8bef\u7684\u6839\u6e90\u3002 \u5728C++11\u6807\u51c6\u4e2d\uff0c\u5f15\u5165\u4e86 static_assert \u65ad\u8a00\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 static_assert \u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u65ad\u8a00\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u901a\u5e38\u9700\u8981\u8fd4\u56de\u4e00\u4e2a bool \u503c\uff1b\u4e00\u4e2a\u5219\u662f\u8b66\u544a\u4fe1\u606f\uff0c\u5b83\u901a\u5e38\u4e5f\u5c31\u662f\u4e00\u6bb5\u5b57\u7b26\u4e32\u3002\u7531\u4e8e static_assert \u662f\u7f16\u8bd1\u65f6\u671f\u7684\u65ad\u8a00\uff0c\u5176\u4f7f\u7528\u8303\u56f4\u4e0d\u50cf assert \u4e00\u6837\u53d7\u5230\u9650\u5236\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c static_assert \u53ef\u4ee5\u62e5\u6709\u4efb\u4f55\u540d\u5b57\u7a7a\u95f4\u3002\u4f8b\u5982\uff1a static_assert ( sizeof ( int ) == 8 , \"This 64-bit machine should follow this!\" ); int main () { return 0 ; } \u5c06 static_assert \u5199\u5728\u51fd\u6570\u4f53\u5916\u901a\u5e38\u662f\u8f83\u597d\u7684\u9009\u62e9\uff0c\u8fd9\u8ba9\u4ee3\u7801\u9605\u8bfb\u8005\u53ef\u4ee5\u8f83\u5bb9\u6613\u53d1\u73b0 static_assert \u4e3a\u65ad\u8a00\u800c\u975e\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u3002 \u5fc5\u987b\u6ce8\u610f\u7684\u662f\uff0c static_assert \u65ad\u8a00\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5fc5\u987b\u662f\u5728\u7f16\u8bd1\u65f6\u671f\u53ef\u4ee5\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f\uff0c\u5373\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u4f7f\u7528\u4e86\u53d8\u91cf\uff0c\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002","title":"\u9759\u6001\u65ad\u8a00\u4e0estatic_assert"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#noexceptnoexcept","text":"noexcept \u5f62\u5982\u5176\u540d\uff0c\u8868\u793a\u5176\u4fee\u9970\u7684\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u4e0e throw() \u52a8\u6001\u5f02\u5e38\u58f0\u660e\u4e0d\u540c\u7684\u662f\uff0c\u5728C++11\u4e2d\u5982\u679c noexcept \u4fee\u9970\u7684\u51fd\u6570\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u8c03\u7528 std::terminate() \u51fd\u6570\u6765\u7ec8\u6b62\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u8fd9\u6bd4\u57fa\u4e8e\u5f02\u5e38\u673a\u5236\u7684 throw() \u5728\u6548\u7387\u4e0a\u4f1a\u9ad8\u4e00\u4e9b\u3002\u8fd9\u662f\u56e0\u4e3a\u5f02\u5e38\u673a\u5236\u4f1a\u5e26\u6765\u4e00\u4e9b\u989d\u5916\u5f00\u9500\uff0c\u6bd4\u5982\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u51fd\u6570\u6808\u88ab\u4f9d\u6b21\u5730\u5c55\u5f00\uff08unwind\uff09\uff0c\u5e76\u4f9d\u5e27\u8c03\u7528\u5728\u672c\u5e27\u4e2d\u5df2\u6784\u9020\u7684\u81ea\u52a8\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570\u7b49\u3002 \u4ece\u8bed\u6cd5\u4e0a\u8bb2\uff0c noexcept \u4fee\u9970\u7b26\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u5c31\u662f\u7b80\u5355\u5730\u5728\u51fd\u6570\u58f0\u660e\u540e\u52a0\u4e0a noexcept \u5173\u952e\u5b57\u3002\u6bd4\u5982\uff1a void excpt_func () noexcept ; \u53e6\u5916\u4e00\u79cd\u5219\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a void ecpt_func () noexcept ( \u5e38\u91cf\u8868\u8fbe\u5f0f ); \u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4f1a\u88ab\u8f6c\u6362\u6210\u4e00\u4e2a bool \u7c7b\u578b\u7684\u503c\u3002\u8be5\u503c\u4e3a true \uff0c\u8868\u793a\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u53cd\u4e4b\uff0c\u5219\u6709\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002\u8fd9\u91cc\uff0c\u4e0d\u5e26\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684 noexcept \u76f8\u5f53\u4e8e\u58f0\u660e\u4e86 noexcept(true) \uff0c\u5373\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728C++11\u4e2d\u4f7f\u7528 noexcept \u53ef\u4ee5\u6709\u6548\u5730\u963b\u6b62\u5f02\u5e38\u7684\u4f20\u64ad\u4e0e\u6269\u6563\u3002 noexcept \u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u7b26\u662f\uff0c\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u6a21\u677f\u3002\u6bd4\u5982\uff1a template < class T > void func () noexcept ( noexcept ( T ())) {} \u8fd9\u91cc\uff0c func \u51fd\u6570\u662f\u5426\u662f\u4e00\u4e2a noexcept \u7684\u51fd\u6570\uff0c\u5c06\u7531 T() \u8868\u8fbe\u5f0f\u662f\u5426\u4f1a\u629b\u51fa\u5f02\u5e38\u6240\u51b3\u5b9a\u3002\u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a noexcept \u5c31\u662f\u4e00\u4e2a noexcept \u64cd\u4f5c\u7b26\u3002\u5f53\u5176\u53c2\u6570\u662f\u4e00\u4e2a\u6709\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u5176\u8fd4\u56de\u503c\u4e3a false \uff0c\u53cd\u4e4b\u5219\u4e3a true \u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u53ef\u4ee5\u4f7f\u6a21\u677f\u51fd\u6570\u6839\u636e\u6761\u4ef6\u5b9e\u73b0 noexcept \u4fee\u9970\u7684\u7248\u672c\u6216\u65e0 noexcept \u4fee\u9970\u7684\u7248\u672c\u3002\u4ece\u6cdb\u578b\u7f16\u7a0b\u7684\u89d2\u5ea6\u770b\u6765\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4fdd\u8bc1\u4e86\u5173\u4e8e\u201c\u51fd\u6570\u662f\u5426\u629b\u51fa\u5f02\u5e38\u201d\u8fd9\u6837\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u8868\u8fbe\u5f0f\u8fdb\u884c\u63a8\u5bfc\u3002\u4e00\u6b21\u8fd9\u4e5f\u53ef\u4ee5\u89c6\u4f5cC++11\u4e3a\u4e86\u66f4\u597d\u5730\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u800c\u5f15\u5165\u7684\u7279\u6027\u3002 \u867d\u7136 noexcept \u4fee\u9970\u7684\u51fd\u6570\u901a\u8fc7 std::terminate() \u7684\u8c03\u7528\u6765\u7ed3\u675f\u7a0b\u5e8f\u7684\u6267\u884c\u7684\u65b9\u5f0f\u53ef\u80fd\u4f1a\u5e26\u6765\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u65e0\u6cd5\u4fdd\u8bc1\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u7684\u6b63\u5e38\u8c03\u7528\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6808\u7684\u81ea\u52a8\u91ca\u653e\u7b49\uff0c\u4f46\u5f88\u591a\u65f6\u5019\uff0c\u201c\u66b4\u529b\u201d\u5730\u7ec8\u6b62\u6574\u4e2a\u7a0b\u5e8f\u786e\u5b9e\u662f\u5f88\u7b80\u5355\u6709\u6548\u7684\u505a\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c noexcept \u88ab\u5e7f\u6cdb\u5730\u3001\u7cfb\u7edf\u5730\u5e94\u7528\u5728C++11\u7684\u6807\u51c6\u5e93\u4e2d\uff0c\u7528\u4e8e\u63d0\u9ad8\u6807\u51c6\u5e93\u7684\u6027\u80fd\uff0c\u4ee5\u53ca\u6ee1\u8db3\u4e00\u4e9b\u963b\u6b62\u5f02\u5e38\u6269\u6563\u7684\u9700\u6c42\u3002 \u6bd4\u5982\u5728C++98\u4e2d\uff0c\u5b58\u5728\u7740\u4f7f\u7528 throw() \u6765\u58f0\u660e\u4e0d\u629b\u51fa\u5f02\u5e38\u7684\u51fd\u6570\u3002 template < class T > class A { public : static constexpr T min () throw () { return T (); } static constexpr T max () throw () { return T (); } static constexpr T lowest () throw () { return T (); } ... }; \u800c\u5728C++11\u4e2d\uff0c\u5219\u4f7f\u7528 noexcept \u6765\u66ff\u6362 throw() \u3002 template < class T > class A { static constexpr T min () noexcept { return T (); } static constexpr T max () noexcept { return T (); } static constexpr T lowest () noexcept { return T (); } ... }; \u53c8\u6bd4\u5982\uff0c\u5728C++98\u4e2d\uff0c new \u53ef\u80fd\u4f1a\u5305\u542b\u4e00\u4e9b\u629b\u51fa\u7684 std::bad_alloc \u5f02\u5e38\u3002 void * operator new ( std :: size_t ) throw ( std :: bad_alloc ); void * operator new []( std :: size_t ) throw ( std :: bad_alloc ); \u800c\u5728C++11\u4e2d\uff0c\u5219\u4f7f\u7528 noexcept(false) \u6765\u8fdb\u884c\u66ff\u4ee3\u3002 void * operator new ( std :: size_t ) noexcept ( false ); void * operator new []( std :: size_t ) noexcept ( false ); \u5f53\u7136\uff0c noexcept \u66f4\u5927\u7684\u4f5c\u7528\u662f\u4fdd\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u3002\u6bd4\u5982\u4e00\u4e2a\u7c7b\u6790\u6784\u51fd\u6570\u4e0d\u5e94\u8be5\u629b\u51fa\u5f02\u5e38\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5e38\u88ab\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684 delete \u51fd\u6570\u6765\u8bf4\uff0cC++11\u9ed8\u8ba4\u5c06 delete \u51fd\u6570\u8bbe\u7f6e\u6210 noexcept \uff0c\u5c31\u53ef\u4ee5\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\u3002 void operator delete ( void * ) noexcept ; void operator delete []( void * ) noexcept ; \u800c\u540c\u6837\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0cC++11\u6807\u51c6\u4e2d\u8ba9\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9ed8\u8ba4\u4e5f\u662f noexcept(true) \u7684\u3002\u5f53\u7136\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u663e\u5f0f\u5730\u4e3a\u6790\u6784\u51fd\u6570\u6307\u5b9a\u4e86 noexcept \uff0c\u6216\u8005\u7c7b\u7684\u57fa\u7c7b\u6216\u6210\u5458\u6709 noexcept(false) \u7684\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u4fdd\u6301\u9ed8\u8ba4\u503c\u3002","title":"noexcept\u4fee\u9970\u7b26\u4e0enoexcept\u64cd\u4f5c\u7b26"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_4","text":"\u5728C++98\u4e2d\uff0c\u652f\u6301\u4e86\u5728\u7c7b\u58f0\u660e\u4e2d\u4f7f\u7528\u7b49\u53f7 = \u52a0\u521d\u59cb\u503c\u7684\u65b9\u5f0f\uff0c\u6765\u521d\u59cb\u5316 \u7c7b\u4e2d\u9759\u6001\u6210\u5458\u5e38\u91cf \u3002\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f\u4e5f\u88ab\u79f0\u4e3a\u201c\u5c31\u5730\u58f0\u660e\u201d\uff0cC++98\u5bf9\u7c7b\u4e2d\u5c31\u5730\u58f0\u660e\u7684\u8981\u6c42\u975e\u5e38\u9ad8\u3002\u5982\u679c\u9759\u6001\u6210\u5458\u4e0d\u6ee1\u8db3\u5e38\u91cf\u6027\uff0c\u5219\u4e0d\u53ef\u4ee5\u5c31\u5730\u58f0\u660e\uff0c\u800c\u4e14\u5373\u4f7f\u5e38\u91cf\u7684\u9759\u6001\u6210\u5458\u4e5f\u53ea\u80fd\u662f\u6574\u578b\u6216\u8005\u679a\u4e3e\u578b\u624d\u80fd\u5c31\u5730\u521d\u59cb\u5316\u3002\u800c\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5219\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u3002\u4f8b\u5b50\uff1a class Init { public : Init () : a ( 0 ) {} Init ( int d ) : a ( d ) {} private : int a ; const static int b = 0 ; int c = 1 ; //\u6210\u5458\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static int d = 0 ; //\u6210\u5458\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static const double e = 1.3 ; //\u975e\u6574\u578b\u6216\u8005\u679a\u4e3e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 static const char * const f = \"e\" ; //\u975e\u6574\u578b\u6216\u8005\u679a\u4e3e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 }; \u5728C++11\u4e2d\uff0c\u6807\u51c6\u5141\u8bb8\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5f62\u5f0f\u6709\u591a\u79cd\u5f62\u5f0f\u3002\u5177\u4f53\u800c\u8a00\uff0c\u9664\u4e86\u521d\u59cb\u5316\u5217\u8868\u5916\uff0c\u5728C++11\u4e2d\uff0c\u6807\u51c6\u8fd8\u5141\u8bb8\u4f7f\u7528\u7b49\u53f7 = \u6216\u8005\u82b1\u62ec\u53f7 {} \u8fdb\u884c\u5c31\u5730\u7684\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u3002\u6bd4\u5982\uff1a struct init { int a = 1 ; double b { 1.2 }; }; \u8fd9\u79cd\u82b1\u62ec\u53f7\u5f0f\u7684\u96c6\u5408\uff08\u5217\u8868\uff09\u521d\u59cb\u5316\u5df2\u7ecf\u6210\u4e3aC++11\u4e2d\u521d\u59cb\u5316\u58f0\u660e\u7684\u4e00\u79cd\u901a\u7528\u5f62\u5f0f\uff0c\u800c\u5176\u6548\u679c\u7c7b\u4f3c\u4e8eC++98\u4e2d\u4f7f\u7528\u5706\u62ec\u53f7()\u5bf9\u81ea\u5b9a\u4e49\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u5217\u8868\u521d\u59cb\u5316\u3002 \u5728C++11\u6807\u51c6\u652f\u6301\u4e86\u5c31\u5730\u521d\u59cb\u5316\u975e\u9759\u6001\u6210\u5458\u7684\u540c\u65f6\uff0c\u521d\u59cb\u5316\u5217\u8868\u8fd9\u4e2a\u624b\u6bb5\u4e5f\u88ab\u4fdd\u7559\u4e0b\u6765\u4e86\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4e3a\u540c\u4e00\u6210\u5458\u53d8\u91cf\u65e2\u58f0\u660e\u5c31\u5730\u7684\u5217\u8868\u521d\u59cb\u5316\uff0c\u53c8\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u53ea\u4e0d\u8fc7\u521d\u59cb\u5316\u5217\u8868\u603b\u662f\u770b\u8d77\u6765\u201c\u540e\u4f5c\u7528\u4e8e\u201d\u975e\u9759\u6001\u6210\u5458\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u521d\u59cb\u5316\u5217\u8868\u7684\u6548\u679c\u603b\u662f\u4f18\u5148\u4e8e\u5c31\u5730\u521d\u59cb\u5316\u7684\u3002","title":"\u5feb\u901f\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#finaloverride","text":"final \u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u4f7f\u6d3e\u751f\u7c7b\u4e0d\u53ef\u8986\u76d6\u5b83\u6240\u4fee\u9970\u7684\u865a\u51fd\u6570\u3002 struct Object { virtual void fun () = 0 ; }; struct Base : public Object { void fun () final ; //\u58f0\u660e\u4e3afinal }; struct Derived : public Base { void fun (); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 }; C++11\u4e2d\u5141\u8bb8\u5c06\u7c7b\u6807\u8bb0\u4e3a final \uff0c\u65b9\u6cd5\u662f\u76f4\u63a5\u5728\u7c7b\u540d\u79f0\u540e\u9762\u4f7f\u7528\u5173\u952e\u5b57 final \uff0c\u5982\u6b64\uff0c\u610f\u5473\u7740\u7ee7\u627f\u8be5\u7c7b\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a class Base final { ... }; \u5728C++11\u4e2d\u4e3a\u4e86\u5e2e\u52a9\u7a0b\u5e8f\u5458\u5199\u7ee7\u627f\u7ed3\u6784\u590d\u6742\u7684\u7c7b\u578b\uff0c\u5f15\u5165\u4e86\u865a\u51fd\u6570\u63cf\u8ff0\u7b26 override \uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u5728\u865a\u51fd\u6570\u58f0\u660e\u65f6\u4f7f\u7528\u4e86 override \u63cf\u8ff0\u7b26\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u5fc5\u987b\u91cd\u8f7d\u5176\u57fa\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\uff0c\u5426\u5219\u4ee3\u7801\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002","title":"final/override\u63a7\u5236"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_5","text":"\u5982\u679c\u6d3e\u751f\u7c7b\u8981\u4f7f\u7528\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7 using \u58f0\u660e\u6765\u5b8c\u6210\u3002 struct Base { void f ( double i ) { std :: cout << \"Base:\" << i << std :: endl ; } }; struct Derived : Base { using Base :: f ; void f ( int i ) { std :: cout << \"Derived:\" << i << std :: endl ; } }; int main () { Base b ; b . f ( 4.5 ); //Base:4.5 Derived d ; d . f ( 4.5 ); //Base:4.5 } \u5982\u4e0a\u4ee3\u7801\uff0c\u57fa\u7c7b Base \u548c\u6d3e\u751f\u7c7b Derived \u58f0\u660e\u4e86\u540c\u540d\u7684\u51fd\u6570 f \uff0c\u4e0d\u8fc7\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u7248\u672c\u8ddf\u57fa\u7c7b\u4e0d\u540c\u3002\u6d3e\u751f\u7c7b\u4e2d\u7684 f \u51fd\u6570\u63a5\u53d7 int \u7c7b\u578b\u4e3a\u53c2\u6570\uff0c\u800c\u57fa\u7c7b\u4e2d\u63a5\u53d7 double \u7c7b\u578b\u7684\u53c2\u6570\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 using \u58f0\u660e\uff0c\u58f0\u660e\u6d3e\u751f\u7c7b Derived \u4e5f\u4f7f\u7528\u57fa\u7c7b\u7248\u672c\u7684\u51fd\u6570 f \u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6d3e\u751f\u7c7b\u4e2d\u5b9e\u9645\u5c31\u6709\u4e86\u4e24\u4e2a\u7248\u672c\u7684 f \u51fd\u6570\u3002 \u5728C++11\u4e2d\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u88ab\u6269\u5c55\u5230\u4e86\u6784\u9020\u51fd\u6570\u4e0a\u3002\u5b50\u7c7b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 using \u58f0\u660e\u6765\u58f0\u660e\u7ee7\u627f\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 struct A { A ( int i ) {} A ( double d , int i ) {} A ( float f , int i , const char * c ) {} //... }; struct B : A { using A :: A ; //\u7ee7\u627f\u6784\u9020\u51fd\u6570 //... virtual void ExtraInterface () {} }; \u8fd9\u91cc\u901a\u8fc7 using A::A \u7684\u58f0\u660e\uff0c\u628a\u57fa\u7c7b\u4e2d\u7684\u6784\u9020\u51fd\u6570\u6089\u6570\u7ee7\u627f\u5230\u6d3e\u751f\u7c7b B \u4e2d\u3002\u800c\u4e14\u66f4\u4e3a\u7cbe\u5de7\u7684\u662f\uff0cC++11\u6807\u51c6\u7ee7\u627f\u6784\u9020\u51fd\u6570\u88ab\u8bbe\u8ba1\u4e3a\u8ddf\u6d3e\u751f\u7c7b\u4e2d\u7684\u5404\u79cd\u7c7b\u9ed8\u8ba4\u51fd\u6570\uff08\u9ed8\u8ba4\u6784\u9020\u3001\u6790\u6784\u3001\u62f7\u8d1d\u6784\u9020\u7b49\uff09\u4e00\u6837\uff0c\u662f\u9690\u5f0f\u58f0\u660e\u7684\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e00\u4e2a\u7ee7\u627f\u6784\u9020\u51fd\u6570\u4e0d\u88ab\u76f8\u5173\u4ee3\u7801\u4f7f\u7528\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u5176\u4ea7\u751f\u771f\u6b63\u7684\u51fd\u6570\u4ee3\u7801\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\uff0c\u6216\u8005\u6d3e\u751f\u7c7b\u662f\u4ece\u57fa\u7c7b\u4e2d\u865a\u7ee7\u627f\u7684\u90a3\u4e48\u5c31\u4e0d\u80fd\u591f\u5728\u6d3e\u751f\u7c7b\u4e2d\u58f0\u660e\u7ee7\u627f\u6784\u9020\u51fd\u6570\u3002\u6b64\u5916\uff0c\u5982\u679c\u4e00\u65e6\u4f7f\u7528\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u4e3a\u6d3e\u751f\u7c7b\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e86\uff0c\u5f97\u6ce8\u610f\u662f\u5426\u5b58\u5728\u65e0\u53c2\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002","title":"\u7ee7\u627f\u6784\u9020\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_6","text":"\u4e0e\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e5f\u662fC++11\u4e2d\u5bf9C++\u7684\u6784\u9020\u51fd\u6570\u7684\u4e00\u9879\u6539\u52a8\uff0c\u5176\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u51cf\u5c11\u7a0b\u5e8f\u5458\u7f16\u5199\u6784\u9020\u51fd\u6570\u7684\u65f6\u95f4\u3002\u901a\u8fc7\u59d4\u6d3e\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u591a\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7f16\u5199\u5c06\u66f4\u52a0\u5bb9\u6613\u3002 class Info { public : Info () : type ( 1 ), name ( 'a' ) { InitRest (); } Info ( int i ) : type ( i ), name ( 'a' ) { InitRest (); } Info ( char e ) : type ( 1 ), name ( e ) { InitRest (); } private : void InitRest () { /* \u5176\u5b83\u521d\u59cb\u5316 */ } int type ; char name ; //... }; \u5982\u4e0a\u4ee3\u7801\uff0c Info \u7c7b\u62e5\u67092\u4e2a\u6210\u5458\u53d8\u91cf\u4ee5\u53ca3\u4e2a\u6784\u9020\u51fd\u6570\u3002\u8fd9\u91cc\u76843\u4e2a\u6784\u9020\u51fd\u6570\u90fd\u58f0\u660e\u4e86\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u6210\u5458 type \u548c name \uff0c\u5e76\u4e14\u90fd\u8c03\u7528\u4e86\u76f8\u540c\u7684\u51fd\u6570 InitRest \u3002\u9664\u4e86\u521d\u59cb\u5316\u5217\u8868\u7684\u4e0d\u540c\uff0c\u5176\u5b83\u90e8\u5206\u7684\u4ee3\u7801\u5b58\u5728\u7740\u5f88\u591a\u91cd\u590d\u3002 \u5728C+11\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u7b80\u5316\u4ee3\u7801\u7684\u4e66\u5199\u3002\u9996\u5148\u8981\u62bd\u8c61\u51fa\u6700\u4e3a\u901a\u7528\u7684\u884c\u4e3a\uff0c\u5199\u4e00\u4e2a\u201c\u57fa\u51c6\u201d\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u8fd9\u4e2a\u201c\u57fa\u51c6\u201d\u6784\u9020\u51fd\u6570\u3002\u8c03\u7528\u8005\u79f0\u4e3a\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u8005\u79f0\u4e3a\u76ee\u6807\u6784\u9020\u51fd\u6570\u3002 \u4f7f\u7528\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff1a class Info { public : Info () : Info ( 1 , 'a' ) { } Info ( int i ) : Info ( i , 'a' ) { } Info ( char e ) : Info ( 1 , e ) { } private : Info ( int i , char e ) : type ( i ), name ( e ) { /* \u5176\u5b83\u521d\u59cb\u5316 */ } int type ; char name ; //... }; \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u79c1\u6709\u7684\u76ee\u6807\u6784\u9020\u51fd\u6570 Info(int, char) \uff0c\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u5c06\u53c2\u6570\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\u3002\u7531\u4e8e\u8fd9\u4e2a\u76ee\u6807\u6784\u9020\u51fd\u6570\u7684\u5b58\u5728\uff0c InitRest \u51fd\u6570\u4e5f\u4e0d\u518d\u9700\u8981\u4e86\uff0c\u800c\u662f\u5c06\u5176\u4ee3\u7801\u653e\u5165 Info(int, char) \u4e2d\u3002\u8fd9\u6837\uff0c\u5176\u4ed6\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u5c31\u53ef\u4ee5\u59d4\u6258\u8be5\u76ee\u6807\u51fd\u6570\u6765\u5b8c\u6210\u6784\u9020\u3002 1. \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u201c\u59d4\u6d3e\u201d\u548c\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\uff0c\u6240\u4ee5\u5982\u679c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u8981\u7ed9\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u521d\u59cb\u5316\u4ee3\u7801\u5fc5\u987b\u653e\u5728\u51fd\u6570\u4f53\u4e2d\uff1b 2. \u76ee\u6807\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u603b\u662f\u5148\u4e8e\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u907f\u514d\u76ee\u6807\u6784\u9020\u51fd\u6570\u548c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u521d\u59cb\u5316\u540c\u6837\u7684\u6210\u5458\u901a\u5e38\u662f\u5fc5\u8981\u7684\uff1b 3. \u76ee\u6807\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u80fd\u662f\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5f62\u6210\u94fe\u72b6\u7684\u59d4\u6d3e\u6784\u9020\u5173\u7cfb\uff0c\u8981\u6ce8\u610f\u907f\u514d\u5f62\u6210\u59d4\u6258\u73af\uff1b 4. \u5728\u5f02\u5e38\u5904\u7406\u65b9\u9762\uff0c\u5982\u679c\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528 try \u7684\u8bdd\uff0c\u90a3\u4e48\u4ece\u76ee\u6807\u6784\u9020\u51fd\u6570\u4e2d\u4ea7\u751f\u7684\u5f02\u5e38\u90fd\u53ef\u4ee5\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u88ab\u6355\u6349\u5230\u3002","title":"\u59d4\u6d3e\u6784\u9020\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_7","text":"","title":"\u53f3\u503c\u5f15\u7528\uff1a\u79fb\u52a8\u8bed\u4e49\u548c\u5b8c\u7f8e\u8f6c\u53d1"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_8","text":"\u7f16\u5199C++\u7a0b\u5e8f\u6709\u4e00\u6761\u5fc5\u987b\u6ce8\u610f\u7684\u89c4\u5219\uff0c\u5c31\u662f\u5728\u7c7b\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u9488\u6210\u5458\u7684\u8bdd\uff0c\u5c31\u8981\u7279\u522b\u5c0f\u5fc3\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f16\u5199\u3002\u5728\u672a\u58f0\u660e\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff0cC++\u4f1a\u4e3a\u7c7b\u751f\u6210\u4e00\u4e2a\u6d45\u62f7\u8d1d\u7684\u6784\u9020\u51fd\u6570\u3002 \u901a\u5e38\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u5b9e\u73b0\u201c\u6df1\u62f7\u8d1d\u201d\u3002","title":"\u6307\u9488\u6210\u5458\u4e0e\u62f7\u8d1d\u6784\u9020"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_9","text":"C++\u4e2d\u4e00\u4e2a\u88ab\u5e7f\u6cdb\u8ba4\u540c\u7684\u8bf4\u6cd5\uff0c\u53ef\u4ee5\u53d6\u5730\u5740\u7684\u3001\u6709\u540d\u5b57\u7684\u5c31\u662f\u5de6\u503c\uff0c\u53cd\u4e4b\uff0c\u4e0d\u80fd\u53d6\u5730\u5740\u7684\u3001\u6ca1\u6709\u540d\u5b57\u7684\u5c31\u662f\u53f3\u503c\u3002 \u66f4\u4e3a\u7ec6\u81f4\u5730\uff0c\u5728C++11\u4e2d\uff0c\u53f3\u503c\u662f\u7531\u4e24\u4e2a\u6982\u5ff5\u6784\u6210\u7684\uff0c\u4e00\u4e2a\u662f\u5c06\u4ea1\u503c\uff0c\u53e6\u4e00\u4e2a\u662f\u7eaf\u53f3\u503c\u3002","title":"\u5de6\u503c\u3001\u53f3\u503c\u4e0e\u53f3\u503c\u5f15\u7528"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#auto","text":"C++11\u4e2d\u7c7b\u578b\u63a8\u5bfc\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e4b\u4e00\u662f\u91cd\u5b9a\u4e49\u4e86 auto \u5173\u952e\u5b57\uff0c\u53e6\u5916\u4e00\u4e2a\u5b9e\u73b0\u662f decltype \u3002 int main () { auto name = \"world. \\n \" ; std :: cout << \"hello, \" << name ; } \u8fd9\u91cc\u4f7f\u7528\u4e86 auto \u5173\u952e\u5b57\u6765\u8981\u6c42\u7f16\u8bd1\u5668\u5bf9\u53d8\u91cf name \u7684\u7c7b\u578b\u8fdb\u884c\u81ea\u52a8\u63a8\u5bfc\uff0c\u7f16\u8bd1\u5668\u6839\u636e\u5b83\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\uff0c\u63a8\u5bfc\u51fa name \u7684\u7c7b\u578b\u4e3a char* \u3002 auto \u58f0\u660e\u7684\u53d8\u91cf\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u4f7f\u7f16\u8bd1\u5668\u80fd\u591f\u4ece\u5176\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63a8\u5bfc\u51fa\u5176\u7c7b\u578b\u3002 auto \u5e76\u975e\u4e00\u79cd\u201c\u7c7b\u578b\u201d\u58f0\u660e\uff0c\u800c\u662f\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u201c\u5360\u4f4d\u7b26\u201d\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u671f\u4f1a\u5c06 auto \u66ff\u4ee3\u4e3a\u53d8\u91cf\u5b9e\u9645\u7684\u7c7b\u578b\u3002","title":"auto\u7c7b\u578b\u63a8\u5bfc"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#auto_1","text":"auto \u63a8\u5bfc\u7684\u4e00\u4e2a\u6700\u5927\u4f18\u52bf\u5c31\u662f\u5728\u62e5\u6709\u521d\u59cb\u8868\u8fbe\u5f0f\u7684\u590d\u6742\u7c7b\u578b\u53d8\u91cf\u58f0\u660e\u65f6\u7b80\u5316\u4ee3\u7801\u3002 \u5728\u4e0d\u4f7f\u7528 using namespace std \u7684\u60c5\u51b5\u4e0b\u5bf9\u4e00\u4e2a vector \u6570\u7ec4\u8fdb\u884c\u5faa\u73af\uff0c\u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u65f6\u5019\u5fc5\u987b\u5199\u51fa std::vector<std::string>::iterator \u8fd9\u6837\u957f\u7684\u7c7b\u578b\u58f0\u660e\u3002\u800c\u4f7f\u7528 auto \u7684\u8bdd\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u53ef\u4ee5\u6210\u500d\u589e\u957f\u3002 void loopver ( std :: vector < std :: string > & vs ) { for ( auto i = vs . begin (); i < vs . end (); i ++ ) { //do something } } \u5982\u4e0a\u4ee3\u7801\uff0c\u4f7f\u7528\u4e86 auto \uff0c\u7a0b\u5e8f\u5458\u751a\u81f3\u53ef\u4ee5\u5c06\u8fed\u4ee3\u5668\u7684\u58f0\u660e\u653e\u5165 for \u5faa\u73af\u4e2d\uff0c i \u7684\u7c7b\u578b\u5c06\u7531\u8868\u8fbe\u5f0f vs.begin() \u63a8\u5bfc\u51fa\u6765\u3002\u5728C++11\u4e2d\uff0c\u7531\u4e8e auto \u7684\u5b58\u5728\uff0c\u4f7f\u7528 STL \u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff0c\u5199\u51fa\u7684\u4ee3\u7801\u4e5f\u4f1a\u66f4\u52a0\u6e05\u6670\u53ef\u8bfb\u3002 auto \u7684\u7b2c\u4e8c\u4e2a\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u514d\u9664\u7a0b\u5e8f\u5458\u5728\u4e00\u4e9b\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u9ebb\u70e6\uff0c\u6216\u8005\u907f\u514d\u4e00\u4e9b\u5728\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u9519\u8bef\u3002 auto \u7684\u7b2c\u4e09\u4e2a\u6709\u70b9\u5c31\u662f\u5176\u201c\u81ea\u9002\u5e94\u201d\u6027\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u3002","title":"auto\u7684\u4f18\u52bf"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#decltype","text":"\u4e0e auto \u7c7b\u4f3c\uff0c decltype \u4e5f\u80fd\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u8fc7\u4e24\u8005\u7684\u4f7f\u7528\u65b9\u5f0f\u5374\u53c8\u4e00\u5b9a\u7684\u533a\u522b\u3002 int main () { int i ; decltype ( i ) j = 0 ; std :: cout << typeid ( j ). name () << std :: endl ; float a ; double b ; decltype ( a + b ) c ; std :: cout << typeid ( c ). name () << std :: endl ; } \u4ece\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u5230\uff0c decltype \u7684\u7c7b\u578b\u63a8\u5bfc\u5e76\u4e0d\u662f\u50cf auto \u4e00\u6837\u662f\u4ece\u53d8\u91cf\u58f0\u660e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u83b7\u5f97\u53d8\u91cf\u7684\u7c7b\u578b\uff0c decltype \u603b\u662f\u4ee5\u4e00\u4e2a\u666e\u901a\u7684\u8868\u8fbe\u5f0f\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u8be5\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3002\u800c\u4e0e auto \u76f8\u540c\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\u578b\u6307\u793a\u7b26\uff0c decltype \u53ef\u4ee5\u5c06\u83b7\u5f97\u7684\u7c7b\u578b\u6765\u5b9a\u4e49\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u3002\u4e0e auto \u76f8\u540c\uff0c decltyp \u7c7b\u578b\u63a8\u5bfc\u4e5f\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\u3002","title":"decltype"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#for","text":"C++11\u5f15\u5165\u4e86\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\u3002 int main () { int arr [ 5 ] = { 1 , 2 , 3 , 4 , 5 }; for ( auto & e : arr ) e *= 2 ; for ( auto e : arr ) std :: cout << e << '\\t' ; } for \u5faa\u73af\u540e\u7684\u62ec\u53f7\u7531\u5192\u53f7 : \u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u8303\u56f4\u5185\u7528\u4e8e\u8fed\u4ee3\u7684\u53d8\u91cf\uff0c\u7b2c\u4e8c\u90e8\u5206\u5219\u8868\u793a\u88ab\u8fed\u4ee3\u7684\u8303\u56f4\u3002\u5982\u679c\u8fed\u4ee3\u53d8\u91cf\u7684\u503c\u5728\u5faa\u73af\u4e2d\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u4e0d\u7528\u5f15\u7528\u7684\u65b9\u5f0f\u3002 \u662f\u5426\u80fd\u591f\u4f7f\u7528\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\uff0c\u5fc5\u987b\u4f9d\u8d56\u4e8e\u4e00\u4e9b\u6761\u4ef6\u3002\u9996\u5148\uff0c\u5c31\u662f for \u5faa\u73af\u8fed\u4ee3\u7684\u8303\u56f4\u662f\u786e\u5b9a\u7684\u3002\u5bf9\u4e8e\u7c7b\u6765\u8bf4\uff0c\u5982\u679c\u8be5\u7c7b\u6709 begin \u548c end \u51fd\u6570\uff0c\u90a3\u4e48 begin \u548c end \u4e4b\u95f4\u5c31\u662f for \u5faa\u73af\u8fed\u4ee3\u7684\u8303\u56f4\u3002\u5bf9\u4e8e\u6570\u7ec4\u800c\u8a00\uff0c\u5c31\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u95f4\u7684\u8303\u56f4\u3002\u5176\u6b21\uff0c\u57fa\u4e8e\u8303\u56f4\u7684 for \u5faa\u73af\u8fd8\u8981\u6c42\u8fed\u4ee3\u7684\u5bf9\u8c61\u5b9e\u73b0 ++ \u548c == \u7b49\u64cd\u4f5c\u7b26\u3002\u5bf9\u4e8e\u6807\u51c6\u5e93\u5bb9\u5668\uff0c\u5982 string \u3001 array \u3001 vector \u3001 deque \u3001 list \u3001 queue \u3001 map \u3001 set \u7b49\uff0c\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u6807\u51c6\u5e93\u603b\u662f\u4fdd\u8bc1\u5176\u5bb9\u5668\u5b9a\u4e49\u4e86\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u666e\u901a\u7684\u5df2\u77e5\u957f\u5ea6\u7684\u6570\u7ec4\u4e5f\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\u800c\u7528\u6237\u81ea\u5df1\u5199\u7684\u7c7b\uff0c\u5219\u9700\u8981\u81ea\u884c\u63d0\u4f9b\u76f8\u5173\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u57fa\u4e8e\u8303\u56f4\u7684\u5faa\u73af\u4f7f\u7528\u5728\u6807\u51c6\u5bb9\u5668\u4e2d\u65f6\uff0c\u5982\u679c\u4f7f\u7528 auto \u6765\u58f0\u660e\u8fed\u4ee3\u7684\u5bf9\u8c61\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u4e0d\u4f1a\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 int main () { std :: vector < int > v = { 1 , 2 , 3 , 4 , 5 }; for ( auto i = v . begin (); i < v . end (); i ++ ) std :: cout << * i << std :: endl ; //i\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61 for ( auto e : v ) std :: cout << e << std :: endl ; //e\u662f\u89e3\u5f15\u7528\u540e\u7684\u5bf9\u8c61 }","title":"\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_10","text":"","title":"\u9ed8\u8ba4\u51fd\u6570\u7684\u63a7\u5236"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#_11","text":"\u5728C++\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5e2e\u52a9\u7a0b\u5e8f\u5458\u751f\u6210\u4e00\u4e9b\u4ed6\u4eec\u672a\u81ea\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\u3002\u8fd9\u6837\u7684\u51fd\u6570\u7248\u672c\u88ab\u79f0\u4e3a\u201c\u9ed8\u8ba4\u51fd\u6570\u201d\uff0c\u5305\u62ec\u4e86\u4ee5\u4e0b\u4e00\u4e9b\u51fd\u6570\uff1a - \u6784\u9020\u51fd\u6570 - \u62f7\u8d1d\u6784\u9020\u51fd\u6570 - \u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\uff08operator=\uff09 - \u79fb\u52a8\u6784\u9020\u51fd\u6570 - \u79fb\u52a8\u62f7\u8d1d\u51fd\u6570 - \u6790\u6784\u51fd\u6570 \u6b64\u5916\uff0cC++\u7f16\u8bd1\u5668\u8fd8\u4f1a\u4e3a\u4ee5\u4e0b\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u7c7b\u578b\u63d0\u4f9b\u5168\u5c40\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u51fd\u6570\uff1a - operator , - operator & - operator && - operator * - operator -> - operator ->* - operator new - operator delete \u5728C++\u8bed\u8a00\u89c4\u5219\u4e2d\uff0c\u4e00\u65e6\u7a0b\u5e8f\u5458\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u51fd\u6570\u7684\u81ea\u5b9a\u4e49\u7248\u672c\uff0c\u5219\u7f16\u8bd1\u5668\u4e0d\u4f1a\u518d\u4e3a\u8be5\u7c7b\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4\u7248\u672c\u3002\u6709\u65f6\u8fd9\u6837\u7684\u89c4\u5219\u4f1a\u88ab\u7a0b\u5e8f\u5458\u5fd8\u8bb0\uff0c\u6700\u5e38\u89c1\u7684\u662f\u58f0\u660e\u4e86\u5e26\u53c2\u6570\u7684\u6784\u9020\u7248\u672c\uff0c\u5219\u5fc5\u987b\u58f0\u660e\u4e0d\u5e26\u53c2\u6570\u7684\u7248\u672c\u4ee5\u5b8c\u6210\u65e0\u53c2\u7684\u53d8\u91cf\u521d\u59cb\u5316\u3002\u66f4\u4e3a\u4e25\u91cd\u7684\u95ee\u9898\u662f\uff0c\u4e00\u65e6\u58f0\u660e\u4e86\u81ea\u5b9a\u4e49\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u6709\u53ef\u80fd\u5bfc\u81f4\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u578b\u4e0d\u518d\u662fPOD\u7684\u3002 \u53d8\u4e3a\u975ePOD\u7c7b\u578b\u5e26\u6765\u4e00\u7cfb\u5217\u8d1f\u9762\u5f71\u54cd\u6709\u65f6\u662f\u7a0b\u5e8f\u5458\u6240\u4e0d\u5e0c\u671b\u7684\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u5931\u53bb\u4e86\u4f18\u5316\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u7684\u53ef\u80fd\u3002 \u56e0\u6b64\u9700\u8981\u4e00\u4e9b\u65b9\u5f0f\u6765\u4f7f\u5f97\u7b80\u5355\u7c7b\u578b\u201c\u6062\u590d\u201dPOD\u7684\u7279\u8d28\u3002 \u5728C++11\u6807\u51c6\u4e2d\uff0c\u901a\u8fc7\u63d0\u4f9b\u65b0\u7684\u673a\u5236\u6765\u63a7\u5236\u9ed8\u8ba4\u7248\u672c\u7684\u51fd\u6570\u7684\u751f\u6210\u6765\u5b8c\u6210\u8fd9\u4e2a\u76ee\u7684\u3002\u8fd9\u4e2a\u65b0\u673a\u5236\u91cd\u7528\u4e86 default \u5173\u952e\u5b57\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5728\u9ed8\u8ba4\u51fd\u6570\u5b9a\u4e49\u6216\u8005\u58f0\u660e\u65f6\u52a0\u4e0a =default \uff0c\u4ece\u800c\u663e\u5f0f\u5730\u6307\u793a\u7f16\u8bd1\u5668\u751f\u6210\u8be5\u51fd\u6570\u7684\u9ed8\u8ba4\u7248\u672c\u3002\u800c\u5982\u679c\u6307\u5b9a\u4ea7\u751f\u9ed8\u8ba4\u7248\u672c\u540e\uff0c\u7a0b\u5e8f\u5458\u4e0d\u518d\u4e5f\u4e0d\u5e94\u8be5\u5b9e\u73b0\u4e00\u4efd\u540c\u540d\u7684\u51fd\u6570\u3002 class TwoCstor { public : //\u63d0\u4f9b\u4e86\u5e26\u53c2\u6570\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u6307\u793a\u7f16\u8bd1\u5668 //\u63d0\u4f9b\u9ed8\u8ba4\u7248\u672c\uff0c\u5219\u672c\u81ea\u5b9a\u4e49\u7c7b\u578b\u4f9d\u7136\u662fPOD\u7c7b\u578b TwoCstor () = default ; TwoCstor ( int i ) : data ( i ) {} private : int data ; }; int main () { std :: cout << std :: is_pod < TwoCstor >:: value << std :: endl ; //1 } \u53e6\u4e00\u65b9\u9762\uff0c\u7a0b\u5e8f\u5458\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u5e0c\u671b\u80fd\u591f\u9650\u5236\u4e00\u4e9b\u9ed8\u8ba4\u51fd\u6570\u7684\u751f\u6210\u3002\u6700\u5178\u578b\u5730\uff0c\u7c7b\u7684\u7f16\u5199\u8005\u6709\u65f6\u9700\u8981\u7981\u6b62\u4f7f\u7528\u8005\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5728C++98\u6807\u51c6\u4e2d\uff0c\u6211\u4eec\u7684\u505a\u6cd5\u662f\u5c06\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a private \u6210\u5458\uff0c\u5e76\u4e14\u4e0d\u63d0\u4f9b\u51fd\u6570\u5b9e\u73b0\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u4e00\u65e6\u6709\u4eba\u8bd5\u56fe\uff08\u6216\u8005\u65e0\u610f\u8bc6\uff09\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\u3002 \u5728C++11\u4e2d\uff0c\u6807\u51c6\u5219\u7ed9\u51fa\u4e86\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5373\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u6216\u8005\u58f0\u660e\u52a0\u4e0a =delete \uff0c\u8fd9\u4f1a\u6307\u793a\u7f16\u8bd1\u5668\u4e0d\u751f\u6210\u51fd\u6570\u7684\u7f3a\u7701\u7248\u672c\u3002 class NoCopyCstor { public : NoCopyCstor () = default ; //\u4f7f\u7528 =delete \u53ef\u4ee5\u6709\u6548\u963b\u6b62\u7528\u6237\u9519\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 NoCopyCstor ( const NoCopyCstor & ) = delete ; }; int main () { NoCopyCstor a ; NoCopyCstor b ( a ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 } \u4e00\u65e6\u7f3a\u7701\u7248\u672c\u5220\u9664\u4e86\uff0c\u91cd\u8f7d\u8be5\u51fd\u6570\u4e5f\u662f\u975e\u6cd5\u7684\u3002 C++11\u6807\u51c6\u79f0 =default \u4fee\u9970\u7684\u51fd\u6570\u4e3a\u663e\u5f0f\u7f3a\u7701\u51fd\u6570\uff0c\u79f0 =delete \u4fee\u9970\u7684\u51fd\u6570\u4e3a\u663e\u5f0f\u5220\u9664\u51fd\u6570\u3002 \u5f15\u5165\u663e\u5f0f\u7f3a\u7701\u51fd\u6570\u548c\u663e\u793a\u5220\u9664\u51fd\u6570\u662f\u4e3a\u4e86\u589e\u5f3a\u5bf9\u7c7b\u9ed8\u8ba4\u51fd\u6570\u7684\u63a7\u5236\uff0c\u8ba9\u7a0b\u5e8f\u5458\u80fd\u591f\u66f4\u52a0\u7cbe\u7ec6\u5730\u63a7\u5236\u9ed8\u8ba4\u7248\u672c\u7684\u51fd\u6570\u3002\u4e0d\u8fc7\u8fd9\u5e76\u4e0d\u662f\u5b83\u4eec\u7684\u552f\u4e00\u529f\u80fd\uff0c\u4f7f\u7528\u4e0a\u4e5f\u4e0d\u4ec5\u4ec5\u5c40\u9650\u5728\u7c7b\u7684\u5b9a\u4e49\u5185\u3002 \u663e\u793a\u7f3a\u7701\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5b9a\u4e49\u4e4b\u5916\u4fee\u9970\u6210\u5458\u51fd\u6570\u3002\u5728\u7c7b\u5b9a\u4e49\u5916\u663e\u5f0f\u6307\u5b9a\u7f3a\u7701\u7248\u672c\u6240\u5e26\u6765\u7684\u597d\u5904\u662f\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5bf9\u4e00\u4e2a class \u5b9a\u4e49\u63d0\u4f9b\u591a\u4e2a\u5b9e\u73b0\u7248\u672c\uff08\u591a\u4e2acpp\u6587\u4ef6\uff09\u3002 \u663e\u5f0f\u5220\u9664\u4e5f\u5e76\u975e\u5c40\u9650\u4e8e\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u8fd8\u53ef\u4ee5\u907f\u514d\u7f16\u8bd1\u5668\u505a\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002 class ConvType { public : ConvType ( int i ) { }; ConvType ( char c ) = delete ; //\u5220\u9664 char \u7248\u672c }; void Func ( ConvType ct ) { } int main () { Func ( 3 ); Func ( 'a' ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 ConvType ci ( 3 ); ConvType cc ( 'a' ); //\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1 } \u5bf9\u4e8e\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u6765\u7981\u6b62\u7f16\u8bd1\u5668\u505a\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u7c7b\u578b\u8f6c\u6362\u4e0a\uff0c\u5e76\u4e0d\u5c40\u9650\u4e8e\u7f3a\u7701\u7248\u672c\u7684\u7c7b\u6210\u5458\u51fd\u6570\u6216\u8005\u5168\u5c40\u51fd\u6570\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u666e\u901a\u7684\u51fd\u6570\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u5220\u9664\u6765\u7981\u6b62\u7c7b\u578b\u8f6c\u6362\u3002 \u663e\u5f0f\u5220\u9664\u8fd8\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\u6bd4\u5982\u7a0b\u5e8f\u5458\u4f7f\u7528\u663e\u5f0f\u5220\u9664\u6765\u5220\u9664\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684 operator new \u64cd\u4f5c\u7b26\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u907f\u514d\u5728\u5806\u4e0a\u5206\u914d\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 class NoHeapAlloc { public : void * operaotr new ( std :: size_t ) = delete ; }; int main () { NoHeapAlloc nha ; NoHeapAlloc * pha = new NoHeapAlloc ; //\u7f16\u8bd1\u5931\u8d25 return 0 ; }","title":"\u7c7b\u4e0e\u9ed8\u8ba4\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/C%2B%2B%2011/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3C%2B%2B11/#lambda","text":"int main () { int girls = 3 , boys = 4 ; auto totalChild = []( int x , int y ) -> int { return x + y ; }; return totalChild ( girls , boys ); } lambda \u51fd\u6570\u7684\u8bed\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a [ capture ]( parameters ) mutable -> return - type { statement ; } \u5176\u4e2d\uff0c - [capture] \uff1a\u6355\u6349\u5217\u8868\u3002\u6355\u6349\u5217\u8868\u603b\u662f\u51fa\u73b0\u5728 lambda \u51fd\u6570\u7684\u5f00\u59cb\u5904\u3002\u4e8b\u5b9e\u4e0a\uff0c [] \u662f lambda \u5f15\u51fa\u7b26\u3002\u7f16\u8bd1\u5668\u6839\u636e\u8be5\u5f15\u51fa\u7b26\u5224\u65ad\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u662f\u5426\u662f lambda \u51fd\u6570\u3002\u6355\u6349\u5217\u8868\u80fd\u591f\u6355\u6349\u4e0a\u4e0b\u6587\u4e2d\u7684\u53d8\u91cf\u4ee5\u63d0\u4f9b lambda \u51fd\u6570\u4f7f\u7528\u3002 - (parameters) \uff1a\u53c2\u6570\u5217\u8868\u3002\u4e0e\u666e\u901a\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u8fde\u540c\u62ec\u53f7 () \u4e00\u8d77\u7701\u7565\u3002 - mutable \uff1a mutable \u4fee\u9970\u7b26\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c lambda \u51fd\u6570\u603b\u662f\u4e00\u4e2a const \u51fd\u6570\uff0c mutable \u53ef\u4ee5\u53d6\u6d88\u5176\u5e38\u91cf\u6027\u3002\u5728\u4f7f\u7528\u8be5\u4fee\u9970\u7b26\u65f6\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u53ef\u7701\u7565\uff08\u5373\u4f7f\u53c2\u6570\u4e3a\u7a7a\uff09\u3002 - ->return-type \uff1a\u8fd4\u56de\u7c7b\u578b\u3002\u7528\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5f62\u5f0f\u58f0\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u3002\u51fa\u4e8e\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u8fd4\u56de\u503c\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u8fde\u540c\u7b26\u53f7 -> \u4e00\u8d77\u7701\u7565\u3002\u6b64\u5916\uff0c\u5728\u8fd4\u56de\u7c7b\u578b\u660e\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565\u8be5\u90e8\u5206\uff0c\u8ba9\u7f16\u8bd1\u5668\u5bf9\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u63a8\u5bfc\u3002 - statement \uff1a\u51fd\u6570\u4f53\u3002\u5185\u5bb9\u4e0e\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u4e0d\u8fc7\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u6355\u83b7\u7684\u53d8\u91cf\u3002 lambda \u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6700\u5927\u7684\u533a\u522b\u4e4b\u4e00\uff0c\u5c31\u662f lambda \u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u6355\u6349\u5217\u8868\u8bbf\u95ee\u4e00\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u7684\u6570\u636e\uff0c\u5177\u4f53\u5730\uff0c\u6355\u6349\u5217\u8868\u63cf\u8ff0\u4e86\u4e0a\u4e0b\u6587\u4e2d\u54ea\u4e9b\u6570\u636e\u53ef\u4ee5\u88ab lambda \u4f7f\u7528\uff0c\u4ee5\u53ca\u4f7f\u7528\u65b9\u5f0f\uff08\u503c\u4f20\u9012\u6216\u5f15\u7528\u4f20\u9012\uff09\u3002 \u8bed\u6cd5\u4e0a\uff0c\u6355\u6349\u5217\u8868\u7531\u591a\u4e2a\u6355\u6349\u9879\u7ec4\u6210\uff0c\u5e76\u4ee5\u9017\u53f7\u5206\u5272\u3002\u6355\u6349\u5217\u8868\u7531\u5982\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a [var] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u53d8\u91cf var [=] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u6240\u6709\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u5305\u62ec this \uff09 [&var] \u8868\u793a\u5f15\u7528\u4f20\u9012\u6355\u6349\u53d8\u91cf var [&] \u8868\u793a\u5f15\u7528\u4f20\u9012\u6355\u6349\u6240\u6709\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff08\u5305\u62ec this \uff09 [this] \u8868\u793a\u503c\u4f20\u9012\u65b9\u5f0f\u6355\u6349\u5f53\u524d\u7684 this \u6307\u9488 \u6355\u6349\u5217\u8868\u4e0d\u5141\u8bb8\u53d8\u91cf\u91cd\u590d\u4f20\u9012\u3002 \u4f8b\u5982\uff1a [=, a] \u3001 [&, &this] \u4f1a\u5bfc\u81f4\u7f16\u8bd1\u65f6\u671f\u7684\u9519\u8bef\u3002","title":"lambda\u51fd\u6570"},{"location":"Programming/00.%20C%2B%2B/STL/%E5%90%84%E7%A7%8D%E5%AE%B9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%97%B6%E6%9C%BA/","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e94\u8be5\u4f7f\u7528 vector \u3002 vector \u7684\u5185\u90e8\u7ed3\u6784\u6700\u7b80\u5355\uff0c\u5e76\u5141\u8bb8\u968f\u673a\u8bbf\u95ee\uff0c\u6240\u4ee5\u6570\u636e\u7684\u8bbf\u95ee\u5341\u5206\u65b9\u4fbf\u7075\u6d3b\uff0c\u6570\u636e\u7684\u5904\u7406\u4e5f\u591f\u5feb\u3002 \u5982\u679c\u7ecf\u5e38\u8981\u5728\u5e8f\u5217\u5934\u90e8\u548c\u5c3e\u90e8\u5b89\u63d2\u548c\u79fb\u52a8\u5143\u7d20\uff0c\u5e94\u8be5\u91c7\u7528 deque \u3002\u5982\u679c\u4f60\u5e0c\u671b\u5143\u7d20\u88ab\u79fb\u9664\u65f6\uff0c\u5bb9\u5668\u80fd\u591f\u81ea\u52a8\u7f29\u51cf\u5185\u90e8\u5185\u5b58\u7528\u91cf\uff0c\u90a3\u4e48\u4e5f\u8be5\u91c7\u7528 deque \u3002\u6b64\u5916\uff0c\u7531\u4e8e vector \u901a\u5e38\u91c7\u7528\u4e00\u4e2a\u5185\u5b58\u533a\u5757\u6765\u5b58\u653e\u5143\u7d20\uff0c\u800c deque \u91c7\u7528\u591a\u4e2a\u533a\u5757\uff0c\u6240\u4ee5\u540e\u8005\u53ef\u5185\u542b\u66f4\u591a\u5143\u7d20\u3002 \u5982\u679c\u9700\u8981\u7ecf\u5e38\u5728\u5bb9\u5668\u4e2d\u6bb5\u6267\u884c\u5143\u7d20\u7684\u5b89\u63d2\u3001\u79fb\u9664\u548c\u79fb\u52a8\uff0c\u53ef\u8003\u8651\u4f7f\u7528 list \u3002 list \u63d0\u4f9b\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u5e38\u91cf\u65f6\u95f4\u5185\u5c06\u5143\u7d20\u4ece A \u5bb9\u5668\u8f6c\u79fb\u5230 B \u5bb9\u5668\u3002\u4f46\u7531\u4e8e list \u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u6240\u4ee5\u5982\u679c\u53ea\u77e5\u9053 list \u7684\u5934\u90e8\u5374\u8981\u9020\u8bbf list \u7684\u4e2d\u6bb5\u5143\u7d20\uff0c\u6548\u80fd\u4f1a\u5927\u6253\u6298\u6263\u3002 \u5982\u679c\u4f60\u8981\u7684\u5bb9\u5668\u5bf9\u5f02\u5e38\u7684\u5904\u7406\u662f\u7684\u201c\u6bcf\u6b21\u64cd\u4f5c\u82e5\u4e0d\u6210\u529f\u4fbf\u65e0\u4efb\u4f55\u4f5c\u7528\u201d\uff0c\u90a3\u4e48\u5e94\u8be5\u9009\u7528 list \uff08\u4f46\u662f\u4e0d\u8c03\u7528\u5176 assignment \u64cd\u4f5c\u7b26\u548c sort() \uff1b\u800c\u4e14\u5982\u679c\u5143\u7d20\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5c31\u4e0d\u8981\u8c03\u7528 merge() \u3001 remove() \u3001 remove_if() \u548c unique() \uff09\uff0c\u6216\u9009\u7528\u5173\u8054\u5f0f\u5bb9\u5668\uff08\u4f46\u662f\u4e0d\u8c03\u7528\u591a\u5143\u7d20\u5b89\u63d2\u52a8\u4f5c\uff0c\u800c\u4e14\u5982\u679c\u6bd4\u8f83\u51c6\u5219\u7684\u590d\u5236/\u8d4b\u503c\u52a8\u4f5c\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff0c\u5c31\u4e0d\u8981\u8c03\u7528 swap() \u6216 erase() \uff09\u3002 \u5982\u679c\u4f60\u7ecf\u5e38\u9700\u8981\u6839\u636e\u67d0\u4e2a\u51c6\u5219\u67e5\u627e\u5143\u7d20\uff0c\u5e94\u5f53\u4f7f\u7528\u201c\u4f9d\u636e\u8be5\u51c6\u5219\u8fdb\u884c hash \u201d\u7684 unordered set \u6216 multiset \u3002\u7136\u800c\uff0chash \u5bb9\u5668\u5185\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5fc5\u987b\u4f9d\u8d56\u5143\u7d20\u7684\u6b21\u5e8f\uff08order\uff09\uff0c\u5e94\u8be5\u4f7f\u7528 set \u6216 multiset \uff0c\u5b83\u4eec\u6839\u636e\u67e5\u627e\u51c6\u5219\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 \u5982\u679c\u60f3\u5904\u7406 key / value pair\uff0c\u8bf7\u91c7\u7528 unordered (multi)map \u3002\u5982\u679c\u5143\u7d20\u6b21\u5e8f\u5f88\u91cd\u8981\uff0c\u53ef\u91c7\u7528 (multi)map \u3002 \u5982\u679c\u9700\u8981\u5173\u8054\u5f0f\u6570\u7ec4\uff0c\u5e94\u91c7\u7528 unordered map \u3002\u5982\u679c\u5143\u7d20\u7684\u6b21\u5e8f\u5f88\u91cd\u8981\uff0c\u53ef\u91c7\u7528 map \u3002 \u5982\u679c\u9700\u8981\u5b57\u5178\u7ed3\u6784\uff0c\u5e94\u91c7\u7528 unordered multimap \u3002\u5982\u679c\u5143\u7d20\u7684\u6b21\u5e8f\u5f88\u91cd\u8981\uff0c\u53ef\u91c7\u7528 multimap \u3002","title":"\u5404\u79cd\u5bb9\u5668\u7684\u4f7f\u7528\u65f6\u673a"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/iterator%E4%BC%98%E5%85%88%E4%BA%8Econst_iterator%E3%80%81reverse_iterator%E5%8F%8Aconst_reverse_iterator/","text":"\u6709\u4e9b\u7248\u672c\u7684 insert \u548c erase \u51fd\u6570\u8981\u6c42\u4f7f\u7528 iterator \u3002\u5982\u679c\u9700\u8981\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\uff0c\u5c31\u5fc5\u987b\u4f7f\u7528 iterator \u3002 const \u548c reverse \u578b\u7684\u8fed\u4ee3\u5668\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u51fd\u6570\u7684\u8981\u6c42\u3002 \u8981\u60f3\u9690\u5f0f\u5730\u5c06\u4e00\u4e2a const_iterator \u8f6c\u6362\u6210 iterator \u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u4ece reverse_iterator \u8f6c\u6362\u800c\u6765\u7684 iterator \u5728\u4f7f\u7528\u4e4b\u524d\u53ef\u80fd\u9700\u8981\u76f8\u5e94\u7684\u8c03\u6574\u3002 \u5c3d\u91cf\u4f7f\u7528 iterator \u800c\u4e0d\u662f const \u6216 reverse \u578b\u7684\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u4f7f\u5bb9\u5668\u7684\u4f7f\u7528\u66f4\u4e3a\u7b80\u5355\u800c\u6709\u6548\uff0c\u5e76\u4e14\u53ef\u4ee5\u907f\u514d\u6f5c\u5728\u7684\u95ee\u9898\u3002","title":"Iterator\u4f18\u5148\u4e8econst iterator\u3001reverse iterator\u53caconst reverse iterator"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E6%85%8E%E9%87%8D%E9%80%89%E6%8B%A9%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/","text":"\u8981\u5220\u9664\u5bb9\u5668\u4e2d\u6709\u7279\u5b9a\u503c\u7684\u6240\u6709\u5bf9\u8c61 \u5982\u679c\u5bb9\u5668\u662f vector \u3001 string \u6216 deque \uff0c\u5219\u4f7f\u7528 erase-remove \u4e60\u60ef\u7528\u6cd5 \u5982\u679c\u5bb9\u5668\u662f list \uff0c\u5219\u4f7f\u7528 list::remove \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u4f7f\u7528\u5b83\u7684 erase \u6210\u5458\u51fd\u6570 \u8981\u5220\u9664\u5bb9\u5668\u4e2d\u6ee1\u8db3\u7279\u5b9a\u5224\u522b\u5f0f\uff08\u6761\u4ef6\uff09\u7684\u6240\u6709\u5bf9\u8c61 \u5982\u679c\u5bb9\u5668\u662f vector \u3001 string \u6216 deque \uff0c\u5219\u4f7f\u7528 erase-remove_if \u4e60\u60ef\u7528\u6cd5 \u5982\u679c\u5bb9\u5668\u662f list \uff0c\u5219\u4f7f\u7528 list::remove_if \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u4f7f\u7528 remove_copy_if \u548c swap \uff0c\u6216\u8005\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u5f53\u628a\u8fed\u4ee3\u5668\u4f20\u9012\u7ed9 erase \u65f6\uff0c\u8981\u5bf9\u5b83\u8fdb\u884c\u540e\u7f00\u9012\u589e \u8981\u5728\u5faa\u73af\u5185\u90e8\u505a\u67d0\u4e9b\uff08\u9664\u4e86\u5220\u9664\u5bf9\u8c61\u4e4b\u5916\u7684\uff09\u64cd\u4f5c \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5e8f\u5217\u5bb9\u5668\uff0c\u5219\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u6bcf\u6b21\u8c03\u7528 erase \u65f6\uff0c\u8981\u7528\u5b83\u7684\u8fd4\u56de\u503c\u66f4\u65b0\u8fed\u4ee3\u5668 \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u5f53\u628a\u8fed\u4ee3\u5668\u4f20\u7ed9 erase \u65f6\uff0c\u8981\u5bf9\u8fed\u4ee3\u5668\u505a\u540e\u7f00\u9012\u589e","title":"\u8981\u5220\u9664\u5bb9\u5668\u4e2d\u6709\u7279\u5b9a\u503c\u7684\u6240\u6709\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E6%85%8E%E9%87%8D%E9%80%89%E6%8B%A9%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/#_1","text":"\u5982\u679c\u5bb9\u5668\u662f vector \u3001 string \u6216 deque \uff0c\u5219\u4f7f\u7528 erase-remove \u4e60\u60ef\u7528\u6cd5 \u5982\u679c\u5bb9\u5668\u662f list \uff0c\u5219\u4f7f\u7528 list::remove \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u4f7f\u7528\u5b83\u7684 erase \u6210\u5458\u51fd\u6570","title":"\u8981\u5220\u9664\u5bb9\u5668\u4e2d\u6709\u7279\u5b9a\u503c\u7684\u6240\u6709\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E6%85%8E%E9%87%8D%E9%80%89%E6%8B%A9%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/#_2","text":"\u5982\u679c\u5bb9\u5668\u662f vector \u3001 string \u6216 deque \uff0c\u5219\u4f7f\u7528 erase-remove_if \u4e60\u60ef\u7528\u6cd5 \u5982\u679c\u5bb9\u5668\u662f list \uff0c\u5219\u4f7f\u7528 list::remove_if \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u4f7f\u7528 remove_copy_if \u548c swap \uff0c\u6216\u8005\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u5f53\u628a\u8fed\u4ee3\u5668\u4f20\u9012\u7ed9 erase \u65f6\uff0c\u8981\u5bf9\u5b83\u8fdb\u884c\u540e\u7f00\u9012\u589e","title":"\u8981\u5220\u9664\u5bb9\u5668\u4e2d\u6ee1\u8db3\u7279\u5b9a\u5224\u522b\u5f0f\uff08\u6761\u4ef6\uff09\u7684\u6240\u6709\u5bf9\u8c61"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E6%85%8E%E9%87%8D%E9%80%89%E6%8B%A9%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95/#_3","text":"\u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5e8f\u5217\u5bb9\u5668\uff0c\u5219\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u6bcf\u6b21\u8c03\u7528 erase \u65f6\uff0c\u8981\u7528\u5b83\u7684\u8fd4\u56de\u503c\u66f4\u65b0\u8fed\u4ee3\u5668 \u5982\u679c\u5bb9\u5668\u662f\u4e00\u4e2a\u6807\u51c6\u5173\u8054\u5bb9\u5668\uff0c\u5219\u5199\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u8bb0\u4f4f\u5f53\u628a\u8fed\u4ee3\u5668\u4f20\u7ed9 erase \u65f6\uff0c\u8981\u5bf9\u8fed\u4ee3\u5668\u505a\u540e\u7f00\u9012\u589e","title":"\u8981\u5728\u5faa\u73af\u5185\u90e8\u505a\u67d0\u4e9b\uff08\u9664\u4e86\u5220\u9664\u5bf9\u8c61\u4e4b\u5916\u7684\uff09\u64cd\u4f5c"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E6%85%8E%E9%87%8D%E9%80%89%E6%8B%A9%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/","text":"\u662f\u5426\u9700\u8981\u5728\u5bb9\u5668\u7684\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u65b0\u5143\u7d20\uff1f \u5982\u679c\u9700\u8981\uff0c\u5c31\u9009\u62e9\u5e8f\u5217\u5bb9\u5668\uff1b\u5173\u8054\u5bb9\u5668\u662f\u4e0d\u884c\u7684\u3002 \u662f\u5426\u5173\u5fc3\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u662f\u6392\u5e8f\u7684\uff1f \u5982\u679c\u4e0d\u5173\u5fc3\uff0c\u5219\u54c8\u5e0c\u5bb9\u5668\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u9009\u62e9\u65b9\u6848\uff1b\u5426\u5219\uff0c\u9700\u8981\u907f\u514d\u54c8\u5e0c\u5bb9\u5668\u3002 \u9700\u8981\u54ea\u79cd\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff1f \u5982\u679c\u5b83\u4eec\u5fc5\u987b\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u5219\u5bf9\u5bb9\u5668\u7684\u9009\u62e9\u5c31\u88ab\u9650\u5b9a\u4e3a vector \u3001 deque \u3001\u548c string \u3002 \u5f53\u53d1\u751f\u5143\u7d20\u7684\u63d2\u5165\u6216\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u907f\u514d\u79fb\u52a8\u5bb9\u5668\u4e2d\u539f\u6765\u7684\u539f\u59cb\u662f\u5426\u5f88\u91cd\u8981\uff1f \u5982\u679c\u662f\uff0c\u5c31\u8981\u907f\u514d\u8fde\u7eed\u5185\u5b58\u7684\u5bb9\u5668\u3002 \u5bb9\u5668\u4e2d\u6570\u636e\u7684\u5e03\u5c40\u662f\u5426\u9700\u8981\u548c C \u517c\u5bb9\uff1f \u5982\u679c\u9700\u8981\u517c\u5bb9\uff0c\u5c31\u53ea\u80fd\u9009\u62e9 vector \u3002 \u5143\u7d20\u7684\u67e5\u627e\u901f\u5ea6\u662f\u5426\u662f\u5173\u952e\u7684\u8003\u8651\u56e0\u7d20\uff1f \u5982\u679c\u662f\uff0c\u5c31\u8981\u8003\u8651\u54c8\u5e0c\u5bb9\u5668\u3001\u6392\u5e8f\u7684vector\u548c\u6807\u51c6\u5173\u8054\u5bb9\u5668\u2014\u2014\u6216\u8bb8\u8fd9\u5c31\u662f\u4f18\u5148\u987a\u5e8f\u3002 \u662f\u5426\u4ecb\u610f\u5bb9\u5668\u5185\u90e8\u4f7f\u7528\u4e86\u5f15\u7528\u8ba1\u6570\u6280\u672f\uff1f \u5982\u679c\u662f\uff0c\u5c31\u8981\u907f\u514d\u4f7f\u7528 string \uff0c\u56e0\u4e3a\u8bb8\u591a string \u7684\u5b9e\u73b0\u90fd\u4f7f\u7528\u4e86\u5f15\u7528\u8ba1\u6570\u3002 \u5728\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5931\u8d25\u65f6\uff0c\u9700\u8981\u56de\u6eda\u80fd\u529b\u5417\uff1f \u5982\u679c\u9700\u8981\uff0c\u5c31\u8981\u4f7f\u7528\u57fa\u4e8e\u8282\u70b9\u7684\u5bb9\u5668\u3002\u5982\u679c\u5bf9\u591a\u4e2a\u5143\u7d20\u7684\u63d2\u5165\u64cd\u4f5c\u9700\u8981\u4e8b\u52a1\u8bed\u4e49\uff0c\u5219\u9700\u8981\u9009\u62e9list\uff0c\u56e0\u4e3a\u5728\u6807\u51c6\u5bb9\u5668\u4e2d\uff0c\u53ea\u6709list\u5bf9\u591a\u4e2a\u5143\u7d20\u7684\u63d2\u5165\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4e8b\u52a1\u8bed\u4e49\u3002 \u9700\u8981\u4f7f\u8fed\u4ee3\u5668\u3001\u6307\u9488\u548c\u5f15\u7528\u53d8\u4e3a\u65e0\u6548\u7684\u6b21\u6570\u6700\u5c11\u5417\uff1f \u5982\u679c\u662f\u8fd9\u6837\uff0c\u5c31\u8981\u4f7f\u7528\u57fa\u4e8e\u8282\u70b9\u7684\u5bb9\u5668\uff0c\u56e0\u4e3a\u5bf9\u8fd9\u7c7b\u5bb9\u5668\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u4ece\u6765\u4e0d\u4f1a\u4f7f\u8fed\u4ee3\u5668\u3001\u6307\u9488\u548c\u5f15\u7528\u53d8\u4e3a\u65e0\u6548\u3002\u800c\u9488\u5bf9\u8fde\u7eed\u5185\u5b58\u5bb9\u5668\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u4e00\u822c\u4f1a\u4f7f\u6307\u5411\u8be5\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u3001\u6307\u9488\u548c\u5f15\u7528\u53d8\u4e3a\u65e0\u6548\u3002 \u662f\u5426\u4ecb\u610f\u5728\u5bb9\u5668\u4e0a\u4f7f\u7528 swap \u65f6\u8fed\u4ee3\u5668\u3001\u6307\u9488\u548c\u5f15\u7528\u53d8\u4e3a\u65e0\u6548\uff1f \u5982\u679c\u4ecb\u610f\uff0c\u90a3\u4e48\u8981\u907f\u514d\u4f7f\u7528 string \uff0c\u56e0\u4e3a string \u662f STL \u4e2d\u5728 swap \u8fc7\u7a0b\u4e2d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u3001\u6307\u9488\u548c\u5f15\u7528\u53d8\u4e3a\u65e0\u6548\u7684\u552f\u4e00\u5bb9\u5668\u3002","title":"\u614e\u91cd\u9009\u62e9\u5bb9\u5668\u7c7b\u578b"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E7%A1%AE%E4%BF%9D%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%8B%B7%E8%B4%9D%E6%AD%A3%E7%A1%AE%E8%80%8C%E9%AB%98%E6%95%88/","text":"\u5bb9\u5668\u4e2d\u4fdd\u5b58\u4e86\u5bf9\u8c61\uff0c\u4f46\u5e76\u4e0d\u662f\u7528\u6237\u63d0\u4f9b\u7ed9\u5bb9\u5668\u7684\u90a3\u4e9b\u5bf9\u8c61\uff0c\u800c\u662f\u6240\u6307\u5b9a\u7684\u5bf9\u8c61\u7684\u62f7\u8d1d\u3002 \u4e00\u65e6\u4e00\u4e2a\u5bf9\u8c61\u88ab\u4fdd\u5b58\u5230\u5bb9\u5668\u4e2d\uff0c\u5b83\u7ecf\u5e38\u4f1a\u8fdb\u4e00\u6b65\u88ab\u62f7\u8d1d\u3002\u5f53\u5bf9 vector \u3001 string \u548c deque \u8fdb\u884c\u5143\u7d20\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u73b0\u6709\u5143\u7d20\u7684\u4f4d\u7f6e\u901a\u5e38\u4f1a\u88ab\u79fb\u52a8\uff08\u590d\u5236\uff09\u3002 \u62f7\u8d1d\u5bf9\u8c61\u662f STL \u7684\u5de5\u4f5c\u65b9\u5f0f\u3002 \u8fd9\u79cd\u62f7\u8d1d\u52a8\u4f5c\u662f\u600e\u6837\u8fdb\u884c\u7684\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5229\u7528\u4e00\u4e2a\u5bf9\u8c61\u7684\u62f7\u8d1d\u6210\u5458\u51fd\u6570\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u62f7\u8d1d\u8be5\u5bf9\u8c61\uff0c\u7279\u522b\u662f\u5bf9\u8c61\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u8d4b\u503c\u64cd\u4f5c\u7b26\u3002 \u5982\u679c\u5bb9\u5668\u4e2d\u5bf9\u8c61\u7684\u62f7\u8d1d\u64cd\u4f5c\u5f88\u8d39\u65f6\uff0c\u90a3\u4e48\u5411\u5bb9\u5668\u4e2d\u586b\u5145\u5bf9\u8c61\u8fd9\u4e00\u7b80\u5355\u7684\u64cd\u4f5c\u5c06\u4f1a\u6210\u4e3a\u7a0b\u5e8f\u7684\u6027\u80fd\u74f6\u9888\u3002\u653e\u5165\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u8d8a\u591a\uff0c\u62f7\u8d1d\u6240\u9700\u8981\u7684\u5185\u5b58\u548c\u65f6\u95f4\u5c31\u8d8a\u591a\u3002 \u5728\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u7684\u60c5\u51b5\u4e0b\uff0c\u62f7\u8d1d\u52a8\u4f5c\u4f1a\u5bfc\u81f4\u5265\u79bb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u521b\u5efa\u4e00\u4e2a\u5b58\u653e\u57fa\u7c7b\u5bf9\u8c61\u7684\u5bb9\u5668\uff0c\u5374\u5411\u5176\u4e2d\u63d2\u5165\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u90a3\u4e48\u5728\u6d3e\u751f\u7c7b\u5bf9\u8c61\u88ab\u62f7\u8d1d\u8fdb\u5bb9\u5668\u65f6\uff0c\u5b83\u6240\u7279\u6709\u7684\u90e8\u5206\u5c06\u4f1a\u4e22\u5931\u3002\u201c\u5265\u79bb\u201d\u95ee\u9898\u610f\u5473\u7740\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u5bb9\u5668\u4e2d\u63d2\u5165\u6d3e\u751f\u7c7b\u5bf9\u8c61\u51e0\u4e4e\u603b\u662f\u9519\u8bef\u7684\u3002 \u4f7f\u62f7\u8d1d\u52a8\u4f5c\u9ad8\u6548\u3001\u6b63\u786e\uff0c\u5e76\u9632\u6b62\u5265\u79bb\u95ee\u9898\u53d1\u751f\u7684\u4e00\u4e2a\u7b80\u5355\u529e\u6cd5\u5c31\u662f\u4f7f\u5bb9\u5668\u5305\u542b\u6307\u9488\u800c\u4e0d\u662f\u5bf9\u8c61\u3002\u62f7\u8d1d\u6307\u9488\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u5e76\u4e14\u603b\u662f\u4f1a\u6309\u4f60\u671f\u671b\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u800c\u4e14\u5f53\u5b83\u88ab\u62f7\u8d1d\u65f6\u4e0d\u4f1a\u6709\u4efb\u4f55\u5265\u79bb\u73b0\u8c61\u53d1\u751f\u3002 \u667a\u80fd\u6307\u9488\u5f80\u5f80\u662f\u4e0d\u9519\u7684\u9009\u62e9\u3002","title":"\u786e\u4fdd\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u62f7\u8d1d\u6b63\u786e\u800c\u9ad8\u6548"},{"location":"Programming/00.%20C%2B%2B/STL/Effective%20STL/%E8%B0%83%E7%94%A8empty%E8%80%8C%E4%B8%8D%E6%98%AF%E6%A3%80%E6%9F%A5size%28%29%E6%98%AF%E5%90%A6%E4%B8%BA0/","text":"\u5bf9\u4efb\u4e00\u5bb9\u5668 C\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a if ( c . size () == 0 ) { ... } \u672c\u8d28\u4e0a\u4e0e if ( c . empty ()) { ... } \u662f\u7b49\u4ef7\u7684\u3002 \u5e94\u8be5\u4f7f\u7528 empty \u5f62\u5f0f\uff0c\u7406\u7531\u5f88\u7b80\u5355\uff1a empty \u5bf9\u6240\u6709\u7684\u6807\u51c6\u5bb9\u5668\u90fd\u662f\u5e38\u6570\u65f6\u95f4\u64cd\u4f5c\uff0c\u800c\u5bf9\u4e00\u4e9b list \u5b9e\u73b0\uff0c size \u8017\u8d39\u7ebf\u6027\u65f6\u95f4\u3002","title":"\u8c03\u7528empty\u800c\u4e0d\u662f\u68c0\u67e5size()\u662f\u5426\u4e3a0"},{"location":"Programming/01.%20Python/00.%20Python%20%E7%AE%80%E4%BB%8B/","text":"Python \u7531\u8377\u5170\u6570\u5b66\u548c \u8ba1\u7b97\u673a\u79d1\u5b66 \u7814\u7a76\u5b66\u4f1a\u7684 \u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6 \u4e8e1990\u5e74\u4ee3\u521d\u8bbe\u8ba1\uff0c\u4f5c\u4e3a\u4e00\u95e8\u53eb\u505a ABC\u8bed\u8a00 \u7684\u66ff\u4ee3\u54c1\u3002 Python \u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u9ad8\u7ea7 \u6570\u636e\u7ed3\u6784 \uff0c\u8fd8\u80fd\u7b80\u5355\u6709\u6548\u5730 \u9762\u5411\u5bf9\u8c61 \u7f16\u7a0b\u3002Python \u8bed\u6cd5 \u548c\u52a8\u6001\u7c7b\u578b\uff0c\u4ee5\u53ca \u89e3\u91ca\u578b\u8bed\u8a00 \u7684\u672c\u8d28\uff0c\u4f7f\u5b83\u6210\u4e3a\u591a\u6570\u5e73\u53f0\u4e0a\u5199 \u811a\u672c \u548c\u5feb\u901f\u5f00\u53d1\u5e94\u7528\u7684[[00. \u7f16\u7a0b\u7b80\u4ecb#\u7f16\u7a0b\u8bed\u8a00|\u7f16\u7a0b\u8bed\u8a00]]\uff0c\u968f\u7740\u7248\u672c\u7684\u4e0d\u65ad\u66f4\u65b0\u548c\u8bed\u8a00\u65b0\u529f\u80fd\u7684\u6dfb\u52a0\uff0c\u9010\u6e10\u88ab\u7528\u4e8e\u72ec\u7acb\u7684\u3001 \u5927\u578b\u9879\u76ee \u7684\u5f00\u53d1\u3002 Python \u89e3\u91ca\u5668 \u6613\u4e8e\u6269\u5c55\uff0c\u53ef\u4ee5\u4f7f\u7528 C\u8bed\u8a00 \u6216 C++ \uff08\u6216\u8005\u5176\u4ed6\u53ef\u4ee5\u901a\u8fc7 C \u8c03\u7528\u7684\u8bed\u8a00\uff09\u6269\u5c55\u65b0\u7684\u529f\u80fd\u548c \u6570\u636e\u7c7b\u578b \u3002Python \u4e5f\u53ef\u7528\u4e8e\u53ef\u5b9a\u5236\u5316\u8f6f\u4ef6\u4e2d\u7684\u6269\u5c55\u7a0b\u5e8f\u8bed\u8a00\u3002Python \u4e30\u5bcc\u7684\u6807\u51c6\u5e93\uff0c\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u5404\u4e2a\u4e3b\u8981\u7cfb\u7edf\u5e73\u53f0\u7684 \u6e90\u7801 \u6216 \u673a\u5668\u7801 \u3002","title":"00. Python \u7b80\u4ecb"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/","text":"\u4ec0\u4e48\u662f\u88c5\u9970\u5668 \u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aPython\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u529f\u80fd\uff0c\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u5b83\u7ecf\u5e38\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\uff0c\u6bd4\u5982\uff1a\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u3001\u7f13\u5b58\u3001\u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f\u3002\u88c5\u9970\u5668\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7edd\u4f73\u8bbe\u8ba1\uff0c\u6709\u4e86\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u7ee7\u7eed\u91cd\u7528\u3002 \u7b80\u5355\u5730\u8bf4\uff0c\u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u51fd\u6570\u6216\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002 \u600e\u4e48\u5199\u4e00\u4e2a\u88c5\u9970\u5668 #!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func (): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func () return wrapped_func def test_func () -> None : pprint ( \"It's a test function\" ) test_func = debug_log ( test_func ) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u4e0a\u9762\u7684 debug_log \u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u5bf9\u539f\u51fd\u6570\u505a\u4e86\u5305\u88c5\u5e76\u8fd4\u56de\u4e86\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\uff0c\u989d\u5916\u6dfb\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\u3002\u56e0\u4e3a\u8fd9\u6837\u5199\u5b9e\u5728\u4e0d\u592a\u4f18\u96c5\uff0cPython\u4e2d\u652f\u6301\u4e86@\u8bed\u6cd5\u7cd6\uff0c\u4e0b\u9762\u4ee3\u7801\u7b49\u540c\u4e8e\u65e9\u671f\u7684\u5199\u6cd5\u3002 #!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func (): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func () return wrapped_func @debug_log def test_func () -> None : pprint ( \"It's a test function\" ) #test_func = debug_log(test_func) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u8fd9\u662f\u6700\u7b80\u5355\u7684\u88c5\u9970\u5668\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u574f\u4e86\u3002Python\u63d0\u4f9b\u4e86\u53ef\u53d8\u53c2\u6570 args \u548c\u5173\u952e\u5b57\u53c2\u6570 *kwargs \uff0c\u6709\u4e86\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u7528\u4e8e\u4efb\u610f\u76ee\u6807\u51fd\u6570\u3002 #!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func ( * args , ** kwargs ): # \u6307\u5b9a\u5b87\u5b99\u65e0\u654c\u53c2\u6570 pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return wrapped_func @debug_log def test_func () -> None : pprint ( \"It's a test function\" ) #test_func = debug_log(test_func) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u4ee5\u4e0a\u4e3a\u88c5\u9970\u5668\u521d\u7ea7\u7528\u6cd5\u3002 \u8fdb\u9636\u88c5\u9970\u5668 \u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668 \u5047\u8bbe\u6211\u4eec\u524d\u6587\u7684\u88c5\u9970\u5668\u9700\u8981\u5b8c\u6210\u7684\u529f\u80fd\u4e0d\u4ec5\u4ec5\u662f\u80fd\u5728\u8fdb\u5165\u67d0\u4e2a\u51fd\u6570\u540e\u6253\u51falog\u4fe1\u606f\uff0c\u800c\u4e14\u8fd8\u9700\u6307\u5b9alog\u7684\u7ea7\u522b\uff0c\u90a3\u4e48\u88c5\u9970\u5668\u5c31\u4f1a\u662f\u8fd9\u6837\u7684\u3002 #!/usr/bin/env python from pprint import pprint import datetime import inspect def log ( level ): def wrapper ( func ): def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5982\u4e0a\u4ee3\u7801\uff0c\u5728\u521d\u7ea7\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\u591a\u4e86\u4e00\u5c42\u51fd\u6570\u5b9a\u4e49\uff0c\u4e09\u5c42\u51fd\u6570\u5b9a\u4e49\uff0c\u6700\u5916\u5c42\u51fd\u6570\u63a5\u6536\u4f20\u9012\u7ed9\u88c5\u9970\u5668\u7684\u53c2\u6570\u3002 \u57fa\u4e8e\u7c7b\u5b9e\u73b0\u7684\u88c5\u9970\u5668 \u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u8f7d\u4e86 __call__() \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002\u4f8b\u5982\uff1a class test_class ( object ): def __init__ ( self ) -> None : super () . __init__ () pass def __call__ ( self , * args , ** kwds ): print ( 'test_class called' ) t = test_class () t () \u50cf __call__ \u8fd9\u6837\u524d\u540e\u90fd\u5e26\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5\u5728Python\u4e2d\u88ab\u79f0\u4e3a\u5185\u7f6e\u65b9\u6cd5\uff0c\u6709\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u9b54\u6cd5\u65b9\u6cd5\u3002\u91cd\u8f7d\u8fd9\u4e9b\u9b54\u6cd5\u65b9\u6cd5\u4e00\u822c\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u884c\u4e3a\u3002\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u8ba9\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u62e5\u6709\u4e86\u88ab\u8c03\u7528\u7684\u884c\u4e3a\u3002 \u56de\u5230\u88c5\u9970\u5668\u4e0a\u7684\u6982\u5ff5\u4e0a\u6765\uff0c\u88c5\u9970\u5668\u8981\u6c42\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\uff08\u4e0d\u592a\u4e25\u8c28\uff0c\u8be6\u89c1\u540e\u6587\uff09\u3002\u90a3\u4e48\u7528\u7c7b\u6765\u5b9e\u73b0\u4e5f\u662f\u4e5f\u53ef\u4ee5\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u7c7b\u7684\u6784\u9020\u51fd\u6570 __init__() \u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u91cd\u8f7d __call__() \u5e76\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8fbe\u5230\u88c5\u9970\u5668\u51fd\u6570\u7684\u6548\u679c\u3002 class Logging ( object ): def __init__ ( self , func ) -> None : super () . __init__ () self . _func = func def __call__ ( self , * args , ** kwargs ): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), self . _func . __name__ )) return self . _func ( * args , ** kwargs ) @Logging def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5e26\u53c2\u6570\u7684\u7c7b\u88c5\u9970\u5668 \u5982\u679c\u9700\u8981\u901a\u8fc7\u7c7b\u5f62\u5f0f\u5b9e\u73b0\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\uff0c\u90a3\u4e48\u5728\u6784\u9020\u51fd\u6570\u91cc\u63a5\u53d7\u7684\u5c31\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u4f20\u5165\u7684\u53c2\u6570\u3002\u901a\u8fc7\u7c7b\u628a\u8fd9\u4e9b\u53c2\u6570\u4fdd\u5b58\u8d77\u6765\u3002\u7136\u540e\u5728\u91cd\u8f7d __call__ \u65b9\u6cd5\u65f6\u5c31\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u3002 class Logging ( object ): def __init__ ( self , level ) -> None : super () . __init__ () self . _level = level def __call__ ( self , func ): def wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( self . _level , datetime . datetime . now (), func . __name__ )) func ( * args , ** kwargs ) return wrapper @Logging ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5185\u7f6e\u7684\u88c5\u9970\u5668 \u5185\u7f6e\u7684\u88c5\u9970\u5668\u548c\u666e\u901a\u7684\u88c5\u9970\u5668\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd4\u56de\u7684\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u662f\u7c7b\u5bf9\u8c61\u3002 \u5c5e\u6027\u88c5\u9970\u5668property \u5c5e\u6027\u6709\u4e09\u4e2a\u88c5\u9970\u5668\uff1a setter , getter , deleter \uff0c\u90fd\u662f\u5728 property() \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u5c01\u88c5\uff0c\u56e0\u4e3a setter \u548c deleter \u662f property() \u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u4e0d\u80fd\u76f4\u63a5\u5957\u7528@\u8bed\u6cd5\u3002 getter \u88c5\u9970\u5668\u548c\u4e0d\u5e26 getter \u7684\u5c5e\u6027\u88c5\u9970\u5668\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f30\u8ba1\u53ea\u662f\u4e3a\u4e86\u51d1\u6570\uff0c\u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u5b58\u5728\u7684\u610f\u4e49\u3002\u7ecf\u8fc7 @property \u88c5\u9970\u8fc7\u7684\u51fd\u6570\u8fd4\u56de\u7684\u4e0d\u518d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a property \u5bf9\u8c61\u3002\u4f7f\u7528\u793a\u4f8b\u5982\u4e0b\uff1a class Example ( object ): _width : int = 0 _height : int = 0 def __init__ ( self , width = 0 , height = 0 ) -> None : super () . __init__ () self . _width = width self . _height = height @property def width ( self ) -> int : return self . _width @width . setter def width ( self , width : int = 0 ) -> None : self . _width = width @width . deleter def width ( self ) -> None : del self . _width e = Example ( 5 , 6 ) pprint ( e . width ) e . width = 7 pprint ( e . width ) del e . width pprint ( e . width ) \u7c7b\u65b9\u6cd5\u88c5\u9970\u5668classmethod @classmethod \u88c5\u9970\u7684\u65b9\u6cd5\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\uff0c\u4e0d\u9700\u8981 self \u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684 cls \u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\u3002 class Test ( object ): number : int = 10 def __init__ ( self ) -> None : super () . __init__ () @classmethod def get_number ( cls ) -> int : return cls . number class Child ( Test ): number : int = 30 def __init__ ( self ) -> None : super () . __init__ () @classmethod def get_number ( cls ) -> int : return cls . number # \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\uff0c\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u7c7b\u65b9\u6cd5 pprint ( Test . get_number ()) pprint ( Child . get_number ()) \u9759\u6001\u65b9\u6cd5\u88c5\u9970\u5668staticmethod @staticmethod \u6539\u53d8\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u4e0d\u9700\u8981\u4f20\u9012\u9690\u6027\u7684\u7b2c\u4e00\u53c2\u6570\uff0c\u9759\u6001\u65b9\u6cd5\u7684\u672c\u8d28\u7c7b\u578b\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u8fdb\u884c\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\u3002 \u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u64cd\u4f5c\u7c7b\u5c5e\u6027\u3002 \u5bf9\u4e8e\u9759\u6001\u65b9\u6cd5\u800c\u8a00\uff0c\u6240\u5728\u7c7b\u66f4\u50cf\u662f\u4e00\u79cd\u540d\u79f0\u7a7a\u95f4\u3002\u5176\u5b9e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5916\u9762\u5199\u4e00\u4e2a\u540c\u6837\u7684\u51fd\u6570\u6765\u505a\u8fd9\u4e9b\u4e8b\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u5c31\u6253\u4e71\u4e86\u903b\u8f91\u5173\u7cfb\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u4ee5\u540e\u4ee3\u7801\u7ef4\u62a4\u56f0\u96be\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u4e0a\u6587\u63d0\u5230\u7684\u88c5\u9970\u5668\u63a5\u53e3\u5b9a\u4e49\u53ef\u4ee5\u66f4\u52a0\u660e\u786e\u4e00\u4e9b\uff0c\u88c5\u9970\u5668\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u5176\u5b9e\u5b83\u5e76\u4e0d\u5173\u5fc3\u4f60\u8fd4\u56de\u4ec0\u4e48\uff0c\u53ef\u4ee5\u662f\u53e6\u5916\u4e00\u4e2acallable\u5bf9\u8c61\uff08\u5927\u90e8\u5206\u60c5\u51b5\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u5bf9\u8c61\uff0c\u6bd4\u5982property\u3002 \u88c5\u9970\u5668\u91cc\u7684\u5751 \u88c5\u9970\u5668\u53ef\u4ee5\u8ba9\u4f60\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u51cf\u5c11\u91cd\u590d\uff0c\u4f46\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\u3002 \u4f4d\u7f6e\u9519\u8bef\u7684\u4ee3\u7801 \u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a def log ( level ): print ( 'begin outer function' ) def wrapper ( func ): print ( 'begin inner function' ) def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) print ( 'end inner function' ) return inner_wrapper print ( 'end outer function' ) return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5728\u88c5\u9970\u5668\u4e2d\u6211\u5728\u5404\u4e2a\u53ef\u80fd\u7684\u4f4d\u7f6e\u90fd\u52a0\u4e0a\u4e86 print \u8bed\u53e5\uff0c\u7528\u4e8e\u8bb0\u5f55\u88ab\u8c03\u7528\u7684\u60c5\u51b5\u3002\u4f60\u77e5\u9053\u4ed6\u4eec\u6700\u540e\u6253\u5370\u51fa\u6765\u7684\u987a\u5e8f\u5417\uff1f\u5982\u679c\u4f60\u5fc3\u91cc\u6ca1\u5e95\uff0c\u90a3\u4e48\u6700\u597d\u4e0d\u8981\u5728\u88c5\u9970\u5668\u51fd\u6570\u4e4b\u5916\u6dfb\u52a0\u903b\u8f91\u529f\u80fd\uff0c\u5426\u5219\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u4e0d\u53d7\u4f60\u63a7\u5236\u4e86\u3002\u4ee5\u4e0b\u662f\u8f93\u51fa\u7ed3\u679c\uff1a begin outer function end outer function begin inner function end inner function '[INFO]2021-07-12 15:58:59.430294 enter function test_func' \"It's a test function\" \u9519\u8bef\u7684\u51fd\u6570\u7b7e\u540d\u548c\u6587\u6863 def log ( level ): def wrapper ( func ): def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) print ( test_func . __name__ ) # \u6253\u5370\u7ed3\u679c\uff1ainner_wrapper @\u8bed\u6cd5\u7cd6\u548c test_func = log('INFO')(test_func) \u662f\u7b49\u6548\u7684\uff0c\u6240\u4ee5 test_func \u7684\u6240\u6709\u5c5e\u6027\u90fd\u6765\u81ea\u4e8e inner_wrapper \u3002\u4f7f\u7528\u6807\u51c6\u5e93\u91cc\u7684 functools \u57fa\u672c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 from functools import wraps def log ( level ): def wrapper ( func ): @wraps ( func ) def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) print ( test_func . __name__ ) # \u6253\u5370\u7ed3\u679c\uff1atest_func \u4f46\u8fd8\u662f\u4e0d\u5b8c\u7f8e\uff1a import inspect print ( inspect . getargspec ( test_func )) # \u83b7\u53d6\u51fd\u6570\u7b7e\u540d\uff0c\u5931\u8d25 print ( inspect . getsource ( test_func )) # \u83b7\u53d6\u51fd\u6570\u5b9a\u4e49\uff0c\u6210\u529f \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u7528\u7b2c\u4e09\u65b9\u7684\u5305\uff0c\u6bd4\u5982 wrapt \u3002 \u4e0d\u80fd\u88c5\u9970 @classmethod \u6216\u8005 @staticmethod \u524d\u9762\u5df2\u7ecf\u89e3\u91ca\u4e86 @classmethod \u548c @staticmethod \u8fd9\u4e2a\u88c5\u9970\u5668\uff0c\u5176\u5b9e\u5b83\u4eec\u8fd4\u56de\u7684\u5e76\u4e0d\u662f\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2aclassmethod/staticmethod\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b83\u662f\u4e0d\u7b26\u5408\u88c5\u9970\u5668\u8981\u6c42\u7684\uff08\u6bd4\u5982\u4f20\u5165\u4e00\u4e2acallable\u5bf9\u8c61\uff09\uff0c\u4f60\u81ea\u7136\u4e0d\u80fd\u5728\u5b83\u4e4b\u4e0a\u518d\u52a0\u522b\u7684\u88c5\u9970\u5668\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u4f60\u7684\u88c5\u9970\u5668\u653e\u5728 @classmethod / @staticmethod \u4e4b\u524d\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u4f60\u7684\u88c5\u9970\u5668\u8fd4\u56de\u7684\u8fd8\u662f\u4e00\u4e2a\u6b63\u5e38\u7684\u51fd\u6570\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u4e00\u4e2a @classmethod / @staticmethod \u662f\u4e0d\u4f1a\u51fa\u95ee\u9898\u7684\u3002 def wrapper ( func ): @wraps ( func ) def inner_wrapper ( * args , ** kwargs ): pprint ( ' {} in class {} function {} called' . format ( datetime . datetime . now (), args [ 0 ] . __name__ , func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper class Test ( object ): number : int = 100 @classmethod @wrapper def get_nubmer ( cls ) -> int : return cls . number Test . get_nubmer () \u88c5\u9970\u5668\u7684\u8fdb\u4e00\u6b65\u4f18\u5316 \u5d4c\u5957\u7684\u88c5\u9970\u51fd\u6570\u4e0d\u592a\u76f4\u89c2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u7c7b\u6539\u8fdb\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8ba9\u88c5\u9970\u5668\u51fd\u6570\u53ef\u8bfb\u6027\u66f4\u597d\u3002\u8fd9\u91cc\u6682\u65f6\u8bb0\u5f55\u4e24\u4e2a\uff1a decorator \u548c wrapt \u3002\u8fd9\u662f\u7b2c\u4e09\u65b9\u5305\uff0c\u9700\u8981\u7684\u65f6\u5019\u518d\u7814\u7a76\u5427\u3002","title":"\u4ec0\u4e48\u662f\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_1","text":"\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2aPython\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u529f\u80fd\uff0c\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\u5b83\u7ecf\u5e38\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\uff0c\u6bd4\u5982\uff1a\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u3001\u7f13\u5b58\u3001\u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f\u3002\u88c5\u9970\u5668\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7edd\u4f73\u8bbe\u8ba1\uff0c\u6709\u4e86\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u7ee7\u7eed\u91cd\u7528\u3002 \u7b80\u5355\u5730\u8bf4\uff0c\u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u51fd\u6570\u6216\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002","title":"\u4ec0\u4e48\u662f\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_2","text":"#!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func (): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func () return wrapped_func def test_func () -> None : pprint ( \"It's a test function\" ) test_func = debug_log ( test_func ) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u4e0a\u9762\u7684 debug_log \u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u5bf9\u539f\u51fd\u6570\u505a\u4e86\u5305\u88c5\u5e76\u8fd4\u56de\u4e86\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\uff0c\u989d\u5916\u6dfb\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\u3002\u56e0\u4e3a\u8fd9\u6837\u5199\u5b9e\u5728\u4e0d\u592a\u4f18\u96c5\uff0cPython\u4e2d\u652f\u6301\u4e86@\u8bed\u6cd5\u7cd6\uff0c\u4e0b\u9762\u4ee3\u7801\u7b49\u540c\u4e8e\u65e9\u671f\u7684\u5199\u6cd5\u3002 #!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func (): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func () return wrapped_func @debug_log def test_func () -> None : pprint ( \"It's a test function\" ) #test_func = debug_log(test_func) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u8fd9\u662f\u6700\u7b80\u5355\u7684\u88c5\u9970\u5668\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u574f\u4e86\u3002Python\u63d0\u4f9b\u4e86\u53ef\u53d8\u53c2\u6570 args \u548c\u5173\u952e\u5b57\u53c2\u6570 *kwargs \uff0c\u6709\u4e86\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u7528\u4e8e\u4efb\u610f\u76ee\u6807\u51fd\u6570\u3002 #!/usr/bin/env python from pprint import pprint import datetime def debug_log ( func ): def wrapped_func ( * args , ** kwargs ): # \u6307\u5b9a\u5b87\u5b99\u65e0\u654c\u53c2\u6570 pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return wrapped_func @debug_log def test_func () -> None : pprint ( \"It's a test function\" ) #test_func = debug_log(test_func) # \u6dfb\u52a0\u529f\u80fd\u5e76\u4fdd\u6301\u539f\u51fd\u6570\u540d\u4e0d\u53d8 test_func () \u4ee5\u4e0a\u4e3a\u88c5\u9970\u5668\u521d\u7ea7\u7528\u6cd5\u3002","title":"\u600e\u4e48\u5199\u4e00\u4e2a\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_3","text":"","title":"\u8fdb\u9636\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_4","text":"\u5047\u8bbe\u6211\u4eec\u524d\u6587\u7684\u88c5\u9970\u5668\u9700\u8981\u5b8c\u6210\u7684\u529f\u80fd\u4e0d\u4ec5\u4ec5\u662f\u80fd\u5728\u8fdb\u5165\u67d0\u4e2a\u51fd\u6570\u540e\u6253\u51falog\u4fe1\u606f\uff0c\u800c\u4e14\u8fd8\u9700\u6307\u5b9alog\u7684\u7ea7\u522b\uff0c\u90a3\u4e48\u88c5\u9970\u5668\u5c31\u4f1a\u662f\u8fd9\u6837\u7684\u3002 #!/usr/bin/env python from pprint import pprint import datetime import inspect def log ( level ): def wrapper ( func ): def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5982\u4e0a\u4ee3\u7801\uff0c\u5728\u521d\u7ea7\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\u591a\u4e86\u4e00\u5c42\u51fd\u6570\u5b9a\u4e49\uff0c\u4e09\u5c42\u51fd\u6570\u5b9a\u4e49\uff0c\u6700\u5916\u5c42\u51fd\u6570\u63a5\u6536\u4f20\u9012\u7ed9\u88c5\u9970\u5668\u7684\u53c2\u6570\u3002","title":"\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_5","text":"\u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u8f7d\u4e86 __call__() \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002\u4f8b\u5982\uff1a class test_class ( object ): def __init__ ( self ) -> None : super () . __init__ () pass def __call__ ( self , * args , ** kwds ): print ( 'test_class called' ) t = test_class () t () \u50cf __call__ \u8fd9\u6837\u524d\u540e\u90fd\u5e26\u4e0b\u5212\u7ebf\u7684\u65b9\u6cd5\u5728Python\u4e2d\u88ab\u79f0\u4e3a\u5185\u7f6e\u65b9\u6cd5\uff0c\u6709\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u9b54\u6cd5\u65b9\u6cd5\u3002\u91cd\u8f7d\u8fd9\u4e9b\u9b54\u6cd5\u65b9\u6cd5\u4e00\u822c\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u884c\u4e3a\u3002\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u8ba9\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u62e5\u6709\u4e86\u88ab\u8c03\u7528\u7684\u884c\u4e3a\u3002 \u56de\u5230\u88c5\u9970\u5668\u4e0a\u7684\u6982\u5ff5\u4e0a\u6765\uff0c\u88c5\u9970\u5668\u8981\u6c42\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\uff08\u4e0d\u592a\u4e25\u8c28\uff0c\u8be6\u89c1\u540e\u6587\uff09\u3002\u90a3\u4e48\u7528\u7c7b\u6765\u5b9e\u73b0\u4e5f\u662f\u4e5f\u53ef\u4ee5\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u7c7b\u7684\u6784\u9020\u51fd\u6570 __init__() \u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u91cd\u8f7d __call__() \u5e76\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8fbe\u5230\u88c5\u9970\u5668\u51fd\u6570\u7684\u6548\u679c\u3002 class Logging ( object ): def __init__ ( self , func ) -> None : super () . __init__ () self . _func = func def __call__ ( self , * args , ** kwargs ): pprint ( '[DEBUG] {} enter function {} ' . format ( datetime . datetime . now (), self . _func . __name__ )) return self . _func ( * args , ** kwargs ) @Logging def test_func () -> None : pprint ( \"It's a test function\" ) test_func ()","title":"\u57fa\u4e8e\u7c7b\u5b9e\u73b0\u7684\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_6","text":"\u5982\u679c\u9700\u8981\u901a\u8fc7\u7c7b\u5f62\u5f0f\u5b9e\u73b0\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\uff0c\u90a3\u4e48\u5728\u6784\u9020\u51fd\u6570\u91cc\u63a5\u53d7\u7684\u5c31\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u4f20\u5165\u7684\u53c2\u6570\u3002\u901a\u8fc7\u7c7b\u628a\u8fd9\u4e9b\u53c2\u6570\u4fdd\u5b58\u8d77\u6765\u3002\u7136\u540e\u5728\u91cd\u8f7d __call__ \u65b9\u6cd5\u65f6\u5c31\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u3002 class Logging ( object ): def __init__ ( self , level ) -> None : super () . __init__ () self . _level = level def __call__ ( self , func ): def wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( self . _level , datetime . datetime . now (), func . __name__ )) func ( * args , ** kwargs ) return wrapper @Logging ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func ()","title":"\u5e26\u53c2\u6570\u7684\u7c7b\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_7","text":"\u5185\u7f6e\u7684\u88c5\u9970\u5668\u548c\u666e\u901a\u7684\u88c5\u9970\u5668\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd4\u56de\u7684\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u662f\u7c7b\u5bf9\u8c61\u3002","title":"\u5185\u7f6e\u7684\u88c5\u9970\u5668"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#property","text":"\u5c5e\u6027\u6709\u4e09\u4e2a\u88c5\u9970\u5668\uff1a setter , getter , deleter \uff0c\u90fd\u662f\u5728 property() \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u5c01\u88c5\uff0c\u56e0\u4e3a setter \u548c deleter \u662f property() \u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u4e0d\u80fd\u76f4\u63a5\u5957\u7528@\u8bed\u6cd5\u3002 getter \u88c5\u9970\u5668\u548c\u4e0d\u5e26 getter \u7684\u5c5e\u6027\u88c5\u9970\u5668\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f30\u8ba1\u53ea\u662f\u4e3a\u4e86\u51d1\u6570\uff0c\u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u5b58\u5728\u7684\u610f\u4e49\u3002\u7ecf\u8fc7 @property \u88c5\u9970\u8fc7\u7684\u51fd\u6570\u8fd4\u56de\u7684\u4e0d\u518d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a property \u5bf9\u8c61\u3002\u4f7f\u7528\u793a\u4f8b\u5982\u4e0b\uff1a class Example ( object ): _width : int = 0 _height : int = 0 def __init__ ( self , width = 0 , height = 0 ) -> None : super () . __init__ () self . _width = width self . _height = height @property def width ( self ) -> int : return self . _width @width . setter def width ( self , width : int = 0 ) -> None : self . _width = width @width . deleter def width ( self ) -> None : del self . _width e = Example ( 5 , 6 ) pprint ( e . width ) e . width = 7 pprint ( e . width ) del e . width pprint ( e . width )","title":"\u5c5e\u6027\u88c5\u9970\u5668property"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#classmethod","text":"@classmethod \u88c5\u9970\u7684\u65b9\u6cd5\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\uff0c\u4e0d\u9700\u8981 self \u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684 cls \u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\u3002 class Test ( object ): number : int = 10 def __init__ ( self ) -> None : super () . __init__ () @classmethod def get_number ( cls ) -> int : return cls . number class Child ( Test ): number : int = 30 def __init__ ( self ) -> None : super () . __init__ () @classmethod def get_number ( cls ) -> int : return cls . number # \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\uff0c\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u7c7b\u65b9\u6cd5 pprint ( Test . get_number ()) pprint ( Child . get_number ())","title":"\u7c7b\u65b9\u6cd5\u88c5\u9970\u5668classmethod"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#staticmethod","text":"@staticmethod \u6539\u53d8\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u4e0d\u9700\u8981\u4f20\u9012\u9690\u6027\u7684\u7b2c\u4e00\u53c2\u6570\uff0c\u9759\u6001\u65b9\u6cd5\u7684\u672c\u8d28\u7c7b\u578b\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u8fdb\u884c\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\u3002 \u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u64cd\u4f5c\u7c7b\u5c5e\u6027\u3002 \u5bf9\u4e8e\u9759\u6001\u65b9\u6cd5\u800c\u8a00\uff0c\u6240\u5728\u7c7b\u66f4\u50cf\u662f\u4e00\u79cd\u540d\u79f0\u7a7a\u95f4\u3002\u5176\u5b9e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5916\u9762\u5199\u4e00\u4e2a\u540c\u6837\u7684\u51fd\u6570\u6765\u505a\u8fd9\u4e9b\u4e8b\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u5c31\u6253\u4e71\u4e86\u903b\u8f91\u5173\u7cfb\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u4ee5\u540e\u4ee3\u7801\u7ef4\u62a4\u56f0\u96be\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u4e0a\u6587\u63d0\u5230\u7684\u88c5\u9970\u5668\u63a5\u53e3\u5b9a\u4e49\u53ef\u4ee5\u66f4\u52a0\u660e\u786e\u4e00\u4e9b\uff0c\u88c5\u9970\u5668\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u5176\u5b9e\u5b83\u5e76\u4e0d\u5173\u5fc3\u4f60\u8fd4\u56de\u4ec0\u4e48\uff0c\u53ef\u4ee5\u662f\u53e6\u5916\u4e00\u4e2acallable\u5bf9\u8c61\uff08\u5927\u90e8\u5206\u60c5\u51b5\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u5bf9\u8c61\uff0c\u6bd4\u5982property\u3002","title":"\u9759\u6001\u65b9\u6cd5\u88c5\u9970\u5668staticmethod"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_8","text":"\u88c5\u9970\u5668\u53ef\u4ee5\u8ba9\u4f60\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u51cf\u5c11\u91cd\u590d\uff0c\u4f46\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\u3002","title":"\u88c5\u9970\u5668\u91cc\u7684\u5751"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_9","text":"\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a def log ( level ): print ( 'begin outer function' ) def wrapper ( func ): print ( 'begin inner function' ) def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) print ( 'end inner function' ) return inner_wrapper print ( 'end outer function' ) return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) test_func () \u5728\u88c5\u9970\u5668\u4e2d\u6211\u5728\u5404\u4e2a\u53ef\u80fd\u7684\u4f4d\u7f6e\u90fd\u52a0\u4e0a\u4e86 print \u8bed\u53e5\uff0c\u7528\u4e8e\u8bb0\u5f55\u88ab\u8c03\u7528\u7684\u60c5\u51b5\u3002\u4f60\u77e5\u9053\u4ed6\u4eec\u6700\u540e\u6253\u5370\u51fa\u6765\u7684\u987a\u5e8f\u5417\uff1f\u5982\u679c\u4f60\u5fc3\u91cc\u6ca1\u5e95\uff0c\u90a3\u4e48\u6700\u597d\u4e0d\u8981\u5728\u88c5\u9970\u5668\u51fd\u6570\u4e4b\u5916\u6dfb\u52a0\u903b\u8f91\u529f\u80fd\uff0c\u5426\u5219\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u4e0d\u53d7\u4f60\u63a7\u5236\u4e86\u3002\u4ee5\u4e0b\u662f\u8f93\u51fa\u7ed3\u679c\uff1a begin outer function end outer function begin inner function end inner function '[INFO]2021-07-12 15:58:59.430294 enter function test_func' \"It's a test function\"","title":"\u4f4d\u7f6e\u9519\u8bef\u7684\u4ee3\u7801"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_10","text":"def log ( level ): def wrapper ( func ): def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) print ( test_func . __name__ ) # \u6253\u5370\u7ed3\u679c\uff1ainner_wrapper @\u8bed\u6cd5\u7cd6\u548c test_func = log('INFO')(test_func) \u662f\u7b49\u6548\u7684\uff0c\u6240\u4ee5 test_func \u7684\u6240\u6709\u5c5e\u6027\u90fd\u6765\u81ea\u4e8e inner_wrapper \u3002\u4f7f\u7528\u6807\u51c6\u5e93\u91cc\u7684 functools \u57fa\u672c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 from functools import wraps def log ( level ): def wrapper ( func ): @wraps ( func ) def inner_wrapper ( * args , ** kwargs ): pprint ( '[ {} ] {} enter function {} ' . format ( level , datetime . datetime . now (), func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper return wrapper @log ( 'INFO' ) def test_func () -> None : pprint ( \"It's a test function\" ) print ( test_func . __name__ ) # \u6253\u5370\u7ed3\u679c\uff1atest_func \u4f46\u8fd8\u662f\u4e0d\u5b8c\u7f8e\uff1a import inspect print ( inspect . getargspec ( test_func )) # \u83b7\u53d6\u51fd\u6570\u7b7e\u540d\uff0c\u5931\u8d25 print ( inspect . getsource ( test_func )) # \u83b7\u53d6\u51fd\u6570\u5b9a\u4e49\uff0c\u6210\u529f \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u7528\u7b2c\u4e09\u65b9\u7684\u5305\uff0c\u6bd4\u5982 wrapt \u3002","title":"\u9519\u8bef\u7684\u51fd\u6570\u7b7e\u540d\u548c\u6587\u6863"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#classmethodstaticmethod","text":"\u524d\u9762\u5df2\u7ecf\u89e3\u91ca\u4e86 @classmethod \u548c @staticmethod \u8fd9\u4e2a\u88c5\u9970\u5668\uff0c\u5176\u5b9e\u5b83\u4eec\u8fd4\u56de\u7684\u5e76\u4e0d\u662f\u4e00\u4e2acallable\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2aclassmethod/staticmethod\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b83\u662f\u4e0d\u7b26\u5408\u88c5\u9970\u5668\u8981\u6c42\u7684\uff08\u6bd4\u5982\u4f20\u5165\u4e00\u4e2acallable\u5bf9\u8c61\uff09\uff0c\u4f60\u81ea\u7136\u4e0d\u80fd\u5728\u5b83\u4e4b\u4e0a\u518d\u52a0\u522b\u7684\u88c5\u9970\u5668\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u628a\u4f60\u7684\u88c5\u9970\u5668\u653e\u5728 @classmethod / @staticmethod \u4e4b\u524d\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u4f60\u7684\u88c5\u9970\u5668\u8fd4\u56de\u7684\u8fd8\u662f\u4e00\u4e2a\u6b63\u5e38\u7684\u51fd\u6570\uff0c\u7136\u540e\u518d\u52a0\u4e0a\u4e00\u4e2a @classmethod / @staticmethod \u662f\u4e0d\u4f1a\u51fa\u95ee\u9898\u7684\u3002 def wrapper ( func ): @wraps ( func ) def inner_wrapper ( * args , ** kwargs ): pprint ( ' {} in class {} function {} called' . format ( datetime . datetime . now (), args [ 0 ] . __name__ , func . __name__ )) return func ( * args , ** kwargs ) return inner_wrapper class Test ( object ): number : int = 100 @classmethod @wrapper def get_nubmer ( cls ) -> int : return cls . number Test . get_nubmer ()","title":"\u4e0d\u80fd\u88c5\u9970@classmethod\u6216\u8005@staticmethod"},{"location":"Programming/01.%20Python/Python%20%E4%B8%AD%E7%9A%84%E8%A3%85%E9%A5%B0%E5%99%A8/#_11","text":"\u5d4c\u5957\u7684\u88c5\u9970\u51fd\u6570\u4e0d\u592a\u76f4\u89c2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u7c7b\u6539\u8fdb\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8ba9\u88c5\u9970\u5668\u51fd\u6570\u53ef\u8bfb\u6027\u66f4\u597d\u3002\u8fd9\u91cc\u6682\u65f6\u8bb0\u5f55\u4e24\u4e2a\uff1a decorator \u548c wrapt \u3002\u8fd9\u662f\u7b2c\u4e09\u65b9\u5305\uff0c\u9700\u8981\u7684\u65f6\u5019\u518d\u7814\u7a76\u5427\u3002","title":"\u88c5\u9970\u5668\u7684\u8fdb\u4e00\u6b65\u4f18\u5316"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/","text":"abs(x) \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u3002 \u53c2\u6570\u53ef\u4ee5\u662f\u6574\u6570\u3001\u6d6e\u70b9\u6570\u6216\u4efb\u4f55\u5b9e\u73b0\u4e86 __abs__() \u7684\u5bf9\u8c61\u3002 \u5982\u679c\u53c2\u6570\u662f\u4e00\u4e2a\u590d\u6570\uff0c\u5219\u8fd4\u56de\u5b83\u7684\u6a21\u3002 all(iterable) \u5982\u679c iterable \u7684\u6240\u6709\u5143\u7d20\u5747\u4e3a\u771f\u503c\uff08\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff09\u5219\u8fd4\u56de True \u3002 \u5982\u679c iterable \u7684\u6240\u6709\u5143\u7d20\u4e0d\u4e3a 0 \u3001 '' \u3001 False \u6216\u8005 iterable \u4e3a\u7a7a\uff0c all(iterable) \u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u7a7a\u5143\u7ec4\u3001\u7a7a\u5217\u8868\u8fd4\u56de\u503c\u4e3a True \uff0c\u8fd9\u91cc\u8981\u7279\u522b\u6ce8\u610f\u3002 \u7b49\u4ef7\u4e8e\uff1a def all ( iterable ): for element in iterable : if not element : return False return True any(iterable) \u5982\u679c iterable \u7684\u4efb\u4e00\u5143\u7d20\u4e3a\u771f\u503c\u5219\u8fd4\u56de True \u3002 \u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u8fd4\u56de False \u3002 \u7b49\u4ef7\u4e8e\uff1a def any ( iterable ): for element in iterable : if element : return True return False ascii(object) \u4e0e repr() \u7c7b\u4f3c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5bf9\u8c61\u7684\u53ef\u6253\u5370\u8868\u793a\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u4f7f\u7528 \\\\x \u3001 \\\\u \u548c \\\\U \u5bf9 repr() \u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e2d\u975e ASCII \u7f16\u7801\u7684\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002\u751f\u6210\u7684\u5b57\u7b26\u4e32\u548c Python 2 \u7684 repr() \u8fd4\u56de\u7684\u7ed3\u679c\u76f8\u4f3c\u3002 bin(x) \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u524d\u7f00\u4e3a 0b \u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 Python \u8868\u8fbe\u5f0f\u3002\u5982\u679c x \u4e0d\u662f Python \u7684 int \u5bf9\u8c61\uff0c\u90a3\u5b83\u9700\u8981\u5b9a\u4e49 __index__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002 class bool([x]) \u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c True \u6216\u8005 False \u3002 x \u4f7f\u7528\u6807\u51c6\u7684\u771f\u503c\u6d4b\u8bd5\u8fc7\u7a0b\u6765\u8f6c\u6362\u3002\u5982\u679c x \u662f\u5047\u7684\u6216\u8005\u88ab\u7701\u7565\uff0c\u8fd4\u56de False \uff1b\u5176\u4ed6\u60c5\u51b5\u8fd4\u56de True \u3002 bool \u7c7b\u662f int \u7684\u5b50\u7c7b\u3002\u5176\u4ed6\u7c7b\u4e0d\u80fd\u7ee7\u627f\u81ea\u5b83\u3002\u5b83\u53ea\u6709 False \u548c True \u4e24\u4e2a\u5b9e\u4f8b\u3002 breakpoint(*args, **kws) \u6b64\u51fd\u6570\u4f1a\u5728\u8c03\u7528\u65f6\u5c06\u4f60\u9677\u5165\u8c03\u8bd5\u5668\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u8c03\u7528 sys.breakpointhook() \uff0c\u76f4\u63a5\u4f20\u9012 args \u548c kws \u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c sys.breakpointhook() \u8c03\u7528 pdb.set_trace() \u4e14\u6ca1\u6709\u53c2\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u7eaf\u7cb9\u662f\u4e00\u4e2a\u4fbf\u5229\u51fd\u6570\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u663e\u5f0f\u5bfc\u5165 pdb \u4e14\u952e\u5165\u5c3d\u53ef\u80fd\u5c11\u7684\u4ee3\u7801\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u5668\u3002\u4f46\u662f\uff0c sys.breakpointhook() \u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u4e00\u4e9b\u51fd\u6570\u5e76\u88ab breakpoint() \u81ea\u52a8\u8c03\u7528\uff0c\u4ee5\u5141\u8bb8\u8fdb\u5165\u4f60\u60f3\u7528\u7684\u8c03\u8bd5\u5668\u3002 class bytearray([source[, encoding[, errors]]]) \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 bytes \u6570\u7ec4\u3002 bytearray \u7c7b\u662f\u4e00\u4e2a\u53ef\u53d8\u5e8f\u5217\uff0c\u5305\u542b\u8303\u56f4\u4e3a 0 <= x < 256 \u7684\u6574\u6570\u3002\u5b83\u6709\u53ef\u53d8\u5e8f\u5217\u5927\u90e8\u5206\u5e38\u89c1\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u6709 bytes \u7c7b\u578b\u7684\u5927\u90e8\u5206\u65b9\u6cd5\u3002 \u53ef\u9009\u5f62\u53c2 source \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u7ec4\uff1a \u5982\u679c\u662f\u4e00\u4e2a string \uff0c\u5fc5\u987b\u63d0\u4f9b encoding \u53c2\u6570\uff08 errors \u53c2\u6570\u4ecd\u662f\u53ef\u9009\u7684\uff09\uff1b bytearray() \u4f1a\u4f7f\u7528 str.encode() \u65b9\u6cd5\u6765\u5c06 string \u8f6c\u53d8\u6210 bytes \u3002 \u5982\u679c\u662f\u4e00\u4e2a integer \uff0c\u4f1a\u521d\u59cb\u5316\u5927\u5c0f\u4e3a\u8be5\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u5e76\u4f7f\u7528 null \u5b57\u8282\u586b\u5145\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u9075\u5faa \u7f13\u51b2\u533a\u63a5\u53e3 \u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7684\u53ea\u8bfb\u7f13\u51b2\u533a\u5c06\u88ab\u7528\u6765\u521d\u59cb\u5316\u5b57\u8282\u6570\u7ec4\u3002 \u5982\u679c\u662f\u4e00\u4e2a iterable \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5b83\u7684\u5143\u7d20\u7684\u8303\u56f4\u5fc5\u987b\u662f 0 <= x < 256 \u7684\u6574\u6570\uff0c\u5b83\u4f1a\u88ab\u7528\u4f5c\u6570\u7ec4\u7684\u521d\u59cb\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u521b\u5efa\u5927\u5c0f\u4e3a0\u7684\u6570\u7ec4\u3002 class bytes([source[, encoding[, errors]]]) \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 bytes \u5bf9\u8c61\uff0c\u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u5305\u542b\u8303\u56f4\u4e3a 0 <= x < 256 \u7684\u6574\u6570\u3002 bytes \u662f bytearray \u7684\u4e0d\u53ef\u53d8\u7248\u672c - \u5b83\u6709\u5176\u4e2d\u4e0d\u6539\u53d8\u5e8f\u5217\u7684\u65b9\u6cd5\u548c\u76f8\u540c\u7684\u7d22\u5f15\u3001\u5207\u7247\u64cd\u4f5c\u3002 \u56e0\u6b64\uff0c\u6784\u9020\u51fd\u6570\u7684\u5b9e\u53c2\u548c bytearray() \u76f8\u540c\u3002 callable(object) \u5982\u679c\u53c2\u6570 object \u662f\u53ef\u8c03\u7528\u7684\u5c31\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u5982\u679c\u8fd4\u56de True \uff0c\u8c03\u7528\u4ecd\u53ef\u80fd\u5931\u8d25\uff0c\u4f46\u5982\u679c\u8fd4\u56de False \uff0c\u5219\u8c03\u7528 object \u5c06\u80af\u5b9a\u4e0d\u4f1a\u6210\u529f\u3002 \u8bf7\u6ce8\u610f\u7c7b\u662f\u53ef\u8c03\u7528\u7684\uff08\u8c03\u7528\u7c7b\u5c06\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff09\uff1b\u5982\u679c\u5b9e\u4f8b\u6240\u5c5e\u7684\u7c7b\u6709 __call__() \u5219\u5b83\u5c31\u662f\u53ef\u8c03\u7528\u7684\u3002 chr(i) \u8fd4\u56de Unicode \u7801\u4f4d\u4e3a\u6574\u6570 i \u7684\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u3002\u4f8b\u5982\uff0c chr(97) \u8fd4\u56de\u5b57\u7b26\u4e32 'a' \uff0c chr(8364) \u8fd4\u56de\u5b57\u7b26\u4e32 '\u20ac' \u3002\u8fd9\u662f ord() \u7684\u9006\u51fd\u6570\u3002 \u5b9e\u53c2\u7684\u5408\u6cd5\u8303\u56f4\u662f 0 \u5230 1,114,111 \uff0816\u8fdb\u5236\u8868\u793a\u662f 0x10FFFF \uff09\u3002\u5982\u679c i \u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0c\u4f1a\u89e6\u53d1 ValueError \u5f02\u5e38\u3002 @classmethod \u628a\u4e00\u4e2a\u65b9\u6cd5\u5c01\u88c5\u6210\u7c7b\u65b9\u6cd5\u3002 \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u628a\u7c7b\u81ea\u5df1\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u53c2\uff0c\u5c31\u50cf\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u628a\u5b9e\u4f8b\u81ea\u5df1\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u53c2\u3002\u8bf7\u7528\u4ee5\u4e0b\u4e60\u60ef\u6765\u58f0\u660e\u7c7b\u65b9\u6cd5\uff1a class C : @classmethod def f ( cls , arg1 , arg2 , ... ): ... @classmethod \u8fd9\u6837\u7684\u5f62\u5f0f\u79f0\u4e3a\u51fd\u6570\u7684 decorator \uff08\u88c5\u9970\u5668\uff09\u3002 \u7c7b\u65b9\u6cd5\u7684\u8c03\u7528\u53ef\u4ee5\u5728\u7c7b\u4e0a\u8fdb\u884c(\u4f8b\u5982 C.f() )\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e0a\u8fdb\u884c(\u4f8b\u5982 C().f() )\u3002\u5176\u6240\u5c5e\u7c7b\u4ee5\u5916\u7684\u7c7b\u5b9e\u4f8b\u4f1a\u88ab\u5ffd\u7565\u3002\u5982\u679c\u7c7b\u65b9\u6cd5\u5728\u5176\u6240\u5c5e\u7c7b\u7684\u6d3e\u751f\u7c7b\u4e0a\u8c03\u7528\uff0c\u5219\u8be5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u4f5c\u4e3a\u9690\u542b\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u88ab\u4f20\u5165\u3002 class complex([real[, imag]]) \u8fd4\u56de\u503c\u4e3a real + imag*1j \u7684\u590d\u6570\uff0c\u6216\u5c06\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u8f6c\u6362\u4e3a\u590d\u6570\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5f62\u53c2\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u88ab\u89e3\u91ca\u4e3a\u4e00\u4e2a\u590d\u6570\uff0c\u5e76\u4e14\u51fd\u6570\u8c03\u7528\u65f6\u5fc5\u987b\u6ca1\u6709\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u3002\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u4e0d\u80fd\u662f\u5b57\u7b26\u4e32\u3002\u6bcf\u4e2a\u5b9e\u53c2\u90fd\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u6570\u503c\u7c7b\u578b\uff08\u5305\u62ec\u590d\u6570\uff09\u3002\u5982\u679c\u7701\u7565\u4e86 imag \uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a\u96f6\uff0c\u6784\u9020\u51fd\u6570\u4f1a\u50cf int \u548c float \u4e00\u6837\u8fdb\u884c\u6570\u503c\u8f6c\u6362\u3002\u5982\u679c\u4e24\u4e2a\u5b9e\u53c2\u90fd\u7701\u7565\uff0c\u5219\u8fd4\u56de 0j \u3002 \u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a Python \u5bf9\u8c61 x \uff0c complex(x) \u4f1a\u59d4\u6258\u7ed9 x.__complex__() \u3002\u5982\u679c __complex__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __float__() \u3002\u5982\u679c __float__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __index__() \u3002 \u5f53\u4ece\u5b57\u7b26\u4e32\u8f6c\u6362\u65f6\uff0c\u5b57\u7b26\u4e32\u5728 + \u6216 `\u7684\u5468\u56f4\u5fc5\u987b\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\u4f8b\u5982 complex('1+2j') \u662f\u5408\u6cd5\u7684\uff0c\u4f46 complex('1 + 2j') \u4f1a\u89e6\u53d1 ValueError`\u5f02\u5e38\u3002 delattr(object, name) setattr() \u76f8\u5173\u7684\u51fd\u6570\u3002\u5b9e\u53c2\u662f\u4e00\u4e2a\u5bf9\u8c61\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u8be5\u5b57\u7b26\u4e32\u5fc5\u987b\u662f\u5bf9\u8c61\u7684\u67d0\u4e2a\u5c5e\u6027\u3002 \u5982\u679c\u5bf9\u8c61\u5141\u8bb8\uff0c\u8be5\u51fd\u6570\u5c06\u5220\u9664\u6307\u5b9a\u7684\u5c5e\u6027\u3002\u4f8b\u5982 delattr(x, 'foobar') \u7b49\u4ef7\u4e8e del x.foobar \u3002 dir([object]) \u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u8fd4\u56de\u5f53\u524d\u672c\u5730\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u79f0\u5217\u8868\u3002\u5982\u679c\u6709\u5b9e\u53c2\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u6709\u6548\u5c5e\u6027\u5217\u8868\u3002 \u5982\u679c\u5bf9\u8c61\u6709\u4e00\u4e2a\u540d\u4e3a __dir__() \u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5c5e\u6027\u5217\u8868\u3002\u8fd9\u5141\u8bb8\u5b9e\u73b0\u81ea\u5b9a\u4e49 __getattr__() \u6216 __getattribute__() \u51fd\u6570\u7684\u5bf9\u8c61\u80fd\u591f\u81ea\u5b9a\u4e49 dir() \u6765\u62a5\u544a\u5b83\u4eec\u7684\u5c5e\u6027\u3002 \u5982\u679c\u5bf9\u8c61\u4e0d\u63d0\u4f9b __dir__() \uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c1d\u8bd5\u4ece\u5bf9\u8c61\u5df2\u5b9a\u4e49\u7684 __dict__ \u5c5e\u6027\u548c\u7c7b\u578b\u5bf9\u8c61\u6536\u96c6\u4fe1\u606f\u3002\u7ed3\u679c\u5217\u8868\u5e76\u4e0d\u603b\u662f\u5b8c\u6574\u7684\uff0c\u5982\u679c\u5bf9\u8c61\u6709\u81ea\u5b9a\u4e49 __getattr__() \uff0c\u90a3\u7ed3\u679c\u53ef\u80fd\u4e0d\u51c6\u786e\u3002 \u9ed8\u8ba4\u7684 dir() \u673a\u5236\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u884c\u4e3a\u4e0d\u540c\uff0c\u5b83\u4f1a\u8bd5\u56fe\u8fd4\u56de\u6700\u76f8\u5173\u800c\u4e0d\u662f\u6700\u5168\u7684\u4fe1\u606f\uff1a \u5982\u679c\u5bf9\u8c61\u662f\u6a21\u5757\u5bf9\u8c61\uff0c\u5219\u5217\u8868\u5305\u542b\u6a21\u5757\u7684\u5c5e\u6027\u540d\u79f0\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u7c7b\u578b\u6216\u7c7b\u5bf9\u8c61\uff0c\u5219\u5217\u8868\u5305\u542b\u5b83\u4eec\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5e76\u4e14\u9012\u5f52\u67e5\u627e\u6240\u6709\u57fa\u7c7b\u7684\u5c5e\u6027\u3002 \u5426\u5219\uff0c\u5217\u8868\u5305\u542b\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5b83\u7684\u7c7b\u5c5e\u6027\u540d\u79f0\uff0c\u5e76\u4e14\u9012\u5f52\u67e5\u627e\u5b83\u7684\u7c7b\u7684\u6240\u6709\u57fa\u7c7b\u7684\u5c5e\u6027\u3002 \u8fd4\u56de\u7684\u5217\u8868\u6309\u5b57\u6bcd\u8868\u6392\u5e8f\u3002 \u56e0\u4e3a dir() \u4e3b\u8981\u662f\u4e3a\u4e86\u4fbf\u4e8e\u5728\u4ea4\u4e92\u5f0f\u65f6\u4f7f\u7528\uff0c\u6240\u4ee5\u5b83\u4f1a\u8bd5\u56fe\u8fd4\u56de\u4eba\u4eec\u611f\u5174\u8da3\u7684\u540d\u5b57\u96c6\u5408\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4fdd\u8bc1\u7ed3\u679c\u7684\u4e25\u683c\u6027\u6216\u4e00\u81f4\u6027\uff0c\u5b83\u5177\u4f53\u7684\u884c\u4e3a\u4e5f\u53ef\u80fd\u5728\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u6539\u53d8\u3002\u4f8b\u5982\uff0c\u5f53\u5b9e\u53c2\u662f\u4e00\u4e2a\u7c7b\u65f6\uff0c metaclass \u7684\u5c5e\u6027\u4e0d\u5305\u542b\u5728\u7ed3\u679c\u5217\u8868\u4e2d\u3002 divmod(a, b) \u5b83\u5c06\u4e24\u4e2a\uff08\u975e\u590d\u6570\uff09\u6570\u5b57\u4f5c\u4e3a\u5b9e\u53c2\uff0c\u5e76\u5728\u6267\u884c\u6574\u6570\u9664\u6cd5\u65f6\u8fd4\u56de\u4e00\u5bf9\u5546\u548c\u4f59\u6570\u3002\u5bf9\u4e8e\u6df7\u5408\u64cd\u4f5c\u6570\u7c7b\u578b\uff0c\u9002\u7528\u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u89c4\u5219\u3002\u5bf9\u4e8e\u6574\u6570\uff0c\u7ed3\u679c\u548c (a // b, a % b) \u4e00\u81f4\u3002\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u7ed3\u679c\u662f (q, a % b) \uff0c q \u901a\u5e38\u662f math.floor(a / b) \u4f46\u53ef\u80fd\u4f1a\u6bd4 1 \u5c0f\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c q * b + a % b \u548c a \u57fa\u672c\u76f8\u7b49\uff1b\u5982\u679c a % b \u975e\u96f6\uff0c\u5b83\u7684\u7b26\u53f7\u548c b \u4e00\u6837\uff0c\u5e76\u4e14 0 <= abs(a % b) < abs(b) \u3002 enumerate(iterable, start=0) \u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\u3002 iterable \u5fc5\u987b\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u6216 iterator \uff0c\u6216\u5176\u4ed6\u652f\u6301\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002 enumerate() \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u7684 __next__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u4e00\u4e2a\u8ba1\u6570\u503c\uff08\u4ece start \u5f00\u59cb\uff0c\u9ed8\u8ba4\u4e3a 0 \uff09\u548c\u901a\u8fc7\u8fed\u4ee3 iterable \u83b7\u5f97\u7684\u503c\u3002\u7b49\u4ef7\u4e8e\uff1a def enumerate ( sequence , start = 0 ): n = start for elem in sequence : yield n , elem n += 1 exec(object[, globals[, locals]]) \u8fd9\u4e2a\u51fd\u6570\u652f\u6301\u52a8\u6001\u6267\u884c Python \u4ee3\u7801\u3002 object \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u6216\u8005\u4ee3\u7801\u5bf9\u8c61\u3002\u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8be5\u5b57\u7b26\u4e32\u5c06\u88ab\u89e3\u6790\u4e3a\u4e00\u7cfb\u5217 Python \u8bed\u53e5\u5e76\u6267\u884c\uff08\u9664\u975e\u53d1\u751f\u8bed\u6cd5\u9519\u8bef\uff09\u3002 \u5982\u679c\u662f\u4ee3\u7801\u5bf9\u8c61\uff0c\u5b83\u5c06\u88ab\u76f4\u63a5\u6267\u884c\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u88ab\u6267\u884c\u7684\u4ee3\u7801\u90fd\u5e94\u5f53\u662f\u6709\u6548\u7684\u6587\u4ef6\u8f93\u5165\u3002\u8bf7\u6ce8\u610f\u5373\u4f7f\u5728\u4f20\u9012\u7ed9 exec() \u51fd\u6570\u7684\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c nonlocal , yield \u548c return \u8bed\u53e5\u4e5f\u4e0d\u80fd\u5728\u51fd\u6570\u5b9a\u4e49\u4ee5\u5916\u4f7f\u7528\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f None \u3002 \u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u7701\u7565\u4e86\u53ef\u9009\u9879\uff0c\u4ee3\u7801\u5c06\u5728\u5f53\u524d\u4f5c\u7528\u57df\u5185\u6267\u884c\u3002\u5982\u679c\u53ea\u63d0\u4f9b\u4e86 globals \uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u5178\uff08\u4e0d\u80fd\u662f\u5b57\u5178\u7684\u5b50\u7c7b\uff09\uff0c\u8be5\u5b57\u5178\u5c06\u540c\u65f6\u88ab\u7528\u4e8e\u5168\u5c40\u548c\u5c40\u90e8\u53d8\u91cf\u3002\u5982\u679c\u540c\u65f6\u63d0\u4f9b\u4e86 globals \u548c locals \uff0c\u5b83\u4eec\u4f1a\u5206\u522b\u88ab\u7528\u4e8e\u5168\u5c40\u548c\u5c40\u90e8\u53d8\u91cf\u3002\u5982\u679c\u63d0\u4f9b\u4e86 locals \uff0c\u5219\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u6620\u5c04\u5bf9\u8c61\u3002\u8bf7\u8bb0\u4f4f\u5728\u6a21\u5757\u5c42\u7ea7\u4e0a\uff0c globals \u548c locals \u662f\u540c\u4e00\u4e2a\u5b57\u5178\u3002\u5982\u679c exec \u5f97\u5230\u4e24\u4e2a\u5355\u72ec\u5bf9\u8c61\u4f5c\u4e3a globals \u548c locals \uff0c\u5219\u4ee3\u7801\u5c06\u5982\u540c\u5d4c\u5165\u7c7b\u5b9a\u4e49\u7684\u60c5\u51b5\u4e00\u6837\u6267\u884c\u3002 \u5982\u679c globals \u5b57\u5178\u4e0d\u5305\u542b __builtins__ \u952e\u503c\uff0c\u5219\u5c06\u4e3a\u8be5\u952e\u63d2\u5165\u5bf9\u5185\u5efa builtins \u6a21\u5757\u5b57\u5178\u7684\u5f15\u7528\u3002\u56e0\u6b64\uff0c\u5728\u5c06\u6267\u884c\u7684\u4ee3\u7801\u4f20\u9012\u7ed9 exec() \u4e4b\u524d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u81ea\u5df1\u7684 __builtins__ \u5b57\u5178\u63d2\u5165\u5230 globals \u4e2d\u6765\u63a7\u5236\u53ef\u4ee5\u4f7f\u7528\u54ea\u4e9b\u5185\u7f6e\u4ee3\u7801\u3002 filter(function, iterable) \u7528 iterable \u4e2d\u51fd\u6570 function \u8fd4\u56de\u771f\u7684\u90a3\u4e9b\u5143\u7d20\uff0c\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u3002 iterable \u53ef\u4ee5\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e00\u4e2a\u652f\u6301\u8fed\u4ee3\u7684\u5bb9\u5668\uff0c\u6216\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u5982\u679c function \u662f None \uff0c\u5219\u4f1a\u5047\u8bbe\u5b83\u662f\u4e00\u4e2a\u8eab\u4efd\u51fd\u6570\uff0c\u5373 iterable \u4e2d\u6240\u6709\u8fd4\u56de\u5047\u7684\u5143\u7d20\u4f1a\u88ab\u79fb\u9664\u3002 \u8bf7\u6ce8\u610f\uff0c filter(function, iterable) \u76f8\u5f53\u4e8e\u4e00\u4e2a\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff0c\u5f53 function \u4e0d\u662f None \u7684\u65f6\u5019\u4e3a (item for item in iterable if function(item)) \uff1b function \u662f None \u7684\u65f6\u5019\u4e3a (item for item in iterable if item) \u3002 class float([x]) \u8fd4\u56de\u4ece\u6570\u5b57\u6216\u5b57\u7b26\u4e32 x \u751f\u6210\u7684\u6d6e\u70b9\u6570\u3002 \u5982\u679c\u5b9e\u53c2\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u5305\u542b\u5341\u8fdb\u5236\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u524d\u9762\u53ef\u4ee5\u6709\u7b26\u53f7\uff0c\u4e4b\u524d\u4e5f\u53ef\u4ee5\u6709\u7a7a\u683c\u3002\u53ef\u9009\u7684\u7b26\u53f7\u6709 '+' \u548c '-' \uff1b '+' \u5bf9\u521b\u5efa\u7684\u503c\u6ca1\u6709\u5f71\u54cd\u3002\u5b9e\u53c2\u4e5f\u53ef\u4ee5\u662f NaN \uff08\u975e\u6570\u5b57\uff09\u3001\u6b63\u8d1f\u65e0\u7a77\u5927\u7684\u5b57\u7b26\u4e32\u3002\u786e\u5207\u5730\u8bf4\uff0c\u9664\u53bb\u9996\u5c3e\u7684\u7a7a\u683c\u540e\uff0c\u8f93\u5165\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0b\u8bed\u6cd5\uff1a sign : := \"+\" | \"-\" infinity : := \"Infinity\" | \"inf\" nan : := \"nan\" numeric_value : := floatnumber | infinity | nan numeric_string : := [ sign ] numeric_value \u8fd9\u91cc\uff0c floatnumber \u662f Python \u6d6e\u70b9\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5b57\u6bcd\u5927\u5c0f\u5199\u90fd\u53ef\u4ee5\uff0c\u4f8b\u5982\uff0c \u201cinf\u201d \u3001 \u201cInf\u201d \u3001 \u201cINFINITY\u201d \u3001 \u201ciNfINity\u201d \u90fd\u53ef\u4ee5\u8868\u793a\u6b63\u65e0\u7a77\u5927\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b9e\u53c2\u662f\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff0c\u5219\u8fd4\u56de\u5177\u6709\u76f8\u540c\u503c\uff08\u5728 Python \u6d6e\u70b9\u7cbe\u5ea6\u8303\u56f4\u5185\uff09\u7684\u6d6e\u70b9\u6570\u3002\u5982\u679c\u5b9e\u53c2\u5728 Python \u6d6e\u70b9\u7cbe\u5ea6\u8303\u56f4\u5916\uff0c\u5219\u4f1a\u89e6\u53d1 OverflowError \u3002 \u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a Python \u5bf9\u8c61 x \uff0c float(x) \u4f1a\u59d4\u6258\u7ed9 x.__float__() \u3002\u5982\u679c __float__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __index__() \u3002 \u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u8fd4\u56de 0.0 \u3002 getattr(object, name[, default]) \u8fd4\u56de\u5bf9\u8c61\u547d\u540d\u5c5e\u6027\u7684\u503c\u3002 name \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u3002\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\u4e4b\u4e00\uff0c\u5219\u8fd4\u56de\u8be5\u5c5e\u6027\u7684\u503c\u3002\u4f8b\u5982\uff0c getattr(x, 'foobar') \u7b49\u540c\u4e8e x.foobar \u3002\u5982\u679c\u6307\u5b9a\u7684\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u4e14\u63d0\u4f9b\u4e86 default \u503c\uff0c\u5219\u8fd4\u56de\u5b83\uff0c\u5426\u5219\u89e6\u53d1 AttributeError \u3002 globals() \u8fd4\u56de\u8868\u793a\u5f53\u524d\u5168\u5c40\u7b26\u53f7\u8868\u7684\u5b57\u5178\u3002\u8fd9\u603b\u662f\u5f53\u524d\u6a21\u5757\u7684\u5b57\u5178\uff08\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u662f\u8c03\u7528\u5b83\u7684\u6a21\u5757\uff0c\u800c\u662f\u5b9a\u4e49\u5b83\u7684\u6a21\u5757\uff09\u3002 hasattr(object, name) \u8be5\u5b9e\u53c2\u662f\u4e00\u4e2a\u5bf9\u8c61\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\u4e4b\u4e00\u7684\u540d\u79f0\uff0c\u5219\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002\uff08\u6b64\u529f\u80fd\u662f\u901a\u8fc7\u8c03\u7528 getattr(object, name) \u770b\u662f\u5426\u6709 AttributeError \u5f02\u5e38\u6765\u5b9e\u73b0\u7684\u3002\uff09 hash(object) \u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c\uff08\u5982\u679c\u5b83\u6709\u7684\u8bdd\uff09\u3002\u54c8\u5e0c\u503c\u662f\u6574\u6570\u3002\u5b83\u4eec\u5728\u5b57\u5178\u67e5\u627e\u5143\u7d20\u65f6\u7528\u6765\u5feb\u901f\u6bd4\u8f83\u5b57\u5178\u7684\u952e\u3002\u76f8\u540c\u5927\u5c0f\u7684\u6570\u5b57\u53d8\u91cf\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u503c\uff08\u5373\u4f7f\u5b83\u4eec\u7c7b\u578b\u4e0d\u540c\uff0c\u5982 1 \u548c 1.0 \uff09\u3002 \u5982\u679c\u5bf9\u8c61\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684 __hash__() \u65b9\u6cd5\uff0c\u8bf7\u6ce8\u610f\uff0c hash() \u6839\u636e\u673a\u5668\u7684\u5b57\u957f\u6765\u622a\u65ad\u8fd4\u56de\u503c\u3002 hex(x) \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4ee5 0x \u4e3a\u524d\u7f00\u7684\u5c0f\u5199\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u5982\u679c x \u4e0d\u662f Python int \u5bf9\u8c61\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u8fd4\u56de\u6574\u6570\u7684 __index__() \u65b9\u6cd5\u3002 id(object) \u8fd4\u56de\u5bf9\u8c61\u7684\u201c\u6807\u8bc6\u503c\u201d\u3002\u8be5\u503c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5728\u6b64\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e2d\u4fdd\u8bc1\u662f\u552f\u4e00\u4e14\u6052\u5b9a\u7684\u3002\u4e24\u4e2a\u751f\u547d\u671f\u4e0d\u91cd\u53e0\u7684\u5bf9\u8c61\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684 id() \u503c\u3002 class int([x]) class int(x, base=10) \u8fd4\u56de\u4e00\u4e2a\u57fa\u4e8e\u6570\u5b57\u6216\u5b57\u7b26\u4e32 x \u6784\u9020\u7684\u6574\u6570\u5bf9\u8c61\uff0c\u6216\u8005\u5728\u672a\u7ed9\u51fa\u53c2\u6570\u65f6\u8fd4\u56de 0 \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __int__() \uff0c int(x) \u5c06\u8fd4\u56de x.__int__() \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __index__() \uff0c\u5b83\u5c06\u8fd4\u56de x.__index__() \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __trunc__() \uff0c\u5b83\u5c06\u8fd4\u56de x.__trunc__() \u3002\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u5b83\u5c06\u5411\u96f6\u820d\u5165\u3002 \u5982\u679c x \u4e0d\u662f\u6570\u5b57\uff0c\u6216\u8005\u6709 base \u53c2\u6570\uff0c x \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u3001 bytes \u3001\u8868\u793a\u8fdb\u5236\u4e3a base \u7684\u6574\u6570\u5b57\u9762\u503c\u7684 bytearray \u5b9e\u4f8b\u3002\u8be5\u6587\u5b57\u524d\u53ef\u4ee5\u6709 + \u6216 `\uff08\u4e2d\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff09\uff0c\u524d\u540e\u53ef\u4ee5\u6709\u7a7a\u683c\u3002\u4e00\u4e2a\u8fdb\u5236\u4e3a n \u7684\u6570\u5b57\u5305\u542b 0 \u5230 n-1 \u7684\u6570\uff0c\u5176\u4e2d a \u5230 z \uff08\u6216 A \u5230 Z \uff09\u8868\u793a 10 \u5230 35 \u3002\u9ed8\u8ba4\u7684 base \u4e3a10 \uff0c\u5141\u8bb8\u7684\u8fdb\u5236\u67090\u30012-36\u30022\u30018\u300116\u8fdb\u5236\u7684\u6570\u5b57\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u7528 0b/0B \u3001 0o/0O \u3001 0x/0X \u524d\u7f00\u6765\u8868\u793a\u3002\u8fdb\u5236\u4e3a 0 \u5c06\u5b89\u7167\u4ee3\u7801\u7684\u5b57\u9762\u91cf\u6765\u7cbe\u786e\u89e3\u91ca\uff0c\u6700\u540e\u7684\u7ed3\u679c\u4f1a\u662f2\u30018\u300110\u300116\u8fdb\u5236\u4e2d\u7684\u4e00\u4e2a\u3002\u6240\u4ee5 int('010', 0) \u662f\u975e\u6cd5\u7684\uff0c\u4f46 int('010') \u548c int('010', 8)`\u662f\u5408\u6cd5\u7684\u3002 isinstance(object, classinfo) \u5982\u679c\u53c2\u6570 object \u662f\u53c2\u6570 classinfo \u7684\u5b9e\u4f8b\u6216\u8005\u662f\u5176\uff08\u76f4\u63a5\u3001\u95f4\u63a5\u6216\u865a\u62df\uff09\u5b50\u7c7b\u5219\u8fd4\u56de True \u3002\u5982\u679c object \u4e0d\u662f\u7ed9\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u51fd\u6570\u5c06\u603b\u662f\u8fd4\u56de False \u3002\u5982\u679c classinfo \u662f\u7c7b\u578b\u5bf9\u8c61\u5143\u7ec4\uff08\u6216\u7531\u5176\u4ed6\u6b64\u7c7b\u5143\u7ec4\u9012\u5f52\u7ec4\u6210\u7684\u5143\u7ec4\uff09\uff0c\u90a3\u4e48\u5982\u679c object \u662f\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7c7b\u578b\u7684\u5b9e\u4f8b\u5c31\u8fd4\u56de True \u3002\u5982\u679c classinfo \u65e2\u4e0d\u662f\u7c7b\u578b\uff0c\u4e5f\u4e0d\u662f\u7c7b\u578b\u5143\u7ec4\u6216\u7c7b\u578b\u5143\u7ec4\u7684\u5143\u7ec4\uff0c\u5219\u5c06\u5f15\u53d1 TypeError \u5f02\u5e38\u3002 issubclass(class, classinfo) \u5982\u679c class \u662f classinfo \u7684\uff08\u76f4\u63a5\u3001\u95f4\u63a5\u6216\u865a\u62df\uff09\u5b50\u7c7b\u5219\u8fd4\u56de True \u3002 \u7c7b\u4f1a\u88ab\u89c6\u4f5c\u5176\u81ea\u8eab\u7684\u5b50\u7c7b\u3002 classinfo \u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u7684\u5143\u7ec4\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b classinfo \u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u90fd\u5c06\u88ab\u68c0\u67e5\u3002\u5728\u4efb\u4f55\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u90fd\u5c06\u5f15\u53d1 TypeError \u5f02\u5e38\u3002 iter(object[, sentinel]) \u8fd4\u56de\u4e00\u4e2a iterator \u5bf9\u8c61\u3002\u6839\u636e\u662f\u5426\u5b58\u5728\u7b2c\u4e8c\u4e2a\u5b9e\u53c2\uff0c\u7b2c\u4e00\u4e2a\u5b9e\u53c2\u7684\u89e3\u91ca\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\u5982\u679c\u6ca1\u6709\u7b2c\u4e8c\u4e2a\u5b9e\u53c2\uff0c object \u5fc5\u987b\u662f\u652f\u6301\u8fed\u4ee3\u534f\u8bae\uff08\u6709 __iter__() \u65b9\u6cd5\uff09\u7684\u96c6\u5408\u5bf9\u8c61\uff0c\u6216\u5fc5\u987b\u652f\u6301\u5e8f\u5217\u534f\u8bae\uff08\u6709 __getitem__() \u65b9\u6cd5\uff0c\u4e14\u6570\u5b57\u53c2\u6570\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u5b83\u4e0d\u652f\u6301\u8fd9\u4e9b\u534f\u8bae\uff0c\u4f1a\u89e6\u53d1 TypeError \u3002\u5982\u679c\u6709\u7b2c\u4e8c\u4e2a\u5b9e\u53c2 sentinel \uff0c\u90a3\u4e48 object \u5fc5\u987b\u662f\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u751f\u6210\u7684\u8fed\u4ee3\u5668\uff0c\u6bcf\u6b21\u8fed\u4ee3\u8c03\u7528\u5b83\u7684 __next__() \u65b9\u6cd5\u65f6\u90fd\u4f1a\u4e0d\u5e26\u5b9e\u53c2\u5730\u8c03\u7528 object \uff1b\u5982\u679c\u8fd4\u56de\u7684\u7ed3\u679c\u662f sentinel \u5219\u89e6\u53d1 StopIteration \uff0c\u5426\u5219\u8fd4\u56de\u8c03\u7528\u7ed3\u679c\u3002 len(s) \u8fd4\u56de\u5bf9\u8c61\u7684\u957f\u5ea6\uff08\u5143\u7d20\u4e2a\u6570\uff09\u3002\u5b9e\u53c2\u53ef\u4ee5\u662f\u5e8f\u5217\uff08\u5982 string \u3001 bytes \u3001 tuple \u3001 list \u6216 range \u7b49\uff09\u6216\u96c6\u5408\uff08\u5982 dictionary \u3001 set \u6216 frozen set \u7b49\uff09\u3002 len \u5bf9\u4e8e\u5927\u4e8e sys.maxsize \u7684\u957f\u5ea6\u5982 range(2 ** 100) \u4f1a\u5f15\u53d1 OverflowError\u3002 locals() \u66f4\u65b0\u5e76\u8fd4\u56de\u8868\u793a\u5f53\u524d\u672c\u5730\u7b26\u53f7\u8868\u7684\u5b57\u5178\u3002\u5728\u51fd\u6570\u4ee3\u7801\u5757\u4f46\u4e0d\u662f\u7c7b\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 locals() \u65f6\u5c06\u8fd4\u56de\u81ea\u7531\u53d8\u91cf\u3002\u8bf7\u6ce8\u610f\u5728\u6a21\u5757\u5c42\u7ea7\u4e0a\uff0c locals() \u548c globals() \u662f\u540c\u4e00\u4e2a\u5b57\u5178\u3002 map(function, iterable, ...) \u8fd4\u56de\u4e00\u4e2a\u5c06 function \u5e94\u7528\u4e8e iterable \u4e2d\u6bcf\u4e00\u9879\u5e76\u8f93\u51fa\u5176\u7ed3\u679c\u7684\u8fed\u4ee3\u5668\u3002\u5982\u679c\u4f20\u5165\u4e86\u989d\u5916\u7684 iterable \u53c2\u6570\uff0c function \u5fc5\u987b\u63a5\u53d7\u76f8\u540c\u4e2a\u6570\u7684\u5b9e\u53c2\u5e76\u88ab\u5e94\u7528\u4e8e\u4ece\u6240\u6709\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u5e76\u884c\u83b7\u53d6\u7684\u9879\u3002\u5f53\u6709\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u65f6\uff0c\u6700\u77ed\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8017\u5c3d\u5219\u6574\u4e2a\u8fed\u4ee3\u5c31\u5c06\u7ed3\u675f\u3002 max(iterable, *[, key, default]) max(arg1, arg2, *args[, key]) \u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff0c\u6216\u8005\u8fd4\u56de\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5b9e\u53c2\u4e2d\u6700\u5927\u7684\u3002 \u5982\u679c\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u5b83\u5fc5\u987b\u662f\u975e\u7a7a iterable \uff0c\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff1b\u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u4f4d\u7f6e\u53c2\u6570\uff0c\u5219\u8fd4\u56de\u6700\u5927\u7684\u4f4d\u7f6e\u53c2\u6570\u3002 \u6709\u4e24\u4e2a\u53ef\u9009\u53ea\u80fd\u7528\u5173\u952e\u5b57\u7684\u5b9e\u53c2\u3002 key \u5b9e\u53c2\u6307\u5b9a\u6392\u5e8f\u51fd\u6570\u7528\u7684\u53c2\u6570\uff0c\u5982\u4f20\u7ed9 list.sort() \u7684\u3002 default \u5b9e\u53c2\u662f\u5f53\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\u65f6\u8fd4\u56de\u7684\u503c\u3002\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ed9 default \uff0c\u5219\u4f1a\u89e6\u53d1 ValueError \u3002 \u5982\u679c\u6709\u591a\u4e2a\u6700\u5927\u5143\u7d20\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u3002\u8fd9\u548c\u5176\u4ed6\u7a33\u5b9a\u6392\u5e8f\u5de5\u5177\u5982 sorted(iterable, key=keyfunc, reverse=True)[0] \u548c heapq.nlargest(1, iterable, key=keyfunc) \u4fdd\u6301\u4e00\u81f4\u3002 min(iterable, *[, key, default]) min(arg1, arg2, *args[, key]) \u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u6216\u8005\u8fd4\u56de\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5b9e\u53c2\u4e2d\u6700\u5c0f\u7684\u3002 \u5982\u679c\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u5b83\u5fc5\u987b\u662f iterable \uff0c\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff1b\u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u4f4d\u7f6e\u53c2\u6570\uff0c\u5219\u8fd4\u56de\u6700\u5c0f\u7684\u4f4d\u7f6e\u53c2\u6570\u3002 \u6709\u4e24\u4e2a\u53ef\u9009\u53ea\u80fd\u7528\u5173\u952e\u5b57\u7684\u5b9e\u53c2\u3002 key \u5b9e\u53c2\u6307\u5b9a\u6392\u5e8f\u51fd\u6570\u7528\u7684\u53c2\u6570\uff0c\u5982\u4f20\u7ed9 list.sort() \u7684\u3002 default \u5b9e\u53c2\u662f\u5f53\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\u65f6\u8fd4\u56de\u7684\u503c\u3002\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ed9 default \uff0c\u5219\u4f1a\u89e6\u53d1 ValueError \u3002 \u5982\u679c\u6709\u591a\u4e2a\u6700\u5c0f\u5143\u7d20\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u3002\u8fd9\u548c\u5176\u4ed6\u7a33\u5b9a\u6392\u5e8f\u5de5\u5177\u5982 sorted(iterable, key=keyfunc)[0] \u548c heapq.nsmallest(1, iterable, key=keyfunc) \u4fdd\u6301\u4e00\u81f4\u3002 next(iterator[, default]) \u901a\u8fc7\u8c03\u7528 iterator \u7684 __next__() \u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u8fed\u4ee3\u5668\u8017\u5c3d\uff0c\u5219\u8fd4\u56de\u7ed9\u5b9a\u7684 default \uff0c\u5982\u679c\u6ca1\u6709\u9ed8\u8ba4\u503c\u5219\u89e6\u53d1 StopIteration \u3002 class object \u8fd4\u56de\u4e00\u4e2a\u6ca1\u6709\u7279\u5f81\u7684\u65b0\u5bf9\u8c61\u3002 object \u662f\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\u3002\u5b83\u5177\u6709\u6240\u6709 Python \u7c7b\u5b9e\u4f8b\u7684\u901a\u7528\u65b9\u6cd5\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u5b9e\u53c2\u3002 \u7531\u4e8e object \u6ca1\u6709 __dict__ \uff0c\u56e0\u6b64\u65e0\u6cd5\u5c06\u4efb\u610f\u5c5e\u6027\u8d4b\u7ed9 object \u7684\u5b9e\u4f8b\u3002 oct(x) \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u524d\u7f00\u4e3a 0o \u7684\u516b\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 Python \u8868\u8fbe\u5f0f\u3002\u5982\u679c x \u4e0d\u662f Python \u7684 int \u5bf9\u8c61\uff0c\u90a3\u5b83\u9700\u8981\u5b9a\u4e49 __index__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002 open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None) \u6253\u5f00 file \u5e76\u8fd4\u56de\u5bf9\u5e94\u7684 file object \u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u80fd\u88ab\u6253\u5f00\uff0c\u5219\u5f15\u53d1 OSError \u3002 file \u662f\u4e00\u4e2a path-like object \uff0c\u8868\u793a\u5c06\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff08\u7edd\u5bf9\u8def\u5f84\u6216\u8005\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u8981\u88ab\u5c01\u88c5\u7684\u6574\u6570\u7c7b\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\uff08\u5982\u679c\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5b83\u4f1a\u968f\u7740\u8fd4\u56de\u7684I/O\u5bf9\u8c61\u5173\u95ed\u800c\u5173\u95ed\uff0c\u9664\u975e closefd \u88ab\u8bbe\u4e3a False \u3002\uff09 mode \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u7684\u6a21\u5f0f\u3002\u9ed8\u8ba4\u503c\u662f 'r' \uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4ee5\u6587\u672c\u6a21\u5f0f\u6253\u5f00\u5e76\u8bfb\u53d6\u3002\u5176\u4ed6\u5e38\u89c1\u6a21\u5f0f\u6709\uff1a\u5199\u5165 'w' \uff08\u622a\u65ad\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff09\uff1b\u6392\u5b83\u6027\u521b\u5efa 'x' \uff1b\u8ffd\u52a0\u5199 'a' \uff08\u5728 \u4e00\u4e9b Unix \u7cfb\u7edf\u4e0a\uff0c\u65e0\u8bba\u5f53\u524d\u7684\u6587\u4ef6\u6307\u9488\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u6240\u6709\u5199\u5165\u90fd\u4f1a\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\uff09\u3002\u5728\u6587\u672c\u6a21\u5f0f\uff0c\u5982\u679c encoding \u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u6839\u636e\u5e73\u53f0\u6765\u51b3\u5b9a\u4f7f\u7528\u7684\u7f16\u7801\uff1a\u4f7f\u7528 locale.getpreferredencoding(False) \u6765\u83b7\u53d6\u672c\u5730\u7f16\u7801\u3002\uff08\u8981\u8bfb\u53d6\u548c\u5199\u5165\u539f\u59cb\u5b57\u8282\uff0c\u8bf7\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u5e76\u4e0d\u8981\u6307\u5b9a encoding \u3002\uff09\u53ef\u7528\u7684\u6a21\u5f0f\u6709\uff1a open()\u53c2\u6570 \u9ed8\u8ba4\u6a21\u5f0f\u4e3a 'r' \uff08\u6253\u5f00\u7528\u4e8e\u8bfb\u53d6\u6587\u672c\uff0c\u4e0e 'rt' \u540c\u4e49\uff09\u3002\u6a21\u5f0f 'w+' \u4e0e 'w+b' \u5c06\u6253\u5f00\u6587\u4ef6\u5e76\u6e05\u7a7a\u5185\u5bb9\u3002\u6a21\u5f0f 'r+' \u4e0e 'r+b' \u5c06\u6253\u5f00\u6587\u4ef6\u5e76\u4e0d\u6e05\u7a7a\u5185\u5bb9\u3002 Python \u533a\u5206\u4e8c\u8fdb\u5236\u548c\u6587\u672cI/O\u3002\u4ee5\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\uff08\u5305\u62ec mode \u53c2\u6570\u4e2d\u7684 'b' \uff09\u8fd4\u56de\u7684\u5185\u5bb9\u4e3a bytes \u5bf9\u8c61\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u89e3\u7801\u3002\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728 mode \u53c2\u6570\u4e2d\u5305\u542b 't' \uff09\u65f6\uff0c\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u4e3a str \uff0c\u9996\u5148\u4f7f\u7528\u6307\u5b9a\u7684 encoding \uff08\u5982\u679c\u7ed9\u5b9a\uff09\u6216\u8005\u4f7f\u7528\u5e73\u53f0\u9ed8\u8ba4\u7684\u7684\u5b57\u8282\u7f16\u7801\u89e3\u7801\u3002 Python\u4e0d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u672c\u6587\u4ef6\u6982\u5ff5;\u6240\u6709\u5904\u7406\u90fd\u7531Python\u672c\u8eab\u5b8c\u6210\uff0c\u56e0\u6b64\u4e0e\u5e73\u53f0\u65e0\u5173\u3002 buffering \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7f13\u51b2\u7b56\u7565\u3002\u4f20\u9012 0 \u4ee5\u5207\u6362\u7f13\u51b2\u5173\u95ed\uff08\u4ec5\u5141\u8bb8\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\uff09\uff0c 1 \u9009\u62e9\u884c\u7f13\u51b2\uff08\u4ec5\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u53ef\u7528\uff09\uff0c\u5e76\u4e14 >1 \u7684\u6574\u6570\u4ee5\u6307\u793a\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fa buffering \u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u7f13\u51b2\u7b56\u7565\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b: \u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u8fdb\u884c\u7f13\u51b2\uff1b\u4f7f\u7528\u542f\u53d1\u5f0f\u65b9\u6cd5\u9009\u62e9\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u5c1d\u8bd5\u786e\u5b9a\u5e95\u5c42\u8bbe\u5907\u7684\u201c\u5757\u5927\u5c0f\u201d\u6216\u4f7f\u7528 io.DEFAULT_BUFFER_SIZE \u3002\u5728\u8bb8\u591a\u7cfb\u7edf\u4e0a\uff0c\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u901a\u5e38\u4e3a 4096 \u6216 8192 \u5b57\u8282\u3002 \u201c\u4ea4\u4e92\u5f0f\u201d\u6587\u672c\u6587\u4ef6\uff08 isatty() \u8fd4\u56de True \u7684\u6587\u4ef6\uff09\u4f7f\u7528\u884c\u7f13\u51b2\u3002\u5176\u4ed6\u6587\u672c\u6587\u4ef6\u4f7f\u7528\u4e0a\u8ff0\u7b56\u7565\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 encoding \u662f\u7528\u4e8e\u89e3\u7801\u6216\u7f16\u7801\u6587\u4ef6\u7684\u7f16\u7801\u7684\u540d\u79f0\u3002\u8fd9\u5e94\u8be5\u53ea\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u4f7f\u7528\u3002\u9ed8\u8ba4\u7f16\u7801\u662f\u4f9d\u8d56\u4e8e\u5e73\u53f0\u7684\uff08\u4e0d\u7ba1 locale.getpreferredencoding() \u8fd4\u56de\u4f55\u503c\uff09\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Python\u652f\u6301\u7684 text encoding \u3002 errors \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5982\u4f55\u5904\u7406\u7f16\u7801\u548c\u89e3\u7801\u9519\u8bef - \u8fd9\u4e0d\u80fd\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\u4f7f\u7528\u3002\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6807\u51c6\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\uff08\u5217\u5728\u9519\u8bef\u5904\u7406\u65b9\u6848\uff09\uff0c\u4f46\u662f\u4f7f\u7528 codecs.register_error() \u6ce8\u518c\u7684\u4efb\u4f55\u9519\u8bef\u5904\u7406\u540d\u79f0\u4e5f\u662f\u6709\u6548\u7684\u3002\u6807\u51c6\u540d\u79f0\u5305\u62ec\uff1a - \u5982\u679c\u5b58\u5728\u7f16\u7801\u9519\u8bef\uff0c 'strict' \u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\u3002\u9ed8\u8ba4\u503c None \u5177\u6709\u76f8\u540c\u7684\u6548\u679c\u3002 - 'ignore' \u5ffd\u7565\u9519\u8bef\u3002\u8bf7\u6ce8\u610f\uff0c\u5ffd\u7565\u7f16\u7801\u9519\u8bef\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931\u3002 - 'replace' \u4f1a\u5c06\u66ff\u6362\u6807\u8bb0\uff08\u4f8b\u5982 '?' \uff09\u63d2\u5165\u6709\u9519\u8bef\u6570\u636e\u7684\u5730\u65b9\u3002 - 'surrogateescape' \u5c06\u8868\u793a\u4efb\u4f55\u4e0d\u6b63\u786e\u7684\u5b57\u8282\u4f5c\u4e3aUnicode\u4e13\u7528\u533a\u4e2d\u7684\u4ee3\u7801\u70b9\uff0c\u8303\u56f4\u4ece U+DC80 \u5230 U+DCFF \u3002\u5f53\u5728\u5199\u5165\u6570\u636e\u65f6\u4f7f\u7528 surrogateescape \u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u4e9b\u79c1\u6709\u4ee3\u7801\u70b9\u5c06\u88ab\u8f6c\u56de\u5230\u76f8\u540c\u7684\u5b57\u8282\u4e2d\u3002\u8fd9\u5bf9\u4e8e\u5904\u7406\u672a\u77e5\u7f16\u7801\u7684\u6587\u4ef6\u5f88\u6709\u7528\u3002 - \u53ea\u6709\u5728\u5199\u5165\u6587\u4ef6\u65f6\u624d\u652f\u6301 'xmlcharrefreplace' \u3002\u7f16\u7801\u4e0d\u652f\u6301\u7684\u5b57\u7b26\u5c06\u66ff\u6362\u4e3a\u76f8\u5e94\u7684XML\u5b57\u7b26\u5f15\u7528 &#nnn; \u3002 - 'backslashreplace' \u7528Python\u7684\u53cd\u5411\u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u683c\u5f0f\u9519\u8bef\u7684\u6570\u636e\u3002 - 'namereplace' \uff08\u4e5f\u53ea\u5728\u7f16\u5199\u65f6\u652f\u6301\uff09\u7528 \\\\N{...} \u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u4e0d\u652f\u6301\u7684\u5b57\u7b26\u3002 newline \u63a7\u5236 universal newlines \u6a21\u5f0f\u5982\u4f55\u751f\u6548\uff08\u5b83\u4ec5\u9002\u7528\u4e8e\u6587\u672c\u6a21\u5f0f\uff09\u3002\u5b83\u53ef\u4ee5\u662f None \uff0c '' \uff0c '\\\\n' \uff0c '\\\\r' \u548c '\\\\r\\\\n' \u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a - \u4ece\u6d41\u4e2d\u8bfb\u53d6\u8f93\u5165\u65f6\uff0c\u5982\u679c newline \u4e3a None \uff0c\u5219\u542f\u7528\u901a\u7528\u6362\u884c\u6a21\u5f0f\u3002\u8f93\u5165\u4e2d\u7684\u884c\u53ef\u4ee5\u4ee5 '\\\\n' \uff0c '\\\\r' \u6216 '\\\\r\\\\n' \u7ed3\u5c3e\uff0c\u8fd9\u4e9b\u884c\u88ab\u7ffb\u8bd1\u6210 '\\\\n' \u5728\u8fd4\u56de\u547c\u53eb\u8005\u4e4b\u524d\u3002\u5982\u679c\u5b83\u662f '' \uff0c\u5219\u542f\u7528\u901a\u7528\u6362\u884c\u6a21\u5f0f\uff0c\u4f46\u884c\u7ed3\u5c3e\u5c06\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u672a\u7ffb\u8bd1\u3002\u5982\u679c\u5b83\u5177\u6709\u4efb\u4f55\u5176\u4ed6\u5408\u6cd5\u503c\uff0c\u5219\u8f93\u5165\u884c\u4ec5\u7531\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7ec8\u6b62\uff0c\u5e76\u4e14\u884c\u7ed3\u5c3e\u5c06\u8fd4\u56de\u7ed9\u672a\u8c03\u7528\u7684\u8c03\u7528\u8005\u3002 - \u5c06\u8f93\u51fa\u5199\u5165\u6d41\u65f6\uff0c\u5982\u679c newline \u4e3a None \uff0c\u5219\u5199\u5165\u7684\u4efb\u4f55 '\\\\n' \u5b57\u7b26\u90fd\u5c06\u8f6c\u6362\u4e3a\u7cfb\u7edf\u9ed8\u8ba4\u884c\u5206\u9694\u7b26 os.linesep \u3002\u5982\u679c newline \u662f '' \u6216 '\\\\n' \uff0c\u5219\u4e0d\u8fdb\u884c\u7ffb\u8bd1\u3002\u5982\u679c newline \u662f\u4efb\u4f55\u5176\u4ed6\u5408\u6cd5\u503c\uff0c\u5219\u5199\u5165\u7684\u4efb\u4f55 '\\\\n' \u5b57\u7b26\u5c06\u88ab\u8f6c\u6362\u4e3a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u3002 \u5982\u679c closefd \u662f False \u5e76\u4e14\u7ed9\u51fa\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u800c\u4e0d\u662f\u6587\u4ef6\u540d\uff0c\u90a3\u4e48\u5f53\u6587\u4ef6\u5173\u95ed\u65f6\uff0c\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4fdd\u6301\u6253\u5f00\u72b6\u6001\u3002\u5982\u679c\u7ed9\u51fa\u6587\u4ef6\u540d\u5219 closefd \u5fc5\u987b\u4e3a True \uff08\u9ed8\u8ba4\u503c\uff09\uff0c\u5426\u5219\u5c06\u5f15\u53d1\u9519\u8bef\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u53ef\u8c03\u7528\u7684 opener \u6765\u4f7f\u7528\u81ea\u5b9a\u4e49\u5f00\u542f\u5668\u3002\u7136\u540e\u901a\u8fc7\u4f7f\u7528\u53c2\u6570\uff08 file \uff0c flags \uff09\u8c03\u7528 opener \u83b7\u5f97\u6587\u4ef6\u5bf9\u8c61\u7684\u57fa\u7840\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 opener \u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u4f7f\u7528 os.open as opener \u65f6\u4e0e\u4f20\u9012 None \u7684\u6548\u679c\u76f8\u540c\uff09\u3002 \u65b0\u521b\u5efa\u7684\u6587\u4ef6\u662f \u4e0d\u53ef\u7ee7\u627f\u7684 \u3002 ord(c) \u5bf9\u8868\u793a\u5355\u4e2aUnicode\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4ee3\u8868\u5b83Unicode\u7801\u70b9\u7684\u6574\u6570\u3002\u4f8b\u5982 ord('a') \u8fd4\u56de\u6574\u6570 97\uff0c ord('\u20ac') \uff08\u6b27\u5143\u7b26\u53f7\uff09\u8fd4\u56de8364\u3002\u8fd9\u662f chr() \u7684\u9006\u51fd\u6570\u3002 pow(base, exp[, mod]) \u8fd4\u56de base \u7684 exp \u6b21\u5e42\uff1b\u5982\u679c mod \u5b58\u5728\uff0c\u5219\u8fd4\u56de base \u7684 exp \u6b21\u5e42\u5bf9 mod \u53d6\u4f59\uff08\u6bd4 pow(base, exp) % mod \u66f4\u9ad8\u6548\uff09\u3002\u4e24\u53c2\u6570\u5f62\u5f0f pow(base, exp) \u7b49\u4ef7\u4e8e\u4e58\u65b9\u8fd0\u7b97\u7b26: base**exp \u3002 \u53c2\u6570\u5fc5\u987b\u5177\u6709\u6570\u503c\u7c7b\u578b\u3002\u5bf9\u4e8e\u6df7\u7528\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\uff0c\u5219\u5c06\u5e94\u7528\u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u89c4\u5219\u3002 \u5bf9\u4e8e int \u64cd\u4f5c\u6570\uff0c\u7ed3\u679c\u5177\u6709\u4e0e\u64cd\u4f5c\u6570\u76f8\u540c\u7684\u7c7b\u578b\uff08\u5f3a\u5236\u8f6c\u6362\u540e\uff09\uff0c\u9664\u975e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8d1f\u503c\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u53c2\u6570\u5c06\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u5e76\u8f93\u51fa\u6d6e\u70b9\u6570\u7ed3\u679c\u3002\u4f8b\u5982\uff0c 10**2 \u8fd4\u56de 100 \uff0c\u4f46 10**-2 \u8fd4\u56de 0.01 \u3002 \u5bf9\u4e8e int \u64cd\u4f5c\u6570 base \u548c exp \uff0c\u5982\u679c\u7ed9\u51fa mod \uff0c\u5219 mod \u5fc5\u987b\u4e3a\u6574\u6570\u7c7b\u578b\u5e76\u4e14 mod \u5fc5\u987b\u4e0d\u4e3a\u96f6\u3002 \u5982\u679c\u7ed9\u51fa mod \u5e76\u4e14 exp \u4e3a\u8d1f\u503c\uff0c\u5219 base \u5fc5\u987b\u76f8\u5bf9\u4e8e mod \u4e0d\u53ef\u6574\u9664\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u4f1a\u8fd4\u56de pow(inv_base, -exp, mod) \uff0c\u5176\u4e2d inv_base \u4e3a base \u7684\u5012\u6570\u5bf9 mod \u53d6\u4f59\u3002 repr(object) \u8fd4\u56de\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\u7684\u53ef\u6253\u5370\u8868\u793a\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u5bf9\u4e8e\u8bb8\u591a\u7c7b\u578b\u6765\u8bf4\uff0c\u8be5\u51fd\u6570\u4f1a\u5c1d\u8bd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u5c06\u4f1a\u4e0e\u8be5\u5bf9\u8c61\u88ab\u4f20\u9012\u7ed9 eval() \u65f6\u6240\u751f\u6210\u7684\u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u8868\u793a\u5f62\u5f0f\u4f1a\u662f\u4e00\u4e2a\u62ec\u5728\u5c16\u62ec\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u8c61\u7c7b\u578b\u7684\u540d\u79f0\u4e0e\u901a\u5e38\u5305\u62ec\u5bf9\u8c61\u540d\u79f0\u548c\u5730\u5740\u7684\u9644\u52a0\u4fe1\u606f\u3002\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49 __repr__() \u65b9\u6cd5\u6765\u63a7\u5236\u6b64\u51fd\u6570\u4e3a\u5b83\u7684\u5b9e\u4f8b\u6240\u8fd4\u56de\u7684\u5185\u5bb9\u3002 reversed(seq) \u8fd4\u56de\u4e00\u4e2a\u53cd\u5411\u7684 iterator \u3002 seq \u5fc5\u987b\u662f\u4e00\u4e2a\u5177\u6709 __reversed__() \u65b9\u6cd5\u7684\u5bf9\u8c61\u6216\u8005\u662f\u652f\u6301\u8be5\u5e8f\u5217\u534f\u8bae\uff08\u5177\u6709\u4ece 0 \u5f00\u59cb\u7684\u6574\u6570\u7c7b\u578b\u53c2\u6570\u7684 __len__() \u65b9\u6cd5\u548c __getitem__() \u65b9\u6cd5\uff09\u3002 round(number[, ndigits]) \u8fd4\u56de number \u820d\u5165\u5230\u5c0f\u6570\u70b9\u540e ndigits \u4f4d\u7cbe\u5ea6\u7684\u503c\u3002\u5982\u679c ndigits \u88ab\u7701\u7565\u6216\u4e3a None \uff0c\u5219\u8fd4\u56de\u6700\u63a5\u8fd1\u8f93\u5165\u503c\u7684\u6574\u6570\u3002 \u5bf9\u4e8e\u652f\u6301 round() \u7684\u5185\u7f6e\u7c7b\u578b\uff0c\u503c\u4f1a\u88ab\u820d\u5165\u5230\u6700\u63a5\u8fd1\u7684 10 \u7684\u8d1f ndigits \u6b21\u5e42\u7684\u500d\u6570\uff1b\u5982\u679c\u4e0e\u4e24\u4e2a\u500d\u6570\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5219\u9009\u62e9\u5076\u6570 (\u56e0\u6b64\uff0c round(0.5) \u548c round(-0.5) \u5747\u4e3a 0 \u800c round(1.5) \u4e3a 2 )\u3002 \u4efb\u4f55\u6574\u6570\u503c\u90fd\u53ef\u4f5c\u4e3a\u6709\u6548\u7684 ndigits \uff08\u6b63\u6570\u3001\u96f6\u6216\u8d1f\u6570\uff09\u3002 \u5982\u679c ndigits \u88ab\u7701\u7565\u6216\u4e3a None \u5219\u8fd4\u56de\u503c\u5c06\u4e3a\u6574\u6570\u3002\u5426\u5219\u8fd4\u56de\u503c\u4e0e number \u7684\u7c7b\u578b\u76f8\u540c\u3002 \u5bf9\u4e8e\u4e00\u822c\u7684 Python \u5bf9\u8c61 number , round \u5c06\u59d4\u6258\u7ed9 number.__round__ \u3002 class set([iterable]) \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 set \u5bf9\u8c61\uff0c\u53ef\u4ee5\u9009\u62e9\u5e26\u6709\u4ece iterable \u83b7\u53d6\u7684\u5143\u7d20\u3002 set \u662f\u4e00\u4e2a\u5185\u7f6e\u7c7b\u578b\u3002 setattr(object, name, value) \u6b64\u51fd\u6570\u4e0e getattr() \u4e24\u76f8\u5bf9\u5e94\u3002\u5176\u53c2\u6570\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3001\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u4efb\u610f\u503c\u3002\u5b57\u7b26\u4e32\u6307\u5b9a\u4e00\u4e2a\u73b0\u6709\u5c5e\u6027\u6216\u8005\u65b0\u589e\u5c5e\u6027\u3002\u51fd\u6570\u4f1a\u5c06\u503c\u8d4b\u7ed9\u8be5\u5c5e\u6027\uff0c\u53ea\u8981\u5bf9\u8c61\u5141\u8bb8\u8fd9\u79cd\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c setattr(x, 'foobar', 123) \u7b49\u4ef7\u4e8e x.foobar = 123 \u3002 sorted(iterable, *, key=None, reverse=False) \u6839\u636e iterable \u4e2d\u7684\u9879\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5df2\u6392\u5e8f\u5217\u8868\u3002 \u5177\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5b83\u4eec\u90fd\u5fc5\u987b\u6307\u5b9a\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u3002 key \u6307\u5b9a\u5e26\u6709\u5355\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u4ece iterable \u7684\u6bcf\u4e2a\u5143\u7d20\u4e2d\u63d0\u53d6\u7528\u4e8e\u6bd4\u8f83\u7684\u952e (\u4f8b\u5982 key=str.lower )\u3002\u9ed8\u8ba4\u503c\u4e3a None \uff08\u76f4\u63a5\u6bd4\u8f83\u5143\u7d20\uff09\u3002 reverse \u4e3a\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u5982\u679c\u8bbe\u4e3a True \uff0c\u5219\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u5c06\u6309\u53cd\u5411\u987a\u5e8f\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\u3002 \u4f7f\u7528 functools.cmp_to_key() \u53ef\u5c06\u8001\u5f0f\u7684 cmp \u51fd\u6570\u8f6c\u6362\u4e3a key \u51fd\u6570\u3002 \u5185\u7f6e\u7684 sorted() \u786e\u4fdd\u662f\u7a33\u5b9a\u7684\u3002\u5982\u679c\u4e00\u4e2a\u6392\u5e8f\u786e\u4fdd\u4e0d\u4f1a\u6539\u53d8\u6bd4\u8f83\u7ed3\u679c\u76f8\u7b49\u7684\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u5c31\u79f0\u5176\u4e3a\u7a33\u5b9a\u7684 --- \u8fd9\u6709\u5229\u4e8e\u8fdb\u884c\u591a\u91cd\u6392\u5e8f\uff08\u4f8b\u5982\u5148\u6309\u90e8\u95e8\u3001\u518d\u6309\u85aa\u7ea7\u6392\u5e8f\uff09\u3002 @staticmethod \u5c06\u65b9\u6cd5\u8f6c\u6362\u4e3a\u9759\u6001\u65b9\u6cd5\u3002 \u9759\u6001\u65b9\u6cd5\u4e0d\u4f1a\u63a5\u6536\u9690\u5f0f\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u8981\u58f0\u660e\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u8bf7\u4f7f\u7528\u6b64\u8bed\u6cd5\uff1a class C : @staticmethod def f ( arg1 , arg2 , ... ): ... @staticmethod \u8fd9\u6837\u7684\u5f62\u5f0f\u79f0\u4e3a\u51fd\u6570\u7684 decorator \uff08\u88c5\u9970\u5668\uff09\u3002 \u9759\u6001\u65b9\u6cd5\u7684\u8c03\u7528\u53ef\u4ee5\u5728\u7c7b\u4e0a\u8fdb\u884c\uff08\u4f8b\u5982 C.f() \uff09 \u4e5f\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e0a\u8fdb\u884c\uff08\u4f8b\u5982 C().f() \uff09\u3002 \u50cf\u6240\u6709\u88c5\u9970\u5668\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u50cf\u5e38\u89c4\u51fd\u6570\u4e00\u6837\u8c03\u7528 staticmethod \uff0c\u5e76\u5bf9\u5176\u7ed3\u679c\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002\u6bd4\u5982\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u4ece\u7c7b\u4e3b\u4f53\u5f15\u7528\u51fd\u6570\u5e76\u4e14\u60a8\u5e0c\u671b\u907f\u514d\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u8bf7\u4f7f\u7528\u6b64\u8bed\u6cd5\uff1a class C : builtin_open = staticmethod ( open ) sum(iterable[, start=0]) \u4ece start \u5f00\u59cb\u81ea\u5de6\u5411\u53f3\u5bf9 iterable \u7684\u9879\u6c42\u548c\u5e76\u8fd4\u56de\u603b\u8ba1\u503c\u3002 iterable \u7684\u9879\u901a\u5e38\u4e3a\u6570\u5b57\uff0c\u800c start \u503c\u5219\u4e0d\u5141\u8bb8\u4e3a\u5b57\u7b26\u4e32\u3002 \u5bf9\u67d0\u4e9b\u7528\u4f8b\u6765\u8bf4\uff0c\u5b58\u5728 sum() \u7684\u66f4\u597d\u66ff\u4ee3\u3002\u62fc\u63a5\u5b57\u7b26\u4e32\u5e8f\u5217\u7684\u66f4\u597d\u66f4\u5feb\u65b9\u5f0f\u662f\u8c03\u7528 ''.join(sequence) \u3002\u8981\u4ee5\u6269\u5c55\u7cbe\u5ea6\u5bf9\u6d6e\u70b9\u503c\u6c42\u548c\uff0c\u8bf7\u53c2\u9605 math.fsum() \u3002 \u8981\u62fc\u63a5\u4e00\u7cfb\u5217\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 itertools.chain() \u3002 vars([object]) \u8fd4\u56de\u6a21\u5757\u3001\u7c7b\u3001\u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u5b83\u5177\u6709 __dict__ \u5c5e\u6027\u7684\u5bf9\u8c61\u7684 __dict__ \u5c5e\u6027\u3002 \u6a21\u5757\u548c\u5b9e\u4f8b\u8fd9\u6837\u7684\u5bf9\u8c61\u5177\u6709\u53ef\u66f4\u65b0\u7684 __dict__ \u5c5e\u6027\uff1b\u4f46\u662f\uff0c\u5176\u5b83\u5bf9\u8c61\u7684 __dict__ \u5c5e\u6027\u53ef\u80fd\u4f1a\u8bbe\u4e3a\u9650\u5236\u5199\u5165\uff08\u4f8b\u5982\uff0c\u7c7b\u4f1a\u4f7f\u7528 types.MappingProxyType \u6765\u9632\u6b62\u76f4\u63a5\u66f4\u65b0\u5b57\u5178\uff09\u3002 \u4e0d\u5e26\u53c2\u6570\u65f6\uff0c vars() \u7684\u884c\u4e3a\u7c7b\u4f3c locals() \u3002\u8bf7\u6ce8\u610f\uff0c locals \u5b57\u5178\u4ec5\u5bf9\u4e8e\u8bfb\u53d6\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u5bf9 locals \u5b57\u5178\u7684\u66f4\u65b0\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u4f46\u5b83\u6ca1\u6709 __dict__ \u5c5e\u6027\uff08\u4f8b\u5982\uff0c\u5f53\u5b83\u6240\u5c5e\u7684\u7c7b\u5b9a\u4e49\u4e86 __slots__ \u5c5e\u6027\u65f6\uff09\u5219\u4f1a\u5f15\u53d1 TypeError \u5f02\u5e38\u3002 zip(*iterables) \u521b\u5efa\u4e00\u4e2a\u805a\u5408\u4e86\u6765\u81ea\u6bcf\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\uff0c\u5176\u4e2d\u7684\u7b2c i \u4e2a\u5143\u7ec4\u5305\u542b\u6765\u81ea\u6bcf\u4e2a\u53c2\u6570\u5e8f\u5217\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u7b2c i \u4e2a\u5143\u7d20\u3002\u5f53\u6240\u8f93\u5165\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u77ed\u7684\u4e00\u4e2a\u88ab\u8017\u5c3d\u65f6\uff0c\u8fed\u4ee3\u5668\u5c06\u505c\u6b62\u8fed\u4ee3\u3002\u5f53\u53ea\u6709\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u53c2\u6570\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u5355\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\u3002\u4e0d\u5e26\u53c2\u6570\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u8fed\u4ee3\u5668\u3002\u76f8\u5f53\u4e8e\uff1a def zip ( * iterables ): # zip('ABCD', 'xy') --> Ax By sentinel = object () iterators = [ iter ( it ) for it in iterables ] while iterators : result = [] for it in iterators : elem = next ( it , sentinel ) if elem is sentinel : return result . append ( elem ) yield tuple ( result ) \u51fd\u6570\u4f1a\u4fdd\u8bc1\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6309\u4ece\u5de6\u81f3\u53f3\u7684\u987a\u5e8f\u88ab\u6c42\u503c\u3002\u4f7f\u5f97\u53ef\u4ee5\u901a\u8fc7 zip(*[iter(s)]*n) \u8fd9\u6837\u7684\u60ef\u7528\u5f62\u5f0f\u5c06\u4e00\u7cfb\u5217\u6570\u636e\u805a\u7c7b\u4e3a\u957f\u5ea6\u4e3a n \u7684\u5206\u7ec4\u3002\u8fd9\u5c06\u91cd\u590d\u540c\u6837\u7684\u8fed\u4ee3\u5668 n \u6b21\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u8f93\u51fa\u7684\u5143\u7ec4\u5177\u6709\u7b2c n \u6b21\u8c03\u7528\u8be5\u8fed\u4ee3\u5668\u7684\u7ed3\u679c\u3002\u5b83\u7684\u4f5c\u7528\u6548\u679c\u5c31\u662f\u5c06\u8f93\u5165\u62c6\u5206\u4e3a\u957f\u5ea6\u4e3a n \u7684\u6570\u636e\u5757\u3002 \u5f53\u4f60\u4e0d\u7528\u5173\u5fc3\u8f83\u957f\u53ef\u8fed\u4ee3\u5bf9\u8c61\u672b\u5c3e\u4e0d\u5339\u914d\u7684\u503c\u65f6\uff0c\u5219 zip() \u53ea\u987b\u4f7f\u7528\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u8f93\u5165\u5373\u53ef\u3002\u5982\u679c\u90a3\u4e9b\u503c\u5f88\u91cd\u8981\uff0c\u5219\u5e94\u6539\u7528 itertools.zip_longest() \u3002 zip() \u4e0e``\u8fd0\u7b97\u7b26\u76f8\u7ed3\u5408\u53ef\u4ee5\u7528\u6765\u62c6\u89e3\u4e00\u4e2a\u5217\u8868\uff1a x2 , y2 = zip ( * zip ( x , y ))","title":"`abs(x)`"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#absx","text":"\u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u3002 \u53c2\u6570\u53ef\u4ee5\u662f\u6574\u6570\u3001\u6d6e\u70b9\u6570\u6216\u4efb\u4f55\u5b9e\u73b0\u4e86 __abs__() \u7684\u5bf9\u8c61\u3002 \u5982\u679c\u53c2\u6570\u662f\u4e00\u4e2a\u590d\u6570\uff0c\u5219\u8fd4\u56de\u5b83\u7684\u6a21\u3002","title":"abs(x)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#alliterable","text":"\u5982\u679c iterable \u7684\u6240\u6709\u5143\u7d20\u5747\u4e3a\u771f\u503c\uff08\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff09\u5219\u8fd4\u56de True \u3002 \u5982\u679c iterable \u7684\u6240\u6709\u5143\u7d20\u4e0d\u4e3a 0 \u3001 '' \u3001 False \u6216\u8005 iterable \u4e3a\u7a7a\uff0c all(iterable) \u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u7a7a\u5143\u7ec4\u3001\u7a7a\u5217\u8868\u8fd4\u56de\u503c\u4e3a True \uff0c\u8fd9\u91cc\u8981\u7279\u522b\u6ce8\u610f\u3002 \u7b49\u4ef7\u4e8e\uff1a def all ( iterable ): for element in iterable : if not element : return False return True","title":"all(iterable)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#anyiterable","text":"\u5982\u679c iterable \u7684\u4efb\u4e00\u5143\u7d20\u4e3a\u771f\u503c\u5219\u8fd4\u56de True \u3002 \u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u8fd4\u56de False \u3002 \u7b49\u4ef7\u4e8e\uff1a def any ( iterable ): for element in iterable : if element : return True return False","title":"any(iterable)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#asciiobject","text":"\u4e0e repr() \u7c7b\u4f3c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5bf9\u8c61\u7684\u53ef\u6253\u5370\u8868\u793a\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u4f7f\u7528 \\\\x \u3001 \\\\u \u548c \\\\U \u5bf9 repr() \u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u4e2d\u975e ASCII \u7f16\u7801\u7684\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002\u751f\u6210\u7684\u5b57\u7b26\u4e32\u548c Python 2 \u7684 repr() \u8fd4\u56de\u7684\u7ed3\u679c\u76f8\u4f3c\u3002","title":"ascii(object)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#binx","text":"\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u524d\u7f00\u4e3a 0b \u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 Python \u8868\u8fbe\u5f0f\u3002\u5982\u679c x \u4e0d\u662f Python \u7684 int \u5bf9\u8c61\uff0c\u90a3\u5b83\u9700\u8981\u5b9a\u4e49 __index__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002","title":"bin(x)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-boolx","text":"\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c True \u6216\u8005 False \u3002 x \u4f7f\u7528\u6807\u51c6\u7684\u771f\u503c\u6d4b\u8bd5\u8fc7\u7a0b\u6765\u8f6c\u6362\u3002\u5982\u679c x \u662f\u5047\u7684\u6216\u8005\u88ab\u7701\u7565\uff0c\u8fd4\u56de False \uff1b\u5176\u4ed6\u60c5\u51b5\u8fd4\u56de True \u3002 bool \u7c7b\u662f int \u7684\u5b50\u7c7b\u3002\u5176\u4ed6\u7c7b\u4e0d\u80fd\u7ee7\u627f\u81ea\u5b83\u3002\u5b83\u53ea\u6709 False \u548c True \u4e24\u4e2a\u5b9e\u4f8b\u3002","title":"class\u00a0bool([x])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#breakpointargs-kws","text":"\u6b64\u51fd\u6570\u4f1a\u5728\u8c03\u7528\u65f6\u5c06\u4f60\u9677\u5165\u8c03\u8bd5\u5668\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u8c03\u7528 sys.breakpointhook() \uff0c\u76f4\u63a5\u4f20\u9012 args \u548c kws \u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c sys.breakpointhook() \u8c03\u7528 pdb.set_trace() \u4e14\u6ca1\u6709\u53c2\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u7eaf\u7cb9\u662f\u4e00\u4e2a\u4fbf\u5229\u51fd\u6570\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u663e\u5f0f\u5bfc\u5165 pdb \u4e14\u952e\u5165\u5c3d\u53ef\u80fd\u5c11\u7684\u4ee3\u7801\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u5668\u3002\u4f46\u662f\uff0c sys.breakpointhook() \u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u4e00\u4e9b\u51fd\u6570\u5e76\u88ab breakpoint() \u81ea\u52a8\u8c03\u7528\uff0c\u4ee5\u5141\u8bb8\u8fdb\u5165\u4f60\u60f3\u7528\u7684\u8c03\u8bd5\u5668\u3002","title":"breakpoint(*args,\u00a0**kws)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-bytearraysource-encoding-errors","text":"\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 bytes \u6570\u7ec4\u3002 bytearray \u7c7b\u662f\u4e00\u4e2a\u53ef\u53d8\u5e8f\u5217\uff0c\u5305\u542b\u8303\u56f4\u4e3a 0 <= x < 256 \u7684\u6574\u6570\u3002\u5b83\u6709\u53ef\u53d8\u5e8f\u5217\u5927\u90e8\u5206\u5e38\u89c1\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u6709 bytes \u7c7b\u578b\u7684\u5927\u90e8\u5206\u65b9\u6cd5\u3002 \u53ef\u9009\u5f62\u53c2 source \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u7ec4\uff1a \u5982\u679c\u662f\u4e00\u4e2a string \uff0c\u5fc5\u987b\u63d0\u4f9b encoding \u53c2\u6570\uff08 errors \u53c2\u6570\u4ecd\u662f\u53ef\u9009\u7684\uff09\uff1b bytearray() \u4f1a\u4f7f\u7528 str.encode() \u65b9\u6cd5\u6765\u5c06 string \u8f6c\u53d8\u6210 bytes \u3002 \u5982\u679c\u662f\u4e00\u4e2a integer \uff0c\u4f1a\u521d\u59cb\u5316\u5927\u5c0f\u4e3a\u8be5\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u5e76\u4f7f\u7528 null \u5b57\u8282\u586b\u5145\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u9075\u5faa \u7f13\u51b2\u533a\u63a5\u53e3 \u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7684\u53ea\u8bfb\u7f13\u51b2\u533a\u5c06\u88ab\u7528\u6765\u521d\u59cb\u5316\u5b57\u8282\u6570\u7ec4\u3002 \u5982\u679c\u662f\u4e00\u4e2a iterable \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5b83\u7684\u5143\u7d20\u7684\u8303\u56f4\u5fc5\u987b\u662f 0 <= x < 256 \u7684\u6574\u6570\uff0c\u5b83\u4f1a\u88ab\u7528\u4f5c\u6570\u7ec4\u7684\u521d\u59cb\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u521b\u5efa\u5927\u5c0f\u4e3a0\u7684\u6570\u7ec4\u3002","title":"class\u00a0bytearray([source[,\u00a0encoding[,\u00a0errors]]])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-bytessource-encoding-errors","text":"\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 bytes \u5bf9\u8c61\uff0c\u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u5305\u542b\u8303\u56f4\u4e3a 0 <= x < 256 \u7684\u6574\u6570\u3002 bytes \u662f bytearray \u7684\u4e0d\u53ef\u53d8\u7248\u672c - \u5b83\u6709\u5176\u4e2d\u4e0d\u6539\u53d8\u5e8f\u5217\u7684\u65b9\u6cd5\u548c\u76f8\u540c\u7684\u7d22\u5f15\u3001\u5207\u7247\u64cd\u4f5c\u3002 \u56e0\u6b64\uff0c\u6784\u9020\u51fd\u6570\u7684\u5b9e\u53c2\u548c bytearray() \u76f8\u540c\u3002","title":"class\u00a0bytes([source[,\u00a0encoding[,\u00a0errors]]])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#callableobject","text":"\u5982\u679c\u53c2\u6570 object \u662f\u53ef\u8c03\u7528\u7684\u5c31\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u5982\u679c\u8fd4\u56de True \uff0c\u8c03\u7528\u4ecd\u53ef\u80fd\u5931\u8d25\uff0c\u4f46\u5982\u679c\u8fd4\u56de False \uff0c\u5219\u8c03\u7528 object \u5c06\u80af\u5b9a\u4e0d\u4f1a\u6210\u529f\u3002 \u8bf7\u6ce8\u610f\u7c7b\u662f\u53ef\u8c03\u7528\u7684\uff08\u8c03\u7528\u7c7b\u5c06\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff09\uff1b\u5982\u679c\u5b9e\u4f8b\u6240\u5c5e\u7684\u7c7b\u6709 __call__() \u5219\u5b83\u5c31\u662f\u53ef\u8c03\u7528\u7684\u3002","title":"callable(object)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#chri","text":"\u8fd4\u56de Unicode \u7801\u4f4d\u4e3a\u6574\u6570 i \u7684\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u3002\u4f8b\u5982\uff0c chr(97) \u8fd4\u56de\u5b57\u7b26\u4e32 'a' \uff0c chr(8364) \u8fd4\u56de\u5b57\u7b26\u4e32 '\u20ac' \u3002\u8fd9\u662f ord() \u7684\u9006\u51fd\u6570\u3002 \u5b9e\u53c2\u7684\u5408\u6cd5\u8303\u56f4\u662f 0 \u5230 1,114,111 \uff0816\u8fdb\u5236\u8868\u793a\u662f 0x10FFFF \uff09\u3002\u5982\u679c i \u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\uff0c\u4f1a\u89e6\u53d1 ValueError \u5f02\u5e38\u3002","title":"chr(i)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#classmethod","text":"\u628a\u4e00\u4e2a\u65b9\u6cd5\u5c01\u88c5\u6210\u7c7b\u65b9\u6cd5\u3002 \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u628a\u7c7b\u81ea\u5df1\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u53c2\uff0c\u5c31\u50cf\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u628a\u5b9e\u4f8b\u81ea\u5df1\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b9e\u53c2\u3002\u8bf7\u7528\u4ee5\u4e0b\u4e60\u60ef\u6765\u58f0\u660e\u7c7b\u65b9\u6cd5\uff1a class C : @classmethod def f ( cls , arg1 , arg2 , ... ): ... @classmethod \u8fd9\u6837\u7684\u5f62\u5f0f\u79f0\u4e3a\u51fd\u6570\u7684 decorator \uff08\u88c5\u9970\u5668\uff09\u3002 \u7c7b\u65b9\u6cd5\u7684\u8c03\u7528\u53ef\u4ee5\u5728\u7c7b\u4e0a\u8fdb\u884c(\u4f8b\u5982 C.f() )\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e0a\u8fdb\u884c(\u4f8b\u5982 C().f() )\u3002\u5176\u6240\u5c5e\u7c7b\u4ee5\u5916\u7684\u7c7b\u5b9e\u4f8b\u4f1a\u88ab\u5ffd\u7565\u3002\u5982\u679c\u7c7b\u65b9\u6cd5\u5728\u5176\u6240\u5c5e\u7c7b\u7684\u6d3e\u751f\u7c7b\u4e0a\u8c03\u7528\uff0c\u5219\u8be5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u4f5c\u4e3a\u9690\u542b\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u88ab\u4f20\u5165\u3002","title":"@classmethod"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-complexreal-imag","text":"\u8fd4\u56de\u503c\u4e3a real + imag*1j \u7684\u590d\u6570\uff0c\u6216\u5c06\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u8f6c\u6362\u4e3a\u590d\u6570\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5f62\u53c2\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u88ab\u89e3\u91ca\u4e3a\u4e00\u4e2a\u590d\u6570\uff0c\u5e76\u4e14\u51fd\u6570\u8c03\u7528\u65f6\u5fc5\u987b\u6ca1\u6709\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u3002\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u4e0d\u80fd\u662f\u5b57\u7b26\u4e32\u3002\u6bcf\u4e2a\u5b9e\u53c2\u90fd\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u6570\u503c\u7c7b\u578b\uff08\u5305\u62ec\u590d\u6570\uff09\u3002\u5982\u679c\u7701\u7565\u4e86 imag \uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a\u96f6\uff0c\u6784\u9020\u51fd\u6570\u4f1a\u50cf int \u548c float \u4e00\u6837\u8fdb\u884c\u6570\u503c\u8f6c\u6362\u3002\u5982\u679c\u4e24\u4e2a\u5b9e\u53c2\u90fd\u7701\u7565\uff0c\u5219\u8fd4\u56de 0j \u3002 \u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a Python \u5bf9\u8c61 x \uff0c complex(x) \u4f1a\u59d4\u6258\u7ed9 x.__complex__() \u3002\u5982\u679c __complex__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __float__() \u3002\u5982\u679c __float__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __index__() \u3002 \u5f53\u4ece\u5b57\u7b26\u4e32\u8f6c\u6362\u65f6\uff0c\u5b57\u7b26\u4e32\u5728 + \u6216 `\u7684\u5468\u56f4\u5fc5\u987b\u4e0d\u80fd\u6709\u7a7a\u683c\u3002\u4f8b\u5982 complex('1+2j') \u662f\u5408\u6cd5\u7684\uff0c\u4f46 complex('1 + 2j') \u4f1a\u89e6\u53d1 ValueError`\u5f02\u5e38\u3002","title":"class\u00a0complex([real[,\u00a0imag]])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#delattrobject-name","text":"setattr() \u76f8\u5173\u7684\u51fd\u6570\u3002\u5b9e\u53c2\u662f\u4e00\u4e2a\u5bf9\u8c61\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u8be5\u5b57\u7b26\u4e32\u5fc5\u987b\u662f\u5bf9\u8c61\u7684\u67d0\u4e2a\u5c5e\u6027\u3002 \u5982\u679c\u5bf9\u8c61\u5141\u8bb8\uff0c\u8be5\u51fd\u6570\u5c06\u5220\u9664\u6307\u5b9a\u7684\u5c5e\u6027\u3002\u4f8b\u5982 delattr(x, 'foobar') \u7b49\u4ef7\u4e8e del x.foobar \u3002","title":"delattr(object,\u00a0name)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#dirobject","text":"\u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u8fd4\u56de\u5f53\u524d\u672c\u5730\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u79f0\u5217\u8868\u3002\u5982\u679c\u6709\u5b9e\u53c2\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u6709\u6548\u5c5e\u6027\u5217\u8868\u3002 \u5982\u679c\u5bf9\u8c61\u6709\u4e00\u4e2a\u540d\u4e3a __dir__() \u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u5c5e\u6027\u5217\u8868\u3002\u8fd9\u5141\u8bb8\u5b9e\u73b0\u81ea\u5b9a\u4e49 __getattr__() \u6216 __getattribute__() \u51fd\u6570\u7684\u5bf9\u8c61\u80fd\u591f\u81ea\u5b9a\u4e49 dir() \u6765\u62a5\u544a\u5b83\u4eec\u7684\u5c5e\u6027\u3002 \u5982\u679c\u5bf9\u8c61\u4e0d\u63d0\u4f9b __dir__() \uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c1d\u8bd5\u4ece\u5bf9\u8c61\u5df2\u5b9a\u4e49\u7684 __dict__ \u5c5e\u6027\u548c\u7c7b\u578b\u5bf9\u8c61\u6536\u96c6\u4fe1\u606f\u3002\u7ed3\u679c\u5217\u8868\u5e76\u4e0d\u603b\u662f\u5b8c\u6574\u7684\uff0c\u5982\u679c\u5bf9\u8c61\u6709\u81ea\u5b9a\u4e49 __getattr__() \uff0c\u90a3\u7ed3\u679c\u53ef\u80fd\u4e0d\u51c6\u786e\u3002 \u9ed8\u8ba4\u7684 dir() \u673a\u5236\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u884c\u4e3a\u4e0d\u540c\uff0c\u5b83\u4f1a\u8bd5\u56fe\u8fd4\u56de\u6700\u76f8\u5173\u800c\u4e0d\u662f\u6700\u5168\u7684\u4fe1\u606f\uff1a \u5982\u679c\u5bf9\u8c61\u662f\u6a21\u5757\u5bf9\u8c61\uff0c\u5219\u5217\u8868\u5305\u542b\u6a21\u5757\u7684\u5c5e\u6027\u540d\u79f0\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u7c7b\u578b\u6216\u7c7b\u5bf9\u8c61\uff0c\u5219\u5217\u8868\u5305\u542b\u5b83\u4eec\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5e76\u4e14\u9012\u5f52\u67e5\u627e\u6240\u6709\u57fa\u7c7b\u7684\u5c5e\u6027\u3002 \u5426\u5219\uff0c\u5217\u8868\u5305\u542b\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5b83\u7684\u7c7b\u5c5e\u6027\u540d\u79f0\uff0c\u5e76\u4e14\u9012\u5f52\u67e5\u627e\u5b83\u7684\u7c7b\u7684\u6240\u6709\u57fa\u7c7b\u7684\u5c5e\u6027\u3002 \u8fd4\u56de\u7684\u5217\u8868\u6309\u5b57\u6bcd\u8868\u6392\u5e8f\u3002 \u56e0\u4e3a dir() \u4e3b\u8981\u662f\u4e3a\u4e86\u4fbf\u4e8e\u5728\u4ea4\u4e92\u5f0f\u65f6\u4f7f\u7528\uff0c\u6240\u4ee5\u5b83\u4f1a\u8bd5\u56fe\u8fd4\u56de\u4eba\u4eec\u611f\u5174\u8da3\u7684\u540d\u5b57\u96c6\u5408\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4fdd\u8bc1\u7ed3\u679c\u7684\u4e25\u683c\u6027\u6216\u4e00\u81f4\u6027\uff0c\u5b83\u5177\u4f53\u7684\u884c\u4e3a\u4e5f\u53ef\u80fd\u5728\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u6539\u53d8\u3002\u4f8b\u5982\uff0c\u5f53\u5b9e\u53c2\u662f\u4e00\u4e2a\u7c7b\u65f6\uff0c metaclass \u7684\u5c5e\u6027\u4e0d\u5305\u542b\u5728\u7ed3\u679c\u5217\u8868\u4e2d\u3002","title":"dir([object])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#divmoda-b","text":"\u5b83\u5c06\u4e24\u4e2a\uff08\u975e\u590d\u6570\uff09\u6570\u5b57\u4f5c\u4e3a\u5b9e\u53c2\uff0c\u5e76\u5728\u6267\u884c\u6574\u6570\u9664\u6cd5\u65f6\u8fd4\u56de\u4e00\u5bf9\u5546\u548c\u4f59\u6570\u3002\u5bf9\u4e8e\u6df7\u5408\u64cd\u4f5c\u6570\u7c7b\u578b\uff0c\u9002\u7528\u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u89c4\u5219\u3002\u5bf9\u4e8e\u6574\u6570\uff0c\u7ed3\u679c\u548c (a // b, a % b) \u4e00\u81f4\u3002\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u7ed3\u679c\u662f (q, a % b) \uff0c q \u901a\u5e38\u662f math.floor(a / b) \u4f46\u53ef\u80fd\u4f1a\u6bd4 1 \u5c0f\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c q * b + a % b \u548c a \u57fa\u672c\u76f8\u7b49\uff1b\u5982\u679c a % b \u975e\u96f6\uff0c\u5b83\u7684\u7b26\u53f7\u548c b \u4e00\u6837\uff0c\u5e76\u4e14 0 <= abs(a % b) < abs(b) \u3002","title":"divmod(a,\u00a0b)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#enumerateiterable-start0","text":"\u8fd4\u56de\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\u3002 iterable \u5fc5\u987b\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u6216 iterator \uff0c\u6216\u5176\u4ed6\u652f\u6301\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002 enumerate() \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u7684 __next__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u4e00\u4e2a\u8ba1\u6570\u503c\uff08\u4ece start \u5f00\u59cb\uff0c\u9ed8\u8ba4\u4e3a 0 \uff09\u548c\u901a\u8fc7\u8fed\u4ee3 iterable \u83b7\u5f97\u7684\u503c\u3002\u7b49\u4ef7\u4e8e\uff1a def enumerate ( sequence , start = 0 ): n = start for elem in sequence : yield n , elem n += 1","title":"enumerate(iterable,\u00a0start=0)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#execobject-globals-locals","text":"\u8fd9\u4e2a\u51fd\u6570\u652f\u6301\u52a8\u6001\u6267\u884c Python \u4ee3\u7801\u3002 object \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u6216\u8005\u4ee3\u7801\u5bf9\u8c61\u3002\u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8be5\u5b57\u7b26\u4e32\u5c06\u88ab\u89e3\u6790\u4e3a\u4e00\u7cfb\u5217 Python \u8bed\u53e5\u5e76\u6267\u884c\uff08\u9664\u975e\u53d1\u751f\u8bed\u6cd5\u9519\u8bef\uff09\u3002 \u5982\u679c\u662f\u4ee3\u7801\u5bf9\u8c61\uff0c\u5b83\u5c06\u88ab\u76f4\u63a5\u6267\u884c\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u88ab\u6267\u884c\u7684\u4ee3\u7801\u90fd\u5e94\u5f53\u662f\u6709\u6548\u7684\u6587\u4ef6\u8f93\u5165\u3002\u8bf7\u6ce8\u610f\u5373\u4f7f\u5728\u4f20\u9012\u7ed9 exec() \u51fd\u6570\u7684\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c nonlocal , yield \u548c return \u8bed\u53e5\u4e5f\u4e0d\u80fd\u5728\u51fd\u6570\u5b9a\u4e49\u4ee5\u5916\u4f7f\u7528\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f None \u3002 \u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u7701\u7565\u4e86\u53ef\u9009\u9879\uff0c\u4ee3\u7801\u5c06\u5728\u5f53\u524d\u4f5c\u7528\u57df\u5185\u6267\u884c\u3002\u5982\u679c\u53ea\u63d0\u4f9b\u4e86 globals \uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u5178\uff08\u4e0d\u80fd\u662f\u5b57\u5178\u7684\u5b50\u7c7b\uff09\uff0c\u8be5\u5b57\u5178\u5c06\u540c\u65f6\u88ab\u7528\u4e8e\u5168\u5c40\u548c\u5c40\u90e8\u53d8\u91cf\u3002\u5982\u679c\u540c\u65f6\u63d0\u4f9b\u4e86 globals \u548c locals \uff0c\u5b83\u4eec\u4f1a\u5206\u522b\u88ab\u7528\u4e8e\u5168\u5c40\u548c\u5c40\u90e8\u53d8\u91cf\u3002\u5982\u679c\u63d0\u4f9b\u4e86 locals \uff0c\u5219\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u6620\u5c04\u5bf9\u8c61\u3002\u8bf7\u8bb0\u4f4f\u5728\u6a21\u5757\u5c42\u7ea7\u4e0a\uff0c globals \u548c locals \u662f\u540c\u4e00\u4e2a\u5b57\u5178\u3002\u5982\u679c exec \u5f97\u5230\u4e24\u4e2a\u5355\u72ec\u5bf9\u8c61\u4f5c\u4e3a globals \u548c locals \uff0c\u5219\u4ee3\u7801\u5c06\u5982\u540c\u5d4c\u5165\u7c7b\u5b9a\u4e49\u7684\u60c5\u51b5\u4e00\u6837\u6267\u884c\u3002 \u5982\u679c globals \u5b57\u5178\u4e0d\u5305\u542b __builtins__ \u952e\u503c\uff0c\u5219\u5c06\u4e3a\u8be5\u952e\u63d2\u5165\u5bf9\u5185\u5efa builtins \u6a21\u5757\u5b57\u5178\u7684\u5f15\u7528\u3002\u56e0\u6b64\uff0c\u5728\u5c06\u6267\u884c\u7684\u4ee3\u7801\u4f20\u9012\u7ed9 exec() \u4e4b\u524d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u81ea\u5df1\u7684 __builtins__ \u5b57\u5178\u63d2\u5165\u5230 globals \u4e2d\u6765\u63a7\u5236\u53ef\u4ee5\u4f7f\u7528\u54ea\u4e9b\u5185\u7f6e\u4ee3\u7801\u3002","title":"exec(object[,\u00a0globals[,\u00a0locals]])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#filterfunction-iterable","text":"\u7528 iterable \u4e2d\u51fd\u6570 function \u8fd4\u56de\u771f\u7684\u90a3\u4e9b\u5143\u7d20\uff0c\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u3002 iterable \u53ef\u4ee5\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e00\u4e2a\u652f\u6301\u8fed\u4ee3\u7684\u5bb9\u5668\uff0c\u6216\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u5982\u679c function \u662f None \uff0c\u5219\u4f1a\u5047\u8bbe\u5b83\u662f\u4e00\u4e2a\u8eab\u4efd\u51fd\u6570\uff0c\u5373 iterable \u4e2d\u6240\u6709\u8fd4\u56de\u5047\u7684\u5143\u7d20\u4f1a\u88ab\u79fb\u9664\u3002 \u8bf7\u6ce8\u610f\uff0c filter(function, iterable) \u76f8\u5f53\u4e8e\u4e00\u4e2a\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff0c\u5f53 function \u4e0d\u662f None \u7684\u65f6\u5019\u4e3a (item for item in iterable if function(item)) \uff1b function \u662f None \u7684\u65f6\u5019\u4e3a (item for item in iterable if item) \u3002","title":"filter(function,\u00a0iterable)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-floatx","text":"\u8fd4\u56de\u4ece\u6570\u5b57\u6216\u5b57\u7b26\u4e32 x \u751f\u6210\u7684\u6d6e\u70b9\u6570\u3002 \u5982\u679c\u5b9e\u53c2\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u5305\u542b\u5341\u8fdb\u5236\u6570\u5b57\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u524d\u9762\u53ef\u4ee5\u6709\u7b26\u53f7\uff0c\u4e4b\u524d\u4e5f\u53ef\u4ee5\u6709\u7a7a\u683c\u3002\u53ef\u9009\u7684\u7b26\u53f7\u6709 '+' \u548c '-' \uff1b '+' \u5bf9\u521b\u5efa\u7684\u503c\u6ca1\u6709\u5f71\u54cd\u3002\u5b9e\u53c2\u4e5f\u53ef\u4ee5\u662f NaN \uff08\u975e\u6570\u5b57\uff09\u3001\u6b63\u8d1f\u65e0\u7a77\u5927\u7684\u5b57\u7b26\u4e32\u3002\u786e\u5207\u5730\u8bf4\uff0c\u9664\u53bb\u9996\u5c3e\u7684\u7a7a\u683c\u540e\uff0c\u8f93\u5165\u5fc5\u987b\u9075\u5faa\u4ee5\u4e0b\u8bed\u6cd5\uff1a sign : := \"+\" | \"-\" infinity : := \"Infinity\" | \"inf\" nan : := \"nan\" numeric_value : := floatnumber | infinity | nan numeric_string : := [ sign ] numeric_value \u8fd9\u91cc\uff0c floatnumber \u662f Python \u6d6e\u70b9\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5b57\u6bcd\u5927\u5c0f\u5199\u90fd\u53ef\u4ee5\uff0c\u4f8b\u5982\uff0c \u201cinf\u201d \u3001 \u201cInf\u201d \u3001 \u201cINFINITY\u201d \u3001 \u201ciNfINity\u201d \u90fd\u53ef\u4ee5\u8868\u793a\u6b63\u65e0\u7a77\u5927\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b9e\u53c2\u662f\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff0c\u5219\u8fd4\u56de\u5177\u6709\u76f8\u540c\u503c\uff08\u5728 Python \u6d6e\u70b9\u7cbe\u5ea6\u8303\u56f4\u5185\uff09\u7684\u6d6e\u70b9\u6570\u3002\u5982\u679c\u5b9e\u53c2\u5728 Python \u6d6e\u70b9\u7cbe\u5ea6\u8303\u56f4\u5916\uff0c\u5219\u4f1a\u89e6\u53d1 OverflowError \u3002 \u5bf9\u4e8e\u4e00\u4e2a\u666e\u901a Python \u5bf9\u8c61 x \uff0c float(x) \u4f1a\u59d4\u6258\u7ed9 x.__float__() \u3002\u5982\u679c __float__() \u672a\u5b9a\u4e49\u5219\u5c06\u56de\u9000\u81f3 __index__() \u3002 \u5982\u679c\u6ca1\u6709\u5b9e\u53c2\uff0c\u5219\u8fd4\u56de 0.0 \u3002","title":"class\u00a0float([x])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#getattrobject-name-default","text":"\u8fd4\u56de\u5bf9\u8c61\u547d\u540d\u5c5e\u6027\u7684\u503c\u3002 name \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u3002\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\u4e4b\u4e00\uff0c\u5219\u8fd4\u56de\u8be5\u5c5e\u6027\u7684\u503c\u3002\u4f8b\u5982\uff0c getattr(x, 'foobar') \u7b49\u540c\u4e8e x.foobar \u3002\u5982\u679c\u6307\u5b9a\u7684\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u4e14\u63d0\u4f9b\u4e86 default \u503c\uff0c\u5219\u8fd4\u56de\u5b83\uff0c\u5426\u5219\u89e6\u53d1 AttributeError \u3002","title":"getattr(object,\u00a0name[,\u00a0default])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#globals","text":"\u8fd4\u56de\u8868\u793a\u5f53\u524d\u5168\u5c40\u7b26\u53f7\u8868\u7684\u5b57\u5178\u3002\u8fd9\u603b\u662f\u5f53\u524d\u6a21\u5757\u7684\u5b57\u5178\uff08\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u662f\u8c03\u7528\u5b83\u7684\u6a21\u5757\uff0c\u800c\u662f\u5b9a\u4e49\u5b83\u7684\u6a21\u5757\uff09\u3002","title":"globals()"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#hasattrobject-name","text":"\u8be5\u5b9e\u53c2\u662f\u4e00\u4e2a\u5bf9\u8c61\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\u4e4b\u4e00\u7684\u540d\u79f0\uff0c\u5219\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002\uff08\u6b64\u529f\u80fd\u662f\u901a\u8fc7\u8c03\u7528 getattr(object, name) \u770b\u662f\u5426\u6709 AttributeError \u5f02\u5e38\u6765\u5b9e\u73b0\u7684\u3002\uff09","title":"hasattr(object,\u00a0name)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#hashobject","text":"\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c\uff08\u5982\u679c\u5b83\u6709\u7684\u8bdd\uff09\u3002\u54c8\u5e0c\u503c\u662f\u6574\u6570\u3002\u5b83\u4eec\u5728\u5b57\u5178\u67e5\u627e\u5143\u7d20\u65f6\u7528\u6765\u5feb\u901f\u6bd4\u8f83\u5b57\u5178\u7684\u952e\u3002\u76f8\u540c\u5927\u5c0f\u7684\u6570\u5b57\u53d8\u91cf\u6709\u76f8\u540c\u7684\u54c8\u5e0c\u503c\uff08\u5373\u4f7f\u5b83\u4eec\u7c7b\u578b\u4e0d\u540c\uff0c\u5982 1 \u548c 1.0 \uff09\u3002 \u5982\u679c\u5bf9\u8c61\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684 __hash__() \u65b9\u6cd5\uff0c\u8bf7\u6ce8\u610f\uff0c hash() \u6839\u636e\u673a\u5668\u7684\u5b57\u957f\u6765\u622a\u65ad\u8fd4\u56de\u503c\u3002","title":"hash(object)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#hexx","text":"\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4ee5 0x \u4e3a\u524d\u7f00\u7684\u5c0f\u5199\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u5982\u679c x \u4e0d\u662f Python int \u5bf9\u8c61\uff0c\u5219\u5fc5\u987b\u5b9a\u4e49\u8fd4\u56de\u6574\u6570\u7684 __index__() \u65b9\u6cd5\u3002","title":"hex(x)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#idobject","text":"\u8fd4\u56de\u5bf9\u8c61\u7684\u201c\u6807\u8bc6\u503c\u201d\u3002\u8be5\u503c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5728\u6b64\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e2d\u4fdd\u8bc1\u662f\u552f\u4e00\u4e14\u6052\u5b9a\u7684\u3002\u4e24\u4e2a\u751f\u547d\u671f\u4e0d\u91cd\u53e0\u7684\u5bf9\u8c61\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684 id() \u503c\u3002","title":"id(object)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-intx-class-intx-base10","text":"\u8fd4\u56de\u4e00\u4e2a\u57fa\u4e8e\u6570\u5b57\u6216\u5b57\u7b26\u4e32 x \u6784\u9020\u7684\u6574\u6570\u5bf9\u8c61\uff0c\u6216\u8005\u5728\u672a\u7ed9\u51fa\u53c2\u6570\u65f6\u8fd4\u56de 0 \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __int__() \uff0c int(x) \u5c06\u8fd4\u56de x.__int__() \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __index__() \uff0c\u5b83\u5c06\u8fd4\u56de x.__index__() \u3002 \u5982\u679c x \u5b9a\u4e49\u4e86 __trunc__() \uff0c\u5b83\u5c06\u8fd4\u56de x.__trunc__() \u3002\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u5b83\u5c06\u5411\u96f6\u820d\u5165\u3002 \u5982\u679c x \u4e0d\u662f\u6570\u5b57\uff0c\u6216\u8005\u6709 base \u53c2\u6570\uff0c x \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u3001 bytes \u3001\u8868\u793a\u8fdb\u5236\u4e3a base \u7684\u6574\u6570\u5b57\u9762\u503c\u7684 bytearray \u5b9e\u4f8b\u3002\u8be5\u6587\u5b57\u524d\u53ef\u4ee5\u6709 + \u6216 `\uff08\u4e2d\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff09\uff0c\u524d\u540e\u53ef\u4ee5\u6709\u7a7a\u683c\u3002\u4e00\u4e2a\u8fdb\u5236\u4e3a n \u7684\u6570\u5b57\u5305\u542b 0 \u5230 n-1 \u7684\u6570\uff0c\u5176\u4e2d a \u5230 z \uff08\u6216 A \u5230 Z \uff09\u8868\u793a 10 \u5230 35 \u3002\u9ed8\u8ba4\u7684 base \u4e3a10 \uff0c\u5141\u8bb8\u7684\u8fdb\u5236\u67090\u30012-36\u30022\u30018\u300116\u8fdb\u5236\u7684\u6570\u5b57\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u7528 0b/0B \u3001 0o/0O \u3001 0x/0X \u524d\u7f00\u6765\u8868\u793a\u3002\u8fdb\u5236\u4e3a 0 \u5c06\u5b89\u7167\u4ee3\u7801\u7684\u5b57\u9762\u91cf\u6765\u7cbe\u786e\u89e3\u91ca\uff0c\u6700\u540e\u7684\u7ed3\u679c\u4f1a\u662f2\u30018\u300110\u300116\u8fdb\u5236\u4e2d\u7684\u4e00\u4e2a\u3002\u6240\u4ee5 int('010', 0) \u662f\u975e\u6cd5\u7684\uff0c\u4f46 int('010') \u548c int('010', 8)`\u662f\u5408\u6cd5\u7684\u3002","title":"class\u00a0int([x])\u00a0class\u00a0int(x,\u00a0base=10)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#isinstanceobject-classinfo","text":"\u5982\u679c\u53c2\u6570 object \u662f\u53c2\u6570 classinfo \u7684\u5b9e\u4f8b\u6216\u8005\u662f\u5176\uff08\u76f4\u63a5\u3001\u95f4\u63a5\u6216\u865a\u62df\uff09\u5b50\u7c7b\u5219\u8fd4\u56de True \u3002\u5982\u679c object \u4e0d\u662f\u7ed9\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u51fd\u6570\u5c06\u603b\u662f\u8fd4\u56de False \u3002\u5982\u679c classinfo \u662f\u7c7b\u578b\u5bf9\u8c61\u5143\u7ec4\uff08\u6216\u7531\u5176\u4ed6\u6b64\u7c7b\u5143\u7ec4\u9012\u5f52\u7ec4\u6210\u7684\u5143\u7ec4\uff09\uff0c\u90a3\u4e48\u5982\u679c object \u662f\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7c7b\u578b\u7684\u5b9e\u4f8b\u5c31\u8fd4\u56de True \u3002\u5982\u679c classinfo \u65e2\u4e0d\u662f\u7c7b\u578b\uff0c\u4e5f\u4e0d\u662f\u7c7b\u578b\u5143\u7ec4\u6216\u7c7b\u578b\u5143\u7ec4\u7684\u5143\u7ec4\uff0c\u5219\u5c06\u5f15\u53d1 TypeError \u5f02\u5e38\u3002","title":"isinstance(object,\u00a0classinfo)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#issubclassclass-classinfo","text":"\u5982\u679c class \u662f classinfo \u7684\uff08\u76f4\u63a5\u3001\u95f4\u63a5\u6216\u865a\u62df\uff09\u5b50\u7c7b\u5219\u8fd4\u56de True \u3002 \u7c7b\u4f1a\u88ab\u89c6\u4f5c\u5176\u81ea\u8eab\u7684\u5b50\u7c7b\u3002 classinfo \u4e5f\u53ef\u4ee5\u662f\u7c7b\u5bf9\u8c61\u7684\u5143\u7ec4\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b classinfo \u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u90fd\u5c06\u88ab\u68c0\u67e5\u3002\u5728\u4efb\u4f55\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u90fd\u5c06\u5f15\u53d1 TypeError \u5f02\u5e38\u3002","title":"issubclass(class,\u00a0classinfo)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#iterobject-sentinel","text":"\u8fd4\u56de\u4e00\u4e2a iterator \u5bf9\u8c61\u3002\u6839\u636e\u662f\u5426\u5b58\u5728\u7b2c\u4e8c\u4e2a\u5b9e\u53c2\uff0c\u7b2c\u4e00\u4e2a\u5b9e\u53c2\u7684\u89e3\u91ca\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\u5982\u679c\u6ca1\u6709\u7b2c\u4e8c\u4e2a\u5b9e\u53c2\uff0c object \u5fc5\u987b\u662f\u652f\u6301\u8fed\u4ee3\u534f\u8bae\uff08\u6709 __iter__() \u65b9\u6cd5\uff09\u7684\u96c6\u5408\u5bf9\u8c61\uff0c\u6216\u5fc5\u987b\u652f\u6301\u5e8f\u5217\u534f\u8bae\uff08\u6709 __getitem__() \u65b9\u6cd5\uff0c\u4e14\u6570\u5b57\u53c2\u6570\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u5b83\u4e0d\u652f\u6301\u8fd9\u4e9b\u534f\u8bae\uff0c\u4f1a\u89e6\u53d1 TypeError \u3002\u5982\u679c\u6709\u7b2c\u4e8c\u4e2a\u5b9e\u53c2 sentinel \uff0c\u90a3\u4e48 object \u5fc5\u987b\u662f\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u751f\u6210\u7684\u8fed\u4ee3\u5668\uff0c\u6bcf\u6b21\u8fed\u4ee3\u8c03\u7528\u5b83\u7684 __next__() \u65b9\u6cd5\u65f6\u90fd\u4f1a\u4e0d\u5e26\u5b9e\u53c2\u5730\u8c03\u7528 object \uff1b\u5982\u679c\u8fd4\u56de\u7684\u7ed3\u679c\u662f sentinel \u5219\u89e6\u53d1 StopIteration \uff0c\u5426\u5219\u8fd4\u56de\u8c03\u7528\u7ed3\u679c\u3002","title":"iter(object[,\u00a0sentinel])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#lens","text":"\u8fd4\u56de\u5bf9\u8c61\u7684\u957f\u5ea6\uff08\u5143\u7d20\u4e2a\u6570\uff09\u3002\u5b9e\u53c2\u53ef\u4ee5\u662f\u5e8f\u5217\uff08\u5982 string \u3001 bytes \u3001 tuple \u3001 list \u6216 range \u7b49\uff09\u6216\u96c6\u5408\uff08\u5982 dictionary \u3001 set \u6216 frozen set \u7b49\uff09\u3002 len \u5bf9\u4e8e\u5927\u4e8e sys.maxsize \u7684\u957f\u5ea6\u5982 range(2 ** 100) \u4f1a\u5f15\u53d1 OverflowError\u3002","title":"len(s)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#locals","text":"\u66f4\u65b0\u5e76\u8fd4\u56de\u8868\u793a\u5f53\u524d\u672c\u5730\u7b26\u53f7\u8868\u7684\u5b57\u5178\u3002\u5728\u51fd\u6570\u4ee3\u7801\u5757\u4f46\u4e0d\u662f\u7c7b\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 locals() \u65f6\u5c06\u8fd4\u56de\u81ea\u7531\u53d8\u91cf\u3002\u8bf7\u6ce8\u610f\u5728\u6a21\u5757\u5c42\u7ea7\u4e0a\uff0c locals() \u548c globals() \u662f\u540c\u4e00\u4e2a\u5b57\u5178\u3002","title":"locals()"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#mapfunction-iterable","text":"\u8fd4\u56de\u4e00\u4e2a\u5c06 function \u5e94\u7528\u4e8e iterable \u4e2d\u6bcf\u4e00\u9879\u5e76\u8f93\u51fa\u5176\u7ed3\u679c\u7684\u8fed\u4ee3\u5668\u3002\u5982\u679c\u4f20\u5165\u4e86\u989d\u5916\u7684 iterable \u53c2\u6570\uff0c function \u5fc5\u987b\u63a5\u53d7\u76f8\u540c\u4e2a\u6570\u7684\u5b9e\u53c2\u5e76\u88ab\u5e94\u7528\u4e8e\u4ece\u6240\u6709\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u5e76\u884c\u83b7\u53d6\u7684\u9879\u3002\u5f53\u6709\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u65f6\uff0c\u6700\u77ed\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8017\u5c3d\u5219\u6574\u4e2a\u8fed\u4ee3\u5c31\u5c06\u7ed3\u675f\u3002","title":"map(function,\u00a0iterable,\u00a0...)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#maxiterable-key-default-maxarg1-arg2-args-key","text":"\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff0c\u6216\u8005\u8fd4\u56de\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5b9e\u53c2\u4e2d\u6700\u5927\u7684\u3002 \u5982\u679c\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u5b83\u5fc5\u987b\u662f\u975e\u7a7a iterable \uff0c\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff1b\u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u4f4d\u7f6e\u53c2\u6570\uff0c\u5219\u8fd4\u56de\u6700\u5927\u7684\u4f4d\u7f6e\u53c2\u6570\u3002 \u6709\u4e24\u4e2a\u53ef\u9009\u53ea\u80fd\u7528\u5173\u952e\u5b57\u7684\u5b9e\u53c2\u3002 key \u5b9e\u53c2\u6307\u5b9a\u6392\u5e8f\u51fd\u6570\u7528\u7684\u53c2\u6570\uff0c\u5982\u4f20\u7ed9 list.sort() \u7684\u3002 default \u5b9e\u53c2\u662f\u5f53\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\u65f6\u8fd4\u56de\u7684\u503c\u3002\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ed9 default \uff0c\u5219\u4f1a\u89e6\u53d1 ValueError \u3002 \u5982\u679c\u6709\u591a\u4e2a\u6700\u5927\u5143\u7d20\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u3002\u8fd9\u548c\u5176\u4ed6\u7a33\u5b9a\u6392\u5e8f\u5de5\u5177\u5982 sorted(iterable, key=keyfunc, reverse=True)[0] \u548c heapq.nlargest(1, iterable, key=keyfunc) \u4fdd\u6301\u4e00\u81f4\u3002","title":"max(iterable,\u00a0*[,\u00a0key,\u00a0default])\u00a0max(arg1,\u00a0arg2,\u00a0*args[,\u00a0key])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#miniterable-key-default-minarg1-arg2-args-key","text":"\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u6216\u8005\u8fd4\u56de\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5b9e\u53c2\u4e2d\u6700\u5c0f\u7684\u3002 \u5982\u679c\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u5b83\u5fc5\u987b\u662f iterable \uff0c\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff1b\u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u4f4d\u7f6e\u53c2\u6570\uff0c\u5219\u8fd4\u56de\u6700\u5c0f\u7684\u4f4d\u7f6e\u53c2\u6570\u3002 \u6709\u4e24\u4e2a\u53ef\u9009\u53ea\u80fd\u7528\u5173\u952e\u5b57\u7684\u5b9e\u53c2\u3002 key \u5b9e\u53c2\u6307\u5b9a\u6392\u5e8f\u51fd\u6570\u7528\u7684\u53c2\u6570\uff0c\u5982\u4f20\u7ed9 list.sort() \u7684\u3002 default \u5b9e\u53c2\u662f\u5f53\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\u65f6\u8fd4\u56de\u7684\u503c\u3002\u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ed9 default \uff0c\u5219\u4f1a\u89e6\u53d1 ValueError \u3002 \u5982\u679c\u6709\u591a\u4e2a\u6700\u5c0f\u5143\u7d20\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u3002\u8fd9\u548c\u5176\u4ed6\u7a33\u5b9a\u6392\u5e8f\u5de5\u5177\u5982 sorted(iterable, key=keyfunc)[0] \u548c heapq.nsmallest(1, iterable, key=keyfunc) \u4fdd\u6301\u4e00\u81f4\u3002","title":"min(iterable,\u00a0*[,\u00a0key,\u00a0default])\u00a0min(arg1,\u00a0arg2,\u00a0*args[,\u00a0key])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#nextiterator-default","text":"\u901a\u8fc7\u8c03\u7528 iterator \u7684 __next__() \u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u5982\u679c\u8fed\u4ee3\u5668\u8017\u5c3d\uff0c\u5219\u8fd4\u56de\u7ed9\u5b9a\u7684 default \uff0c\u5982\u679c\u6ca1\u6709\u9ed8\u8ba4\u503c\u5219\u89e6\u53d1 StopIteration \u3002","title":"next(iterator[,\u00a0default])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-object","text":"\u8fd4\u56de\u4e00\u4e2a\u6ca1\u6709\u7279\u5f81\u7684\u65b0\u5bf9\u8c61\u3002 object \u662f\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\u3002\u5b83\u5177\u6709\u6240\u6709 Python \u7c7b\u5b9e\u4f8b\u7684\u901a\u7528\u65b9\u6cd5\u3002\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u53d7\u4efb\u4f55\u5b9e\u53c2\u3002 \u7531\u4e8e object \u6ca1\u6709 __dict__ \uff0c\u56e0\u6b64\u65e0\u6cd5\u5c06\u4efb\u610f\u5c5e\u6027\u8d4b\u7ed9 object \u7684\u5b9e\u4f8b\u3002","title":"class\u00a0object"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#octx","text":"\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u524d\u7f00\u4e3a 0o \u7684\u516b\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 Python \u8868\u8fbe\u5f0f\u3002\u5982\u679c x \u4e0d\u662f Python \u7684 int \u5bf9\u8c61\uff0c\u90a3\u5b83\u9700\u8981\u5b9a\u4e49 __index__() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002","title":"oct(x)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#openfile-moder-buffering-1-encodingnone-errorsnone-newlinenone-closefdtrue-openernone","text":"\u6253\u5f00 file \u5e76\u8fd4\u56de\u5bf9\u5e94\u7684 file object \u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u80fd\u88ab\u6253\u5f00\uff0c\u5219\u5f15\u53d1 OSError \u3002 file \u662f\u4e00\u4e2a path-like object \uff0c\u8868\u793a\u5c06\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff08\u7edd\u5bf9\u8def\u5f84\u6216\u8005\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u8981\u88ab\u5c01\u88c5\u7684\u6574\u6570\u7c7b\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\uff08\u5982\u679c\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5b83\u4f1a\u968f\u7740\u8fd4\u56de\u7684I/O\u5bf9\u8c61\u5173\u95ed\u800c\u5173\u95ed\uff0c\u9664\u975e closefd \u88ab\u8bbe\u4e3a False \u3002\uff09 mode \u662f\u4e00\u4e2a\u53ef\u9009\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u7684\u6a21\u5f0f\u3002\u9ed8\u8ba4\u503c\u662f 'r' \uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4ee5\u6587\u672c\u6a21\u5f0f\u6253\u5f00\u5e76\u8bfb\u53d6\u3002\u5176\u4ed6\u5e38\u89c1\u6a21\u5f0f\u6709\uff1a\u5199\u5165 'w' \uff08\u622a\u65ad\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff09\uff1b\u6392\u5b83\u6027\u521b\u5efa 'x' \uff1b\u8ffd\u52a0\u5199 'a' \uff08\u5728 \u4e00\u4e9b Unix \u7cfb\u7edf\u4e0a\uff0c\u65e0\u8bba\u5f53\u524d\u7684\u6587\u4ef6\u6307\u9488\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u6240\u6709\u5199\u5165\u90fd\u4f1a\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\uff09\u3002\u5728\u6587\u672c\u6a21\u5f0f\uff0c\u5982\u679c encoding \u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u6839\u636e\u5e73\u53f0\u6765\u51b3\u5b9a\u4f7f\u7528\u7684\u7f16\u7801\uff1a\u4f7f\u7528 locale.getpreferredencoding(False) \u6765\u83b7\u53d6\u672c\u5730\u7f16\u7801\u3002\uff08\u8981\u8bfb\u53d6\u548c\u5199\u5165\u539f\u59cb\u5b57\u8282\uff0c\u8bf7\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u5e76\u4e0d\u8981\u6307\u5b9a encoding \u3002\uff09\u53ef\u7528\u7684\u6a21\u5f0f\u6709\uff1a open()\u53c2\u6570 \u9ed8\u8ba4\u6a21\u5f0f\u4e3a 'r' \uff08\u6253\u5f00\u7528\u4e8e\u8bfb\u53d6\u6587\u672c\uff0c\u4e0e 'rt' \u540c\u4e49\uff09\u3002\u6a21\u5f0f 'w+' \u4e0e 'w+b' \u5c06\u6253\u5f00\u6587\u4ef6\u5e76\u6e05\u7a7a\u5185\u5bb9\u3002\u6a21\u5f0f 'r+' \u4e0e 'r+b' \u5c06\u6253\u5f00\u6587\u4ef6\u5e76\u4e0d\u6e05\u7a7a\u5185\u5bb9\u3002 Python \u533a\u5206\u4e8c\u8fdb\u5236\u548c\u6587\u672cI/O\u3002\u4ee5\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\uff08\u5305\u62ec mode \u53c2\u6570\u4e2d\u7684 'b' \uff09\u8fd4\u56de\u7684\u5185\u5bb9\u4e3a bytes \u5bf9\u8c61\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u89e3\u7801\u3002\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728 mode \u53c2\u6570\u4e2d\u5305\u542b 't' \uff09\u65f6\uff0c\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u4e3a str \uff0c\u9996\u5148\u4f7f\u7528\u6307\u5b9a\u7684 encoding \uff08\u5982\u679c\u7ed9\u5b9a\uff09\u6216\u8005\u4f7f\u7528\u5e73\u53f0\u9ed8\u8ba4\u7684\u7684\u5b57\u8282\u7f16\u7801\u89e3\u7801\u3002 Python\u4e0d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u672c\u6587\u4ef6\u6982\u5ff5;\u6240\u6709\u5904\u7406\u90fd\u7531Python\u672c\u8eab\u5b8c\u6210\uff0c\u56e0\u6b64\u4e0e\u5e73\u53f0\u65e0\u5173\u3002 buffering \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7f13\u51b2\u7b56\u7565\u3002\u4f20\u9012 0 \u4ee5\u5207\u6362\u7f13\u51b2\u5173\u95ed\uff08\u4ec5\u5141\u8bb8\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\uff09\uff0c 1 \u9009\u62e9\u884c\u7f13\u51b2\uff08\u4ec5\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u53ef\u7528\uff09\uff0c\u5e76\u4e14 >1 \u7684\u6574\u6570\u4ee5\u6307\u793a\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fa buffering \u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u7f13\u51b2\u7b56\u7565\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b: \u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u56fa\u5b9a\u5927\u5c0f\u7684\u5757\u8fdb\u884c\u7f13\u51b2\uff1b\u4f7f\u7528\u542f\u53d1\u5f0f\u65b9\u6cd5\u9009\u62e9\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u5c1d\u8bd5\u786e\u5b9a\u5e95\u5c42\u8bbe\u5907\u7684\u201c\u5757\u5927\u5c0f\u201d\u6216\u4f7f\u7528 io.DEFAULT_BUFFER_SIZE \u3002\u5728\u8bb8\u591a\u7cfb\u7edf\u4e0a\uff0c\u7f13\u51b2\u533a\u7684\u957f\u5ea6\u901a\u5e38\u4e3a 4096 \u6216 8192 \u5b57\u8282\u3002 \u201c\u4ea4\u4e92\u5f0f\u201d\u6587\u672c\u6587\u4ef6\uff08 isatty() \u8fd4\u56de True \u7684\u6587\u4ef6\uff09\u4f7f\u7528\u884c\u7f13\u51b2\u3002\u5176\u4ed6\u6587\u672c\u6587\u4ef6\u4f7f\u7528\u4e0a\u8ff0\u7b56\u7565\u7528\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 encoding \u662f\u7528\u4e8e\u89e3\u7801\u6216\u7f16\u7801\u6587\u4ef6\u7684\u7f16\u7801\u7684\u540d\u79f0\u3002\u8fd9\u5e94\u8be5\u53ea\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u4f7f\u7528\u3002\u9ed8\u8ba4\u7f16\u7801\u662f\u4f9d\u8d56\u4e8e\u5e73\u53f0\u7684\uff08\u4e0d\u7ba1 locale.getpreferredencoding() \u8fd4\u56de\u4f55\u503c\uff09\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Python\u652f\u6301\u7684 text encoding \u3002 errors \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5982\u4f55\u5904\u7406\u7f16\u7801\u548c\u89e3\u7801\u9519\u8bef - \u8fd9\u4e0d\u80fd\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\u4f7f\u7528\u3002\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6807\u51c6\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\uff08\u5217\u5728\u9519\u8bef\u5904\u7406\u65b9\u6848\uff09\uff0c\u4f46\u662f\u4f7f\u7528 codecs.register_error() \u6ce8\u518c\u7684\u4efb\u4f55\u9519\u8bef\u5904\u7406\u540d\u79f0\u4e5f\u662f\u6709\u6548\u7684\u3002\u6807\u51c6\u540d\u79f0\u5305\u62ec\uff1a - \u5982\u679c\u5b58\u5728\u7f16\u7801\u9519\u8bef\uff0c 'strict' \u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\u3002\u9ed8\u8ba4\u503c None \u5177\u6709\u76f8\u540c\u7684\u6548\u679c\u3002 - 'ignore' \u5ffd\u7565\u9519\u8bef\u3002\u8bf7\u6ce8\u610f\uff0c\u5ffd\u7565\u7f16\u7801\u9519\u8bef\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931\u3002 - 'replace' \u4f1a\u5c06\u66ff\u6362\u6807\u8bb0\uff08\u4f8b\u5982 '?' \uff09\u63d2\u5165\u6709\u9519\u8bef\u6570\u636e\u7684\u5730\u65b9\u3002 - 'surrogateescape' \u5c06\u8868\u793a\u4efb\u4f55\u4e0d\u6b63\u786e\u7684\u5b57\u8282\u4f5c\u4e3aUnicode\u4e13\u7528\u533a\u4e2d\u7684\u4ee3\u7801\u70b9\uff0c\u8303\u56f4\u4ece U+DC80 \u5230 U+DCFF \u3002\u5f53\u5728\u5199\u5165\u6570\u636e\u65f6\u4f7f\u7528 surrogateescape \u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u4e9b\u79c1\u6709\u4ee3\u7801\u70b9\u5c06\u88ab\u8f6c\u56de\u5230\u76f8\u540c\u7684\u5b57\u8282\u4e2d\u3002\u8fd9\u5bf9\u4e8e\u5904\u7406\u672a\u77e5\u7f16\u7801\u7684\u6587\u4ef6\u5f88\u6709\u7528\u3002 - \u53ea\u6709\u5728\u5199\u5165\u6587\u4ef6\u65f6\u624d\u652f\u6301 'xmlcharrefreplace' \u3002\u7f16\u7801\u4e0d\u652f\u6301\u7684\u5b57\u7b26\u5c06\u66ff\u6362\u4e3a\u76f8\u5e94\u7684XML\u5b57\u7b26\u5f15\u7528 &#nnn; \u3002 - 'backslashreplace' \u7528Python\u7684\u53cd\u5411\u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u683c\u5f0f\u9519\u8bef\u7684\u6570\u636e\u3002 - 'namereplace' \uff08\u4e5f\u53ea\u5728\u7f16\u5199\u65f6\u652f\u6301\uff09\u7528 \\\\N{...} \u8f6c\u4e49\u5e8f\u5217\u66ff\u6362\u4e0d\u652f\u6301\u7684\u5b57\u7b26\u3002 newline \u63a7\u5236 universal newlines \u6a21\u5f0f\u5982\u4f55\u751f\u6548\uff08\u5b83\u4ec5\u9002\u7528\u4e8e\u6587\u672c\u6a21\u5f0f\uff09\u3002\u5b83\u53ef\u4ee5\u662f None \uff0c '' \uff0c '\\\\n' \uff0c '\\\\r' \u548c '\\\\r\\\\n' \u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff1a - \u4ece\u6d41\u4e2d\u8bfb\u53d6\u8f93\u5165\u65f6\uff0c\u5982\u679c newline \u4e3a None \uff0c\u5219\u542f\u7528\u901a\u7528\u6362\u884c\u6a21\u5f0f\u3002\u8f93\u5165\u4e2d\u7684\u884c\u53ef\u4ee5\u4ee5 '\\\\n' \uff0c '\\\\r' \u6216 '\\\\r\\\\n' \u7ed3\u5c3e\uff0c\u8fd9\u4e9b\u884c\u88ab\u7ffb\u8bd1\u6210 '\\\\n' \u5728\u8fd4\u56de\u547c\u53eb\u8005\u4e4b\u524d\u3002\u5982\u679c\u5b83\u662f '' \uff0c\u5219\u542f\u7528\u901a\u7528\u6362\u884c\u6a21\u5f0f\uff0c\u4f46\u884c\u7ed3\u5c3e\u5c06\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u672a\u7ffb\u8bd1\u3002\u5982\u679c\u5b83\u5177\u6709\u4efb\u4f55\u5176\u4ed6\u5408\u6cd5\u503c\uff0c\u5219\u8f93\u5165\u884c\u4ec5\u7531\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7ec8\u6b62\uff0c\u5e76\u4e14\u884c\u7ed3\u5c3e\u5c06\u8fd4\u56de\u7ed9\u672a\u8c03\u7528\u7684\u8c03\u7528\u8005\u3002 - \u5c06\u8f93\u51fa\u5199\u5165\u6d41\u65f6\uff0c\u5982\u679c newline \u4e3a None \uff0c\u5219\u5199\u5165\u7684\u4efb\u4f55 '\\\\n' \u5b57\u7b26\u90fd\u5c06\u8f6c\u6362\u4e3a\u7cfb\u7edf\u9ed8\u8ba4\u884c\u5206\u9694\u7b26 os.linesep \u3002\u5982\u679c newline \u662f '' \u6216 '\\\\n' \uff0c\u5219\u4e0d\u8fdb\u884c\u7ffb\u8bd1\u3002\u5982\u679c newline \u662f\u4efb\u4f55\u5176\u4ed6\u5408\u6cd5\u503c\uff0c\u5219\u5199\u5165\u7684\u4efb\u4f55 '\\\\n' \u5b57\u7b26\u5c06\u88ab\u8f6c\u6362\u4e3a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u3002 \u5982\u679c closefd \u662f False \u5e76\u4e14\u7ed9\u51fa\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u800c\u4e0d\u662f\u6587\u4ef6\u540d\uff0c\u90a3\u4e48\u5f53\u6587\u4ef6\u5173\u95ed\u65f6\uff0c\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4fdd\u6301\u6253\u5f00\u72b6\u6001\u3002\u5982\u679c\u7ed9\u51fa\u6587\u4ef6\u540d\u5219 closefd \u5fc5\u987b\u4e3a True \uff08\u9ed8\u8ba4\u503c\uff09\uff0c\u5426\u5219\u5c06\u5f15\u53d1\u9519\u8bef\u3002 \u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u53ef\u8c03\u7528\u7684 opener \u6765\u4f7f\u7528\u81ea\u5b9a\u4e49\u5f00\u542f\u5668\u3002\u7136\u540e\u901a\u8fc7\u4f7f\u7528\u53c2\u6570\uff08 file \uff0c flags \uff09\u8c03\u7528 opener \u83b7\u5f97\u6587\u4ef6\u5bf9\u8c61\u7684\u57fa\u7840\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 opener \u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u4f7f\u7528 os.open as opener \u65f6\u4e0e\u4f20\u9012 None \u7684\u6548\u679c\u76f8\u540c\uff09\u3002 \u65b0\u521b\u5efa\u7684\u6587\u4ef6\u662f \u4e0d\u53ef\u7ee7\u627f\u7684 \u3002","title":"open(file,\u00a0mode='r',\u00a0buffering=-1,\u00a0encoding=None,\u00a0errors=None,\u00a0newline=None,\u00a0closefd=True,\u00a0opener=None)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#ordc","text":"\u5bf9\u8868\u793a\u5355\u4e2aUnicode\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4ee3\u8868\u5b83Unicode\u7801\u70b9\u7684\u6574\u6570\u3002\u4f8b\u5982 ord('a') \u8fd4\u56de\u6574\u6570 97\uff0c ord('\u20ac') \uff08\u6b27\u5143\u7b26\u53f7\uff09\u8fd4\u56de8364\u3002\u8fd9\u662f chr() \u7684\u9006\u51fd\u6570\u3002","title":"ord(c)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#powbase-exp-mod","text":"\u8fd4\u56de base \u7684 exp \u6b21\u5e42\uff1b\u5982\u679c mod \u5b58\u5728\uff0c\u5219\u8fd4\u56de base \u7684 exp \u6b21\u5e42\u5bf9 mod \u53d6\u4f59\uff08\u6bd4 pow(base, exp) % mod \u66f4\u9ad8\u6548\uff09\u3002\u4e24\u53c2\u6570\u5f62\u5f0f pow(base, exp) \u7b49\u4ef7\u4e8e\u4e58\u65b9\u8fd0\u7b97\u7b26: base**exp \u3002 \u53c2\u6570\u5fc5\u987b\u5177\u6709\u6570\u503c\u7c7b\u578b\u3002\u5bf9\u4e8e\u6df7\u7528\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\uff0c\u5219\u5c06\u5e94\u7528\u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u89c4\u5219\u3002 \u5bf9\u4e8e int \u64cd\u4f5c\u6570\uff0c\u7ed3\u679c\u5177\u6709\u4e0e\u64cd\u4f5c\u6570\u76f8\u540c\u7684\u7c7b\u578b\uff08\u5f3a\u5236\u8f6c\u6362\u540e\uff09\uff0c\u9664\u975e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8d1f\u503c\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u53c2\u6570\u5c06\u88ab\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u5e76\u8f93\u51fa\u6d6e\u70b9\u6570\u7ed3\u679c\u3002\u4f8b\u5982\uff0c 10**2 \u8fd4\u56de 100 \uff0c\u4f46 10**-2 \u8fd4\u56de 0.01 \u3002 \u5bf9\u4e8e int \u64cd\u4f5c\u6570 base \u548c exp \uff0c\u5982\u679c\u7ed9\u51fa mod \uff0c\u5219 mod \u5fc5\u987b\u4e3a\u6574\u6570\u7c7b\u578b\u5e76\u4e14 mod \u5fc5\u987b\u4e0d\u4e3a\u96f6\u3002 \u5982\u679c\u7ed9\u51fa mod \u5e76\u4e14 exp \u4e3a\u8d1f\u503c\uff0c\u5219 base \u5fc5\u987b\u76f8\u5bf9\u4e8e mod \u4e0d\u53ef\u6574\u9664\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u4f1a\u8fd4\u56de pow(inv_base, -exp, mod) \uff0c\u5176\u4e2d inv_base \u4e3a base \u7684\u5012\u6570\u5bf9 mod \u53d6\u4f59\u3002","title":"pow(base,\u00a0exp[,\u00a0mod])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#reprobject","text":"\u8fd4\u56de\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\u7684\u53ef\u6253\u5370\u8868\u793a\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u5bf9\u4e8e\u8bb8\u591a\u7c7b\u578b\u6765\u8bf4\uff0c\u8be5\u51fd\u6570\u4f1a\u5c1d\u8bd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u5c06\u4f1a\u4e0e\u8be5\u5bf9\u8c61\u88ab\u4f20\u9012\u7ed9 eval() \u65f6\u6240\u751f\u6210\u7684\u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u8868\u793a\u5f62\u5f0f\u4f1a\u662f\u4e00\u4e2a\u62ec\u5728\u5c16\u62ec\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u8c61\u7c7b\u578b\u7684\u540d\u79f0\u4e0e\u901a\u5e38\u5305\u62ec\u5bf9\u8c61\u540d\u79f0\u548c\u5730\u5740\u7684\u9644\u52a0\u4fe1\u606f\u3002\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49 __repr__() \u65b9\u6cd5\u6765\u63a7\u5236\u6b64\u51fd\u6570\u4e3a\u5b83\u7684\u5b9e\u4f8b\u6240\u8fd4\u56de\u7684\u5185\u5bb9\u3002","title":"repr(object)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#reversedseq","text":"\u8fd4\u56de\u4e00\u4e2a\u53cd\u5411\u7684 iterator \u3002 seq \u5fc5\u987b\u662f\u4e00\u4e2a\u5177\u6709 __reversed__() \u65b9\u6cd5\u7684\u5bf9\u8c61\u6216\u8005\u662f\u652f\u6301\u8be5\u5e8f\u5217\u534f\u8bae\uff08\u5177\u6709\u4ece 0 \u5f00\u59cb\u7684\u6574\u6570\u7c7b\u578b\u53c2\u6570\u7684 __len__() \u65b9\u6cd5\u548c __getitem__() \u65b9\u6cd5\uff09\u3002","title":"reversed(seq)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#roundnumber-ndigits","text":"\u8fd4\u56de number \u820d\u5165\u5230\u5c0f\u6570\u70b9\u540e ndigits \u4f4d\u7cbe\u5ea6\u7684\u503c\u3002\u5982\u679c ndigits \u88ab\u7701\u7565\u6216\u4e3a None \uff0c\u5219\u8fd4\u56de\u6700\u63a5\u8fd1\u8f93\u5165\u503c\u7684\u6574\u6570\u3002 \u5bf9\u4e8e\u652f\u6301 round() \u7684\u5185\u7f6e\u7c7b\u578b\uff0c\u503c\u4f1a\u88ab\u820d\u5165\u5230\u6700\u63a5\u8fd1\u7684 10 \u7684\u8d1f ndigits \u6b21\u5e42\u7684\u500d\u6570\uff1b\u5982\u679c\u4e0e\u4e24\u4e2a\u500d\u6570\u7684\u8ddd\u79bb\u76f8\u7b49\uff0c\u5219\u9009\u62e9\u5076\u6570 (\u56e0\u6b64\uff0c round(0.5) \u548c round(-0.5) \u5747\u4e3a 0 \u800c round(1.5) \u4e3a 2 )\u3002 \u4efb\u4f55\u6574\u6570\u503c\u90fd\u53ef\u4f5c\u4e3a\u6709\u6548\u7684 ndigits \uff08\u6b63\u6570\u3001\u96f6\u6216\u8d1f\u6570\uff09\u3002 \u5982\u679c ndigits \u88ab\u7701\u7565\u6216\u4e3a None \u5219\u8fd4\u56de\u503c\u5c06\u4e3a\u6574\u6570\u3002\u5426\u5219\u8fd4\u56de\u503c\u4e0e number \u7684\u7c7b\u578b\u76f8\u540c\u3002 \u5bf9\u4e8e\u4e00\u822c\u7684 Python \u5bf9\u8c61 number , round \u5c06\u59d4\u6258\u7ed9 number.__round__ \u3002","title":"round(number[,\u00a0ndigits])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#class-setiterable","text":"\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 set \u5bf9\u8c61\uff0c\u53ef\u4ee5\u9009\u62e9\u5e26\u6709\u4ece iterable \u83b7\u53d6\u7684\u5143\u7d20\u3002 set \u662f\u4e00\u4e2a\u5185\u7f6e\u7c7b\u578b\u3002","title":"class\u00a0set([iterable])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#setattrobject-name-value","text":"\u6b64\u51fd\u6570\u4e0e getattr() \u4e24\u76f8\u5bf9\u5e94\u3002\u5176\u53c2\u6570\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3001\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u4efb\u610f\u503c\u3002\u5b57\u7b26\u4e32\u6307\u5b9a\u4e00\u4e2a\u73b0\u6709\u5c5e\u6027\u6216\u8005\u65b0\u589e\u5c5e\u6027\u3002\u51fd\u6570\u4f1a\u5c06\u503c\u8d4b\u7ed9\u8be5\u5c5e\u6027\uff0c\u53ea\u8981\u5bf9\u8c61\u5141\u8bb8\u8fd9\u79cd\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c setattr(x, 'foobar', 123) \u7b49\u4ef7\u4e8e x.foobar = 123 \u3002","title":"setattr(object,\u00a0name,\u00a0value)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#sortediterable-keynone-reversefalse","text":"\u6839\u636e iterable \u4e2d\u7684\u9879\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5df2\u6392\u5e8f\u5217\u8868\u3002 \u5177\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5b83\u4eec\u90fd\u5fc5\u987b\u6307\u5b9a\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u3002 key \u6307\u5b9a\u5e26\u6709\u5355\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u4ece iterable \u7684\u6bcf\u4e2a\u5143\u7d20\u4e2d\u63d0\u53d6\u7528\u4e8e\u6bd4\u8f83\u7684\u952e (\u4f8b\u5982 key=str.lower )\u3002\u9ed8\u8ba4\u503c\u4e3a None \uff08\u76f4\u63a5\u6bd4\u8f83\u5143\u7d20\uff09\u3002 reverse \u4e3a\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u5982\u679c\u8bbe\u4e3a True \uff0c\u5219\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u5c06\u6309\u53cd\u5411\u987a\u5e8f\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\u3002 \u4f7f\u7528 functools.cmp_to_key() \u53ef\u5c06\u8001\u5f0f\u7684 cmp \u51fd\u6570\u8f6c\u6362\u4e3a key \u51fd\u6570\u3002 \u5185\u7f6e\u7684 sorted() \u786e\u4fdd\u662f\u7a33\u5b9a\u7684\u3002\u5982\u679c\u4e00\u4e2a\u6392\u5e8f\u786e\u4fdd\u4e0d\u4f1a\u6539\u53d8\u6bd4\u8f83\u7ed3\u679c\u76f8\u7b49\u7684\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u5c31\u79f0\u5176\u4e3a\u7a33\u5b9a\u7684 --- \u8fd9\u6709\u5229\u4e8e\u8fdb\u884c\u591a\u91cd\u6392\u5e8f\uff08\u4f8b\u5982\u5148\u6309\u90e8\u95e8\u3001\u518d\u6309\u85aa\u7ea7\u6392\u5e8f\uff09\u3002","title":"sorted(iterable,\u00a0*,\u00a0key=None,\u00a0reverse=False)"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#staticmethod","text":"\u5c06\u65b9\u6cd5\u8f6c\u6362\u4e3a\u9759\u6001\u65b9\u6cd5\u3002 \u9759\u6001\u65b9\u6cd5\u4e0d\u4f1a\u63a5\u6536\u9690\u5f0f\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u8981\u58f0\u660e\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u8bf7\u4f7f\u7528\u6b64\u8bed\u6cd5\uff1a class C : @staticmethod def f ( arg1 , arg2 , ... ): ... @staticmethod \u8fd9\u6837\u7684\u5f62\u5f0f\u79f0\u4e3a\u51fd\u6570\u7684 decorator \uff08\u88c5\u9970\u5668\uff09\u3002 \u9759\u6001\u65b9\u6cd5\u7684\u8c03\u7528\u53ef\u4ee5\u5728\u7c7b\u4e0a\u8fdb\u884c\uff08\u4f8b\u5982 C.f() \uff09 \u4e5f\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e0a\u8fdb\u884c\uff08\u4f8b\u5982 C().f() \uff09\u3002 \u50cf\u6240\u6709\u88c5\u9970\u5668\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u50cf\u5e38\u89c4\u51fd\u6570\u4e00\u6837\u8c03\u7528 staticmethod \uff0c\u5e76\u5bf9\u5176\u7ed3\u679c\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002\u6bd4\u5982\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u4ece\u7c7b\u4e3b\u4f53\u5f15\u7528\u51fd\u6570\u5e76\u4e14\u60a8\u5e0c\u671b\u907f\u514d\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u8bf7\u4f7f\u7528\u6b64\u8bed\u6cd5\uff1a class C : builtin_open = staticmethod ( open )","title":"@staticmethod"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#sumiterable-start0","text":"\u4ece start \u5f00\u59cb\u81ea\u5de6\u5411\u53f3\u5bf9 iterable \u7684\u9879\u6c42\u548c\u5e76\u8fd4\u56de\u603b\u8ba1\u503c\u3002 iterable \u7684\u9879\u901a\u5e38\u4e3a\u6570\u5b57\uff0c\u800c start \u503c\u5219\u4e0d\u5141\u8bb8\u4e3a\u5b57\u7b26\u4e32\u3002 \u5bf9\u67d0\u4e9b\u7528\u4f8b\u6765\u8bf4\uff0c\u5b58\u5728 sum() \u7684\u66f4\u597d\u66ff\u4ee3\u3002\u62fc\u63a5\u5b57\u7b26\u4e32\u5e8f\u5217\u7684\u66f4\u597d\u66f4\u5feb\u65b9\u5f0f\u662f\u8c03\u7528 ''.join(sequence) \u3002\u8981\u4ee5\u6269\u5c55\u7cbe\u5ea6\u5bf9\u6d6e\u70b9\u503c\u6c42\u548c\uff0c\u8bf7\u53c2\u9605 math.fsum() \u3002 \u8981\u62fc\u63a5\u4e00\u7cfb\u5217\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 itertools.chain() \u3002","title":"sum(iterable[,\u00a0start=0])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#varsobject","text":"\u8fd4\u56de\u6a21\u5757\u3001\u7c7b\u3001\u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u5b83\u5177\u6709 __dict__ \u5c5e\u6027\u7684\u5bf9\u8c61\u7684 __dict__ \u5c5e\u6027\u3002 \u6a21\u5757\u548c\u5b9e\u4f8b\u8fd9\u6837\u7684\u5bf9\u8c61\u5177\u6709\u53ef\u66f4\u65b0\u7684 __dict__ \u5c5e\u6027\uff1b\u4f46\u662f\uff0c\u5176\u5b83\u5bf9\u8c61\u7684 __dict__ \u5c5e\u6027\u53ef\u80fd\u4f1a\u8bbe\u4e3a\u9650\u5236\u5199\u5165\uff08\u4f8b\u5982\uff0c\u7c7b\u4f1a\u4f7f\u7528 types.MappingProxyType \u6765\u9632\u6b62\u76f4\u63a5\u66f4\u65b0\u5b57\u5178\uff09\u3002 \u4e0d\u5e26\u53c2\u6570\u65f6\uff0c vars() \u7684\u884c\u4e3a\u7c7b\u4f3c locals() \u3002\u8bf7\u6ce8\u610f\uff0c locals \u5b57\u5178\u4ec5\u5bf9\u4e8e\u8bfb\u53d6\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u5bf9 locals \u5b57\u5178\u7684\u66f4\u65b0\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u4f46\u5b83\u6ca1\u6709 __dict__ \u5c5e\u6027\uff08\u4f8b\u5982\uff0c\u5f53\u5b83\u6240\u5c5e\u7684\u7c7b\u5b9a\u4e49\u4e86 __slots__ \u5c5e\u6027\u65f6\uff09\u5219\u4f1a\u5f15\u53d1 TypeError \u5f02\u5e38\u3002","title":"vars([object])"},{"location":"Programming/01.%20Python/Python%20%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#zipiterables","text":"\u521b\u5efa\u4e00\u4e2a\u805a\u5408\u4e86\u6765\u81ea\u6bcf\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\uff0c\u5176\u4e2d\u7684\u7b2c i \u4e2a\u5143\u7ec4\u5305\u542b\u6765\u81ea\u6bcf\u4e2a\u53c2\u6570\u5e8f\u5217\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u7b2c i \u4e2a\u5143\u7d20\u3002\u5f53\u6240\u8f93\u5165\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6700\u77ed\u7684\u4e00\u4e2a\u88ab\u8017\u5c3d\u65f6\uff0c\u8fed\u4ee3\u5668\u5c06\u505c\u6b62\u8fed\u4ee3\u3002\u5f53\u53ea\u6709\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u53c2\u6570\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u5355\u5143\u7ec4\u7684\u8fed\u4ee3\u5668\u3002\u4e0d\u5e26\u53c2\u6570\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u8fed\u4ee3\u5668\u3002\u76f8\u5f53\u4e8e\uff1a def zip ( * iterables ): # zip('ABCD', 'xy') --> Ax By sentinel = object () iterators = [ iter ( it ) for it in iterables ] while iterators : result = [] for it in iterators : elem = next ( it , sentinel ) if elem is sentinel : return result . append ( elem ) yield tuple ( result ) \u51fd\u6570\u4f1a\u4fdd\u8bc1\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6309\u4ece\u5de6\u81f3\u53f3\u7684\u987a\u5e8f\u88ab\u6c42\u503c\u3002\u4f7f\u5f97\u53ef\u4ee5\u901a\u8fc7 zip(*[iter(s)]*n) \u8fd9\u6837\u7684\u60ef\u7528\u5f62\u5f0f\u5c06\u4e00\u7cfb\u5217\u6570\u636e\u805a\u7c7b\u4e3a\u957f\u5ea6\u4e3a n \u7684\u5206\u7ec4\u3002\u8fd9\u5c06\u91cd\u590d\u540c\u6837\u7684\u8fed\u4ee3\u5668 n \u6b21\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u8f93\u51fa\u7684\u5143\u7ec4\u5177\u6709\u7b2c n \u6b21\u8c03\u7528\u8be5\u8fed\u4ee3\u5668\u7684\u7ed3\u679c\u3002\u5b83\u7684\u4f5c\u7528\u6548\u679c\u5c31\u662f\u5c06\u8f93\u5165\u62c6\u5206\u4e3a\u957f\u5ea6\u4e3a n \u7684\u6570\u636e\u5757\u3002 \u5f53\u4f60\u4e0d\u7528\u5173\u5fc3\u8f83\u957f\u53ef\u8fed\u4ee3\u5bf9\u8c61\u672b\u5c3e\u4e0d\u5339\u914d\u7684\u503c\u65f6\uff0c\u5219 zip() \u53ea\u987b\u4f7f\u7528\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u8f93\u5165\u5373\u53ef\u3002\u5982\u679c\u90a3\u4e9b\u503c\u5f88\u91cd\u8981\uff0c\u5219\u5e94\u6539\u7528 itertools.zip_longest() \u3002 zip() \u4e0e``\u8fd0\u7b97\u7b26\u76f8\u7ed3\u5408\u53ef\u4ee5\u7528\u6765\u62c6\u89e3\u4e00\u4e2a\u5217\u8868\uff1a x2 , y2 = zip ( * zip ( x , y ))","title":"zip(*iterables)"},{"location":"Programming/01.%20Python/Python%20%E5%AE%89%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97/","text":"\u4f7f\u7528 pip \u5b89\u88c5\u81ea\u5df1\u7684\u6a21\u5757 \u672c\u6587\u6863\u8bb0\u5f55\u4f7f\u7528 pip \u5b89\u88c5\u81ea\u5df1\u7684\u6a21\u5757\u65f6\u8e29\u8fc7\u7684\u5751\u3002 \u8fd9\u91cc\u7684\u5b89\u88c5\u6307\u7684\u662f\u4f7f\u7528\u672c\u5730\u6e90\u6587\u4ef6\u8fdb\u884c\u5b89\u88c5\uff0c\u5e76\u4e0d\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\u63d0\u4f9b\u7ed9\u4ed6\u4eba\u4f7f\u7528\u3002 pip \u5b89\u88c5 \\package |____ BinaryTree |____ |____ `__init__.py` |____ |____ `BinaryNode.py` |____ |____ `BinaryTreeImpl.py` |____ `setup.py` \u76ee\u5f55\u7ed3\u6784\u5982\u4e0a\u6240\u793a\uff0cBinaryTree \u76ee\u5f55\u5305\u542b\u4e86\u5305\u7684\u6240\u6709\u6e90\u6587\u4ef6\uff0c setup.py \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff08\u9700\u8981\u5148\u5b89\u88c5 setuptools \u5305\uff09\uff1a #!/usr/bin/env python import setuptools import os os . chdir ( 'D: \\\\ working \\\\ Python_work \\\\ learning' ) print ( os . getcwd ()) setuptools . setup ( name = 'BinaryTree' , version = '0.0.1' , author = \"Xingwei Liang\" , author_email = 'xingwei.liang@foxmail.com' , description = 'binary tree module' , packages = setuptools . find_packages (), include_package_data = True ) \u5728 setup.py \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6253\u5f00 cmd \u6216\u8005 PowerShell ,\u6267\u884c pip install . \u6216\u8005 python setup.py install \u547d\u4ee4\u5373\u53ef\u5c06 BinaryTree \u5305\u5b89\u88c5\u5230 Python \u7684\u76ee\u5f55\u4e0b\uff08\u4f4d\u4e8e \\\\lib\\\\site-packages \uff09\u3002 \u6210\u529f\u5b89\u88c5\u540e\u8be5\u76ee\u5f55\u4e0b\u5e94\u6709\u4e24\u4e2a\u76ee\u5f55\uff1a BinaryTree \u548c BinaryTree-vesion.dist-info \u3002 \u9047\u5230\u7684\u95ee\u9898 \u6267\u884c\u5b89\u88c5\u547d\u4ee4\u540e\uff0c site-packages \u76ee\u5f55\u4e0b\u53ea\u6709\u4e00\u4e2a BinaryTree-vesion.dist-info \u76ee\u5f55\uff0c\u6ca1\u6709 BinaryTree \u76ee\u5f55\u3002 \u89e3\u51b3\u95ee\u9898 pip list \u547d\u4ee4\u53ef\u67e5\u770b\u901a\u8fc7 pip \u5b89\u88c5\u7684\u5305\uff1b pip show -f package_name \u547d\u4ee4\u53ef\u67e5\u770b\u5305\u4e2d\u5305\u542b\u7684\u6587\u4ef6\uff0c\u901a\u8fc7\u6b64\u547d\u4ee4\u53d1\u73b0\u5305\u4e2d\u5e76\u672a\u5305\u542b\u4efb\u4f55 .py \u6587\u4ef6\uff0c\u53ef\u77e5\u5b89\u88c5\u65f6\u6ca1\u6709\u6b63\u786e\u5b9a\u4f4d\u6e90\u7801\u76ee\u5f55\uff0c\u4fee\u6b63 setup.py \u4e2d\u7684 packages \u53c2\u6570\u5373\u53ef\uff1b pip install . -vvv \u547d\u4ee4\u53ef\u4ee5\u4f1a\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\uff0c\u91cd\u70b9\u5173\u6ce8\u5b89\u88c5\u65f6\u6dfb\u52a0\u4e86\u90a3\u4e9b\u6587\u4ef6\uff08\u5173\u952e\u8bcd adding \uff09\u3002 \u4ee5\u4e0a\u89e3\u51b3\u65b9\u6848\u53c2\u8003\u6765\u6e90\u4e8e https://www.cnpython.com/qa/86415 \u3002 \u4e3b\u8981\u95ee\u9898\u8fd8\u662f setup.py \u6587\u4ef6\u5185\u5bb9\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a https://packaging.python.org/tutorials/packaging-projects/ \u3002 \u8fd9\u4e2a\u529f\u80fd\u5e94\u8be5\u5f88\u5c11\u7528\u5230\uff0c\u5c31\u4e0d\u591a\u505a\u7814\u7a76\u4e86\u3002","title":"\u4f7f\u7528`pip`\u5b89\u88c5\u81ea\u5df1\u7684\u6a21\u5757"},{"location":"Programming/01.%20Python/Python%20%E5%AE%89%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97/#pip","text":"\u672c\u6587\u6863\u8bb0\u5f55\u4f7f\u7528 pip \u5b89\u88c5\u81ea\u5df1\u7684\u6a21\u5757\u65f6\u8e29\u8fc7\u7684\u5751\u3002 \u8fd9\u91cc\u7684\u5b89\u88c5\u6307\u7684\u662f\u4f7f\u7528\u672c\u5730\u6e90\u6587\u4ef6\u8fdb\u884c\u5b89\u88c5\uff0c\u5e76\u4e0d\u53d1\u5e03\u5230\u7f51\u7edc\u4e0a\u63d0\u4f9b\u7ed9\u4ed6\u4eba\u4f7f\u7528\u3002","title":"\u4f7f\u7528pip\u5b89\u88c5\u81ea\u5df1\u7684\u6a21\u5757"},{"location":"Programming/01.%20Python/Python%20%E5%AE%89%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97/#pip_1","text":"\\package |____ BinaryTree |____ |____ `__init__.py` |____ |____ `BinaryNode.py` |____ |____ `BinaryTreeImpl.py` |____ `setup.py` \u76ee\u5f55\u7ed3\u6784\u5982\u4e0a\u6240\u793a\uff0cBinaryTree \u76ee\u5f55\u5305\u542b\u4e86\u5305\u7684\u6240\u6709\u6e90\u6587\u4ef6\uff0c setup.py \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff08\u9700\u8981\u5148\u5b89\u88c5 setuptools \u5305\uff09\uff1a #!/usr/bin/env python import setuptools import os os . chdir ( 'D: \\\\ working \\\\ Python_work \\\\ learning' ) print ( os . getcwd ()) setuptools . setup ( name = 'BinaryTree' , version = '0.0.1' , author = \"Xingwei Liang\" , author_email = 'xingwei.liang@foxmail.com' , description = 'binary tree module' , packages = setuptools . find_packages (), include_package_data = True ) \u5728 setup.py \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6253\u5f00 cmd \u6216\u8005 PowerShell ,\u6267\u884c pip install . \u6216\u8005 python setup.py install \u547d\u4ee4\u5373\u53ef\u5c06 BinaryTree \u5305\u5b89\u88c5\u5230 Python \u7684\u76ee\u5f55\u4e0b\uff08\u4f4d\u4e8e \\\\lib\\\\site-packages \uff09\u3002 \u6210\u529f\u5b89\u88c5\u540e\u8be5\u76ee\u5f55\u4e0b\u5e94\u6709\u4e24\u4e2a\u76ee\u5f55\uff1a BinaryTree \u548c BinaryTree-vesion.dist-info \u3002","title":"pip\u5b89\u88c5"},{"location":"Programming/01.%20Python/Python%20%E5%AE%89%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97/#_1","text":"\u6267\u884c\u5b89\u88c5\u547d\u4ee4\u540e\uff0c site-packages \u76ee\u5f55\u4e0b\u53ea\u6709\u4e00\u4e2a BinaryTree-vesion.dist-info \u76ee\u5f55\uff0c\u6ca1\u6709 BinaryTree \u76ee\u5f55\u3002","title":"\u9047\u5230\u7684\u95ee\u9898"},{"location":"Programming/01.%20Python/Python%20%E5%AE%89%E8%A3%85%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97/#_2","text":"pip list \u547d\u4ee4\u53ef\u67e5\u770b\u901a\u8fc7 pip \u5b89\u88c5\u7684\u5305\uff1b pip show -f package_name \u547d\u4ee4\u53ef\u67e5\u770b\u5305\u4e2d\u5305\u542b\u7684\u6587\u4ef6\uff0c\u901a\u8fc7\u6b64\u547d\u4ee4\u53d1\u73b0\u5305\u4e2d\u5e76\u672a\u5305\u542b\u4efb\u4f55 .py \u6587\u4ef6\uff0c\u53ef\u77e5\u5b89\u88c5\u65f6\u6ca1\u6709\u6b63\u786e\u5b9a\u4f4d\u6e90\u7801\u76ee\u5f55\uff0c\u4fee\u6b63 setup.py \u4e2d\u7684 packages \u53c2\u6570\u5373\u53ef\uff1b pip install . -vvv \u547d\u4ee4\u53ef\u4ee5\u4f1a\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\uff0c\u91cd\u70b9\u5173\u6ce8\u5b89\u88c5\u65f6\u6dfb\u52a0\u4e86\u90a3\u4e9b\u6587\u4ef6\uff08\u5173\u952e\u8bcd adding \uff09\u3002 \u4ee5\u4e0a\u89e3\u51b3\u65b9\u6848\u53c2\u8003\u6765\u6e90\u4e8e https://www.cnpython.com/qa/86415 \u3002 \u4e3b\u8981\u95ee\u9898\u8fd8\u662f setup.py \u6587\u4ef6\u5185\u5bb9\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a https://packaging.python.org/tutorials/packaging-projects/ \u3002 \u8fd9\u4e2a\u529f\u80fd\u5e94\u8be5\u5f88\u5c11\u7528\u5230\uff0c\u5c31\u4e0d\u591a\u505a\u7814\u7a76\u4e86\u3002","title":"\u89e3\u51b3\u95ee\u9898"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/","text":"Python \u4e4b\u6240\u4ee5\u5f3a\u5927\uff0c\u9664\u4e86\u8bed\u8a00\u672c\u8eab\u7684\u7279\u6027\u5916\uff0c\u66f4\u91cd\u8981\u7684\u662f\u62e5\u6709\u65e0\u6240\u4e0d\u53ca\u7684\u7b2c\u4e09\u65b9\u5e93\u3002\u5f3a\u5927\u7684\u8f6f\u4ef6\u5e93\uff0c\u8ba9\u5f00\u53d1\u8005\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u4e1a\u52a1\u4e0a\uff0c\u800c\u907f\u514d\u91cd\u590d\u9020\u8f6e\u5b50\u7684\u6d6a\u8d39\u3002\u4f46\u4f17\u591a\u7684\u8f6f\u4ef6\u5e93\uff0c\u5f62\u6210\u4e86\u590d\u6742\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u52a0\u4e0a Python2 \u548c Python3 \u65f7\u65e5\u6301\u4e45\u4e4b\u4e89\uff0c\u5bf9\u91c7\u7528 Python \u5f00\u53d1\u7684\u9879\u76ee\u9020\u6210\u4e86\u4e0d\u5c11\u56f0\u6270\uff0c\u6240\u4ee5 Python \u5efa\u8bae\uff0c\u901a\u8fc7\u865a\u62df\u73af\u5883\u5de5\u5177\u4e3a\u9879\u76ee\u521b\u5efa\u7eaf\u51c0\u7684\u4f9d\u8d56\u73af\u5883\uff0c\u4eca\u5929\u6211\u4eec\u5c31\u6765\u4e86\u89e3\u4e0b Python \u865a\u62df\u73af\u5883\u3002 \u4e00\u4e9b\u6982\u5ff5 Python \u865a\u62df\u73af\u5883\uff0c\u6d89\u53ca\u5230\u5f88\u591a\u6982\u5ff5\u548c\u5de5\u5177\uff0c\u4f1a\u5bf9\u4f7f\u7528\u9020\u6210\u56f0\u6270\u548c\u969c\u788d\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e9b\u6982\u5ff5\u548c\u4e0e\u4e4b\u76f8\u5173\u7684\u5de5\u5177\u3002 Python \u7248\u672c Python \u7248\u672c\u6307\u7684\u662f Python \u89e3\u6790\u5668\u672c\u8eab\u7684\u7248\u672c\u3002\u7531\u4e8e Python3 \u4e0d\u80fd\u4e0e Python2 \u517c\u5bb9\uff0c\u800c\u4e14\u4e24\u5927\u9635\u8425\u4e4b\u4e89\u6301\u7eed\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u5bfc\u81f4\u4e00\u4e9b\u8f6f\u4ef6\u5e93\u9700\u8981\u8bbe\u914d\u4e24\u79cd\u7248\u672c\u7684 Python\uff0c\u540c\u65f6\u5f00\u53d1\u8005\u53ef\u80fd\u9700\u8981\u5728\u4e00\u4e2a\u73af\u5883\u4e2d\uff0c\u90e8\u7f72\u4e0d\u540c\u7248\u672c\u7684 Python\uff0c\u5bf9\u5f00\u53d1\u548c\u7ef4\u62a4\u9020\u6210\u4e86\u9ebb\u70e6\u3002\u56e0\u6b64\u51fa\u73b0\u4e86\u7248\u672c\u7ba1\u7406\u5668 Pyenv\uff0c\u7c7b\u4f3c\u4e8e nodejs \u7684 nvm\uff0c\u53ef\u4ee5\u521b\u5efa\u51fa\u76f8\u4e92\u9694\u79bb\u7684 Python \u73af\u5883\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u7684\u5207\u6362\u73af\u5883\u4e2d\u7684 Python \u7248\u672c\uff0c\u4f46\u548c Python \u865a\u62df\u73af\u5883\u5173\u7cfb\u4e0d\u5927\u3002 Python \u5305\u5e93 \u5305\u5e93\u6216\u8005\u53eb\u8f6f\u4ef6\u6e90\u662f Python \u7b2c\u4e09\u65b9\u8f6f\u4ef6\u7684\u5e93\u7684\u96c6\u5408\uff0c\u6216\u8005\u5e02\u573a\uff0c\u53ef\u4ee5\u53d1\u5e03\u3001\u4e0b\u8f7d\u548c\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u5176\u4e2d pypi (Python Package Index) https://pypi.org/ \u662f\u5b98\u65b9\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305\u5e93\uff0c\u57fa\u4e8e\u5176\u4e0a\u7684 pip \u5de5\u5177\u5c31\u662f\u4ece\u8fd9\u91cc\u67e5\u627e\u3001\u4e0b\u8f7d\u5b89\u88c5\u8f6f\u4ef6\u5305\u7684\u3002\u4e3a\u4e86\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6\uff0c\u4e16\u754c\u4e0a\u6709\u5f88\u591a Pypi \u7684\u955c\u50cf\u670d\u52a1\u5668\uff0c\u5728\u56fd\u5185\u4e5f\u6709\u591a\u4e2a\u8f6f\u4ef6\u6e90\uff0c\u4f8b\u5982\u963f\u91cc\u7684\u8f6f\u4ef6\u6e90\u662f\uff1ahttp://mirrors.aliyun.com/pypi/simple/\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u8f6f\u4ef6\u6e90\uff0c\u5982\u9488\u5bf9\u79d1\u5b66\u8ba1\u7b97\u7684 anaconda \u7684\u8f6f\u4ef6\u6e90 https://repo.anaconda.com/\u3002 Python \u5305\u7ba1\u7406\u5668 \u8f6f\u4ef6\u5305\u6e90\u4e2d\u7684\u8f6f\u4ef6\u5305\u6570\u91cf\u5de8\u5927\uff0c\u7248\u672c\u591a\u6837\uff0c\u6240\u4ee5\u9700\u8981\u501f\u52a9\u4e8e\u8f6f\u4ef6\u6e90\u7ba1\u7406\u5de5\u5177\uff0c\u4f8b\u5982 pip\u3001conda\u3001Pipenv\u3001Poetry \u7b49\u3002 - pip \u662f\u6700\u5e38\u7528\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u901a\u8fc7 pip install <packagename> \u547d\u4ee4\u683c\u5f0f\u6765\u5b89\u88c5\u8f6f\u4ef6\u5305\uff0c\u4f7f\u7528\u7684\u662f pypi \u8f6f\u4ef6\u5305\u6e90\u3002 - conda \u591a\u7528\u4f5c\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u529f\u80fd\u4e30\u5bcc\u4e14\u5f3a\u5927\uff0c\u4f7f\u7528\u7684\u8f6f\u4ef6\u5305\u6e90\u662f Anaconda repository \u548c Anaconda Cloud\uff0cconda \u4e0d\u4ec5\u652f\u6301 Python \u8f6f\u4ef6\u5305\uff0c\u8fd8\u53ef\u4ee5\u5b89\u88c5 C\u3001C++ \u3001R \u4ee5\u53ca\u5176\u4ed6\u8bed\u8a00\u7684\u4e8c\u5b9a\u5236\u8f6f\u4ef6\u5305\u3002\u9664\u4e86\u8f6f\u4ef6\u5305\u7ba1\u7406\u5916\uff0c\u8fd8\u80fd\u63d0\u4f9b\u76f8\u4e92\u9694\u79bb\u7684\u8f6f\u4ef6\u73af\u5883\u3002 - Pipenv \u662f Kenneth Reitz \u57282017\u5e741\u6708\u53d1\u5e03\u7684Python\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u73b0\u5728\u7531PyPA\u7ef4\u62a4\u3002Pipenv \u4f1a\u81ea\u52a8\u5e2e\u4f60\u7ba1\u7406\u865a\u62df\u73af\u5883\u548c\u4f9d\u8d56\u6587\u4ef6\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u548c\u9009\u9879\u6765\u5e2e\u52a9\u4f60\u5b9e\u73b0\u5404\u79cd\u4f9d\u8d56\u548c\u73af\u5883\u7ba1\u7406\u76f8\u5173\u7684\u64cd\u4f5c\u3002 - Poetry \u548c Pipenv \u7c7b\u4f3c\uff0c\u662f\u4e00\u4e2a Python \u865a\u62df\u73af\u5883\u548c\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u53e6\u5916\u5b83\u8fd8\u63d0\u4f9b\u4e86\u5305\u7ba1\u7406\u529f\u80fd\uff0c\u6bd4\u5982\u6253\u5305\u548c\u53d1\u5e03\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u662f Pipenv \u548c Flit \u8fd9\u4e9b\u5de5\u5177\u7684\u8d85\u96c6\u3002\u5b83\u53ef\u4ee5\u8ba9\u4f60\u7528 Poetry \u6765\u540c\u65f6\u7ba1\u7406 Python \u5e93\u548c Python \u7a0b\u5e8f\u3002 \u5f88\u591a\u5305\u7ba1\u7406\u5de5\u5177\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u5305\u7ba1\u7406\u529f\u80fd\uff0c\u8fd8\u63d0\u4f9b\u4e86\u865a\u62df\u73af\u5883\u6784\u5efa\uff0c\u7a0b\u5e8f\u7ba1\u7406\u7684\u7b49\u529f\u80fd\u3002 Python \u865a\u62df\u73af\u5883 Python \u5e94\u7528\u7ecf\u5e38\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u5305\u7b2c\u4e09\u65b9\u5305\u6216\u8005\u6a21\u5757\uff0c\u6709\u65f6\u9700\u8981\u4f9d\u8d56\u7279\u5b9a\u7684\u5305\u6216\u8005\u5e93\u7684\u7248\u672c\uff0c\u6240\u4ee5\u4e0d\u80fd\u6709\u4e00\u4e2a\u80fd\u9002\u5e94\u6240\u6709 Python \u5e94\u7528\u7684\u8f6f\u4ef6\u73af\u5883\uff0c\u5f88\u591a\u65f6\u5019\u4e0d\u540c\u7684 Python \u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7248\u672c\u662f\u51b2\u7a81\u7684\uff0c\u6ee1\u8db3\u4e86\u5176\u4e2d\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u5219\u65e0\u6cd5\u8fd0\u884c\uff0c\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f\u865a\u62df\u73af\u5883\u3002\u865a\u62df\u73af\u5883\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u7279\u5b9a Python \u89e3\u6790\u5668\u4ee5\u53ca\u4e00\u4e9b\u8f6f\u4ef6\u5305\u7684\u81ea\u5305\u542b\u76ee\u5f55\uff0c\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u4f9d\u8d56\u51b2\u7a81\u95ee\u9898\uff0c\u800c\u4e14\u865a\u62df\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5b89\u88c5\u5e94\u7528\u76f8\u5173\u7684\u5305\u6216\u8005\u6a21\u5757\uff0c\u53ef\u4ee5\u7ed9\u90e8\u7f72\u63d0\u4f9b\u4fbf\u5229\u3002 \u6784\u5efa\u865a\u62df\u73af\u5883 \u539f\u7406 \u865a\u62df\u73af\u5883\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u6280\u672f\uff0c \u4e3b\u8981\u662f\u5229\u7528\u4e86\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u73af\u5883\u53d8\u91cf\u4ee5\u53ca\u8fdb\u7a0b\u95f4\u73af\u5883\u9694\u79bb\u7684\u7279\u6027 \u3002 \u64cd\u4f5c\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u4fe1\u606f\u548c\u505a\u4fe1\u606f\u4ea4\u6362\u4ecb\u8d28\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u6307\u5b9a\u73af\u5883\u53d8\u91cf\uff0c\u5176\u4e2d PATH \u662f\u5f88\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf\uff0c\u7528\u4e8e\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u63d0\u4f9b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u4f8b\u5982\u5199\u4e00\u4e2a\u7a0b\u5e8f a.exe\uff0c\u5b58\u653e\u5728 D:\\MyProgram \u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c a.exe \uff0c\u4f1a\u5f97\u5230\u63d0\u793a\u201c \u65e0\u6cd5\u627e\u5230\u7a0b\u5e8f a.exe\u201d\uff0c\u4e3a\u4e86\u8ba9\u7cfb\u7edf\u627e\u5230\uff0c\u53ef\u4ee5\u5c06 D:\\MyProgram \u8def\u5f84\u52a0\u5165\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5f53\u8f93\u5165 a.exe \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u4f1a\u4ece PATH \u6240\u63d0\u4f9b\u7684\u8def\u5f84\u4e2d\u9010\u4e2a\u67e5\u627e\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u627e\u5230\u4e86\u3002Linux \u548c MacOS \u5177\u6709\u76f8\u4f3c\u7684\u7279\u6027\uff0c\u751a\u81f3\u6bd4 Windows \u7684\u529f\u80fd\u66f4\u4e30\u5bcc\u3002 Python \u865a\u62df\u73af\u5883\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u7279\u6027\u6784\u5efa\u7684\uff0c\u5728\u6fc0\u6d3b\u865a\u62df\u73af\u5883\u4e4b\u65f6\uff0c\u6fc0\u6d3b\u811a\u672c\u4f1a\u5c06\u5f53\u524d\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684 PATH \u4fee\u6539\u4e3a\u865a\u62df\u73af\u5883\u7684\uff0c\u8fd9\u6837\u6267\u884c\u547d\u4ee4\u5c31\u4f1a\u5728\u88ab\u4fee\u6539\u7684 PATH \u4e2d\u67e5\u627e\uff0c\u4ece\u800c\u907f\u514d\u4e86\u539f\u672c PATH \u53ef\u4ee5\u627e\u5230\u7684\u547d\u4ee4\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86 Python \u73af\u5883\u7684\u9694\u79bb\u3002 venv \u6a21\u5757 Python3.3 \u4e4b\u540e\uff0c\u53ef\u4ee5\u7528\u6a21\u5757 venv \u4ee3\u66ff virtualenv \u5de5\u5177\uff0c\u597d\u5904\u662f\u4e0d\u7528\u5355\u72ec\u5b89\u88c5\uff08\u5b9e\u6d4b Ubuntu \u9700\u8981\u5b89\u88c5 python-venv\uff09\uff0c3.3 \u53ca\u4e4b\u540e\u7684\u7248\u672c\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u597d\u7684 Python \u6765\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a python -m venv myvenv \u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a myvenv \u7684\u865a\u62df\u73af\u5883\u3002 venv \u6709\u4e9b\u53c2\u6570\uff0c\u4e0d\u8fc7\u76f8\u6bd4 virtualenv \u5c11\u4e86\u4e9b\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u51e0\u4e2a\uff1a - --without-pip : \u4e0d\u9700\u8981\u5b89\u88c5 pip\uff0c\u9ed8\u8ba4\u4e3a\u5b89\u88c5\u3002 - --clear \uff1a\u5982\u679c\u521b\u5efa\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u5df2\u7ecf\u6709\u4e86\u5176\u4ed6\u865a\u62df\u73af\u5883\uff0c\u6e05\u9664\u91cd\u5efa\u3002 \u56e0\u4e3a venv \u662f\u4f9d\u9644\u4e8e\u4e00\u4e2a Python \u89e3\u6790\u5668\u521b\u5efa\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a Python \u89e3\u91ca\u5668\u7248\u672c\u3002 \u6fc0\u6d3b \u865a\u62df\u73af\u5883\u521b\u5efa\u597d\u540e\uff0c\u9700\u8981\u6fc0\u6d3b\u624d\u80fd\u5728\u5f53\u524d\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u5c06\u5f53\u524d\u547d\u4ee4\u884c\u73af\u5883\u4e2d PATH \u53d8\u91cf\u7684\u503c\u66ff\u6362\u6389\u3002 \u8fd0\u884c\u6fc0\u6d3b\u811a\u672c\uff1a - Windows \u7cfb\u7edf\u4e2d\uff0c\u6fc0\u6d3b\u811a\u672c\u8def\u5f84\u662f <myvenv>\\Scripts\\activate.bat \uff0c\u5982\u679c\u662f powershell \u547d\u4ee4\u884c\uff0c\u811a\u672c\u6362\u6210 Activate.ps1 , \u6ce8\u610f\u5c06 <myvenv> \u6362\u6210\u4f60\u81ea\u5df1\u7684\u865a\u62df\u73af\u5883\u76ee\u5f55\u3002 - Linux \u7cfb\u7edf\u4e2d\uff0c\u6fc0\u6d3b\u811a\u672c\u8def\u5f84\u662f <myvenv>/bin/activate \uff0c\u9ed8\u8ba4\u811a\u672c\u6ca1\u6709\u6267\u884c\u6743\u9650\uff0c\u8981\u4e48\u8bbe\u7f6e\u811a\u672c\u4e3a\u53ef\u6267\u884c\uff0c\u8981\u4e48\u7528 source \u547d\u4ee4\u6267\u884c\uff0c\u4f8b\u5982\uff1a source myvenv/bin/activate \u9000\u51fa \u9000\u51fa\u865a\u62df\u73af\u5883\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6267\u884c deactivate \u547d\u4ee4\u5c31\u884c\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u5728\u865a\u62df\u73af\u5883\u7684\u811a\u672c\u76ee\u5f55\u4e0b\uff0c\u56e0\u4e3a\u6fc0\u6d3b\u65f6\uff0c\u5c06\u811a\u672c\u76ee\u5f55\u8bbe\u7f6e\u5230 PATH \u4e2d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u9000\u51fa\u865a\u62df\u73af\u5883\u76f8\u5f53\u4e8e\u5c06 PATH \u6062\u590d\u6210\u539f\u6765\u7684\u3002 \u4e0e\u5f00\u53d1\u5de5\u5177\u914d\u5408 \u867d\u7136\u901a\u8fc7\u6fc0\u6d3b\u811a\u672c\uff0c\u5f88\u5bb9\u6613\u5207\u6362\u5230\u865a\u62df\u73af\u5883\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u8fd8\u662f\u4e0d\u591f\u65b9\u4fbf\uff0c\u800c\u4e14\u73b0\u5728\u5f88\u591a\u5f00\u53d1\u5de5\u5177\uff0c\u7279\u522b\u662f\u63d0\u4f9b Python \u89e3\u6790\u73af\u5883\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u90fd\u53ef\u4ee5\u548c\u865a\u62df\u73af\u5883\u914d\u5408\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u51e0\u4e4e\u65e0\u611f\uff0c\u5bf9\u5f00\u53d1\u5de5\u4f5c\u662f\u5f88\u5927\u7684\u5e2e\u52a9\u3002 Visual Studio Code VS Code \u662f\u4e2a\u540e\u8d77\u4e4b\u79c0\uff0c\u529f\u80fd\u5f3a\u5927\u4e14\u5177\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u8d44\u6e90\uff0c\u65e0\u7591\u662f\u8fd9\u4e24\u5e74\u53d1\u5c55\u6700\u5feb\u7684\u7efc\u5408\u5f00\u53d1\u5de5\u5177\u3002\u73b0\u5728\u7684\u7248\u672c\u914d\u7f6e Python \u865a\u62df\u73af\u5883\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u9009\u62e9\u4e00\u4e2a Python \u89e3\u91ca\u5668\u5c31\u597d\u4e86\u3002 \u540c\u65f6\u6309\u4e0b Ctrl+Shift+P, \u5728\u5f39\u51fa\u7684\u547d\u4ee4\u7a97\u53e3\u4e2d\u8f93\u5165 \"\u89e3\u6790\u5668\"\uff0c\u7136\u540e\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9 \"Python:\u9009\u62e9\u89e3\u6790\u5668\"\uff0c\u8fd9\u91cc\u4f1a\u7f13\u5b58\u4e00\u4e9b\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u89e3\u6790\u5668\uff0c\u5982\u679c\u6ca1\u6709\u60f3\u8981\u7684\uff0c\u53ef\u4ee5\u9009\u62e9 \"Enter interpreter path\" \u6765\u9009\u62e9\u89e3\u6790\u5668\u8def\u5f84\uff0c\u5373\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u865a\u62df\u73af\u5883\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u7684 Python \u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89e3\u6790\u5668\u3002 ![[select_interpreter.png]] \u5982\u679c\u7f16\u8f91\u7684\u662f Python \u4ee3\u7801\u6587\u4ef6\uff0c\u5728\u72b6\u6001\u680f\u4e2d\u4e5f\u53ef\u4ee5\u9009\u62e9\u548c\u5207\u6362\u89e3\u91ca\u5668\uff0c\u66f4\u4e3a\u65b9\u4fbf\u3002 ![[switch_interpreter.png]]","title":"Python \u865a\u62df\u73af\u5883"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_1","text":"Python \u865a\u62df\u73af\u5883\uff0c\u6d89\u53ca\u5230\u5f88\u591a\u6982\u5ff5\u548c\u5de5\u5177\uff0c\u4f1a\u5bf9\u4f7f\u7528\u9020\u6210\u56f0\u6270\u548c\u969c\u788d\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e9b\u6982\u5ff5\u548c\u4e0e\u4e4b\u76f8\u5173\u7684\u5de5\u5177\u3002","title":"\u4e00\u4e9b\u6982\u5ff5"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#python","text":"Python \u7248\u672c\u6307\u7684\u662f Python \u89e3\u6790\u5668\u672c\u8eab\u7684\u7248\u672c\u3002\u7531\u4e8e Python3 \u4e0d\u80fd\u4e0e Python2 \u517c\u5bb9\uff0c\u800c\u4e14\u4e24\u5927\u9635\u8425\u4e4b\u4e89\u6301\u7eed\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u5bfc\u81f4\u4e00\u4e9b\u8f6f\u4ef6\u5e93\u9700\u8981\u8bbe\u914d\u4e24\u79cd\u7248\u672c\u7684 Python\uff0c\u540c\u65f6\u5f00\u53d1\u8005\u53ef\u80fd\u9700\u8981\u5728\u4e00\u4e2a\u73af\u5883\u4e2d\uff0c\u90e8\u7f72\u4e0d\u540c\u7248\u672c\u7684 Python\uff0c\u5bf9\u5f00\u53d1\u548c\u7ef4\u62a4\u9020\u6210\u4e86\u9ebb\u70e6\u3002\u56e0\u6b64\u51fa\u73b0\u4e86\u7248\u672c\u7ba1\u7406\u5668 Pyenv\uff0c\u7c7b\u4f3c\u4e8e nodejs \u7684 nvm\uff0c\u53ef\u4ee5\u521b\u5efa\u51fa\u76f8\u4e92\u9694\u79bb\u7684 Python \u73af\u5883\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u7684\u5207\u6362\u73af\u5883\u4e2d\u7684 Python \u7248\u672c\uff0c\u4f46\u548c Python \u865a\u62df\u73af\u5883\u5173\u7cfb\u4e0d\u5927\u3002","title":"Python \u7248\u672c"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#python_1","text":"\u5305\u5e93\u6216\u8005\u53eb\u8f6f\u4ef6\u6e90\u662f Python \u7b2c\u4e09\u65b9\u8f6f\u4ef6\u7684\u5e93\u7684\u96c6\u5408\uff0c\u6216\u8005\u5e02\u573a\uff0c\u53ef\u4ee5\u53d1\u5e03\u3001\u4e0b\u8f7d\u548c\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u5176\u4e2d pypi (Python Package Index) https://pypi.org/ \u662f\u5b98\u65b9\u6307\u5b9a\u7684\u8f6f\u4ef6\u5305\u5e93\uff0c\u57fa\u4e8e\u5176\u4e0a\u7684 pip \u5de5\u5177\u5c31\u662f\u4ece\u8fd9\u91cc\u67e5\u627e\u3001\u4e0b\u8f7d\u5b89\u88c5\u8f6f\u4ef6\u5305\u7684\u3002\u4e3a\u4e86\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6\uff0c\u4e16\u754c\u4e0a\u6709\u5f88\u591a Pypi \u7684\u955c\u50cf\u670d\u52a1\u5668\uff0c\u5728\u56fd\u5185\u4e5f\u6709\u591a\u4e2a\u8f6f\u4ef6\u6e90\uff0c\u4f8b\u5982\u963f\u91cc\u7684\u8f6f\u4ef6\u6e90\u662f\uff1ahttp://mirrors.aliyun.com/pypi/simple/\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u8f6f\u4ef6\u6e90\uff0c\u5982\u9488\u5bf9\u79d1\u5b66\u8ba1\u7b97\u7684 anaconda \u7684\u8f6f\u4ef6\u6e90 https://repo.anaconda.com/\u3002","title":"Python \u5305\u5e93"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#python_2","text":"\u8f6f\u4ef6\u5305\u6e90\u4e2d\u7684\u8f6f\u4ef6\u5305\u6570\u91cf\u5de8\u5927\uff0c\u7248\u672c\u591a\u6837\uff0c\u6240\u4ee5\u9700\u8981\u501f\u52a9\u4e8e\u8f6f\u4ef6\u6e90\u7ba1\u7406\u5de5\u5177\uff0c\u4f8b\u5982 pip\u3001conda\u3001Pipenv\u3001Poetry \u7b49\u3002 - pip \u662f\u6700\u5e38\u7528\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u901a\u8fc7 pip install <packagename> \u547d\u4ee4\u683c\u5f0f\u6765\u5b89\u88c5\u8f6f\u4ef6\u5305\uff0c\u4f7f\u7528\u7684\u662f pypi \u8f6f\u4ef6\u5305\u6e90\u3002 - conda \u591a\u7528\u4f5c\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u529f\u80fd\u4e30\u5bcc\u4e14\u5f3a\u5927\uff0c\u4f7f\u7528\u7684\u8f6f\u4ef6\u5305\u6e90\u662f Anaconda repository \u548c Anaconda Cloud\uff0cconda \u4e0d\u4ec5\u652f\u6301 Python \u8f6f\u4ef6\u5305\uff0c\u8fd8\u53ef\u4ee5\u5b89\u88c5 C\u3001C++ \u3001R \u4ee5\u53ca\u5176\u4ed6\u8bed\u8a00\u7684\u4e8c\u5b9a\u5236\u8f6f\u4ef6\u5305\u3002\u9664\u4e86\u8f6f\u4ef6\u5305\u7ba1\u7406\u5916\uff0c\u8fd8\u80fd\u63d0\u4f9b\u76f8\u4e92\u9694\u79bb\u7684\u8f6f\u4ef6\u73af\u5883\u3002 - Pipenv \u662f Kenneth Reitz \u57282017\u5e741\u6708\u53d1\u5e03\u7684Python\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u73b0\u5728\u7531PyPA\u7ef4\u62a4\u3002Pipenv \u4f1a\u81ea\u52a8\u5e2e\u4f60\u7ba1\u7406\u865a\u62df\u73af\u5883\u548c\u4f9d\u8d56\u6587\u4ef6\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u548c\u9009\u9879\u6765\u5e2e\u52a9\u4f60\u5b9e\u73b0\u5404\u79cd\u4f9d\u8d56\u548c\u73af\u5883\u7ba1\u7406\u76f8\u5173\u7684\u64cd\u4f5c\u3002 - Poetry \u548c Pipenv \u7c7b\u4f3c\uff0c\u662f\u4e00\u4e2a Python \u865a\u62df\u73af\u5883\u548c\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u53e6\u5916\u5b83\u8fd8\u63d0\u4f9b\u4e86\u5305\u7ba1\u7406\u529f\u80fd\uff0c\u6bd4\u5982\u6253\u5305\u548c\u53d1\u5e03\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u662f Pipenv \u548c Flit \u8fd9\u4e9b\u5de5\u5177\u7684\u8d85\u96c6\u3002\u5b83\u53ef\u4ee5\u8ba9\u4f60\u7528 Poetry \u6765\u540c\u65f6\u7ba1\u7406 Python \u5e93\u548c Python \u7a0b\u5e8f\u3002 \u5f88\u591a\u5305\u7ba1\u7406\u5de5\u5177\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u5305\u7ba1\u7406\u529f\u80fd\uff0c\u8fd8\u63d0\u4f9b\u4e86\u865a\u62df\u73af\u5883\u6784\u5efa\uff0c\u7a0b\u5e8f\u7ba1\u7406\u7684\u7b49\u529f\u80fd\u3002","title":"Python \u5305\u7ba1\u7406\u5668"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#python_3","text":"Python \u5e94\u7528\u7ecf\u5e38\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u5305\u7b2c\u4e09\u65b9\u5305\u6216\u8005\u6a21\u5757\uff0c\u6709\u65f6\u9700\u8981\u4f9d\u8d56\u7279\u5b9a\u7684\u5305\u6216\u8005\u5e93\u7684\u7248\u672c\uff0c\u6240\u4ee5\u4e0d\u80fd\u6709\u4e00\u4e2a\u80fd\u9002\u5e94\u6240\u6709 Python \u5e94\u7528\u7684\u8f6f\u4ef6\u73af\u5883\uff0c\u5f88\u591a\u65f6\u5019\u4e0d\u540c\u7684 Python \u5e94\u7528\u6240\u4f9d\u8d56\u7684\u7248\u672c\u662f\u51b2\u7a81\u7684\uff0c\u6ee1\u8db3\u4e86\u5176\u4e2d\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u5219\u65e0\u6cd5\u8fd0\u884c\uff0c\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f\u865a\u62df\u73af\u5883\u3002\u865a\u62df\u73af\u5883\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u7279\u5b9a Python \u89e3\u6790\u5668\u4ee5\u53ca\u4e00\u4e9b\u8f6f\u4ef6\u5305\u7684\u81ea\u5305\u542b\u76ee\u5f55\uff0c\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u4f9d\u8d56\u51b2\u7a81\u95ee\u9898\uff0c\u800c\u4e14\u865a\u62df\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5b89\u88c5\u5e94\u7528\u76f8\u5173\u7684\u5305\u6216\u8005\u6a21\u5757\uff0c\u53ef\u4ee5\u7ed9\u90e8\u7f72\u63d0\u4f9b\u4fbf\u5229\u3002","title":"Python \u865a\u62df\u73af\u5883"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_2","text":"","title":"\u6784\u5efa\u865a\u62df\u73af\u5883"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_3","text":"\u865a\u62df\u73af\u5883\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u6280\u672f\uff0c \u4e3b\u8981\u662f\u5229\u7528\u4e86\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u73af\u5883\u53d8\u91cf\u4ee5\u53ca\u8fdb\u7a0b\u95f4\u73af\u5883\u9694\u79bb\u7684\u7279\u6027 \u3002 \u64cd\u4f5c\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u4fe1\u606f\u548c\u505a\u4fe1\u606f\u4ea4\u6362\u4ecb\u8d28\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u6307\u5b9a\u73af\u5883\u53d8\u91cf\uff0c\u5176\u4e2d PATH \u662f\u5f88\u91cd\u8981\u7684\u73af\u5883\u53d8\u91cf\uff0c\u7528\u4e8e\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u63d0\u4f9b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u4f8b\u5982\u5199\u4e00\u4e2a\u7a0b\u5e8f a.exe\uff0c\u5b58\u653e\u5728 D:\\MyProgram \u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c a.exe \uff0c\u4f1a\u5f97\u5230\u63d0\u793a\u201c \u65e0\u6cd5\u627e\u5230\u7a0b\u5e8f a.exe\u201d\uff0c\u4e3a\u4e86\u8ba9\u7cfb\u7edf\u627e\u5230\uff0c\u53ef\u4ee5\u5c06 D:\\MyProgram \u8def\u5f84\u52a0\u5165\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5f53\u8f93\u5165 a.exe \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u4f1a\u4ece PATH \u6240\u63d0\u4f9b\u7684\u8def\u5f84\u4e2d\u9010\u4e2a\u67e5\u627e\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u627e\u5230\u4e86\u3002Linux \u548c MacOS \u5177\u6709\u76f8\u4f3c\u7684\u7279\u6027\uff0c\u751a\u81f3\u6bd4 Windows \u7684\u529f\u80fd\u66f4\u4e30\u5bcc\u3002 Python \u865a\u62df\u73af\u5883\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u7279\u6027\u6784\u5efa\u7684\uff0c\u5728\u6fc0\u6d3b\u865a\u62df\u73af\u5883\u4e4b\u65f6\uff0c\u6fc0\u6d3b\u811a\u672c\u4f1a\u5c06\u5f53\u524d\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684 PATH \u4fee\u6539\u4e3a\u865a\u62df\u73af\u5883\u7684\uff0c\u8fd9\u6837\u6267\u884c\u547d\u4ee4\u5c31\u4f1a\u5728\u88ab\u4fee\u6539\u7684 PATH \u4e2d\u67e5\u627e\uff0c\u4ece\u800c\u907f\u514d\u4e86\u539f\u672c PATH \u53ef\u4ee5\u627e\u5230\u7684\u547d\u4ee4\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86 Python \u73af\u5883\u7684\u9694\u79bb\u3002","title":"\u539f\u7406"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#venv","text":"Python3.3 \u4e4b\u540e\uff0c\u53ef\u4ee5\u7528\u6a21\u5757 venv \u4ee3\u66ff virtualenv \u5de5\u5177\uff0c\u597d\u5904\u662f\u4e0d\u7528\u5355\u72ec\u5b89\u88c5\uff08\u5b9e\u6d4b Ubuntu \u9700\u8981\u5b89\u88c5 python-venv\uff09\uff0c3.3 \u53ca\u4e4b\u540e\u7684\u7248\u672c\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u597d\u7684 Python \u6765\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a python -m venv myvenv \u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a myvenv \u7684\u865a\u62df\u73af\u5883\u3002 venv \u6709\u4e9b\u53c2\u6570\uff0c\u4e0d\u8fc7\u76f8\u6bd4 virtualenv \u5c11\u4e86\u4e9b\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u51e0\u4e2a\uff1a - --without-pip : \u4e0d\u9700\u8981\u5b89\u88c5 pip\uff0c\u9ed8\u8ba4\u4e3a\u5b89\u88c5\u3002 - --clear \uff1a\u5982\u679c\u521b\u5efa\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u5df2\u7ecf\u6709\u4e86\u5176\u4ed6\u865a\u62df\u73af\u5883\uff0c\u6e05\u9664\u91cd\u5efa\u3002 \u56e0\u4e3a venv \u662f\u4f9d\u9644\u4e8e\u4e00\u4e2a Python \u89e3\u6790\u5668\u521b\u5efa\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6307\u5b9a Python \u89e3\u91ca\u5668\u7248\u672c\u3002","title":"venv \u6a21\u5757"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_4","text":"\u865a\u62df\u73af\u5883\u521b\u5efa\u597d\u540e\uff0c\u9700\u8981\u6fc0\u6d3b\u624d\u80fd\u5728\u5f53\u524d\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u5c06\u5f53\u524d\u547d\u4ee4\u884c\u73af\u5883\u4e2d PATH \u53d8\u91cf\u7684\u503c\u66ff\u6362\u6389\u3002 \u8fd0\u884c\u6fc0\u6d3b\u811a\u672c\uff1a - Windows \u7cfb\u7edf\u4e2d\uff0c\u6fc0\u6d3b\u811a\u672c\u8def\u5f84\u662f <myvenv>\\Scripts\\activate.bat \uff0c\u5982\u679c\u662f powershell \u547d\u4ee4\u884c\uff0c\u811a\u672c\u6362\u6210 Activate.ps1 , \u6ce8\u610f\u5c06 <myvenv> \u6362\u6210\u4f60\u81ea\u5df1\u7684\u865a\u62df\u73af\u5883\u76ee\u5f55\u3002 - Linux \u7cfb\u7edf\u4e2d\uff0c\u6fc0\u6d3b\u811a\u672c\u8def\u5f84\u662f <myvenv>/bin/activate \uff0c\u9ed8\u8ba4\u811a\u672c\u6ca1\u6709\u6267\u884c\u6743\u9650\uff0c\u8981\u4e48\u8bbe\u7f6e\u811a\u672c\u4e3a\u53ef\u6267\u884c\uff0c\u8981\u4e48\u7528 source \u547d\u4ee4\u6267\u884c\uff0c\u4f8b\u5982\uff1a source myvenv/bin/activate","title":"\u6fc0\u6d3b"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_5","text":"\u9000\u51fa\u865a\u62df\u73af\u5883\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6267\u884c deactivate \u547d\u4ee4\u5c31\u884c\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u5728\u865a\u62df\u73af\u5883\u7684\u811a\u672c\u76ee\u5f55\u4e0b\uff0c\u56e0\u4e3a\u6fc0\u6d3b\u65f6\uff0c\u5c06\u811a\u672c\u76ee\u5f55\u8bbe\u7f6e\u5230 PATH \u4e2d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u9000\u51fa\u865a\u62df\u73af\u5883\u76f8\u5f53\u4e8e\u5c06 PATH \u6062\u590d\u6210\u539f\u6765\u7684\u3002","title":"\u9000\u51fa"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#_6","text":"\u867d\u7136\u901a\u8fc7\u6fc0\u6d3b\u811a\u672c\uff0c\u5f88\u5bb9\u6613\u5207\u6362\u5230\u865a\u62df\u73af\u5883\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u8fd8\u662f\u4e0d\u591f\u65b9\u4fbf\uff0c\u800c\u4e14\u73b0\u5728\u5f88\u591a\u5f00\u53d1\u5de5\u5177\uff0c\u7279\u522b\u662f\u63d0\u4f9b Python \u89e3\u6790\u73af\u5883\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u90fd\u53ef\u4ee5\u548c\u865a\u62df\u73af\u5883\u914d\u5408\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u51e0\u4e4e\u65e0\u611f\uff0c\u5bf9\u5f00\u53d1\u5de5\u4f5c\u662f\u5f88\u5927\u7684\u5e2e\u52a9\u3002","title":"\u4e0e\u5f00\u53d1\u5de5\u5177\u914d\u5408"},{"location":"Programming/01.%20Python/Python%20%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/#visual-studio-code","text":"VS Code \u662f\u4e2a\u540e\u8d77\u4e4b\u79c0\uff0c\u529f\u80fd\u5f3a\u5927\u4e14\u5177\u6709\u4e30\u5bcc\u7684\u63d2\u4ef6\u8d44\u6e90\uff0c\u65e0\u7591\u662f\u8fd9\u4e24\u5e74\u53d1\u5c55\u6700\u5feb\u7684\u7efc\u5408\u5f00\u53d1\u5de5\u5177\u3002\u73b0\u5728\u7684\u7248\u672c\u914d\u7f6e Python \u865a\u62df\u73af\u5883\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u9009\u62e9\u4e00\u4e2a Python \u89e3\u91ca\u5668\u5c31\u597d\u4e86\u3002 \u540c\u65f6\u6309\u4e0b Ctrl+Shift+P, \u5728\u5f39\u51fa\u7684\u547d\u4ee4\u7a97\u53e3\u4e2d\u8f93\u5165 \"\u89e3\u6790\u5668\"\uff0c\u7136\u540e\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u9009\u62e9 \"Python:\u9009\u62e9\u89e3\u6790\u5668\"\uff0c\u8fd9\u91cc\u4f1a\u7f13\u5b58\u4e00\u4e9b\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u89e3\u6790\u5668\uff0c\u5982\u679c\u6ca1\u6709\u60f3\u8981\u7684\uff0c\u53ef\u4ee5\u9009\u62e9 \"Enter interpreter path\" \u6765\u9009\u62e9\u89e3\u6790\u5668\u8def\u5f84\uff0c\u5373\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u865a\u62df\u73af\u5883\u811a\u672c\u6587\u4ef6\u5939\u4e2d\u7684 Python \u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89e3\u6790\u5668\u3002 ![[select_interpreter.png]] \u5982\u679c\u7f16\u8f91\u7684\u662f Python \u4ee3\u7801\u6587\u4ef6\uff0c\u5728\u72b6\u6001\u680f\u4e2d\u4e5f\u53ef\u4ee5\u9009\u62e9\u548c\u5207\u6362\u89e3\u91ca\u5668\uff0c\u66f4\u4e3a\u65b9\u4fbf\u3002 ![[switch_interpreter.png]]","title":"Visual Studio Code"},{"location":"Programming/01.%20Python/Python%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%20import%20%E9%97%AE%E9%A2%98/","text":"\u4e00\u822c\u6a21\u5757\u7684\u5bfc\u5165\u89c4\u5219 import xxx \u65f6\u641c\u7d22\u6587\u4ef6\u7684\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1. \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u641c\u7d22\u8be5\u6a21\u5757\uff1b 2. \u5728\u73af\u5883\u53d8\u91cf PYTHONPATH \u6307\u5b9a\u7684\u8def\u5f84\u5217\u8868\u4e2d\u4e00\u6b21\u641c\u7d22\uff1b 3. \u5728Python\u5b89\u88c5\u8def\u5f84\u7684 lib \u5e93\u4e2d\u641c\u7d22\u3002 \u7edd\u5bf9\u5bfc\u5165\u4e0e\u76f8\u5bf9\u5bfc\u5165 \u7edd\u5bf9\u5bfc\u5165\u4e0e\u76f8\u5bf9\u5bfc\u5165\uff0c\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u76f8\u5bf9\u4e8e\u5305\u5185\u5bfc\u5165\u800c\u8a00\u7684\u3002\u5305\u5185\u5bfc\u5165\u5373\u662f\u5305\u5185\u7684\u6a21\u5757\u5bfc\u5165\u5305\u5185\u90e8\u7684\u6a21\u5757\u3002 \u6240\u8c13\u7684\u5305\uff0c\u5c31\u662f\u5305\u542b __init__.py \u7684\u76ee\u5f55\uff0c\u8be5\u6587\u4ef6\u5728\u5305\u5bfc\u5165\u65f6\u4f1a\u88ab\u9996\u5148\u6267\u884c\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u5408\u6cd5\u7684Python\u4ee3\u7801\u3002 \u76f8\u5bf9\u5bfc\u5165\u53ef\u4ee5\u907f\u514d\u786c\u7f16\u7801\uff0c\u5bf9\u5305\u7684\u7ef4\u62a4\u662f\u53cb\u597d\u7684\u3002\u7edd\u5bf9\u5bfc\u5165\u53ef\u4ee5\u907f\u514d\u4e0e\u6807\u51c6\u5e93\u547d\u540d\u7684\u51b2\u7a81\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u63a8\u8350\u81ea\u5b9a\u4e49\u6a21\u5757\u4e0e\u6807\u51c6\u5e93\u547d\u540d\u76f8\u540c\u3002 \u7edd\u5bf9\u5bfc\u5165\uff1a\u6307\u660e\u9876\u5c42 package \u540d\u3002\u6bd4\u5982 import a \uff0cPython \u4f1a\u5728 sys.path \u91cc\u5bfb\u627e\u6240\u6709\u540d\u4e3a a \u7684\u9876\u5c42\u6a21\u5757\u3002 import A import A.B from A import B \u76f8\u5bf9\u5bfc\u5165\uff1a\u5728\u4e0d\u6307\u660e package \u540d\u7684\u60c5\u51b5\u4e0b\u5bfc\u5165\u81ea\u5df1\u8fd9\u4e2a package \u7684\u6a21\u5757\uff0c\u8868\u793a\u53ea\u5728 package \u7684\u5185\u90e8\u76ee\u5f55\u4e2d\u641c\u7d22\uff0c\u5e76\u4e14\u4e0d\u4f1a\u641c\u7d22\u4f4d\u4e8e sys.path \u4e0a\u67d0\u5904\u540c\u540d\u7684\u6a21\u5757\uff0c\u76f4\u63a5\u6548\u679c\u5c31\u662f\u5305\u6a21\u5757\u8986\u76d6\u4e86\u5916\u90e8\u7684\u6a21\u5757\u3002 from . import A #.\u4ee3\u8868\u5f53\u524d\u8def\u5f84 from .. import B #..\u4ee3\u8868\u4e0a\u4e00\u7ea7\u8def\u5f84 from ... import C #...\u4ee3\u8868\u4e0a\u4e0a\u4e00\u7ea7\u8def\u5f84\uff0c\u4ee5\u6b64\u7c7b\u63a8 Python 2.x \u9ed8\u8ba4\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\uff0c Python 3.x \u9ed8\u8ba4\u4f7f\u7528\u7edd\u5bf9\u5bfc\u5165\u3002 \u6587\u4ef6\u5939\u88abpython\u89e3\u91ca\u5668\u89c6\u4f5cpackage\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a \u6587\u4ef6\u5939\u4e2d\u5fc5\u987b\u6709 __init__.py \u6587\u4ef6\uff1b \u4e0d\u80fd\u4f5c\u4e3a\u9876\u5c42\u6a21\u5757\u6765\u6267\u884c\u8be5\u6587\u4ef6\u5939\u4e2d\u7684py\u6587\u4ef6\uff08\u5373\u4e0d\u80fd\u4f5c\u4e3a\u4e3b\u51fd\u6570\u7684\u5165\u53e3\uff09\u3002 \u6240\u4ee5\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u7684Python\u6587\u4ef6\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff01 \u9879\u76ee\u4e2d\u7684\u76ee\u5f55\u7ec4\u7ec7 \\project |____ module_1 |____ |____ `__init__.py` |____ |____ `func_1.py` |____ |____ `func_2.py` |____ module_2 |____ |____ `__init__.py` |____ |____ `func_3.py` |____ `main.py` |____ `func_4.py` \u5982\u4e0a\u6240\u793a\u7684\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0cproject\u76ee\u5f55\u5305\u542b\u9879\u76ee\u6240\u6709\u6e90\u6587\u4ef6\uff0c main.py \u4e3a\u4e3b\u51fd\u6570\u5165\u53e3\u3002 \u4e3b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5bfc\u5165\u6a21\u5757\uff0c\u4f7f\u7528\u7edd\u5bf9\u5bfc\u5165\uff0c\u4f8b\u5982\uff1a main.py \u4e2d\u53ef\u4ee5\u5199 import func_4 \u3001 import mudule_1.func_1 \u3001 from module_2 import func_3 ; \u5305\u5185\u7684\u6587\u4ef6\u5bfc\u5165\u6a21\u5757\uff0c\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\uff0c\u4f8b\u5982\uff1a func_1.py \u4e2d\u53ef\u4ee5\u5199 from . import func_2 \u3001 from mudule_2 import func_3 \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u80fd\u4f7f\u7528 .. \u56de\u6eaf\u5230\u6700\u9876\u5c42\u76ee\u5f55\uff08\u5373\u4e3b\u51fd\u6570\u5165\u53e3\u76ee\u5f55\uff09\uff0c\u6240\u4ee5\u8981\u5199\u6210 import mudule_2.func_3 \u6216\u8005 from mudule_2 import func_3 \u3002 \u53ea\u6709project\u76ee\u5f55\u4e2d\u7684py\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0cmodule_1\u548cmodule_2\u4e2d\u7684py\u76f4\u63a5\u8fd0\u884c\u4f1a\u62a5\u9519\u3002 \u53e6\u5916\u4e00\u79cd\u65b9\u6848\u662f\u5728 main.py \u4e2d\u628amodule_1\u548cmodule_2\u4e24\u4e2a\u5305\u7684\u8def\u5f84\u5199\u5165 sys.path \u5217\u8868\u4e2d\uff08 sys.path.append('module_path') \uff09\uff0c\u5219\u5728\u4e3b\u76ee\u5f55\u4e2d\u7684py\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5199 import func_1 \u3001 import func_2 \u3001 import func_3 \u3002 \uff08\u4e0d\u63a8\u8350\u8fd9\u79cd\u5199\u6cd5\uff09 import xxx \u8fd9\u79cd\u5199\u6cd5\u53ea\u7528\u4e8e\u5bfc\u5165\u6807\u51c6\u5e93\u6216\u8005\u9879\u76ee\u4e3b\u76ee\u5f55\u7684\u6a21\u5757\u7684\u4e60\u60ef\u4f1a\u6bd4\u8f83\u597d\u3002","title":"\u4e00\u822c\u6a21\u5757\u7684\u5bfc\u5165\u89c4\u5219"},{"location":"Programming/01.%20Python/Python%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%20import%20%E9%97%AE%E9%A2%98/#_1","text":"import xxx \u65f6\u641c\u7d22\u6587\u4ef6\u7684\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1. \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u641c\u7d22\u8be5\u6a21\u5757\uff1b 2. \u5728\u73af\u5883\u53d8\u91cf PYTHONPATH \u6307\u5b9a\u7684\u8def\u5f84\u5217\u8868\u4e2d\u4e00\u6b21\u641c\u7d22\uff1b 3. \u5728Python\u5b89\u88c5\u8def\u5f84\u7684 lib \u5e93\u4e2d\u641c\u7d22\u3002","title":"\u4e00\u822c\u6a21\u5757\u7684\u5bfc\u5165\u89c4\u5219"},{"location":"Programming/01.%20Python/Python%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%20import%20%E9%97%AE%E9%A2%98/#_2","text":"\u7edd\u5bf9\u5bfc\u5165\u4e0e\u76f8\u5bf9\u5bfc\u5165\uff0c\u8fd9\u4e24\u4e2a\u6982\u5ff5\u662f\u76f8\u5bf9\u4e8e\u5305\u5185\u5bfc\u5165\u800c\u8a00\u7684\u3002\u5305\u5185\u5bfc\u5165\u5373\u662f\u5305\u5185\u7684\u6a21\u5757\u5bfc\u5165\u5305\u5185\u90e8\u7684\u6a21\u5757\u3002 \u6240\u8c13\u7684\u5305\uff0c\u5c31\u662f\u5305\u542b __init__.py \u7684\u76ee\u5f55\uff0c\u8be5\u6587\u4ef6\u5728\u5305\u5bfc\u5165\u65f6\u4f1a\u88ab\u9996\u5148\u6267\u884c\uff0c\u8be5\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u5408\u6cd5\u7684Python\u4ee3\u7801\u3002 \u76f8\u5bf9\u5bfc\u5165\u53ef\u4ee5\u907f\u514d\u786c\u7f16\u7801\uff0c\u5bf9\u5305\u7684\u7ef4\u62a4\u662f\u53cb\u597d\u7684\u3002\u7edd\u5bf9\u5bfc\u5165\u53ef\u4ee5\u907f\u514d\u4e0e\u6807\u51c6\u5e93\u547d\u540d\u7684\u51b2\u7a81\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u63a8\u8350\u81ea\u5b9a\u4e49\u6a21\u5757\u4e0e\u6807\u51c6\u5e93\u547d\u540d\u76f8\u540c\u3002 \u7edd\u5bf9\u5bfc\u5165\uff1a\u6307\u660e\u9876\u5c42 package \u540d\u3002\u6bd4\u5982 import a \uff0cPython \u4f1a\u5728 sys.path \u91cc\u5bfb\u627e\u6240\u6709\u540d\u4e3a a \u7684\u9876\u5c42\u6a21\u5757\u3002 import A import A.B from A import B \u76f8\u5bf9\u5bfc\u5165\uff1a\u5728\u4e0d\u6307\u660e package \u540d\u7684\u60c5\u51b5\u4e0b\u5bfc\u5165\u81ea\u5df1\u8fd9\u4e2a package \u7684\u6a21\u5757\uff0c\u8868\u793a\u53ea\u5728 package \u7684\u5185\u90e8\u76ee\u5f55\u4e2d\u641c\u7d22\uff0c\u5e76\u4e14\u4e0d\u4f1a\u641c\u7d22\u4f4d\u4e8e sys.path \u4e0a\u67d0\u5904\u540c\u540d\u7684\u6a21\u5757\uff0c\u76f4\u63a5\u6548\u679c\u5c31\u662f\u5305\u6a21\u5757\u8986\u76d6\u4e86\u5916\u90e8\u7684\u6a21\u5757\u3002 from . import A #.\u4ee3\u8868\u5f53\u524d\u8def\u5f84 from .. import B #..\u4ee3\u8868\u4e0a\u4e00\u7ea7\u8def\u5f84 from ... import C #...\u4ee3\u8868\u4e0a\u4e0a\u4e00\u7ea7\u8def\u5f84\uff0c\u4ee5\u6b64\u7c7b\u63a8 Python 2.x \u9ed8\u8ba4\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\uff0c Python 3.x \u9ed8\u8ba4\u4f7f\u7528\u7edd\u5bf9\u5bfc\u5165\u3002 \u6587\u4ef6\u5939\u88abpython\u89e3\u91ca\u5668\u89c6\u4f5cpackage\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a \u6587\u4ef6\u5939\u4e2d\u5fc5\u987b\u6709 __init__.py \u6587\u4ef6\uff1b \u4e0d\u80fd\u4f5c\u4e3a\u9876\u5c42\u6a21\u5757\u6765\u6267\u884c\u8be5\u6587\u4ef6\u5939\u4e2d\u7684py\u6587\u4ef6\uff08\u5373\u4e0d\u80fd\u4f5c\u4e3a\u4e3b\u51fd\u6570\u7684\u5165\u53e3\uff09\u3002 \u6240\u4ee5\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u7684Python\u6587\u4ef6\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff01","title":"\u7edd\u5bf9\u5bfc\u5165\u4e0e\u76f8\u5bf9\u5bfc\u5165"},{"location":"Programming/01.%20Python/Python%20%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%20import%20%E9%97%AE%E9%A2%98/#_3","text":"\\project |____ module_1 |____ |____ `__init__.py` |____ |____ `func_1.py` |____ |____ `func_2.py` |____ module_2 |____ |____ `__init__.py` |____ |____ `func_3.py` |____ `main.py` |____ `func_4.py` \u5982\u4e0a\u6240\u793a\u7684\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0cproject\u76ee\u5f55\u5305\u542b\u9879\u76ee\u6240\u6709\u6e90\u6587\u4ef6\uff0c main.py \u4e3a\u4e3b\u51fd\u6570\u5165\u53e3\u3002 \u4e3b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5bfc\u5165\u6a21\u5757\uff0c\u4f7f\u7528\u7edd\u5bf9\u5bfc\u5165\uff0c\u4f8b\u5982\uff1a main.py \u4e2d\u53ef\u4ee5\u5199 import func_4 \u3001 import mudule_1.func_1 \u3001 from module_2 import func_3 ; \u5305\u5185\u7684\u6587\u4ef6\u5bfc\u5165\u6a21\u5757\uff0c\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\uff0c\u4f8b\u5982\uff1a func_1.py \u4e2d\u53ef\u4ee5\u5199 from . import func_2 \u3001 from mudule_2 import func_3 \u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u80fd\u4f7f\u7528 .. \u56de\u6eaf\u5230\u6700\u9876\u5c42\u76ee\u5f55\uff08\u5373\u4e3b\u51fd\u6570\u5165\u53e3\u76ee\u5f55\uff09\uff0c\u6240\u4ee5\u8981\u5199\u6210 import mudule_2.func_3 \u6216\u8005 from mudule_2 import func_3 \u3002 \u53ea\u6709project\u76ee\u5f55\u4e2d\u7684py\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0cmodule_1\u548cmodule_2\u4e2d\u7684py\u76f4\u63a5\u8fd0\u884c\u4f1a\u62a5\u9519\u3002 \u53e6\u5916\u4e00\u79cd\u65b9\u6848\u662f\u5728 main.py \u4e2d\u628amodule_1\u548cmodule_2\u4e24\u4e2a\u5305\u7684\u8def\u5f84\u5199\u5165 sys.path \u5217\u8868\u4e2d\uff08 sys.path.append('module_path') \uff09\uff0c\u5219\u5728\u4e3b\u76ee\u5f55\u4e2d\u7684py\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5199 import func_1 \u3001 import func_2 \u3001 import func_3 \u3002 \uff08\u4e0d\u63a8\u8350\u8fd9\u79cd\u5199\u6cd5\uff09 import xxx \u8fd9\u79cd\u5199\u6cd5\u53ea\u7528\u4e8e\u5bfc\u5165\u6807\u51c6\u5e93\u6216\u8005\u9879\u76ee\u4e3b\u76ee\u5f55\u7684\u6a21\u5757\u7684\u4e60\u60ef\u4f1a\u6bd4\u8f83\u597d\u3002","title":"\u9879\u76ee\u4e2d\u7684\u76ee\u5f55\u7ec4\u7ec7"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/","text":"\u8981\u5199\u51fa Pythonic\uff08\u4f18\u96c5\u7684\u3001\u5730\u9053\u7684\u3001\u6574\u6d01\u7684\uff09\u4ee3\u7801\uff0c\u8fd8\u8981\u5e73\u65f6\u591a\u89c2\u5bdf\u90a3\u4e9b\u5927\u725b\u4ee3\u7801\uff0cGithub \u4e0a\u6709\u5f88\u591a\u975e\u5e38\u4f18\u79c0\u7684\u6e90\u4ee3\u7801\u503c\u5f97\u9605\u8bfb\uff0c\u6bd4\u5982\uff1arequests\u3001flask\u3001tornado\uff0c\u8fd9\u91cc\u6536\u96c6\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684 Pythonic \u5199\u6cd5\u3002 00. \u53d8\u91cf\u4ea4\u6362 bad tmp = a a = b b = tmp pythonic a , b = b , a 01. \u5217\u8868\u63a8\u5bfc bad my_list = [] for i in range ( 10 ): my_list . append ( i * 2 ) pythonic my_list = [ i * 2 for i in range ( 10 )] 02. \u5355\u884c\u8868\u8fbe\u5f0f \u867d\u7136\u5217\u8868\u63a8\u5bfc\u5f0f\u7531\u4e8e\u5176\u7b80\u6d01\u6027\u53ca\u8868\u8fbe\u6027\uff0c\u88ab\u5e7f\u53d7\u63a8\u5d07\u3002 \u4f46\u662f\u6709\u8bb8\u591a\u53ef\u4ee5\u5199\u6210\u5355\u884c\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e0d\u662f\u597d\u7684\u505a\u6cd5\u3002 bad print 'one' ; print 'two' if x == 1 : print 'one' if < complex comparison > and < other complex comparison > : # do something pythonic print 'one' print 'two' if x == 1 : print 'one' cond1 = < complex comparison > cond2 = < other complex comparison > if cond1 and cond2 : # do something 03. \u5e26\u7d22\u5f15\u904d\u5386 bad for i in range ( len ( my_list )): print ( i , \"-->\" , my_list [ i ]) pythonic for i , item in enumerate ( my_list ): print ( i , \"-->\" , item ) 04. \u5e8f\u5217\u89e3\u5305 pythonic a , * rest = [ 1 , 2 , 3 ] # a = 1, rest = [2, 3] a , * middle , c = [ 1 , 2 , 3 , 4 ] # a = 1, middle = [2, 3], c = 4 05. \u5b57\u7b26\u4e32\u62fc\u63a5 bad letters = [ 's' , 'p' , 'a' , 'm' ] s = \"\" for let in letters : s += let pythonic letters = [ 's' , 'p' , 'a' , 'm' ] word = '' . join ( letters ) 06. \u771f\u5047\u5224\u65ad bad if attr == True : print ( 'True!' ) if attr == None : print ( 'attr is None!' ) pythonic if attr : print ( 'attr is truthy!' ) if not attr : print ( 'attr is falsey!' ) if attr is None : print ( 'attr is None!' ) 07. \u8bbf\u95ee\u5b57\u5178\u5143\u7d20 bad d = { 'hello' : 'world' } if d . has_key ( 'hello' ): print ( d [ 'hello' ]) # prints 'world' else : print ( 'default_value' ) pythonic d = { 'hello' : 'world' } print ( d . get ( 'hello' , 'default_value' )) # prints 'world' print ( d . get ( 'thingy' , 'default_value' )) # prints 'default_value' # Or: if 'hello' in d : print ( d [ 'hello' ]) 08. \u64cd\u4f5c\u5217\u8868 bad a = [ 3 , 4 , 5 ] b = [] for i in a : if i > 4 : b . append ( i ) pythonic a = [ 3 , 4 , 5 ] b = [ i for i in a if i > 4 ] # Or: b = filter ( lambda x : x > 4 , a ) bad a = [ 3 , 4 , 5 ] for i in range ( len ( a )): a [ i ] += 3 pythonic a = [ 3 , 4 , 5 ] a = [ i + 3 for i in a ] # Or: a = map ( lambda i : i + 3 , a ) 09. \u6587\u4ef6\u8bfb\u53d6 bad f = open ( 'file.txt' ) a = f . read () print ( a ) f . close () pythonic with open ( 'file.txt' ) as f : for line in f : print ( line ) 10. \u4ee3\u7801\u7eed\u884c bad my_very_big_string = \"\"\"For a long time I used to go to bed early. Sometimes, \\ when I had put out my candle, my eyes would close so quickly that I had not even \\ time to say \u201cI\u2019m going to sleep.\u201d\"\"\" from some.deep.module.inside.a.module import a_nice_function , another_nice_function , \\ yet_another_nice_function pythonic my_very_big_string = ( \"For a long time I used to go to bed early. Sometimes, \" \"when I had put out my candle, my eyes would close so quickly \" \"that I had not even time to say \u201cI\u2019m going to sleep.\u201d\" ) from some.deep.module.inside.a.module import ( a_nice_function , another_nice_function , yet_another_nice_function ) 11. \u663e\u5f0f\u4ee3\u7801 bad def make_complex ( * args ): x , y = args return dict ( ** locals ()) pythonic def make_complex ( x , y ): return { 'x' : x , 'y' : y } 12. \u4f7f\u7528\u5360\u4f4d\u7b26 pythonic filename = 'foobar.txt' basename , _ , ext = filename . rpartition ( '.' ) 13. \u94fe\u5f0f\u6bd4\u8f83 bad if age > 18 and age < 60 : print ( \"young man\" ) pythonic if 18 < age < 60 : print ( \"young man\" ) 14. \u4e09\u76ee\u8fd0\u7b97\u7b26 bad if a > 2 : b = 2 else : b = 1 #b = 2 pythonic a = 3 b = 2 if a > 2 else 1 #b = 2","title":"Pythonic \u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#00","text":"bad tmp = a a = b b = tmp pythonic a , b = b , a","title":"00.\u00a0\u53d8\u91cf\u4ea4\u6362"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#01","text":"bad my_list = [] for i in range ( 10 ): my_list . append ( i * 2 ) pythonic my_list = [ i * 2 for i in range ( 10 )]","title":"01.\u00a0\u5217\u8868\u63a8\u5bfc"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#02","text":"\u867d\u7136\u5217\u8868\u63a8\u5bfc\u5f0f\u7531\u4e8e\u5176\u7b80\u6d01\u6027\u53ca\u8868\u8fbe\u6027\uff0c\u88ab\u5e7f\u53d7\u63a8\u5d07\u3002 \u4f46\u662f\u6709\u8bb8\u591a\u53ef\u4ee5\u5199\u6210\u5355\u884c\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e0d\u662f\u597d\u7684\u505a\u6cd5\u3002 bad print 'one' ; print 'two' if x == 1 : print 'one' if < complex comparison > and < other complex comparison > : # do something pythonic print 'one' print 'two' if x == 1 : print 'one' cond1 = < complex comparison > cond2 = < other complex comparison > if cond1 and cond2 : # do something","title":"02.\u00a0\u5355\u884c\u8868\u8fbe\u5f0f"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#03","text":"bad for i in range ( len ( my_list )): print ( i , \"-->\" , my_list [ i ]) pythonic for i , item in enumerate ( my_list ): print ( i , \"-->\" , item )","title":"03.\u00a0\u5e26\u7d22\u5f15\u904d\u5386"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#04","text":"pythonic a , * rest = [ 1 , 2 , 3 ] # a = 1, rest = [2, 3] a , * middle , c = [ 1 , 2 , 3 , 4 ] # a = 1, middle = [2, 3], c = 4","title":"04.\u00a0\u5e8f\u5217\u89e3\u5305"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#05","text":"bad letters = [ 's' , 'p' , 'a' , 'm' ] s = \"\" for let in letters : s += let pythonic letters = [ 's' , 'p' , 'a' , 'm' ] word = '' . join ( letters )","title":"05.\u00a0\u5b57\u7b26\u4e32\u62fc\u63a5"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#06","text":"bad if attr == True : print ( 'True!' ) if attr == None : print ( 'attr is None!' ) pythonic if attr : print ( 'attr is truthy!' ) if not attr : print ( 'attr is falsey!' ) if attr is None : print ( 'attr is None!' )","title":"06.\u00a0\u771f\u5047\u5224\u65ad"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#07","text":"bad d = { 'hello' : 'world' } if d . has_key ( 'hello' ): print ( d [ 'hello' ]) # prints 'world' else : print ( 'default_value' ) pythonic d = { 'hello' : 'world' } print ( d . get ( 'hello' , 'default_value' )) # prints 'world' print ( d . get ( 'thingy' , 'default_value' )) # prints 'default_value' # Or: if 'hello' in d : print ( d [ 'hello' ])","title":"07.\u00a0\u8bbf\u95ee\u5b57\u5178\u5143\u7d20"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#08","text":"bad a = [ 3 , 4 , 5 ] b = [] for i in a : if i > 4 : b . append ( i ) pythonic a = [ 3 , 4 , 5 ] b = [ i for i in a if i > 4 ] # Or: b = filter ( lambda x : x > 4 , a ) bad a = [ 3 , 4 , 5 ] for i in range ( len ( a )): a [ i ] += 3 pythonic a = [ 3 , 4 , 5 ] a = [ i + 3 for i in a ] # Or: a = map ( lambda i : i + 3 , a )","title":"08.\u00a0\u64cd\u4f5c\u5217\u8868"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#09","text":"bad f = open ( 'file.txt' ) a = f . read () print ( a ) f . close () pythonic with open ( 'file.txt' ) as f : for line in f : print ( line )","title":"09.\u00a0\u6587\u4ef6\u8bfb\u53d6"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#10","text":"bad my_very_big_string = \"\"\"For a long time I used to go to bed early. Sometimes, \\ when I had put out my candle, my eyes would close so quickly that I had not even \\ time to say \u201cI\u2019m going to sleep.\u201d\"\"\" from some.deep.module.inside.a.module import a_nice_function , another_nice_function , \\ yet_another_nice_function pythonic my_very_big_string = ( \"For a long time I used to go to bed early. Sometimes, \" \"when I had put out my candle, my eyes would close so quickly \" \"that I had not even time to say \u201cI\u2019m going to sleep.\u201d\" ) from some.deep.module.inside.a.module import ( a_nice_function , another_nice_function , yet_another_nice_function )","title":"10.\u00a0\u4ee3\u7801\u7eed\u884c"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#11","text":"bad def make_complex ( * args ): x , y = args return dict ( ** locals ()) pythonic def make_complex ( x , y ): return { 'x' : x , 'y' : y }","title":"11.\u00a0\u663e\u5f0f\u4ee3\u7801"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#12","text":"pythonic filename = 'foobar.txt' basename , _ , ext = filename . rpartition ( '.' )","title":"12.\u00a0\u4f7f\u7528\u5360\u4f4d\u7b26"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#13","text":"bad if age > 18 and age < 60 : print ( \"young man\" ) pythonic if 18 < age < 60 : print ( \"young man\" )","title":"13.\u00a0\u94fe\u5f0f\u6bd4\u8f83"},{"location":"Programming/01.%20Python/Pythonic%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/#14","text":"bad if a > 2 : b = 2 else : b = 1 #b = 2 pythonic a = 3 b = 2 if a > 2 else 1 #b = 2","title":"14.\u00a0\u4e09\u76ee\u8fd0\u7b97\u7b26"},{"location":"Programming/01.%20Python/pip%20%E5%AE%89%E8%A3%85%E6%8D%A2%E6%88%90%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/","text":"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/ \u56fd\u5185\u6e90\u6709\uff1a 1. \u963f\u91cc\u4e91 http://mirrors.aliyun.com/pypi/simple/ 2. \u8c46\u74e3(douban) http://pypi.douban.com/simple/ 3. \u6e05\u534e\u5927\u5b66 https://pypi.tuna.tsinghua.edu.cn/simple/ 4. \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 http://pypi.mirrors.ustc.edu.cn/simple/ \u4e34\u65f6\u4f7f\u7528\uff1a pip install pyqt5 -i http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com \u8bbe\u4e3a\u9ed8\u8ba4 \u5347\u7ea7 pip \u5230\u6700\u65b0\u7684\u7248\u672c (>=10.0.0) \u540e\u8fdb\u884c\u914d\u7f6e\uff1a pip install pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple","title":"Pip \u5b89\u88c5\u6362\u6210\u56fd\u5185\u955c\u50cf\u6e90"},{"location":"Programming/01.%20Python/pip%20%E5%AE%89%E8%A3%85%E6%8D%A2%E6%88%90%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/#_1","text":"\u5347\u7ea7 pip \u5230\u6700\u65b0\u7684\u7248\u672c (>=10.0.0) \u540e\u8fdb\u884c\u914d\u7f6e\uff1a pip install pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple","title":"\u8bbe\u4e3a\u9ed8\u8ba4"},{"location":"Programming/01.%20Python/python-opencv%20%E6%95%99%E7%A8%8B/","text":"http://codec.wang/#/opencv/","title":"Python opencv \u6559\u7a0b"},{"location":"Programming/01.%20Python/socketserver/","text":"\u6a21\u5757\u7b80\u4ecb socket \u7f16\u7a0b\u8fc7\u4e8e\u5e95\u5c42\uff0c\u7f16\u7a0b\u867d\u7136\u6709\u5957\u8def\uff0c\u4f46\u662f\u60f3\u8981\u5199\u51fa\u5065\u58ee\u7684\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u5f88\u591a\u8bed\u8a00\u90fd\u5bf9 socket \u5e95\u5c42 API \u8fdb\u884c\u5c01\u88c5\uff0cPython \u7684\u5c01\u88c5\u5c31\u662f\u2014 socketserver \u6a21\u5757\u3002\u5b83\u662f\u7f51\u7edc\u670d\u52a1\u7f16\u7a0b\u6846\u67b6\uff0c\u4fbf\u4e8e\u5feb\u901f\u5f00\u53d1\u3002 \u7c7b\u7684\u7ee7\u627f\u5173\u7cfb +------------+ | BaseServer | +------------+ | v +-----------+ +------------------+ | TCPServer |------->| UnixStreamServer | +-----------+ +------------------+ | v +-----------+ +--------------------+ | UDPServer |------->| UnixDatagramServer | +-----------+ +--------------------+ \u7c7b\u7b80\u4ecb socketserver \u7b80\u5316\u4e86\u7f51\u7edc\u670d\u52a1\u5668\u7684\u7f16\u5199\uff0c\u5b83\u6709 4 \u4e2a\u540c\u6b65\u7c7b\uff1a 1. TCPServer 2. UnixStreamServer 3. UDPServer 4. UnixDatagramServer 2 \u4e2a Mixin \u7c7b\uff0c\u7528\u6765\u652f\u6301\u5f02\u6b65\uff1a 1. ForkingMixIn 2. ThreadingMixIn ForkingMixIn \u548c Forking \u7c7b\u53ea\u5728\u652f\u6301 fork() \u7684 POSIX \u5e73\u53f0\u53ef\u7528\u3002 socketserver \u63d0\u4f9b\u4e86 4 \u4e2a MixIn \u7c7b\uff1a - ForkingTCPServer - ForkingUDPServer - ThreadingTCPServer - ThreadingUDPServer","title":"\u6a21\u5757\u7b80\u4ecb"},{"location":"Programming/01.%20Python/socketserver/#_1","text":"socket \u7f16\u7a0b\u8fc7\u4e8e\u5e95\u5c42\uff0c\u7f16\u7a0b\u867d\u7136\u6709\u5957\u8def\uff0c\u4f46\u662f\u60f3\u8981\u5199\u51fa\u5065\u58ee\u7684\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u5f88\u591a\u8bed\u8a00\u90fd\u5bf9 socket \u5e95\u5c42 API \u8fdb\u884c\u5c01\u88c5\uff0cPython \u7684\u5c01\u88c5\u5c31\u662f\u2014 socketserver \u6a21\u5757\u3002\u5b83\u662f\u7f51\u7edc\u670d\u52a1\u7f16\u7a0b\u6846\u67b6\uff0c\u4fbf\u4e8e\u5feb\u901f\u5f00\u53d1\u3002","title":"\u6a21\u5757\u7b80\u4ecb"},{"location":"Programming/01.%20Python/socketserver/#_2","text":"+------------+ | BaseServer | +------------+ | v +-----------+ +------------------+ | TCPServer |------->| UnixStreamServer | +-----------+ +------------------+ | v +-----------+ +--------------------+ | UDPServer |------->| UnixDatagramServer | +-----------+ +--------------------+","title":"\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb"},{"location":"Programming/01.%20Python/socketserver/#_3","text":"socketserver \u7b80\u5316\u4e86\u7f51\u7edc\u670d\u52a1\u5668\u7684\u7f16\u5199\uff0c\u5b83\u6709 4 \u4e2a\u540c\u6b65\u7c7b\uff1a 1. TCPServer 2. UnixStreamServer 3. UDPServer 4. UnixDatagramServer 2 \u4e2a Mixin \u7c7b\uff0c\u7528\u6765\u652f\u6301\u5f02\u6b65\uff1a 1. ForkingMixIn 2. ThreadingMixIn ForkingMixIn \u548c Forking \u7c7b\u53ea\u5728\u652f\u6301 fork() \u7684 POSIX \u5e73\u53f0\u53ef\u7528\u3002 socketserver \u63d0\u4f9b\u4e86 4 \u4e2a MixIn \u7c7b\uff1a - ForkingTCPServer - ForkingUDPServer - ThreadingTCPServer - ThreadingUDPServer","title":"\u7c7b\u7b80\u4ecb"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/","text":"\u5173\u4e8e xlwings xlwings \u662f\u4e00\u4e2a BSD \u8bb8\u53ef Python \u5e93\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ece Excel \u8c03\u7528 Python\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 xlwings\u5b98\u7f51\uff1a https://docs.xlwings.org/en/latest/index.html xlwings \u7684\u7279\u8272 xlwings \u80fd\u591f\u975e\u5e38\u65b9\u4fbf\u7684\u8bfb\u5199 Excel \u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u8fdb\u884c\u5355\u5143\u683c\u683c\u5f0f\u7684\u4fee\u6539\u3002 \u53ef\u4ee5\u548c matplotlib \u4ee5\u53ca pandas \u65e0\u7f1d\u8fde\u63a5\uff08\u8fd9\u662f\u4e24\u4e2a\u6570\u636e\u5206\u6790\u5e38\u7528\u7684 Python \u7b2c\u4e09\u65b9\u5e93\uff09\u3002 \u53ef\u4ee5\u8c03\u7528 Excel \u6587\u4ef6\u4e2d VBA \u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u8ba9 VBA \u8c03\u7528\u7528 Python \u5199\u7684\u7a0b\u5e8f\u3002 \u5f00\u6e90\u514d\u8d39\uff0c\u4e00\u76f4\u5728\u66f4\u65b0\u3002 xlwings \u5e94\u7528 [[Tkinter\u7ec3\u624b\u9879\u76ee]] xlwings \u4f7f\u7528\u4e2d\u9047\u5230\u7684\u5751 \u867d\u7136 xlwings \u5728\u6280\u672f\u4e0a\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u53ea\u8981\u4f60\u81f3\u5c11\u62e5\u6709 v0.13.0 \u5e76\u575a\u6301\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\uff0c\u5b83\u4ecd\u7136\u5f88\u5bb9\u6613\u5728\u7ebf\u7a0b\u4e2d\u4f7f\u7528\u5b83\uff1a \u4e0d\u8981\u5c06 xlwings \u5bf9\u8c61\u4f20\u9012\u7ed9\u7ebf\u7a0b \u3002 \u4ee5\u4e0a\u662f\u5b98\u65b9\u6587\u6863\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u8fc7\u4e8e\u7b80\u5355\u3002 xlwings \u64cd\u4f5c\u7c7b\u5b9e\u4f8b\uff1a ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\u5b9a\u4e49\u6587\u4ef6 ''' import xlwings as xw import pythoncom from datetime import datetime class FileChecker ( object ): ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\uff0c\u5b8c\u6210 Excel \u914d\u7f6e\u6587\u4ef6\u7684\u68c0\u6d4b\u529f\u80fd ''' def __init__ ( self , filepath : str , progress_callback = None , info_callback = None ) -> None : ''' \u6784\u9020\u51fd\u6570 \u53c2\u6570\u8bf4\u660e\uff1aprogress_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u8bbe\u7f6e\u8fdb\u5ea6\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a float \u578b\u7684\u53c2\u6570\uff0c\u6709\u6548\u503c\u4e3a 0.0~100.0 \u51fd\u6570\u539f\u578b\uff1aset_progress(progress:float=0.0) info_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u663e\u793a\u4fe1\u606f\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a str \u578b\u7684\u53c2\u6570\u548c\u4e00\u4e2a bool \u578b\u7684\u53c2\u6570 \u51fd\u6570\u539f\u578b\uff1ashow_info(info:str='', show_message_box:bool=false) ''' super () . __init__ () #self.__app = xw.App(visible=False, add_book=False) #self.__book = self.__app.books.open(filepath, read_only=True) #self.__sheet = self.__book.sheets[0] #self.__used_range = self.__sheet.used_range #self.__rows_count = self.__used_range.rows.count #self.__cols_count = self.__used_range.columns.count pythoncom . CoInitialize () app = xw . App ( visible = False , add_book = False ) book = app . books . open ( filepath , read_only = True ) sheet = book . sheets [ 0 ] sheet . activate () used_range = sheet . used_range self . __app_pid = app . pid self . __rows_count = used_range . rows . count self . __cols_count = used_range . columns . count self . __progress_callback = progress_callback self . __info_callback = info_callback self . __error_count = 0 def __del__ ( self ) -> None : ''' \u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u76f8\u5173\u8d44\u6e90 ''' #self.__book.close() #self.__app.quit() #self.__app.books.active.close() #self.__app.kill() app = xw . apps [ self . __app_pid ] book = app . books . active book . close () app . kill () pythoncom . CoUninitialize () def start_check ( self ) -> bool : ''' \u5f00\u59cb\u8fdb\u884c\u6587\u4ef6\u68c0\u6d4b \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header (): return False self . __check_vehicle_data () self . __summary () return True def __check_header ( self ) -> bool : ''' \u68c0\u6d4bExcel\u8868\u683c\u8868\u5934 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header_vehicle_code (): return False if not self . __check_header_ecu_name (): return False if not self . __check_ecu_info_col (): return False return True def __check_header_vehicle_code ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u8f66\u8f86\u89c4\u683c\u7801\uff08\u5373\u7b2c 1 \u884c\u7b2c 1 \u5217\uff0c\u8f66\u8f86\u89c4\u683c\u7801\u5fc5\u987b\u5728\u8fd9\u4e2a\u5355\u5143\u683c\uff0c\u5426\u5219\u89c6\u4e3a\u9519\u8bef\uff09 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if '\u8f66\u578b\u89c4\u683c\u53f7' != xw . Range (( 'A1' )) . value : self . __error_count += 1 self . __info_callback ( '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8f66\u578b\u89c4\u683c\u7801\u5fc5\u987b\u4e3a\u8868\u683c\u7684\u7b2c 1 \u884c\u7b2c 1 \u5217\uff01 \\n ' . format ( datetime . now ()), True ) return False return True def __check_header_ecu_name ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u540d\u79f0\uff0c\u63a7\u5236\u5668\u540d\u79f0\u6240\u5728\u7684\u5355\u5143\u683c\u662f3\u4e2a\u5355\u5143\u683c\u5408\u5e76\u800c\u6210\u7684\u4e00\u4e2a\u5927\u5355\u5143\u683c \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' first_row = xw . Range (( 1 , 3 ), ( 1 , self . __cols_count )) error = False cell_pos = '' ecu_name = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u5f53\u5217\u7d22\u5f15\u4e3a3\u7684\u500d\u6570\u65f6\uff0c\u53d6\u5230\u6709\u6548\u540d\u79f0\uff0c\u5426\u5219\u5e94\u4e3a\u65e0\u6548\u5355\u5143\u683c for cell in first_row : cell_pos = cell . get_address ( False , False ) if cell . merge_cells : if 'None' != str ( cell . value ) . strip (): ecu_name = str ( cell . value ) . strip () else : if 0 == cell . column % 3 : error = True break else : error = True break self . __progress_callback ( 1 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u63a7\u5236\u5668 {} \u4fe1\u606f\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), ecu_name , cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_ecu_info_col ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u4fe1\u606f\uff0c\u5373\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' second_row = xw . Range (( 2 , 3 ), ( 2 , self . __cols_count )) error = False cell_pos = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u6bcf3\u5217\u4e3a\u4e00\u7ec4\uff0c\u4f9d\u6b21\u4e3a\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 for cell in second_row : cell_str = str ( cell . value ) . strip () cell_pos = cell . get_address ( False , False ) if (( 0 == ( cell . column % 3 )) and ( '\u96f6\u4ef6\u53f7' != cell_str )) or \\ (( 1 == ( cell . column % 3 )) and ( '\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7' != cell_str )) or \\ (( 2 == ( cell . column % 3 )) and ( '\u914d\u7f6e\u7801' != cell_str )): error = True break self . __progress_callback ( 2 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8868\u683c\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_vehicle_data ( self ) -> bool : ''' \u9010\u884c\u68c0\u6d4b\u8f66\u578b\u914d\u7f6e\u5185\u5bb9 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' all_range = xw . Range (( 3 , 1 ), ( self . __rows_count , self . __cols_count )) # \u8f66\u578b\u6570\u636e\u4ece\u7b2c3\u884c\u5f00\u59cb\uff0c\u6bcf\u4e2a\u8f66\u578b\u7684\u5177\u4f53\u6570\u636e\u4fe1\u606f\u4e3a\u4e00\u884c for row in all_range . rows : vehicle_code = str ( row [ 0 ] . value ) . strip () if 'None' == vehicle_code : continue vehicle_name = str ( row [ 1 ] . value ) . strip () if 'None' == vehicle_name : msg = '[ {} ]\u8f66\u8f86\u89c4\u683c\u7801 {} \u5bf9\u5e94\u8f66\u578b\u540d\u79f0\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_code , row [ 1 ] . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) for col_index in range ( 3 , self . __cols_count + 1 ): self . __check_cell_data ( vehicle_name , row , col_index ) self . __progress_callback ( row . row / self . __rows_count * 100 ) return True def __check_cell_data ( self , vehicle_name : str , row : xw . Range , col_index : int ) -> None : ''' \u68c0\u6d4b\u76ee\u6807\u5355\u5143\u683c\u7684\u6570\u636e\uff0c\u82e5\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f\uff0c\u76ee\u524d\u6709\u4e24\u79cd\u9519\u8bef\u60c5\u51b5\uff1a 1.\u67d0\u4e00\u4e2a\u63a7\u5236\u5668\u7684\u201c\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u201d\u6709\u5185\u5bb9\uff0c\u800c\u201c\u96f6\u4ef6\u53f7\u201d\u4e3a\u7a7a\uff1b 2.\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32\u5305\u542b\"ERROR\"\u5b50\u4e32\u3002 ''' cell_data = str ( row [ col_index - 1 ] . value ) . strip () # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 if 1 == ( col_index % 3 ): # \u68c0\u67e5\u96f6\u4ef6\u53f7\u662f\u5426\u4e3a\u7a7a part_number = str ( row [ col_index - 2 ] . value ) . strip () if (( '' == part_number ) or ( 'None' == part_number )) and \\ ( '' != cell_data ): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index - 1 )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) if - 1 != cell_data . find ( 'ERROR' ): msg = '' # \u96f6\u4ef6\u53f7 if ( 0 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 elif ( 1 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u914d\u7f6e\u7801 elif ( 2 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 2 )) . value ) . strip () msg = '[ {} ] {} {} \u914d\u7f6e\u7801\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) def __summary ( self ) -> None : ''' \u68c0\u6d4b\u5b8c\u6210\u540e\u751f\u6210\u603b\u7ed3\u4fe1\u606f\u5b57\u7b26\u4e32 ''' msg = '' if 0 == self . __error_count : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u672a\u53d1\u73b0\u5f02\u5e38\uff01 \\n ' . format ( datetime . now ()) else : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u603b\u5171\u53d1\u73b0 {} \u5904\u5f02\u5e38\uff01 \\n ' . format ( datetime . now (), self . __error_count ) self . __info_callback ( msg ) if '__main__' == __name__ : pass \u4ee5\u4e0a\u4ee3\u7801\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\uff0c\u5c01\u88c5\u4e86 xlwings \u76f8\u5173\u64cd\u4f5c\u3002 \u5982\u679c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58xlwings\u5bf9\u8c61\uff0c\u5982 xlwings.app \u3001 xlwings.book \u7b49\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5229\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u53bb\u91ca\u653e\u8d44\u6e90\uff0c\u5728\u5355\u7ebf\u7a0b\u4e2d\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8c03\u7528\u8be5\u7c7b\u5c31\u4f1a\u51fa\u9519\u3002\u9519\u8bef\u63d0\u793a\u5982\u4e0b\u56fe\u6240\u793a\uff1a ![[xlwings_error.png]] \u7ecf\u8fc7\u9a8c\u8bc1\uff0c\u80fd\u6b63\u786e\u8fd0\u884c\u7684\u4ee3\u7801\u5982\u4e0a\uff0c\u601d\u8def\u662f\u4e0d\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58 xlwings \u5bf9\u8c61\uff0c\u800c\u662f\u65b0\u5efa xlwings.app \u5bf9\u8c61\u540e\uff0c\u4fdd\u5b58\u8be5\u5bf9\u8c61\u7684 PID \uff0c\u540e\u7eed\u53ef\u901a\u8fc7 xlwings.apps[PID] \u65b9\u5f0f\u53d6\u5f97 xlwings.app \u5bf9\u8c61\uff0c\u518d\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff08\u5982\u83b7\u53d6 xlwings.book \u5bf9\u8c61\uff0c\u9000\u51fa\u8fdb\u7a0b\u7b49\u7b49\uff09\u3002 \u53ef\u4ee5\u4e0d\u6307\u5b9a\u5de5\u4f5c\u8868\u7684\u5730\u5740\uff0c\u76f4\u63a5\u4e0e\u7535\u8111\u91cc\u7684 \u6d3b\u52a8\u8868\u683c \u8fdb\u884c\u4ea4\u4e92\u3002 second_row = xw . Range (( 2 , 3 ), ( 2 , self . __cols_count )) \u603b\u7ed3\uff1a\u5728\u591a\u7ebf\u7a0b\u573a\u666f\u4e0b\uff0c\u4e0d\u8981\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58 xlwings \u5bf9\u8c61\u3002 \u9000\u51fa\u7a0b\u5e8f xlwings.app.quit() \u5e76\u4e0d\u80fd\u7ed3\u675fExcel\u8fdb\u7a0b\uff0c\u5e94\u4f7f\u7528 xlwings.app.kill() \u3002 \u5728\u7ebf\u7a0b\u4e2d\u4f7f\u7528 xlwings \u5728\u6253\u5f00 Excel \u4e4b\u524d\uff0c\u5e94\u8c03\u7528\uff1a pythoncom . CoInitialize () \u7ed3\u675f\u540e\u6e05\u7406\uff1a pythoncom . CoUninitialize ()","title":"\u5173\u4e8e xlwings"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#xlwings","text":"xlwings \u662f\u4e00\u4e2a BSD \u8bb8\u53ef Python \u5e93\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ece Excel \u8c03\u7528 Python\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 xlwings\u5b98\u7f51\uff1a https://docs.xlwings.org/en/latest/index.html","title":"\u5173\u4e8e xlwings"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#xlwings_1","text":"xlwings \u80fd\u591f\u975e\u5e38\u65b9\u4fbf\u7684\u8bfb\u5199 Excel \u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u5e76\u4e14\u80fd\u591f\u8fdb\u884c\u5355\u5143\u683c\u683c\u5f0f\u7684\u4fee\u6539\u3002 \u53ef\u4ee5\u548c matplotlib \u4ee5\u53ca pandas \u65e0\u7f1d\u8fde\u63a5\uff08\u8fd9\u662f\u4e24\u4e2a\u6570\u636e\u5206\u6790\u5e38\u7528\u7684 Python \u7b2c\u4e09\u65b9\u5e93\uff09\u3002 \u53ef\u4ee5\u8c03\u7528 Excel \u6587\u4ef6\u4e2d VBA \u5199\u597d\u7684\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u8ba9 VBA \u8c03\u7528\u7528 Python \u5199\u7684\u7a0b\u5e8f\u3002 \u5f00\u6e90\u514d\u8d39\uff0c\u4e00\u76f4\u5728\u66f4\u65b0\u3002","title":"xlwings \u7684\u7279\u8272"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#xlwings_2","text":"[[Tkinter\u7ec3\u624b\u9879\u76ee]]","title":"xlwings \u5e94\u7528"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#xlwings_3","text":"\u867d\u7136 xlwings \u5728\u6280\u672f\u4e0a\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u53ea\u8981\u4f60\u81f3\u5c11\u62e5\u6709 v0.13.0 \u5e76\u575a\u6301\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\uff0c\u5b83\u4ecd\u7136\u5f88\u5bb9\u6613\u5728\u7ebf\u7a0b\u4e2d\u4f7f\u7528\u5b83\uff1a \u4e0d\u8981\u5c06 xlwings \u5bf9\u8c61\u4f20\u9012\u7ed9\u7ebf\u7a0b \u3002 \u4ee5\u4e0a\u662f\u5b98\u65b9\u6587\u6863\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u8fc7\u4e8e\u7b80\u5355\u3002 xlwings \u64cd\u4f5c\u7c7b\u5b9e\u4f8b\uff1a ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\u5b9a\u4e49\u6587\u4ef6 ''' import xlwings as xw import pythoncom from datetime import datetime class FileChecker ( object ): ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\uff0c\u5b8c\u6210 Excel \u914d\u7f6e\u6587\u4ef6\u7684\u68c0\u6d4b\u529f\u80fd ''' def __init__ ( self , filepath : str , progress_callback = None , info_callback = None ) -> None : ''' \u6784\u9020\u51fd\u6570 \u53c2\u6570\u8bf4\u660e\uff1aprogress_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u8bbe\u7f6e\u8fdb\u5ea6\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a float \u578b\u7684\u53c2\u6570\uff0c\u6709\u6548\u503c\u4e3a 0.0~100.0 \u51fd\u6570\u539f\u578b\uff1aset_progress(progress:float=0.0) info_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u663e\u793a\u4fe1\u606f\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a str \u578b\u7684\u53c2\u6570\u548c\u4e00\u4e2a bool \u578b\u7684\u53c2\u6570 \u51fd\u6570\u539f\u578b\uff1ashow_info(info:str='', show_message_box:bool=false) ''' super () . __init__ () #self.__app = xw.App(visible=False, add_book=False) #self.__book = self.__app.books.open(filepath, read_only=True) #self.__sheet = self.__book.sheets[0] #self.__used_range = self.__sheet.used_range #self.__rows_count = self.__used_range.rows.count #self.__cols_count = self.__used_range.columns.count pythoncom . CoInitialize () app = xw . App ( visible = False , add_book = False ) book = app . books . open ( filepath , read_only = True ) sheet = book . sheets [ 0 ] sheet . activate () used_range = sheet . used_range self . __app_pid = app . pid self . __rows_count = used_range . rows . count self . __cols_count = used_range . columns . count self . __progress_callback = progress_callback self . __info_callback = info_callback self . __error_count = 0 def __del__ ( self ) -> None : ''' \u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u76f8\u5173\u8d44\u6e90 ''' #self.__book.close() #self.__app.quit() #self.__app.books.active.close() #self.__app.kill() app = xw . apps [ self . __app_pid ] book = app . books . active book . close () app . kill () pythoncom . CoUninitialize () def start_check ( self ) -> bool : ''' \u5f00\u59cb\u8fdb\u884c\u6587\u4ef6\u68c0\u6d4b \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header (): return False self . __check_vehicle_data () self . __summary () return True def __check_header ( self ) -> bool : ''' \u68c0\u6d4bExcel\u8868\u683c\u8868\u5934 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header_vehicle_code (): return False if not self . __check_header_ecu_name (): return False if not self . __check_ecu_info_col (): return False return True def __check_header_vehicle_code ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u8f66\u8f86\u89c4\u683c\u7801\uff08\u5373\u7b2c 1 \u884c\u7b2c 1 \u5217\uff0c\u8f66\u8f86\u89c4\u683c\u7801\u5fc5\u987b\u5728\u8fd9\u4e2a\u5355\u5143\u683c\uff0c\u5426\u5219\u89c6\u4e3a\u9519\u8bef\uff09 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if '\u8f66\u578b\u89c4\u683c\u53f7' != xw . Range (( 'A1' )) . value : self . __error_count += 1 self . __info_callback ( '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8f66\u578b\u89c4\u683c\u7801\u5fc5\u987b\u4e3a\u8868\u683c\u7684\u7b2c 1 \u884c\u7b2c 1 \u5217\uff01 \\n ' . format ( datetime . now ()), True ) return False return True def __check_header_ecu_name ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u540d\u79f0\uff0c\u63a7\u5236\u5668\u540d\u79f0\u6240\u5728\u7684\u5355\u5143\u683c\u662f3\u4e2a\u5355\u5143\u683c\u5408\u5e76\u800c\u6210\u7684\u4e00\u4e2a\u5927\u5355\u5143\u683c \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' first_row = xw . Range (( 1 , 3 ), ( 1 , self . __cols_count )) error = False cell_pos = '' ecu_name = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u5f53\u5217\u7d22\u5f15\u4e3a3\u7684\u500d\u6570\u65f6\uff0c\u53d6\u5230\u6709\u6548\u540d\u79f0\uff0c\u5426\u5219\u5e94\u4e3a\u65e0\u6548\u5355\u5143\u683c for cell in first_row : cell_pos = cell . get_address ( False , False ) if cell . merge_cells : if 'None' != str ( cell . value ) . strip (): ecu_name = str ( cell . value ) . strip () else : if 0 == cell . column % 3 : error = True break else : error = True break self . __progress_callback ( 1 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u63a7\u5236\u5668 {} \u4fe1\u606f\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), ecu_name , cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_ecu_info_col ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u4fe1\u606f\uff0c\u5373\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' second_row = xw . Range (( 2 , 3 ), ( 2 , self . __cols_count )) error = False cell_pos = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u6bcf3\u5217\u4e3a\u4e00\u7ec4\uff0c\u4f9d\u6b21\u4e3a\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 for cell in second_row : cell_str = str ( cell . value ) . strip () cell_pos = cell . get_address ( False , False ) if (( 0 == ( cell . column % 3 )) and ( '\u96f6\u4ef6\u53f7' != cell_str )) or \\ (( 1 == ( cell . column % 3 )) and ( '\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7' != cell_str )) or \\ (( 2 == ( cell . column % 3 )) and ( '\u914d\u7f6e\u7801' != cell_str )): error = True break self . __progress_callback ( 2 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8868\u683c\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_vehicle_data ( self ) -> bool : ''' \u9010\u884c\u68c0\u6d4b\u8f66\u578b\u914d\u7f6e\u5185\u5bb9 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' all_range = xw . Range (( 3 , 1 ), ( self . __rows_count , self . __cols_count )) # \u8f66\u578b\u6570\u636e\u4ece\u7b2c3\u884c\u5f00\u59cb\uff0c\u6bcf\u4e2a\u8f66\u578b\u7684\u5177\u4f53\u6570\u636e\u4fe1\u606f\u4e3a\u4e00\u884c for row in all_range . rows : vehicle_code = str ( row [ 0 ] . value ) . strip () if 'None' == vehicle_code : continue vehicle_name = str ( row [ 1 ] . value ) . strip () if 'None' == vehicle_name : msg = '[ {} ]\u8f66\u8f86\u89c4\u683c\u7801 {} \u5bf9\u5e94\u8f66\u578b\u540d\u79f0\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_code , row [ 1 ] . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) for col_index in range ( 3 , self . __cols_count + 1 ): self . __check_cell_data ( vehicle_name , row , col_index ) self . __progress_callback ( row . row / self . __rows_count * 100 ) return True def __check_cell_data ( self , vehicle_name : str , row : xw . Range , col_index : int ) -> None : ''' \u68c0\u6d4b\u76ee\u6807\u5355\u5143\u683c\u7684\u6570\u636e\uff0c\u82e5\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f\uff0c\u76ee\u524d\u6709\u4e24\u79cd\u9519\u8bef\u60c5\u51b5\uff1a 1.\u67d0\u4e00\u4e2a\u63a7\u5236\u5668\u7684\u201c\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u201d\u6709\u5185\u5bb9\uff0c\u800c\u201c\u96f6\u4ef6\u53f7\u201d\u4e3a\u7a7a\uff1b 2.\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32\u5305\u542b\"ERROR\"\u5b50\u4e32\u3002 ''' cell_data = str ( row [ col_index - 1 ] . value ) . strip () # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 if 1 == ( col_index % 3 ): # \u68c0\u67e5\u96f6\u4ef6\u53f7\u662f\u5426\u4e3a\u7a7a part_number = str ( row [ col_index - 2 ] . value ) . strip () if (( '' == part_number ) or ( 'None' == part_number )) and \\ ( '' != cell_data ): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index - 1 )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) if - 1 != cell_data . find ( 'ERROR' ): msg = '' # \u96f6\u4ef6\u53f7 if ( 0 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 elif ( 1 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u914d\u7f6e\u7801 elif ( 2 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 2 )) . value ) . strip () msg = '[ {} ] {} {} \u914d\u7f6e\u7801\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) def __summary ( self ) -> None : ''' \u68c0\u6d4b\u5b8c\u6210\u540e\u751f\u6210\u603b\u7ed3\u4fe1\u606f\u5b57\u7b26\u4e32 ''' msg = '' if 0 == self . __error_count : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u672a\u53d1\u73b0\u5f02\u5e38\uff01 \\n ' . format ( datetime . now ()) else : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u603b\u5171\u53d1\u73b0 {} \u5904\u5f02\u5e38\uff01 \\n ' . format ( datetime . now (), self . __error_count ) self . __info_callback ( msg ) if '__main__' == __name__ : pass \u4ee5\u4e0a\u4ee3\u7801\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\uff0c\u5c01\u88c5\u4e86 xlwings \u76f8\u5173\u64cd\u4f5c\u3002 \u5982\u679c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58xlwings\u5bf9\u8c61\uff0c\u5982 xlwings.app \u3001 xlwings.book \u7b49\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5229\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u53bb\u91ca\u653e\u8d44\u6e90\uff0c\u5728\u5355\u7ebf\u7a0b\u4e2d\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8c03\u7528\u8be5\u7c7b\u5c31\u4f1a\u51fa\u9519\u3002\u9519\u8bef\u63d0\u793a\u5982\u4e0b\u56fe\u6240\u793a\uff1a ![[xlwings_error.png]] \u7ecf\u8fc7\u9a8c\u8bc1\uff0c\u80fd\u6b63\u786e\u8fd0\u884c\u7684\u4ee3\u7801\u5982\u4e0a\uff0c\u601d\u8def\u662f\u4e0d\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58 xlwings \u5bf9\u8c61\uff0c\u800c\u662f\u65b0\u5efa xlwings.app \u5bf9\u8c61\u540e\uff0c\u4fdd\u5b58\u8be5\u5bf9\u8c61\u7684 PID \uff0c\u540e\u7eed\u53ef\u901a\u8fc7 xlwings.apps[PID] \u65b9\u5f0f\u53d6\u5f97 xlwings.app \u5bf9\u8c61\uff0c\u518d\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff08\u5982\u83b7\u53d6 xlwings.book \u5bf9\u8c61\uff0c\u9000\u51fa\u8fdb\u7a0b\u7b49\u7b49\uff09\u3002 \u53ef\u4ee5\u4e0d\u6307\u5b9a\u5de5\u4f5c\u8868\u7684\u5730\u5740\uff0c\u76f4\u63a5\u4e0e\u7535\u8111\u91cc\u7684 \u6d3b\u52a8\u8868\u683c \u8fdb\u884c\u4ea4\u4e92\u3002 second_row = xw . Range (( 2 , 3 ), ( 2 , self . __cols_count )) \u603b\u7ed3\uff1a\u5728\u591a\u7ebf\u7a0b\u573a\u666f\u4e0b\uff0c\u4e0d\u8981\u4f7f\u7528\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4fdd\u5b58 xlwings \u5bf9\u8c61\u3002","title":"xlwings \u4f7f\u7528\u4e2d\u9047\u5230\u7684\u5751"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#_1","text":"xlwings.app.quit() \u5e76\u4e0d\u80fd\u7ed3\u675fExcel\u8fdb\u7a0b\uff0c\u5e94\u4f7f\u7528 xlwings.app.kill() \u3002","title":"\u9000\u51fa\u7a0b\u5e8f"},{"location":"Programming/01.%20Python/xlwings%20%E5%AE%9E%E8%B7%B5/#xlwings_4","text":"\u5728\u6253\u5f00 Excel \u4e4b\u524d\uff0c\u5e94\u8c03\u7528\uff1a pythoncom . CoInitialize () \u7ed3\u675f\u540e\u6e05\u7406\uff1a pythoncom . CoUninitialize ()","title":"\u5728\u7ebf\u7a0b\u4e2d\u4f7f\u7528 xlwings"},{"location":"Programming/01.%20Python/Python%20OCR/EasyOCR/","text":"\u5b89\u88c5\uff1a pip install easyocr \u793a\u4f8b\u4ee3\u7801\uff1a import easyocr # \u52a0\u8f7d\u6a21\u578b\uff0c\u5982\u679c\u662fcpu\u73af\u5883\u7684\u8bdd\uff0creader = easyocr.Reader(['ch_sim','en'], gpu = False) reader = easyocr . Reader ([ 'ch_sim' , 'en' ]) result = reader . readtext ( 'ocr_test.png' ) print ( result )","title":"EasyOCR"},{"location":"Programming/01.%20Python/Python%20OCR/Tesseract/","text":"\u9996\u5148\u9700\u8981\u5b89\u88c5 Tesseract\uff0c\u4e0b\u8f7d\u5730\u5740\uff1a https://github.com/UB-Mannheim/tesseract/wiki \u5b89\u88c5 pytesseract\uff1a pip install tesseract \u5728 Python \u811a\u672c\u4e2d\u5f15\u5165 tesseract.exe \u7a0b\u5e8f\uff08\u4fee\u6539 pytesseract.py\uff09\uff1a tesseract_cmd = r 'C:\\Program Files\\Tesseract-OCR\\tesseract.exe' \u793a\u4f8b\u4ee3\u7801\uff1a from PIL import Image from pprint import pprint import pytesseract text = pytesseract . image_to_string ( Image . open ( r 'C:\\Users\\liangxingwei\\Desktop\\20211115162631.png' )) pprint ( text )","title":"Tesseract"},{"location":"Programming/01.%20Python/SFTP/Paramiko%20%E5%BA%93%E7%AE%80%E4%BB%8B/","text":"SSH \u662f\u4e00\u4e2a\u534f\u8bae\uff0cOpenSSH \u662f\u5176\u4e2d\u4e00\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff0cparamiko \u662f Python\u7684\u4e00\u4e2a\u5e93\uff0c\u5b9e\u73b0\u4e86SSHv2 \u534f\u8bae\uff08\u5e95\u5c42\u4f7f\u7528 cryptography\uff09\u3002 \u6709\u4e86 Paramiko \u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 Python \u4ee3\u7801\u4e2d\u76f4\u63a5\u4f7f\u7528 SSH \u534f\u8bae\u5bf9\u8fdc\u7a0b\u670d\u52a1\u5668\u6267\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 ssh \u547d\u4ee4\u5bf9\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u64cd\u4f5c\u3002 \u7531\u4e8e paramiko \u5c5e\u4e8e\u7b2c\u4e09\u65b9\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5148\u884c\u5b89\u88c5 pip3 install paramiko \u3002 Paramiko \u4ecb\u7ecd paramiko \u5305\u542b\u4e24\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a SSHClient \u548c SFTPClient \u3002 - SSHClient \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e Linux \u7684 ssh \u547d\u4ee4\uff0c\u662f\u5bf9 SSH \u4f1a\u8bdd\u7684\u5c01\u88c5\uff0c\u8be5\u7c7b\u5c01\u88c5\u4e86\u4f20\u8f93(Transport)\uff0c\u901a\u9053(Channel)\u53ca SFTPClient \u5efa\u7acb\u7684\u65b9\u6cd5( open_sftp )\uff0c\u901a\u5e38\u7528\u4e8e\u6267\u884c\u8fdc\u7a0b\u547d\u4ee4\u3002 - SFTPClient \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e0eLinux\u7684 sftp \u547d\u4ee4\uff0c\u662f\u5bf9 SFTP \u5ba2\u6237\u7aef\u7684\u5c01\u88c5\uff0c\u7528\u4ee5\u5b9e\u73b0\u8fdc\u7a0b\u6587\u4ef6\u64cd\u4f5c\uff0c\u5982\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u4fee\u6539\u6587\u4ef6\u6743\u9650\u7b49\u64cd\u4f5c\u3002 Paramiko \u4e2d\u7684\u51e0\u4e2a\u57fa\u7840\u540d\u8bcd\uff1a 1. Channel\uff1a\u662f\u4e00\u79cd\u7c7b Socket\uff0c\u4e00\u79cd\u5b89\u5168\u7684 SSH \u4f20\u8f93\u901a\u9053\uff1b 2. Transport\uff1a\u662f\u4e00\u79cd\u52a0\u5bc6\u7684\u4f1a\u8bdd\uff0c\u4f7f\u7528\u65f6\u4f1a\u540c\u6b65\u521b\u5efa\u4e86\u4e00\u4e2a\u52a0\u5bc6\u7684 Tunnels(\u901a\u9053)\uff0c\u8fd9\u4e2a Tunnels\u53eb\u505a Channel\uff1b 3. Session\uff1a\u662f Client \u4e0e Server \u4fdd\u6301\u8fde\u63a5\u7684\u5bf9\u8c61\uff0c\u7528 connect() / start_client() / start_server() \u5f00\u59cb\u4f1a\u8bdd\u3002 SFTPClient \u5e38\u7528\u65b9\u6cd5\u4ecb\u7ecd SFTPCLient \u4f5c\u4e3a\u4e00\u4e2a SFTP \u7684\u5ba2\u6237\u7aef\u5bf9\u8c61\uff0c\u6839\u636e SSH \u4f20\u8f93\u534f\u8bae\u7684 SFTP \u4f1a\u8bdd\uff0c\u5b9e\u73b0\u8fdc\u7a0b\u6587\u4ef6\u64cd\u4f5c\uff0c\u5982\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u6743\u9650\u3001\u72b6\u6001\u3002 from_transport ( cls , t ) #\u521b\u5efa\u4e00\u4e2a\u5df2\u8fde\u901a\u7684SFTP\u5ba2\u6237\u7aef\u901a\u9053 put ( localpath , remotepath , callback = None , confirm = True ) #\u5c06\u672c\u5730\u6587\u4ef6\u4e0a\u4f20\u5230\u670d\u52a1\u5668 \u53c2\u6570confirm\uff1a\u662f\u5426\u8c03\u7528stat()\u65b9\u6cd5\u68c0\u67e5\u6587\u4ef6\u72b6\u6001\uff0c\u8fd4\u56dels -l\u7684\u7ed3\u679c get ( remotepath , localpath , callback = None ) #\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730 mkdir () #\u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u76ee\u5f55 remove () #\u5728\u670d\u52a1\u5668\u4e0a\u5220\u9664\u76ee\u5f55 rename () #\u5728\u670d\u52a1\u5668\u4e0a\u91cd\u547d\u540d\u76ee\u5f55 stat () #\u67e5\u770b\u670d\u52a1\u5668\u6587\u4ef6\u72b6\u6001 listdir () #\u5217\u51fa\u670d\u52a1\u5668\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 SFTPClient \u4f7f\u7528\u5b9e\u4f8b import paramiko ''' \u8bbf\u95eeSFTP\u670d\u52a1\u5668\uff0c\u5217\u51fa\u670d\u52a1\u5668\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5e76\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 ''' def is_dir ( long_name : str ) -> bool : if 'd' == long_name [ 0 ]: return True else : return False t = paramiko . Transport (( 'znwl-aftersale.faw.cn' , 11 )) t . connect ( username = 'hqyc' , password = 'hqyc$!2019' ) sftp = paramiko . SFTPClient . from_transport ( t ) sftp . chdir ( '/' ) fileList = sftp . listdir_attr () for attr in fileList : if is_dir ( attr . longname ): print ( \"file name: %s , it's a directory\" % attr . filename ) for item in sftp . listdir_attr ( attr . filename ): if is_dir ( item . longname ): print ( \"file name: %s , it's a directory\" % item . filename ) else : print ( \"file name: %s , it's a normal file\" % item . filename ) else : print ( \"file name: %s , it's a normal file\" % attr . filename ) sftp . close ()","title":"Paramiko \u5e93\u7b80\u4ecb"},{"location":"Programming/01.%20Python/SFTP/Paramiko%20%E5%BA%93%E7%AE%80%E4%BB%8B/#paramiko","text":"paramiko \u5305\u542b\u4e24\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1a SSHClient \u548c SFTPClient \u3002 - SSHClient \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e Linux \u7684 ssh \u547d\u4ee4\uff0c\u662f\u5bf9 SSH \u4f1a\u8bdd\u7684\u5c01\u88c5\uff0c\u8be5\u7c7b\u5c01\u88c5\u4e86\u4f20\u8f93(Transport)\uff0c\u901a\u9053(Channel)\u53ca SFTPClient \u5efa\u7acb\u7684\u65b9\u6cd5( open_sftp )\uff0c\u901a\u5e38\u7528\u4e8e\u6267\u884c\u8fdc\u7a0b\u547d\u4ee4\u3002 - SFTPClient \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e0eLinux\u7684 sftp \u547d\u4ee4\uff0c\u662f\u5bf9 SFTP \u5ba2\u6237\u7aef\u7684\u5c01\u88c5\uff0c\u7528\u4ee5\u5b9e\u73b0\u8fdc\u7a0b\u6587\u4ef6\u64cd\u4f5c\uff0c\u5982\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u4fee\u6539\u6587\u4ef6\u6743\u9650\u7b49\u64cd\u4f5c\u3002 Paramiko \u4e2d\u7684\u51e0\u4e2a\u57fa\u7840\u540d\u8bcd\uff1a 1. Channel\uff1a\u662f\u4e00\u79cd\u7c7b Socket\uff0c\u4e00\u79cd\u5b89\u5168\u7684 SSH \u4f20\u8f93\u901a\u9053\uff1b 2. Transport\uff1a\u662f\u4e00\u79cd\u52a0\u5bc6\u7684\u4f1a\u8bdd\uff0c\u4f7f\u7528\u65f6\u4f1a\u540c\u6b65\u521b\u5efa\u4e86\u4e00\u4e2a\u52a0\u5bc6\u7684 Tunnels(\u901a\u9053)\uff0c\u8fd9\u4e2a Tunnels\u53eb\u505a Channel\uff1b 3. Session\uff1a\u662f Client \u4e0e Server \u4fdd\u6301\u8fde\u63a5\u7684\u5bf9\u8c61\uff0c\u7528 connect() / start_client() / start_server() \u5f00\u59cb\u4f1a\u8bdd\u3002","title":"Paramiko \u4ecb\u7ecd"},{"location":"Programming/01.%20Python/SFTP/Paramiko%20%E5%BA%93%E7%AE%80%E4%BB%8B/#sftpclient","text":"SFTPCLient \u4f5c\u4e3a\u4e00\u4e2a SFTP \u7684\u5ba2\u6237\u7aef\u5bf9\u8c61\uff0c\u6839\u636e SSH \u4f20\u8f93\u534f\u8bae\u7684 SFTP \u4f1a\u8bdd\uff0c\u5b9e\u73b0\u8fdc\u7a0b\u6587\u4ef6\u64cd\u4f5c\uff0c\u5982\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u6743\u9650\u3001\u72b6\u6001\u3002 from_transport ( cls , t ) #\u521b\u5efa\u4e00\u4e2a\u5df2\u8fde\u901a\u7684SFTP\u5ba2\u6237\u7aef\u901a\u9053 put ( localpath , remotepath , callback = None , confirm = True ) #\u5c06\u672c\u5730\u6587\u4ef6\u4e0a\u4f20\u5230\u670d\u52a1\u5668 \u53c2\u6570confirm\uff1a\u662f\u5426\u8c03\u7528stat()\u65b9\u6cd5\u68c0\u67e5\u6587\u4ef6\u72b6\u6001\uff0c\u8fd4\u56dels -l\u7684\u7ed3\u679c get ( remotepath , localpath , callback = None ) #\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730 mkdir () #\u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u76ee\u5f55 remove () #\u5728\u670d\u52a1\u5668\u4e0a\u5220\u9664\u76ee\u5f55 rename () #\u5728\u670d\u52a1\u5668\u4e0a\u91cd\u547d\u540d\u76ee\u5f55 stat () #\u67e5\u770b\u670d\u52a1\u5668\u6587\u4ef6\u72b6\u6001 listdir () #\u5217\u51fa\u670d\u52a1\u5668\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6","title":"SFTPClient \u5e38\u7528\u65b9\u6cd5\u4ecb\u7ecd"},{"location":"Programming/01.%20Python/SFTP/Paramiko%20%E5%BA%93%E7%AE%80%E4%BB%8B/#sftpclient_1","text":"import paramiko ''' \u8bbf\u95eeSFTP\u670d\u52a1\u5668\uff0c\u5217\u51fa\u670d\u52a1\u5668\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5e76\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 ''' def is_dir ( long_name : str ) -> bool : if 'd' == long_name [ 0 ]: return True else : return False t = paramiko . Transport (( 'znwl-aftersale.faw.cn' , 11 )) t . connect ( username = 'hqyc' , password = 'hqyc$!2019' ) sftp = paramiko . SFTPClient . from_transport ( t ) sftp . chdir ( '/' ) fileList = sftp . listdir_attr () for attr in fileList : if is_dir ( attr . longname ): print ( \"file name: %s , it's a directory\" % attr . filename ) for item in sftp . listdir_attr ( attr . filename ): if is_dir ( item . longname ): print ( \"file name: %s , it's a directory\" % item . filename ) else : print ( \"file name: %s , it's a normal file\" % item . filename ) else : print ( \"file name: %s , it's a normal file\" % attr . filename ) sftp . close ()","title":"SFTPClient \u4f7f\u7528\u5b9e\u4f8b"},{"location":"Programming/01.%20Python/SFTP/%E4%BD%BF%E7%94%A8%20Paramiko%20%E5%BA%93%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","text":"\u4f7f\u7528[[Paramiko \u5e93\u7b80\u4ecb|Paramiko]]\u5e93\u8fdb\u884c SFTP \u8fde\u63a5\u6d4b\u8bd5\uff0c\u8bfb\u53d6\u670d\u52a1\u5668\u6587\u4ef6\u65f6\u9047\u5230\u4e2d\u6587\u65e0\u6cd5\u89e3\u6790\u7684\u95ee\u9898 \u89e3\u51b3\u65b9\u6848\uff1a\u628a paramiko \u5e93 py3compat.py \u6587\u4ef6\u4e2d\u8c03\u7528\u5b57\u7b26\u4e32\u7684 encode() \u548c decode() \u65b9\u6cd5\u4e2d\u52a0\u4e0a 'ignore' \u53c2\u6570\u5373\u53ef","title":"\u4f7f\u7528 Paramiko \u5e93\u9047\u5230\u7684\u95ee\u9898"},{"location":"Programming/01.%20Python/Tkinter/Tkinter/","text":"\u53c2\u8003\u7f51\u7ad9\uff1a https://tkdocs.com/tutorial/index.html ubuntu \u7cfb\u7edf\u4e0b\u9700\u8981\u5148\u5b89\u88c5 tkinter\uff1a sudo apt update sudo apt install python3-tk [[Tkinter\u7ec3\u624b\u9879\u76ee]]","title":"Tkinter"},{"location":"Programming/01.%20Python/Tkinter/Tkinter%E7%BB%83%E6%89%8B%E9%A1%B9%E7%9B%AE/","text":"\u6b64\u9879\u76ee\u4e3a\u7ea2\u65d7 E115 \u9009\u62e9\u8f66\u578b Excel \u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b\u5de5\u5177\u9879\u76ee\uff0c\u8be5\u5de5\u5177\u7528\u4e8e\u68c0\u6d4b Excel \u6587\u4ef6\u5185\u5bb9\uff0c\u4f7f\u7528 C++ \u5b9e\u73b0\u8f83\u4e3a\u9ebb\u70e6\uff0c\u6545\u8003\u8651\u4f7f\u7528\u6709\u8f83\u591a\u7b2c\u4e09\u65b9\u5e93\u7684 python \u91cd\u65b0\u5b9e\u73b0\u3002 \u7a0b\u5e8f\u754c\u9762\u4f7f\u7528 Tkinter \u5b9e\u73b0\uff0cExcel \u6587\u4ef6\u64cd\u4f5c\u4f7f\u7528\u7684\u662f [[xlwings \u5b9e\u8df5|xlwings]] \u3002 \u76ee\u5f55\u7ed3\u6784\uff1a \\src |____`main.py` |____`gui.py` |____`file_checker.py` |____translator.py \u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a main.py #!/usr/bin/env python import gui def main () -> None : gui . Gui () if __name__ == '__main__' : main () gui.py ''' \u5b9a\u4e49\u7a0b\u5e8f\u4e3b\u754c\u9762 ''' from datetime import datetime import tkinter as tk import tkinter.ttk as ttk import tkinter.messagebox import tkinter.filedialog import file_checker import translator import threading class Gui ( object ): ''' \u4e3b\u7a97\u53e3\u7c7b ''' def __init__ ( self ) -> None : self . __root = tk . Tk () self . __root . title ( '\u7ea2\u65d7\u9009\u88c5\u8f66\u578b\u8f85\u52a9\u5de5\u5177' ) # TODO: \u8bbe\u7f6e\u7a97\u53e3\u56fe\u6807 # \u8bbe\u5b9a\u7a97\u53e3\u7684\u5927\u5c0f(\u957f * \u5bbd)\uff0c\u5e76\u5c45\u4e2d\u663e\u793a width = 720 height = 460 geometry_str = ' {} x {} + {} + {} ' . format ( width , height , ( self . __root . winfo_screenwidth () - width ) // 2 , ( self . __root . winfo_screenheight () - height ) // 2 ) self . __root . geometry ( geometry_str ) # \u8fd9\u91cc\u7684\u4e58\u662f\u5c0fx self . __root . wm_minsize ( width , height ) # \u521b\u5efaNOTEBOOK self . __note_book = ttk . Notebook ( self . __root ) self . __file_check_frame = ttk . Frame ( self . __note_book ) self . __translate_frame = ttk . Frame ( self . __note_book ) self . __note_book . add ( self . __file_check_frame , text = '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' ) self . __note_book . add ( self . __translate_frame , text = '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' ) #self.__note_book.select(self.__translate_frame) # ------------------------------------------ \u6587\u4ef6\u68c0\u6d4b\u754c\u9762 ------------------------------------------------------------ # \u521b\u5efa tkinter \u5b57\u7b26\u53d8\u91cf self . __filepath = tk . StringVar () # \u521b\u5efa\u6587\u4ef6\u8def\u5f84\u7f16\u8f91\u6846\uff0c\u5e76\u4e0e\u53d8\u91cf\u7ed1\u5b9a self . __path_entry = tk . Entry ( self . __file_check_frame , textvariable = self . __filepath ) # \u521b\u5efa\u201c\u9009\u62e9\u6587\u4ef6\u201d\u6309\u94ae self . __btn_browse = tk . Button ( self . __file_check_frame , text = '\u9009\u62e9\u6587\u4ef6' , command = self . __on_click_btn_browse ) self . __btn_browse . focus () # \u521b\u5efa\u201c\u5f00\u59cb\u68c0\u6d4b\u201d\u6309\u94ae self . __btn_start_check = tk . Button ( self . __file_check_frame , text = '\u5f00\u59cb\u68c0\u6d4b' , command = self . __on_click_btn_start_check ) # \u521b\u5efa\u201c\u5bfc\u51fa\u68c0\u6d4b\u8bb0\u5f55\u201d\u6309\u94ae self . __btn_export = tk . Button ( self . __file_check_frame , text = '\u5bfc\u51fa\u68c0\u6d4b\u8bb0\u5f55' , command = self . __on_btn_export , state = 'disabled' ) # \u521b\u5efa\u8fdb\u5ea6\u6761 self . __progress = tk . DoubleVar () self . __progressbar = ttk . Progressbar ( self . __file_check_frame , maximum = 100.0 , variable = self . __progress ) # \u521b\u5efa\u63d0\u793a label self . __tip_on_label = tk . StringVar () self . __label = tk . Label ( self . __file_check_frame , textvariable = self . __tip_on_label , anchor = 'w' ) # \u521b\u5efa\u6587\u5b57\u4fe1\u606f\u663e\u793a\u533a\u57df self . __text_area = tk . Text ( self . __file_check_frame , yscrollcommand = 'auto' ) # \u521b\u5efa\u6eda\u52a8\u6761 self . __scroll = tk . Scrollbar ( self . __file_check_frame , orient = 'vertical' ) # \u6587\u672c\u6846\u548c\u6eda\u52a8\u6761\u5173\u8054 self . __scroll . config ( command = self . __text_area . yview ) self . __text_area . config ( yscrollcommand = self . __scroll . set ) # \u8bb0\u5f55\u5de5\u4f5c\u7ebf\u7a0bID self . __work_thread = None # ------------------------------------------------------------------------------------------------------------------- # ------------------------------------------ \u6587\u4ef6\u7ffb\u8bd1\u754c\u9762 ------------------------------------------------------------ # \u521b\u5efa label self . __config_path_label = tk . Label ( self . __translate_frame , text = '\u914d\u7f6e\u8868\u8def\u5f84\uff1a' , anchor = 'e' ) # \u521b\u5efa tkinter \u5b57\u7b26\u53d8\u91cf self . __config_filepath = tk . StringVar () # \u521b\u5efa\u6587\u4ef6\u8def\u5f84\u7f16\u8f91\u6846\uff0c\u5e76\u4e0e\u53d8\u91cf\u7ed1\u5b9a self . __config_path_entry = tk . Entry ( self . __translate_frame , textvariable = self . __config_filepath ) # \u521b\u5efa\u201c\u9009\u62e9\u6587\u4ef6\u201d\u6309\u94ae self . __btn_config_browse = tk . Button ( self . __translate_frame , text = '\u9009\u62e9\u6587\u4ef6' , command = self . __on_click_btn_config_browse ) self . __btn_config_browse . focus () # \u521b\u5efa label self . __trans_path_label = tk . Label ( self . __translate_frame , text = '\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\u8def\u5f84\uff1a' , anchor = 'e' ) # \u521b\u5efa tkinter \u5b57\u7b26\u53d8\u91cf self . __trans_filepath = tk . StringVar () # \u521b\u5efa\u6587\u4ef6\u8def\u5f84\u7f16\u8f91\u6846\uff0c\u5e76\u4e0e\u53d8\u91cf\u7ed1\u5b9a self . __trans_path_entry = tk . Entry ( self . __translate_frame , textvariable = self . __trans_filepath ) # \u521b\u5efa\u201c\u9009\u62e9\u6587\u4ef6\u201d\u6309\u94ae self . __btn_trans_browse = tk . Button ( self . __translate_frame , text = '\u9009\u62e9\u6587\u4ef6' , command = self . __on_click_btn_trans_browse ) # \u521b\u5efa\u8fdb\u5ea6\u6761 self . __progress_trans = tk . DoubleVar () self . __progressbar_trans = ttk . Progressbar ( self . __translate_frame , maximum = 100.0 , variable = self . __progress_trans ) # \u521b\u5efa\u201c\u5f00\u59cb\u7ffb\u8bd1\u201d\u6309\u94ae self . __btn_trans_trans = tk . Button ( self . __translate_frame , text = '\u5f00\u59cb\u7ffb\u8bd1' , command = self . __on_click_btn_start_translate ) # \u521b\u5efa\u6587\u5b57\u4fe1\u606f\u663e\u793a\u533a\u57df self . __trans_output = tk . Text ( self . __translate_frame , yscrollcommand = 'auto' ) # \u521b\u5efa\u6eda\u52a8\u6761 self . __trans_output_scroll = tk . Scrollbar ( self . __translate_frame , orient = 'vertical' ) # \u6587\u672c\u6846\u548c\u6eda\u52a8\u6761\u5173\u8054 self . __trans_output_scroll . config ( command = self . __trans_output . yview ) self . __trans_output . config ( yscrollcommand = self . __trans_output_scroll . set ) # \u521b\u5efa\u201c\u5bfc\u51fa\u68c0\u6d4b\u8bb0\u5f55\u201d\u6309\u94ae self . __btn_trans_export = tk . Button ( self . __translate_frame , text = '\u5bfc\u51fa\u7ffb\u8bd1\u8bb0\u5f55' , command = self . __on_btn_trans_export , state = 'disabled' ) # \u8bb0\u5f55\u5de5\u4f5c\u7ebf\u7a0bID self . __trans_thread = None # ------------------------------------------------------------------------------------------------------------------- # \u7ed1\u5b9a\u754c\u9762\u53d8\u5316\u7684\u5904\u7406\u51fd\u6570 self . __root . bind ( '<Configure>' , self . __on_resize ) self . __root . protocol ( 'WM_DELETE_WINDOW' , self . __on_close ) # \u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af self . __root . mainloop () def __on_resize ( self , event : tk . Event ) -> None : ''' \u5904\u7406\u7a97\u53e3\u5c3a\u5bf8\u6539\u53d8\u65f6\u754c\u9762\u63a7\u4ef6\u7684\u53d8\u5316\uff0c\u7a97\u53e3\u521b\u5efa\u65f6\u4e5f\u4f1a\u89e6\u53d1\u6b64\u51fd\u6570\uff0c\u6240\u4ee5\u53ea\u5728\u8fd9\u91cc\u505a\u754c\u9762\u7684\u5e03\u5c40\u5c31\u53ef\u4ee5\u4e86 ''' width = self . __root . winfo_width () height = self . __root . winfo_height () self . __note_book . place ( x = 0 , y = 0 , width = width , height = height ) frame_with = 0 frame_height = 0 cur_tab = self . __note_book . select () #print(type(cur_tab), self.__file_check_frame.__str__()) if self . __file_check_frame . __str__ () == cur_tab : frame_with = self . __file_check_frame . winfo_width () frame_height = self . __file_check_frame . winfo_height () else : frame_with = self . __translate_frame . winfo_width () frame_height = self . __translate_frame . winfo_height () self . __resize_file_check_widgets ( frame_with , frame_height ) self . __resize_file_trans_widgets ( frame_with , frame_height ) def __resize_file_check_widgets ( self , width : int , heigth : int ) -> None : ''' \u7a97\u53e3\u5c3a\u5bf8\u6539\u53d8\u65f6\uff0c\u91cd\u65b0\u5e03\u5c40\u6587\u4ef6\u68c0\u6d4b\u754c\u9762\u7684\u63a7\u4ef6 ''' self . __path_entry . place ( x = 10 , y = 10 , width = width - 40 - 88 * 2 , height = 25 , anchor = 'nw' ) self . __btn_browse . place ( x = width - 108 , y = 10 , width = 88 , height = 25 , anchor = 'ne' ) self . __btn_start_check . place ( x = width - 10 , y = 10 , width = 88 , height = 25 , anchor = 'ne' ) self . __btn_export . place ( x = width - 10 , y = heigth - 35 , width = 88 , height = 25 , anchor = 'ne' ) self . __progressbar . place ( x = 10 , y = 45 , width = self . __path_entry . winfo_width (), height = 25 , anchor = 'nw' ) self . __label . place ( x = width - 10 , y = 45 , width = 186 , height = 25 , anchor = 'ne' ) self . __text_area . place ( x = 10 , y = 80 , width = width - 25 , height = heigth - 125 , anchor = 'nw' ) self . __scroll . place ( x = width - 10 , y = 80 , width = 15 , height = heigth - 125 , anchor = 'ne' ) def __resize_file_trans_widgets ( self , width : int , heigth : int ) -> None : ''' \u7a97\u53e3\u5c3a\u5bf8\u6539\u53d8\u65f6\uff0c\u91cd\u65b0\u5e03\u5c40\u6587\u4ef6\u7ffb\u8bd1\u754c\u9762\u7684\u63a7\u4ef6 ''' self . __config_path_label . place ( x = 10 , y = 10 , width = 100 , height = 25 , anchor = 'nw' ) self . __config_path_entry . place ( x = 110 , y = 10 , width = width - 218 , height = 25 , anchor = 'nw' ) self . __btn_config_browse . place ( x = width - 10 , y = 10 , width = 88 , height = 25 , anchor = 'ne' ) self . __trans_path_label . place ( x = 10 , y = 45 , width = 100 , height = 25 , anchor = 'nw' ) self . __trans_path_entry . place ( x = 110 , y = 45 , width = width - 218 , height = 25 , anchor = 'nw' ) self . __btn_trans_browse . place ( x = width - 10 , y = 45 , width = 88 , height = 25 , anchor = 'ne' ) self . __progressbar_trans . place ( x = 10 , y = 80 , width = width - 118 , height = 25 , anchor = 'nw' ) self . __btn_trans_trans . place ( x = width - 10 , y = 80 , width = 88 , height = 25 , anchor = 'ne' ) self . __btn_trans_export . place ( x = width - 10 , y = heigth - 35 , width = 88 , height = 25 , anchor = 'ne' ) self . __trans_output . place ( x = 10 , y = 115 , width = width - 25 , height = heigth - 160 , anchor = 'nw' ) self . __trans_output_scroll . place ( x = width - 10 , y = 115 , width = 15 , height = heigth - 160 , anchor = 'ne' ) def __on_close ( self ): ''' \u5904\u7406\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 ''' if self . __is_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' , message = '\u6b63\u5728\u68c0\u6d4b\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) elif self . __is_trans_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = '\u6b63\u5728\u7ffb\u8bd1\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) else : self . __root . destroy () def __on_click_btn_browse ( self , * args ) -> None : ''' \u201c\u9009\u62e9\u6587\u4ef6\u201d\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' filepath = tkinter . filedialog . askopenfilename ( filetypes = [( 'Excel' , [ '.xls' , '.xlsx' ])]) if '' != filepath : self . __filepath . set ( filepath ) def __on_click_btn_config_browse ( self , * args ) -> None : ''' \u6587\u4ef6\u7ffb\u8bd1\u754c\u9762\uff0c\u914d\u7f6e\u6587\u4ef6\u9009\u62e9\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' filepath = tkinter . filedialog . askopenfilename ( filetypes = [( 'Excel' , [ '.xls' , '.xlsx' ])]) if '' != filepath : self . __config_filepath . set ( filepath ) def __on_click_btn_trans_browse ( self , * args ) -> None : ''' \u6587\u4ef6\u7ffb\u8bd1\u754c\u9762\uff0c\u4e2d\u82f1\u6587\u5bf9\u7167\u6587\u4ef6\u9009\u62e9\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' filepath = tkinter . filedialog . askopenfilename ( filetypes = [( 'Excel' , [ '.xls' , '.xlsx' ])]) if '' != filepath : self . __trans_filepath . set ( filepath ) def __on_click_btn_start_check ( self , * args ) -> None : ''' \u201c\u5f00\u59cb\u68c0\u6d4b\u201d\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' if '' == self . __filepath . get (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' , message = '\u8bf7\u5148\u9009\u62e9\u4e00\u4e2aExcel\u6587\u4ef6\uff01' ) return if self . __is_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' , message = '\u6b63\u5728\u68c0\u6d4b\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) return self . __work_thread = threading . Thread ( target = self . __start_work_thread ) self . __work_thread . start () self . __tip_on_label . set ( '\u6b63\u5728\u68c0\u6d4b\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) # \u201c\u5bfc\u51fa\u68c0\u6d4b\u8bb0\u5f55\u201d\u6309\u94ae\u8bbe\u4e3a\u53ef\u7528 self . __btn_export . configure ( state = 'normal' ) def __on_click_btn_start_translate ( self , * args ) -> None : ''' \u201c\u5f00\u59cb\u7ffb\u8bd1\u201d\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' if '' == self . __config_filepath . get (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = '\u8bf7\u5148\u9009\u62e9\u914d\u7f6e\u8868\u6587\u4ef6\uff01' ) return if '' == self . __trans_filepath . get (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = '\u8bf7\u5148\u9009\u62e9\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\u6587\u4ef6\uff01' ) return if self . __is_trans_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = '\u6b63\u5728\u68c0\u6d4b\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) return self . __trans_thread = threading . Thread ( target = self . __start_trans_thread ) self . __trans_thread . start () # \u201c\u5bfc\u51fa\u7ffb\u8bd1\u8bb0\u5f55\u201d\u6309\u94ae\u8bbe\u4e3a\u53ef\u7528 self . __btn_trans_export . configure ( state = 'normal' ) def __on_btn_export ( self , * args ) -> None : ''' \u201c\u5bfc\u51fa\u68c0\u6d4b\u8bb0\u5f55\u201d\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' if self . __is_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' , message = '\u6b63\u5728\u68c0\u6d4b\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) return filepath = tkinter . filedialog . asksaveasfilename ( defaultextension = '.txt' , filetypes = [( '\u6587\u672c\u6587\u4ef6' , [ '.txt' ])]) if '' != filepath : # print('save as {}'.format(filepath)) buf = self . __text_area . get ( '1.0' , 'end' ) with open ( filepath , 'w' ) as file : file . write ( buf ) def __on_btn_trans_export ( self , * args ) -> None : ''' \u201c\u5bfc\u51fa\u7ffb\u8bd1\u8bb0\u5f55\u201d\u6309\u94ae\u54cd\u5e94\u51fd\u6570 ''' if self . __is_trans_thread_working (): tkinter . messagebox . showinfo ( '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = '\u6b63\u5728\u7ffb\u8bd1\u6587\u4ef6\uff0c\u8bf7\u7a0d\u5019...' ) return filepath = tkinter . filedialog . asksaveasfilename ( defaultextension = '.txt' , filetypes = [( '\u6587\u672c\u6587\u4ef6' , [ '.txt' ])]) if '' != filepath : buf = self . __trans_output . get ( '1.0' , 'end' ) with open ( filepath , 'w' ) as file : file . write ( buf ) def __set_progress ( self , progress : float = 0.0 ) -> None : ''' \u8bbe\u7f6e\u8fdb\u5ea6\u6761 ''' self . __progress . set ( progress ) def __set_trans_progress ( self , progress : float = 0.0 ) -> None : ''' \u8bbe\u7f6e\u7ffb\u8bd1\u8fdb\u5ea6\u6761 ''' self . __progress_trans . set ( progress ) def __init_text ( self ) -> None : ''' \u521d\u59cb\u5316\u6587\u5b57\u4fe1\u606f\u663e\u793a ''' # \u6e05\u7a7a\u6587\u672c\u6846 self . __text_area . replace ( '1.0' , 'end' , '' ) msg = '[ {} ]\u5f00\u59cb\u68c0\u6d4b... \\n ' . format ( datetime . now ()) msg += '[ {} ]\u76ee\u6807\u6587\u4ef6\uff1a {} \\n ' . format ( datetime . now (), self . __filepath . get ()) self . __text_area . insert ( 'end' , msg ) def __init_trans_text ( self ) -> None : ''' \u521d\u59cb\u5316\u7ffb\u8bd1\u6587\u5b57\u4fe1\u606f\u663e\u793a ''' self . __trans_output . replace ( '1.0' , 'end' , '' ) msg = '[ {} ]\u5f00\u59cb\u7ffb\u8bd1... \\n ' . format ( datetime . now ()) msg += '[ {} ]\u914d\u7f6e\u8868\u6587\u4ef6\uff1a {} \\n ' . format ( datetime . now (), self . __config_filepath . get ()) msg += '[ {} ]\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\u6587\u4ef6\uff1a {} \\n ' . format ( datetime . now (), self . __trans_filepath . get ()) self . __trans_output . insert ( 'end' , msg ) def __set_info_text ( self , info : str , show_msg_box : bool = False ) -> None : ''' \u8bbe\u7f6e\u663e\u793a\u4fe1\u606f ''' if not info . isspace (): self . __text_area . insert ( index = 'end' , chars = info ) # \u6587\u672c\u6846\u6eda\u52a8\u5230\u672b\u884c self . __text_area . see ( index = 'end' ) if show_msg_box : tkinter . messagebox . showinfo ( title = '\u914d\u7f6e\u6587\u4ef6\u68c0\u6d4b' , message = info ) def _set_trans_output_text ( self , info : str , show_msg_box : bool = False ) -> None : ''' \u8bbe\u7f6e\u7ffb\u8bd1\u663e\u793a\u4fe1\u606f ''' if not info . isspace (): self . __trans_output . insert ( index = 'end' , chars = info ) self . __trans_output . see ( index = 'end' ) if show_msg_box : tkinter . messagebox . showinfo ( title = '\u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1' , message = info ) def __start_work_thread ( self ) -> None : ''' \u542f\u52a8\u5de5\u4f5c\u7ebf\u7a0b ''' self . __init_text () check_op = file_checker . FileChecker ( self . __filepath . get (), self . __set_progress , self . __set_info_text ) check_op . start_check () self . __tip_on_label . set ( '\u68c0\u6d4b\u5b8c\u6210' ) def __start_trans_thread ( self ) -> None : ''' \u542f\u52a8\u7ffb\u8bd1\u7ebf\u7a0b ''' self . __init_trans_text () trans_op = translator . Translator ( self . __config_filepath . get (), self . __trans_filepath . get (), self . __set_trans_progress , self . _set_trans_output_text ) trans_op . start_translate () def __is_thread_working ( self ) -> bool : ''' \u68c0\u67e5\u5de5\u4f5c\u7ebf\u7a0b\u662f\u5426\u6b63\u5728\u6267\u884c\uff0c\u662f\u5219\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse ''' if self . __work_thread and self . __work_thread . is_alive (): return True return False def __is_trans_thread_working ( self ) -> bool : ''' \u68c0\u67e5\u7ffb\u8bd1\u7ebf\u7a0b\u662f\u5426\u6b63\u5728\u6267\u884c\uff0c\u662f\u5219\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse ''' if self . __trans_thread and self . __trans_thread . is_alive (): return True return False file_checker.py ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\u5b9a\u4e49\u6587\u4ef6 ''' import xlwings as xw import pythoncom from datetime import datetime class FileChecker ( object ): ''' \u6587\u4ef6\u68c0\u6d4b\u7c7b\uff0c\u5b8c\u6210 Excel \u914d\u7f6e\u6587\u4ef6\u7684\u68c0\u6d4b\u529f\u80fd ''' def __init__ ( self , filepath : str , progress_callback = None , info_callback = None ) -> None : ''' \u6784\u9020\u51fd\u6570 \u53c2\u6570\u8bf4\u660e\uff1aprogress_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u8bbe\u7f6e\u8fdb\u5ea6\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a float \u578b\u7684\u53c2\u6570\uff0c\u6709\u6548\u503c\u4e3a 0.0~100.0 \u51fd\u6570\u539f\u578b\uff1aset_progress(progress:float=0.0) info_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u663e\u793a\u4fe1\u606f\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a str \u578b\u7684\u53c2\u6570\u548c\u4e00\u4e2a bool \u578b\u7684\u53c2\u6570 \u51fd\u6570\u539f\u578b\uff1ashow_info(info:str='', show_message_box:bool=false) ''' super () . __init__ () #self.__app = xw.App(visible=False, add_book=False) #self.__book = self.__app.books.open(filepath, read_only=True) #self.__sheet = self.__book.sheets[0] #self.__used_range = self.__sheet.used_range #self.__rows_count = self.__used_range.rows.count #self.__cols_count = self.__used_range.columns.count pythoncom . CoInitialize () app = xw . App ( visible = False , add_book = False ) book = app . books . open ( filepath , read_only = True ) sheet = book . sheets [ 0 ] sheet . activate () used_range = sheet . used_range self . __app_pid = app . pid self . __rows_count = used_range . rows . count self . __cols_count = used_range . columns . count self . __progress_callback = progress_callback self . __info_callback = info_callback self . __error_count = 0 def __del__ ( self ) -> None : ''' \u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u76f8\u5173\u8d44\u6e90 ''' #self.__book.close() #self.__app.quit() #self.__app.books.active.close() #self.__app.kill() app = xw . apps [ self . __app_pid ] book = app . books . active book . close () app . kill () pythoncom . CoUninitialize () def start_check ( self ) -> bool : ''' \u5f00\u59cb\u8fdb\u884c\u6587\u4ef6\u68c0\u6d4b \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header (): return False self . __check_vehicle_data () self . __summary () return True def __check_header ( self ) -> bool : ''' \u68c0\u6d4bExcel\u8868\u683c\u8868\u5934 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __check_header_vehicle_code (): return False if not self . __check_header_ecu_name (): return False if not self . __check_ecu_info_col (): return False return True def __check_header_vehicle_code ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u8f66\u8f86\u89c4\u683c\u7801\uff08\u5373\u7b2c 1 \u884c\u7b2c 1 \u5217\uff0c\u8f66\u8f86\u89c4\u683c\u7801\u5fc5\u987b\u5728\u8fd9\u4e2a\u5355\u5143\u683c\uff0c\u5426\u5219\u89c6\u4e3a\u9519\u8bef\uff09 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if '\u8f66\u578b\u89c4\u683c\u53f7' != xw . Range (( 'A1' )) . value : self . __error_count += 1 self . __info_callback ( '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8f66\u578b\u89c4\u683c\u7801\u5fc5\u987b\u4e3a\u8868\u683c\u7684\u7b2c 1 \u884c\u7b2c 1 \u5217\uff01 \\n ' . format ( datetime . now ()), True ) return False return True def __check_header_ecu_name ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u540d\u79f0\uff0c\u63a7\u5236\u5668\u540d\u79f0\u6240\u5728\u7684\u5355\u5143\u683c\u662f3\u4e2a\u5355\u5143\u683c\u5408\u5e76\u800c\u6210\u7684\u4e00\u4e2a\u5927\u5355\u5143\u683c \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' first_row = xw . Range (( 1 , 3 ), ( 1 , self . __cols_count )) error = False cell_pos = '' ecu_name = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u5f53\u5217\u7d22\u5f15\u4e3a3\u7684\u500d\u6570\u65f6\uff0c\u53d6\u5230\u6709\u6548\u540d\u79f0\uff0c\u5426\u5219\u5e94\u4e3a\u65e0\u6548\u5355\u5143\u683c for cell in first_row : cell_pos = cell . get_address ( False , False ) if cell . merge_cells : if 'None' != str ( cell . value ) . strip (): ecu_name = str ( cell . value ) . strip () else : if 0 == cell . column % 3 : error = True break else : error = True break self . __progress_callback ( 1 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u63a7\u5236\u5668 {} \u4fe1\u606f\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), ecu_name , cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_ecu_info_col ( self ) -> bool : ''' \u68c0\u6d4b\u8868\u5934\u63a7\u5236\u5668\u4fe1\u606f\uff0c\u5373\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' second_row = xw . Range (( 2 , 3 ), ( 2 , self . __cols_count )) error = False cell_pos = '' # ECU\u6570\u636e\u4ece\u7b2c3\u5217\u5f00\u59cb\uff0c\u6bcf3\u5217\u4e3a\u4e00\u7ec4\uff0c\u4f9d\u6b21\u4e3a\u96f6\u4ef6\u53f7\u3001\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u3001\u914d\u7f6e\u7801 for cell in second_row : cell_str = str ( cell . value ) . strip () cell_pos = cell . get_address ( False , False ) if (( 0 == ( cell . column % 3 )) and ( '\u96f6\u4ef6\u53f7' != cell_str )) or \\ (( 1 == ( cell . column % 3 )) and ( '\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7' != cell_str )) or \\ (( 2 == ( cell . column % 3 )) and ( '\u914d\u7f6e\u7801' != cell_str )): error = True break self . __progress_callback ( 2 / self . __rows_count * 100 ) if error : msg = '[ {} ]\u8868\u5934\u68c0\u6d4b\u9519\u8bef\uff01 \\n \u8868\u683c\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), cell_pos ) self . __info_callback ( msg , True ) return False return True def __check_vehicle_data ( self ) -> bool : ''' \u9010\u884c\u68c0\u6d4b\u8f66\u578b\u914d\u7f6e\u5185\u5bb9 \u8fd4\u56de\u503c\uff1a\u68c0\u6d4b\u672a\u53d1\u73b0\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' all_range = xw . Range (( 3 , 1 ), ( self . __rows_count , self . __cols_count )) # \u8f66\u578b\u6570\u636e\u4ece\u7b2c3\u884c\u5f00\u59cb\uff0c\u6bcf\u4e2a\u8f66\u578b\u7684\u5177\u4f53\u6570\u636e\u4fe1\u606f\u4e3a\u4e00\u884c for row in all_range . rows : vehicle_code = str ( row [ 0 ] . value ) . strip () if 'None' == vehicle_code : continue vehicle_name = str ( row [ 1 ] . value ) . strip () if 'None' == vehicle_name : msg = '[ {} ]\u8f66\u8f86\u89c4\u683c\u7801 {} \u5bf9\u5e94\u8f66\u578b\u540d\u79f0\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_code , row [ 1 ] . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) for col_index in range ( 3 , self . __cols_count + 1 ): self . __check_cell_data ( vehicle_name , row , col_index ) self . __progress_callback ( row . row / self . __rows_count * 100 ) return True def __check_cell_data ( self , vehicle_name : str , row : xw . Range , col_index : int ) -> None : ''' \u68c0\u6d4b\u76ee\u6807\u5355\u5143\u683c\u7684\u6570\u636e\uff0c\u82e5\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f\uff0c\u76ee\u524d\u6709\u4e24\u79cd\u9519\u8bef\u60c5\u51b5\uff1a 1.\u67d0\u4e00\u4e2a\u63a7\u5236\u5668\u7684\u201c\u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u201d\u6709\u5185\u5bb9\uff0c\u800c\u201c\u96f6\u4ef6\u53f7\u201d\u4e3a\u7a7a\uff1b 2.\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32\u5305\u542b\"ERROR\"\u5b50\u4e32\u3002 ''' cell_data = str ( row [ col_index - 1 ] . value ) . strip () # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 if 1 == ( col_index % 3 ): # \u68c0\u67e5\u96f6\u4ef6\u53f7\u662f\u5426\u4e3a\u7a7a part_number = str ( row [ col_index - 2 ] . value ) . strip () if (( '' == part_number ) or ( 'None' == part_number )) and \\ ( '' != cell_data ): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u4e3a\u7a7a\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index - 1 )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) if - 1 != cell_data . find ( 'ERROR' ): msg = '' # \u96f6\u4ef6\u53f7 if ( 0 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index )) . value ) . strip () msg = '[ {} ] {} {} \u96f6\u4ef6\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7 elif ( 1 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 1 )) . value ) . strip () msg = '[ {} ] {} {} \u8f6f\u4ef6\u53f7\u548c\u8f6f\u4ef6\u7248\u672c\u53f7\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) # \u914d\u7f6e\u7801 elif ( 2 == ( col_index % 3 )): ecu_name = str ( xw . Range (( 1 , col_index - 2 )) . value ) . strip () msg = '[ {} ] {} {} \u914d\u7f6e\u7801\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5 {} \u5355\u5143\u683c\uff01 \\n ' . format ( datetime . now (), vehicle_name , ecu_name , xw . Range (( row [ col_index - 2 ] . row , col_index )) . get_address ( False , False )) self . __error_count += 1 self . __info_callback ( msg ) def __summary ( self ) -> None : ''' \u68c0\u6d4b\u5b8c\u6210\u540e\u751f\u6210\u603b\u7ed3\u4fe1\u606f\u5b57\u7b26\u4e32 ''' msg = '' if 0 == self . __error_count : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u672a\u53d1\u73b0\u5f02\u5e38\uff01 \\n ' . format ( datetime . now ()) else : msg = '[ {} ]\u68c0\u6d4b\u5b8c\u6210\uff0c\u603b\u5171\u53d1\u73b0 {} \u5904\u5f02\u5e38\uff01 \\n ' . format ( datetime . now (), self . __error_count ) self . __info_callback ( msg ) if '__main__' == __name__ : pass translator.py: ''' \u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1\u7c7b\u5b9a\u4e49\u6587\u4ef6 ''' import xlwings as xw import pythoncom from datetime import datetime class Translator ( object ): ''' \u914d\u7f6e\u6587\u4ef6\u7ffb\u8bd1\u7c7b\uff0c\u5b8c\u6210 Excel \u914d\u7f6e\u6587\u4ef6\u751f\u6210\u65b0\u8868\u683c\u5e76\u7ffb\u8bd1\u4e3a\u82f1\u6587\u7684\u529f\u80fd ''' def __init__ ( self , config_file_path : str , trans_file_path : str , progress_callback = None , info_callback = None ) -> None : ''' \u6784\u9020\u51fd\u6570 \u53c2\u6570\u8bf4\u660e\uff1aconfig_file_path\uff0c\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 trans_file_path\uff0c\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\u8def\u5f84 progress_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u8bbe\u7f6e\u8fdb\u5ea6\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a float \u578b\u7684\u53c2\u6570\uff0c\u6709\u6548\u503c\u4e3a 0.0~100.0 \u51fd\u6570\u539f\u578b\uff1aset_progress(progress:float=0.0) info_callback\uff0c\u5916\u90e8\u4f20\u5165\u7684\u7528\u4e8e\u663e\u793a\u4fe1\u606f\u7684\u51fd\u6570\uff0c\u5e94\u5f53\u63a5\u6536\u4e00\u4e2a str \u578b\u7684\u53c2\u6570\u548c\u4e00\u4e2a bool \u578b\u7684\u53c2\u6570 \u51fd\u6570\u539f\u578b\uff1ashow_info(info:str='', show_message_box:bool=false) ''' super () . __init__ () pythoncom . CoInitialize () self . __config_file_path = config_file_path self . __trans_file_path = trans_file_path self . __progress_callbak = progress_callback self . __info_callback = info_callback self . __error_count = 0 self . __trans_text = {} def __del__ ( self ) -> None : ''' \u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u76f8\u5173\u8d44\u6e90 ''' pythoncom . CoUninitialize () def start_translate ( self ) -> bool : ''' \u5f00\u59cb\u8fdb\u884c\u6587\u4ef6\u7ffb\u8bd1 \u8fd4\u56de\u503c\uff1a\u7ffb\u8bd1\u672a\u53d1\u751f\u9519\u8bef\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse ''' if not self . __read_trans_text (): return False if not self . __create_new_sheet (): return False self . __summary () return True def __read_trans_text ( self ) -> bool : ''' \u8bfb\u53d6\u4e2d\u82f1\u6587\u7ffb\u8bd1\u7684\u6587\u672c ''' if '' == self . __trans_file_path : return False app = xw . App ( visible = False , add_book = False ) book = app . books . open ( self . __trans_file_path , read_only = True ) sheet = book . sheets [ 0 ] sheet . activate () row_count = sheet . used_range . rows . count for row_index in range ( 2 , row_count + 1 ): strCN = xw . Range (( row_index , 1 )) . value strEN = xw . Range (( row_index , 2 )) . value if not isinstance ( strCN , str ): continue self . __trans_text [ strCN ] = strEN book . close () app . quit () return True def __create_new_sheet ( self ) -> bool : ''' \u590d\u5236\u539f\u59cb\u914d\u7f6e\u8868\uff0c\u5e76\u5728\u65b0\u7684\u8868\u4e2d\u5c06\u4e2d\u6587\u66ff\u6362\u4e3a\u82f1\u6587 ''' if '' == self . __config_file_path : return False app = xw . App ( visible = False , add_book = False ) book = app . books . open ( self . __config_file_path ) sheet = book . sheets [ 0 ] sheet = sheet . copy ( after = sheet ) # \u62f7\u8d1d\u5230\u7b2c\u4e00\u4e2a sheet \u4e4b\u540e sheet . activate () book . save () rows_count = sheet . used_range . rows . count cols_count = sheet . used_range . columns . count cells_to_trans = ( cols_count - 2 ) / 3 + rows_count - 2 cells_translated = 0 # \u66f4\u65b0\u7b2c\u4e00\u884c\u7684\u63a7\u5236\u5668\u540d\u79f0\u5b57\u7b26\u4e32 for col_index in range ( 3 , cols_count + 1 ): strCN = xw . Range (( 1 , col_index )) . value if not isinstance ( strCN , str ): cells_translated += 1 continue if strCN in self . __trans_text : xw . Range (( 1 , col_index )) . value = self . __trans_text [ strCN ] else : msg = '[ {} ] {} \u672a\u627e\u5230\u5bf9\u5e94\u7684\u82f1\u6587\u6587\u672c\uff0c\u8bf7\u68c0\u67e5\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\uff01 \\n ' . format ( datetime . now (), strCN ) self . __info_callback ( msg , False ) self . __error_count += 1 cells_translated += 1 self . __progress_callbak ( cells_translated / cells_to_trans * 100 ) # \u66f4\u65b0\u7b2c\u4e8c\u5217\u7684\u8f66\u578b\u540d\u79f0\u5b57\u7b26\u4e32 for row_index in range ( 3 , rows_count + 1 ): strCN = xw . Range (( row_index , 2 )) . value if not isinstance ( strCN , str ): cells_translated += 1 continue if strCN in self . __trans_text : xw . Range (( row_index , 2 )) . value = self . __trans_text [ strCN ] else : msg = '[ {} ] {} \u672a\u627e\u5230\u5bf9\u5e94\u7684\u82f1\u6587\u6587\u672c\uff0c\u8bf7\u68c0\u67e5\u4e2d\u82f1\u6587\u5bf9\u7167\u8868\uff01 \\n ' . format ( datetime . now (), strCN ) self . __info_callback ( msg , False ) self . __error_count += 1 cells_translated += 1 self . __progress_callbak ( cells_translated / cells_to_trans * 100 ) book . save () book . close () app . quit () return True def __summary ( self ) -> bool : ''' \u7ffb\u8bd1\u5b8c\u6210\u540e\u751f\u6210\u603b\u7ed3\u4fe1\u606f\u5b57\u7b26\u4e32 ''' msg = '' if 0 == self . __error_count : msg = '[ {} ]\u7ffb\u8bd1\u5b8c\u6210\uff0c\u672a\u53d1\u73b0\u5f02\u5e38\uff01 \\n ' . format ( datetime . now ()) else : msg = '[ {} ]\u7ffb\u8bd1\u5b8c\u6210\uff0c\u603b\u5171\u53d1\u73b0 {} \u5904\u5f02\u5e38\uff01 \\n ' . format ( datetime . now (), self . __error_count ) self . __info_callback ( msg ) return True \u5c06\u4e09\u4e2a\u6587\u4ef6\u653e\u5728\u540c\u4e00\u76ee\u5f55\uff0c\u6267\u884c main.py \u5373\u53ef\u3002","title":"Tkinter\u7ec3\u624b\u9879\u76ee"},{"location":"Programming/02.%20C%23/00.%20%E7%AE%80%E4%BB%8B/","text":"C# C# \u53c8\u79f0\u201cC Sharp\u201d\uff0c\u662f\u5fae\u8f6f\u53d1\u5e03\u7684\u4e00\u79cd\u7b80\u5355\u3001\u5b89\u5168\u3001\u7a33\u5b9a\u3001\u901a\u7528\u7684\u9762\u5411\u5bf9\u8c61[[00. \u7f16\u7a0b\u7b80\u4ecb#\u7f16\u7a0b\u8bed\u8a00|\u7f16\u7a0b\u8bed\u8a00]]\u3002 C# \u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\u3001\u901a\u7528\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\u5fae\u8f6f\uff08Microsoft\uff09\u5f00\u53d1\uff0c\u7531 Ecma \u548c ISO \u6838\u51c6\u8ba4\u53ef\u7684\u3002 C# \u662f\u4ece C/C++ \u884d\u751f\u51fa\u6765\u7684\uff0c\u5b83\u5728\u7ee7\u627f C/C++\u5f3a\u5927\u529f\u80fd\u7684\u540c\u65f6\uff0c\u629b\u5f03\u4e86 C/C++ \u7684\u4e00\u4e9b\u590d\u6742\u7279\u6027\u3002C# \u8fd8\u548c Java \u975e\u5e38\u7c7b\u4f3c\uff0c\u4ec5\u4ec5\u5728\u4e00\u4e9b\u7ec6\u8282\u4e0a\u6709\u5dee\u522b\u3002 \u5b98\u65b9\u6559\u7a0b\uff1a \u4e86\u89e3 C# |\u514d\u8d39\u6559\u7a0b\u3001\u8bfe\u7a0b\u3001\u89c6\u9891\u7b49 | .NET (microsoft.com)","title":"`C#`"},{"location":"Programming/02.%20C%23/00.%20%E7%AE%80%E4%BB%8B/#c","text":"C# \u53c8\u79f0\u201cC Sharp\u201d\uff0c\u662f\u5fae\u8f6f\u53d1\u5e03\u7684\u4e00\u79cd\u7b80\u5355\u3001\u5b89\u5168\u3001\u7a33\u5b9a\u3001\u901a\u7528\u7684\u9762\u5411\u5bf9\u8c61[[00. \u7f16\u7a0b\u7b80\u4ecb#\u7f16\u7a0b\u8bed\u8a00|\u7f16\u7a0b\u8bed\u8a00]]\u3002 C# \u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\u3001\u901a\u7528\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\u5fae\u8f6f\uff08Microsoft\uff09\u5f00\u53d1\uff0c\u7531 Ecma \u548c ISO \u6838\u51c6\u8ba4\u53ef\u7684\u3002 C# \u662f\u4ece C/C++ \u884d\u751f\u51fa\u6765\u7684\uff0c\u5b83\u5728\u7ee7\u627f C/C++\u5f3a\u5927\u529f\u80fd\u7684\u540c\u65f6\uff0c\u629b\u5f03\u4e86 C/C++ \u7684\u4e00\u4e9b\u590d\u6742\u7279\u6027\u3002C# \u8fd8\u548c Java \u975e\u5e38\u7c7b\u4f3c\uff0c\u4ec5\u4ec5\u5728\u4e00\u4e9b\u7ec6\u8282\u4e0a\u6709\u5dee\u522b\u3002 \u5b98\u65b9\u6559\u7a0b\uff1a \u4e86\u89e3 C# |\u514d\u8d39\u6559\u7a0b\u3001\u8bfe\u7a0b\u3001\u89c6\u9891\u7b49 | .NET (microsoft.com)","title":"C#"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%AE%80%E4%BB%8B/","text":"WPF WPF\uff08Windows Presentation Foundation\uff09\u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u57fa\u4e8e Windows \u7684\u7528\u6237\u754c\u9762\u6846\u67b6\uff0c\u5c5e\u4e8e .NET Framework 3.0 \u7684\u4e00\u90e8\u5206\u3002\u5b83\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u7f16\u7a0b\u6a21\u578b\u3001\u8bed\u8a00\u548c\u6846\u67b6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u5206\u79bb \u754c\u9762\u8bbe\u8ba1 \u4eba\u5458\u4e0e\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\uff1b\u540c\u65f6\u5b83\u63d0\u4f9b\u4e86\u5168\u65b0\u7684\u591a\u5a92\u4f53\u4ea4\u4e92\u7528\u6237\u56fe\u5f62\u754c\u9762\u3002 \u4f7f\u7528 [[00. \u7b80\u4ecb# C |C#]] \u8a00\u8bed\u8fdb\u884c\u5f00\u53d1\u3002","title":"WPF"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%AE%80%E4%BB%8B/#wpf","text":"WPF\uff08Windows Presentation Foundation\uff09\u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u57fa\u4e8e Windows \u7684\u7528\u6237\u754c\u9762\u6846\u67b6\uff0c\u5c5e\u4e8e .NET Framework 3.0 \u7684\u4e00\u90e8\u5206\u3002\u5b83\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u7f16\u7a0b\u6a21\u578b\u3001\u8bed\u8a00\u548c\u6846\u67b6\uff0c\u771f\u6b63\u505a\u5230\u4e86\u5206\u79bb \u754c\u9762\u8bbe\u8ba1 \u4eba\u5458\u4e0e\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\uff1b\u540c\u65f6\u5b83\u63d0\u4f9b\u4e86\u5168\u65b0\u7684\u591a\u5a92\u4f53\u4ea4\u4e92\u7528\u6237\u56fe\u5f62\u754c\u9762\u3002 \u4f7f\u7528 [[00. \u7b80\u4ecb# C |C#]] \u8a00\u8bed\u8fdb\u884c\u5f00\u53d1\u3002","title":"WPF"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/00.%20WPF%20%E6%A6%82%E8%BF%B0/","text":"[[00. WPF \u7b80\u4ecb#WPF|WPF]]\uff08Windows Presentation Foundation\uff09\u662f\u7528\u4e8e Windows \u7684\u73b0\u4ee3\u56fe\u5f62\u663e\u793a\u7cfb\u7edf\u3002\u4e0e\u4e4b\u524d\u51fa\u73b0\u7684\u5176\u4ed6\u6280\u672f\u76f8\u6bd4\uff0cWPF \u53d1\u751f\u4e86\u6839\u672c\u6027\u53d8\u5316\uff0c\u5f15\u5165\u4e86\u201c\u5185\u7f6e\u786c\u4ef6\u52a0\u901f\u201d\u548c\u201c\u5206\u8fa8\u7387\u65e0\u5173\u201d\u7b49\u521b\u65b0\u529f\u80fd\uff1b\u672c\u7ae0\u5c06\u4ecb\u7ecd\u8fd9\u4e24\u9879\u529f\u80fd\u3002 \u5982\u8981\u6784\u5efa\u8fd0\u884c\u5728 Windows Vista\u3001Windows 7 \u548c Windows 8 \u684c\u9762\u6a21\u5f0f\uff08\u4ee5\u53ca\u5bf9\u5e94\u7684 Windows Server \u7248\u672c\uff09\u4e0b\u7684\u5bcc\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\uff0cWPF \u65e0\u7591\u662f\u6700\u9002\u7528\u7684\u5de5\u5177\u5305\u3002\u4e8b\u5b9e\u4e0a\uff0cWPF \u662f\u9488\u5bf9\u8fd9\u4e9b Windows \u7248\u672c\u7684\u552f\u4e00\u901a\u7528\u5de5\u5177\u5305\u3002\u6bd4\u8f83\u8d77\u6765\uff0cMicrosoft \u65b0\u63a8\u51fa\u7684 Metro \u5de5\u5177\u5305\u867d\u7136\u4ee4\u4eba\u611f\u5230\u6fc0\u52a8\uff0c\u4f46 Metro \u7684\u4f7f\u7528\u8303\u56f4\u4ec5\u9650\u4e8e Windows 8 \u7cfb\u7edf\u3002WPF \u7684\u5e94\u7528\u8303\u56f4\u5374\u5e7f\u6cdb\u5f97\u591a\uff0c\u5b83\u751a\u81f3\u53ef\u8fd0\u884c\u5728\u4ecd\u5728\u5f88\u591a\u4f01\u4e1a\u4e2d\u4f7f\u7528\u7684\u5df2\u7ecf\u8fc7\u65f6\u7684 Windows XP \u8ba1\u7b97\u673a\u4e0a\uff1b\u552f\u4e00\u7684\u5c40\u9650\u6027\u5728\u4e8e\u60a8\u5fc5\u987b\u5bf9 Visual Studio \u8fdb\u884c\u914d\u7f6e\uff0c\u4f7f\u5176\u8f83\u4e3a\u9648\u65e7\u7684 .NET 4.0 Framework\uff08\u800c\u975e .NET 4.5)\u4f5c\u4e3a\u76ee\u6807\u3002 \u672c\u7ae0\u5c06\u9996\u5148\u4ecb\u7ecd WPF \u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u7136\u540e\u8ba8\u8bba WPF \u5982\u4f55\u5904\u7406\u53ef\u53d8\u5c4f\u5e55\u5206\u8fa8\u7387\uff0c\u5c06\u6982\u8ff0 WPF \u7684\u6838\u5fc3\u7a0b\u5e8f\u96c6\u548c\u7c7b\uff0c\u5e76\u5c06\u4ecb\u7ecd WPF \u5982\u4f55\u4ece\u521d\u59cb\u7248\u672c\u6f14\u53d8\u4e3a WPF 4.5\u3002 [[05. Windows \u56fe\u5f62\u6f14\u5316]] [[06. WPF\uff1a\u9ad8\u7ea7 API]] [[07. \u5206\u8fa8\u7387\u65e0\u5173]] [[11. WPF \u4f53\u7cfb\u7ed3\u6784]] [[12. WPF 4.5]]","title":"00. WPF \u6982\u8ff0"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/01.%20XAML/","text":"XAML\uff08Extensible Application Markup Language \u7684\u7b80\u5199\uff09\u662f\u7528\u4e8e\u5b9e\u4f8b\u5316 .NET \u5bf9\u8c61\u7684\u6807\u8bb0\u8bed\u8a00\u3002\u5c3d\u7ba1 XAML \u662f\u4e00\u79cd\u53ef\u5e94\u7528\u4e8e\u8bf8\u591a\u4e0d\u540c\u95ee\u9898\u9886\u57df\u7684\u6280\u672f\uff0c\u4f46\u5176\u4e3b\u8981\u4f5c\u7528\u662f\u6784\u9020 [[00. WPF \u7b80\u4ecb#WPF|WPF]] \u7528\u6237\u754c\u9762\u3002\u6362\u8a00\u4e4b\uff0cXAML \u6587\u6863\u5b9a\u4e49\u4e86\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ec4\u6210\u7a97\u53e3\u7684\u9762\u677f\u3001\u6309\u94ae\u4ee5\u53ca\u5404\u79cd\u63a7\u4ef6\u7684\u5e03\u5c40\u3002 \u4e0d\u5fc5\u518d\u624b\u52a8\u7f16\u5199 XAML\uff0c\u4f60\u5c06\u4f7f\u7528\u5de5\u5177\u751f\u6210\u6240\u9700\u7684 XAML\u3002\u5982\u679c\u4f60\u662f\u56fe\u50cf\u8bbe\u8ba1\u4eba\u5458\uff0c\u8be5\u5de5\u5177\u53ef\u80fd\u662f\u56fe\u50cf\u8bbe\u8ba1\u7a0b\u5e8f\uff0c\u5982 Expression Blend\u3002\u5982\u679c\u4f60\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u5f00\u59cb\u65f6\u53ef\u80fd\u4f7f\u7528 Microsoft Visual Studio\u3002\u8fd9\u4e24\u4e2a\u5de5\u5177\u5728\u751f\u6210 XAML \u65f6\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u53ef\u4f7f\u7528 Visual Studio \u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7528\u6237\u754c\u9762\uff0c\u7136\u540e\u5c06\u8be5\u754c\u9762\u79fb\u4ea4\u7ed9\u4e00\u4e2a\u51fa\u8272\u7684\u8bbe\u8ba1\u56e2\u961f\uff0c\u7531\u8bbe\u8ba1\u56e2\u961f\u5728 Expression Blend \u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fe\u5f62\u6da6\u8272\u8fd9\u4e2a\u754c\u9762\u3002\u5b9e\u9645\u4e0a\uff0c\u5c06\u5f00\u53d1\u4eba\u5458\u548c\u8bbe\u8ba1\u4eba\u5458\u7684\u5de5\u4f5c\u6d41\u7a0b\u96c6\u6210\u8d77\u6765\u7684\u80fd\u529b\uff0c\u662f Microsoft \u63a8\u51fa XAML \u7684\u91cd\u8981\u539f\u56e0\u4e4b\u4e00\u3002 \u4e00\u65e6\u7406\u89e3\u4e86 XAML \u7684\u4e00\u822c\u6027\u89c4\u5219\uff0c\u5c31\u53ef\u4ee5\u4e86\u89e3\u5728 WPF \u7528\u6237\u754c\u9762\u4e2d\u4ec0\u4e48\u662f\u53ef\u80fd\u7684\u3001\u4ec0\u4e48\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5e76\u4e86\u89e3\u5728\u5fc5\u8981\u65f6\u5982\u4f55\u624b\u52a8\u4fee\u6539\u7528\u6237\u754c\u9762\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u901a\u8fc7\u5206\u6790 WPF XAML \u6587\u6863\u4e2d\u7684\u6807\u7b7e\uff0c\u53ef\u5b66\u4e60\u4e00\u4e9b\u81f3\u6b64 WPF \u7528\u6237\u754c\u9762\u7684\u5bf9\u8c61\u6a21\u578b\uff0c\u4ece\u800c\u4e3a\u8fdb\u4e00\u6b65\u6df1\u5165\u5206\u6790 WPF \u7528\u6237\u754c\u9762\u505a\u597d\u51c6\u5907\u3002 [[13. \u7406\u89e3 XAML]] [[14. XAML \u57fa\u7840]]","title":"01. XAML"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/02.%20%E5%B8%83%E5%B1%80/","text":"\u5728\u4efb\u610f\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u4e2d\uff0c\u6709\u4e00\u534a\u7684\u5de5\u4f5c\u662f\u4ee5\u5bcc\u6709\u5438\u5f15\u529b\u3001\u7075\u6d3b\u5b9e\u7528\u7684\u65b9\u5f0f\u7ec4\u7ec7\u5185\u5bb9\u3002\u4f46\u771f\u6b63\u7684\u6311\u6218\u662f\u786e\u4fdd\u754c\u9762\u5e03\u5c40\u80fd\u591f\u6070\u5230\u597d\u5904\u5730\u9002\u5e94\u4e0d\u540c\u7684\u7a97\u53e3\u5c3a\u5bf8\u3002 [[00. WPF \u7b80\u4ecb#WPF|WPF]] \u7528\u4e0d\u540c\u7684\u5bb9\u5668\uff08container\uff09\u5b89\u6392\u5e03\u5c40\u3002\u6bcf\u4e2a\u5bb9\u5668\u6709\u5404\u81ea\u7684\u5e03\u5c40\u903b\u8f91\u2014\u2014\u6709\u4e9b\u5bb9\u5668\u4ee5\u5806\u6808\u65b9\u5f0f\u5e03\u7f6e\u5143\u7d20\uff0c\u53e6\u4e00\u4e9b\u5bb9\u5668\u5728\u7f51\u683c\u4e2d\u4e0d\u53ef\u89c1\u7684\u5355\u5143\u683c\u4e2d\u6392\u5217\u5143\u7d20\uff0c\u7b49\u7b49\u3002\u5728 WPF \u4e2d\u975e\u5e38\u62b5\u5236\u57fa\u4e8e\u5750\u6807\u7684\u5e03\u5c40\uff0c\u800c\u662f\u6ce8\u91cd\u521b\u5efa\u66f4\u7075\u6d3b\u7684\u5e03\u5c40\uff0c\u4f7f\u5e03\u5c40\u80fd\u591f\u9002\u5e94\u5185\u5bb9\u7684\u53d8\u5316\u3001\u4e0d\u540c\u7684\u8bed\u8a00\u4ee5\u53ca\u5404\u79cd\u7a97\u53e3\u5c3a\u5bf8\u3002\u8fc1\u79fb\u5230 WPF \u7684\u8bb8\u591a\u5f00\u53d1\u4eba\u5458\u4f1a\u89c9\u5f97\u65b0\u5e03\u5c40\u7cfb\u7edf\u4ee4\u81ea\u5df1\u500d\u611f\u60ca\u5947\u2014\u2014\u8fd9\u4e5f\u662f\u5f00\u53d1\u4eba\u5458\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u771f\u6b63\u6311\u6218\u3002 [[16. \u7406\u89e3 WPF \u4e2d\u7684\u5e03\u5c40]] [[17. \u4f7f\u7528 StackPanel \u9762\u677f\u8fdb\u884c\u7b80\u5355\u5e03\u5c40]] [[18. WrapPanel \u548c DockPanel \u9762\u677f]] [[19. Grid \u9762\u677f]] [[20. \u4f7f\u7528 Canvas \u9762\u677f\u8fdb\u884c\u57fa\u4e8e\u5750\u6807\u7684\u5e03\u5c40]]","title":"02. \u5e03\u5c40"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/03.%20%E4%BE%9D%E8%B5%96%E9%A1%B9%E5%B1%9E%E6%80%A7/","text":"\u5c5e\u6027\u548c\u4e8b\u4ef6\u662f .NET \u62bd\u8c61\u6a21\u578b\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u662f\u6bcf\u4f4d .NET \u7f16\u7a0b\u4eba\u5458\u90fd\u5341\u5206\u719f\u6089\u7684\u4e3b\u9898\u3002 \u6b64\u7ae0\u8282\u4ecb\u7ecd [[00. WPF \u7b80\u4ecb#WPF|WPF]] \u5982\u4f55\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u4f9d\u8d56\u9879\u5c5e\u6027\uff08dependency property\uff09\u529f\u80fd\u66ff\u6362\u539f\u6765\u7684 .NET \u5c5e\u6027\u3002\u4f9d\u8d56\u9879\u5c5e\u6027\u4f7f\u7528\u6548\u7387\u66f4\u9ad8\u7684\u4fdd\u5b58\u673a\u5236\uff0c\u5e76\u652f\u6301\u9644\u52a0\u529f\u80fd\uff0c\u5982\u66f4\u6539\u901a\u77e5\uff08change notification\uff09\u4ee5\u53ca\u5c5e\u6027\u503c\u7ee7\u627f\uff08\u5728\u5143\u7d20\u6811\u4e2d\u5411\u4e0b\u4f20\u64ad\u9ed8\u8ba4\u5c5e\u6027\u503c\u7684\u80fd\u529b\uff09\u3002\u4f9d\u8d56\u9879\u5c5e\u6027\u4e5f\u662f WPF \u8bb8\u591a\u91cd\u8981\u529f\u80fd\u7684\u57fa\u7840\uff0c\u5305\u62ec\u52a8\u753b\u3001\u6570\u636e\u7ed1\u5b9a\u4ee5\u53ca\u6837\u5f0f\u3002\u5c3d\u7ba1\u6539\u53d8\u4e86\u8fd9\u4e9b\u57fa\u7840\uff0c\u4f46\u5728\u4ee3\u7801\u4e2d\u4ecd\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8bfb\u53d6\u548c\u8bbe\u7f6e\u4f20\u7edf\u7684 .NET \u5c5e\u6027\u76f8\u540c\u7684\u65b9\u5f0f\u6765\u8bfb\u53d6\u548c\u8bbe\u7f6e\u4f9d\u8d56\u9879\u5c5e\u6027\u3002 \u6b64\u7ae0\u8282\u53ef\u8df3\u8fc7\uff0c\u9700\u8981\u6df1\u5165\u7406\u89e3 WPF \u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5e0c\u671b\u6784\u5efa\u81ea\u5df1\u7684\u4f9d\u8d56\u9879\u5c5e\u6027\u65f6\u518d\u8fd4\u56de\u7814\u7a76\u3002","title":"03. \u4f9d\u8d56\u9879\u5c5e\u6027"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/04.%20%E8%B7%AF%E7%94%B1%E4%BA%8B%E4%BB%B6/","text":"\u8def\u7531\u4e8b\u4ef6\u662f\u5177\u6709\u66f4\u5f3a\u4f20\u64ad\u80fd\u529b\u7684\u4e8b\u4ef6\u2014\u2014\u5b83\u4eec\u53ef\u5728\u5143\u7d20\u6811\u4e2d\u5411\u4e0a\u5192\u6ce1\u548c\u5411\u4e0b\u96a7\u9053\u4f20\u64ad\uff0c\u5e76\u4e14\u6cbf\u7740\u4f20\u64ad\u8def\u5f84\u88ab\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u5904\u7406\u3002\u8def\u7531\u4e8b\u4ef6\u5141\u8bb8\u4e8b\u4ef6\u5728\u67d0\u4e2a\u5143\u7d20\u4e0a\u88ab\u5904\u7406\uff08\u5982\u6807\u7b7e\uff09\uff0c\u5373\u4f7f\u8be5\u4e8b\u4ef6\u6e90\u81ea\u53e6\u4e00\u4e2a\u5143\u7d20\uff08\u5982\u6807\u7b7e\u5185\u90e8\u7684\u4e00\u5e45\u56fe\u50cf\uff09\u4e5f\u662f\u5982\u6b64\u3002\u4e0e\u4f9d\u8d56\u9879\u5c5e\u6027\u4e00\u6837\uff0c\u53ef\u901a\u8fc7\u4f20\u7edf\u7684\u65b9\u5f0f\u4f7f\u7528\u8def\u7531\u4e8b\u4ef6\u2014\u2014\u901a\u8fc7\u5173\u8054\u5177\u6709\u6b63\u786e\u7b7e\u540d\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u2014\u2014\u4f46\u4e3a\u4e86\u4f7f\u7528\u8def\u7531\u4e8b\u4ef6\u7684\u6240\u6709\u529f\u80fd\uff0c\u9700\u8981\u7406\u89e3\u5176\u5de5\u4f5c\u539f\u7406\u3002","title":"04. \u8def\u7531\u4e8b\u4ef6"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/05.%20Windows%20%E5%9B%BE%E5%BD%A2%E6%BC%94%E5%8C%96/","text":"\u5728 WPF \u95ee\u4e16\u4e4b\u524d\u7684\u8fd1 15 \u4e2a\u5e74\u5934\uff0cWindows \u5f00\u53d1\u4eba\u5458\u4e00\u76f4\u5728\u4f7f\u7528\u672c\u8d28\u4e0a\u76f8\u540c\u7684\u663e\u793a\u6280\u672f\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u7531\u4e8e\u6b64\u524d\u7684\u6bcf\u4e2a\u4f20\u7edf Windows \u5e94\u7528\u7a0b\u5e8f\u90fd\u4f9d\u9760 Windows \u64cd\u4f5c\u7cfb\u7edf\u7684\u5982\u4e0b\u4e24\u4e2a\u7531\u6765\u5df2\u4e45\u7684\u90e8\u5206\u6765\u521b\u5efa\u7528\u6237\u754c\u9762\uff1a User32\uff1a\u8be5\u90e8\u5206\u4e3a\u8bb8\u591a\u5143\u7d20\uff08\u5982\u7a97\u53e3\u3001\u6309\u94ae\u548c\u6587\u672c\u6846\u7b49\uff09\u63d0\u4f9b\u4e86\u719f\u6089\u7684 Windows \u5916\u89c2\u3002 GDI/GDI+\uff1a\u8be5\u90e8\u5206\u4e3a\u6e32\u67d3\u7b80\u5355\u5f62\u72b6\u3001\u6587\u672c\u4ee5\u53ca\u56fe\u50cf\u63d0\u4f9b\u4e86\u7ed8\u56fe\u652f\u6301\uff0c\u4f46\u589e\u52a0\u4e86\u590d\u6742\u7a0b\u5ea6\uff08\u800c\u4e14\u901a\u5e38\u6027\u80fd\u8f83\u5dee\uff09\u3002 \u5386\u7ecf\u591a\u5e74\u53d1\u5c55\uff0c\u8fd9\u4e24\u79cd\u6280\u672f\u90fd\u5f97\u5230\u4e86\u6539\u8fdb\uff0c\u800c\u4e14\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u7684\u4e0e\u5176\u4ea4\u4e92\u7684 API \u4e5f\u5df2\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\u3002\u4f46\u5728\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u7ba1\u4f7f\u7528 .NET \u548c Windows \u7a97\u4f53\uff0c\u8fd8\u662f\u4f7f\u7528\u8fc7\u53bb\u7684 Visual Basic 6 \u6216\u57fa\u4e8e MFC \u7684 C++ \u4ee3\u7801\uff0c\u5e95\u5c42\u90fd\u662f\u62e5\u6709 Windows \u64cd\u4f5c\u7cfb\u7edf\u7684\u76f8\u540c\u90e8\u5206\u6765\u5de5\u4f5c\u7684\u3002\u4e0d\u540c\u6846\u67b6\u5de5\u5177\u53ea\u662f\u4e3a\u4e0e User32 \u548c GDI/GDI+ \u8fdb\u884c\u4ea4\u4e92\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5c01\u88c5\u5668\u800c\u5df2\u3002\u8fd9\u4e9b\u6846\u67b6\u5de5\u5177\u80fd\u63d0\u9ad8\u6548\u7387\uff0c\u964d\u4f4e\u590d\u6742\u6027\uff0c\u5e76\u63d0\u4f9b\u4e86\u66f4\u591a\u9884\u7f6e\u7279\u6027\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u518d\u81ea\u884c\u7f16\u5199\u5e95\u5c42\u4ee3\u7801\uff0c\u4f46\u8fd9\u4e9b\u6846\u67b6\u5de5\u5177\u4e0d\u53ef\u80fd\u6d88\u9664\u5728 10 \u591a\u5e74\u524d\u8bbe\u8ba1\u7684\u7cfb\u7edf\u7ec4\u4ef6\u7684\u57fa\u672c\u9650\u5236\u3002 DirectX\uff1a\u65b0\u7684\u56fe\u5f62\u5f15\u64ce Microsoft \u66fe\u9488\u5bf9 User32 \u548c GDI/GID+ \u5e93\u7684\u9650\u5236\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff1aDirectX\u3002DirectX \u8d77\u521d\u662f\u4e00\u4e2a\u6613\u4e8e\u51fa\u9519\u7684\u7ec4\u5408\u6027\u8d28\u7684\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u5728 Windows \u5e73\u53f0\u4e0a\u5f00\u53d1\u6e38\u620f\u3002DirectX \u5728\u8bbe\u8ba1\u4e0a\u5173\u6ce8\u7684\u91cd\u70b9\u662f\u901f\u5ea6\uff0c\u4e3a\u6b64\uff0cMicrosoft \u548c\u663e\u5361\u4f9b\u5e94\u5546\u5bc6\u5207\u5408\u4f5c\uff0c\u4ee5\u4fbf\u4e3a DirectX \u63d0\u4f9b\u590d\u6742\u7684\u7eb9\u7406\u6620\u5c04\u3001\u7279\u6b8a\u6548\u679c\uff08\u5982\u534a\u900f\u660e\uff09\u4ee5\u53ca\u4e09\u7ef4\u56fe\u5f62\u6240\u9700\u7684\u786c\u4ef6\u52a0\u901f\u529f\u80fd\u3002 \u5728\u9996\u6b21\u53d1\u5e03 DirectX\uff08\u5728 Windows 95 \u53d1\u5e03\u540e\u4e0d\u4e45\u53d1\u5e03\uff09\u540e\u5386\u7ecf\u6570\u5e74\u7684\u53d1\u5c55\uff0cDirectX \u5df2\u8d8b\u6210\u719f\u3002\u73b0\u5728\u7684 DirectX \u5df2\u6210\u4e3a Windows \u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u53ef\u652f\u6301\u6240\u6709\u73b0\u4ee3\u663e\u5361\u3002\u7136\u800c\uff0cDirectX \u53d8\u6210 API \u4e00\u76f4\u672a\u80cc\u79bb\u5176\u8bbe\u8ba1\u521d\u8877\uff0c\u4ecd\u4e3b\u8981\u4f5c\u4e3a\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u5177\u5305\u3002\u56e0\u4e3a DirectX \u56fa\u6709\u7684\u590d\u6742\u6027\uff0c\u5b83\u51e0\u4e4e\u4ece\u672a\u7528\u4e8e\u5f00\u53d1\u4f20\u7edf\u7c7b\u578b\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\uff08\u5982\u5546\u4e1a\u8f6f\u4ef6\uff09\u3002 WPF \u5f7b\u5e95\u626d\u8f6c\u4e86\u8fd9\u79cd\u5c40\u9762\u3002\u5728 WPF \u4e2d\uff0c\u5e95\u5c42\u7684\u56fe\u5f62\u6280\u672f\u4e0d\u518d\u662f GDI/GID+\uff0c\u800c\u662f DirectX\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0d\u7ba1\u521b\u5efa\u54ea\u79cd\u7528\u6237\u754c\u9762\uff0cWPF \u5e94\u7528\u7a0b\u5e8f\u5728\u5e95\u5c42\u90fd\u662f\u4f7f\u7528 DirectX\u3002\u8fd9\u610f\u5473\u7740\uff0c\u65e0\u8bba\u8bbe\u8ba1\u590d\u6742\u7684\u4e09\u7ef4\u56fe\u5f62\uff08\u8fd9\u662f DirectX \u7684\u7279\u957f\uff09\uff0c\u8fd8\u662f\u4ec5\u7ed8\u5236\u51e0\u4e2a\u6309\u94ae\u548c\u7eaf\u6587\u672c\uff0c\u6240\u6709\u7ed8\u56fe\u5de5\u4f5c\u90fd\u662f\u901a\u8fc7 DirectX \u7ba1\u7ebf\u5b8c\u6210\u7684\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u6700\u666e\u901a\u7684\u5546\u4e1a\u5e94\u7528\u7a0b\u5e8f\u4e5f\u80fd\u4f7f\u7528\u4e30\u5bcc\u7684\u6548\u679c\uff0c\u5982\u534a\u900f\u660e\u548c\u53cd\u952f\u9f7f\u3002\u5728\u786c\u4ef6\u52a0\u901f\u65b9\u9762\u4e5f\u5e26\u6765\u4e86\u597d\u5904\uff0cDirectX \u5728\u6e32\u67d3\u56fe\u5f62\u65f6\u4f1a\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u5de5\u4f5c\u9012\u4ea4\u7ed9\u56fe\u5f62\u5904\u7406\u5355\u5143\uff08GPU\uff09\u53bb\u5904\u7406\uff0cGPU \u662f\u663e\u5361\u4e13\u7528\u7684\u5904\u7406\u5668\u3002 \u56e0\u4e3a DirectX \u80fd\u7406\u89e3\u53ef\u7531\u663e\u5361\u76f4\u63a5\u6e32\u67d3\u7684\u9ad8\u5c42\u5143\u7d20\uff0c\u5982\u7eb9\u7406\u548c\u6e10\u53d8\uff0c\u6240\u4ee5 DirectX \u6548\u7387\u66f4\u9ad8\u3002\u800c GDI/GID+ \u4e0d\u7406\u89e3\u8fd9\u4e9b\u9ad8\u5c42\u5143\u7d20\uff0c\u56e0\u6b64\u5fc5\u987b\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u9010\u50cf\u7d20\u6307\u4ee4\uff0c\u800c\u901a\u8fc7\u73b0\u4ee3\u663e\u5361\u6e32\u67d3\u8fd9\u4e9b\u6307\u4ee4\u66f4\u6162\u3002 \u4e0d\u8fc7\uff0c\u4ecd\u6709\u4e00\u4e2a User32 \u7ec4\u4ef6\u5f97\u4ee5\u4fdd\u7559\uff0c\u8be5\u7ec4\u4ef6\u53ea\u7528\u4e8e\u6709\u9650\u7684\u8303\u56f4\u3002\u56e0\u4e3a\u5bf9\u4e8e\u7279\u5b9a\u670d\u52a1\uff0cWPF \u4ecd\u4f9d\u8d56\u4e8e User32\uff0c\u5982\u5904\u7406\u548c\u8def\u7531\u8f93\u5165\u4fe1\u606f\u4ee5\u53ca\u533a\u5206\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u62e5\u6709\u5c4f\u5e55\u7684\u54ea\u4e00\u90e8\u5206\u3002\u4f46\u6240\u6709\u7ed8\u56fe\u64cd\u4f5c\u90fd\u662f\u7531 DirectX \u5b8c\u6210\u7684\u3002 \u786c\u4ef6\u52a0\u901f\u4e0e WPF \u663e\u5361\u5728\u652f\u6301\u7279\u5b9a\u6e32\u67d3\u7279\u6027\u548c\u4f18\u5316\u65b9\u9762\u662f\u6709\u533a\u522b\u7684\u3002\u4ee4\u4eba\u611f\u5230\u5e86\u5e78\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\uff0c\u539f\u56e0\u6709\u4e24\u70b9\u3002\u9996\u5148\uff0c\u5f53\u4eca\u5927\u591a\u6570\u8ba1\u7b97\u673a\u914d\u5907\u7684\u663e\u5361\u786c\u4ef6\u90fd\u8db3\u4ee5\u652f\u6301 3D \u7ed8\u56fe\u548c\u52a8\u753b\u7b49 WPF \u529f\u80fd\u3002\u5373\u4f7f\u662f\u4f7f\u7528\u96c6\u6210\u56fe\u5f62\u5904\u7406\u5668\uff08\u56fe\u50cf\u5904\u7406\u5668~~\u96c6\u6210\u5230\u4e3b\u677f\u4e2d~~\u73b0\u5728\u90fd\u96c6\u6210\u5728 CPU\uff0c\u800c\u975e\u72ec\u7acb\u7684\u5361\uff09\u7684\u4fbf\u643a\u5f0f\u7535\u8111\u548c\u684c\u9762\u8ba1\u7b97\u673a\u4e5f\u540c\u6837\u5982\u6b64\u3002\u5176\u6b21\uff0cWPF \u4e3a\u5b8c\u6210\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u9884\u5907\u4e86\u8f6f\u4ef6\u5904\u7406\u65b9\u5f0f\u3002\u8fd9\u610f\u5473\u7740\uff0cWPF \u7684\u667a\u80fd\u7a0b\u5ea6\u8db3\u591f\u9ad8\uff0c\u4f1a\u5c3d\u91cf\u91c7\u7528\u786c\u4ef6\u4f18\u5316\u65b9\u5f0f\uff0c\u4f46\u5982\u6709\u5fc5\u8981\uff0c\u5b83\u4e5f\u53ef\u91c7\u7528\u8f6f\u4ef6\u8ba1\u7b97\u65b9\u5f0f\u6765\u5b8c\u6210\u540c\u6837\u7684\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u914d\u5907\u65e7\u5f0f\u663e\u5361\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c WPF \u5e94\u7528\u7a0b\u5e8f\uff0c\u754c\u9762\u4ecd\u5c06\u6309\u5176\u8bbe\u8ba1\u65b9\u5f0f\u663e\u793a\u3002\u5f53\u7136\uff0c\u6b21\u554a\u7528\u8f6f\u4ef6\u8ba1\u7b97\u65b9\u5f0f\u65f6\uff0c\u901f\u5ea6\u5b50\u8f6f\u4f1a\u6162\u5f88\u591a\uff0c\u800c\u4e14\u914d\u5907\u65e7\u5f0f\u663e\u5361\u7684\u8ba1\u7b97\u673a\u4e0d\u80fd\u5341\u5206\u987a\u7545\u5730\u8fd0\u884c\u5bcc WPF \u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u5bcc WPF \u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u590d\u6742\u52a8\u753b\u6216\u5176\u4ed6\u5bc6\u96c6\u56fe\u5f62\u6548\u679c\uff0c\u8fd9\u8868\u73b0\u5f97\u5c24\u4e3a\u660e\u663e\u3002","title":"05. Windows \u56fe\u5f62\u6f14\u5316"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/05.%20Windows%20%E5%9B%BE%E5%BD%A2%E6%BC%94%E5%8C%96/#directx","text":"Microsoft \u66fe\u9488\u5bf9 User32 \u548c GDI/GID+ \u5e93\u7684\u9650\u5236\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff1aDirectX\u3002DirectX \u8d77\u521d\u662f\u4e00\u4e2a\u6613\u4e8e\u51fa\u9519\u7684\u7ec4\u5408\u6027\u8d28\u7684\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u5728 Windows \u5e73\u53f0\u4e0a\u5f00\u53d1\u6e38\u620f\u3002DirectX \u5728\u8bbe\u8ba1\u4e0a\u5173\u6ce8\u7684\u91cd\u70b9\u662f\u901f\u5ea6\uff0c\u4e3a\u6b64\uff0cMicrosoft \u548c\u663e\u5361\u4f9b\u5e94\u5546\u5bc6\u5207\u5408\u4f5c\uff0c\u4ee5\u4fbf\u4e3a DirectX \u63d0\u4f9b\u590d\u6742\u7684\u7eb9\u7406\u6620\u5c04\u3001\u7279\u6b8a\u6548\u679c\uff08\u5982\u534a\u900f\u660e\uff09\u4ee5\u53ca\u4e09\u7ef4\u56fe\u5f62\u6240\u9700\u7684\u786c\u4ef6\u52a0\u901f\u529f\u80fd\u3002 \u5728\u9996\u6b21\u53d1\u5e03 DirectX\uff08\u5728 Windows 95 \u53d1\u5e03\u540e\u4e0d\u4e45\u53d1\u5e03\uff09\u540e\u5386\u7ecf\u6570\u5e74\u7684\u53d1\u5c55\uff0cDirectX \u5df2\u8d8b\u6210\u719f\u3002\u73b0\u5728\u7684 DirectX \u5df2\u6210\u4e3a Windows \u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u53ef\u652f\u6301\u6240\u6709\u73b0\u4ee3\u663e\u5361\u3002\u7136\u800c\uff0cDirectX \u53d8\u6210 API \u4e00\u76f4\u672a\u80cc\u79bb\u5176\u8bbe\u8ba1\u521d\u8877\uff0c\u4ecd\u4e3b\u8981\u4f5c\u4e3a\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u5177\u5305\u3002\u56e0\u4e3a DirectX \u56fa\u6709\u7684\u590d\u6742\u6027\uff0c\u5b83\u51e0\u4e4e\u4ece\u672a\u7528\u4e8e\u5f00\u53d1\u4f20\u7edf\u7c7b\u578b\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\uff08\u5982\u5546\u4e1a\u8f6f\u4ef6\uff09\u3002 WPF \u5f7b\u5e95\u626d\u8f6c\u4e86\u8fd9\u79cd\u5c40\u9762\u3002\u5728 WPF \u4e2d\uff0c\u5e95\u5c42\u7684\u56fe\u5f62\u6280\u672f\u4e0d\u518d\u662f GDI/GID+\uff0c\u800c\u662f DirectX\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0d\u7ba1\u521b\u5efa\u54ea\u79cd\u7528\u6237\u754c\u9762\uff0cWPF \u5e94\u7528\u7a0b\u5e8f\u5728\u5e95\u5c42\u90fd\u662f\u4f7f\u7528 DirectX\u3002\u8fd9\u610f\u5473\u7740\uff0c\u65e0\u8bba\u8bbe\u8ba1\u590d\u6742\u7684\u4e09\u7ef4\u56fe\u5f62\uff08\u8fd9\u662f DirectX \u7684\u7279\u957f\uff09\uff0c\u8fd8\u662f\u4ec5\u7ed8\u5236\u51e0\u4e2a\u6309\u94ae\u548c\u7eaf\u6587\u672c\uff0c\u6240\u6709\u7ed8\u56fe\u5de5\u4f5c\u90fd\u662f\u901a\u8fc7 DirectX \u7ba1\u7ebf\u5b8c\u6210\u7684\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u6700\u666e\u901a\u7684\u5546\u4e1a\u5e94\u7528\u7a0b\u5e8f\u4e5f\u80fd\u4f7f\u7528\u4e30\u5bcc\u7684\u6548\u679c\uff0c\u5982\u534a\u900f\u660e\u548c\u53cd\u952f\u9f7f\u3002\u5728\u786c\u4ef6\u52a0\u901f\u65b9\u9762\u4e5f\u5e26\u6765\u4e86\u597d\u5904\uff0cDirectX \u5728\u6e32\u67d3\u56fe\u5f62\u65f6\u4f1a\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u5de5\u4f5c\u9012\u4ea4\u7ed9\u56fe\u5f62\u5904\u7406\u5355\u5143\uff08GPU\uff09\u53bb\u5904\u7406\uff0cGPU \u662f\u663e\u5361\u4e13\u7528\u7684\u5904\u7406\u5668\u3002 \u56e0\u4e3a DirectX \u80fd\u7406\u89e3\u53ef\u7531\u663e\u5361\u76f4\u63a5\u6e32\u67d3\u7684\u9ad8\u5c42\u5143\u7d20\uff0c\u5982\u7eb9\u7406\u548c\u6e10\u53d8\uff0c\u6240\u4ee5 DirectX \u6548\u7387\u66f4\u9ad8\u3002\u800c GDI/GID+ \u4e0d\u7406\u89e3\u8fd9\u4e9b\u9ad8\u5c42\u5143\u7d20\uff0c\u56e0\u6b64\u5fc5\u987b\u5c06\u5b83\u4eec\u8f6c\u6362\u6210\u9010\u50cf\u7d20\u6307\u4ee4\uff0c\u800c\u901a\u8fc7\u73b0\u4ee3\u663e\u5361\u6e32\u67d3\u8fd9\u4e9b\u6307\u4ee4\u66f4\u6162\u3002 \u4e0d\u8fc7\uff0c\u4ecd\u6709\u4e00\u4e2a User32 \u7ec4\u4ef6\u5f97\u4ee5\u4fdd\u7559\uff0c\u8be5\u7ec4\u4ef6\u53ea\u7528\u4e8e\u6709\u9650\u7684\u8303\u56f4\u3002\u56e0\u4e3a\u5bf9\u4e8e\u7279\u5b9a\u670d\u52a1\uff0cWPF \u4ecd\u4f9d\u8d56\u4e8e User32\uff0c\u5982\u5904\u7406\u548c\u8def\u7531\u8f93\u5165\u4fe1\u606f\u4ee5\u53ca\u533a\u5206\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u62e5\u6709\u5c4f\u5e55\u7684\u54ea\u4e00\u90e8\u5206\u3002\u4f46\u6240\u6709\u7ed8\u56fe\u64cd\u4f5c\u90fd\u662f\u7531 DirectX \u5b8c\u6210\u7684\u3002","title":"DirectX\uff1a\u65b0\u7684\u56fe\u5f62\u5f15\u64ce"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/05.%20Windows%20%E5%9B%BE%E5%BD%A2%E6%BC%94%E5%8C%96/#wpf","text":"\u663e\u5361\u5728\u652f\u6301\u7279\u5b9a\u6e32\u67d3\u7279\u6027\u548c\u4f18\u5316\u65b9\u9762\u662f\u6709\u533a\u522b\u7684\u3002\u4ee4\u4eba\u611f\u5230\u5e86\u5e78\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\uff0c\u539f\u56e0\u6709\u4e24\u70b9\u3002\u9996\u5148\uff0c\u5f53\u4eca\u5927\u591a\u6570\u8ba1\u7b97\u673a\u914d\u5907\u7684\u663e\u5361\u786c\u4ef6\u90fd\u8db3\u4ee5\u652f\u6301 3D \u7ed8\u56fe\u548c\u52a8\u753b\u7b49 WPF \u529f\u80fd\u3002\u5373\u4f7f\u662f\u4f7f\u7528\u96c6\u6210\u56fe\u5f62\u5904\u7406\u5668\uff08\u56fe\u50cf\u5904\u7406\u5668~~\u96c6\u6210\u5230\u4e3b\u677f\u4e2d~~\u73b0\u5728\u90fd\u96c6\u6210\u5728 CPU\uff0c\u800c\u975e\u72ec\u7acb\u7684\u5361\uff09\u7684\u4fbf\u643a\u5f0f\u7535\u8111\u548c\u684c\u9762\u8ba1\u7b97\u673a\u4e5f\u540c\u6837\u5982\u6b64\u3002\u5176\u6b21\uff0cWPF \u4e3a\u5b8c\u6210\u7684\u6240\u6709\u5de5\u4f5c\u90fd\u9884\u5907\u4e86\u8f6f\u4ef6\u5904\u7406\u65b9\u5f0f\u3002\u8fd9\u610f\u5473\u7740\uff0cWPF \u7684\u667a\u80fd\u7a0b\u5ea6\u8db3\u591f\u9ad8\uff0c\u4f1a\u5c3d\u91cf\u91c7\u7528\u786c\u4ef6\u4f18\u5316\u65b9\u5f0f\uff0c\u4f46\u5982\u6709\u5fc5\u8981\uff0c\u5b83\u4e5f\u53ef\u91c7\u7528\u8f6f\u4ef6\u8ba1\u7b97\u65b9\u5f0f\u6765\u5b8c\u6210\u540c\u6837\u7684\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u914d\u5907\u65e7\u5f0f\u663e\u5361\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c WPF \u5e94\u7528\u7a0b\u5e8f\uff0c\u754c\u9762\u4ecd\u5c06\u6309\u5176\u8bbe\u8ba1\u65b9\u5f0f\u663e\u793a\u3002\u5f53\u7136\uff0c\u6b21\u554a\u7528\u8f6f\u4ef6\u8ba1\u7b97\u65b9\u5f0f\u65f6\uff0c\u901f\u5ea6\u5b50\u8f6f\u4f1a\u6162\u5f88\u591a\uff0c\u800c\u4e14\u914d\u5907\u65e7\u5f0f\u663e\u5361\u7684\u8ba1\u7b97\u673a\u4e0d\u80fd\u5341\u5206\u987a\u7545\u5730\u8fd0\u884c\u5bcc WPF \u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u5bcc WPF \u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u590d\u6742\u52a8\u753b\u6216\u5176\u4ed6\u5bc6\u96c6\u56fe\u5f62\u6548\u679c\uff0c\u8fd9\u8868\u73b0\u5f97\u5c24\u4e3a\u660e\u663e\u3002","title":"\u786c\u4ef6\u52a0\u901f\u4e0e WPF"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/06.%20WPF%EF%BC%9A%E9%AB%98%E7%BA%A7%20API/","text":"\u5982\u679c WPF \u4ec5\u901a\u8fc7 DirectX \u63d0\u4f9b\u786c\u4ef6\u52a0\u901f\u529f\u80fd\uff0c\u90a3\u4e48\u5b83\u53ea\u80fd\u7b97\u662f\u4e00\u9879\u91cd\u8981\u6539\u8fdb\uff0c\u800c\u4e0d\u662f\u9769\u547d\u6027\u7684\u53d8\u5316\u3002\u5b9e\u9645\u4e0a\uff0cWPF \u5305\u542b\u4e86\u4e00\u6574\u5957\u9762\u5411\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u4eba\u5458\u7684\u9ad8\u7ea7\u670d\u52a1\u3002 \u4e0b\u9762\u5217\u51fa WPF \u5f15\u5165\u5230 Windows \u7f16\u7a0b\u9886\u57df\u4e2d\u7684\u4e00\u4e9b\u6700\u91cd\u8981\u53d8\u5316\uff1a \u7c7b\u4f3c Web \u7684\u5e03\u5c40\u6a21\u578b\u3002 \u4e0e\u901a\u8fc7\u7279\u5b9a\u7684\u5750\u6807\u5c06\u63a7\u4ef6\u56fa\u5b9a\u5728\u5177\u4f53\u4f4d\u7f6e\u4e0d\u540c\uff0cWPF \u5341\u5206\u6ce8\u91cd\u7075\u6d3b\u7684\u6d41\u5f0f\u5e03\u5c40\uff0c\u6839\u636e\u63a7\u4ef6\u7684\u5185\u5bb9\u7075\u6d3b\u5730\u6392\u5217\u63a7\u4ef6\uff0c\u4ece\u800c\u4f7f\u7528\u6237\u754c\u9762\u80fd\u9002\u5e94\u53d8\u5316\u5e45\u5ea6\u5927\u7684\u5185\u5bb9\u4ee5\u53ca\u4e0d\u540c\u7684\u8bed\u8a00\u3002 \u4e30\u5bcc\u7684\u7ed8\u56fe\u6a21\u578b\u3002 \u4e0e\u9010\u50cf\u7d20\u8fdb\u884c\u7ed8\u5236\u4e0d\u540c\uff0c\u5728 WPF \u4e2d\u53ef\u76f4\u63a5\u5904\u7406\u56fe\u5143\u2014\u2014\u57fa\u672c\u5f62\u72b6\u3001\u6587\u672c\u5757\u4ee5\u53ca\u5176\u4ed6\u56fe\u5f62\u5143\u7d20\u3002\u4e5f\u53ef\u4f7f\u7528\u5176\u4ed6\u65b0\u7279\u6027\uff0c\u5982\u771f\u6b63\u7684\u900f\u660e\u63a7\u4ef6\u3001\u653e\u7f6e\u591a\u5c42\u5e76\u5177\u6709\u4e0d\u540c\u900f\u660e\u5ea6\u5185\u5bb9\u7684\u529f\u80fd\u4ee5\u53ca\u672c\u5730 3D \u652f\u6301\u3002 \u4e30\u5bcc\u7684\u6587\u672c\u6a21\u578b\u3002 WPF \u4e3a Windows \u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u5728\u7528\u6237\u754c\u9762\u7684\u4efb\u4f55\u4f4d\u7f6e\u663e\u793a\u4e30\u5bcc\u7684\u6837\u5f0f\u5316\u6587\u672c\u7684\u529f\u80fd\u3002\u751a\u81f3\u53ef\u5c06\u6587\u672c\u548c\u5217\u8868\u3001\u6d6e\u52a8\u7684\u56fe\u5f62\u4ee5\u53ca\u5176\u4ed6\u7528\u6237\u754c\u9762\u5143\u7d20\u7ed3\u5408\u8d77\u6765\u3002\u5e76\u4e14\u5982\u679c\u9700\u8981\u663e\u793a\u5927\u91cf\u6587\u672c\uff0c\u8fd8\u53ef\u4f7f\u7528\u9ad8\u7ea7\u7684\u6587\u6863\u663e\u793a\u7279\u6027\uff0c\u4f8b\u5982\u6362\u884c\u3001\u5206\u5217\u548c\u5bf9\u9f50\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u4f5c\u4e3a\u9996\u8981\u7f16\u7a0b\u6982\u5ff5\u7684\u52a8\u753b\u3002 \u5728 WPF \u4e2d\uff0c\u4e0d\u5fc5\u518d\u7528\u8ba1\u65f6\u5668\u6765\u5f3a\u5236\u7a97\u4f53\u91cd\u7ed8\u81ea\u8eab\u3002\u4e0e\u6b64\u76f8\u53cd\uff0c\u52a8\u753b\u6210\u4e3a WPF \u6846\u67b6\u7684\u56fa\u6709\u90e8\u5206\u3002\u5728 WPF \u4e2d\u53ef\u4f7f\u7528\u58f0\u660e\u5f0f\u6807\u7b7e\u5b9a\u4e49\u52a8\u753b\uff0cWPF \u4f1a\u81ea\u52a8\u8ba9\u5b83\u4eec\u52a8\u8d77\u6765\u3002 \u652f\u6301\u97f3\u9891\u548c\u89c6\u9891\u5a92\u4f53\u3002 \u4ee5\u524d\u7684\u7528\u6237\u754c\u9762\u5f00\u53d1\u5de5\u5177\u5305\uff08\u5982 Windows \u7a97\u4f53\uff09\u5bf9\u591a\u5a92\u4f53\u7684\u5904\u7406\u6709\u5f88\u5927\u7684\u9650\u5236\u3002\u4f46 WPF \u652f\u6301\u64ad\u653e\u4efb\u4f55 Windows \u5a92\u4f53\u64ad\u653e\u5668\u6240\u652f\u6301\u7684\u97f3\u9891\u548c\u89c6\u9891\u6587\u4ef6\uff0c\u5e76\u5141\u8bb8\u540c\u65f6\u64ad\u653e\u591a\u4e2a\u5a92\u4f53\u6587\u4ef6\u3002\u66f4\u5f15\u4eba\u6ce8\u76ee\u7684\u662f\uff0cWPF \u63d0\u4f9b\u4e86\u5141\u8bb8\u5728\u7528\u6237\u754c\u9762\u7684\u5176\u4ed6\u90e8\u5206\u96c6\u6210\u89c6\u9891\u5185\u5bb9\u7684\u5de5\u5177\uff0c\u8fd8\u5141\u8bb8\u6dfb\u52a0\u7279\u6548\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u65cb\u8f6c\u7684 3D \u7acb\u65b9\u4f53\u4e0a\u653e\u7f6e\u89c6\u9891\u7a97\u53e3\u3002 \u6837\u5f0f\u548c\u6a21\u677f\u3002 \u901a\u8fc7\u6837\u5f0f\u53ef\u5b9e\u73b0\u663e\u793a\u683c\u5f0f\u7684\u6807\u51c6\u5316\uff0c\u5e76\u53ef\u5728\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53cd\u590d\u4f7f\u7528\u3002\u901a\u8fc7\u6a21\u677f\u53ef\u6539\u53d8\u5143\u7d20\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u751a\u81f3\u6539\u53d8\u6838\u5fc3\u63a7\u4ef6\uff08\u5982\u6309\u94ae\uff09\u7684\u6e32\u67d3\u65b9\u5f0f\u3002\u5728\u521b\u5efa\u73b0\u4ee3\u7684\u5177\u6709\u76ae\u80a4\u7684\u7528\u6237\u754c\u9762\u65f6\uff0c\u4ece\u6765\u90fd\u4e0d\u50cf\u73b0\u5728\u8fd9\u6837\u65b9\u4fbf\u3002 \u547d\u4ee4\u3002 \u5927\u591a\u6570\u7528\u6237\u5df2\u8ba4\u8bc6\u5230\uff0c\u901a\u8fc7\u83dc\u5355\u6216\u5de5\u5177\u680f\u51fa\u53d1 Open \u547d\u4ee4\u5e76\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u6700\u7ec8\u7ed3\u679c\u662f\u76f8\u540c\u7684\u3002\u73b0\u5728\u901a\u8fc7\u4ee3\u7801\u62bd\u8c61\uff0c\u53ef\u5728\u7279\u5b9a\u4f4d\u7f6e\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u547d\u4ee4\u5e76\u5c06\u5176\u94fe\u63a5\u5230\u591a\u4e2a\u63a7\u4ef6\u4e0a\u3002 \u58f0\u660e\u5f0f\u7528\u6237\u754c\u9762\u3002 \u5c3d\u7ba1\u53ef\u7f16\u5199\u4ee3\u7801\u6765\u521b\u5efa WPF \u7a97\u53e3\uff0c\u4f46 Visual Studio \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002\u5b83\u5c06\u6bcf\u4e2a\u7a97\u53e3\u7684\u5185\u5bb9\u4e32\u884c\u5316\u5230 XAML \u6587\u6863\u4e2d\u7684\u4e00\u7ec4 XML \u6807\u7b7e\u4e2d\u3002\u5176\u4f18\u70b9\u662f\u7528\u6237\u754c\u9762\u548c\u4ee3\u7801\u5b8c\u5168\u5206\u79bb\uff0c\u5e76\u4e14\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u53ef\u4f7f\u7528\u4e13\u4e1a\u5de5\u5177\u7f16\u8f91 XAML \u6587\u4ef6\uff0c\u5e76\u6700\u7ec8\u6da6\u8272\u5e94\u7528\u7a0b\u5e8f\u7684\u524d\u7aef\u754c\u9762\u3002XAML \u662f Extensible Application Markup Language\uff08\u53ef\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u6807\u8bb0\u8bed\u8a00\uff09\u7684\u7f29\u5199\u3002 \u57fa\u4e8e\u9875\u9762\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u53ef\u4f7f\u7528 WPF \u521b\u5efa\u7c7b\u4f3c\u4e8e\u6d4f\u89c8\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u53ef\u901a\u8fc7\u201c\u524d\u8fdb\u201d\u548c\u201c\u540e\u9000\u201c\u6309\u94ae\u5728\u4e00\u7ec4\u9875\u9762\u4e2d\u79fb\u52a8\u3002\u7531 WPF \u6765\u5904\u7406\u90a3\u4e9b\u7eb7\u7e41\u7684\u7ec6\u8282\uff0c\u5982\u9875\u9762\u5386\u53f2\u3002\u751a\u81f3\u53ef\u5c06\u9879\u76ee\u90e8\u7f72\u4e3a\u8fd0\u884c\u4e0e IE \u4e2d\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"06. WPF\uff1a\u9ad8\u7ea7 API"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/07.%20%E5%88%86%E8%BE%A8%E7%8E%87%E6%97%A0%E5%85%B3/","text":"\u4f20\u7edf\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u53d7\u7279\u5b9a\u7684\u5047\u5b9a\u5c4f\u5e55\u5206\u8fa8\u7387\u7684\u9650\u5236\u3002\u5728\u8bbe\u8ba1\u7a97\u53e3\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u5047\u5b9a\u6807\u51c6\u7684\u663e\u793a\u5668\u5206\u8fa8\u7387\uff08\u5982 1920\u00d71080 \u50cf\u7d20\uff09\uff0c\u5e76\u9488\u5bf9\u66f4\u5c0f\u6216\u66f4\u5927\u7684\u5206\u8fa8\u7387\u5c3d\u91cf\u4fdd\u8bc1\u7a97\u53e3\u80fd\u591f\u5408\u7406\u5730\u6539\u53d8\u5c3a\u5bf8\u3002 \u95ee\u9898\u662f\u4f20\u7edf Windows \u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u662f\u4e0d\u53ef\u4f38\u7f29\u7684\u3002\u56e0\u6b64\u5982\u679c\u4f7f\u7528\u66f4\u9ad8\u7684\u663e\u793a\u5668\u5206\u8fa8\u7387\uff0c\u5c06\u4f1a\u66f4\u7d27\u5bc6\u5730\u6392\u5217\u50cf\u7d20\uff0c\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\u5c06\u53d8\u5f97\u66f4\u5c0f\u5e76\u66f4\u96be\u4ee5\u9605\u8bfb\u3002\u7279\u522b\u662f\u5bf9\u4e8e\u4f7f\u7528\u50cf\u7d20\u6392\u5217\u66f4\u52a0\u7d27\u5bc6\u7684\u65b0\u5f0f\u663e\u793a\u5668\uff0c\u5f53\u4ee5\u8f83\u9ad8\u5206\u8fa8\u7387\u8fd0\u884c\u65f6\uff0c\u95ee\u9898\u66f4\u8d8b\u4e25\u91cd\u3002\u4f8b\u5982\uff0c\u901a\u5e38\u53ef\u53d1\u73b0\u7528\u6237\u4f7f\u7528\u7684\u67d0\u4e9b\u663e\u793a\u5668\uff08\u7279\u522b\u662f\u4fbf\u643a\u5f0f\u7535\u8111\u7684\u663e\u793a\uff09\u7684\u50cf\u7d20\u6392\u5217\u5bc6\u5ea6\u662f 120 dpi\uff08dot per inch\uff0c\u6bcf\u82f1\u5bf8\u50cf\u7d20\u70b9\u6570\uff09\u6216 144 dpi\uff0c\u8d85\u8fc7\u66f4\u5e38\u89c1\u7684 96 dpi\u3002\u5f53\u8fd9\u4e9b\u663e\u793a\u5668\u4f7f\u7528\u5b83\u4eec\u9ed8\u8ba4\u7684\u5206\u8fa8\u7387\u65f6\uff0c\u50cf\u7d20\u4f1a\u4ee5\u66f4\u7d27\u5bc6\u7684\u65b9\u5f0f\u663e\u793a\uff0c\u4f7f\u63a7\u4ef6\u548c\u6587\u672c\u53d8\u5f97\u66f4\u5c0f\u3002 \u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u5e94\u4f7f\u7528\u66f4\u9ad8\u7684\u50cf\u7d20\u5bc6\u5ea6\u663e\u793a\u66f4\u591a\u7ec6\u8282\u3002\u4f8b\u5982\uff0c\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u5668\u53ef\u663e\u793a\u76f8\u540c\u5927\u5c0f\u7684\u5de5\u5177\u680f\u56fe\u6807\uff0c\u4f46\u4f7f\u7528\u66f4\u591a\u50cf\u7d20\u663e\u793a\u66f4\u6e05\u6670\u7684\u56fe\u5f62\u3002\u8fd9\u6837\u53ef\u4fdd\u6301\u76f8\u540c\u7684\u57fa\u672c\u5e03\u5c40\uff0c\u4f46\u589e\u52a0\u4e86\u6e05\u6670\u5ea6\u548c\u7ec6\u8282\u3002\u51fa\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u8fd9\u79cd\u89e3\u51b3\u65b9\u6cd5\u5728\u8fc7\u53bb\u65f6\u65e0\u6cd5\u5b9e\u73b0\u7684\u3002\u5c3d\u7ba1\u53ef\u6539\u53d8\u7528 GDI/GID+ \u7ed8\u5236\u7684\u56fe\u5f62\u5185\u5bb9\u7684\u5927\u5c0f\uff0c\u4f46 User32\uff08\u8d1f\u8d23\u4e3a\u901a\u7528\u63a7\u4ef6\u751f\u6210\u53ef\u89c6\u5316\u5916\u89c2\uff09\u4e0d\u652f\u6301\u771f\u6b63\u7684\u7f29\u653e\u3002 \u8fd9\u4e2a\u95ee\u9898\u5728 WPF \u4e2d\u4e0d\u590d\u5b58\u5728\uff0c\u56e0\u4e3a WPF \u81ea\u884c\u6e32\u67d3\u6240\u6709\u7528\u6237\u754c\u9762\u5143\u7d20\uff0c\u4ece\u7b80\u5355\u7684\u5f62\u72b6\u5230\u901a\u7528\u63a7\u4ef6\uff08\u5982\u6309\u94ae\uff09\u3002\u6240\u4ee5\uff0c\u5982\u679c\u5728\u8ba1\u7b97\u673a\u663e\u793a\u5668\u4e0a\u521b\u5efa\u4e00\u4e2a 1 \u82f1\u5bf8\u5bbd\u7684\u6309\u94ae\uff0c\u5728\u66f4\u9ad8\u5206\u8fa8\u7387\u7684\u663e\u793a\u5668\u4e0a\u5b83\u4ecd\u80fd\u4fdd\u6301 1 \u82f1\u5bf8\u7684\u5bbd\u5ea6\u2014\u2014WPF \u53ea\u662f\u4f7f\u7528\u66f4\u591a\u50cf\u7d20\u66f4\u8be6\u7ec6\u5730\u6e32\u67d3\u8fd9\u4e2a\u6309\u94ae\u7f62\u4e86\u3002 \u8fd9\u91cc\u505a\u4e86\u603b\u4f53\u6027\u63cf\u8ff0\uff0c\u5e76\u901a\u8fc7\u51e0\u4e2a\u7ec6\u8282\u8fdb\u884c\u4e86\u89e3\u91ca\u3002\u6700\u91cd\u8981\u7684\u662f\u8981\u8ba4\u8bc6\u5230 WPF \u6839\u636e\u7cfb\u7edf DPI \u8bbe\u7f6e\u8fdb\u884c\u7f29\u653e\uff0c\u5e76\u4e0d\u6839\u636e\u7269\u7406\u663e\u793a\u8bbe\u5907\u7684 DPI \u8fdb\u884c\u7f29\u653e\u3002\u8fd9\u662f\u5341\u5206\u5408\u7406\u7684\u2014\u2014\u6bd5\u7adf\u5728 100 \u82f1\u5bf8\u7684\u6295\u5f71\u4eea\u4e0a\u663e\u793a\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u80fd\u4f1a\u7ad9\u5728\u6295\u5f71\u4eea\u540e\u9762\u51e0\u6b65\u8fdc\u7684\u5730\u65b9\uff0c\u5e76\u5e0c\u671b\u770b\u5230\u7279\u5927\u7248\u672c\u7684\u7a97\u53e3\u3002\u4e0d\u5e0c\u671b WPF \u9aa4\u7136\u95f4\u5c06\u5e94\u7528\u7a0b\u5e8f\u7f29\u81f3\u201d\u6b63\u5e38\u201c\u5927\u5c0f\u3002\u540c\u6837\uff0c\u5982\u679c\u4f7f\u7528\u5177\u6709\u66f4\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u5668\u7684\u4fbf\u643a\u5f0f\u7535\u8111\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u7a97\u53e3\u5c0f\u4e00\u4e9b\u2014\u2014\u8fd9\u662f\u5728\u66f4\u5c0f\u5c4f\u5e55\u4e0a\u663e\u793a\u4fe1\u606f\u5fc5\u987b\u4ed8\u51fa\u7684\u4ee3\u4ef7\u3002\u66f4\u8fdb\u4e00\u6b65\u8bb2\uff0c\u4e0d\u540c\u7528\u6237\u6709\u4e0d\u540c\u7684\u504f\u597d\u3002\u6709\u4e9b\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u663e\u793a\u66f4\u4e30\u5bcc\u7684\u7ec6\u8282\uff0c\u800c\u53e6\u4e00\u4e9b\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u663e\u793a\u66f4\u591a\u5185\u5bb9\u3002 \u90a3\u4e48\uff0cWPF \u5982\u4f55\u786e\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3\u7684\u5927\u5c0f\u5462\uff1f\u7b80\u5355\u6765\u8bb2\uff0c\u5c31\u662f\u5f53 WPF \u8ba1\u7b97\u7a97\u53e3\u5c3a\u5bf8\u65f6\u4f7f\u7528\u7cfb\u7edf DPI \u8bbe\u7f6e\u3002\u4f46\u8981\u60f3\u7406\u89e3\u5e95\u5c42\u5de5\u4f5c\u539f\u7406\uff0c\u8fdb\u4e00\u6b65\u63a2\u8ba8 WPF \u5ea6\u91cf\u7cfb\u7edf\u65f6\u5f88\u6709\u5e2e\u52a9\u7684\u3002 [[08. WPF \u5355\u4f4d]] [[09. \u7cfb\u7edf DPI]] [[10. \u4f4d\u56fe\u548c\u77e2\u91cf\u56fe]]","title":"07. \u5206\u8fa8\u7387\u65e0\u5173"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/08.%20WPF%20%E5%8D%95%E4%BD%8D/","text":"WPF \u7a97\u53e3\u4ee5\u53ca\u5176\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4f7f\u7528\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u5355\u4f4d\u8fdb\u884c\u5ea6\u91cf\u3002\u4e00\u4e2a\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u5355\u4f4d\u88ab\u5b9a\u4e49\u4e3a 1/96 \u82f1\u5bf8\u3002\u4e3a\u4e86\u7406\u89e3\u5176\u5b9e\u9645\u542b\u4e49\uff0c\u4e0b\u9762\u5c06\u5206\u6790\u4e00\u4e2a\u4f8b\u5b50\u3002 \u8bbe\u60f3\u7528 WPF \u521b\u5efa\u4e00\u4e2a\u5c3a\u5bf8\u4e3a 96\u00d796 \u5355\u4f4d\u7684\u5c0f\u6309\u94ae\u3002\u5982\u679c\u4f7f\u7528\u6807\u51c6\u7684 Windows DPI \u8bbe\u7f6e\uff0896 dpi\uff09\uff0c\u6bcf\u4e2a\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u5b9e\u9645\u4e0a\u5bf9\u5e94\u4e00\u4e2a\u65e0\u8bba\u50cf\u7d20\u3002\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0cWPF \u7528\u4e00\u4e0b\u516c\u5f0f\u8fdb\u884c\u8ba1\u7b97\uff1a ![[WPF\u5355\u4f4d_1.png]] \u672c\u8d28\u4e0a\uff0cWPF \u5047\u5b9a\u4f7f\u7528 96 \u4e2a\u50cf\u7d20\u6784\u6210 1 \u82f1\u5bf8\uff0c\u56e0\u4e3a\u8fd9\u662f Windows \u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u7cfb\u7edf DPI \u8bbe\u7f6e\u544a\u8bc9 WPF \u7684\u3002\u4f46\u5b9e\u9645\u4e0a\u4f9d\u8d56\u4e8e\u663e\u793a\u8bbe\u5907\u3002 \u4f8b\u5982\u8003\u8651\u4e00\u4e2a\u6700\u5927\u5206\u8fa8\u7387\u4e3a 1600\u00d71200 \u50cf\u7d20\u7684 19 \u82f1\u5bf8 LCD \u663e\u793a\u5668\u3002\u53ef\u7528\u52fe\u80a1\u5b9a\u7406\u7b97\u51fa\u8fd9\u4e2a\u663e\u793a\u5668\u7684\u50cf\u7d20\u5bc6\u5ea6\uff0c\u5982\u4e0b\u6240\u793a\uff1a ![[WPF\u5355\u4f4d_2.png]] \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u50cf\u7d20\u5bc6\u5ea6\u8fbe\u5230 100 dpi\uff0c\u7a0d\u9ad8\u4e8e Windows \u5047\u5b9a\u7684\u6570\u503c\u3002\u56e0\u6b64\u5728\u8be5\u663e\u793a\u5668\u4e0a\uff0c\u4e00\u4e2a 96\u00d796 \u50cf\u7d20\u7684\u6309\u94ae\u5c06\u7565\u5c0f\u4e8e 1 \u82f1\u5bf8\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u8003\u8651\u5206\u8fa8\u7387\u4e3a 1024\u00d7768 \u50cf\u7d20\u7684 15 \u82f1\u5bf8 LCD \u663e\u793a\u5668\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u50cf\u7d20\u5bc6\u5ea6\u964d\u81f3\u7ea6 85 dpi\uff0c\u56e0\u6b64 96\u00d796 \u50cf\u7d20\u7684\u6309\u94ae\u770b\u8d77\u6765\u6bd4 1 \u82f1\u5bf8\u7a0d\u5927\u3002 \u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u51cf\u5c0f\u5c4f\u5e55\u5c3a\u5bf8\uff08\u6bd4\u5982\u5c06\u5206\u8fa8\u7387\u5207\u6362\u5230 800\u00d7600 \u50cf\u7d20\uff09\uff0c\u90a3\u4e48\u6309\u94ae\uff08\u4ee5\u53ca\u5c4f\u5e55\u4e0a\u7684\u5176\u4ed6\u5185\u5bb9\uff09\u5c06\u76f8\u5e94\u653e\u5927\u3002\u8fd9\u65f6\u56e0\u4e3a\u7cfb\u7edf DPI \u4ecd\u4f7f\u7528 96 dpi\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cWindows \u4ecd\u5047\u5b9a 96 \u50cf\u7d20\u4ee3\u8868 1 \u82f1\u5bf8\uff0c\u5c3d\u7ba1\u5728\u66f4\u4f4e\u7684\u5206\u8fa8\u7387\u4e0b\u50cf\u7d20\u66f4\u5c11\u3002 \u6b63\u5982\u6211\u4eec\u6240\u4e86\u89e3\uff0cLCD \u663e\u793a\u5668\u88ab\u8bbe\u8ba1\u6210\u5728\u7279\u5b9a\u5206\u8fa8\u7387\u4e0b\u7684\u6548\u679c\u6700\u4f73\uff0c\u8be5\u5206\u8fa8\u7387\u79f0\u4e3a\u81ea\u7136\u5206\u8fa8\u7387\uff08native resolution\uff09\u3002\u5982\u679c\u964d\u4f4e\u5206\u8fa8\u7387\uff0c\u663e\u793a\u5668\u5fc5\u987b\u4f7f\u7528\u63d2\u503c\u6765\u586b\u5145\u989d\u5916\u50cf\u7d20\uff08\u8fd9\u4f1a\u5bfc\u81f4\u6a21\u7cca\uff09\u3002\u4e3a\u83b7\u5f97\u6700\u4f73\u663e\u793a\u6548\u679c\uff0c\u6700\u597d\u59cb\u7ec8\u4f7f\u7528\u81ea\u7136\u5206\u8fa8\u7387\u3002\u5982\u679c\u4e0b\u5348\u663e\u793a\u51fa\u66f4\u5927\u7684\u7a97\u53e3\u3001\u6309\u94ae\u548c\u6587\u672c\uff0c\u5e94\u8003\u8651\u4fee\u6539\u7cfb\u7edf DPI \u8bbe\u7f6e\u3002","title":"08. WPF \u5355\u4f4d"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/09.%20%E7%B3%BB%E7%BB%9F%20DPI/","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0cWPF \u6309\u94ae\u793a\u4f8b\u548c\u5176\u4ed6\u7c7b\u578b\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6\u4efb\u610f\u7528\u6237\u754c\u9762\u5143\u7d20\u5b8c\u5168\u76f8\u540c\u3002\u5982\u679c\u6539\u53d8\u7cfb\u7edf DPI \u8bbe\u7f6e\uff0c\u7ed3\u679c\u5c31\u4e0d\u540c\u4e86\u3002\u5728\u4e0a\u4e00\u4ee3 Windows \u4e2d\uff0c\u8be5\u7279\u6027\u6709\u65f6\u79f0\u4e3a\u5927\u5b57\u4f53\u3002\u56e0\u4e3a\u90a3\u65f6\u7cfb\u7edf DPI \u4f1a\u5f71\u54cd\u7cfb\u7edf\u5b57\u4f53\u7684\u5927\u5c0f\uff0c\u4f46\u5176\u4ed6\u7ec6\u8282\u901a\u5e38\u4e0d\u53d8\u3002 \u8bb8\u591a Windows \u5e94\u7528\u7a0b\u5e8f\u4e0d\u5b8c\u5168\u652f\u6301\u66f4\u9ad8\u7684 DPI \u8bbe\u7f6e\u3002\u5728\u6700\u7cdf\u7cd5\u7684\u60c5\u5f62\u4e0b\uff0c\u589e\u52a0\u7cfb\u7edf\u7684 DPI \u53ef\u80fd\u4f1a\u4f7f\u7a97\u53e3\u4e2d\u4e00\u4e9b\u5185\u5bb9\u88ab\u7f29\u653e\uff0c\u4f46\u5176\u4ed6\u5185\u5bb9\u5219\u672a\u88ab\u7f29\u653e\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6709\u4e9b\u5185\u5bb9\u88ab\u9690\u85cf\u8d77\u6765\uff0c\u751a\u81f3\u7a97\u53e3\u65e0\u6cd5\u4f7f\u7528\u3002 \u8fd9\u6b63\u662f WPF \u7684\u4e0d\u540c\u4e4b\u5904\u3002WPF \u672c\u8eab\u5c31\u53ef\u4ee5\u5341\u5206\u8f7b\u677e\u5730\u652f\u6301\u7cfb\u7edf DPI \u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c\u5c06\u7cfb\u7edf DPI \u8bbe\u7f6e\u6539\u4e3a 120 dpi\uff08\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u5668\u7684\u7528\u6237\u5e38\u9009\u62e9\u8fd9\u4e48\u505a\uff09\uff0cWPF \u5047\u5b9a\u9700\u8981 120 \u4e2a\u50cf\u7d20\u6765\u586b\u6ee1 1 \u82f1\u5bf8\u7684\u7a7a\u95f4\u3002WPF \u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\u5982\u4f55\u5c06\u903b\u8f91\u5355\u4f4d\u53d8\u6362\u4e3a\u7269\u7406\u8bbe\u5907\u50cf\u7d20\uff1a ![[\u7cfb\u7edfDPI.png]] \u6362\u53e5\u8bdd\u8bf4\uff0c\u5c06\u7cfb\u7edf DPI \u8bbe\u4e3a 120 dpi \u65f6\uff0cWPF \u6e32\u67d3\u5f15\u64ce\u5047\u5b9a\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u7b49\u4e8e 1.25 \u4e2a\u50cf\u7d20\u3002\u5982\u679c\u663e\u793a 96\u00d796 \u50cf\u7d20\u5927\u5c0f\u7684\u6309\u94ae\uff0c\u90a3\u4e48\u7269\u7406\u5c3a\u5bf8\u5b9e\u9645\u4e3a 120\u00d7120 \u50cf\u7d20\uff08\u56e0\u4e3a 96\u00d71.25=120\uff09\u3002\u8fd9\u6b63\u662f\u4f60\u6240\u671f\u671b\u7684\u7ed3\u679c\u2014\u2014\u5728\u6807\u51c6\u663e\u793a\u5668\u4e0a\u5927\u5c0f\u4e3a 1 \u82f1\u5bf8\u7684\u6309\u94ae\uff0c\u5728\u50cf\u7d20\u5bc6\u5ea6\u66f4\u9ad8\u7684\u663e\u793a\u5668\u4e0a\u4ecd\u4fdd\u6301 1 \u82f1\u5bf8\u7684\u5927\u5c0f\u3002 \u5982\u679c\u53ea\u7528\u4e8e\u6309\u94ae\uff0c\u8fd9\u79cd\u81ea\u52a8\u82cf\u65b9\u7684\u610f\u4e49\u4e0d\u5927\u3002\u4f46 WPF \u5bf9\u5b83\u6240\u663e\u793a\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u4f7f\u7528\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\uff0c\u5305\u62ec\u5f62\u72b6\u3001\u63a7\u4ef6\u3001\u6587\u672c\u4ee5\u53ca\u5176\u4ed6\u653e\u5728\u7a97\u53e3\u4e2d\u7684\u5185\u5bb9\u3002\u6240\u4ee5\u53ef\u5c06\u7cfb\u7edf DPI \u6539\u4e3a\u4efb\u4f55\u6240\u5e0c\u671b\u7684\u6570\u503c\uff0cWPF \u5c06\u65e0\u7f1d\u5730\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u7684\u5c3a\u5bf8\u3002 \u6839\u636e\u7cfb\u7edf DPI \u8ba1\u7b97\u51fa\u7684\u50cf\u7d20\u5c3a\u5bf8\u53ef\u80fd\u65f6\u5c0f\u6570\u3002\u53ef\u5047\u5b9a WPF \u7b80\u5355\u5730\u5c06\u5ea6\u91cf\u5c3a\u5bf8\u820d\u5165\u4e3a\u6700\u63a5\u8fd1\u7684\u50cf\u7d20\u3002\u7136\u800c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cWPF \u7684\u5904\u7406\u65b9\u5f0f\u4e0e\u6b64\u4e0d\u540c\u3002\u5982\u679c\u5143\u7d20\u7684\u4e00\u6761\u8fb9\u843d\u5728\u4e24\u4e2a\u50cf\u7d20\u4e4b\u95f4\uff0cWPF \u5c06\u4f7f\u7528\u53cd\u952f\u9f7f\u7279\u6027\u5c06\u8fd9\u6761\u8fb9\u6df7\u5408\u5230\u76f8\u90bb\u7684\u50cf\u7d20\u3002\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u65f6\u591a\u4f59\u7684\u9009\u62e9\uff0c\u4f46\u7684\u786e\u53ef\u6539\u8fdb\u89c6\u89c9\u6548\u679c\u3002\u5982\u679c\u4e3a\u7ed9\u63a7\u4ef6\u589e\u52a0\u76ae\u80a4\u6548\u679c\u800c\u4f7f\u7528\u81ea\u5b9a\u4e49\u7ed8\u5236\u56fe\u5f62\uff0c\u90a3\u4e48\u5c31\u672a\u5fc5\u4f1a\u6574\u9f50\u3001\u6e05\u6670\u5730\u5b9a\u4e49\u8fb9\u7f18\uff0c\u4ece\u800c\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53cd\u952f\u9f7f\u5904\u7406\u3002","title":"09. \u7cfb\u7edf DPI"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/10.%20%E4%BD%8D%E5%9B%BE%E5%92%8C%E7%9F%A2%E9%87%8F%E5%9B%BE/","text":"\u5f53\u4f7f\u7528\u666e\u901a\u63a7\u4ef6\u65f6\uff0c\u81ea\u7136\u53ef\u5229\u7528 WPF \u7684\u5206\u8fa8\u7387\u65e0\u5173\u6027\u3002WPF \u4f1a\u8d1f\u8d23\u786e\u4fdd\u663e\u793a\u5185\u5bb9\u90fd\u80fd\u81ea\u52a8\u5730\u5177\u6709\u6b63\u786e\u7684\u5c3a\u5bf8\u3002\u4f46\u662f\uff0c\u5982\u679c\u51c6\u5907\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5305\u542b\u56fe\u50cf\uff0c\u5076\u5c14\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5728\u4f20\u7edf Windows \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u4e3a\u5de5\u5177\u680f\u547d\u4ee4\u6309\u94ae\u4f7f\u7528\u975e\u5e38\u5c0f\u7684\u4f4d\u56fe\uff0c\u4f46\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u8fd9\u5e76\u975e\u4e00\u79cd\u7406\u60f3\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5f53\u6839\u636e\u7cfb\u7edf DPI \u8fdb\u884c\u653e\u5927\u6216\u7f29\u5c0f\u65f6\uff0c\u4f4d\u56fe\u53ef\u80fd\u51fa\u73b0\u4f2a\u5f71\uff08\u53d8\u5f97\u6a21\u7cca\uff09\u3002\u53cd\u800c\uff0c\u5f53\u8bbe\u8ba1 WPF \u7528\u6237\u754c\u9762\u65f6\uff0c\u5373\u4f7f\u662f\u6700\u5c0f\u7684\u56fe\u6807\uff0c\u901a\u5e38\u4e5f\u4f7f\u7528\u77e2\u91cf\u56fe\u5f62\u6765\u5b9e\u73b0\u3002\u77e2\u91cf\u56fe\u5f62\u88ab\u5b9a\u4e49\u4e3a\u4e00\u7cfb\u5217\u7684\u5f62\u72b6\uff0c\u5e76\u4e14\u5b83\u4eec\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u7f29\u653e\u4e3a\u4efb\u4f55\u5c3a\u5bf8\u3002 \u5f53\u7136\uff0c\u76f8\u5bf9\u4e8e\u7ed8\u5236\u4e00\u5e45\u57fa\u672c\u7684\u4f4d\u56fe\uff0c\u7ed8\u5236\u77e2\u91cf\u56fe\u5f62\u9700\u8981\u8017\u8d39\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u4f46 WPF \u5305\u542b\u53ef\u51cf\u5c11\u5f00\u9500\u7684\u4f18\u5316\u63aa\u65bd\uff0c\u4ee5\u786e\u4fdd\u6027\u80fd\u59cb\u7ec8\u5904\u4e8e\u5408\u7406\u8303\u56f4\u4e4b\u5185\u3002 \u5206\u8fa8\u7387\u65e0\u5173\u6027\u7684\u91cd\u8981\u6027\u65e0\u8bba\u5982\u4f55\u5f3a\u8c03\u90fd\u4e0d\u8fc7\u5206\u3002\u56e0\u4e3a\u4e4d\u4e00\u770b\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u7531\u6765\u5df2\u4e45\u7684\u95ee\u9898\uff0c\u5b83\u770b\u8d77\u6765\u662f\u7b80\u5355\u7684\u3001\u4f18\u7f8e\u7684\u89e3\u51b3\u65b9\u6cd5\u3002\u4f46\u4e3a\u4e86\u8bbe\u8ba1\u5b8c\u5168\u53ef\u7f29\u653e\u7684\u7528\u6237\u754c\u9762\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u63a5\u53d7\u4e00\u79cd\u65b0\u7684\u601d\u60f3\u3002","title":"10. \u4f4d\u56fe\u548c\u77e2\u91cf\u56fe"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","text":"WPF \u4f7f\u7528\u591a\u5c42\u4f53\u7cfb\u7ed3\u6784\u3002\u5728\u9876\u5c42\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5b8c\u5168\u7531\u6258\u7ba1 C# \u4ee3\u7801\u7f16\u5199\u7684\u4e00\u7ec4\u9ad8\u5c42\u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002\u81f3\u4e8e\u5c06 .NET \u5bf9\u8c61\u8f6c\u6362\u4e3a Direct3D \u7eb9\u7406\u548c\u4e09\u89d2\u5f62\u7684\u5b9e\u9645\u5de5\u4f5c\uff0c\u662f\u5728\u540e\u53f0\u7531\u4e00\u4e2a\u540d\u4e3a milcore.dll \u7684\u4f4e\u7ea7\u975e\u6258\u7ba1\u7ec4\u4ef6\u5b8c\u6210\u7684\u3002milcore.dll \u662f\u4f7f\u7528\u975e\u6258\u7ba1\u4ee3\u7801\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u548c Direct3D \u7d27\u5bc6\u96c6\u6210\uff0c\u5e76\u4e14\u5b83\u5bf9\u6027\u80fd\u6781\u5176\u654f\u611f\u3002 \u4e0b\u56fe\u663e\u793a\u4e86 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5404\u5c42\u7684\u5de5\u4f5c\u60c5\u51b5 ![[WPF\u4f53\u7cfb\u7ed3\u6784_1.png]] \u4ee5\u4e0b\u5217\u51fa\u9014\u4e2d\u5305\u542b\u7684\u4e00\u4e9b\u91cd\u8981\u7ec4\u4ef6\uff1a PresentationFramework.dll \u5305\u542b WPF \u9876\u5c42\u7684\u7c7b\u578b\uff0c\u5305\u62ec\u90a3\u4e9b\u8868\u793a\u7a97\u53e3\u3001\u9762\u677f\u4ee5\u53ca\u5176\u4ed6\u7c7b\u578b\u63a7\u4ef6\u7684\u7c7b\u578b\u3002\u5b83\u8fd8\u5b9e\u73b0\u4e86\u9ad8\u5c42\u7f16\u7a0b\u62bd\u8c61\uff0c\u5982\u6837\u5f0f\u3002\u5f00\u53d1\u4eba\u5458\u76f4\u63a5\u4f7f\u7528\u7684\u5927\u90e8\u5206\u7c7b\u90fd\u6765\u81ea\u8fd9\u4e2a\u7a0b\u5e8f\u96c6\u3002 PresentationCore.dll \u5305\u542b\u4e86\u57fa\u7840\u7c7b\u578b\uff0c\u5982 UIElement \u7c7b\u548c Visual \u7c7b\uff0c\u6240\u6709\u5f62\u72b6\u7c7b\u548c\u63a7\u4ef6\u7c7b\u90fd\u7ee7\u627f\u81ea\u8fd9\u4e24\u4e2a\u7c7b\u3002\u5982\u679c\u4e0d\u9700\u8981\u7a97\u53e3\u548c\u63a7\u4ef6\u62bd\u8c61\u5c42\u7684\u5168\u90e8\u7279\u5f81\uff0c\u53ef\u4f7f\u7528\u8fd9\u4e00\u5c42\uff0c\u800c\u4e14\u4ecd\u80fd\u5229\u7528 WPF \u7684\u6e32\u67d3\u5f15\u64ce\u3002 WindowsBase.dll \u5305\u542b\u4e86\u66f4\u591a\u57fa\u672c\u8981\u7d20\uff0c\u8fd9\u4e9b\u8981\u7d20\u5177\u6709\u5728 WPF \u4e4b\u5916\u91cd\u7528\u7684\u6f5c\u80fd\uff0c\u5982 DispatcherObject \u7c7b\u548c DependencyObject \u7c7b\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u5f15\u5165\u4e86\u4f9d\u8d56\u9879\u5c5e\u6027\u3002 milcore.dll \u662f WPF \u6e32\u67d3\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u4e5f\u662f\u5a92\u4f53\u96c6\u6210\u5c42\uff08Media Integration Layer\uff0cMIL\uff09\u7684\u57fa\u7840\u3002\u5176\u5408\u6210\u5f15\u64ce\u5c06\u53ef\u89c6\u5316\u5143\u7d20\u8f6c\u6362\u4e3a Direct3D \u6240\u671f\u671b\u7684\u4e09\u89d2\u5f62\u548c\u7eb9\u7406\u3002\u5c3d\u7ba1\u5c06 milcore.dll \u89c6\u4e3a WPF \u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b83\u4e5f\u662f Windows Vista \u548c Windows 7 \u7684\u6838\u5fc3\u7cfb\u7edf\u7ec4\u4ef6\u4e4b\u4e00\u3002\u5b9e\u9645\u4e0a\uff0c\u684c\u9762\u7a97\u53e3\u7ba1\u7406\u5668\uff08Desktop Window Manager\uff0cDWM\uff09\u4f7f\u7528 milcore.dll \u6e32\u67d3\u684c\u9762\u3002 WindowsCodecs.dll \u662f\u4e00\u5957\u63d0\u4f9b\u56fe\u50cf\u652f\u6301\u7684\u4f4e\u7ea7 API\uff08\u4f8b\u5982\u5904\u7406\u3001\u663e\u793a\u4ee5\u53ca\u7f29\u653e\u4f4d\u56fe\u548c JPEG \u56fe\u50cf\uff09\u3002 Direct3D \u662f\u4e00\u5957\u4f4e\u7ea7 API\uff0cWPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u56fe\u5f62\u90fd\u7531\u5b83\u8fdb\u884c\u6e32\u67d3\u3002 User32 \u7528\u4e8e\u51b3\u5b9a\u54ea\u4e9b\u7a0b\u5e8f\u5b9e\u9645\u5360\u6709\u684c\u9762\u7684\u54ea\u4ee5\u90e8\u5206\u3002\u6240\u4ee5\u5b83\u4ecd\u88ab\u5305\u542b\u5728 WPF \u4e2d\uff0c\u4f46\u4e0d\u518d\u8d1f\u8d23\u6e32\u67d3\u901a\u7528\u63a7\u4ef6\u3002 milcore.dll \u6709\u65f6\u79f0\u4e3a\u201d\u6258\u7ba1\u56fe\u5f62\u201c\u5f15\u64ce\u3002\u4e0e\u516c\u5171\u8bed\u8a00\u8fd0\u884c\u5e93\uff08CLR\uff09\u7ba1\u7406 .NET \u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u975e\u5e38\u7c7b\u4f3c\uff0cmilcore.dll \u7ba1\u7406\u663e\u793a\u72b6\u6001\u3002\u800c\u4e14\u6b63\u5982\u6709\u4e86 CLR\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u518d\u4e3a\u91ca\u653e\u5bf9\u8c61\u548c\u56de\u6536\u5185\u5b58\u800c\u611f\u5230\u70e6\u607c\u4e00\u6837\uff0cmilcore.dll \u8ba9\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u518d\u8003\u8651\u4f7f\u7a97\u53e3\u65e0\u6548\u548c\u91cd\u56de\u7a97\u53e3\u3002\u53ea\u9700\u4f7f\u7528\u5e0c\u671b\u663e\u793a\u7684\u5185\u5bb9\u521b\u5efa\u5bf9\u8c61\u5373\u53ef\uff0c\u5f53\u62d6\u52a8\u7a97\u53e3\u3001\u7a97\u53e3\u88ab\u8986\u76d6\u548c\u663e\u9732\u3001\u6700\u5c0f\u5316\u7a97\u53e3\u548c\u8fd8\u539f\u7a97\u53e3\u65f6\uff0c\u7531 milcore.dll \u8d1f\u8d23\u7ed8\u5236\u7a97\u53e3\u7684\u6070\u5f53\u90e8\u5206\u3002 \u9700\u8981\u8ba4\u8bc6\u5230\u7684\u6700\u91cd\u8981\u4e8b\u5b9e\u662f\uff0c\u5728 WPF \u4e2d\u6240\u6709\u7ed8\u56fe\u5185\u5bb9\u90fd\u7531 Direct3D \u6e32\u67d3\u3002\u4e0d\u7ba1\u4f7f\u7528\u666e\u901a\u663e\u5361\u8fd8\u662f\u4f7f\u7528\u529f\u80fd\u66f4\u5f3a\u5927\u7684\u663e\u5361\uff0c\u4e0d\u7ba1\u4f7f\u7528\u57fa\u672c\u63a7\u4ef6\u8fd8\u662f\u7ed8\u5236\u66f4\u590d\u6742\u7684\u5185\u5bb9\uff0c\u4e5f\u4e0d\u7ba1\u662f\u5728 Windows XP\u3001Windows Vista \u8fd8\u662f\u5728 Windows 7 \u4e0a\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u60c5\u51b5\u90fd\u662f\u5982\u6b64\u3002\u751a\u81f3\u4e8c\u7ef4\u56fe\u5f62\u548c\u666e\u901a\u6587\u672c\u4e5f\u88ab\u8f6c\u6362\u4e3a\u4e09\u89d2\u5f62\u5e76\u88ab\u4f20\u9001\u5230 Direct3D \u7ba1\u7ebf\uff0c\u800c\u4e0d\u4f7f\u7528 GDI+ \u6216 User32 \u6e32\u67d3\u56fe\u5f62\u3002 \u7c7b\u5c42\u6b21\u7ed3\u6784 ![[WPF\u4f53\u7cfb\u7ed3\u6784_2.png]] \u4e0b\u9762\u5c06\u7b80\u8981\u4ecb\u7ecd\u4e0a\u56fe\u4e2d\u5448\u73b0\u7684\u6838\u5fc3\u7c7b\u3002\u8fd9\u4e9b\u7c7b\u4e2d\u7684\u8bb8\u591a\u7c7b\u6784\u6210\u4e86\u5b8c\u6574\u7684\u5143\u7d20\u5206\u652f\uff08\u5982\u5f62\u72b6\u3001\u9762\u677f\u4ee5\u53ca\u63a7\u4ef6\uff09\u3002 WPF \u6838\u5fc3\u540d\u79f0\u7a7a\u95f4\u4ee5 System.Windows \u5f00\u5934\uff08\u5982 System.Windows \u3001 System.Windows.Controls \u4ee5\u53ca System.Windows.Media \uff09\u3002\u552f\u4e00\u4f8b\u5916\u662f\u7531 System.Windows.Forms \u5f00\u5934\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u5b83\u4eec\u662f Windows \u7a97\u4f53\u5de5\u5177\u5305\u7684\u4e00\u90e8\u5206\u3002 System.Threading.DispatcherObject \u7c7b WPF \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e3a\u4eba\u719f\u77e5\u7684\u5355\u7ebf\u7a0b\u4eb2\u548c\uff08Single-Thread Affinity\uff0cSTA\uff09\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u6574\u4e2a\u7528\u6237\u754c\u9762\u7531\u5355\u4e2a\u7ebf\u7a0b\u62e5\u6709\u3002\u4ece\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e0e\u7528\u6237\u754c\u9762\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u662f\u4e0d\u5b89\u5168\u7684\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\u6b64\u6a21\u578b\uff0c\u6bcf\u4e2a WPF \u5e94\u7528\u7a0b\u5e8f\u7531\u534f\u8c03\u6d88\u606f\uff08\u952e\u76d8\u8f93\u5165\u3001\u9f20\u6807\u79fb\u52a8\u4e43\u81f3\u6846\u67b6\u5904\u7406\uff0c\u5982\u5e03\u5c40\uff09\u7684\u8c03\u5ea6\u7a0b\u5e8f\u7ba1\u7406\u3002\u901a\u8fc7\u7ee7\u627f\u81ea DispathcerObject \u7c7b\uff0c\u7528\u6237\u754c\u9762\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u5728\u6b63\u786e\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u5e76\u80fd\u901a\u8fc7\u8bbf\u95ee\u8c03\u5ea6\u7a0b\u5e8f\u4e3a\u7528\u6237\u754c\u9762\u7ebf\u7a0b\u5c01\u9001\u4ee3\u7801\u3002 System.Windows.DependencyObject \u7c7b \u5728 WPF \u4e2d\uff0c\u4e3b\u8981\u901a\u8fc7\u5c5e\u6027\u4e0e\u5c4f\u5e55\u4e0a\u7684\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u3002\u5728\u65e9\u671f\u8bbe\u8ba1\u9636\u6bb5\uff0cWPF \u7684\u8bbe\u8ba1\u8005\u51b3\u5b9a\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u5f3a\u5927\u7684\u5c5e\u6027\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u652f\u6301\u8bb8\u591a\u7279\u6027\uff0c\u4f8b\u5982\u66f4\u6539\u901a\u77e5\u3001\u9ed8\u8ba4\u503c\u7ee7\u627f\u4ee5\u53ca\u51cf\u5c11\u5c5e\u6027\u5b58\u50a8\u7a7a\u95f4\u3002\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u4f9d\u8d56\u6027\u5c5e\u6027\uff08dependency property\uff09\u7279\u6027\u3002\u901a\u8fc7\u7ee7\u627f\u81ea DependencyObject \u7c7b\uff0cWPF \u7c7b\u53ef\u83b7\u5f97\u5bf9\u4f9d\u8d56\u9879\u5c5e\u6027\u7684\u652f\u6301\u3002 System.Windows.Media.Visual \u7c7b \u5728 WPF \u7a97\u53e3\u4e2d\u663e\u793a\u7684\u6bcf\u4e2a\u5143\u7d20\u672c\u8d28\u4e0a\u90fd\u662f Visual \u5bf9\u8c61\u3002\u53ef\u5c06 Visual \u7c7b\u89c6\u4e3a\u7ed8\u56fe\u5bf9\u8c61\uff0c\u5176\u4e2d\u5c01\u88c5\u4e86\u7ed8\u56fe\u6307\u4ee4\u3001\u5982\u4f55\u6267\u884c\u7ed8\u56fe\u7684\u9644\u52a0\u7ec6\u8282\uff08\u5982\u526a\u88c1\u3001\u900f\u660e\u5ea6\u4ee5\u53ca\u53d8\u6362\u8bbe\u7f6e\uff09\u4ee5\u53ca\u57fa\u672c\u529f\u80fd\uff08\u5982\u547d\u4e2d\u6d4b\u8bd5\uff09\u3002 Visual \u7c7b\u8fd8\u5728\u6258\u7ba1\u7684 WPF \u5e93\u548c\u6e32\u67d3\u684c\u9762\u7684 milcore.dll \u7a0b\u5e8f\u96c6\u4e4b\u95f4\u63d0\u4f9b\u4e86\u94fe\u63a5\u3002\u4efb\u4f55\u7ee7\u627f\u81ea Visual \u7684\u7c7b\u90fd\u989d\u80fd\u5728\u7a97\u53e3\u4e0a\u663e\u793a\u51fa\u6765\u3002\u5982\u679c\u66f4\u613f\u610f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684 API \u521b\u5efa\u7528\u6237\u754c\u9762\uff0c\u800c\u4e0d\u60f3\u4f7f\u7528 WPF \u7684\u9ad8\u7ea7\u6846\u67b6\u7279\u5f81\uff0c\u53ef\u76f4\u63a5\u5bf9 Visual \u5bf9\u8c61\u8fdb\u884c\u7f16\u7a0b\u3002 System.Windows.UIElement \u7c7b UIElement \u7c7b\u589e\u52a0\u4e86\u5bf9 WPF \u672c\u8d28\u7279\u5f81\u7684\u652f\u6301\uff0c\u5982\u5e03\u5c40\u3001\u8f93\u5165\u3001\u7126\u70b9\u548c\u4e8b\u4ef6\uff08WPF \u56e2\u961f\u4f7f\u7528\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd LIFE \u6765\u8868\u793a\uff09\u3002\u5728\u8be5\u7c7b\u4e2d\uff0c\u539f\u59cb\u7684\u9f20\u6807\u5355\u51fb\u548c\u6309\u952e\u64cd\u4f5c\u88ab\u8f6c\u6362\u4e3a\u66f4\u6709\u7528\u7684\u4e8b\u4ef6\uff0c\u5982 MouseEnter \u4e8b\u4ef6\u3002\u4e0e\u5c5e\u6027\u7c7b\u4f3c\uff0cWPF \u5b9e\u73b0\u4e86\u589e\u5f3a\u7684\u79f0\u4e3a\u8def\u7531\u4e8b\u4ef6\uff08routed event\uff09\u7684\u4e8b\u4ef6\u8def\u7531\u7cfb\u7edf\u3002\u6700\u540e\uff0c UIElement \u7c7b\u4e2d\u8fd8\u6dfb\u52a0\u4e86\u5bf9\u547d\u4ee4\u7684\u652f\u6301\u3002 System.Windows.FrameworkElement \u7c7b FrameworkElement \u7c7b\u662f WPF \u6838\u5fc3\u7ee7\u627f\u6811\u4e2d\u7684\u6700\u540e\u4e00\u7ad9\u3002\u8be5\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5168\u90e8\u7531 UIElement \u7c7b\u5b9a\u4e49\u7684\u6210\u5458\u3002\u4f8b\u5982\uff0c UIElement \u7c7b\u4e3a WPF \u5e03\u5c40\u7cfb\u7edf\u8bbe\u7f6e\u4e86\u57fa\u7840\uff0c\u4f46 FrameworkElement \u7c7b\u63d0\u4f9b\u4e86\u652f\u6301\u5b83\u7684\u91cd\u8981\u5c5e\u6027\uff08\u5982 HorizontalAlignment \u548c Margin \u5c5e\u6027\uff09\u3002 UIElement \u7c7b\u8fd8\u6dfb\u52a0\u4e86\u5bf9\u6570\u636e\u7ed1\u5b9a\u3001\u52a8\u753b\u4ee5\u53ca\u6837\u5f0f\u7b49\u6838\u5fc3\u7279\u6027\u7684\u652f\u6301\u3002 System.Windows.Shapes.Shape \u7c7b \u57fa\u672c\u7684\u5f62\u72b6\u7c7b\uff08\u5982 Rectangle \u7c7b\u3001 Polygon \u7c7b\u3001 Ellipse \u7c7b\u3001 Line \u7c7b\u4ee5\u53ca Path \u7c7b\uff09\u90fd\u7ee7\u627f\u81ea\u8be5\u7c7b\u3002\u53ef\u5c06\u8fd9\u4e9b\u5f62\u72b6\u7c7b\u4e0e\u66f4\u4f20\u7edf\u7684 Windows \u5c0f\u7ec4\u4ef6\uff08\u5982\u6309\u94ae\u548c\u6587\u672c\u5757\uff09\u7ed3\u5408\u4f7f\u7528\u3002 System.Windows.Controls.Control \u7c7b \u7a7a\u95f4\uff08control\uff09\u662f\u53ef\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u5143\u7d20\u3002\u7a7a\u95f4\u663e\u7136\u5305\u62ec TextBox \u7c7b\u3001 Buttion \u7c7b\u548c ListBox \u7c7b\u7b49\u3002 Control \u7c7b\u4e3a\u8bbe\u7f6e\u5b57\u4f53\u4ee5\u53ca\u524d\u666f\u8272\u4e0e\u80cc\u666f\u8272\u63d0\u4f9b\u4e86\u9644\u52a0\u5c5e\u6027\u3002\u4f46\u6700\u4ee4\u4eba\u611f\u5174\u8da3\u7684\u7ec6\u8282\u662f\u6a21\u677f\u652f\u6301\uff0c\u901a\u8fc7\u6a21\u677f\u652f\u6301\uff0c\u53ef\u4f7f\u7528\u81ea\u5b9a\u4e49\u98ce\u683c\u7684\u7ed8\u56fe\u66ff\u6362\u7a7a\u95f4\u7684\u6807\u51c6\u5916\u89c2\u3002 \u5728 Windows \u7a97\u4f53\u7f16\u7a0b\u4e2d\uff0c\u7a97\u4f53\u4e2d\u7684\u6bcf\u4e2a\u53ef\u89c6\u5316\u9879\u90fd\u79f0\u4e3a\u63a7\u4ef6\u3002\u5728 WPF \u4e2d\uff0c\u60c5\u51b5\u4e0d\u518d\u5982\u6b64\u3002\u53ef\u89c6\u5316\u5185\u5bb9\u88ab\u79f0\u4e3a\u5143\u7d20\uff08element\uff09\uff0c\u53ea\u6709\u90e8\u5206\u5143\u7d20\u662f\u63a7\u4ef6\uff08\u63a7\u4ef6\u662f\u90a3\u4e9b\u80fd\u591f\u63a5\u53d7\u7126\u70b9\u5e76\u80fd\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u5143\u7d20\uff09\u3002\u66f4\u4ee4\u4eba\u8d39\u89e3\u4e4b\u5904\u5728\u4e8e\uff0c\u8bb8\u591a\u5143\u7d20\u662f\u5728 System.Windows.Controls \u540d\u79f0\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u7ee7\u627f\u81ea System.Windows.Controls.Control \u7c7b\uff0c\u5e76\u4e14\u4e0d\u88ab\u8ba4\u4e3a\u662f\u7a7a\u95f4\u3002 Panel \u7c7b\u4fbf\u662f\u5176\u4e2d\u4e00\u4f8b\u3002 System.Windows.Controls.ContentControl \u7c7b ContentControl \u7c7b\u662f\u6240\u6709\u5177\u6709\u5355\u4e00\u5185\u5bb9\u7684\u63a7\u4ef6\u7684\u57fa\u7c7b\uff0c\u5305\u62ec\u7b80\u5355\u7684\u6807\u7b7e\u4e43\u81f3\u7a97\u53e3\u7684\u6240\u6709\u5185\u5bb9\u3002\u8be5\u6a21\u578b\u7ed9\u4eba\u5370\u8c61\u6700\u6df1\u523b\u7684\u90e8\u5206\u662f\uff1a\u63a7\u4ef6\u4e2d\u7684\u5355\u4e00\u5185\u5bb9\u53ef\u4ee5\u662f\u666e\u901a\u5b57\u7b26\u4e32\u4e43\u81f3\u5177\u6709\u5176\u4ed6\u5f62\u72b6\u548c\u63a7\u4ef6\u7ec4\u5408\u7684\u5e03\u5c40\u9762\u677f\u3002 System.Windows.Controls.ItemsControl \u7c7b ItemsControl \u7c7b\u662f\u6240\u6709\u663e\u793a\u9009\u9879\u96c6\u5408\u7684\u63a7\u4ef6\u7684\u57fa\u7c7b\uff0c\u5982 ListBox \u548c TreeView \u63a7\u4ef6\u3002\u5217\u8868\u63a7\u4ef6\u5341\u5206\u7075\u6d3b\u2014\u2014\u4f8b\u5982\u3002\u4f7f\u7528 ItemsControl \u7c7b\u7684\u5185\u7f6e\u7279\u5f81\uff0c\u53ef\u5c06\u7b80\u5355\u7684 ListBox \u63a7\u4ef6\u53d8\u6362\u6210\u5355\u9009\u6309\u94ae\u5217\u8868\u3001\u590d\u9009\u6846\u63a7\u4ef6\u5217\u8868\u3001\u5e73\u94fa\u7684\u56fe\u50cf\u6216\u662f\u4f60\u6240\u9009\u62e9\u7684\u5b8c\u5168\u4e0d\u540c\u7684\u5143\u7d20\u7684\u7ec4\u5408\u3002\u5b9e\u9645\u4e0a\uff0cWPF \u4e2d\u7684\u83dc\u5355\u3001\u5de5\u5177\u680f\u4ee5\u53ca\u72b6\u6001\u680f\u90fd\u662f\u7279\u5b9a\u7684\u5217\u8868\uff0c\u5e76\u4e14\u5b9e\u73b0\u5b83\u4eec\u7684\u7c7b\u90fd\u7ee7\u627f\u81ea ItemsControl \u7c7b\u3002 System.Windows.Controls.Panel \u7c7b Panel \u7c7b\u662f\u6240\u6709\u5e03\u5c40\u5bb9\u5668\u7684\u57fa\u7c7b\uff0c\u5e03\u5c40\u5bb9\u5668\u662f\u53ef\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u5143\u7d20\u3001\u5e76\u6309\u7279\u5b9a\u89c4\u5219\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u6392\u5217\u7684\u5143\u7d20\u3002\u8fd9\u4e9b\u5bb9\u5668\u662f WPF \u5e03\u5c40\u7cfb\u7edf\u7684\u57fa\u7840\uff0c\u8981\u4ee5\u6700\u5bcc\u6709\u5438\u5f15\u529b\u3001\u6700\u7075\u6d3b\u7684\u65b9\u5f0f\u5b89\u6392\u5185\u5bb9\uff0c\u4f7f\u7528\u8fd9\u4e9b\u5bb9\u5668\u662f\u5173\u952e\u6240\u5728\u3002","title":"11. WPF \u4f53\u7cfb\u7ed3\u6784"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#_1","text":"![[WPF\u4f53\u7cfb\u7ed3\u6784_2.png]] \u4e0b\u9762\u5c06\u7b80\u8981\u4ecb\u7ecd\u4e0a\u56fe\u4e2d\u5448\u73b0\u7684\u6838\u5fc3\u7c7b\u3002\u8fd9\u4e9b\u7c7b\u4e2d\u7684\u8bb8\u591a\u7c7b\u6784\u6210\u4e86\u5b8c\u6574\u7684\u5143\u7d20\u5206\u652f\uff08\u5982\u5f62\u72b6\u3001\u9762\u677f\u4ee5\u53ca\u63a7\u4ef6\uff09\u3002 WPF \u6838\u5fc3\u540d\u79f0\u7a7a\u95f4\u4ee5 System.Windows \u5f00\u5934\uff08\u5982 System.Windows \u3001 System.Windows.Controls \u4ee5\u53ca System.Windows.Media \uff09\u3002\u552f\u4e00\u4f8b\u5916\u662f\u7531 System.Windows.Forms \u5f00\u5934\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u5b83\u4eec\u662f Windows \u7a97\u4f53\u5de5\u5177\u5305\u7684\u4e00\u90e8\u5206\u3002","title":"\u7c7b\u5c42\u6b21\u7ed3\u6784"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemthreadingdispatcherobject","text":"WPF \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e3a\u4eba\u719f\u77e5\u7684\u5355\u7ebf\u7a0b\u4eb2\u548c\uff08Single-Thread Affinity\uff0cSTA\uff09\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u6574\u4e2a\u7528\u6237\u754c\u9762\u7531\u5355\u4e2a\u7ebf\u7a0b\u62e5\u6709\u3002\u4ece\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e0e\u7528\u6237\u754c\u9762\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u662f\u4e0d\u5b89\u5168\u7684\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\u6b64\u6a21\u578b\uff0c\u6bcf\u4e2a WPF \u5e94\u7528\u7a0b\u5e8f\u7531\u534f\u8c03\u6d88\u606f\uff08\u952e\u76d8\u8f93\u5165\u3001\u9f20\u6807\u79fb\u52a8\u4e43\u81f3\u6846\u67b6\u5904\u7406\uff0c\u5982\u5e03\u5c40\uff09\u7684\u8c03\u5ea6\u7a0b\u5e8f\u7ba1\u7406\u3002\u901a\u8fc7\u7ee7\u627f\u81ea DispathcerObject \u7c7b\uff0c\u7528\u6237\u754c\u9762\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u5728\u6b63\u786e\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u5e76\u80fd\u901a\u8fc7\u8bbf\u95ee\u8c03\u5ea6\u7a0b\u5e8f\u4e3a\u7528\u6237\u754c\u9762\u7ebf\u7a0b\u5c01\u9001\u4ee3\u7801\u3002","title":"System.Threading.DispatcherObject\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowsdependencyobject","text":"\u5728 WPF \u4e2d\uff0c\u4e3b\u8981\u901a\u8fc7\u5c5e\u6027\u4e0e\u5c4f\u5e55\u4e0a\u7684\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u3002\u5728\u65e9\u671f\u8bbe\u8ba1\u9636\u6bb5\uff0cWPF \u7684\u8bbe\u8ba1\u8005\u51b3\u5b9a\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u5f3a\u5927\u7684\u5c5e\u6027\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u652f\u6301\u8bb8\u591a\u7279\u6027\uff0c\u4f8b\u5982\u66f4\u6539\u901a\u77e5\u3001\u9ed8\u8ba4\u503c\u7ee7\u627f\u4ee5\u53ca\u51cf\u5c11\u5c5e\u6027\u5b58\u50a8\u7a7a\u95f4\u3002\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u4f9d\u8d56\u6027\u5c5e\u6027\uff08dependency property\uff09\u7279\u6027\u3002\u901a\u8fc7\u7ee7\u627f\u81ea DependencyObject \u7c7b\uff0cWPF \u7c7b\u53ef\u83b7\u5f97\u5bf9\u4f9d\u8d56\u9879\u5c5e\u6027\u7684\u652f\u6301\u3002","title":"System.Windows.DependencyObject\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowsmediavisual","text":"\u5728 WPF \u7a97\u53e3\u4e2d\u663e\u793a\u7684\u6bcf\u4e2a\u5143\u7d20\u672c\u8d28\u4e0a\u90fd\u662f Visual \u5bf9\u8c61\u3002\u53ef\u5c06 Visual \u7c7b\u89c6\u4e3a\u7ed8\u56fe\u5bf9\u8c61\uff0c\u5176\u4e2d\u5c01\u88c5\u4e86\u7ed8\u56fe\u6307\u4ee4\u3001\u5982\u4f55\u6267\u884c\u7ed8\u56fe\u7684\u9644\u52a0\u7ec6\u8282\uff08\u5982\u526a\u88c1\u3001\u900f\u660e\u5ea6\u4ee5\u53ca\u53d8\u6362\u8bbe\u7f6e\uff09\u4ee5\u53ca\u57fa\u672c\u529f\u80fd\uff08\u5982\u547d\u4e2d\u6d4b\u8bd5\uff09\u3002 Visual \u7c7b\u8fd8\u5728\u6258\u7ba1\u7684 WPF \u5e93\u548c\u6e32\u67d3\u684c\u9762\u7684 milcore.dll \u7a0b\u5e8f\u96c6\u4e4b\u95f4\u63d0\u4f9b\u4e86\u94fe\u63a5\u3002\u4efb\u4f55\u7ee7\u627f\u81ea Visual \u7684\u7c7b\u90fd\u989d\u80fd\u5728\u7a97\u53e3\u4e0a\u663e\u793a\u51fa\u6765\u3002\u5982\u679c\u66f4\u613f\u610f\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684 API \u521b\u5efa\u7528\u6237\u754c\u9762\uff0c\u800c\u4e0d\u60f3\u4f7f\u7528 WPF \u7684\u9ad8\u7ea7\u6846\u67b6\u7279\u5f81\uff0c\u53ef\u76f4\u63a5\u5bf9 Visual \u5bf9\u8c61\u8fdb\u884c\u7f16\u7a0b\u3002","title":"System.Windows.Media.Visual\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowsuielement","text":"UIElement \u7c7b\u589e\u52a0\u4e86\u5bf9 WPF \u672c\u8d28\u7279\u5f81\u7684\u652f\u6301\uff0c\u5982\u5e03\u5c40\u3001\u8f93\u5165\u3001\u7126\u70b9\u548c\u4e8b\u4ef6\uff08WPF \u56e2\u961f\u4f7f\u7528\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd LIFE \u6765\u8868\u793a\uff09\u3002\u5728\u8be5\u7c7b\u4e2d\uff0c\u539f\u59cb\u7684\u9f20\u6807\u5355\u51fb\u548c\u6309\u952e\u64cd\u4f5c\u88ab\u8f6c\u6362\u4e3a\u66f4\u6709\u7528\u7684\u4e8b\u4ef6\uff0c\u5982 MouseEnter \u4e8b\u4ef6\u3002\u4e0e\u5c5e\u6027\u7c7b\u4f3c\uff0cWPF \u5b9e\u73b0\u4e86\u589e\u5f3a\u7684\u79f0\u4e3a\u8def\u7531\u4e8b\u4ef6\uff08routed event\uff09\u7684\u4e8b\u4ef6\u8def\u7531\u7cfb\u7edf\u3002\u6700\u540e\uff0c UIElement \u7c7b\u4e2d\u8fd8\u6dfb\u52a0\u4e86\u5bf9\u547d\u4ee4\u7684\u652f\u6301\u3002","title":"System.Windows.UIElement\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowsframeworkelement","text":"FrameworkElement \u7c7b\u662f WPF \u6838\u5fc3\u7ee7\u627f\u6811\u4e2d\u7684\u6700\u540e\u4e00\u7ad9\u3002\u8be5\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5168\u90e8\u7531 UIElement \u7c7b\u5b9a\u4e49\u7684\u6210\u5458\u3002\u4f8b\u5982\uff0c UIElement \u7c7b\u4e3a WPF \u5e03\u5c40\u7cfb\u7edf\u8bbe\u7f6e\u4e86\u57fa\u7840\uff0c\u4f46 FrameworkElement \u7c7b\u63d0\u4f9b\u4e86\u652f\u6301\u5b83\u7684\u91cd\u8981\u5c5e\u6027\uff08\u5982 HorizontalAlignment \u548c Margin \u5c5e\u6027\uff09\u3002 UIElement \u7c7b\u8fd8\u6dfb\u52a0\u4e86\u5bf9\u6570\u636e\u7ed1\u5b9a\u3001\u52a8\u753b\u4ee5\u53ca\u6837\u5f0f\u7b49\u6838\u5fc3\u7279\u6027\u7684\u652f\u6301\u3002","title":"System.Windows.FrameworkElement\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowsshapesshape","text":"\u57fa\u672c\u7684\u5f62\u72b6\u7c7b\uff08\u5982 Rectangle \u7c7b\u3001 Polygon \u7c7b\u3001 Ellipse \u7c7b\u3001 Line \u7c7b\u4ee5\u53ca Path \u7c7b\uff09\u90fd\u7ee7\u627f\u81ea\u8be5\u7c7b\u3002\u53ef\u5c06\u8fd9\u4e9b\u5f62\u72b6\u7c7b\u4e0e\u66f4\u4f20\u7edf\u7684 Windows \u5c0f\u7ec4\u4ef6\uff08\u5982\u6309\u94ae\u548c\u6587\u672c\u5757\uff09\u7ed3\u5408\u4f7f\u7528\u3002","title":"System.Windows.Shapes.Shape\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowscontrolscontrol","text":"\u7a7a\u95f4\uff08control\uff09\u662f\u53ef\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u5143\u7d20\u3002\u7a7a\u95f4\u663e\u7136\u5305\u62ec TextBox \u7c7b\u3001 Buttion \u7c7b\u548c ListBox \u7c7b\u7b49\u3002 Control \u7c7b\u4e3a\u8bbe\u7f6e\u5b57\u4f53\u4ee5\u53ca\u524d\u666f\u8272\u4e0e\u80cc\u666f\u8272\u63d0\u4f9b\u4e86\u9644\u52a0\u5c5e\u6027\u3002\u4f46\u6700\u4ee4\u4eba\u611f\u5174\u8da3\u7684\u7ec6\u8282\u662f\u6a21\u677f\u652f\u6301\uff0c\u901a\u8fc7\u6a21\u677f\u652f\u6301\uff0c\u53ef\u4f7f\u7528\u81ea\u5b9a\u4e49\u98ce\u683c\u7684\u7ed8\u56fe\u66ff\u6362\u7a7a\u95f4\u7684\u6807\u51c6\u5916\u89c2\u3002 \u5728 Windows \u7a97\u4f53\u7f16\u7a0b\u4e2d\uff0c\u7a97\u4f53\u4e2d\u7684\u6bcf\u4e2a\u53ef\u89c6\u5316\u9879\u90fd\u79f0\u4e3a\u63a7\u4ef6\u3002\u5728 WPF \u4e2d\uff0c\u60c5\u51b5\u4e0d\u518d\u5982\u6b64\u3002\u53ef\u89c6\u5316\u5185\u5bb9\u88ab\u79f0\u4e3a\u5143\u7d20\uff08element\uff09\uff0c\u53ea\u6709\u90e8\u5206\u5143\u7d20\u662f\u63a7\u4ef6\uff08\u63a7\u4ef6\u662f\u90a3\u4e9b\u80fd\u591f\u63a5\u53d7\u7126\u70b9\u5e76\u80fd\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u7684\u5143\u7d20\uff09\u3002\u66f4\u4ee4\u4eba\u8d39\u89e3\u4e4b\u5904\u5728\u4e8e\uff0c\u8bb8\u591a\u5143\u7d20\u662f\u5728 System.Windows.Controls \u540d\u79f0\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u7ee7\u627f\u81ea System.Windows.Controls.Control \u7c7b\uff0c\u5e76\u4e14\u4e0d\u88ab\u8ba4\u4e3a\u662f\u7a7a\u95f4\u3002 Panel \u7c7b\u4fbf\u662f\u5176\u4e2d\u4e00\u4f8b\u3002","title":"System.Windows.Controls.Control\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowscontrolscontentcontrol","text":"ContentControl \u7c7b\u662f\u6240\u6709\u5177\u6709\u5355\u4e00\u5185\u5bb9\u7684\u63a7\u4ef6\u7684\u57fa\u7c7b\uff0c\u5305\u62ec\u7b80\u5355\u7684\u6807\u7b7e\u4e43\u81f3\u7a97\u53e3\u7684\u6240\u6709\u5185\u5bb9\u3002\u8be5\u6a21\u578b\u7ed9\u4eba\u5370\u8c61\u6700\u6df1\u523b\u7684\u90e8\u5206\u662f\uff1a\u63a7\u4ef6\u4e2d\u7684\u5355\u4e00\u5185\u5bb9\u53ef\u4ee5\u662f\u666e\u901a\u5b57\u7b26\u4e32\u4e43\u81f3\u5177\u6709\u5176\u4ed6\u5f62\u72b6\u548c\u63a7\u4ef6\u7ec4\u5408\u7684\u5e03\u5c40\u9762\u677f\u3002","title":"System.Windows.Controls.ContentControl\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowscontrolsitemscontrol","text":"ItemsControl \u7c7b\u662f\u6240\u6709\u663e\u793a\u9009\u9879\u96c6\u5408\u7684\u63a7\u4ef6\u7684\u57fa\u7c7b\uff0c\u5982 ListBox \u548c TreeView \u63a7\u4ef6\u3002\u5217\u8868\u63a7\u4ef6\u5341\u5206\u7075\u6d3b\u2014\u2014\u4f8b\u5982\u3002\u4f7f\u7528 ItemsControl \u7c7b\u7684\u5185\u7f6e\u7279\u5f81\uff0c\u53ef\u5c06\u7b80\u5355\u7684 ListBox \u63a7\u4ef6\u53d8\u6362\u6210\u5355\u9009\u6309\u94ae\u5217\u8868\u3001\u590d\u9009\u6846\u63a7\u4ef6\u5217\u8868\u3001\u5e73\u94fa\u7684\u56fe\u50cf\u6216\u662f\u4f60\u6240\u9009\u62e9\u7684\u5b8c\u5168\u4e0d\u540c\u7684\u5143\u7d20\u7684\u7ec4\u5408\u3002\u5b9e\u9645\u4e0a\uff0cWPF \u4e2d\u7684\u83dc\u5355\u3001\u5de5\u5177\u680f\u4ee5\u53ca\u72b6\u6001\u680f\u90fd\u662f\u7279\u5b9a\u7684\u5217\u8868\uff0c\u5e76\u4e14\u5b9e\u73b0\u5b83\u4eec\u7684\u7c7b\u90fd\u7ee7\u627f\u81ea ItemsControl \u7c7b\u3002","title":"System.Windows.Controls.ItemsControl\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/11.%20WPF%20%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/#systemwindowscontrolspanel","text":"Panel \u7c7b\u662f\u6240\u6709\u5e03\u5c40\u5bb9\u5668\u7684\u57fa\u7c7b\uff0c\u5e03\u5c40\u5bb9\u5668\u662f\u53ef\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u5143\u7d20\u3001\u5e76\u6309\u7279\u5b9a\u89c4\u5219\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u6392\u5217\u7684\u5143\u7d20\u3002\u8fd9\u4e9b\u5bb9\u5668\u662f WPF \u5e03\u5c40\u7cfb\u7edf\u7684\u57fa\u7840\uff0c\u8981\u4ee5\u6700\u5bcc\u6709\u5438\u5f15\u529b\u3001\u6700\u7075\u6d3b\u7684\u65b9\u5f0f\u5b89\u6392\u5185\u5bb9\uff0c\u4f7f\u7528\u8fd9\u4e9b\u5bb9\u5668\u662f\u5173\u952e\u6240\u5728\u3002","title":"System.Windows.Controls.Panel\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/12.%20WPF%204.5/","text":"WPF \u662f\u4e00\u79cd\u6210\u719f\u7684\u6280\u672f\u3002\u5b83\u662f\u51e0\u4e2a\u5df2\u7ecf\u53d1\u5e03\u7684 .NET \u5e73\u53f0\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u901a\u8fc7\u4e00\u4e0b\u7248\u672c\u4e0d\u65ad\u5730\u8fdb\u884c\u5b8c\u5584\uff1a WPF 3.0\u3002 \u8fd9\u662f WPF \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\uff0c\u5b83\u4e0e\u53e6\u4e24\u79cd\u65b0\u6280\u672f\u4e00\u5e76\u53d1\u5e03\uff1aWCF\uff08Windows Communication Foundation\uff09\u548c Windows WF\uff08Workflow Foundation\uff09\u3002\u8fd9\u4e09\u79cd\u6280\u672f\u5408\u79f0\u4e3a .NET Framework 3.0\u3002 WPF 3.5\u3002 \u4e00\u5e74\u540e\uff0c\u4e00\u4e2a\u65b0\u7684 WPF \u7248\u672c\u4f5c\u4e3a .NET Framework 3.5 \u7684\u4e00\u90e8\u5206\u53d1\u5e03\u3002\u65b0\u7248\u672c WPF \u7684\u65b0\u7279\u6027\u4e3b\u8981\u662f\u4e00\u4e9b\u5c0f\u7684\u6539\u8fdb\uff0c\u5305\u62ec\u9519\u8bef\u4fee\u590d\u548c\u6027\u80fd\u6539\u8fdb\u3002 WPF 3.5 SP 1\u3002 \u5f53\u53d1\u5e03 .NET Framework Service Pack\uff08SP1\uff09\u65f6\uff0cWPF \u8bbe\u8ba1\u4eba\u5458\u6293\u4f4f\u8fd9\u4e2a\u673a\u4f1a\u589e\u6dfb\u4e86\u4e00\u4e9b\u65b0\u529f\u80fd\uff0c\u4f8b\u5982\u5e73\u6ed1\u56fe\u5f62\u6548\u679c\uff08\u901a\u8fc7\u50cf\u7d20\u7740\u8272\u5668\u5b9e\u73b0\uff09\u5df2\u7ecf\u9ad8\u7ea7\u7684 DataGrid \u63a7\u4ef6\u3002 WPF 4\u3002 \u8be5 WPF \u7248\u672c\u505a\u4e86\u5927\u91cf\u6539\u8fdb\uff0c\u5305\u62ec\u66f4\u597d\u5730\u6e32\u67d3\u6587\u672c\u3001\u52a8\u753b\u66f4\u81ea\u7136\u6d41\u7545\u5df2\u7ecf\u652f\u6301\u591a\u70b9\u89e6\u63a7\u3002 WPF 4.5\u3002 \u76f8\u5bf9\u4e0e\u4e0a\u8ff0\u7248\u672c\u66f4\u65b0\uff0c\u8fc4\u4eca\u4e3a\u6b62\uff0c\u8fd9\u4e00\u6700\u65b0 WPF \u7248\u672c\u5bf9 WPF 4 \u6240\u505a\u7684\u66f4\u5c0f\u65f6\u6700\u5c11\u7684\uff0c\u8fd9\u4e5f\u8868\u660e WPF \u6280\u672f\u5df2\u7ecf\u8d70\u5411\u6210\u719f\u3002\u9664\u7ea0\u6b63\u4e00\u4e9b\u4e00\u822c\u6027\u9519\u8bef\u5e76\u5bf9\u6027\u80fd\u505a\u4e86\u8c03\u6574\u5916\uff0cWPF 4.5 \u8fd8\u5bf9\u6570\u636e\u7ed1\u5b9a\u7cfb\u7edf\u505a\u4e86\u5927\u91cf\u5b8c\u5584\u5de5\u4f5c\uff0c\u6bd4\u5982\u5b8c\u5584\u4e86\u6570\u636e\u7ed1\u5b9a\u8868\u8fbe\u5f0f\u3001\u53ef\u89c6\u5316\uff0c\u5e76\u53ef\u4ee5\u652f\u6301 INotifyDataError \u63a5\u53e3\u4ee5\u53ca\u6570\u636e\u89c6\u56fe\u540c\u6b65\u3002 WPF \u5de5\u5177\u5305 \u5728\u5c06\u65b0\u63a7\u4ef6\u96c6\u6210\u5230 .NET \u5e73\u53f0\u7684 WPF \u5e93\u4e4b\u524d\uff0c\u901a\u5e38\u9996\u5148\u5c06\u65b0\u63a7\u4ef6\u653e\u5165\u88ab\u79f0\u4e3a WPF \u5de5\u5177\u5305\uff08WPF Toolkit\uff09\u7684 Microsoft \u4e0b\u8f7d\u4e2d\u3002WPF \u5de5\u5177\u5305\u4e0d\u4ec5\u65f6\u9884\u89c8 WPF \u672a\u6765\u65b9\u5411\u7684\u573a\u6240\uff0c\u8fd8\u662f\u975e\u5e38\u597d\u7684\u5b9e\u7528\u7ec4\u4ef6\u548c\u63a7\u4ef6\u7684\u6e90\uff0c\u4f7f\u5f97\u5728\u6b63\u5e38\u7684 WPF \u53d1\u5e03\u5468\u671f\u5916\u53ef\u4f7f\u7528\u8fd9\u4e9b\u63a7\u4ef6\u548c\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0cWPF \u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u7c7b\u578b\u7684\u5236\u56fe\u5de5\u5177\uff0c\u4f46 WPF \u5de5\u5177\u5305\u63d0\u4f9b\u4e86\u4e00\u5957\u63a7\u4ef6\u7528\u4e8e\u521b\u5efa\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u6563\u70b9\u56fe\u4ee5\u53ca\u7ebf\u56fe\u3002","title":"12. WPF 4.5"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/12.%20WPF%204.5/#wpf","text":"\u5728\u5c06\u65b0\u63a7\u4ef6\u96c6\u6210\u5230 .NET \u5e73\u53f0\u7684 WPF \u5e93\u4e4b\u524d\uff0c\u901a\u5e38\u9996\u5148\u5c06\u65b0\u63a7\u4ef6\u653e\u5165\u88ab\u79f0\u4e3a WPF \u5de5\u5177\u5305\uff08WPF Toolkit\uff09\u7684 Microsoft \u4e0b\u8f7d\u4e2d\u3002WPF \u5de5\u5177\u5305\u4e0d\u4ec5\u65f6\u9884\u89c8 WPF \u672a\u6765\u65b9\u5411\u7684\u573a\u6240\uff0c\u8fd8\u662f\u975e\u5e38\u597d\u7684\u5b9e\u7528\u7ec4\u4ef6\u548c\u63a7\u4ef6\u7684\u6e90\uff0c\u4f7f\u5f97\u5728\u6b63\u5e38\u7684 WPF \u53d1\u5e03\u5468\u671f\u5916\u53ef\u4f7f\u7528\u8fd9\u4e9b\u63a7\u4ef6\u548c\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0cWPF \u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u7c7b\u578b\u7684\u5236\u56fe\u5de5\u5177\uff0c\u4f46 WPF \u5de5\u5177\u5305\u63d0\u4f9b\u4e86\u4e00\u5957\u63a7\u4ef6\u7528\u4e8e\u521b\u5efa\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u6563\u70b9\u56fe\u4ee5\u53ca\u7ebf\u56fe\u3002","title":"WPF \u5de5\u5177\u5305"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/13.%20%E7%90%86%E8%A7%A3%20XAML/","text":"\u5f00\u53d1\u4eba\u5458\u5f88\u4e45\u524d\u5c31\u4ee5\u53ca\u610f\u8bc6\u5230\uff0c\u8981\u5904\u7406\u56fe\u5f62\u4e30\u5bcc\u7684\u590d\u6742\u5e94\u7528\u7a0b\u5e8f\uff0c\u6700\u6709\u6548\u7684\u65b9\u5f0f\u662f\u5c06\u56fe\u5f62\u90e8\u5206\u4ece\u5e95\u5c42\u7684\u4ee3\u7801\u4e2d\u5206\u79bb\u51fa\u6765\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u7f8e\u5de5\u4eba\u5458\u53ef\u72ec\u7acb\u5730\u8bbe\u8ba1\u56fe\u5f62\uff0c\u800c\u5f00\u53d1\u4eba\u5458\u53ef\u72ec\u7acb\u5730\u7f16\u5199\u4ee3\u7801\u3002\u8fd9\u4e24\u90e8\u5206\u5de5\u4f5c\u53ef\u5355\u72ec\u5730\u8fdb\u884c\u8bbe\u8ba1\u548c\u4fee\u6539\uff0c\u800c\u4e0d\u4f1a\u7531\u4efb\u4f55\u7248\u672c\u95ee\u9898\u3002 WPF \u4e4b\u524d\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762 \u4f7f\u7528\u4f20\u7edf\u7684\u663e\u793a\u6280\u672f\uff0c\u4ece\u4ee3\u7801\u4e2d\u5206\u79bb\u51fa\u56fe\u5f62\u5185\u5bb9\u5e76\u4e0d\u5bb9\u6613\u3002\u5bf9\u4e8e Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u800c\u8a00\uff0c\u5173\u952e\u95ee\u9898\u662f\u521b\u5efa\u7684\u6bcf\u4e2a\u7a97\u4f53\u5b8c\u5168\u90fd\u662f\u7531 C# \u4ee3\u7801\u5b9a\u4e49\u7684\u3002\u5728\u5c06\u63a7\u4ef6\u62d6\u52a8\u5230\u8bbe\u8ba1\u89c6\u56fe\u4e0a\u5e76\u914d\u7f6e\u63a7\u4ef6\u65f6\uff0cVisual Studio \u5c06\u5728\u76f8\u5e94\u7684\u7a97\u4f53\u7c7b\u4e2d\u81ea\u52a8\u8c03\u6574\u4ee3\u7801\u3002\u4f46\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u4f7f\u7528 C# \u4ee3\u7801\u7684\u5de5\u5177\u3002 \u76f8\u53cd\uff0c\u7f8e\u5de5\u4eba\u5458\u5fc5\u987b\u5c06\u4ed6\u4eec\u7684\u5de5\u4f5c\u5185\u5bb9\u5bfc\u51fa\u4e3a\u4f4d\u56fe\u3002\u7136\u540e\u53ef\u4f7f\u7528\u8fd9\u4e9b\u4f4d\u56fe\u786e\u5b9a\u7a97\u4f53\u3001\u6309\u94ae\u4ee5\u53ca\u5176\u4ed6\u63a7\u4ef6\u7684\u5916\u89c2\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u56fa\u5b9a\u7528\u6237\u754c\u9762\u800c\u8a00\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u679c\u4e0d\u9519\uff0c\u4f46\u5728\u5176\u4ed6\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u53d7\u5230\u5f88\u5927\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a \u6bcf\u4e2a\u56fe\u5f62\u5143\u7d20\uff08\u80cc\u666f\u548c\u6309\u94ae\u7b49\uff09\u9700\u8981\u5bfc\u51fa\u4e3a\u5355\u72ec\u7684\u4f4d\u56fe\u3002\u8fd9\u9650\u5236\u4e86\u7ec4\u5408\u4f4d\u56fe\u7684\u80fd\u529b\u548c\u4f7f\u7528\u52a8\u6001\u6548\u679c\u7684\u80fd\u529b\uff0c\u5982\u53cd\u952f\u9f7f\u3001\u900f\u660e\u548c\u9634\u5f71\u6548\u679c\u3002 \u76f8\u5f53\u591a\u7684\u7528\u6237\u754c\u9762\u903b\u8f91\u90fd\u9700\u8981\u5f00\u53d1\u4eba\u5458\u5d4c\u5165\u5230\u4ee3\u7801\u4e2d\uff0c\u5305\u62ec\u6309\u94ae\u7684\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u9f20\u6807\u60ac\u505c\u6548\u679c\u4ee5\u53ca\u52a8\u753b\u3002\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u65e0\u6cd5\u63a7\u5236\u5176\u4e2d\u7684\u4efb\u4f55\u7ec6\u8282\u3002 \u5728\u4e0d\u540c\u7684\u56fe\u5f62\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u56fa\u6709\u7684\u8fde\u63a5\uff0c\u6240\u6709\u7ec4\u540e\u7ecf\u5e38\u4f1a\u4f7f\u7528\u4e0d\u5339\u914d\u7684\u56fe\u50cf\u96c6\u5408\u3002\u8ddf\u8e2a\u6240\u6709\u8fd9\u4e9b\u9879\u4f1a\u589e\u52a0\u590d\u6742\u6027\u3002 \u5728\u8c03\u6574\u56fe\u5f62\u5927\u5c0f\u65f6\u5fc5\u7136\u4f1a\u635f\u5931\u8d28\u91cf\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u57fa\u4e8e\u4f4d\u56fe\u7684\u7528\u6237\u754c\u9762\u662f\u4f9d\u8d56\u4e8e\u5206\u8fa8\u7387\u7684\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u9002\u5e94\u5927\u663e\u793a\u5668\u4ee5\u53ca\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u8bbe\u7f6e\uff0c\u800c\u8fd9\u4e25\u91cd\u80cc\u79bb\u4e86 WPF \u7684\u8bbe\u8ba1\u521d\u8877\u3002 \u5982\u679c\u66fe\u7ecf\u6709\u8fc7\u5728\u4e00\u4e2a\u56e2\u961f\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fe\u5f62\u6765\u8bbe\u8ba1 Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u7684\u7ecf\u5386\uff0c\u80af\u5b9a\u9047\u5230\u8fc7\u4e0d\u5c11\u632b\u6298\u3002\u5373\u4f7f\u7528\u6237\u754c\u9762\u662f\u7531\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u7684\uff0c\u4e5f\u9700\u8981\u4f7f\u7528 C# \u4ee3\u7801\u91cd\u65b0\u521b\u5efa\u5b83\u3002\u901a\u5e38\uff0c\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u53ea\u662f\u51c6\u5907\u4e00\u4e2a\u6a21\u62df\u754c\u9762\uff0c\u7136\u540e\u9700\u8981\u5f00\u53d1\u4eba\u5458\u518d\u4e0d\u8f9e\u8f9b\u52b3\u5730\u5c06\u5b83\u8f6c\u6362\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 WPF \u901a\u8fc7 XAML \u89e3\u51b3\u4e86\u8be5\u95ee\u9898\u3002\u5f53\u5728 Visual Studio \u4e2d\u8bbe\u8ba1 WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5f53\u524d\u8bbe\u8ba1\u7684\u7a97\u53e3\u4e0d\u88ab\u8f6c\u6362\u4e3a\u4ee3\u7801\u3002\u76f8\u53cd\uff0c\u5b83\u88ab\u4e32\u884c\u5316\u5230\u4e00\u7cfb\u5217 XAML \u6807\u7b7e\u4e2d\u3002\u5f53\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u4e9b\u6807\u7b7e\u7528\u4e8e\u751f\u6210\u6784\u6210\u7528\u6237\u754c\u9762\u7684\u5bf9\u8c61\u3002 XAML \u5bf9\u4e8e WPF \u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u7406\u89e3\u8fd9\u70b9\u662f\u5f88\u91cd\u8981\u7684\u3002Visual Studio \u5f53\u7136\u53ef\u4f7f\u7528 Windows \u7a97\u4f53\u65b9\u6cd5\uff0c\u901a\u8fc7\u8bed\u53e5\u4ee3\u7801\u6765\u6784\u9020 WPF \u7a97\u53e3\u3002\u4f46\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7a97\u53e3\u5c06\u88ab\u9650\u5236\u5728 Visual Studio \u5f00\u53d1\u73af\u5883\u53ea\u5185\uff0c\u53ea\u80fd\u7531\u7f16\u7a0b\u4eba\u5458\u4f7f\u7528\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cWPF \u4e0d\u89c1\u5f97\u4f7f\u7528 XAML\u3002\u4f46 XAML \u4e3a\u534f\u4f5c\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u5176\u4ed6\u8bbe\u8ba1\u5de5\u5177\u7406\u89e3 XAML \u683c\u5f0f\u3002\u4f8b\u5982\uff0c\u806a\u660e\u7684\u8bbe\u8ba1\u4eba\u5458\u53ef\u4f7f\u7528 Microsoft Expression Design \u7b49\u5de5\u5177\u7cbe\u7ec6\u4fee\u6539 WPF \u5e94\u7528\u7a0b\u5e8f\u7684\u56fe\u5f62\u754c\u9762\uff0c\u6216\u4f7f\u7528 Expression Blend \u7b49\u5de5\u5177\u4e3a WPF \u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u7cbe\u7f8e\u52a8\u753b\u3002 XAML \u53d8\u4f53 \u5b9e\u9645\u4e0a\u672f\u8bed\u201dXAML\u201d\u6709\u591a\u79cd\u542b\u4e49\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4f7f\u7528 XAML \u8868\u793a\u6574\u4e2a XAML \u8bed\u8a00\uff0c\u5b83\u662f\u4e00\u79cd\u57fa\u4e8e\u901a\u7528 XML \u8bed\u6cd5\u3001\u4e13\u95e8\u7528\u4e8e\u8868\u793a\u4e00\u68f5 .NET \u5bf9\u8c61\u6811\u7684\u8bed\u8a00\uff08\u8fd9\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u662f\u7a97\u53e3\u4e2d\u7684\u6309\u94ae\u3001\u6587\u672c\u6846\uff0c\u6216\u662f\u4f60\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u81ea\u5b9a\u4e49\u7c7b\u3002\u5b9e\u9645\u4e0a\uff0cXAML \u751a\u81f3\u53ef\u7528\u4e8e\u5176\u4ed6\u5e73\u53f0\u6765\u8868\u793a\u975e .NET\u5bf9\u8c61\uff09\u3002 XAML \u8fd8\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u5b50\u96c6\uff1a WPF XAML \u5305\u542b\u63cf\u8ff0 WPF \u5185\u5bb9\u7684\u5143\u7d20\uff0c\u5982\u77e2\u91cf\u56fe\u5f62\u3001\u63a7\u4ef6\u5df2\u7ecf\u6587\u6863\u3002\u76ee\u524d\uff0c\u5b83\u662f\u6700\u91cd\u8981\u7684 XAML \u5e94\u7528\u3002 XPS XAML \u662f WPF XAML \u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4e3a\u683c\u5f0f\u5316\u7684\u7535\u5b50\u6587\u6863\u5b9a\u4e49\u4e86\u4e00\u79cd XML \u8868\u793a\u65b9\u5f0f\u3002XPS XAML \u5df2\u4f5c\u4e3a\u5355\u72ec\u7684 XML \u9875\u9762\u89c4\u8303\uff08XML Paper Specification\uff0cXPS\uff09\u6807\u51c6\u53d1\u5e03\u3002 Silverlight XAML \u662f\u4e00\u4e2a\u7528\u4e8e Microsoft Silverlight \u5e94\u7528\u7a0b\u5e8f\u7684 WPF XAML \u5b50\u96c6\u3002Silverlight \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u901a\u8fc7\u5b83\u53ef\u521b\u5efa\u5177\u6709\u4e8c\u7ef4\u56fe\u5f62\u3001\u52a8\u753b\u3001\u97f3\u9891\u548c\u89c6\u9891\u7684\u5bcc Web \u5185\u5bb9\u3002 WF XAML \u5305\u62ec\u63cf\u8ff0 WF\uff08Work Flow\uff0c\u5de5\u4f5c\u6d41\uff09\u5185\u5bb9\u7684\u5143\u7d20\u3002 XAML \u7f16\u8bd1 WPF \u7684\u521b\u5efa\u8005\u77e5\u9053\uff0cXAML \u4e0d\u4ec5\u8981\u80fd\u591f\u89e3\u51b3\u8bbe\u8ba1\u534f\u4f5c\u95ee\u9898\uff0c\u5b83\u8fd8\u9700\u8981\u5feb\u901f\u8fd0\u884c\u3002\u5c3d\u7ba1\u57fa\u4e8e XML \u7684\u683c\u5f0f\uff08\u5982 XAML\uff09\u53ef\u4ee5\u5f88\u7075\u6d3b\u5e76\u4e14\u5f88\u5bb9\u6613\u5730\u8fc1\u79fb\u5230\u5176\u4ed6\u5de5\u5177\u548c\u5e73\u53f0\uff0c\u4f46\u5b83\u4eec\u672a\u5fc5\u662f\u6700\u6709\u6548\u7684\u9009\u62e9\u3002XML \u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5177\u6709\u903b\u8f91\u6027\u3001\u6613\u8bfb\u800c\u4e14\u7b80\u5355\uff0c\u6ca1\u6709\u88ab\u538b\u7f29\u3002 WPF \u4f7f\u7528 BAML\uff08Binary Application Markup Language\uff0c\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u6807\u8bb0\u8bed\u8a00\uff09\u6765\u514b\u670d\u8fd9\u4e2a\u7f3a\u70b9\u3002BAML \u5e76\u975e\u65b0\u4e8b\u7269\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f XAML \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u5f53\u5728 Visual Studio \u4e2d\u7f16\u8bd1 WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6240\u6709 XAML \u6587\u4ef6\u90fd\u88ab\u8f6c\u6362\u4e3a BAML\uff0c\u8fd9\u4e9b BAML \u7136\u540e\u4f5c\u4e3a\u8d44\u6e90\u88ab\u5d4c\u5165\u5230\u6700\u7ec8\u7684 DLL \u6216 EXE \u7a0b\u5e8f\u96c6\u4e2d\u3002BAML \u662f\u6807\u8bb0\u5316\u7684\uff0c\u8fd9\u610f\u5473\u7740\u8f83\u957f\u7684 XAML \u88ab\u8f83\u77ed\u7684\u6807\u8bb0\u66ff\u4ee3\u3002BAML \u4e0d\u4ec5\u660e\u663e\u5c0f\u4e00\u4e9b\uff0c\u8fd8\u5bf9\u5176\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4ece\u800c\u4f7f\u5b83\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u66f4\u5feb\u5730\u89e3\u6790\u3002 \u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u8003\u8651 XAML \u5411 BAML \u7684\u8f6c\u6362\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u5728\u540e\u53f0\u6267\u884c\u8fd9\u9879\u5de5\u4f5c\u3002\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672a\u7ecf\u7f16\u8bd1\u7684 XAML\uff0c\u8fd9\u5bf9\u4e8e\u9700\u8981\u5373\u65f6\u63d0\u4f9b\u4e00\u4e9b\u7528\u6237\u754c\u9762\u7684\u60c5\u51b5\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002","title":"13. \u7406\u89e3 XAML"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/13.%20%E7%90%86%E8%A7%A3%20XAML/#wpf","text":"\u4f7f\u7528\u4f20\u7edf\u7684\u663e\u793a\u6280\u672f\uff0c\u4ece\u4ee3\u7801\u4e2d\u5206\u79bb\u51fa\u56fe\u5f62\u5185\u5bb9\u5e76\u4e0d\u5bb9\u6613\u3002\u5bf9\u4e8e Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u800c\u8a00\uff0c\u5173\u952e\u95ee\u9898\u662f\u521b\u5efa\u7684\u6bcf\u4e2a\u7a97\u4f53\u5b8c\u5168\u90fd\u662f\u7531 C# \u4ee3\u7801\u5b9a\u4e49\u7684\u3002\u5728\u5c06\u63a7\u4ef6\u62d6\u52a8\u5230\u8bbe\u8ba1\u89c6\u56fe\u4e0a\u5e76\u914d\u7f6e\u63a7\u4ef6\u65f6\uff0cVisual Studio \u5c06\u5728\u76f8\u5e94\u7684\u7a97\u4f53\u7c7b\u4e2d\u81ea\u52a8\u8c03\u6574\u4ee3\u7801\u3002\u4f46\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u4f7f\u7528 C# \u4ee3\u7801\u7684\u5de5\u5177\u3002 \u76f8\u53cd\uff0c\u7f8e\u5de5\u4eba\u5458\u5fc5\u987b\u5c06\u4ed6\u4eec\u7684\u5de5\u4f5c\u5185\u5bb9\u5bfc\u51fa\u4e3a\u4f4d\u56fe\u3002\u7136\u540e\u53ef\u4f7f\u7528\u8fd9\u4e9b\u4f4d\u56fe\u786e\u5b9a\u7a97\u4f53\u3001\u6309\u94ae\u4ee5\u53ca\u5176\u4ed6\u63a7\u4ef6\u7684\u5916\u89c2\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u56fa\u5b9a\u7528\u6237\u754c\u9762\u800c\u8a00\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u679c\u4e0d\u9519\uff0c\u4f46\u5728\u5176\u4ed6\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u53d7\u5230\u5f88\u5927\u7684\u9650\u5236\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5b58\u5728\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a \u6bcf\u4e2a\u56fe\u5f62\u5143\u7d20\uff08\u80cc\u666f\u548c\u6309\u94ae\u7b49\uff09\u9700\u8981\u5bfc\u51fa\u4e3a\u5355\u72ec\u7684\u4f4d\u56fe\u3002\u8fd9\u9650\u5236\u4e86\u7ec4\u5408\u4f4d\u56fe\u7684\u80fd\u529b\u548c\u4f7f\u7528\u52a8\u6001\u6548\u679c\u7684\u80fd\u529b\uff0c\u5982\u53cd\u952f\u9f7f\u3001\u900f\u660e\u548c\u9634\u5f71\u6548\u679c\u3002 \u76f8\u5f53\u591a\u7684\u7528\u6237\u754c\u9762\u903b\u8f91\u90fd\u9700\u8981\u5f00\u53d1\u4eba\u5458\u5d4c\u5165\u5230\u4ee3\u7801\u4e2d\uff0c\u5305\u62ec\u6309\u94ae\u7684\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u9f20\u6807\u60ac\u505c\u6548\u679c\u4ee5\u53ca\u52a8\u753b\u3002\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u65e0\u6cd5\u63a7\u5236\u5176\u4e2d\u7684\u4efb\u4f55\u7ec6\u8282\u3002 \u5728\u4e0d\u540c\u7684\u56fe\u5f62\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u56fa\u6709\u7684\u8fde\u63a5\uff0c\u6240\u6709\u7ec4\u540e\u7ecf\u5e38\u4f1a\u4f7f\u7528\u4e0d\u5339\u914d\u7684\u56fe\u50cf\u96c6\u5408\u3002\u8ddf\u8e2a\u6240\u6709\u8fd9\u4e9b\u9879\u4f1a\u589e\u52a0\u590d\u6742\u6027\u3002 \u5728\u8c03\u6574\u56fe\u5f62\u5927\u5c0f\u65f6\u5fc5\u7136\u4f1a\u635f\u5931\u8d28\u91cf\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u57fa\u4e8e\u4f4d\u56fe\u7684\u7528\u6237\u754c\u9762\u662f\u4f9d\u8d56\u4e8e\u5206\u8fa8\u7387\u7684\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u9002\u5e94\u5927\u663e\u793a\u5668\u4ee5\u53ca\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u8bbe\u7f6e\uff0c\u800c\u8fd9\u4e25\u91cd\u80cc\u79bb\u4e86 WPF \u7684\u8bbe\u8ba1\u521d\u8877\u3002 \u5982\u679c\u66fe\u7ecf\u6709\u8fc7\u5728\u4e00\u4e2a\u56e2\u961f\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fe\u5f62\u6765\u8bbe\u8ba1 Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u7684\u7ecf\u5386\uff0c\u80af\u5b9a\u9047\u5230\u8fc7\u4e0d\u5c11\u632b\u6298\u3002\u5373\u4f7f\u7528\u6237\u754c\u9762\u662f\u7531\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u7684\uff0c\u4e5f\u9700\u8981\u4f7f\u7528 C# \u4ee3\u7801\u91cd\u65b0\u521b\u5efa\u5b83\u3002\u901a\u5e38\uff0c\u56fe\u5f62\u8bbe\u8ba1\u4eba\u5458\u53ea\u662f\u51c6\u5907\u4e00\u4e2a\u6a21\u62df\u754c\u9762\uff0c\u7136\u540e\u9700\u8981\u5f00\u53d1\u4eba\u5458\u518d\u4e0d\u8f9e\u8f9b\u52b3\u5730\u5c06\u5b83\u8f6c\u6362\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 WPF \u901a\u8fc7 XAML \u89e3\u51b3\u4e86\u8be5\u95ee\u9898\u3002\u5f53\u5728 Visual Studio \u4e2d\u8bbe\u8ba1 WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5f53\u524d\u8bbe\u8ba1\u7684\u7a97\u53e3\u4e0d\u88ab\u8f6c\u6362\u4e3a\u4ee3\u7801\u3002\u76f8\u53cd\uff0c\u5b83\u88ab\u4e32\u884c\u5316\u5230\u4e00\u7cfb\u5217 XAML \u6807\u7b7e\u4e2d\u3002\u5f53\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u4e9b\u6807\u7b7e\u7528\u4e8e\u751f\u6210\u6784\u6210\u7528\u6237\u754c\u9762\u7684\u5bf9\u8c61\u3002 XAML \u5bf9\u4e8e WPF \u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u7406\u89e3\u8fd9\u70b9\u662f\u5f88\u91cd\u8981\u7684\u3002Visual Studio \u5f53\u7136\u53ef\u4f7f\u7528 Windows \u7a97\u4f53\u65b9\u6cd5\uff0c\u901a\u8fc7\u8bed\u53e5\u4ee3\u7801\u6765\u6784\u9020 WPF \u7a97\u53e3\u3002\u4f46\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u7a97\u53e3\u5c06\u88ab\u9650\u5236\u5728 Visual Studio \u5f00\u53d1\u73af\u5883\u53ea\u5185\uff0c\u53ea\u80fd\u7531\u7f16\u7a0b\u4eba\u5458\u4f7f\u7528\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cWPF \u4e0d\u89c1\u5f97\u4f7f\u7528 XAML\u3002\u4f46 XAML \u4e3a\u534f\u4f5c\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\u56e0\u4e3a\u5176\u4ed6\u8bbe\u8ba1\u5de5\u5177\u7406\u89e3 XAML \u683c\u5f0f\u3002\u4f8b\u5982\uff0c\u806a\u660e\u7684\u8bbe\u8ba1\u4eba\u5458\u53ef\u4f7f\u7528 Microsoft Expression Design \u7b49\u5de5\u5177\u7cbe\u7ec6\u4fee\u6539 WPF \u5e94\u7528\u7a0b\u5e8f\u7684\u56fe\u5f62\u754c\u9762\uff0c\u6216\u4f7f\u7528 Expression Blend \u7b49\u5de5\u5177\u4e3a WPF \u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u7cbe\u7f8e\u52a8\u753b\u3002","title":"WPF \u4e4b\u524d\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/13.%20%E7%90%86%E8%A7%A3%20XAML/#xaml","text":"\u5b9e\u9645\u4e0a\u672f\u8bed\u201dXAML\u201d\u6709\u591a\u79cd\u542b\u4e49\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4f7f\u7528 XAML \u8868\u793a\u6574\u4e2a XAML \u8bed\u8a00\uff0c\u5b83\u662f\u4e00\u79cd\u57fa\u4e8e\u901a\u7528 XML \u8bed\u6cd5\u3001\u4e13\u95e8\u7528\u4e8e\u8868\u793a\u4e00\u68f5 .NET \u5bf9\u8c61\u6811\u7684\u8bed\u8a00\uff08\u8fd9\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u662f\u7a97\u53e3\u4e2d\u7684\u6309\u94ae\u3001\u6587\u672c\u6846\uff0c\u6216\u662f\u4f60\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u81ea\u5b9a\u4e49\u7c7b\u3002\u5b9e\u9645\u4e0a\uff0cXAML \u751a\u81f3\u53ef\u7528\u4e8e\u5176\u4ed6\u5e73\u53f0\u6765\u8868\u793a\u975e .NET\u5bf9\u8c61\uff09\u3002 XAML \u8fd8\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u5b50\u96c6\uff1a WPF XAML \u5305\u542b\u63cf\u8ff0 WPF \u5185\u5bb9\u7684\u5143\u7d20\uff0c\u5982\u77e2\u91cf\u56fe\u5f62\u3001\u63a7\u4ef6\u5df2\u7ecf\u6587\u6863\u3002\u76ee\u524d\uff0c\u5b83\u662f\u6700\u91cd\u8981\u7684 XAML \u5e94\u7528\u3002 XPS XAML \u662f WPF XAML \u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4e3a\u683c\u5f0f\u5316\u7684\u7535\u5b50\u6587\u6863\u5b9a\u4e49\u4e86\u4e00\u79cd XML \u8868\u793a\u65b9\u5f0f\u3002XPS XAML \u5df2\u4f5c\u4e3a\u5355\u72ec\u7684 XML \u9875\u9762\u89c4\u8303\uff08XML Paper Specification\uff0cXPS\uff09\u6807\u51c6\u53d1\u5e03\u3002 Silverlight XAML \u662f\u4e00\u4e2a\u7528\u4e8e Microsoft Silverlight \u5e94\u7528\u7a0b\u5e8f\u7684 WPF XAML \u5b50\u96c6\u3002Silverlight \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u901a\u8fc7\u5b83\u53ef\u521b\u5efa\u5177\u6709\u4e8c\u7ef4\u56fe\u5f62\u3001\u52a8\u753b\u3001\u97f3\u9891\u548c\u89c6\u9891\u7684\u5bcc Web \u5185\u5bb9\u3002 WF XAML \u5305\u62ec\u63cf\u8ff0 WF\uff08Work Flow\uff0c\u5de5\u4f5c\u6d41\uff09\u5185\u5bb9\u7684\u5143\u7d20\u3002","title":"XAML \u53d8\u4f53"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/13.%20%E7%90%86%E8%A7%A3%20XAML/#xaml_1","text":"WPF \u7684\u521b\u5efa\u8005\u77e5\u9053\uff0cXAML \u4e0d\u4ec5\u8981\u80fd\u591f\u89e3\u51b3\u8bbe\u8ba1\u534f\u4f5c\u95ee\u9898\uff0c\u5b83\u8fd8\u9700\u8981\u5feb\u901f\u8fd0\u884c\u3002\u5c3d\u7ba1\u57fa\u4e8e XML \u7684\u683c\u5f0f\uff08\u5982 XAML\uff09\u53ef\u4ee5\u5f88\u7075\u6d3b\u5e76\u4e14\u5f88\u5bb9\u6613\u5730\u8fc1\u79fb\u5230\u5176\u4ed6\u5de5\u5177\u548c\u5e73\u53f0\uff0c\u4f46\u5b83\u4eec\u672a\u5fc5\u662f\u6700\u6709\u6548\u7684\u9009\u62e9\u3002XML \u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5177\u6709\u903b\u8f91\u6027\u3001\u6613\u8bfb\u800c\u4e14\u7b80\u5355\uff0c\u6ca1\u6709\u88ab\u538b\u7f29\u3002 WPF \u4f7f\u7528 BAML\uff08Binary Application Markup Language\uff0c\u4e8c\u8fdb\u5236\u5e94\u7528\u7a0b\u5e8f\u6807\u8bb0\u8bed\u8a00\uff09\u6765\u514b\u670d\u8fd9\u4e2a\u7f3a\u70b9\u3002BAML \u5e76\u975e\u65b0\u4e8b\u7269\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f XAML \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u5f53\u5728 Visual Studio \u4e2d\u7f16\u8bd1 WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6240\u6709 XAML \u6587\u4ef6\u90fd\u88ab\u8f6c\u6362\u4e3a BAML\uff0c\u8fd9\u4e9b BAML \u7136\u540e\u4f5c\u4e3a\u8d44\u6e90\u88ab\u5d4c\u5165\u5230\u6700\u7ec8\u7684 DLL \u6216 EXE \u7a0b\u5e8f\u96c6\u4e2d\u3002BAML \u662f\u6807\u8bb0\u5316\u7684\uff0c\u8fd9\u610f\u5473\u7740\u8f83\u957f\u7684 XAML \u88ab\u8f83\u77ed\u7684\u6807\u8bb0\u66ff\u4ee3\u3002BAML \u4e0d\u4ec5\u660e\u663e\u5c0f\u4e00\u4e9b\uff0c\u8fd8\u5bf9\u5176\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4ece\u800c\u4f7f\u5b83\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u66f4\u5feb\u5730\u89e3\u6790\u3002 \u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u8003\u8651 XAML \u5411 BAML \u7684\u8f6c\u6362\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u5728\u540e\u53f0\u6267\u884c\u8fd9\u9879\u5de5\u4f5c\u3002\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672a\u7ecf\u7f16\u8bd1\u7684 XAML\uff0c\u8fd9\u5bf9\u4e8e\u9700\u8981\u5373\u65f6\u63d0\u4f9b\u4e00\u4e9b\u7528\u6237\u754c\u9762\u7684\u60c5\u51b5\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002","title":"XAML \u7f16\u8bd1"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/14.%20XAML%20%E5%9F%BA%E7%A1%80/","text":"\u4e00\u65e6\u7406\u89e3\u4e86\u4e00\u4e9b\u57fa\u672c\u89c4\u5219\uff0cXAML \u6807\u51c6\u662f\u975e\u5e38\u7b80\u5355\u7684\uff1a XAML \u6587\u6863\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6620\u5c04\u4e3a .NET \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5143\u7d20\u7684\u540d\u79f0\u4e5f\u5b8c\u5168\u5bf9\u5e94\u4e8e\u7c7b\u540d\u3002\u4f8b\u5982\uff0c\u5143\u7d20 <Button> \u6307\u793a WPF \u521b\u5efa Button \u5bf9\u8c61\u3002 \u4e0e\u6240\u6709 XML \u6587\u6863\u4e00\u6837\uff0c\u53ef\u5728\u4e00\u4e2a\u5143\u7d20\u4e2d\u5d4c\u5957\u53e6\u4e00\u4e2a\u5143\u7d20\u3002\u5d4c\u5957\u901a\u5e38\u662f\u4e00\u79cd\u8868\u793a\u201c\u5305\u542b\u201d\u7684\u65b9\u6cd5\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u5728\u4e00\u4e2a Grid \u5143\u7d20\u4e2d\u53d1\u73b0\u4e00\u4e2a Button \u5143\u7d20\uff0c\u90a3\u4e48\u7528\u6237\u754c\u9762\u53ef\u80fd\u5305\u62ec\u4e00\u4e2a\u5728\u5176\u5185\u90e8\u5305\u542b\u4e00\u4e2a Button \u5143\u7d20\u7684 Grid \u5143\u7d20\u3002 \u53ef\u901a\u8fc7\u7279\u6027\uff08attribute\uff09\u8bbe\u7f6e\u6bcf\u4e2a\u7c7b\u7684\u5c5e\u6027\uff08property\uff09\u3002\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7279\u6027\u4e0d\u8db3\u4ee5\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u5bf9\u4e8e\u6b64\u7c7b\u60c5\u51b5\uff0c\u9700\u8981\u901a\u8fc7\u7279\u6b8a\u7684\u8bed\u6cd5\u4f7f\u7528\u5d4c\u5957\u7684\u6807\u7b7e\uff08tag\uff09\u3002 ![[XAML\u57fa\u7840.png]] \u4e0a\u56fe\u662f XAML \u6587\u6863\u57fa\u672c\u6846\u67b6\uff0c\u8868\u793a\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u7a97\u53e3\u3002 \u8be5\u6587\u6863\u4ec5\u542b\u4e24\u4e2a\u5143\u7d20\u2014\u2014\u9876\u7ea7\u7684 Window \u5143\u7d20\u4ee5\u53ca\u4e00\u4e2a Grid \u5143\u7d20\uff0c Window \u5143\u7d20\u4ee3\u8868\u8fd9\u4e2a\u7a97\u53e3\uff0c\u5728 Grid \u5143\u7d20\u4e2d\u53ef\u4ee5\u653e\u7f6e\u6240\u6709\u63a7\u4ef6\u3002\u5c3d\u7ba1\u53ef\u4f7f\u7528\u4efb\u4f55\u9876\u7ea7\u5143\u7d20\uff0c\u4f46\u662f WPF \u5e94\u7528\u7a0b\u5e8f\u53ea\u4f7f\u7528\u4e00\u4e0b\u51e0\u4e2a\u5143\u7d20\u4f5c\u4e3a\u9876\u7ea7\u5143\u7d20\uff1a Window \u5143\u7d20 Page \u5143\u7d20\uff08\u8be5\u5143\u7d20\u548c Window \u5143\u7d20\u7c7b\u4f3c\uff0c\u4f46\u5b83\u7528\u4e8e\u53ef\u5bfc\u822a\u7684\u5e94\u7528\u7a0b\u5e8f\uff09 Application \u5143\u7d20\uff08\u8be5\u5143\u7d20\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u8d44\u6e90\u548c\u542f\u52a8\u8bbe\u7f6e\uff09 \u4e0e\u5728\u6240\u6709 XML \u6587\u6863\u4e2d\u4e00\u6837\uff0c\u5728 XAML \u6587\u6863\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u9876\u7ea7\u5143\u7d20\u3002\u5728\u4e0a\u4f8b\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u8981\u4f7f\u7528 \u6807\u7b7e\u5173\u95ed\u4e86Window\u5143\u7d20\uff0c\u6587\u6863\u5c31\u7ed3\u675f\u4e86\u3002\u5728\u540e\u9762\u4e0d\u80fd\u518d\u6709\u4efb\u4f55\u5185\u5bb9\u4e86\u3002 XAML \u540d\u79f0\u7a7a\u95f4 \u663e\u7136\uff0c\u53ea\u63d0\u4f9b\u7c7b\u540d\u662f\u4e0d\u591f\u7684\u3002XAML \u89e3\u6790\u5668\u8fd8\u9700\u8981\u77e5\u9053\u7c7b\u4f4d\u4e8e\u54ea\u4e2a .NET \u540d\u79f0\u7a7a\u95f4\u3002\u4f8b\u5982\uff0c\u5728\u8bb8\u591a\u540d\u79f0\u7a7a\u95f4\u4e2d\u53ef\u80fd\u90fd\u6709 Window \u7c7b\u2014\u2014 Window \u7c7b\u53ef\u80fd\u662f\u6307 System.Windows.Window \u7c7b\uff0c\u4e5f\u53ef\u80fd\u662f\u6307\u4f4d\u4e8e\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u4e2d\u7684 Window \u7c7b\uff0c\u6216\u4f60\u81ea\u5df1\u518d\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684 Window \u7c7b\u7b49\u3002\u4e3a\u4e86\u5f04\u6e05\u5b9e\u9645\u4e0a\u5e0c\u671b\u4f7f\u7528\u54ea\u4e2a\u7c7b\uff0cXAML\u89e3\u6790\u5668\u4f1a\u68c0\u67e5\u5e94\u7528\u4e8e\u5143\u7d20\u7684 XML \u540d\u79f0\u7a7a\u95f4\u3002 xmlns = \"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns : x = \"http://schemas.microsoft.com/winfx/2006/xaml\" \u8fd9\u662f\u4e0a\u9762\u7684\u793a\u4f8b\u6587\u6863\u4e2d\u5b9a\u4e49\u7684\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 \u4f7f\u7528\u7279\u6027\u58f0\u660e XML \u540d\u79f0\u7a7a\u95f4\u3002\u8fd9\u4e9b\u7279\u6027\u80fd\u88ab\u653e\u5165\u4efb\u4f55\u5143\u7d20\u7684\u5f00\u59cb\u6807\u7b7e\u4e2d\u3002\u4f46\u7ea6\u5b9a\u8981\u6c42\uff0c\u518d\u6587\u6863\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u5e94\u5728\u7b2c\u4e00\u4e2a\u6807\u7b7e\u4e2d\u58f0\u660e\uff0c\u6b63\u5982\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u4e00\u65e6\u58f0\u660e\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u5728\u6587\u6863\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u8be5\u540d\u79f0\u7a7a\u95f4\u3002 xmlns\u7279\u6027\u662f XML \u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u7279\u6027\uff0c\u5b83\u4e13\u95e8\u7528\u6765\u58f0\u660e\u540d\u79f0\u7a7a\u95f4\u3002\u8fd9\u6bb5\u6807\u8bb0\u58f0\u660e\u4e86\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u5728\u521b\u5efa\u7684\u6240\u6709 WPF XAML \u6587\u6863\u4e2d\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\uff1a http://schemas.microsoft.com/winfx/2006/xaml/presentation \u662f WPF \u6838\u5fc3\u540d\u79f0\u7a7a\u95f4\u3002\u5b83\u5305\u542b\u4e86\u6240\u6709 WPF \u7c7b\uff0c\u5305\u62ec\u7528\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u7684\u63a7\u4ef6\u3002\u5728\u8be5\u4f8b\u4e2d\uff0c\u8be5\u540d\u79f0\u7a7a\u95f4\u7684\u58f0\u660e\u6ca1\u6709\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\u524d\u7f00\uff0c\u6240\u4ee5\u5b83\u6210\u4e3a\u6574\u4e2a\u6587\u6863\u7684\u9ed8\u8ba4\u540d\u79f0\u7a7a\u95f4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9664\u975e\u53e6\u884c\u6307\u660e\uff0c\u6bcf\u4e2a\u5143\u7d20\u81ea\u52a8\u4f4d\u4e8e\u8fd9\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 http://schemas.microsoft.com/winfx/2006/xaml \u662f XAML \u540d\u79f0\u7a7a\u95f4\u3002\u5b83\u5305\u542b\u5404\u79cd XAML \u4f7f\u7528\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u53ef\u5f71\u54cd\u6587\u6863\u7684\u89e3\u91ca\u65b9\u5f0f\u3002\u8be5\u540d\u79f0\u7a7a\u95f4\u88ab\u6620\u5c04\u4e3a\u524d\u7f00 x \u3002\u8fd9\u610f\u5473\u7740\u53ef\u901a\u8fc7\u5728\u5143\u7d20\u540d\u79f0\u4e4b\u524d\u653e\u7f6e\u540d\u79f0\u7a7a\u95f4\u524d\u7f00 x \u6765\u4f7f\u7528\u8be5\u540d\u79f0\u7a7a\u95f4\uff08\u4f8b\u5982 <x:ElementName> \uff09\u3002 \u6b63\u5982\u5728\u524d\u9762\u770b\u5230\u7684\uff0cXML \u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u548c\u4efb\u4f55\u7279\u5b9a\u7684 .NET \u540d\u79f0\u7a7a\u95f4\u90fd\u4e0d\u5339\u914d\u3002XAML\u7684\u521b\u5efa\u8005\u9009\u62e9\u8fd9\u79cd\u8bbe\u8ba1\u7684\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u6309\u7167\u7ea6\u5b9a\uff0cXML \u540d\u79f0\u7a7a\u95f4\u901a\u5e38\u662f URI\uff08\u5982\u4e0a\u9762\u6240\u793a\uff09\u3002\u8fd9\u4e9b URI \u770b\u8d77\u6765\u50cf\u662f\u5728\u6307\u660e Web \u4e0a\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002\u901a\u8fc7\u4f7f\u7528 URI \u683c\u5f0f\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u4e0d\u540c\u7ec4\u7ec7\u5c31\u57fa\u672c\u4e0d\u4f1a\u65e0\u610f\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u7a7a\u95f4\u521b\u5efa\u4e0d\u540c\u7684\u57fa\u4e8e XML \u7684\u8bed\u8a00\u3002\u56e0\u4e3a schemas.com \u57df\u5f52 Microsoft \u6240\u6709\uff0c\u53ea\u6709 Microsoft \u4f1a\u5728 XML \u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u4e2d\u4f7f\u7528\u5b83\u3002 \u53e6\u4e00\u4e2a\u539f\u56e0\u662f XAML \u4e2d\u4f7f\u7528\u7684 XML \u540d\u79f0\u7a7a\u95f4\u548c .NET \u540d\u79f0\u7a7a\u95f4\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u4e00\u4e00\u5bf9\u5e94\u7684\u8bdd\uff0c\u4f1a\u663e\u8457\u589e\u52a0 XAML \u6587\u6863\u7684\u590d\u6742\u7a0b\u5ea6\u3002\u6b64\u5904\u7684\u95ee\u9898\u5728\u4e8e\uff0cWPF \u5305\u542b\u4e86\u5341\u51e0\u79cd\u540d\u79f0\u7a7a\u95f4\uff08\u6240\u6709\u8fd9\u4e9b\u540d\u79f0\u7a7a\u95f4\u90fd\u4ee5 System.Windows \u5f00\u5934\uff09\u3002\u5982\u679c\u6bcf\u4e2a .NET \u540d\u79f0\u7a7a\u95f4\u90fd\u6709\u4e0d\u540c\u7684 XML \u540d\u79f0\u7a7a\u95f4\uff0c\u90a3\u5c31\u9700\u8981\u4e3a\u4f7f\u7528\u7684\u6bcf\u4e2a\u63a7\u4ef6\u6307\u5b9a\u786e\u5207\u7684 XML \u540d\u79f0\u7a7a\u95f4\uff0c\u8fd9\u5f88\u5feb\u5c31\u4f1a\u4f7f XAML \u6587\u6863\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002\u6240\u4ee5\uff0cWPF \u521b\u5efa\u4eba\u5458\u9009\u62e9\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5c06\u6240\u6709\u8fd9\u4e9b .NET \u540d\u79f0\u7a7a\u95f4\u7ec4\u5408\u5230\u5355\u4e2a XML \u540d\u79f0\u7a7a\u95f4\u4e2d\u3002\u56e0\u4e3a\u5728\u4e0d\u540c\u7684 .NET \u540d\u79f0\u7a7a\u95f4\u4e2d\u90fd\u6709\u4e00\u90e8\u5206 WPF \u7c7b\uff0c\u5e76\u4e14\u6240\u6709\u8fd9\u4e9b\u7c7b\u7684\u540d\u79f0\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u53ef\u884c\u7684\u3002 \u540d\u79f0\u7a7a\u95f4\u4fe1\u606f\u4f7f\u5f97 XAML \u89e3\u6790\u5668\u53ef\u627e\u5230\u6b63\u786e\u7684\u7c7b\u3002\u4f8b\u5982\uff0c\u5f53\u67e5\u627e Window \u548c Grid \u5143\u7d20\u65f6\uff0c\u9996\u5148\u4f1a\u67e5\u627e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u6240\u5728\u7684 WPF \u540d\u79f0\u7a7a\u95f4\uff0c\u7136\u540e\u67e5\u627e\u76f8\u5e94\u7684 .NET \u540d\u79f0\u7a7a\u95f4\uff0c\u76f4\u81f3\u627e\u5230 System.Windows.Winodw \u548c System.Windows.Controls.Grid \u7c7b\u3002 \u4ee3\u7801\u9690\u85cf\u7c7b \u53ef\u901a\u8fc7 XAML \u6784\u9020\u7528\u6237\u754c\u9762\uff0c\u4f46\u4e3a\u4e86\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4e00\u5b9a\u7684\u529f\u80fd\uff0c\u5c31\u9700\u8981\u7528\u4e8e\u8fde\u63a5\u5305\u542b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002XAML \u901a\u8fc7\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 Class \u7279\u6027\u7b80\u5316\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a < Window x : Class = \"WpfApp1.MainWindow\" \u5728 XAML \u540d\u79f0\u7a7a\u95f4\u7684 Class \u7279\u6027\u4e4b\u524d\u653e\u7f6e\u4e86\u540d\u79f0\u7a7a\u95f4\u524d\u7f00x\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u662f XAML \u8bed\u8a00\u4e2d\u66f4\u901a\u7528\u7684\u90e8\u5206\u3002\u5b9e\u9645\u4e0a\uff0cClass \u7279\u6027\u544a\u8bc9 XAML \u89e3\u6790\u5668\u7528\u6307\u5b9a\u7684\u540d\u79f0\u751f\u6210\u4e00\u4e2a\u65b0\u7c7b\u3002\u8be5\u7c7b\u7ee7\u627f\u81ea\u7531 XML \u5143\u7d20\u547d\u540d\u7684\u7c7b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a MianWindow \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u7ee7\u627f\u81ea Window \u57fa\u7c7b\u3002 MainWindow \u7c7b\u662f\u7f16\u8bd1\u65f6\u81ea\u52a8\u751f\u6210\u7684\u3002\u8fd9\u6b63\u662f\u4ee4\u4eba\u611f\u5174\u8da3\u4e4b\u5904\u3002\u4f60\u53ef\u4ee5\u63d0\u4f9b MainWindow \u7684\u90e8\u5206\u7c7b\uff0c\u8be5\u90e8\u5206\u7c7b\u4f1a\u4e0e\u81ea\u52a8\u751f\u6210\u7684\u90a3\u90e8\u5206\u5408\u5e76\u5728\u4e00\u8d77\u3002\u4f60\u63d0\u4f9b\u7684\u90e8\u5206\u7c7b\u6b63\u662f\u5305\u542b\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u4ee3\u7801\u7684\u7406\u60f3\u5bb9\u5668\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4f7f\u7528 C# \u8bed\u8a00\u7684\u90e8\u5206\u7c7b\uff08partial class\uff09\u7279\u5f81\u5b9e\u73b0\u7684\u3002\u90e8\u5206\u7c7b\u5141\u8bb8\u5728\u5f00\u53d1\u9636\u6bb5\u628a\u4e00\u4e2a\u7c7b\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u5e76\u5728\u7f16\u8bd1\u8fc7\u7684\u7a0b\u5e8f\u96c6\u4e2d\u628a\u8fd9\u4e9b\u72ec\u7acb\u7684\u90e8\u5206\u878d\u5408\u5230\u4e00\u8d77\u3002\u90e8\u5206\u7c7b\u53ef\u7528\u4e8e\u5404\u79cd\u4ee3\u7801\u7ba1\u7406\u60c5\u5f62\uff0c\u4f46\u5728\u6b64\u7c7b\u60c5\u51b5\u4e0b\u662f\u6700\u6709\u7528\u7684\uff0c\u5728\u6b64\u7f16\u5199\u7684\u4ee3\u7801\u9700\u8981\u548c\u8bbe\u8ba1\u5de5\u5177\u751f\u6210\u7684\u6587\u4ef6\u878d\u5408\u5230\u4e00\u8d77\u3002 Visual Studio \u4f1a\u81ea\u52a8\u5e2e\u52a9\u4f60\u521b\u5efa\u53ef\u4ee5\u653e\u7f6e\u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\u7684\u90e8\u5206\u7c7b\u3002Visual Studio \u5c06\u9996\u5148\u63d0\u4f9b\u57fa\u672c\u7684\u7c7b\u6846\u67b6\uff1a namespace WpfApp1 { /// <summary> /// MainWindow.xaml \u7684\u4ea4\u4e92\u903b\u8f91 /// </summary> public partial class MainWindow : Window { public MainWindow () { InitializeComponent (); } } } \u5728\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5b9a\u4e49\u7528\u6237\u754c\u9762\u7684 XAML\uff08\u5982MainWindow.xaml\uff09\u88ab\u8f6c\u6362\u4e3a CLR \u7c7b\u578b\u58f0\u660e\uff0c\u8fd9\u4e9b\u7c7b\u578b\u58f0\u660e\u4e0e\u4ee3\u7801\u9690\u85cf\u7c7b\u6587\u4ef6\uff08\u5982MainWindow.xaml.cs\uff09\u4e2d\u7684\u903b\u8f91\u4ee3\u7801\u878d\u5408\u5230\u4e00\u8d77\uff0c\u5f62\u6210\u5355\u4e00\u7684\u5355\u5143\u3002 InitializeComponent() \u65b9\u6cd5 \u73b0\u5728\uff0cMainWindow\u7c7b\u5c1a\u4e0d\u5177\u6709\u4efb\u4f55\u771f\u6b63\u7684\u529f\u80fd\u3002\u7136\u800c\uff0c\u5b83\u786e\u5b9e\u5305\u542b\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ec6\u8282\u2014\u2014\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5f53\u521b\u5efa\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u8be5\u6784\u9020\u51fd\u6570\u8c03\u7528 InitializeComponent() \u65b9\u6cd5\u3002 InitializeComponent() \u65b9\u6cd5\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002\u56e0\u6b64\uff0c\u6c38\u8fdc\u4e0d\u8981\u5220\u9664\u7a97\u53e3\u6784\u9020\u51fd\u6570 \u4e2d\u7684InitializeComponent() \u8c03\u7528\u3002\u901a\u7528\uff0c\u5982\u679c\u4e3a\u7a97\u53e3\u7c7b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u8981\u786e\u4fdd\u8c03\u7528 InitializeComponent() \u65b9\u6cd5\u3002 InitializeComponent() \u65b9\u6cd5\u5728\u6e90\u4ee3\u7801\u4e2d\u4e0d\u53ef\u89c1\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u65f6\u81ea\u52a8\u751f\u6210\u7684\u3002\u672c\u8d28\u4e0a\uff0c InitializeComponent() \u65b9\u6cd5\u7684\u6240\u6709\u5de5\u4f5c\u5c31\u662f\u8c03\u7528 System.Windows.Application \u7c7b\u7684 LoadComponent() \u65b9\u6cd5\u3002 LoadComponent() \u65b9\u6cd5\u4ece\u7a0b\u5e8f\u96c6\u4e2d\u63d0\u53d6 BAML\uff08\u7f16\u8bd1\u8fc7\u7684 XAML\uff09\uff0c\u5e76\u7528\u5b83\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u3002\u5f53\u89e3\u6790 BAML \u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u6bcf\u4e2a\u7a7a\u95f4\u5bf9\u8c61\uff0c\u8bbe\u7f6e\u5176\u5c5e\u6027\uff0c\u5e76\u5173\u8054\u6240\u6709\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002 \u547d\u540d\u5143\u7d20 \u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u8003\u8651\u7684\u7ec6\u8282\u3002\u5728\u4ee3\u7801\u9690\u85cf\u7c7b\u4e2d\uff0c\u7ecf\u5e38\u5e0c\u671b\u901a\u8fc7\u4ee3\u7801\u6765\u64cd\u4f5c\u63a7\u4ef6\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u9700\u8981\u8bfb\u53d6\u6216\u4fee\u6539\u5c5e\u6027\uff0c\u6216\u81ea\u7531\u5730\u5173\u8054\u4ee5\u53ca\u65ad\u5f00\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\u4e3a\u8fbe\u5230\u6b64\u76ee\u7684\uff0c\u63a7\u4ef6\u5fc5\u987b\u5305\u542b XAML Name \u7279\u6027\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cGrid\u63a7\u4ef6\u6ca1\u6709\u5305\u542bName\u7279\u6027\uff0c\u6240\u4ee5\u4e0d\u80fd\u5728\u4ee3\u7801\u9690\u85cf\u6587\u4ef6\u4e2d\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u3002 \u4e0b\u9762\u7684\u6807\u8bb0\u6f14\u793a\u4e86\u5982\u4f55\u4e3aGrid\u63a7\u4ef6\u5173\u8054\u540d\u79f0\uff1a < Grid x : Name = \"grid1\" > </ Grid > \u53ef\u5728 XAML \u6587\u6863\u4e2d\u624b\u52a8\u6267\u884c\u8fd9\u4e2a\u4fee\u6539\uff0c\u4e5f\u53ef\u5728 Visual Studio \u8bbe\u8ba1\u5668\u4e2d\u9009\u62e9\u8be5\u7f51\u683c\uff0c\u5e76\u901a\u8fc7 Properties \u7a97\u53e3\u8bbe\u7f6e\u5176 Name \u5c5e\u6027\u3002 \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0cName \u7279\u6027\u90fd\u4f1a\u544a\u8bc9 XAML \u89e3\u6790\u5668\u5c06\u8fd9\u6837\u4e00\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230\u4e3a MainWindow \u7c7b\u81ea\u52a8\u751f\u6210\u7684\u90e8\u5206\uff1a private System . Windows . Constrols . Grid grid1 ; \u73b0\u5728\u53ef\u4ee5\u5728MainWindow\u7c7b\u7684\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7grid1\u540d\u79f0\u4e0e\u7f51\u683c\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u4e86\uff1a MessageBox . Show ( string . Format ( \"The grid is {0}\u00d7{1} in size\" , grid1 . ActualWidth , grid1 . ActualHeight )); \u8be5\u6280\u672f\u6ca1\u6709\u4e3a\u8fd9\u4e2a\u7b80\u5355\u7684\u7f51\u683c\u793a\u4f8b\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u4f46\u5f53\u9700\u8981\u4ece\u8f93\u5165\u63a7\u4ef6\uff08\u5982\u6587\u672c\u6846\u548c\u5217\u8868\u6846\uff09\u4e2d\u8bfb\u53d6\u6570\u503c\u65f6\uff0c\u5b83\u5c06\u53d8\u5f97\u66f4\u91cd\u8981\u3002 \u4e0a\u9762\u663e\u793a\u7684 Name \u5c5e\u6027\u65f6 XAML \u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u5e2e\u52a9\u96c6\u6210\u4ee3\u7801\u9690\u85cf\u7c7b\u3002\u8ba9\u4eba\u611f\u5230\u6709\u4e9b\u56f0\u60d1\u7684\u662f\uff0c\u8bb8\u591a\u7c7b\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684 Name \u5c5e\u6027\uff08 FrameworkElement \u57fa\u7c7b\u5c31\u662f\u4e00\u4f8b\uff0c\u6240\u6709 WPF \u5143\u7d20\u90fd\u7ee7\u627f\u81ea\u8be5\u7c7b\uff09\u3002XAML \u89e3\u6790\u5668\u4f7f\u7528\u4e00\u79cd\u66f4\u806a\u660e\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\u53ef\u8bbe\u7f6e XAML Name \u5c5e\u6027\uff08\u4f7f\u7528 x: \u524d\u7f00\uff09\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u5c5e\u4e8e\u5b9e\u9645\u5143\u7d20\u7684 Name \u5c5e\u6027\uff08\u901a\u8fc7\u5220\u9664\u524d\u7f00\uff09\u3002\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7ed3\u679c\u90fd\u662f\u76f8\u540c\u7684\u2014\u2014\u6307\u5b9a\u7684\u540d\u79f0\u5728\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u7528\u4e8e\u8bbe\u7f6e Name \u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u4e0b\u9762\u7684\u6807\u8bb0\u548c\u524d\u9762\u7684\u6807\u8bb0\u662f\u7b49\u4ef7\u7684\uff1a < Grid Name = \"grid1\" > </ Grid > \u53ea\u6709\u5f53\u5305\u542b Name \u5c5e\u6027\u7684\u7c7b\u4f7f\u7528 RuntimeNameProperty \u7279\u6027\u4fee\u9970\u4e4b\u540e\uff0c\u8fd9\u624d\u662f\u53ef\u884c\u7684\u3002RuntimeNameProperty \u7279\u6027\u6307\u793a\u54ea\u4e2a\u5c5e\u6027\u7684\u503c\u5c06\u4f5c\u4e3a\u8be5\u7c7b\u578b\u7684\u5b9e\u4f8b\u7684\u540d\u79f0\uff08\u663e\u7136\uff0c\u901a\u5e38\u662f\u4f7f\u7528 Name \u5c5e\u6027\uff09\u3002 FrameworkElement \u7c7b\u4f7f\u7528 RuntimeNameProperty \u7279\u6027\u8fdb\u884c\u4e86\u4fee\u9970\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u6807\u8bb0\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002 \u5728\u4f20\u7edf\u7684 Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6bcf\u4e2a\u63a7\u4ef6\u90fd\u6709\u540d\u79f0\u3002\u800c\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u8fd9\u4e00\u8981\u6c42\u3002\u5f53\u4e0d\u9700\u8981\u5143\u7d20\u540d\u79f0\u901a\u5e38\u4f1a\u7701\u7565\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6807\u8bb0\u66f4\u52a0\u7b80\u6d01\u3002","title":"14. XAML \u57fa\u7840"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/14.%20XAML%20%E5%9F%BA%E7%A1%80/#xaml","text":"\u663e\u7136\uff0c\u53ea\u63d0\u4f9b\u7c7b\u540d\u662f\u4e0d\u591f\u7684\u3002XAML \u89e3\u6790\u5668\u8fd8\u9700\u8981\u77e5\u9053\u7c7b\u4f4d\u4e8e\u54ea\u4e2a .NET \u540d\u79f0\u7a7a\u95f4\u3002\u4f8b\u5982\uff0c\u5728\u8bb8\u591a\u540d\u79f0\u7a7a\u95f4\u4e2d\u53ef\u80fd\u90fd\u6709 Window \u7c7b\u2014\u2014 Window \u7c7b\u53ef\u80fd\u662f\u6307 System.Windows.Window \u7c7b\uff0c\u4e5f\u53ef\u80fd\u662f\u6307\u4f4d\u4e8e\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u4e2d\u7684 Window \u7c7b\uff0c\u6216\u4f60\u81ea\u5df1\u518d\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u7684 Window \u7c7b\u7b49\u3002\u4e3a\u4e86\u5f04\u6e05\u5b9e\u9645\u4e0a\u5e0c\u671b\u4f7f\u7528\u54ea\u4e2a\u7c7b\uff0cXAML\u89e3\u6790\u5668\u4f1a\u68c0\u67e5\u5e94\u7528\u4e8e\u5143\u7d20\u7684 XML \u540d\u79f0\u7a7a\u95f4\u3002 xmlns = \"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns : x = \"http://schemas.microsoft.com/winfx/2006/xaml\" \u8fd9\u662f\u4e0a\u9762\u7684\u793a\u4f8b\u6587\u6863\u4e2d\u5b9a\u4e49\u7684\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 \u4f7f\u7528\u7279\u6027\u58f0\u660e XML \u540d\u79f0\u7a7a\u95f4\u3002\u8fd9\u4e9b\u7279\u6027\u80fd\u88ab\u653e\u5165\u4efb\u4f55\u5143\u7d20\u7684\u5f00\u59cb\u6807\u7b7e\u4e2d\u3002\u4f46\u7ea6\u5b9a\u8981\u6c42\uff0c\u518d\u6587\u6863\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u5e94\u5728\u7b2c\u4e00\u4e2a\u6807\u7b7e\u4e2d\u58f0\u660e\uff0c\u6b63\u5982\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u4e00\u65e6\u58f0\u660e\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u5728\u6587\u6863\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u8be5\u540d\u79f0\u7a7a\u95f4\u3002 xmlns\u7279\u6027\u662f XML \u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u7279\u6027\uff0c\u5b83\u4e13\u95e8\u7528\u6765\u58f0\u660e\u540d\u79f0\u7a7a\u95f4\u3002\u8fd9\u6bb5\u6807\u8bb0\u58f0\u660e\u4e86\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\uff0c\u5728\u521b\u5efa\u7684\u6240\u6709 WPF XAML \u6587\u6863\u4e2d\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e24\u4e2a\u540d\u79f0\u7a7a\u95f4\uff1a http://schemas.microsoft.com/winfx/2006/xaml/presentation \u662f WPF \u6838\u5fc3\u540d\u79f0\u7a7a\u95f4\u3002\u5b83\u5305\u542b\u4e86\u6240\u6709 WPF \u7c7b\uff0c\u5305\u62ec\u7528\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u7684\u63a7\u4ef6\u3002\u5728\u8be5\u4f8b\u4e2d\uff0c\u8be5\u540d\u79f0\u7a7a\u95f4\u7684\u58f0\u660e\u6ca1\u6709\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\u524d\u7f00\uff0c\u6240\u4ee5\u5b83\u6210\u4e3a\u6574\u4e2a\u6587\u6863\u7684\u9ed8\u8ba4\u540d\u79f0\u7a7a\u95f4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9664\u975e\u53e6\u884c\u6307\u660e\uff0c\u6bcf\u4e2a\u5143\u7d20\u81ea\u52a8\u4f4d\u4e8e\u8fd9\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 http://schemas.microsoft.com/winfx/2006/xaml \u662f XAML \u540d\u79f0\u7a7a\u95f4\u3002\u5b83\u5305\u542b\u5404\u79cd XAML \u4f7f\u7528\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u53ef\u5f71\u54cd\u6587\u6863\u7684\u89e3\u91ca\u65b9\u5f0f\u3002\u8be5\u540d\u79f0\u7a7a\u95f4\u88ab\u6620\u5c04\u4e3a\u524d\u7f00 x \u3002\u8fd9\u610f\u5473\u7740\u53ef\u901a\u8fc7\u5728\u5143\u7d20\u540d\u79f0\u4e4b\u524d\u653e\u7f6e\u540d\u79f0\u7a7a\u95f4\u524d\u7f00 x \u6765\u4f7f\u7528\u8be5\u540d\u79f0\u7a7a\u95f4\uff08\u4f8b\u5982 <x:ElementName> \uff09\u3002 \u6b63\u5982\u5728\u524d\u9762\u770b\u5230\u7684\uff0cXML \u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u548c\u4efb\u4f55\u7279\u5b9a\u7684 .NET \u540d\u79f0\u7a7a\u95f4\u90fd\u4e0d\u5339\u914d\u3002XAML\u7684\u521b\u5efa\u8005\u9009\u62e9\u8fd9\u79cd\u8bbe\u8ba1\u7684\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u6309\u7167\u7ea6\u5b9a\uff0cXML \u540d\u79f0\u7a7a\u95f4\u901a\u5e38\u662f URI\uff08\u5982\u4e0a\u9762\u6240\u793a\uff09\u3002\u8fd9\u4e9b URI \u770b\u8d77\u6765\u50cf\u662f\u5728\u6307\u660e Web \u4e0a\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002\u901a\u8fc7\u4f7f\u7528 URI \u683c\u5f0f\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u4e0d\u540c\u7ec4\u7ec7\u5c31\u57fa\u672c\u4e0d\u4f1a\u65e0\u610f\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u7a7a\u95f4\u521b\u5efa\u4e0d\u540c\u7684\u57fa\u4e8e XML \u7684\u8bed\u8a00\u3002\u56e0\u4e3a schemas.com \u57df\u5f52 Microsoft \u6240\u6709\uff0c\u53ea\u6709 Microsoft \u4f1a\u5728 XML \u540d\u79f0\u7a7a\u95f4\u7684\u540d\u79f0\u4e2d\u4f7f\u7528\u5b83\u3002 \u53e6\u4e00\u4e2a\u539f\u56e0\u662f XAML \u4e2d\u4f7f\u7528\u7684 XML \u540d\u79f0\u7a7a\u95f4\u548c .NET \u540d\u79f0\u7a7a\u95f4\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u5982\u679c\u4e00\u4e00\u5bf9\u5e94\u7684\u8bdd\uff0c\u4f1a\u663e\u8457\u589e\u52a0 XAML \u6587\u6863\u7684\u590d\u6742\u7a0b\u5ea6\u3002\u6b64\u5904\u7684\u95ee\u9898\u5728\u4e8e\uff0cWPF \u5305\u542b\u4e86\u5341\u51e0\u79cd\u540d\u79f0\u7a7a\u95f4\uff08\u6240\u6709\u8fd9\u4e9b\u540d\u79f0\u7a7a\u95f4\u90fd\u4ee5 System.Windows \u5f00\u5934\uff09\u3002\u5982\u679c\u6bcf\u4e2a .NET \u540d\u79f0\u7a7a\u95f4\u90fd\u6709\u4e0d\u540c\u7684 XML \u540d\u79f0\u7a7a\u95f4\uff0c\u90a3\u5c31\u9700\u8981\u4e3a\u4f7f\u7528\u7684\u6bcf\u4e2a\u63a7\u4ef6\u6307\u5b9a\u786e\u5207\u7684 XML \u540d\u79f0\u7a7a\u95f4\uff0c\u8fd9\u5f88\u5feb\u5c31\u4f1a\u4f7f XAML \u6587\u6863\u53d8\u5f97\u6df7\u4e71\u4e0d\u582a\u3002\u6240\u4ee5\uff0cWPF \u521b\u5efa\u4eba\u5458\u9009\u62e9\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5c06\u6240\u6709\u8fd9\u4e9b .NET \u540d\u79f0\u7a7a\u95f4\u7ec4\u5408\u5230\u5355\u4e2a XML \u540d\u79f0\u7a7a\u95f4\u4e2d\u3002\u56e0\u4e3a\u5728\u4e0d\u540c\u7684 .NET \u540d\u79f0\u7a7a\u95f4\u4e2d\u90fd\u6709\u4e00\u90e8\u5206 WPF \u7c7b\uff0c\u5e76\u4e14\u6240\u6709\u8fd9\u4e9b\u7c7b\u7684\u540d\u79f0\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u53ef\u884c\u7684\u3002 \u540d\u79f0\u7a7a\u95f4\u4fe1\u606f\u4f7f\u5f97 XAML \u89e3\u6790\u5668\u53ef\u627e\u5230\u6b63\u786e\u7684\u7c7b\u3002\u4f8b\u5982\uff0c\u5f53\u67e5\u627e Window \u548c Grid \u5143\u7d20\u65f6\uff0c\u9996\u5148\u4f1a\u67e5\u627e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u6240\u5728\u7684 WPF \u540d\u79f0\u7a7a\u95f4\uff0c\u7136\u540e\u67e5\u627e\u76f8\u5e94\u7684 .NET \u540d\u79f0\u7a7a\u95f4\uff0c\u76f4\u81f3\u627e\u5230 System.Windows.Winodw \u548c System.Windows.Controls.Grid \u7c7b\u3002","title":"XAML \u540d\u79f0\u7a7a\u95f4"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/14.%20XAML%20%E5%9F%BA%E7%A1%80/#_1","text":"\u53ef\u901a\u8fc7 XAML \u6784\u9020\u7528\u6237\u754c\u9762\uff0c\u4f46\u4e3a\u4e86\u4f7f\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4e00\u5b9a\u7684\u529f\u80fd\uff0c\u5c31\u9700\u8981\u7528\u4e8e\u8fde\u63a5\u5305\u542b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002XAML \u901a\u8fc7\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 Class \u7279\u6027\u7b80\u5316\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a < Window x : Class = \"WpfApp1.MainWindow\" \u5728 XAML \u540d\u79f0\u7a7a\u95f4\u7684 Class \u7279\u6027\u4e4b\u524d\u653e\u7f6e\u4e86\u540d\u79f0\u7a7a\u95f4\u524d\u7f00x\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u662f XAML \u8bed\u8a00\u4e2d\u66f4\u901a\u7528\u7684\u90e8\u5206\u3002\u5b9e\u9645\u4e0a\uff0cClass \u7279\u6027\u544a\u8bc9 XAML \u89e3\u6790\u5668\u7528\u6307\u5b9a\u7684\u540d\u79f0\u751f\u6210\u4e00\u4e2a\u65b0\u7c7b\u3002\u8be5\u7c7b\u7ee7\u627f\u81ea\u7531 XML \u5143\u7d20\u547d\u540d\u7684\u7c7b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a MianWindow \u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u7ee7\u627f\u81ea Window \u57fa\u7c7b\u3002 MainWindow \u7c7b\u662f\u7f16\u8bd1\u65f6\u81ea\u52a8\u751f\u6210\u7684\u3002\u8fd9\u6b63\u662f\u4ee4\u4eba\u611f\u5174\u8da3\u4e4b\u5904\u3002\u4f60\u53ef\u4ee5\u63d0\u4f9b MainWindow \u7684\u90e8\u5206\u7c7b\uff0c\u8be5\u90e8\u5206\u7c7b\u4f1a\u4e0e\u81ea\u52a8\u751f\u6210\u7684\u90a3\u90e8\u5206\u5408\u5e76\u5728\u4e00\u8d77\u3002\u4f60\u63d0\u4f9b\u7684\u90e8\u5206\u7c7b\u6b63\u662f\u5305\u542b\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u4ee3\u7801\u7684\u7406\u60f3\u5bb9\u5668\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4f7f\u7528 C# \u8bed\u8a00\u7684\u90e8\u5206\u7c7b\uff08partial class\uff09\u7279\u5f81\u5b9e\u73b0\u7684\u3002\u90e8\u5206\u7c7b\u5141\u8bb8\u5728\u5f00\u53d1\u9636\u6bb5\u628a\u4e00\u4e2a\u7c7b\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u5e76\u5728\u7f16\u8bd1\u8fc7\u7684\u7a0b\u5e8f\u96c6\u4e2d\u628a\u8fd9\u4e9b\u72ec\u7acb\u7684\u90e8\u5206\u878d\u5408\u5230\u4e00\u8d77\u3002\u90e8\u5206\u7c7b\u53ef\u7528\u4e8e\u5404\u79cd\u4ee3\u7801\u7ba1\u7406\u60c5\u5f62\uff0c\u4f46\u5728\u6b64\u7c7b\u60c5\u51b5\u4e0b\u662f\u6700\u6709\u7528\u7684\uff0c\u5728\u6b64\u7f16\u5199\u7684\u4ee3\u7801\u9700\u8981\u548c\u8bbe\u8ba1\u5de5\u5177\u751f\u6210\u7684\u6587\u4ef6\u878d\u5408\u5230\u4e00\u8d77\u3002 Visual Studio \u4f1a\u81ea\u52a8\u5e2e\u52a9\u4f60\u521b\u5efa\u53ef\u4ee5\u653e\u7f6e\u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\u7684\u90e8\u5206\u7c7b\u3002Visual Studio \u5c06\u9996\u5148\u63d0\u4f9b\u57fa\u672c\u7684\u7c7b\u6846\u67b6\uff1a namespace WpfApp1 { /// <summary> /// MainWindow.xaml \u7684\u4ea4\u4e92\u903b\u8f91 /// </summary> public partial class MainWindow : Window { public MainWindow () { InitializeComponent (); } } } \u5728\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5b9a\u4e49\u7528\u6237\u754c\u9762\u7684 XAML\uff08\u5982MainWindow.xaml\uff09\u88ab\u8f6c\u6362\u4e3a CLR \u7c7b\u578b\u58f0\u660e\uff0c\u8fd9\u4e9b\u7c7b\u578b\u58f0\u660e\u4e0e\u4ee3\u7801\u9690\u85cf\u7c7b\u6587\u4ef6\uff08\u5982MainWindow.xaml.cs\uff09\u4e2d\u7684\u903b\u8f91\u4ee3\u7801\u878d\u5408\u5230\u4e00\u8d77\uff0c\u5f62\u6210\u5355\u4e00\u7684\u5355\u5143\u3002","title":"\u4ee3\u7801\u9690\u85cf\u7c7b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/14.%20XAML%20%E5%9F%BA%E7%A1%80/#initializecomponent","text":"\u73b0\u5728\uff0cMainWindow\u7c7b\u5c1a\u4e0d\u5177\u6709\u4efb\u4f55\u771f\u6b63\u7684\u529f\u80fd\u3002\u7136\u800c\uff0c\u5b83\u786e\u5b9e\u5305\u542b\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ec6\u8282\u2014\u2014\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5f53\u521b\u5efa\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u8be5\u6784\u9020\u51fd\u6570\u8c03\u7528 InitializeComponent() \u65b9\u6cd5\u3002 InitializeComponent() \u65b9\u6cd5\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002\u56e0\u6b64\uff0c\u6c38\u8fdc\u4e0d\u8981\u5220\u9664\u7a97\u53e3\u6784\u9020\u51fd\u6570 \u4e2d\u7684InitializeComponent() \u8c03\u7528\u3002\u901a\u7528\uff0c\u5982\u679c\u4e3a\u7a97\u53e3\u7c7b\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u8981\u786e\u4fdd\u8c03\u7528 InitializeComponent() \u65b9\u6cd5\u3002 InitializeComponent() \u65b9\u6cd5\u5728\u6e90\u4ee3\u7801\u4e2d\u4e0d\u53ef\u89c1\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u7f16\u8bd1\u5e94\u7528\u7a0b\u5e8f\u65f6\u81ea\u52a8\u751f\u6210\u7684\u3002\u672c\u8d28\u4e0a\uff0c InitializeComponent() \u65b9\u6cd5\u7684\u6240\u6709\u5de5\u4f5c\u5c31\u662f\u8c03\u7528 System.Windows.Application \u7c7b\u7684 LoadComponent() \u65b9\u6cd5\u3002 LoadComponent() \u65b9\u6cd5\u4ece\u7a0b\u5e8f\u96c6\u4e2d\u63d0\u53d6 BAML\uff08\u7f16\u8bd1\u8fc7\u7684 XAML\uff09\uff0c\u5e76\u7528\u5b83\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u3002\u5f53\u89e3\u6790 BAML \u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u6bcf\u4e2a\u7a7a\u95f4\u5bf9\u8c61\uff0c\u8bbe\u7f6e\u5176\u5c5e\u6027\uff0c\u5e76\u5173\u8054\u6240\u6709\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002","title":"InitializeComponent()\u65b9\u6cd5"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/14.%20XAML%20%E5%9F%BA%E7%A1%80/#_2","text":"\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u8003\u8651\u7684\u7ec6\u8282\u3002\u5728\u4ee3\u7801\u9690\u85cf\u7c7b\u4e2d\uff0c\u7ecf\u5e38\u5e0c\u671b\u901a\u8fc7\u4ee3\u7801\u6765\u64cd\u4f5c\u63a7\u4ef6\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u9700\u8981\u8bfb\u53d6\u6216\u4fee\u6539\u5c5e\u6027\uff0c\u6216\u81ea\u7531\u5730\u5173\u8054\u4ee5\u53ca\u65ad\u5f00\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\u4e3a\u8fbe\u5230\u6b64\u76ee\u7684\uff0c\u63a7\u4ef6\u5fc5\u987b\u5305\u542b XAML Name \u7279\u6027\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cGrid\u63a7\u4ef6\u6ca1\u6709\u5305\u542bName\u7279\u6027\uff0c\u6240\u4ee5\u4e0d\u80fd\u5728\u4ee3\u7801\u9690\u85cf\u6587\u4ef6\u4e2d\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u3002 \u4e0b\u9762\u7684\u6807\u8bb0\u6f14\u793a\u4e86\u5982\u4f55\u4e3aGrid\u63a7\u4ef6\u5173\u8054\u540d\u79f0\uff1a < Grid x : Name = \"grid1\" > </ Grid > \u53ef\u5728 XAML \u6587\u6863\u4e2d\u624b\u52a8\u6267\u884c\u8fd9\u4e2a\u4fee\u6539\uff0c\u4e5f\u53ef\u5728 Visual Studio \u8bbe\u8ba1\u5668\u4e2d\u9009\u62e9\u8be5\u7f51\u683c\uff0c\u5e76\u901a\u8fc7 Properties \u7a97\u53e3\u8bbe\u7f6e\u5176 Name \u5c5e\u6027\u3002 \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0cName \u7279\u6027\u90fd\u4f1a\u544a\u8bc9 XAML \u89e3\u6790\u5668\u5c06\u8fd9\u6837\u4e00\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230\u4e3a MainWindow \u7c7b\u81ea\u52a8\u751f\u6210\u7684\u90e8\u5206\uff1a private System . Windows . Constrols . Grid grid1 ; \u73b0\u5728\u53ef\u4ee5\u5728MainWindow\u7c7b\u7684\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7grid1\u540d\u79f0\u4e0e\u7f51\u683c\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u4e86\uff1a MessageBox . Show ( string . Format ( \"The grid is {0}\u00d7{1} in size\" , grid1 . ActualWidth , grid1 . ActualHeight )); \u8be5\u6280\u672f\u6ca1\u6709\u4e3a\u8fd9\u4e2a\u7b80\u5355\u7684\u7f51\u683c\u793a\u4f8b\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u4f46\u5f53\u9700\u8981\u4ece\u8f93\u5165\u63a7\u4ef6\uff08\u5982\u6587\u672c\u6846\u548c\u5217\u8868\u6846\uff09\u4e2d\u8bfb\u53d6\u6570\u503c\u65f6\uff0c\u5b83\u5c06\u53d8\u5f97\u66f4\u91cd\u8981\u3002 \u4e0a\u9762\u663e\u793a\u7684 Name \u5c5e\u6027\u65f6 XAML \u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u5e2e\u52a9\u96c6\u6210\u4ee3\u7801\u9690\u85cf\u7c7b\u3002\u8ba9\u4eba\u611f\u5230\u6709\u4e9b\u56f0\u60d1\u7684\u662f\uff0c\u8bb8\u591a\u7c7b\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684 Name \u5c5e\u6027\uff08 FrameworkElement \u57fa\u7c7b\u5c31\u662f\u4e00\u4f8b\uff0c\u6240\u6709 WPF \u5143\u7d20\u90fd\u7ee7\u627f\u81ea\u8be5\u7c7b\uff09\u3002XAML \u89e3\u6790\u5668\u4f7f\u7528\u4e00\u79cd\u66f4\u806a\u660e\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\u53ef\u8bbe\u7f6e XAML Name \u5c5e\u6027\uff08\u4f7f\u7528 x: \u524d\u7f00\uff09\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u5c5e\u4e8e\u5b9e\u9645\u5143\u7d20\u7684 Name \u5c5e\u6027\uff08\u901a\u8fc7\u5220\u9664\u524d\u7f00\uff09\u3002\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7ed3\u679c\u90fd\u662f\u76f8\u540c\u7684\u2014\u2014\u6307\u5b9a\u7684\u540d\u79f0\u5728\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u7528\u4e8e\u8bbe\u7f6e Name \u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u4e0b\u9762\u7684\u6807\u8bb0\u548c\u524d\u9762\u7684\u6807\u8bb0\u662f\u7b49\u4ef7\u7684\uff1a < Grid Name = \"grid1\" > </ Grid > \u53ea\u6709\u5f53\u5305\u542b Name \u5c5e\u6027\u7684\u7c7b\u4f7f\u7528 RuntimeNameProperty \u7279\u6027\u4fee\u9970\u4e4b\u540e\uff0c\u8fd9\u624d\u662f\u53ef\u884c\u7684\u3002RuntimeNameProperty \u7279\u6027\u6307\u793a\u54ea\u4e2a\u5c5e\u6027\u7684\u503c\u5c06\u4f5c\u4e3a\u8be5\u7c7b\u578b\u7684\u5b9e\u4f8b\u7684\u540d\u79f0\uff08\u663e\u7136\uff0c\u901a\u5e38\u662f\u4f7f\u7528 Name \u5c5e\u6027\uff09\u3002 FrameworkElement \u7c7b\u4f7f\u7528 RuntimeNameProperty \u7279\u6027\u8fdb\u884c\u4e86\u4fee\u9970\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u6807\u8bb0\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002 \u5728\u4f20\u7edf\u7684 Windows \u7a97\u4f53\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6bcf\u4e2a\u63a7\u4ef6\u90fd\u6709\u540d\u79f0\u3002\u800c\u5728 WPF \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u8fd9\u4e00\u8981\u6c42\u3002\u5f53\u4e0d\u9700\u8981\u5143\u7d20\u540d\u79f0\u901a\u5e38\u4f1a\u7701\u7565\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6807\u8bb0\u66f4\u52a0\u7b80\u6d01\u3002","title":"\u547d\u540d\u5143\u7d20"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/15.%20XAML%20%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BA%8B%E4%BB%B6/","text":"![[XAML\u5c5e\u6027\u548c\u4e8b\u4ef6.png]] \u4e0a\u56fe\u663e\u793a\u7684\u7a97\u53e3\u5305\u542b 4 \u4e2a\u63a7\u4ef6\uff1a\u4e00\u4e2aGrid\u63a7\u4ef6\uff08\u5728 WPF \u4e2d\u6700\u5e38\u89c1\u7684\u7528\u4e8e\u5b89\u6392\u5e03\u5c40\u7684\u5de5\u5177\uff09\u3001\u4e24\u4e2aTextBox\u63a7\u4ef6\u548c\u4e00\u4e2aButton\u63a7\u4ef6\u3002\u4e0b\u9762\u4f7f\u8be5\u754c\u9762\u7684 XAML \u6587\u6863\uff1a < Window x : Class = \"WpfApp1.MainWindow\" xmlns = \"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns : x = \"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns : d = \"http://schemas.microsoft.com/expression/blend/2008\" xmlns : mc = \"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns : local = \"clr-namespace:WpfApp1\" mc : Ignorable = \"d\" Title = \"MainWindow\" Height = \"450\" Width = \"680\" > < Grid x : Name = \"grid1\" > < TextBox x : Name = \"txt_Question\" HorizontalAlignment = \"Left\" Height = \"178\" Margin = \"10,10,0,0\" TextWrapping = \"Wrap\" Text = \"Will I master WPF?\" VerticalAlignment = \"Top\" Width = \"652\" FontSize = \"20\" /> < TextBox x : Name = \"txt_Answer\" HorizontalAlignment = \"Left\" Height = \"163\" Margin = \"10,246,0,0\" TextWrapping = \"Wrap\" Text = \"Better Not Tell You Now\" VerticalAlignment = \"Top\" Width = \"652\" FontSize = \"20\" /> < Button x : Name = \"cmdAnswer\" Content = \"Ask\" HorizontalAlignment = \"Left\" Margin = \"10,208,0,0\" VerticalAlignment = \"Top\" Width = \"75\" /> </ Grid > </ Window > \u7b80\u5355\u5c5e\u6027\u4e0e\u7c7b\u578b\u8f6c\u6362\u5668 \u5143\u7d20\u7684\u7279\u6027\u8bbe\u7f6e\u76f8\u5e94\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\u7684\u6587\u672c\u6846\u8bbe\u7f6e\u4e86\u5bf9\u9f50\u65b9\u5f0f\u548c\u5b57\u4f53\u5927\u5c0f\u7b49\uff1a < TextBox x : Name = \"txt_Question\" HorizontalAlignment = \"Left\" Height = \"178\" Margin = \"10,10,0,0\" TextWrapping = \"Wrap\" Text = \"Will I master WPF?\" VerticalAlignment = \"Top\" Width = \"652\" FontSize = \"20\" /> \u4e3a\u4f7f\u4e0a\u9762\u7684\u8bbe\u7f6e\u8d77\u4f5c\u7528\uff0c System.Windows.Controls.TextBox \u7c7b\u5fc5\u987b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\uff1a HorizontalAlignment \u3001 VerticalAlignment \u3001 FontSize \u3002 \u4e3a\u4f7f\u8fd9\u4e2a\u7cfb\u7edf\u80fd\u591f\u5de5\u4f5c\uff0cXAML \u89e3\u6790\u5668\u9700\u8981\u6267\u884c\u6bd4\u8868\u9762\u4e0a\u770b\u8d77\u6765\u66f4\u591a\u7684\u5de5\u4f5c\u3002XML \u7279\u6027\u4e2d\u7684\u503c\u603b\u662f\u7eaf\u6587\u672c\u5b57\u7b26\u4e32\u3002\u4f46\u5bf9\u8c61\u7684\u5c5e\u6027\u53ef\u4ee5\u662f\u4efb\u4f55 .NET \u7c7b\u578b\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u4e2a\u679a\u4e3e\u7c7b\u578b\u548c\u4e00\u4e2a\u6574\u578b\u3002 \u4e3a\u4e86\u5173\u8054\u5b57\u7b26\u4e32\u503c\u548c\u975e\u5b57\u7b26\u4e32\u5c5e\u6027\uff0cXAML \u89e3\u6790\u5668\u9700\u8981\u6267\u884c\u8f6c\u6362\u3002\u7531\u7c7b\u578b\u8f6c\u6362\u5668\u6267\u884c\u8f6c\u6362\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u662f\u4ece .NET 1.0 \u8d77\u5c31\u5df2\u7ecf\u5f15\u5165\u7684 .NET \u57fa\u7840\u7ed3\u6784\u7684\u4e00\u4e2a\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002 \u5b9e\u9645\u4e0a\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u2014\u2014\u63d0\u4f9b\u4e86\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u5c06\u7279\u5b9a\u7684 .NET \u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6 .NET \u7c7b\u578b\uff0c\u6216\u5c06\u5176\u4ed6\u4efb\u4f55 .NET \u7c7b\u578b\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002XAML \u89e3\u6790\u5668\u901a\u8fc7\u4e00\u4e0b\u4e24\u4e2a\u6b65\u9aa4\u6765\u67e5\u627e\u7c7b\u578b\u8f6c\u6362\u5668\uff1a \u68c0\u67e5\u5c5e\u6027\u58f0\u660e\uff0c\u67e5\u627e TypeConverter \u7279\u6027\uff08\u5982\u679c\u63d0\u4f9b\u4e86 TypeConverter \u7279\u6027\uff0c\u8be5\u7279\u6027\u5c06\u6307\u5b9a\u54ea\u4e2a\u7c7b\u53ef\u6267\u884c\u8f6c\u6362\uff09\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982 Foreground \u8fd9\u6837\u7684\u5c5e\u6027\u65f6\uff0c.NET \u5c06\u68c0\u67e5 Foreground \u5c5e\u6027\u7684\u58f0\u660e\u3002 \u5982\u679c\u5728\u5c5e\u6027\u58f0\u660e\u4e2d\u6ca1\u6709 TypeConverter \u7279\u6027\uff0cXAML \u89e3\u6790\u5668\u5c06\u68c0\u67e5\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u7684\u7c7b\u58f0\u660e\u3002\u4f8b\u5982\uff0cForegound \u5c5e\u6027\u4f7f\u7528\u4e00\u4e2a Brush \u5bf9\u8c61\u3002\u7531\u4e8e Brush \u7c7b\u4f7f\u7528 TypeConverter(typeof(BrushConverter)) \u7279\u6027\u58f0\u660e\u8fdb\u884c\u4e86\u4fee\u9970\uff0c\u56e0\u6b64 Brush \u7c7b\u53ca\u5176\u5b50\u7c7b\u4f7f\u7528 BrushConverter \u7c7b\u578b\u8f6c\u6362\u5668\u3002 \u5982\u679c\u5c5e\u6027\u58f0\u660e\u6216\u7c7b\u58f0\u660e\u90fd\u6ca1\u6709\u4e0e\u5176\u5173\u8054\u7684\u7c7b\u578b\u8f6c\u6362\u5668\uff0cXAML \u89e3\u6790\u5668\u4f1a\u751f\u6210\u9519\u8bef\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u7b80\u5355\u7075\u6d3b\u3002\u5982\u679c\u5728\u7c7b\u5c42\u6b21\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u5668\uff0c\u8be5\u8f6c\u6362\u5668\u5c06\u5e94\u7528\u5230\u6240\u6709\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u7684\u5c5e\u6027\u4e0a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5e0c\u671b\u4e3a\u67d0\u4e2a\u7279\u5b9a\u5c5e\u6027\u5fae\u8c03\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5c5e\u6027\u58f0\u660e\u4e2d\u6539\u7528 TypeConverter \u7279\u6027\u3002 \u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u7c7b\u578b\u8f6c\u6362\u5668\u4ece\u6280\u672f\u89d2\u5ea6\u770b\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u4f46\u8bed\u6cd5\u6709\u4e9b\u590d\u6742\u3002\u76f4\u63a5\u8bbe\u7f6e\u5c5e\u6027\u51e0\u4e4e\u603b\u662f\u66f4\u597d\u4e00\u4e9b\u2014\u2014\u4e0d\u4ec5\u901f\u5ea6\u66f4\u5feb\uff0c\u800c\u4e14\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u56e0\u4e3a\u952e\u5165\u975e\u6cd5\u5b57\u7b26\u4e32\u800c\u4ea7\u751f\u7684\u9519\u8bef\uff0c\u8fd9\u4e9b\u9519\u8bef\u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u88ab\u53d1\u73b0\uff08\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5f71\u54cd XAML\uff0c\u56e0\u4e3a XAML \u662f\u5728\u7f16\u8bd1\u671f\u95f4\u8fdb\u884c\u89e3\u6790\u548c\u9a8c\u8bc1\u7684\uff09\u3002 \u4e0e\u6240\u6709\u57fa\u4e8e XML \u7684\u8bed\u8a00\u4e00\u6837\uff0cXAML \u4e5f\u533a\u5206\u5927\u5c0f\u5199\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u7528 <button> \u66ff\u4ee3 <Button> \u3002\u7136\u800c\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u901a\u5e38\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u8fd9\u610f\u5473\u7740 Foreground=\u201dWhite\u201d \u548c Foreground=\u201dwhite\u201d \u5177\u6709\u76f8\u540c\u7684\u6548\u679c\u3002 \u590d\u6742\u5c5e\u6027 \u867d\u7136\u7c7b\u578b\u8f6c\u6362\u5668\u4fbf\u4e8e\u4f7f\u7528\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u5b9e\u9645\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u5c5e\u6027\u662f\u5b8c\u5907\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5177\u6709\u81ea\u5df1\u7684\u4e00\u7ec4\u5c5e\u6027\u3002\u5c3d\u7ba1\u521b\u5efa\u4f9b\u7c7b\u578b\u8f6c\u6362\u5668\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u65f6\u8bed\u6cd5\u53ef\u80fd\u5341\u5206\u590d\u6742\uff0c\u5e76\u4e14\u5bb9\u6613\u51fa\u9519\u3002 \u5e78\u8fd0\u7684\u662f\uff0cXAML \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u9009\u62e9\uff1a\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff08property-element syntax\uff09\u3002\u4f7f\u7528\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff0c\u53ef\u6dfb\u52a0\u540d\u79f0\u5f62\u5f0f\u4e3a Parent.PropertyName \u7684\u5b50\u5143\u7d20\u3002\u4f8b\u5982\uff0c Grid \u63a7\u4ef6\u7531\u4e00\u4e2a Background \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u5141\u8bb8\u63d0\u4f9b\u7528\u4e8e\u7ed8\u5236\u63a7\u4ef6\u80cc\u666f\u533a\u57df\u7684\u753b\u5237\u3002\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u66f4\u53d1\u6742\u7684\u753b\u5237\u2014\u2014\u6bd4\u5355\u4e00\u56fa\u5b9a\u989c\u8272\u586b\u5145\u66f4\u9ad8\u7ea7\u7684\u753b\u5237\u2014\u2014\u5c31\u9700\u8981\u6dfb\u52a0\u540d\u4e3a Grid.Background \u7684\u5b50\u6807\u7b7e\uff0c\u5982\u4e0b\u6240\u793a\uff1a < Grid Name = \"grid1\" > < Grid . Background > ... </ Grid . Background > ... </ Grid > \u6709\u4e00\u4e2a\u6280\u5de7\uff1a\u53ef\u5728\u5d4c\u5957\u5143\u7d20\u5185\u90e8\u6dfb\u52a0\u5176\u4ed6\u6807\u7b7e\u6765\u5b9e\u4f8b\u5316\u7279\u5b9a\u7684\u7c7b\u3002\u6bd4\u5982\u5728\u5f00\u5934\u5c55\u793a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6e10\u53d8\u989c\u8272\u586b\u5145\u80cc\u666f\u3002\u4e3a\u4e86\u5b9a\u4e49\u6240\u9700\u7684\u6e10\u53d8\u989c\u8272\uff0c\u9700\u8981\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\u3002 \u6839\u636e XAML \u89c4\u5219\uff0c\u53ef\u4f7f\u7528\u540d\u4e3a LinearGradientBrush \u7684\u5143\u7d20\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > LinearGradientBrush \u7c7b\u662f WPF \u540d\u79f0\u7a7a\u95f4\u96c6\u5408\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u53ef\u4e3a\u6807\u7b7e\u7ee7\u7eed\u4f7f\u7528\u9ed8\u8ba4\u7684 XML \u540d\u79f0\u7a7a\u95f4\u3002 \u4f46\u662f\u53ea\u662f\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\u8fd8\u4e0d\u591f\u2014\u2014\u8fd8\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u6e10\u53d8\u7684\u989c\u8272\u3002\u901a\u8fc7\u4f7f\u7528 GradientStop \u5bf9\u8c61\u7684\u96c6\u5408\u586b\u5145 LinearGradientBrush.GradientStops \u5c5e\u6027\u53ef\u5b8c\u6210\u8fd9\u4e00\u5de5\u4f5c\u3002\u540c\u6837\uff0c\u7531\u4e8e GradientStops \u5c5e\u6027\u592a\u590d\u6742\uff0c\u56e0\u6b64\u4e0d\u80fd\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7279\u6027\u503c\u8bbe\u7f6e\u8be5\u5c5e\u6027\u3002\u9700\u8981\u6539\u7528\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > < LinearGradientBrush . GradientStops > </ LinearGradientBrush . GradientStops > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > \u6700\u540e\uff0c\u53ef\u4f7f\u7528\u4e00\u7cfb\u5217 GradientStop \u5bf9\u8c61\u586b\u5145 GradientStops \u96c6\u5408\u3002\u6bcf\u4e2a GradientStop \u5bf9\u8c61\u90fd\u6709 Offset \u548c Color \u5c5e\u6027\u3002\u53ef\u4f7f\u7528\u666e\u901a\u7684\u5c5e\u6027-\u7279\u6027\u8bed\u6cd5\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u503c\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > < LinearGradientBrush . GradientStops > < GradientStop Offset = \"0.00\" Color = \"Red\" /> < GradientStop Offset = \"0.50\" Color = \"Indigo\" /> < GradientStop Offset = \"1.00\" Color = \"Violet\" /> </ LinearGradientBrush . GradientStops > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > \u4efb\u4f55 XAML \u6807\u7b7e\u96c6\u5408\u90fd\u53ef\u4ee5\u7528\u4e00\u7cfb\u5217\u6267\u884c\u76f8\u540c\u4efb\u52a1\u7684\u4ee3\u7801\u8bed\u53e5\u4ee3\u66ff\u3002\u4e0a\u9762\u663e\u793a\u7684\u4f7f\u7528\u6240\u9009\u7684\u6e10\u53d8\u989c\u8272\u586b\u5145\u80cc\u666f\u7684\u6807\u7b7e\uff0c\u4e0e\u4e00\u4e0b\u4ee3\u7801\u662f\u7b49\u4ef7\u7684\uff1a LinearGradientBrush brush = new LinearGradientBrush (); GradientStop stop1 = new GradientStop (); stop1 . Offset = 0.00 ; stop1 . Color = Colors . Red ; brush . GradientStops . Add ( stop1 ); GradientStop stop2 = new GradientStop (); stop2 . Offset = 0.50 ; stop2 . Color = Colors . Indigo ; brush . GradientStops . Add ( stop2 ); GradientStop stop3 = new GradientStop (); stop3 . Offset = 1.00 ; stop3 . Color = Colors . Violet ; brush . GradientStops . Add ( stop3 ); grid1 . Background = brush ; \u6807\u8bb0\u6269\u5c55 \u5bf9\u5927\u591a\u6570\u5c5e\u6027\u800c\u8a00\uff0cXAML \u5c5e\u6027\u8bed\u6cd5\u53ef\u4ee5\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\u3002\u4f46\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u53ef\u80fd\u786c\u7f16\u7801\u5c5e\u6027\u503c\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u5e0c\u671b\u5c06\u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u53ef\u80fd\u5e0c\u671b\u901a\u8fc7\u5c06\u4e00\u4e2a\u5c5e\u6027\u7ed1\u5b9a\u5230\u53e6\u4e00\u4e2a\u63a7\u4ef6\u6765\u52a8\u6001\u5730\u8bbe\u7f6e\u5c5e\u6027\u503c\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u9700\u8981\u4f7f\u7528\u6807\u8bb0\u6269\u5c55\u2014\u2014\u4e00\u79cd\u4ee5\u975e\u5e38\u89c4\u7684\u65b9\u5f0f\u8bbe\u7f6e\u5c5e\u6027\u7684\u4e13\u95e8\u8bed\u6cd5\u3002 \u6807\u8bb0\u6269\u5c55\u53ef\u7528\u4e8e\u5d4c\u5957\u6807\u7b7e\u6216 XML \u7279\u6027\u4e2d\uff08\u7528\u4e8e XML \u7279\u6027\u7684\u60c5\u51b5\u66f4\u5e38\u89c1\uff09\u3002\u5f53\u7528\u5728\u7279\u6027\u4e2d\u65f6\uff0c\u5b83\u4eec\u603b\u662f\u88ab\u82b1\u62ec\u53f7 {} \u5305\u56f4\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6807\u8bb0\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u6807\u8bb0\u6269\u5c55\uff0c\u5b83\u5141\u8bb8\u5f15\u7528\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u7684\u9759\u6001\u5c5e\u6027\uff1a < Button ... Foreground = \"{x:Static SystemColors.ActiveCaptionBrush}\" > \u6807\u8bb0\u6269\u5c55\u4f7f\u7528 {\u6807\u8bb0\u6269\u5c55\u7c7b \u53c2\u6570} \u8bed\u6cd5\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6807\u8bb0\u6269\u5c55\u662f StaticExtension \u7c7b\uff08\u6839\u636e\u7ea6\u5b9a\uff0c\u5728\u5f15\u7528\u6269\u5c55\u7c7b\u65f6\u53ef\u4ee5\u7701\u7565\u6700\u540e\u4e00\u4e2a\u5355\u8bcd Extension\uff09\u3002 x \u524d\u7f00\u6307\u793a\u5728 XAML \u540d\u79f0\u7a7a\u95f4\u4e2d\u67e5\u627e StaticExtension \u7c7b\u3002\u8fd8\u6709\u4e00\u4e9b\u6807\u8bb0\u6269\u5c55\u662f WPF \u540d\u79f0\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u4e0d\u9700\u8981 x \u524d\u7f00\u3002 \u6240\u6709\u6807\u8bb0\u6269\u5c55\u90fd\u7531\u7ee7\u627f\u81ea System.Windows.Markup.MarkupExtension \u57fa\u7c7b\u7684\u7c7b\u5b9e\u73b0\u3002 MarkupExtension \u57fa\u7c7b\u5341\u5206\u7b80\u5355\u2014\u2014\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 ProvideValue() \u65b9\u6cd5\u6765\u83b7\u53d6\u6240\u671f\u671b\u7684\u6570\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53 XAML \u89e3\u6790\u5668\u9047\u5230\u4e0a\u8ff0\u8bed\u53e5\u65f6\uff0c\u5b83\u5c06\u521b\u5efa StaticExtension \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff08\u4f20\u9012\u5b57\u7b26\u4e32 SystemColors.ActiveCaptionBrush \u4f5c\u4e3a\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff09\uff0c\u7136\u540e\u8c03\u7528 ProvideValue() \u65b9\u6cd5\u83b7\u53d6 SystemColors.ActiveCaptionBrush \u9759\u6001\u5c5e\u6027\u8fd4\u56de\u7684\u5bf9\u8c61\u3002\u6700\u540e\u4f7f\u7528\u68c0\u7d22\u7684\u5bf9\u8c61\u8bbe\u7f6e\u6309\u94ae\u7684 Foreground \u5c5e\u6027\u3002 \u8fd9\u6bb5 XAML \u7684\u6700\u7ec8\u7ed3\u679c\u4e0e\u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u76f8\u540c\uff1a cmdAnswer . Foreground = SystemColors . ActiveCaptionBrush ; \u56e0\u4e3a\u6807\u8bb0\u6269\u5c55\u6620\u5c04\u4e3a\u7c7b\uff0c\u6240\u4ee5\u5b83\u4eec\u4e5f\u53ef\u7528\u4f5c\u5d4c\u5957\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4e3a Button.Foreground \u5c5e\u6027\u4f7f\u7528 StaticExtension \u6807\u8bb0\u6269\u5c55\uff1a < Button ...> < Button . Foreground > < x : Static Member = \"SystemColors.ActiveCaptionBrush\" > </ x : Static > </ Button . Foreground > </ Button > \u6839\u636e\u6807\u8bb0\u6269\u5c55\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u5df2\u7ecf\u60f3\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u6570\u91cf\uff0c\u8fd9\u79cd\u8bed\u6cd5\u6709\u65f6\u66f4\u7b80\u5355\u3002 \u9644\u52a0\u5c5e\u6027 \u51fa\u666e\u901a\u5c5e\u6027\u5916\uff0cXAML \u8fd8\u5305\u62ec\u9644\u52a0\u5c5e\u6027\uff08attached property\uff09\u7684\u6982\u5ff5\u2014\u2014\u9644\u52a0\u5c5e\u6027\u65f6\u53ef\u7528\u4e8e\u591a\u4e2a\u63a7\u4ef6\u4f46\u5728\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u3002\u5728 WPF \u4e2d\uff0c\u9644\u52a0\u5c5e\u6027\u5e38\u7528\u4e8e\u63a7\u4ef6\u5e03\u5c40\u3002","title":"15. XAML \u4e2d\u7684\u5c5e\u6027\u548c\u4e8b\u4ef6"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/15.%20XAML%20%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BA%8B%E4%BB%B6/#_1","text":"\u5143\u7d20\u7684\u7279\u6027\u8bbe\u7f6e\u76f8\u5e94\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\u7684\u6587\u672c\u6846\u8bbe\u7f6e\u4e86\u5bf9\u9f50\u65b9\u5f0f\u548c\u5b57\u4f53\u5927\u5c0f\u7b49\uff1a < TextBox x : Name = \"txt_Question\" HorizontalAlignment = \"Left\" Height = \"178\" Margin = \"10,10,0,0\" TextWrapping = \"Wrap\" Text = \"Will I master WPF?\" VerticalAlignment = \"Top\" Width = \"652\" FontSize = \"20\" /> \u4e3a\u4f7f\u4e0a\u9762\u7684\u8bbe\u7f6e\u8d77\u4f5c\u7528\uff0c System.Windows.Controls.TextBox \u7c7b\u5fc5\u987b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\uff1a HorizontalAlignment \u3001 VerticalAlignment \u3001 FontSize \u3002 \u4e3a\u4f7f\u8fd9\u4e2a\u7cfb\u7edf\u80fd\u591f\u5de5\u4f5c\uff0cXAML \u89e3\u6790\u5668\u9700\u8981\u6267\u884c\u6bd4\u8868\u9762\u4e0a\u770b\u8d77\u6765\u66f4\u591a\u7684\u5de5\u4f5c\u3002XML \u7279\u6027\u4e2d\u7684\u503c\u603b\u662f\u7eaf\u6587\u672c\u5b57\u7b26\u4e32\u3002\u4f46\u5bf9\u8c61\u7684\u5c5e\u6027\u53ef\u4ee5\u662f\u4efb\u4f55 .NET \u7c7b\u578b\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u4e2a\u679a\u4e3e\u7c7b\u578b\u548c\u4e00\u4e2a\u6574\u578b\u3002 \u4e3a\u4e86\u5173\u8054\u5b57\u7b26\u4e32\u503c\u548c\u975e\u5b57\u7b26\u4e32\u5c5e\u6027\uff0cXAML \u89e3\u6790\u5668\u9700\u8981\u6267\u884c\u8f6c\u6362\u3002\u7531\u7c7b\u578b\u8f6c\u6362\u5668\u6267\u884c\u8f6c\u6362\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u662f\u4ece .NET 1.0 \u8d77\u5c31\u5df2\u7ecf\u5f15\u5165\u7684 .NET \u57fa\u7840\u7ed3\u6784\u7684\u4e00\u4e2a\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002 \u5b9e\u9645\u4e0a\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u2014\u2014\u63d0\u4f9b\u4e86\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u5c06\u7279\u5b9a\u7684 .NET \u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6 .NET \u7c7b\u578b\uff0c\u6216\u5c06\u5176\u4ed6\u4efb\u4f55 .NET \u7c7b\u578b\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002XAML \u89e3\u6790\u5668\u901a\u8fc7\u4e00\u4e0b\u4e24\u4e2a\u6b65\u9aa4\u6765\u67e5\u627e\u7c7b\u578b\u8f6c\u6362\u5668\uff1a \u68c0\u67e5\u5c5e\u6027\u58f0\u660e\uff0c\u67e5\u627e TypeConverter \u7279\u6027\uff08\u5982\u679c\u63d0\u4f9b\u4e86 TypeConverter \u7279\u6027\uff0c\u8be5\u7279\u6027\u5c06\u6307\u5b9a\u54ea\u4e2a\u7c7b\u53ef\u6267\u884c\u8f6c\u6362\uff09\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u8bf8\u5982 Foreground \u8fd9\u6837\u7684\u5c5e\u6027\u65f6\uff0c.NET \u5c06\u68c0\u67e5 Foreground \u5c5e\u6027\u7684\u58f0\u660e\u3002 \u5982\u679c\u5728\u5c5e\u6027\u58f0\u660e\u4e2d\u6ca1\u6709 TypeConverter \u7279\u6027\uff0cXAML \u89e3\u6790\u5668\u5c06\u68c0\u67e5\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u7684\u7c7b\u58f0\u660e\u3002\u4f8b\u5982\uff0cForegound \u5c5e\u6027\u4f7f\u7528\u4e00\u4e2a Brush \u5bf9\u8c61\u3002\u7531\u4e8e Brush \u7c7b\u4f7f\u7528 TypeConverter(typeof(BrushConverter)) \u7279\u6027\u58f0\u660e\u8fdb\u884c\u4e86\u4fee\u9970\uff0c\u56e0\u6b64 Brush \u7c7b\u53ca\u5176\u5b50\u7c7b\u4f7f\u7528 BrushConverter \u7c7b\u578b\u8f6c\u6362\u5668\u3002 \u5982\u679c\u5c5e\u6027\u58f0\u660e\u6216\u7c7b\u58f0\u660e\u90fd\u6ca1\u6709\u4e0e\u5176\u5173\u8054\u7684\u7c7b\u578b\u8f6c\u6362\u5668\uff0cXAML \u89e3\u6790\u5668\u4f1a\u751f\u6210\u9519\u8bef\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u7b80\u5355\u7075\u6d3b\u3002\u5982\u679c\u5728\u7c7b\u5c42\u6b21\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u5668\uff0c\u8be5\u8f6c\u6362\u5668\u5c06\u5e94\u7528\u5230\u6240\u6709\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u7684\u5c5e\u6027\u4e0a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5e0c\u671b\u4e3a\u67d0\u4e2a\u7279\u5b9a\u5c5e\u6027\u5fae\u8c03\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5c5e\u6027\u58f0\u660e\u4e2d\u6539\u7528 TypeConverter \u7279\u6027\u3002 \u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u7c7b\u578b\u8f6c\u6362\u5668\u4ece\u6280\u672f\u89d2\u5ea6\u770b\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u4f46\u8bed\u6cd5\u6709\u4e9b\u590d\u6742\u3002\u76f4\u63a5\u8bbe\u7f6e\u5c5e\u6027\u51e0\u4e4e\u603b\u662f\u66f4\u597d\u4e00\u4e9b\u2014\u2014\u4e0d\u4ec5\u901f\u5ea6\u66f4\u5feb\uff0c\u800c\u4e14\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u56e0\u4e3a\u952e\u5165\u975e\u6cd5\u5b57\u7b26\u4e32\u800c\u4ea7\u751f\u7684\u9519\u8bef\uff0c\u8fd9\u4e9b\u9519\u8bef\u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u88ab\u53d1\u73b0\uff08\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5f71\u54cd XAML\uff0c\u56e0\u4e3a XAML \u662f\u5728\u7f16\u8bd1\u671f\u95f4\u8fdb\u884c\u89e3\u6790\u548c\u9a8c\u8bc1\u7684\uff09\u3002 \u4e0e\u6240\u6709\u57fa\u4e8e XML \u7684\u8bed\u8a00\u4e00\u6837\uff0cXAML \u4e5f\u533a\u5206\u5927\u5c0f\u5199\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u7528 <button> \u66ff\u4ee3 <Button> \u3002\u7136\u800c\uff0c\u7c7b\u578b\u8f6c\u6362\u5668\u901a\u5e38\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u8fd9\u610f\u5473\u7740 Foreground=\u201dWhite\u201d \u548c Foreground=\u201dwhite\u201d \u5177\u6709\u76f8\u540c\u7684\u6548\u679c\u3002","title":"\u7b80\u5355\u5c5e\u6027\u4e0e\u7c7b\u578b\u8f6c\u6362\u5668"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/15.%20XAML%20%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BA%8B%E4%BB%B6/#_2","text":"\u867d\u7136\u7c7b\u578b\u8f6c\u6362\u5668\u4fbf\u4e8e\u4f7f\u7528\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u5b9e\u9645\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u5c5e\u6027\u662f\u5b8c\u5907\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5177\u6709\u81ea\u5df1\u7684\u4e00\u7ec4\u5c5e\u6027\u3002\u5c3d\u7ba1\u521b\u5efa\u4f9b\u7c7b\u578b\u8f6c\u6362\u5668\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u65f6\u8bed\u6cd5\u53ef\u80fd\u5341\u5206\u590d\u6742\uff0c\u5e76\u4e14\u5bb9\u6613\u51fa\u9519\u3002 \u5e78\u8fd0\u7684\u662f\uff0cXAML \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u9009\u62e9\uff1a\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff08property-element syntax\uff09\u3002\u4f7f\u7528\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff0c\u53ef\u6dfb\u52a0\u540d\u79f0\u5f62\u5f0f\u4e3a Parent.PropertyName \u7684\u5b50\u5143\u7d20\u3002\u4f8b\u5982\uff0c Grid \u63a7\u4ef6\u7531\u4e00\u4e2a Background \u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u5141\u8bb8\u63d0\u4f9b\u7528\u4e8e\u7ed8\u5236\u63a7\u4ef6\u80cc\u666f\u533a\u57df\u7684\u753b\u5237\u3002\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u66f4\u53d1\u6742\u7684\u753b\u5237\u2014\u2014\u6bd4\u5355\u4e00\u56fa\u5b9a\u989c\u8272\u586b\u5145\u66f4\u9ad8\u7ea7\u7684\u753b\u5237\u2014\u2014\u5c31\u9700\u8981\u6dfb\u52a0\u540d\u4e3a Grid.Background \u7684\u5b50\u6807\u7b7e\uff0c\u5982\u4e0b\u6240\u793a\uff1a < Grid Name = \"grid1\" > < Grid . Background > ... </ Grid . Background > ... </ Grid > \u6709\u4e00\u4e2a\u6280\u5de7\uff1a\u53ef\u5728\u5d4c\u5957\u5143\u7d20\u5185\u90e8\u6dfb\u52a0\u5176\u4ed6\u6807\u7b7e\u6765\u5b9e\u4f8b\u5316\u7279\u5b9a\u7684\u7c7b\u3002\u6bd4\u5982\u5728\u5f00\u5934\u5c55\u793a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6e10\u53d8\u989c\u8272\u586b\u5145\u80cc\u666f\u3002\u4e3a\u4e86\u5b9a\u4e49\u6240\u9700\u7684\u6e10\u53d8\u989c\u8272\uff0c\u9700\u8981\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\u3002 \u6839\u636e XAML \u89c4\u5219\uff0c\u53ef\u4f7f\u7528\u540d\u4e3a LinearGradientBrush \u7684\u5143\u7d20\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > LinearGradientBrush \u7c7b\u662f WPF \u540d\u79f0\u7a7a\u95f4\u96c6\u5408\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u53ef\u4e3a\u6807\u7b7e\u7ee7\u7eed\u4f7f\u7528\u9ed8\u8ba4\u7684 XML \u540d\u79f0\u7a7a\u95f4\u3002 \u4f46\u662f\u53ea\u662f\u521b\u5efa LinearGradientBrush \u5bf9\u8c61\u8fd8\u4e0d\u591f\u2014\u2014\u8fd8\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u6e10\u53d8\u7684\u989c\u8272\u3002\u901a\u8fc7\u4f7f\u7528 GradientStop \u5bf9\u8c61\u7684\u96c6\u5408\u586b\u5145 LinearGradientBrush.GradientStops \u5c5e\u6027\u53ef\u5b8c\u6210\u8fd9\u4e00\u5de5\u4f5c\u3002\u540c\u6837\uff0c\u7531\u4e8e GradientStops \u5c5e\u6027\u592a\u590d\u6742\uff0c\u56e0\u6b64\u4e0d\u80fd\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u7279\u6027\u503c\u8bbe\u7f6e\u8be5\u5c5e\u6027\u3002\u9700\u8981\u6539\u7528\u5c5e\u6027\u5143\u7d20\u8bed\u6cd5\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > < LinearGradientBrush . GradientStops > </ LinearGradientBrush . GradientStops > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > \u6700\u540e\uff0c\u53ef\u4f7f\u7528\u4e00\u7cfb\u5217 GradientStop \u5bf9\u8c61\u586b\u5145 GradientStops \u96c6\u5408\u3002\u6bcf\u4e2a GradientStop \u5bf9\u8c61\u90fd\u6709 Offset \u548c Color \u5c5e\u6027\u3002\u53ef\u4f7f\u7528\u666e\u901a\u7684\u5c5e\u6027-\u7279\u6027\u8bed\u6cd5\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u503c\uff1a < Grid Name = \"grid1\" > < Grid . Background > < LinearGradientBrush > < LinearGradientBrush . GradientStops > < GradientStop Offset = \"0.00\" Color = \"Red\" /> < GradientStop Offset = \"0.50\" Color = \"Indigo\" /> < GradientStop Offset = \"1.00\" Color = \"Violet\" /> </ LinearGradientBrush . GradientStops > </ LinearGradientBrush > </ Grid . Background > ... </ Grid > \u4efb\u4f55 XAML \u6807\u7b7e\u96c6\u5408\u90fd\u53ef\u4ee5\u7528\u4e00\u7cfb\u5217\u6267\u884c\u76f8\u540c\u4efb\u52a1\u7684\u4ee3\u7801\u8bed\u53e5\u4ee3\u66ff\u3002\u4e0a\u9762\u663e\u793a\u7684\u4f7f\u7528\u6240\u9009\u7684\u6e10\u53d8\u989c\u8272\u586b\u5145\u80cc\u666f\u7684\u6807\u7b7e\uff0c\u4e0e\u4e00\u4e0b\u4ee3\u7801\u662f\u7b49\u4ef7\u7684\uff1a LinearGradientBrush brush = new LinearGradientBrush (); GradientStop stop1 = new GradientStop (); stop1 . Offset = 0.00 ; stop1 . Color = Colors . Red ; brush . GradientStops . Add ( stop1 ); GradientStop stop2 = new GradientStop (); stop2 . Offset = 0.50 ; stop2 . Color = Colors . Indigo ; brush . GradientStops . Add ( stop2 ); GradientStop stop3 = new GradientStop (); stop3 . Offset = 1.00 ; stop3 . Color = Colors . Violet ; brush . GradientStops . Add ( stop3 ); grid1 . Background = brush ;","title":"\u590d\u6742\u5c5e\u6027"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/15.%20XAML%20%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BA%8B%E4%BB%B6/#_3","text":"\u5bf9\u5927\u591a\u6570\u5c5e\u6027\u800c\u8a00\uff0cXAML \u5c5e\u6027\u8bed\u6cd5\u53ef\u4ee5\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\u3002\u4f46\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u53ef\u80fd\u786c\u7f16\u7801\u5c5e\u6027\u503c\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u5e0c\u671b\u5c06\u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u53ef\u80fd\u5e0c\u671b\u901a\u8fc7\u5c06\u4e00\u4e2a\u5c5e\u6027\u7ed1\u5b9a\u5230\u53e6\u4e00\u4e2a\u63a7\u4ef6\u6765\u52a8\u6001\u5730\u8bbe\u7f6e\u5c5e\u6027\u503c\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u9700\u8981\u4f7f\u7528\u6807\u8bb0\u6269\u5c55\u2014\u2014\u4e00\u79cd\u4ee5\u975e\u5e38\u89c4\u7684\u65b9\u5f0f\u8bbe\u7f6e\u5c5e\u6027\u7684\u4e13\u95e8\u8bed\u6cd5\u3002 \u6807\u8bb0\u6269\u5c55\u53ef\u7528\u4e8e\u5d4c\u5957\u6807\u7b7e\u6216 XML \u7279\u6027\u4e2d\uff08\u7528\u4e8e XML \u7279\u6027\u7684\u60c5\u51b5\u66f4\u5e38\u89c1\uff09\u3002\u5f53\u7528\u5728\u7279\u6027\u4e2d\u65f6\uff0c\u5b83\u4eec\u603b\u662f\u88ab\u82b1\u62ec\u53f7 {} \u5305\u56f4\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6807\u8bb0\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u6807\u8bb0\u6269\u5c55\uff0c\u5b83\u5141\u8bb8\u5f15\u7528\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u7684\u9759\u6001\u5c5e\u6027\uff1a < Button ... Foreground = \"{x:Static SystemColors.ActiveCaptionBrush}\" > \u6807\u8bb0\u6269\u5c55\u4f7f\u7528 {\u6807\u8bb0\u6269\u5c55\u7c7b \u53c2\u6570} \u8bed\u6cd5\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6807\u8bb0\u6269\u5c55\u662f StaticExtension \u7c7b\uff08\u6839\u636e\u7ea6\u5b9a\uff0c\u5728\u5f15\u7528\u6269\u5c55\u7c7b\u65f6\u53ef\u4ee5\u7701\u7565\u6700\u540e\u4e00\u4e2a\u5355\u8bcd Extension\uff09\u3002 x \u524d\u7f00\u6307\u793a\u5728 XAML \u540d\u79f0\u7a7a\u95f4\u4e2d\u67e5\u627e StaticExtension \u7c7b\u3002\u8fd8\u6709\u4e00\u4e9b\u6807\u8bb0\u6269\u5c55\u662f WPF \u540d\u79f0\u7a7a\u95f4\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u4e0d\u9700\u8981 x \u524d\u7f00\u3002 \u6240\u6709\u6807\u8bb0\u6269\u5c55\u90fd\u7531\u7ee7\u627f\u81ea System.Windows.Markup.MarkupExtension \u57fa\u7c7b\u7684\u7c7b\u5b9e\u73b0\u3002 MarkupExtension \u57fa\u7c7b\u5341\u5206\u7b80\u5355\u2014\u2014\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 ProvideValue() \u65b9\u6cd5\u6765\u83b7\u53d6\u6240\u671f\u671b\u7684\u6570\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53 XAML \u89e3\u6790\u5668\u9047\u5230\u4e0a\u8ff0\u8bed\u53e5\u65f6\uff0c\u5b83\u5c06\u521b\u5efa StaticExtension \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff08\u4f20\u9012\u5b57\u7b26\u4e32 SystemColors.ActiveCaptionBrush \u4f5c\u4e3a\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff09\uff0c\u7136\u540e\u8c03\u7528 ProvideValue() \u65b9\u6cd5\u83b7\u53d6 SystemColors.ActiveCaptionBrush \u9759\u6001\u5c5e\u6027\u8fd4\u56de\u7684\u5bf9\u8c61\u3002\u6700\u540e\u4f7f\u7528\u68c0\u7d22\u7684\u5bf9\u8c61\u8bbe\u7f6e\u6309\u94ae\u7684 Foreground \u5c5e\u6027\u3002 \u8fd9\u6bb5 XAML \u7684\u6700\u7ec8\u7ed3\u679c\u4e0e\u4e0b\u9762\u4ee3\u7801\u7ed3\u679c\u76f8\u540c\uff1a cmdAnswer . Foreground = SystemColors . ActiveCaptionBrush ; \u56e0\u4e3a\u6807\u8bb0\u6269\u5c55\u6620\u5c04\u4e3a\u7c7b\uff0c\u6240\u4ee5\u5b83\u4eec\u4e5f\u53ef\u7528\u4f5c\u5d4c\u5957\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4e3a Button.Foreground \u5c5e\u6027\u4f7f\u7528 StaticExtension \u6807\u8bb0\u6269\u5c55\uff1a < Button ...> < Button . Foreground > < x : Static Member = \"SystemColors.ActiveCaptionBrush\" > </ x : Static > </ Button . Foreground > </ Button > \u6839\u636e\u6807\u8bb0\u6269\u5c55\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u5df2\u7ecf\u60f3\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u6570\u91cf\uff0c\u8fd9\u79cd\u8bed\u6cd5\u6709\u65f6\u66f4\u7b80\u5355\u3002","title":"\u6807\u8bb0\u6269\u5c55"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/15.%20XAML%20%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BA%8B%E4%BB%B6/#_4","text":"\u51fa\u666e\u901a\u5c5e\u6027\u5916\uff0cXAML \u8fd8\u5305\u62ec\u9644\u52a0\u5c5e\u6027\uff08attached property\uff09\u7684\u6982\u5ff5\u2014\u2014\u9644\u52a0\u5c5e\u6027\u65f6\u53ef\u7528\u4e8e\u591a\u4e2a\u63a7\u4ef6\u4f46\u5728\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u3002\u5728 WPF \u4e2d\uff0c\u9644\u52a0\u5c5e\u6027\u5e38\u7528\u4e8e\u63a7\u4ef6\u5e03\u5c40\u3002","title":"\u9644\u52a0\u5c5e\u6027"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/16.%20%E7%90%86%E8%A7%A3%20WPF%20%E4%B8%AD%E7%9A%84%E5%B8%83%E5%B1%80/","text":"\u5728 Windows \u5f00\u53d1\u4eba\u5458\u8bbe\u8ba1\u7528\u6237\u754c\u9762\u7684\u65b9\u5f0f\u4e0a\uff0cWPF \u5e03\u5c40\u6a21\u578b\u4f7f\u4e00\u4e2a\u91cd\u5927\u6539\u8fdb\u3002\u5728 WPF \u95ee\u4e16\u4e4b\u524d\uff0cWindows \u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u523b\u677f\u7684\u57fa\u4e8e\u5750\u6807\u7684\u5e03\u5c40\u5c06\u63a7\u4ef6\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u5728 WPF \u4e2d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u53ef\u884c\uff0c\u4f46\u5df2\u7ecf\u6781\u5c11\u4f7f\u7528\u3002\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u7528\u7c7b\u4f3c\u4e8e Web \u7684\u6d41\uff08flow\uff09\u5e03\u5c40\uff1b\u5728\u4f7f\u7528\u6d41\u5e03\u5c40\u6a21\u578b\u65f6\uff0c\u63a7\u4ef6\u53ef\u4ee5\u6269\u5927\uff0c\u5e76\u5c06\u5176\u4ed6\u63a7\u4ef6\u6324\u5230\u5176\u4ed6\u4f4d\u7f6e\uff0c\u5f00\u53d1\u4eba\u5458\u80fd\u521b\u5efa\u4e0e\u663e\u793a\u5206\u8fa8\u7387\u548c\u7a97\u53e3\u5927\u5c0f\u65e0\u5173\u7684\u3001\u5728\u4e0d\u540c\u7684\u663e\u793a\u5668\u4e0a\u6b63\u786e\u7f29\u653e\u7684\u7528\u6237\u754c\u9762\uff1b\u5f53\u7a97\u53e3\u5185\u5bb9\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u754c\u9762\u53ef\u8c03\u6574\u81ea\u8eab\uff0c\u5e76\u4e14\u53ef\u4ee5\u81ea\u5982\u5730\u5904\u7406\u8bed\u8a00\u7684\u5207\u6362\u3002 WPF \u5e03\u5c40\u539f\u5219 WPF \u7a97\u53e3\u53ea\u80fd\u5305\u542b\u5355\u4e2a\u5143\u7d20\u3002\u4e3a\u5728 WPF \u7a97\u53e3\u4e2d\u653e\u7f6e\u591a\u4e2a\u5143\u7d20\u5e76\u521b\u5efa\u66f4\u8d34\u8fd1\u5b9e\u7528\u7684\u7528\u6237\u754c\u9762\uff0c\u9700\u8981\u5728\u7a97\u53e3\u4e0a\u653e\u7f6e\u4e00\u4e2a\u5bb9\u5668\uff0c\u7136\u540e\u518d\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5176\u4ed6\u5143\u7d20\u3002 \u9020\u6210\u8fd9\u4ee5\u9650\u5236\u7684\u539f\u56e0\u662f Window \u7c7b\u7ee7\u627f\u81ea ContentControl \u7c7b\u3002 \u5728 WPF \u4e2d\uff0c\u5e03\u5c40\u7531\u4f7f\u7528\u7684\u5bb9\u5668\u6765\u786e\u5b9a\u3002\u5c3d\u7ba1\u6709\u591a\u4e2a\u5bb9\u5668\u53ef\u4f9b\u9009\u62e9\uff0c\u4f46\u201c\u7406\u60f3\u7684\u201d WPF \u7a97\u53e3\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u51e0\u6761\u91cd\u8981\u539f\u5219\uff1a \u4e0d\u5e94\u663e\u5f0f\u8bbe\u5b9a\u5143\u7d20\uff08\u5982\u63a7\u4ef6\uff09\u7684\u5c3a\u5bf8\u3002 \u5143\u7d20\u5e94\u5f53\u53ef\u4ee5\u6539\u53d8\u5c3a\u5bf8\u4ee5\u9002\u5408\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u5f53\u6dfb\u52a0\u66f4\u591a\u7684\u6587\u672c\u65f6\u6309\u94ae\u5e94\u5f53\u80fd\u591f\u6269\u5c55\u3002\u53ef\u901a\u8fc7\u8bbe\u7f6e\u6700\u5927\u548c\u6700\u5c0f\u5c3a\u5bf8\u6765\u9650\u5236\u53ef\u4ee5\u63a5\u53d7\u7684\u63a7\u4ef6\u5c3a\u5bf8\u8303\u56f4\u3002 \u4e0d\u5e94\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5143\u7d20\u5e94\u5f53\u7531\u5b83\u4eec\u7684\u5bb9\u5668\u6839\u636e\u5b83\u4eec\u7684\u5c3a\u5bf8\u3001\u987a\u5e8f\u4ee5\u53ca\uff08\u53ef\u9009\u7684\uff09\u5176\u4ed6\u7279\u5b9a\u4e8e\u5177\u4f53\u5e03\u5c40\u5bb9\u5668\u7684\u4fe1\u606f\u8fdb\u884c\u6392\u5217\u3002\u5982\u679c\u9700\u8981\u5728\u5143\u7d20\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u767d\u7a7a\u95f4\uff0c\u53ef\u4f7f\u7528 Margin \u5c5e\u6027\u3002 \u5e03\u5c40\u5bb9\u5668\u7684\u5b50\u5143\u7d20\u201c\u5171\u4eab\u201d\u53ef\u7528\u7684\u7a7a\u95f4\u3002 \u5982\u679c\u7a7a\u95f4\u5141\u8bb8\uff0c\u5e03\u5c40\u5bb9\u5668\u4f1a\u6839\u636e\u6bcf\u4e2a\u5143\u7d20\u7684\u5185\u5bb9\u5c3d\u53ef\u80fd\u4e3a\u5143\u7d20\u8bbe\u7f6e\u66f4\u5408\u7406\u7684\u5c3a\u5bf8\u3002\u5b83\u4eec\u8fd8\u4f1a\u5411\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u5143\u7d20\u5206\u914d\u591a\u4f59\u7684\u7a7a\u95f4\u3002 \u53ef\u5d4c\u5957\u7684\u5e03\u5c40\u5bb9\u5668\u3002 \u5178\u578b\u7684\u7528\u6237\u754c\u9762\u4f7f\u7528Grid\u9762\u677f\u4f5c\u4e3a\u5f00\u59cb\uff0cGrid\u9762\u677f\u662f WPF \u4e2d\u529f\u80fd\u6700\u5f3a\u5927\u7684\u5bb9\u5668\uff0cGrid \u9762\u677f\u53ef\u5305\u542b\u5176\u4ed6\u5e03\u5c40\u5bb9\u5668\uff0c\u5305\u542b\u7684\u8fd9\u4e9b\u5bb9\u5668\u4ee5\u66f4\u5c0f\u7684\u5206\u7ec4\u6392\u5217\u5143\u7d20\uff0c\u6bd4\u5982\u5e26\u6709\u6807\u9898\u7684\u6587\u672c\u6846\u3001\u5217\u8868\u6846\u4e2d\u7684\u9879\u3001\u5de5\u5177\u680f\u4e0a\u7684\u56fe\u6807\u4ee5\u53ca\u4e00\u5217\u6309\u94ae\u7b49\u3002 \u5c3d\u7ba1\u5bf9\u4e8e\u8fd9\u51e0\u6761\u539f\u5219\u800c\u8a00\u4e5f\u6709\u4e00\u4e9b\u4f8b\u5916\uff0c\u4f46\u5b83\u4eec\u53cd\u6620\u4e86 WPF \u7684\u603b\u4f53\u8bbe\u8ba1\u76ee\u6807\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u521b\u5efa WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\u9075\u5faa\u4e86\u8fd9\u4e9b\u539f\u5219\uff0c\u5c06\u4f1a\u521b\u5efa\u51fa\u66f4\u597d\u7684\u3001\u66f4\u7075\u6d3b\u7684\u7528\u6237\u754c\u9762\u3002\u5982\u679c\u4e0d\u9075\u5faa\u8fd9\u4e9b\u539f\u5219\uff0c\u6700\u7ec8\u5c06\u5f97\u5230\u4e0d\u662f\u5f88\u9002\u5408 WPF \u7684\u5e76\u4e14\u96be\u4ee5\u7ef4\u62a4\u7684\u7528\u6237\u754c\u9762\u3002 \u5e03\u5c40\u8fc7\u7a0b WPF \u5e03\u5c40\u5305\u62ec\u4e24\u4e2a\u9636\u6bb5\uff1a\u6d4b\u91cf\uff08measure\uff09\u9636\u6bb5\u548c\u6392\u5217\uff08arrange\uff09\u9636\u6bb5\u3002\u5728\u6d4b\u91cf\u9636\u6bb5\uff0c\u5bb9\u5668\u904d\u5386\u6240\u6709\u5b50\u5143\u7d20\uff0c\u5e76\u8be2\u95ee\u5b50\u5143\u7d20\u5b83\u4eec\u6240\u671f\u671b\u7684\u5c3a\u5bf8\u3002\u5728\u6392\u5217\u9636\u6bb5\uff0c\u5bb9\u5668\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u653e\u7f6e\u5b50\u5143\u7d20\u3002 \u5f53\u7136\uff0c\u5143\u7d20\u672a\u5fc5\u603b\u80fd\u5f97\u5230\u6700\u5408\u9002\u7684\u5c3a\u5bf8\u2014\u2014\u6709\u65f6\u5bb9\u5668\u6ca1\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\u4ee5\u9002\u5e94\u6240\u542b\u7684\u5143\u7d20\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u4e3a\u4e86\u9002\u5e94\u53ef\u89c6\u5316\u533a\u57df\u7684\u5c3a\u5bf8\uff0c\u5c31\u5fc5\u987b\u526a\u88c1\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\u7684\u5143\u7d20\u3002\u901a\u5e38\u53ef\u901a\u8fc7\u8bbe\u7f6e\u6700\u5c0f\u7a97\u53e3\u5c3a\u5bf8\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002 \u5e03\u5c40\u5bb9\u5668\u4e0d\u80fd\u63d0\u4f9b\u4efb\u4f55\u6eda\u52a8\u652f\u6301\u3002\u6eda\u52a8\u65f6\u7531\u7279\u5b9a\u7684\u5185\u5bb9\u63a7\u4ef6\u2014\u2014ScrollViewer\u2014\u2014\u63d0\u4f9b\u7684\uff0cScrollViewer \u63a7\u4ef6\u51e0\u4e4e\u53ef\u7528\u4e8e\u4efb\u4f55\u5730\u65b9\u3002 \u5e03\u5c40\u5bb9\u5668 \u6240\u6709 WPF \u5e03\u5c40\u5bb9\u5668\u90fd\u662f\u6d3e\u751f\u81ea System.Windows.Controls.Panel \u62bd\u8c61\u7c7b\u7684\u9762\u677f\u3002 Panel \u7c7b\u6dfb\u52a0\u4e86\u5c11\u91cf\u6210\u5458\uff0c\u5305\u62ec\u4e09\u4e2a\u516c\u6709\u5c5e\u6027\u3002 ![[\u7406\u89e3WPF\u5e03\u5c40_1.png]] ![[\u7406\u89e3WPF\u5e03\u5c40_2.png]] Panel \u7c7b\u8fd8\u5305\u542b\u51e0\u4e2a\u5185\u90e8\u5c5e\u6027\uff0c\u5982\u679c\u5e0c\u671b\u521b\u5efa\u81ea\u5df1\u7684\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\u6700\u7279\u522b\u7684\u662f\uff0c\u53ef\u91cd\u5199\u7ee7\u627f\u81ea FrameworkElement \u7c7b\u7684 MeasureOverride() \u548c ArrangeOverride() \u65b9\u6cd5\uff0c\u4ee5\u4fee\u6539\u5f53\u7ec4\u7ec7\u5b50\u5143\u7d20\u65f6\u9762\u677f\u5904\u7406\u6d4b\u91cf\u9636\u6bb5\u548c\u6392\u5217\u9636\u6bb5\u7684\u65b9\u5f0f\u3002 \u5c31 Panel \u57fa\u7c7b\u672c\u8eab\u800c\u8a00\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u4f46\u5b83\u65f6\u5176\u4ed6\u66f4\u591a\u7279\u6b8a\u7c7b\u7684\u8d77\u70b9\u3002WPF \u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u7528\u4e8e\u5b89\u6392\u5e03\u5c40\u7684\u7ee7\u627f\u81ea Panel \u7684\u7c7b\u3002\u4e0e\u6240\u6709 WPF \u63a7\u4ef6\u548c\u5927\u591a\u6570\u53ef\u89c6\u5316\u5143\u7d20\u4e00\u6837\uff0c\u8fd9\u4e9b\u7c7b\u4f4d\u4e8e System.Windows.Controls \u540d\u79f0\u7a7a\u95f4\u4e2d\u3002 ![[\u7406\u89e3WPF\u5e03\u5c40_3.png]] \u9664\u8fd9\u4e9b\u6838\u5fc3\u5bb9\u5668\u5916\uff0c\u8fd8\u6709\u51e0\u4e2a\u66f4\u4e13\u4e1a\u7684\u9762\u677f\uff0c\u5728\u5404\u79cd\u63a7\u4ef6\u4e2d\u90fd\u53ef\u80fd\u9047\u5230\u5b83\u4eec\u3002\u8fd9\u4e9b\u5bb9\u5668\u5305\u62ec\u4e13\u95e8\u7528\u4e8e\u5305\u542b\u7279\u5b9a\u63a7\u4ef6\u5b50\u5143\u7d20\u7684\u9762\u677f\u2014\u2014\u5982 TabPanel \u9762\u677f\uff08\u5728 TabPanel \u9762\u677f\u4e2d\u5305\u542b\u591a\u4e2a\u9009\u9879\u5361\uff09\u3001ToolbarPanel \u9762\u677f\uff08\u5de5\u5177\u680f\u4e2d\u7684\u591a\u4e2a\u6309\u94ae\uff09\u4ee5\u53ca ToolbarOverflowPanel \u9762\u677f\uff08Toolbar \u63a7\u4ef6\u7684\u6ea2\u51fa\u83dc\u5355\u4e2d\u7684\u591a\u4e2a\u547d\u4ee4\uff09\u3002\u8fd8\u6709 VirtuallizingStackPanel \u9762\u677f\uff0c\u6570\u636e\u7ed1\u5b9a\u5217\u8868\u63a7\u4ef6\u4f7f\u7528\u8be5\u9762\u677f\u4ee5\u5927\u5e45\u964d\u4f4e\u5f00\u9500\uff1b\u8fd8\u6709 InkCanvas \u63a7\u4ef6\uff0c\u8be5\u63a7\u4ef6\u548c Canvas \u63a7\u4ef6\u7c7b\u4f3c\uff0c\u4f46\u8be5\u63a7\u4ef6\u652f\u6301\u5904\u7406\u5e73\u677f\u7535\u8111\uff08TablePC\uff09\u4e0a\u7684\u624b\u5199\u7b14\uff08stylus\uff09\u8f93\u5165\uff08\u4f8b\u5982\uff0c\u6839\u636e\u9009\u62e9\u7684\u6a21\u5f0f\uff0cInkCanvas \u63a7\u4ef6\u652f\u6301\u4f7f\u7528\u6307\u9488\u7ed8\u5236\u8303\u56f4\uff0c\u4ee5\u9009\u62e9\u5c4f\u5e55\u4e0a\u7684\u5143\u7d20\u3002\u4e5f\u53ef\u901a\u8fc7\u666e\u901a\u8ba1\u7b97\u673a\u548c\u9f20\u6807\u4f7f\u7528 InkCanvas \u63a7\u4ef6\uff0c\u5c3d\u7ba1\u8fd9\u6709\u70b9\u8fdd\u53cd\u76f4\u89c9\uff09\u3002","title":"16. \u7406\u89e3 WPF \u4e2d\u7684\u5e03\u5c40"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/16.%20%E7%90%86%E8%A7%A3%20WPF%20%E4%B8%AD%E7%9A%84%E5%B8%83%E5%B1%80/#wpf","text":"WPF \u7a97\u53e3\u53ea\u80fd\u5305\u542b\u5355\u4e2a\u5143\u7d20\u3002\u4e3a\u5728 WPF \u7a97\u53e3\u4e2d\u653e\u7f6e\u591a\u4e2a\u5143\u7d20\u5e76\u521b\u5efa\u66f4\u8d34\u8fd1\u5b9e\u7528\u7684\u7528\u6237\u754c\u9762\uff0c\u9700\u8981\u5728\u7a97\u53e3\u4e0a\u653e\u7f6e\u4e00\u4e2a\u5bb9\u5668\uff0c\u7136\u540e\u518d\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5176\u4ed6\u5143\u7d20\u3002 \u9020\u6210\u8fd9\u4ee5\u9650\u5236\u7684\u539f\u56e0\u662f Window \u7c7b\u7ee7\u627f\u81ea ContentControl \u7c7b\u3002 \u5728 WPF \u4e2d\uff0c\u5e03\u5c40\u7531\u4f7f\u7528\u7684\u5bb9\u5668\u6765\u786e\u5b9a\u3002\u5c3d\u7ba1\u6709\u591a\u4e2a\u5bb9\u5668\u53ef\u4f9b\u9009\u62e9\uff0c\u4f46\u201c\u7406\u60f3\u7684\u201d WPF \u7a97\u53e3\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u51e0\u6761\u91cd\u8981\u539f\u5219\uff1a \u4e0d\u5e94\u663e\u5f0f\u8bbe\u5b9a\u5143\u7d20\uff08\u5982\u63a7\u4ef6\uff09\u7684\u5c3a\u5bf8\u3002 \u5143\u7d20\u5e94\u5f53\u53ef\u4ee5\u6539\u53d8\u5c3a\u5bf8\u4ee5\u9002\u5408\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u5f53\u6dfb\u52a0\u66f4\u591a\u7684\u6587\u672c\u65f6\u6309\u94ae\u5e94\u5f53\u80fd\u591f\u6269\u5c55\u3002\u53ef\u901a\u8fc7\u8bbe\u7f6e\u6700\u5927\u548c\u6700\u5c0f\u5c3a\u5bf8\u6765\u9650\u5236\u53ef\u4ee5\u63a5\u53d7\u7684\u63a7\u4ef6\u5c3a\u5bf8\u8303\u56f4\u3002 \u4e0d\u5e94\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5143\u7d20\u5e94\u5f53\u7531\u5b83\u4eec\u7684\u5bb9\u5668\u6839\u636e\u5b83\u4eec\u7684\u5c3a\u5bf8\u3001\u987a\u5e8f\u4ee5\u53ca\uff08\u53ef\u9009\u7684\uff09\u5176\u4ed6\u7279\u5b9a\u4e8e\u5177\u4f53\u5e03\u5c40\u5bb9\u5668\u7684\u4fe1\u606f\u8fdb\u884c\u6392\u5217\u3002\u5982\u679c\u9700\u8981\u5728\u5143\u7d20\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u767d\u7a7a\u95f4\uff0c\u53ef\u4f7f\u7528 Margin \u5c5e\u6027\u3002 \u5e03\u5c40\u5bb9\u5668\u7684\u5b50\u5143\u7d20\u201c\u5171\u4eab\u201d\u53ef\u7528\u7684\u7a7a\u95f4\u3002 \u5982\u679c\u7a7a\u95f4\u5141\u8bb8\uff0c\u5e03\u5c40\u5bb9\u5668\u4f1a\u6839\u636e\u6bcf\u4e2a\u5143\u7d20\u7684\u5185\u5bb9\u5c3d\u53ef\u80fd\u4e3a\u5143\u7d20\u8bbe\u7f6e\u66f4\u5408\u7406\u7684\u5c3a\u5bf8\u3002\u5b83\u4eec\u8fd8\u4f1a\u5411\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u5143\u7d20\u5206\u914d\u591a\u4f59\u7684\u7a7a\u95f4\u3002 \u53ef\u5d4c\u5957\u7684\u5e03\u5c40\u5bb9\u5668\u3002 \u5178\u578b\u7684\u7528\u6237\u754c\u9762\u4f7f\u7528Grid\u9762\u677f\u4f5c\u4e3a\u5f00\u59cb\uff0cGrid\u9762\u677f\u662f WPF \u4e2d\u529f\u80fd\u6700\u5f3a\u5927\u7684\u5bb9\u5668\uff0cGrid \u9762\u677f\u53ef\u5305\u542b\u5176\u4ed6\u5e03\u5c40\u5bb9\u5668\uff0c\u5305\u542b\u7684\u8fd9\u4e9b\u5bb9\u5668\u4ee5\u66f4\u5c0f\u7684\u5206\u7ec4\u6392\u5217\u5143\u7d20\uff0c\u6bd4\u5982\u5e26\u6709\u6807\u9898\u7684\u6587\u672c\u6846\u3001\u5217\u8868\u6846\u4e2d\u7684\u9879\u3001\u5de5\u5177\u680f\u4e0a\u7684\u56fe\u6807\u4ee5\u53ca\u4e00\u5217\u6309\u94ae\u7b49\u3002 \u5c3d\u7ba1\u5bf9\u4e8e\u8fd9\u51e0\u6761\u539f\u5219\u800c\u8a00\u4e5f\u6709\u4e00\u4e9b\u4f8b\u5916\uff0c\u4f46\u5b83\u4eec\u53cd\u6620\u4e86 WPF \u7684\u603b\u4f53\u8bbe\u8ba1\u76ee\u6807\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u521b\u5efa WPF \u5e94\u7528\u7a0b\u5e8f\u65f6\u9075\u5faa\u4e86\u8fd9\u4e9b\u539f\u5219\uff0c\u5c06\u4f1a\u521b\u5efa\u51fa\u66f4\u597d\u7684\u3001\u66f4\u7075\u6d3b\u7684\u7528\u6237\u754c\u9762\u3002\u5982\u679c\u4e0d\u9075\u5faa\u8fd9\u4e9b\u539f\u5219\uff0c\u6700\u7ec8\u5c06\u5f97\u5230\u4e0d\u662f\u5f88\u9002\u5408 WPF \u7684\u5e76\u4e14\u96be\u4ee5\u7ef4\u62a4\u7684\u7528\u6237\u754c\u9762\u3002","title":"WPF \u5e03\u5c40\u539f\u5219"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/16.%20%E7%90%86%E8%A7%A3%20WPF%20%E4%B8%AD%E7%9A%84%E5%B8%83%E5%B1%80/#_1","text":"WPF \u5e03\u5c40\u5305\u62ec\u4e24\u4e2a\u9636\u6bb5\uff1a\u6d4b\u91cf\uff08measure\uff09\u9636\u6bb5\u548c\u6392\u5217\uff08arrange\uff09\u9636\u6bb5\u3002\u5728\u6d4b\u91cf\u9636\u6bb5\uff0c\u5bb9\u5668\u904d\u5386\u6240\u6709\u5b50\u5143\u7d20\uff0c\u5e76\u8be2\u95ee\u5b50\u5143\u7d20\u5b83\u4eec\u6240\u671f\u671b\u7684\u5c3a\u5bf8\u3002\u5728\u6392\u5217\u9636\u6bb5\uff0c\u5bb9\u5668\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u653e\u7f6e\u5b50\u5143\u7d20\u3002 \u5f53\u7136\uff0c\u5143\u7d20\u672a\u5fc5\u603b\u80fd\u5f97\u5230\u6700\u5408\u9002\u7684\u5c3a\u5bf8\u2014\u2014\u6709\u65f6\u5bb9\u5668\u6ca1\u6709\u8db3\u591f\u5927\u7684\u7a7a\u95f4\u4ee5\u9002\u5e94\u6240\u542b\u7684\u5143\u7d20\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u4e3a\u4e86\u9002\u5e94\u53ef\u89c6\u5316\u533a\u57df\u7684\u5c3a\u5bf8\uff0c\u5c31\u5fc5\u987b\u526a\u88c1\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\u7684\u5143\u7d20\u3002\u901a\u5e38\u53ef\u901a\u8fc7\u8bbe\u7f6e\u6700\u5c0f\u7a97\u53e3\u5c3a\u5bf8\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002 \u5e03\u5c40\u5bb9\u5668\u4e0d\u80fd\u63d0\u4f9b\u4efb\u4f55\u6eda\u52a8\u652f\u6301\u3002\u6eda\u52a8\u65f6\u7531\u7279\u5b9a\u7684\u5185\u5bb9\u63a7\u4ef6\u2014\u2014ScrollViewer\u2014\u2014\u63d0\u4f9b\u7684\uff0cScrollViewer \u63a7\u4ef6\u51e0\u4e4e\u53ef\u7528\u4e8e\u4efb\u4f55\u5730\u65b9\u3002","title":"\u5e03\u5c40\u8fc7\u7a0b"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/16.%20%E7%90%86%E8%A7%A3%20WPF%20%E4%B8%AD%E7%9A%84%E5%B8%83%E5%B1%80/#_2","text":"\u6240\u6709 WPF \u5e03\u5c40\u5bb9\u5668\u90fd\u662f\u6d3e\u751f\u81ea System.Windows.Controls.Panel \u62bd\u8c61\u7c7b\u7684\u9762\u677f\u3002 Panel \u7c7b\u6dfb\u52a0\u4e86\u5c11\u91cf\u6210\u5458\uff0c\u5305\u62ec\u4e09\u4e2a\u516c\u6709\u5c5e\u6027\u3002 ![[\u7406\u89e3WPF\u5e03\u5c40_1.png]] ![[\u7406\u89e3WPF\u5e03\u5c40_2.png]] Panel \u7c7b\u8fd8\u5305\u542b\u51e0\u4e2a\u5185\u90e8\u5c5e\u6027\uff0c\u5982\u679c\u5e0c\u671b\u521b\u5efa\u81ea\u5df1\u7684\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\u6700\u7279\u522b\u7684\u662f\uff0c\u53ef\u91cd\u5199\u7ee7\u627f\u81ea FrameworkElement \u7c7b\u7684 MeasureOverride() \u548c ArrangeOverride() \u65b9\u6cd5\uff0c\u4ee5\u4fee\u6539\u5f53\u7ec4\u7ec7\u5b50\u5143\u7d20\u65f6\u9762\u677f\u5904\u7406\u6d4b\u91cf\u9636\u6bb5\u548c\u6392\u5217\u9636\u6bb5\u7684\u65b9\u5f0f\u3002 \u5c31 Panel \u57fa\u7c7b\u672c\u8eab\u800c\u8a00\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u4f46\u5b83\u65f6\u5176\u4ed6\u66f4\u591a\u7279\u6b8a\u7c7b\u7684\u8d77\u70b9\u3002WPF \u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u7528\u4e8e\u5b89\u6392\u5e03\u5c40\u7684\u7ee7\u627f\u81ea Panel \u7684\u7c7b\u3002\u4e0e\u6240\u6709 WPF \u63a7\u4ef6\u548c\u5927\u591a\u6570\u53ef\u89c6\u5316\u5143\u7d20\u4e00\u6837\uff0c\u8fd9\u4e9b\u7c7b\u4f4d\u4e8e System.Windows.Controls \u540d\u79f0\u7a7a\u95f4\u4e2d\u3002 ![[\u7406\u89e3WPF\u5e03\u5c40_3.png]] \u9664\u8fd9\u4e9b\u6838\u5fc3\u5bb9\u5668\u5916\uff0c\u8fd8\u6709\u51e0\u4e2a\u66f4\u4e13\u4e1a\u7684\u9762\u677f\uff0c\u5728\u5404\u79cd\u63a7\u4ef6\u4e2d\u90fd\u53ef\u80fd\u9047\u5230\u5b83\u4eec\u3002\u8fd9\u4e9b\u5bb9\u5668\u5305\u62ec\u4e13\u95e8\u7528\u4e8e\u5305\u542b\u7279\u5b9a\u63a7\u4ef6\u5b50\u5143\u7d20\u7684\u9762\u677f\u2014\u2014\u5982 TabPanel \u9762\u677f\uff08\u5728 TabPanel \u9762\u677f\u4e2d\u5305\u542b\u591a\u4e2a\u9009\u9879\u5361\uff09\u3001ToolbarPanel \u9762\u677f\uff08\u5de5\u5177\u680f\u4e2d\u7684\u591a\u4e2a\u6309\u94ae\uff09\u4ee5\u53ca ToolbarOverflowPanel \u9762\u677f\uff08Toolbar \u63a7\u4ef6\u7684\u6ea2\u51fa\u83dc\u5355\u4e2d\u7684\u591a\u4e2a\u547d\u4ee4\uff09\u3002\u8fd8\u6709 VirtuallizingStackPanel \u9762\u677f\uff0c\u6570\u636e\u7ed1\u5b9a\u5217\u8868\u63a7\u4ef6\u4f7f\u7528\u8be5\u9762\u677f\u4ee5\u5927\u5e45\u964d\u4f4e\u5f00\u9500\uff1b\u8fd8\u6709 InkCanvas \u63a7\u4ef6\uff0c\u8be5\u63a7\u4ef6\u548c Canvas \u63a7\u4ef6\u7c7b\u4f3c\uff0c\u4f46\u8be5\u63a7\u4ef6\u652f\u6301\u5904\u7406\u5e73\u677f\u7535\u8111\uff08TablePC\uff09\u4e0a\u7684\u624b\u5199\u7b14\uff08stylus\uff09\u8f93\u5165\uff08\u4f8b\u5982\uff0c\u6839\u636e\u9009\u62e9\u7684\u6a21\u5f0f\uff0cInkCanvas \u63a7\u4ef6\u652f\u6301\u4f7f\u7528\u6307\u9488\u7ed8\u5236\u8303\u56f4\uff0c\u4ee5\u9009\u62e9\u5c4f\u5e55\u4e0a\u7684\u5143\u7d20\u3002\u4e5f\u53ef\u901a\u8fc7\u666e\u901a\u8ba1\u7b97\u673a\u548c\u9f20\u6807\u4f7f\u7528 InkCanvas \u63a7\u4ef6\uff0c\u5c3d\u7ba1\u8fd9\u6709\u70b9\u8fdd\u53cd\u76f4\u89c9\uff09\u3002","title":"\u5e03\u5c40\u5bb9\u5668"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/17.%20%E4%BD%BF%E7%94%A8%20StackPanel%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%B8%83%E5%B1%80/","text":"StackPanel \u9762\u677f\u65f6\u6700\u7b80\u5355\u7684\u5e03\u5c40\u5bb9\u5668\u4e4b\u4e00\u3002\u8be5\u9762\u677f\u7b80\u5355\u5730\u5728\u5355\u884c\u6216\u5355\u5217\u4e2d\u4ee5\u5806\u6808\u5f62\u5f0f\u653e\u7f6e\u5176\u5b50\u5143\u7d20\u3002 \u4f8b\u5982\u4e0b\u9762\u7684 XAML \u6587\u6863\uff0c\u8be5\u7a97\u53e3\u5305\u542b 5 \u4e2a\u6309\u94ae\uff1a < Window x : Class = \"WpfApp1.MainWindow\" xmlns = \"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns : x = \"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns : d = \"http://schemas.microsoft.com/expression/blend/2008\" xmlns : mc = \"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns : local = \"clr-namespace:WpfApp1\" mc : Ignorable = \"d\" Title = \"SimpleStack\" Height = \"223\" Width = \"354\" > < StackPanel > < Label > A Button Stack </ Label > < Button > Button 1 </ Button > < Button > Button 2 </ Button > < Button > Button 3 </ Button > < Button > Button 4 </ Button > < Button > Button 5 </ Button > </ StackPanel > </ Window > \u663e\u793a\u6548\u679c\uff1a ![[StackPanel\u5e03\u5c40_1.png]] \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cStackPanel \u9762\u677f\u6309\u81ea\u4e0a\u800c\u4e0b\u7684\u987a\u5e8f\u6392\u5217\u5143\u7d20\uff0c\u4f7f\u6bcf\u4e2a\u5143\u7d20\u7684\u9ad8\u5ea6\u9002\u5408\u5b83\u7684\u5185\u5bb9\u3002\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6807\u7b7e\u548c\u6309\u94ae\u7684\u5927\u5c0f\u521a\u597d\u8db3\u591f\u4f7f\u7528\u5b83\u4eec\u5185\u90e8\u5305\u542b \u7684\u6587\u672c\u3002\u6240\u6709\u5143\u7d20\u90fd\u88ab\u62c9\u4f38\u5230 StackPanel \u9762\u677f\u7684\u6574\u4e2a\u5bbd\u5ea6\uff0c\u8fd9\u4e5f\u662f\u7a97\u53e3\u7684\u5bbd\u5ea6\u3002\u5982\u679c\u52a0\u5bbd\u7a97\u53e3\uff0cStackPanel \u9762\u677f\u4e5f\u4f1a\u53d8\u5bbd\uff0c\u5e76\u4e14\u6309\u94ae\u4e5f\u4f1a\u62c9\u4f38\u81ea\u8eab\u4ee5\u9002\u5e94\u53d8\u5316\u3002 \u901a\u8fc7\u8bbe\u7f6e Orientation \u5c5e\u6027\uff0cStackPanel \u9762\u677f\u4e5f\u53ef\u7528\u4e8e\u6c34\u5e73\u6392\u5217\u5143\u7d20\uff1a < StackPanel Orientation = \"Horizontal\" > ![[StackPanel\u5e03\u5c40_2.png]] \u73b0\u5728\uff0c\u5143\u7d20\u6307\u5b9a\u5b83\u4eec\u7684\u6700\u5c0f\u5bbd\u5ea6\uff08\u8db3\u4ee5\u9002\u5408\u5b83\u4eec\u6240\u5305\u542b\u7684\u6587\u672c\uff09\u5e76\u62c9\u4f38\u81f3\u5bb9\u5668\u9762\u677f\u7684\u6574\u4e2a\u9ad8\u5ea6\u3002\u6839\u636e\u7a97\u53e3\u7684\u5f53\u524d\u5927\u5c0f\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4e00\u4e9b\u5143\u7d20\u4e0d\u9002\u5e94\u3002 \u5e03\u5c40\u5c5e\u6027 \u5c3d\u7ba1\u5e03\u5c40\u7531\u5bb9\u5668\u51b3\u5b9a\uff0c\u4f46\u5b50\u5143\u7d20\u4ecd\u6709\u4e00\u5b9a\u7684\u51b3\u5b9a\u6743\u3002\u5b9e\u9645\u4e0a\uff0c\u5e03\u5c40\u9762\u677f\u652f\u6301\u4e00\u5c0f\u7ec4\u5e03\u5c40\u5c5e\u6027\uff0c\u4ee5\u4fbf\u4e0e\u5b50\u5143\u7d20\u7ed3\u5408\u4f7f\u7528\u3002 ![[StackPanel\u5e03\u5c40_3.png]] \u6240\u6709\u8fd9\u4e9b\u5c5e\u6027\u90fd\u4ece FrameworkElement \u57fa\u7c7b\u7ee7\u627f\u800c\u6765\uff0c\u6240\u4ee5\u5728 WPF \u7a97\u53e3\u4e2d\u53ef\u4f7f\u7528\u7684\u6240\u6709\u56fe\u50cf\u5c0f\u7ec4\u4ef6\u90fd\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027\u3002 \u8fd9\u4e2a\u5c5e\u6027\u5217\u8868\u5c31\u50cf\u5b83\u6240\u6ca1\u6709\u5305\u542b\u7684\u5c5e\u6027\u4e00\u6837\u503c\u5f97\u6ce8\u610f\u3002\u5982\u679c\u67e5\u627e\u719f\u6089\u7684\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u4f8b\u5982 Top \u5c5e\u6027\u3001Right \u5c5e\u6027\u4ee5\u53ca Location \u5c5e\u6027\uff0c\u4f7f\u4e0d\u4f1a\u627e\u5230\u5b83\u4eec\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u5e03\u5c40\u5bb9\u5668\uff08Canvas \u63a7\u4ef6\u9664\u5916\uff09\u90fd\u4f7f\u7528\u81ea\u52a8\u5e03\u5c40\uff0c\u5e76\u672a\u63d0\u4f9b\u663e\u793a\u5b9a\u4f4d\u5143\u7d20\u7684\u80fd\u529b\u3002 \u6700\u5c0f\u5c3a\u5bf8\u3001\u6700\u5927\u5c3a\u5bf8\u4ee5\u53ca\u663e\u5f0f\u5730\u8bbe\u7f6e\u5c3a\u5bf8 \u6bcf\u4e2a\u5143\u7d20\u90fd\u63d0\u4f9b\u4e86 Height \u548c Width \u5c5e\u6027\uff0c\u7528\u4e8e\u663e\u5f0f\u5730\u6307\u5b9a\u5143\u7d20\u5927\u5c0f\u3002\u4f46\u8fd9\u79cd\u8bbe\u7f6e\u4e00\u822c\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u76f8\u53cd\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u5e94\u5f53\u4f7f\u7528\u6700\u5927\u5c3a\u5bf8\u548c\u6700\u5c0f\u5c3a\u5bf8\u5c5e\u6027\uff0c\u5c06\u63a7\u4ef6\u9650\u5236\u5728\u6b63\u786e\u8303\u56f4\u5185\u3002 \u5728\u826f\u597d\u7684\u5e03\u5c40\u8bbe\u8ba1\u4e2d\uff0c\u4e0d\u5fc5\u663e\u5f0f\u5730\u8bbe\u7f6e\u5c3a\u5bf8\u3002\u5982\u679c\u786e\u5b9e\u6dfb\u52a0\u4e86\u5c3a\u5bf8\u4fe1\u606f\uff0c\u90a3\u5c31\u5192\u9669\u521b\u5efa\u4e86\u4e00\u79cd\u66f4\u4e0d\u7a33\u5b9a\u7684\u5e03\u5c40\uff0c\u8fd9\u79cd\u5e03\u5c40\u4e0d\u80fd\u9002\u5e94\u53d8\u5316\uff08\u4f8b\u5982\uff0c\u4e0d\u80fd\u9002\u5e94\u4e0d\u540c\u7684\u8bed\u8a00\u548c\u4e0d\u540c\u7684\u7a97\u53e3\u5c3a\u5bf8\uff09\uff0c\u800c\u4e14\u53ef\u80fd\u526a\u88c1\u5185\u5bb9\u3002 \u5f53 StackPanel \u8c03\u6574\u6309\u94ae\u7684\u5c3a\u5bf8\u65f6\uff0c\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u90e8\u5206\u4fe1\u606f\uff1a \u6700\u5c0f\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u6309\u94ae\u7684\u5c3a\u5bf8\u59cb\u7ec8\u4e0d\u80fd\u5c0f\u4e8e\u6700\u5c0f\u5c3a\u5bf8\u3002 \u6700\u5927\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u6309\u94ae\u7684\u5c3a\u5bf8\u59cb\u7ec8\u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u5c3a\u5bf8\uff08\u9664\u975e\u6267\u884c\u9519\u8bef\u64cd\u4f5c\uff0c\u4f7f\u6700\u5927\u5c3a\u5bf8\u6bd4\u6700\u5c0f\u5c3a\u5bf8\u8fd8\u5c0f\uff09\u3002 \u5185\u5bb9\u3002 \u5982\u679c\u6309\u94ae\u4e2d\u7684\u5185\u5bb9\u9700\u8981\u66f4\u5927\u7684\u5bbd\u5ea6\uff0cStackPanel \u5bb9\u5668\u4f1a\u5c1d\u8bd5\u6269\u5c55\u6309\u94ae\uff08\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 DesiredSized \u5c5e\u6027\u786e\u5b9a\u6240\u9700\u7684\u6309\u94ae\u5927\u5c0f\uff0c\u8be5\u5c5e\u6027\u8fd4\u56de\u6700\u5c0f\u5bbd\u5ea6\u6216\u5185\u5bb9\u5bbd\u5ea6\uff0c\u8fd4\u56de\u4e24\u8005\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\uff09\u3002 \u5bb9\u5668\u5c3a\u5bf8\u3002 \u5982\u679c\u6700\u5c0f\u5bbd\u5ea6\u5927\u4e8e StackPanel \u9762\u677f\u7684\u5bbd\u5ea6\uff0c\u6309\u94ae\u7684\u4e00\u90e8\u5206\u5c06\u88ab\u526a\u88c1\u6389\u3002\u5426\u5219\uff0c\u4e0d\u5141\u8bb8\u6309\u94ae\u6bd4 StackPanel \u9762\u677f\u66f4\u5bbd\uff0c\u5373\u4f7f\u4e0d\u80fd\u9002\u5408\u6309\u94ae\u8868\u9762\u7684\u6240\u6709\u6587\u672c\u4e5f\u540c\u6837\u5982\u6b64\u3002 \u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\u3002 \u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6309\u94ae\u7684 HorizontalAlignment \u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a Stretch\uff0c\u6240\u4ee5 StackPanel \u9762\u677f\u5c06\u5c1d\u8bd5\u653e\u5927\u6309\u94ae\u4ee5\u5360\u6ee1 StackPanel \u9762\u677f\u7684\u6574\u4e2a\u5bbd\u5ea6\u3002 \u7406\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5173\u952e\u5728\u4e8e\uff0c\u8981\u8ba4\u8bc6\u5230\u6700\u5c0f\u5c3a\u5bf8\u548c\u6700\u5927\u5c3a\u5bf8\u8bbe\u7f6e\u4e86\u7edd\u5bf9\u754c\u9650\u3002\u5728\u8fd9\u4e9b\u754c\u9650\u5185\uff0cStackPanel \u9762\u677f\u5c1d\u8bd5\u53cd\u6620\u6309\u94ae\u6240\u671f\u671b\u7684\u5c3a\u5bf8\uff08\u4ee5\u9002\u5408\u5176\u5185\u5bb9\uff09\u4ee5\u53ca\u5bf9\u9f50\u65b9\u5f0f\u7684\u8bbe\u7f6e\u3002 \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u4ee3\u7801\u68c0\u67e5\u7a97\u53e3\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u5c3a\u5bf8\u3002\u8fd9\u65f6\u4f7f\u7528 Height \u548c Width \u5c5e\u6027\u65f6\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5c5e\u6027\u6307\u793a\u7684\u662f\u4f60\u6240\u671f\u671b\u7684\u5c3a\u5bf8\u8bbe\u7f6e\uff0c\u53ef\u80fd\u548c\u5b9e\u9645\u7684\u6e32\u67d3\u5c3a\u5bf8\u4e0d\u540c\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5e94\u8ba9\u5143\u7d20\u7684\u5c3a\u5bf8\u9002\u5e94\u5b83\u4eec\u7684\u5185\u5bb9\uff0c\u6839\u672c\u4e0d\u7528\u8bbe\u7f6e Height \u548c Width \u5c5e\u6027\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6 ActualHeight \u548c ActualWidth \u5c5e\u6027\u5f97\u5230\u7528\u4e8e\u6e32\u67d3\u5143\u7d20\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002\u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff0c\u5f53\u7a97\u53e3\u5927\u5c0f\u53d1\u751f\u53d8\u5316\u6216\u5176\u4e2d\u7684\u5185\u5bb9\u6539\u53d8\u65f6\uff0c\u8fd9\u4e9b\u503c\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u9876\u7ea7\u7a97\u53e3\u5177\u6709\u786c\u7f16\u7801\u7684\u5c3a\u5bf8\u3002\u51fa\u4e8e\u5f88\u591a\u539f\u7531\uff0c\u53ef\u8ba4\u4e3a\u4f7f\u7528\u786c\u7f16\u7801\u7684\u7a97\u53e3\u5c3a\u5bf8\u4ecd\u7136\u6709\u610f\u4e49\u3002 \u4f46\u53ef\u4ee5\u81ea\u52a8\u6539\u53d8\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u5982\u679c\u4f7f\u7528\u52a8\u6001\u5185\u5bb9\u6784\u9020\u7b80\u5355\u7a97\u53e3\uff0c\u8fd9\u8fd8\u662f\u6709\u610f\u4e49\u7684\u3002\u4e3a\u4f7f\u7a97\u53e3\u80fd\u81ea\u52a8\u6539\u53d8\u5927\u5c0f\uff0c\u9700\u8981\u5220\u9664 Height\u548c Width \u5c5e\u6027\uff0c\u5e76\u5c06 Window.SizeToContent \u5c5e\u6027\u8bbe\u7f6e\u4e3a WidthAndHeight\u3002\u8fd9\u65f6\u7a97\u53e3\u5c31\u4f1a\u6269\u5927\u81ea\u8eab\u7684\u5c3a\u5bf8\uff0c\u4ece\u800c\u8db3\u4ee5\u5bb9\u7eb3\u5305\u542b\u7684\u6240\u6709\u5185\u5bb9\u3002\u901a\u8fc7\u5c06 SizeToContent \u5c5e\u6027\u8bbe\u7f6e\u4e3a Width \u6216 Height\uff0c\u8fd8\u53ef\u4f7f\u7a97\u53e3\u53ea\u80fd\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u6539\u53d8\u81ea\u8eab\u7684\u5c3a\u5bf8\u3002 Border \u63a7\u4ef6 Border \u63a7\u4ef6\u4e0d\u662f\u5e03\u5c40\u9762\u677f\uff0c\u800c\u662f\u975e\u5e38\u4fbf\u4e8e\u4f7f\u7528\u7684\u5143\u7d20\uff0c\u7ecf\u5e38\u4e0e\u5e03\u5c40\u9762\u677f\u4e00\u8d77\u4f7f\u7528\u3002 Border \u7c7b\u975e\u5e38\u7b80\u5355\u3002\u5b83\u53ea\u80fd\u5305\u542b\u4e00\u6bb5\u5d4c\u5957\u5185\u5bb9\uff08\u901a\u5e38\u662f\u5e03\u5c40\u9762\u677f\uff09\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u80cc\u666f\u6216\u5728\u5176\u5468\u56f4\u6dfb\u52a0\u8fb9\u6846\u3002 ![[StackPanel\u5e03\u5c40_4.png]] \u4ece\u6280\u672f\u89d2\u5ea6\u770b\uff0cBorder \u662f\u88c5\u9970\u5143\u7d20\uff08decorator\uff09\uff0c\u88c5\u9970\u5143\u7d20\u662f\u7279\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u5bf9\u8c61\u5468\u56f4\u6dfb\u52a0\u67d0\u4e9b\u79cd\u7c7b\u7684\u56fe\u5f62\u88c5\u9970\u3002\u6240\u6709\u88c5\u9970\u5143\u7d20\u90fd\u7ee7\u627f\u81ea System.Windows.Controls.Decorator \u7c7b\u3002\u5927\u591a\u6570\u88c5\u9970\u5143\u7d20\u8bbe\u8ba1\u7528\u4e8e\u7279\u5b9a\u63a7\u4ef6\u3002\u4f8b\u5982\uff0cButton \u63a7\u4ef6\u4f7f\u7528 ButtonChrome \u88c5\u9970\u5143\u7d20\uff0c\u4ee5\u83b7\u53d6\u5176\u7279\u6709\u7684\u5706\u89d2\u548c\u9634\u5f71\u80cc\u666f\u6548\u679c\uff1b\u800c ListBox \u63a7\u4ef6\u4f7f\u7528 ListBoxChrome \u88c5\u9970\u5143\u7d20\u3002\u8fd8\u6709\u4e24\u4e2a\u66f4\u901a\u7528\u7684\u88c5\u9970\u5143\u7d20\uff0c\u5f53\u6784\u9020\u7528\u6237\u754c\u9762\u65f6\u5b83\u4eec\u975e\u5e38\u6709\u7528\uff1aBorder \u548c Viewbox \u5143\u7d20\u3002","title":"17. \u4f7f\u7528 StackPanel \u9762\u677f\u8fdb\u884c\u7b80\u5355\u5e03\u5c40"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/17.%20%E4%BD%BF%E7%94%A8%20StackPanel%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%B8%83%E5%B1%80/#_1","text":"\u5c3d\u7ba1\u5e03\u5c40\u7531\u5bb9\u5668\u51b3\u5b9a\uff0c\u4f46\u5b50\u5143\u7d20\u4ecd\u6709\u4e00\u5b9a\u7684\u51b3\u5b9a\u6743\u3002\u5b9e\u9645\u4e0a\uff0c\u5e03\u5c40\u9762\u677f\u652f\u6301\u4e00\u5c0f\u7ec4\u5e03\u5c40\u5c5e\u6027\uff0c\u4ee5\u4fbf\u4e0e\u5b50\u5143\u7d20\u7ed3\u5408\u4f7f\u7528\u3002 ![[StackPanel\u5e03\u5c40_3.png]] \u6240\u6709\u8fd9\u4e9b\u5c5e\u6027\u90fd\u4ece FrameworkElement \u57fa\u7c7b\u7ee7\u627f\u800c\u6765\uff0c\u6240\u4ee5\u5728 WPF \u7a97\u53e3\u4e2d\u53ef\u4f7f\u7528\u7684\u6240\u6709\u56fe\u50cf\u5c0f\u7ec4\u4ef6\u90fd\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027\u3002 \u8fd9\u4e2a\u5c5e\u6027\u5217\u8868\u5c31\u50cf\u5b83\u6240\u6ca1\u6709\u5305\u542b\u7684\u5c5e\u6027\u4e00\u6837\u503c\u5f97\u6ce8\u610f\u3002\u5982\u679c\u67e5\u627e\u719f\u6089\u7684\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u4f8b\u5982 Top \u5c5e\u6027\u3001Right \u5c5e\u6027\u4ee5\u53ca Location \u5c5e\u6027\uff0c\u4f7f\u4e0d\u4f1a\u627e\u5230\u5b83\u4eec\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u5927\u591a\u6570\u5e03\u5c40\u5bb9\u5668\uff08Canvas \u63a7\u4ef6\u9664\u5916\uff09\u90fd\u4f7f\u7528\u81ea\u52a8\u5e03\u5c40\uff0c\u5e76\u672a\u63d0\u4f9b\u663e\u793a\u5b9a\u4f4d\u5143\u7d20\u7684\u80fd\u529b\u3002","title":"\u5e03\u5c40\u5c5e\u6027"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/17.%20%E4%BD%BF%E7%94%A8%20StackPanel%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%B8%83%E5%B1%80/#_2","text":"\u6bcf\u4e2a\u5143\u7d20\u90fd\u63d0\u4f9b\u4e86 Height \u548c Width \u5c5e\u6027\uff0c\u7528\u4e8e\u663e\u5f0f\u5730\u6307\u5b9a\u5143\u7d20\u5927\u5c0f\u3002\u4f46\u8fd9\u79cd\u8bbe\u7f6e\u4e00\u822c\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u76f8\u53cd\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u5e94\u5f53\u4f7f\u7528\u6700\u5927\u5c3a\u5bf8\u548c\u6700\u5c0f\u5c3a\u5bf8\u5c5e\u6027\uff0c\u5c06\u63a7\u4ef6\u9650\u5236\u5728\u6b63\u786e\u8303\u56f4\u5185\u3002 \u5728\u826f\u597d\u7684\u5e03\u5c40\u8bbe\u8ba1\u4e2d\uff0c\u4e0d\u5fc5\u663e\u5f0f\u5730\u8bbe\u7f6e\u5c3a\u5bf8\u3002\u5982\u679c\u786e\u5b9e\u6dfb\u52a0\u4e86\u5c3a\u5bf8\u4fe1\u606f\uff0c\u90a3\u5c31\u5192\u9669\u521b\u5efa\u4e86\u4e00\u79cd\u66f4\u4e0d\u7a33\u5b9a\u7684\u5e03\u5c40\uff0c\u8fd9\u79cd\u5e03\u5c40\u4e0d\u80fd\u9002\u5e94\u53d8\u5316\uff08\u4f8b\u5982\uff0c\u4e0d\u80fd\u9002\u5e94\u4e0d\u540c\u7684\u8bed\u8a00\u548c\u4e0d\u540c\u7684\u7a97\u53e3\u5c3a\u5bf8\uff09\uff0c\u800c\u4e14\u53ef\u80fd\u526a\u88c1\u5185\u5bb9\u3002 \u5f53 StackPanel \u8c03\u6574\u6309\u94ae\u7684\u5c3a\u5bf8\u65f6\uff0c\u9700\u8981\u8003\u8651\u4ee5\u4e0b\u51e0\u90e8\u5206\u4fe1\u606f\uff1a \u6700\u5c0f\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u6309\u94ae\u7684\u5c3a\u5bf8\u59cb\u7ec8\u4e0d\u80fd\u5c0f\u4e8e\u6700\u5c0f\u5c3a\u5bf8\u3002 \u6700\u5927\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u6309\u94ae\u7684\u5c3a\u5bf8\u59cb\u7ec8\u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u5c3a\u5bf8\uff08\u9664\u975e\u6267\u884c\u9519\u8bef\u64cd\u4f5c\uff0c\u4f7f\u6700\u5927\u5c3a\u5bf8\u6bd4\u6700\u5c0f\u5c3a\u5bf8\u8fd8\u5c0f\uff09\u3002 \u5185\u5bb9\u3002 \u5982\u679c\u6309\u94ae\u4e2d\u7684\u5185\u5bb9\u9700\u8981\u66f4\u5927\u7684\u5bbd\u5ea6\uff0cStackPanel \u5bb9\u5668\u4f1a\u5c1d\u8bd5\u6269\u5c55\u6309\u94ae\uff08\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 DesiredSized \u5c5e\u6027\u786e\u5b9a\u6240\u9700\u7684\u6309\u94ae\u5927\u5c0f\uff0c\u8be5\u5c5e\u6027\u8fd4\u56de\u6700\u5c0f\u5bbd\u5ea6\u6216\u5185\u5bb9\u5bbd\u5ea6\uff0c\u8fd4\u56de\u4e24\u8005\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\uff09\u3002 \u5bb9\u5668\u5c3a\u5bf8\u3002 \u5982\u679c\u6700\u5c0f\u5bbd\u5ea6\u5927\u4e8e StackPanel \u9762\u677f\u7684\u5bbd\u5ea6\uff0c\u6309\u94ae\u7684\u4e00\u90e8\u5206\u5c06\u88ab\u526a\u88c1\u6389\u3002\u5426\u5219\uff0c\u4e0d\u5141\u8bb8\u6309\u94ae\u6bd4 StackPanel \u9762\u677f\u66f4\u5bbd\uff0c\u5373\u4f7f\u4e0d\u80fd\u9002\u5408\u6309\u94ae\u8868\u9762\u7684\u6240\u6709\u6587\u672c\u4e5f\u540c\u6837\u5982\u6b64\u3002 \u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f\u3002 \u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6309\u94ae\u7684 HorizontalAlignment \u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a Stretch\uff0c\u6240\u4ee5 StackPanel \u9762\u677f\u5c06\u5c1d\u8bd5\u653e\u5927\u6309\u94ae\u4ee5\u5360\u6ee1 StackPanel \u9762\u677f\u7684\u6574\u4e2a\u5bbd\u5ea6\u3002 \u7406\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5173\u952e\u5728\u4e8e\uff0c\u8981\u8ba4\u8bc6\u5230\u6700\u5c0f\u5c3a\u5bf8\u548c\u6700\u5927\u5c3a\u5bf8\u8bbe\u7f6e\u4e86\u7edd\u5bf9\u754c\u9650\u3002\u5728\u8fd9\u4e9b\u754c\u9650\u5185\uff0cStackPanel \u9762\u677f\u5c1d\u8bd5\u53cd\u6620\u6309\u94ae\u6240\u671f\u671b\u7684\u5c3a\u5bf8\uff08\u4ee5\u9002\u5408\u5176\u5185\u5bb9\uff09\u4ee5\u53ca\u5bf9\u9f50\u65b9\u5f0f\u7684\u8bbe\u7f6e\u3002 \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u4ee3\u7801\u68c0\u67e5\u7a97\u53e3\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u5c3a\u5bf8\u3002\u8fd9\u65f6\u4f7f\u7528 Height \u548c Width \u5c5e\u6027\u65f6\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5c5e\u6027\u6307\u793a\u7684\u662f\u4f60\u6240\u671f\u671b\u7684\u5c3a\u5bf8\u8bbe\u7f6e\uff0c\u53ef\u80fd\u548c\u5b9e\u9645\u7684\u6e32\u67d3\u5c3a\u5bf8\u4e0d\u540c\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5e94\u8ba9\u5143\u7d20\u7684\u5c3a\u5bf8\u9002\u5e94\u5b83\u4eec\u7684\u5185\u5bb9\uff0c\u6839\u672c\u4e0d\u7528\u8bbe\u7f6e Height \u548c Width \u5c5e\u6027\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6 ActualHeight \u548c ActualWidth \u5c5e\u6027\u5f97\u5230\u7528\u4e8e\u6e32\u67d3\u5143\u7d20\u7684\u5b9e\u9645\u5c3a\u5bf8\u3002\u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff0c\u5f53\u7a97\u53e3\u5927\u5c0f\u53d1\u751f\u53d8\u5316\u6216\u5176\u4e2d\u7684\u5185\u5bb9\u6539\u53d8\u65f6\uff0c\u8fd9\u4e9b\u503c\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u5728\u672c\u4f8b\u4e2d\uff0c\u9876\u7ea7\u7a97\u53e3\u5177\u6709\u786c\u7f16\u7801\u7684\u5c3a\u5bf8\u3002\u51fa\u4e8e\u5f88\u591a\u539f\u7531\uff0c\u53ef\u8ba4\u4e3a\u4f7f\u7528\u786c\u7f16\u7801\u7684\u7a97\u53e3\u5c3a\u5bf8\u4ecd\u7136\u6709\u610f\u4e49\u3002 \u4f46\u53ef\u4ee5\u81ea\u52a8\u6539\u53d8\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u5982\u679c\u4f7f\u7528\u52a8\u6001\u5185\u5bb9\u6784\u9020\u7b80\u5355\u7a97\u53e3\uff0c\u8fd9\u8fd8\u662f\u6709\u610f\u4e49\u7684\u3002\u4e3a\u4f7f\u7a97\u53e3\u80fd\u81ea\u52a8\u6539\u53d8\u5927\u5c0f\uff0c\u9700\u8981\u5220\u9664 Height\u548c Width \u5c5e\u6027\uff0c\u5e76\u5c06 Window.SizeToContent \u5c5e\u6027\u8bbe\u7f6e\u4e3a WidthAndHeight\u3002\u8fd9\u65f6\u7a97\u53e3\u5c31\u4f1a\u6269\u5927\u81ea\u8eab\u7684\u5c3a\u5bf8\uff0c\u4ece\u800c\u8db3\u4ee5\u5bb9\u7eb3\u5305\u542b\u7684\u6240\u6709\u5185\u5bb9\u3002\u901a\u8fc7\u5c06 SizeToContent \u5c5e\u6027\u8bbe\u7f6e\u4e3a Width \u6216 Height\uff0c\u8fd8\u53ef\u4f7f\u7a97\u53e3\u53ea\u80fd\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u6539\u53d8\u81ea\u8eab\u7684\u5c3a\u5bf8\u3002","title":"\u6700\u5c0f\u5c3a\u5bf8\u3001\u6700\u5927\u5c3a\u5bf8\u4ee5\u53ca\u663e\u5f0f\u5730\u8bbe\u7f6e\u5c3a\u5bf8"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/17.%20%E4%BD%BF%E7%94%A8%20StackPanel%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E5%B8%83%E5%B1%80/#border","text":"Border \u63a7\u4ef6\u4e0d\u662f\u5e03\u5c40\u9762\u677f\uff0c\u800c\u662f\u975e\u5e38\u4fbf\u4e8e\u4f7f\u7528\u7684\u5143\u7d20\uff0c\u7ecf\u5e38\u4e0e\u5e03\u5c40\u9762\u677f\u4e00\u8d77\u4f7f\u7528\u3002 Border \u7c7b\u975e\u5e38\u7b80\u5355\u3002\u5b83\u53ea\u80fd\u5305\u542b\u4e00\u6bb5\u5d4c\u5957\u5185\u5bb9\uff08\u901a\u5e38\u662f\u5e03\u5c40\u9762\u677f\uff09\uff0c\u5e76\u4e3a\u5176\u6dfb\u52a0\u80cc\u666f\u6216\u5728\u5176\u5468\u56f4\u6dfb\u52a0\u8fb9\u6846\u3002 ![[StackPanel\u5e03\u5c40_4.png]] \u4ece\u6280\u672f\u89d2\u5ea6\u770b\uff0cBorder \u662f\u88c5\u9970\u5143\u7d20\uff08decorator\uff09\uff0c\u88c5\u9970\u5143\u7d20\u662f\u7279\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u5bf9\u8c61\u5468\u56f4\u6dfb\u52a0\u67d0\u4e9b\u79cd\u7c7b\u7684\u56fe\u5f62\u88c5\u9970\u3002\u6240\u6709\u88c5\u9970\u5143\u7d20\u90fd\u7ee7\u627f\u81ea System.Windows.Controls.Decorator \u7c7b\u3002\u5927\u591a\u6570\u88c5\u9970\u5143\u7d20\u8bbe\u8ba1\u7528\u4e8e\u7279\u5b9a\u63a7\u4ef6\u3002\u4f8b\u5982\uff0cButton \u63a7\u4ef6\u4f7f\u7528 ButtonChrome \u88c5\u9970\u5143\u7d20\uff0c\u4ee5\u83b7\u53d6\u5176\u7279\u6709\u7684\u5706\u89d2\u548c\u9634\u5f71\u80cc\u666f\u6548\u679c\uff1b\u800c ListBox \u63a7\u4ef6\u4f7f\u7528 ListBoxChrome \u88c5\u9970\u5143\u7d20\u3002\u8fd8\u6709\u4e24\u4e2a\u66f4\u901a\u7528\u7684\u88c5\u9970\u5143\u7d20\uff0c\u5f53\u6784\u9020\u7528\u6237\u754c\u9762\u65f6\u5b83\u4eec\u975e\u5e38\u6709\u7528\uff1aBorder \u548c Viewbox \u5143\u7d20\u3002","title":"Border \u63a7\u4ef6"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/18.%20WrapPanel%20%E5%92%8C%20DockPanel%20%E9%9D%A2%E6%9D%BF/","text":"\u663e\u7136\uff0c\u53ea\u4f7f\u7528 StackPanel \u9762\u677f\u8fd8\u4e0d\u80fd\u521b\u5efa\u51fa\u5b9e\u7528\u7684\u7528\u6237\u754c\u9762\u3002\u8981\u8bbe\u8ba1\u51fa\u6700\u7ec8\u4f7f\u7528\u7684\u7528\u6237\u754c\u9762\uff0cStackPanel \u9762\u677f\u8fd8\u9700\u8981\u4e0e\u5176\u4ed6\u66f4\u5f3a\u5927\u7684\u5e03\u5c40\u5bb9\u5668\u534f\u4f5c\u3002\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u7ec4\u88c5\u6210\u5b8c\u6574\u7684\u7a97\u53e3\u3002 WrapPanel \u9762\u677f WrapPanel \u9762\u677f\u5728\u53ef\u80fd\u7684\u7a7a\u95f4\u4e2d\uff0c\u4ee5\u4e00\u6b21\u4e00\u884c\u6216\u4e00\u5217\u7684\u65b9\u5f0f\u5e03\u7f6e\u63a7\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cWrapPanel.Orientation \u5c5e\u6027\u8bbe\u7f6e\u4e3a Horizontal\uff1b\u63a7\u4ef6\u4ece\u5de6\u5411\u53f3\u8fdb\u884c\u6392\u5217\uff0c\u518d\u5728\u4e0b\u4e00\u884c\u4e2d\u6392\u5217\u3002\u4f46\u53ef\u5c06 WrapPanel.Orientation \u5c5e\u6027\u8bbe\u7f6e\u4e3a Vertical\uff0c\u4ece\u800c\u5728\u591a\u4e2a\u5217\u4e2d\u653e\u7f6e\u5143\u7d20\u3002 \u4e0e StackPanel \u9762\u677f\u7c7b\u4f3c\uff0cWrapPanel \u9762\u677f\u5b9e\u9645\u4e0a\u4e3b\u8981\u7528\u6765\u63a7\u5236\u7528\u6237\u754c\u9762\u4e2d\u4e00\u5c0f\u90e8\u5206\u7684\u5e03\u5c40\u7ec6\u8282\uff0c\u5e76\u975e\u7528\u4e8e\u63a7\u5236\u6574\u4e2a\u7a97\u53e3\u5e03\u5c40\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u4f7f\u7528 WrapPanel \u9762\u677f\u4ee5\u7c7b\u4f3c\u5de5\u5177\u680f\u63a7\u4ef6\u7684\u65b9\u5f0f\u5c06\u6240\u6709\u6309\u94ae\u4fdd\u6301\u5728\u4e00\u8d77\u3002 DockPanel \u9762\u677f DockPanel \u9762\u677f\u662f\u66f4\u6709\u8da3\u7684\u5e03\u5c40\u9009\u9879\u3002\u5b83\u6cbf\u7740\u4e00\u6761\u5916\u8fb9\u7f18\u6765\u62c9\u4f38\u6240\u5305\u542b\u7684\u63a7\u4ef6\u3002\u7406\u89e3\u8be5\u9762\u677f\u6700\u7b80\u4fbf\u7684\u65b9\u6cd5\u662f\uff0c\u8003\u8651\u4ee5\u4e0b\u4f4d\u4e8e\u8bb8\u591a Windows \u5e94\u7528\u7a0b\u5e8f\u9876\u90e8\u7684\u5de5\u5177\u680f\u3002\u8fd9\u4e9b\u5de5\u5177\u680f\u505c\u9760\u5230\u7a97\u53e3\u9876\u90e8\uff0c\u4e0e StackPanel \u9762\u677f\u7c7b\u4f3c\uff0c\u88ab\u505c\u9760\u7684\u5143\u7d20\u9009\u62e9\u5b83\u4eec\u5e03\u5c40\u7684\u4e00\u4e2a\u65b9\u9762\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5c06\u4e00\u4e2a\u6309\u94ae\u505c\u9760\u5728 DockPanel \u9762\u677f\u7684\u9876\u90e8\uff0c\u8be5\u6309\u94ae\u4f1a\u88ab\u62c9\u4f38\u81f3 DockPanel \u9762\u677f\u7684\u6574\u4e2a\u5bbd\u5ea6\uff0c\u4f46\u6839\u636e\u5185\u5bb9\u548c MinHeight \u5c5e\u6027\u4e3a\u5176\u8bbe\u7f6e\u6240\u9700\u7684\u9ad8\u5ea6\u3002\u800c\u5982\u679c\u4e00\u4e2a\u6309\u94ae\u505c\u9760\u5230\u5bb9\u5668\u5de6\u8fb9\uff0c\u8be5\u6309\u94ae\u7684\u9ad8\u5ea6\u5c06\u88ab\u62c9\u4f38\u4ee5\u9002\u5e94\u5bb9\u5668\u7684\u9ad8\u5ea6\uff0c\u800c\u5176\u5bbd\u5ea6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u7531\u589e\u52a0\u3002","title":"18. WrapPanel \u548c DockPanel \u9762\u677f"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/18.%20WrapPanel%20%E5%92%8C%20DockPanel%20%E9%9D%A2%E6%9D%BF/#wrappanel","text":"WrapPanel \u9762\u677f\u5728\u53ef\u80fd\u7684\u7a7a\u95f4\u4e2d\uff0c\u4ee5\u4e00\u6b21\u4e00\u884c\u6216\u4e00\u5217\u7684\u65b9\u5f0f\u5e03\u7f6e\u63a7\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cWrapPanel.Orientation \u5c5e\u6027\u8bbe\u7f6e\u4e3a Horizontal\uff1b\u63a7\u4ef6\u4ece\u5de6\u5411\u53f3\u8fdb\u884c\u6392\u5217\uff0c\u518d\u5728\u4e0b\u4e00\u884c\u4e2d\u6392\u5217\u3002\u4f46\u53ef\u5c06 WrapPanel.Orientation \u5c5e\u6027\u8bbe\u7f6e\u4e3a Vertical\uff0c\u4ece\u800c\u5728\u591a\u4e2a\u5217\u4e2d\u653e\u7f6e\u5143\u7d20\u3002 \u4e0e StackPanel \u9762\u677f\u7c7b\u4f3c\uff0cWrapPanel \u9762\u677f\u5b9e\u9645\u4e0a\u4e3b\u8981\u7528\u6765\u63a7\u5236\u7528\u6237\u754c\u9762\u4e2d\u4e00\u5c0f\u90e8\u5206\u7684\u5e03\u5c40\u7ec6\u8282\uff0c\u5e76\u975e\u7528\u4e8e\u63a7\u5236\u6574\u4e2a\u7a97\u53e3\u5e03\u5c40\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u4f7f\u7528 WrapPanel \u9762\u677f\u4ee5\u7c7b\u4f3c\u5de5\u5177\u680f\u63a7\u4ef6\u7684\u65b9\u5f0f\u5c06\u6240\u6709\u6309\u94ae\u4fdd\u6301\u5728\u4e00\u8d77\u3002","title":"WrapPanel \u9762\u677f"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/18.%20WrapPanel%20%E5%92%8C%20DockPanel%20%E9%9D%A2%E6%9D%BF/#dockpanel","text":"DockPanel \u9762\u677f\u662f\u66f4\u6709\u8da3\u7684\u5e03\u5c40\u9009\u9879\u3002\u5b83\u6cbf\u7740\u4e00\u6761\u5916\u8fb9\u7f18\u6765\u62c9\u4f38\u6240\u5305\u542b\u7684\u63a7\u4ef6\u3002\u7406\u89e3\u8be5\u9762\u677f\u6700\u7b80\u4fbf\u7684\u65b9\u6cd5\u662f\uff0c\u8003\u8651\u4ee5\u4e0b\u4f4d\u4e8e\u8bb8\u591a Windows \u5e94\u7528\u7a0b\u5e8f\u9876\u90e8\u7684\u5de5\u5177\u680f\u3002\u8fd9\u4e9b\u5de5\u5177\u680f\u505c\u9760\u5230\u7a97\u53e3\u9876\u90e8\uff0c\u4e0e StackPanel \u9762\u677f\u7c7b\u4f3c\uff0c\u88ab\u505c\u9760\u7684\u5143\u7d20\u9009\u62e9\u5b83\u4eec\u5e03\u5c40\u7684\u4e00\u4e2a\u65b9\u9762\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5c06\u4e00\u4e2a\u6309\u94ae\u505c\u9760\u5728 DockPanel \u9762\u677f\u7684\u9876\u90e8\uff0c\u8be5\u6309\u94ae\u4f1a\u88ab\u62c9\u4f38\u81f3 DockPanel \u9762\u677f\u7684\u6574\u4e2a\u5bbd\u5ea6\uff0c\u4f46\u6839\u636e\u5185\u5bb9\u548c MinHeight \u5c5e\u6027\u4e3a\u5176\u8bbe\u7f6e\u6240\u9700\u7684\u9ad8\u5ea6\u3002\u800c\u5982\u679c\u4e00\u4e2a\u6309\u94ae\u505c\u9760\u5230\u5bb9\u5668\u5de6\u8fb9\uff0c\u8be5\u6309\u94ae\u7684\u9ad8\u5ea6\u5c06\u88ab\u62c9\u4f38\u4ee5\u9002\u5e94\u5bb9\u5668\u7684\u9ad8\u5ea6\uff0c\u800c\u5176\u5bbd\u5ea6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u7531\u589e\u52a0\u3002","title":"DockPanel \u9762\u677f"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/","text":"Grid \u9762\u677f\u662f WPF \u4e2d\u529f\u80fd\u6700\u5f3a\u5927\u7684\u5e03\u5c40\u5bb9\u5668\u3002\u5f88\u591a\u4f7f\u7528\u5176\u4ed6\u5e03\u5c40\u63a7\u4ef6\u80fd\u5b8c\u6210\u7684\u529f\u80fd\uff0c\u7528 Grid \u9762\u677f\u4e5f\u80fd\u5b9e\u73b0\u3002Grid \u9762\u677f\u4e5f\u662f\u5c06\u7a97\u53e3\u5206\u5272\u6210\uff08\u53ef\u4f7f\u7528\u5176\u4ed6\u9762\u677f\u8fdb\u884c\u7ba1\u7406\u7684\uff09\u66f4\u5c0f\u533a\u57df\u7684\u7406\u60f3\u5de5\u5177\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e Grid \u9762\u677f\u5341\u5206\u6709\u7528\uff0c\u56e0\u6b64\u5728 Visual Studio \u4e2d\u4e3a\u7a97\u53e3\u6dfb\u52a0\u65b0\u7684 XAML \u6587\u6863\u65f6\uff0c\u4f1a\u81ea\u52a8\u6dfb\u52a0 Grid \u6807\u7b7e\u4f5c\u4e3a\u9876\u7ea7\u5bb9\u5668\uff0c\u5e76\u5d4c\u5957\u5728 Window \u6839\u5143\u7d20\u4e2d\u3002 Grid \u9762\u677f\u5c06\u5143\u7d20\u5206\u9694\u5230\u4e0d\u53ef\u89c1\u7684\u884c\u5217\u7f51\u683c\u4e2d\u3002\u5c3d\u7ba1\u53ef\u5728\u4e00\u4e2a\u5355\u5143\u683c\u4e2d\u653e\u7f6e\u591a\u4e2a\u5143\u7d20\uff08\u8fd9\u65f6\u8fd9\u4e9b\u5143\u7d20\u4f1a\u76f8\u4e92\u91cd\u53e0\uff09\uff0c\u4f46\u5728\u6bcf\u4e2a\u5355\u5143\u683c\u4e2d\u53ea\u653e\u7f6e\u4e00\u4e2a\u5143\u7d20\u901a\u5e38\u66f4\u5408\u7406\u3002\u5f53\u7136\uff0c\u5728 Grid \u5355\u5143\u683c\u4e2d\u7684\u5143\u7d20\u672c\u8eab\u4e5f\u53ef\u80fd\u65f6\u53e6\u4e00\u4e2a\u5bb9\u5668\uff0c\u8be5\u5bb9\u5668\u7ec4\u7ec7\u5b83\u6240\u5305\u542b\u7684\u4e00\u7ec4\u63a7\u4ef6\u3002 \u5c3d\u7ba1 Grid \u9762\u677f\u88ab\u8bbe\u8ba1\u6210\u4e0d\u53ef\u89c1\u7684\uff0c\u4f46\u53ef\u5c06 Grid.ShowGridLines \u5c5e\u6027\u8bbe\u7f6e\u4e3a true\uff0c\u4ece\u800c\u66f4\u6e05\u6670\u5730\u89c2\u5bdf Grid \u9762\u677f\u3002\u8fd9\u4e00\u7279\u6027\u5e76\u4e0d\u662f\u771f\u6b63\u89c6\u56fe\u7f8e\u5316\u7a97\u53e3\uff0c\u53cd\u800c\u662f\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\uff0c\u8bbe\u8ba1\u8be5\u7279\u6027\u65e8\u5728\u5e2e\u52a9\u7406\u89e3 Grid \u9762\u677f\u5982\u4f55\u5c06\u5176\u81ea\u8eab\u5206\u5272\u6210\u591a\u4e2a\u8f83\u5c0f\u7684\u533a\u57df\u3002\u8fd9\u4e00\u7279\u6027\u5341\u5206\u91cd\u8981\uff0c\u56e0\u4e3a\u901a\u8fc7\u8be5\u7279\u6027\u53ef\u51c6\u786e\u63a7\u5236 Grid \u5982\u4f55\u9009\u62e9\u5217\u5bbd\u548c\u884c\u9ad8\u3002 \u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\u6765\u521b\u5efa\u57fa\u4e8eGrid \u9762\u677f\u7684\u5e03\u5c40\u3002\u9996\u5148\uff0c\u9009\u62e9\u5e0c\u671b\u4f7f\u7528\u7684\u884c\u548c\u5217\u7684\u6570\u91cf\u3002\u7136\u540e\uff0c\u4e3a\u6bcf\u4e2a\u5305\u542b\u7684\u5143\u7d20\u6307\u5b9a\u6070\u5f53\u7684\u884c\u548c\u5217\uff0c\u4ece\u800c\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u653e\u7f6e\u5143\u7d20\u3002 Grid \u9762\u677f\u901a\u8fc7\u4f7f\u7528\u5bf9\u8c61\u586b\u5145 Grid.ColumnDefinitions \u548c Grid.RowDefinitions \u96c6\u5408\u6765\u521b\u5efa\u7f51\u683c\u548c\u884c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u786e\u5b9a\u4e24\u884c\u548c\u4e09\u5217\uff0c\u53ef\u6dfb\u52a0\u4ee5\u4e0b\u6807\u7b7e\uff1a < Grid ShowGridLines = \"True\" > < Grid . RowDefinitions > < RowDefinition ></ RowDefinition > < RowDefinition ></ RowDefinition > </ Grid . RowDefinitions > < Grid . ColumnDefinitions > < ColumnDefinition ></ ColumnDefinition > < ColumnDefinition ></ ColumnDefinition > < ColumnDefinition ></ ColumnDefinition > </ Grid . ColumnDefinitions > </ Grid > \u6b63\u5982\u672c\u4f8b\u6240\u6f14\u793a\u7684\uff0c\u5728 RowDefinition \u6216 ColumnDefinition \u5143\u7d20\u4e2d\u4e0d\u5fc5\u63d0\u4f9b\u4efb\u4f55\u4fe1\u606f\u3002\u5982\u679c\u4fdd\u6301\u5b83\u4eec\u4e3a\u7a7a\uff0cGrid \u9762\u677f\u5c06\u5728\u6240\u6709\u884c\u548c\u5217\u4e4b\u95f4\u5e73\u5747\u5206\u914d\u7a7a\u95f4\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u5c3a\u5bf8\u5b8c\u5168\u76f8\u540c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u5305\u542b\u7a97\u53e3\u7684\u5c3a\u5bf8\u3002 \u4e3a\u5728\u5355\u5143\u683c\u4e2d\u653e\u7f6e\u5404\u4e2a\u5143\u7d20\uff0c\u9700\u8981\u4f7f\u7528 Row \u548c Column \u9644\u52a0\u5c5e\u6027\u3002\u8fd9\u4e24\u4e2a\u5c5e\u6027\u7684\u503c\u90fd\u662f\u4ece 0 \u5f00\u59cb\u7684\u7d22\u5f15\u6570\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u6807\u8bb0\u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa Grid \u9762\u677f\uff0c\u5e76\u4f7f\u7528\u6309\u94ae\u586b\u5145 Grid \u9762\u677f\u7684\u90e8\u5206\u5355\u5143\u683c\u3002 < Grid ShowGridLines = \"True\" > < Grid . RowDefinitions > < RowDefinition ></ RowDefinition > < RowDefinition ></ RowDefinition > </ Grid . RowDefinitions > < Grid . ColumnDefinitions > < ColumnDefinition ></ ColumnDefinition > < ColumnDefinition ></ ColumnDefinition > < ColumnDefinition ></ ColumnDefinition > </ Grid . ColumnDefinitions > < Button Grid . Row = \"0\" Grid . Column = \"0\" > Top Left </ Button > < Button Grid . Row = \"0\" Grid . Column = \"1\" > Top Middle </ Button > < Button Grid . Row = \"1\" Grid . Column = \"2\" > Bottom Right </ Button > < Button Grid . Row = \"1\" Grid . Column = \"1\" > Bottom Middle </ Button > </ Grid > \u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u88ab\u660e\u786e\u5730\u653e\u5728\u5bf9\u5e94\u7684\u5355\u5143\u683c\u4e2d\u3002\u53ef\u5728\u5355\u5143\u683c\u4e2d\u653e\u7f6e\u591a\u4e2a\u5143\u7d20\uff08\u901a\u5e38\u8fd9\u6ca1\u4ec0\u4e48\u610f\u4e49\uff09\uff0c\u6216\u8ba9\u5355\u5143\u683c\u4fdd\u6301\u4e3a\u7a7a\uff08\u8fd9\u901a\u5e38\u662f\u6709\u7528\u7684\uff09\u3002\u4e5f\u53ef\u4ee5\u4e0d\u6309\u987a\u5e8f\u58f0\u660e\u5143\u7d20\uff0c\u6b63\u5982\u672c\u4f8b\u4e2d\u7684\u6700\u540e\u4e24\u4e2a\u6309\u94ae\u90a3\u6837\u3002\u4f46\u5982\u679c\u9010\u884c\uff08\u5e76\u5728\u6bcf\u884c\u4e2d\u6309\u4ece\u53f3\u5411\u5de6\u7684\u987a\u5e8f\uff09\u5b9a\u4e49\u63a7\u4ef6\uff0c\u53ef\u4f7f\u6807\u8bb0\u66f4\u6e05\u6670\u3002 \u5982\u679c\u4e0d\u6307\u5b9a Grid.Row \u5c5e\u6027\uff0cGrid \u9762\u677f\u4f1a\u5047\u5b9a\u8be5\u5c5e\u6027\u7684\u503c\u4e3a 0\u3002\u5bf9\u4e8e Grid.Column \u5c5e\u6027\u4e5f\u662f\u5982\u6b64\u3002\u56e0\u6b64\uff0c\u5728 Grid \u9762\u677f\u7684\u7b2c\u4e00\u4e2a\u5355\u5143\u683c\u4e2d\u653e\u7f6e\u5143\u7d20\u65f6\u53ef\u4e0d\u6307\u5b9a\u8fd9\u4e24\u4e2a\u5c5e\u6027\u3002 Grid \u9762\u677f\u5728\u9884\u5b9a\u4e49\u7684\u884c\u548c\u5217\u4e2d\u653e\u7f6e\u5143\u7d20\u3002\u8fd9\u4e0e WrapPanel \u548c DockPanel \u9762\u677f\uff08\u5f53\u5b83\u4eec\u5e03\u7f6e\u5b50\u5143\u7d20\u65f6\uff0c\u4f1a\u9690\u5f0f\u5730\u521b\u5efa\u884c\u6216\u5217\uff09\u7b49\u5e03\u5c40\u5bb9\u5668\u4e0d\u540c\u3002\u5982\u679c\u5e0c\u671b\u521b\u5efa\u5177\u6709\u591a\u884c\u548c\u591a\u5217\u7684\u7f51\u683c\uff0c\u5c31\u5fc5\u987b\u4f7f\u7528 RowDefinitions \u548c ColumnDefinitions \u5bf9\u8c61\u663e\u5f0f\u5730\u5b9a\u4e49\u884c\u548c\u5217\u3002 \u8c03\u6574\u884c\u548c\u5217 \u5982\u679c Grid \u9762\u677f\u53ea\u662f\u6309\u6bd4\u4f8b\u5206\u914d\u5c3a\u5bf8\u7684\u884c\u548c\u5217\u7684\u96c6\u5408\uff0c\u5b83\u4e5f\u5c31\u6ca1\u4ec0\u4e48\u7528\u5904\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u4e3a\u4e86\u5145\u5206\u53d1\u6325 Grid \u9762\u677f\u7684\u6f5c\u80fd\uff0c\u53ef\u66f4\u6539\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002 Grid \u9762\u677f\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65b9\u5f0f\uff1a \u7edd\u5bf9\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u4f7f\u7528\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u51c6\u786e\u5730\u8bbe\u7f6e\u5c3a\u5bf8\u3002\u8fd9\u662f\u6700\u65e0\u7528\u7684\u7b56\u7565\uff0c\u56e0\u4e3a\u8fd9\u79cd\u7b56\u7565\u4e0d\u591f\u7075\u6d3b\uff0c\u96be\u4ee5\u9002\u5e94\u5185\u5bb9\u5927\u5c0f\u548c\u5bb9\u5668\u5927\u5c0f\u7684\u6539\u53d8\uff0c\u800c\u4e14\u96be\u4ee5\u5904\u7406\u672c\u5730\u5316\u3002 \u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u6bcf\u884c\u548c\u6bcf\u5217\u7684\u5c3a\u5bf8\u521a\u597d\u6ee1\u8db3\u9700\u8981\u3002\u8fd9\u662f\u6700\u6709\u7528\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002 \u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u6309\u6bd4\u4f8b\u5c06\u7a7a\u95f4\u5206\u5272\u5230\u4e00\u7ec4\u884c\u548c\u5217\u4e2d\u3002\u8fd9\u662f\u5bf9\u6240\u6709\u884c\u548c\u5217\u7684\u6807\u51c6\u8bbe\u7f6e\u3002 \u4e3a\u4e86\u83b7\u5f97\u6700\u5927\u7684\u7075\u6d3b\u6027\uff0c\u53ef\u6df7\u5408\u4f7f\u7528\u8fd9\u4e09\u79cd\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u521b\u5efa\u51e0\u4e2a\u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u884c\uff0c\u7136\u540e\u901a\u8fc7\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65b9\u5f0f\u8ba9\u6700\u540e\u7684\u4e00\u884c\u6216\u4e24\u884c\u5145\u6ee1\u5269\u4f59\u7a7a\u95f4\uff0c\u8fd9\u901a\u5e38\u662f\u6709\u7528\u7684\u3002 \u53ef\u901a\u8fc7\u5c06 ColumnDefinition \u5bf9\u8c61\u7684 Width \u5c5e\u6027\u6216 RowDefinition \u5bf9\u8c61\u7684 Height \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u6570\u503c\u6765\u786e\u5b9a\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8bbe\u7f6e 100 \u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u7684\u7edd\u5bf9\u9ad8\u5ea6\uff1a < ColumnDefinition Width = \"100\" ></ ColumnDefinition > \u4e3a\u4f7f\u7528\u81ea\u52a8\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u53ef\u4f7f\u7528 Auto \u503c\uff1a < ColumnDefinition Width = \"Auto\" ></ ColumnDefinition > \u6700\u540e\uff0c\u4e3a\u4e86\u4f7f\u7528\u6309\u6bd4\u4f8b\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u9700\u8981\u4f7f\u7528\u661f\u53f7 * \uff1a < ColumnDefinition Width = \"*\" ></ ColumnDefinition > \u5982\u679c\u6df7\u5408\u4f7f\u7528\u6309\u6bd4\u4f8b\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u548c\u5176\u4ed6\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5728\u5269\u4f59\u7684\u4efb\u610f\u7a7a\u95f4\u6309\u6bd4\u4f8b\u6539\u53d8\u884c\u6216\u5217\u7684\u5c3a\u5bf8\u3002 \u5982\u679c\u5e0c\u671b\u4e0d\u5747\u5300\u5730\u5206\u5272\u5269\u4f59\u7a7a\u95f4\uff0c\u53ef\u6307\u5b9a\u6743\u91cd\uff0c\u6743\u91cd\u5fc5\u987b\u653e\u5728\u661f\u53f7\u4e4b\u524d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e24\u884c\u662f\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\uff0c\u5e76\u5e0c\u671b\u7b2c\u4e00\u884c\u7684\u9ad8\u5ea6\u662f\u7b2c\u4e8c\u884c\u9ad8\u5ea6\u7684\u4e00\u534a\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8bbe\u7f6e\u6765\u5206\u914d\u5269\u4f59\u7a7a\u95f4\uff1a < RowDefinition Height = \"*\" ></ RowDefinition > < RowDefinition Height = \"2*\" ></ RowDefinition > \u4e0a\u9762\u7684\u4ee3\u7801\u544a\u8bc9 Grid \u9762\u677f\uff0c\u7b2c\u4e8c\u884c\u7684\u9ad8\u5ea6\u5e94\u662f\u7b2c\u4e00\u884c\u9ad8\u5ea6\u7684\u4e24\u500d\u3002\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6570\u5b57\u6765\u5212\u5206\u5269\u4f59\u7a7a\u95f4\u3002 \u901a\u8fc7\u4ee3\u7801\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4e0e ColumnDefinition \u548c RowDefinition \u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002\u53ea\u9700\u8981\u77e5\u9053 Width \u548c Height \u5c5e\u6027\u662f GridLength \u7c7b\u578b\u7684\u5bf9\u8c61\u5373\u53ef\u3002\u4e3a\u521b\u5efa\u8868\u793a\u7279\u5b9a\u5c3a\u5bf8\u7684 GridLength \u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u4e3a GridLength \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f20\u9012\u4e00\u4e2a\u5408\u9002\u7684\u6570\u503c\u5373\u53ef\u3002\u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684 GridLength \u5bf9\u8c61\uff0c\u53ef\u4e3a GridLength \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f20\u9012\u6570\u503c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4f20\u9012 GridUnitType.Start \u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u8981\u6307\u5b9a\u4f7f\u7528\u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\uff0c\u53ef\u4f7f\u7528\u9759\u6001\u5c5e\u6027 GridLength.Auto\u3002 \u5e03\u5c40\u820d\u5165 WPF \u4f7f\u7528\u5206\u8fa8\u7387\u65e0\u5173\u7684\u6d4b\u91cf\u7cfb\u7edf\uff0c\u8be5\u6d4b\u91cf\u7cfb\u7edf\u4e3a\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u7684\u786c\u4ef6\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\uff0c\u4f46\u6709\u65f6\u4e5f\u4f1a\u5f15\u5165\u4e00\u4e9b\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f\u5143\u7d20\u53ef\u80fd\u88ab\u5bf9\u9f50\u5230\u5b50\u50cf\u7d20\uff08subpixel\uff09\u8fb9\u754c\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f7f\u7528\u6ca1\u6709\u548c\u7269\u7406\u50cf\u7d20\u51c6\u786e\u5bf9\u9f50\u7684\u5c0f\u6570\u5750\u6807\u5b9a\u4f4d\u5143\u7d20\u3002\u53ef\u901a\u8fc7\u4e3a\u76f8\u90bb\u7684\u5e03\u5c40\u5bb9\u5668\u63d0\u4f9b\u975e\u6574\u6570\u5c3a\u5bf8\u5f3a\u5236\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u5f53\u4e0d\u5e0c\u671b\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8be5\u95ee\u9898\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u4f8b\u5982\u5f53\u521b\u5efa\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684 Grid \u9762\u677f\u65f6\u5c31\u53ef\u80fd\u53d1\u751f\u8be5\u95ee\u9898\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u4e24\u5217\u4e14\u5177\u6709 200 \u50cf\u7d20\u7684 Grid \u9762\u677f\u3002\u5982\u679c\u5c06\u8be5\u9762\u677f\u5747\u5300\u5206\u6210\u4e24\u4e2a\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u5217\uff0c\u90a3\u4e48\u610f\u5473\u7740\u6bcf\u5217\u4e3a 100 \u50cf\u7d20\u5bbd\u3002\u4f46\u662f\u5982\u679c\u8fd9\u4e2a Grid \u9762\u677f \u7684\u5bbd\u5ea6\u4e3a 175 \u50cf\u7d20\uff0c\u5c31\u4e0d\u80fd\u5f88\u6e05\u6670\u5730\u5206\u5272\u6210\u4e24\u5217\uff0c\u5e76\u4e14\u6bcf\u5217\u4e3a 87.5 \u50cf\u7d20\u3002\u8fd9\u610f\u5473\u7740\u7b2c\u4e8c\u8f6e\u4f1a\u548c\u539f\u59cb\u7684\u50cf\u7d20\u8fb9\u754c\u7a0d\u6709\u4e9b\u9519\u4f4d\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u8be5\u5217\u5305\u542b\u4e00\u4e2a\u5f62\u72b6\u5143\u7d20\u3001\u4e00\u4e2a\u8fb9\u6846\u6216\u4e00\u5e45\u56fe\u50cf\uff0c\u90a3\u4e48\u8be5\u5185\u5bb9\u7684\u663e\u793a\u53ef\u80fd\u662f\u6a21\u7cca\u7684\uff0c\u56e0\u4e3a WPF \u4f1a\u4f7f\u7528\u53cd\u952f\u9f7f\u529f\u80fd\u201c\u6df7\u5408\u201d\u539f\u672c\u6e05\u6670\u7684\u50cf\u7d20\u8fb9\u754c\u8fb9\u7f18\u3002 ![[Grid\u9762\u677f.png]] \u5982\u56fe\uff0c\u4e0a\u9762\u7684 Grid \u9762\u677f\u6ca1\u6709\u4f7f\u7528\u5e03\u5c40\u820d\u5165\uff08layout rounding\uff09\uff0c\u6240\u4ee5\u77e9\u5f62\u7684\u6e05\u6670\u8fb9\u7f18\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5c3a\u5bf8\u4e0b\u53d8\u5f97\u6a21\u7cca\u4e86\u3002 \u53ea\u9700\u8981\u5c06\u5e03\u5c40\u5bb9\u5668\u7684 UseLayoutRounding \u5c5e\u6027\u8bbe\u7f6e\u4e3a true\uff1a < Grid UseLayoutRounding = \"True\" > \u73b0\u5728\uff0cWPF \u4f1a\u786e\u4fdd\u5e03\u5c40\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u5bf9\u9f50\u5230\u6700\u8fd1\u7684\u50cf\u7d20\u8fb9\u754c\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u6240\u6709\u6a21\u7cca\u7684\u95ee\u9898\u3002 \u8de8\u8d8a\u884c\u548c\u5217 RowSpan \u548c ColumnSpan \u8fd9\u4e24\u4e2a\u5c5e\u6027\u4f7f\u5143\u7d20\u8de8\u8d8a\u591a\u4e2a\u5355\u5143\u683c\uff0c\u4f7f\u7528\u5143\u7d20\u5c06\u4f1a\u5360\u6709\u7684\u884c\u6570\u548c\u5217\u6570\u8fdb\u884c\u8bbe\u7f6e\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6309\u94ae\u5c06\u5360\u636e\u7b2c\u4e00\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5355\u5143\u683c\u7684\u6240\u6709\u7a7a\u95f4\uff1a < Button Grid . Row = \"0\" Grid . Column = \"0\" Grid . ColumnSpan = \"2\" > Span Button </ Button > \u901a\u8fc7\u8de8\u8d8a\u884c\u548c\u5217\u53ef\u5f97\u5230\u66f4\u6709\u8da3\u7684\u6548\u679c\uff0c\u5f53\u9700\u8981\u5728\u7531\u5206\u5272\u5668\u6216\u66f4\u957f\u7684\u5185\u5bb9\u533a\u57df\u5206\u5f00\u7684\u8868\u683c\u7ed3\u6784\u4e2d\u653e\u7f6e\u5143\u7d20\u65f6\uff0c\u8fd9\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002 \u5206\u5272\u7a97\u53e3 \u6bcf\u4e2a Windows \u7528\u6237\u90fd\u89c1\u8fc7\u5206\u5272\u6761\u2014\u2014\u80fd\u5c06\u7a97\u53e3\u7684\u4e00\u90e8\u5206\u4e0e\u53e6\u4e00\u90e8\u5206\u5206\u79bb\u7684\u53ef\u62d6\u52a8\u5206\u5272\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u65f6\uff0c\u4f1a\u770b\u5230\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\uff08\u5728\u5de6\u8fb9\uff09\u548c\u4e00\u7cfb\u5217\u6587\u4ef6\uff08\u5728\u53f3\u8fb9\uff09\u3002\u53ef\u62d6\u52a8\u5b83\u4eec\u4e4b\u95f4\u7684\u5206\u5272\u6761\u6765\u786e\u5b9a\u6bcf\u90e8\u5206\u5360\u636e\u7a97\u53e3\u7684\u6bd4\u4f8b\u3002 \u5728 WPF \u4e2d\uff0c\u5206\u5272\u6761\u7531 GridSplitter \u7c7b\u8868\u793a\uff0c\u5b83\u662f Grid \u9762\u677f\u7684\u529f\u80fd\u4e4b\u4e00\u3002\u901a\u8fc7\u4e3a Grid \u9762\u677f\u6dfb\u52a0 GridSplitter \u5bf9\u8c61\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u6539\u53d8\u884c\u548c\u5217\u7684\u5c3a\u5bf8\u3002 \u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a WPF \u4e2d\u7684 GridSplitter \u7c7b\u4e0d\u662f\u6700\u76f4\u89c2\u7684\u3002\u7406\u89e3\u5982\u4f55\u4f7f\u7528 GridSplitter \u7c7b\uff0c\u4ece\u800c\u5f97\u5230\u6240\u671f\u671b\u7684\u6548\u679c\u9700\u8981\u4e00\u5b9a\u7684\u7ecf\u9a8c\u3002\u4e0b\u9762\u5217\u51fa\u51e0\u6761\u77e5\u9053\u539f\u5219\uff1a GridSplitter \u5bf9\u8c61\u5fc5\u987b\u653e\u5728 Grid \u5355\u5143\u683c\u4e2d\u3002\u53ef\u4e0e\u5df2\u7ecf\u5b58\u5728\u7684\u5185\u5bb9\u4e00\u5e76\u653e\u5230\u5355\u5143\u683c\u4e2d\uff0c\u8fd9\u65f6\u9700\u8981\u8c03\u6574\u8fb9\u8ddd\u8bbe\u7f6e\uff0c\u4f7f\u5b83\u4eec\u4e0d\u76f8\u4e92\u91cd\u53e0\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u4f7f\u9884\u7559\u4e00\u5217\u6216\u4e00\u884c\u4e13\u95e8\u7528\u4e8e\u653e\u7f6e GridSplitter \u5bf9\u8c61\uff0c\u5e76\u5c06\u9884\u7559\u884c\u6216\u5217\u7684 Height \u6216 Width \u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u4e3a Auto\u3002 GridSplitter \u5bf9\u8c61\u603b\u662f\u6539\u53d8\u6574\u884c\u6216\u6574\u5217\u7684\u5c3a\u5bf8\uff08\u800c\u975e\u6539\u53d8\u5355\u4e2a\u5355\u5143\u683c\u7684\u5c3a\u5bf8\uff09\u3002\u4e3a\u4f7f GridSplitter \u5bf9\u8c61\u7684\u5916\u89c2\u548c\u884c\u4e3a\u4fdd\u6301\u4e00\u81f4\uff0c\u9700\u8981\u62c9\u4f38 GridSplitter \u5bf9\u8c61\u4f7f\u5176\u7a7f\u8d8a\u6574\u884c\u6216\u6574\u5217\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u9650\u5236\u5728\u5355\u5143\u683c\u4e2d\u3002\u4e3a\u6b64\uff0c\u53ef\u4f7f\u7528 RowSpan \u6216 ColumnSpan \u5c5e\u6027\u3002 \u6700\u521d\uff0cGridSplitter \u5bf9\u8c61\u5f88\u5c0f\u4e0d\u6613\u770b\u89c1\u3002\u4e3a\u4e86\u4f7f\u5176\u66f4\u53ef\u7528\uff0c\u9700\u8981\u4e3a\u5176\u8bbe\u7f6e\u6700\u5c0f\u5c3a\u5bf8\u3002\u5bf9\u4e8e\u7ad6\u76f4\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 VerticalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Stretch\uff08\u4f7f\u5206\u5272\u6761\u586b\u6ee1\u533a\u57df\u7684\u6574\u4e2a\u9ad8\u5ea6\uff09\uff0c\u5e76\u5c06 Width \u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\uff08\u5982 10 \u4e2a\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\uff09\u3002\u5bf9\u4e8e\u6c34\u5e73\u5206\u5272\u6761\uff0c\u9700\u8981\u8bbe\u7f6e HorizontalAlignment \u5c5e\u6027\u6765\u62c9\u4f38\uff0c\u5e76\u5c06 Height \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\u3002 GridSplitter \u5bf9\u9f50\u65b9\u5f0f\u8fd8\u51b3\u5b9a\u4e86\u5206\u5272\u6761\u662f\u6c34\u5e73\u7684\uff08\u7528\u4e8e\u6539\u53d8\u884c\u7684\u5c3a\u5bf8\uff09\u8fd8\u662f\u7ad6\u76f4\u7684\uff08\u7528\u4e8e\u6539\u53d8\u5217\u7684\u5c3a\u5bf8\uff09\u3002\u5bf9\u4e8e\u6c34\u5e73\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 VerticalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Center\uff08\u8fd9\u4e5f\u662f\u9ed8\u8ba4\u503c\uff09\uff0c\u4ee5\u6307\u660e\u62d6\u52a8\u5206\u5272\u6761\u6539\u53d8\u4e0a\u9762\u884c\u548c\u4e0b\u9762\u884c\u7684\u5c3a\u5bf8\u3002\u5bf9\u4e8e\u7ad6\u76f4\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 HorizontalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Center\uff0c\u4ee5\u6539\u53d8\u5206\u5272\u6761\u4e24\u4fa7\u5217\u7684\u5c3a\u5bf8\u3002 \u5171\u4eab\u5c3a\u5bf8\u7ec4 \u5171\u4eab\u5c3a\u5bf8\u7ec4\u7684\u76ee\u6807\u662f\u4fdd\u6301\u7528\u6237\u754c\u9762\u72ec\u7acb\u90e8\u5206\u7684\u4e00\u81f4\u6027\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u5e0c\u671b\u6539\u53d8\u4e00\u5217\u7684\u5c3a\u5bf8\u4ee5\u9002\u5e94\u5176\u5185\u5bb9\uff0c\u5e76\u6539\u53d8\u53e6\u4e00\u5217\u7684\u5c3a\u5bf8\u4f7f\u5176\u4e0e\u524d\u9762\u4e00\u5217\u6539\u53d8\u540e\u7684\u5c3a\u5bf8\u76f8\u5339\u914d\u3002\u7136\u800c\uff0c\u5171\u4eab\u5c3a\u5bf8\u7ec4\u7684\u771f\u6b63\u4f18\u70b9\u662f\u4f7f\u72ec\u7acb\u7684 Grid \u7a7a\u95f4\u5177\u6709\u76f8\u540c\u7684\u6bd4\u4f8b\u3002 \u521b\u5efa\u5171\u4eab\u7ec4\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u8bbe\u7f6e\u4e24\u5217\u7684 SharedSizeGroup \u5c5e\u6027\u5373\u53ef\u3002","title":"19. Grid \u9762\u677f"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/#_1","text":"\u5982\u679c Grid \u9762\u677f\u53ea\u662f\u6309\u6bd4\u4f8b\u5206\u914d\u5c3a\u5bf8\u7684\u884c\u548c\u5217\u7684\u96c6\u5408\uff0c\u5b83\u4e5f\u5c31\u6ca1\u4ec0\u4e48\u7528\u5904\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\u4e3a\u4e86\u5145\u5206\u53d1\u6325 Grid \u9762\u677f\u7684\u6f5c\u80fd\uff0c\u53ef\u66f4\u6539\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002 Grid \u9762\u677f\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65b9\u5f0f\uff1a \u7edd\u5bf9\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u4f7f\u7528\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u51c6\u786e\u5730\u8bbe\u7f6e\u5c3a\u5bf8\u3002\u8fd9\u662f\u6700\u65e0\u7528\u7684\u7b56\u7565\uff0c\u56e0\u4e3a\u8fd9\u79cd\u7b56\u7565\u4e0d\u591f\u7075\u6d3b\uff0c\u96be\u4ee5\u9002\u5e94\u5185\u5bb9\u5927\u5c0f\u548c\u5bb9\u5668\u5927\u5c0f\u7684\u6539\u53d8\uff0c\u800c\u4e14\u96be\u4ee5\u5904\u7406\u672c\u5730\u5316\u3002 \u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u6bcf\u884c\u548c\u6bcf\u5217\u7684\u5c3a\u5bf8\u521a\u597d\u6ee1\u8db3\u9700\u8981\u3002\u8fd9\u662f\u6700\u6709\u7528\u7684\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002 \u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\u3002 \u6309\u6bd4\u4f8b\u5c06\u7a7a\u95f4\u5206\u5272\u5230\u4e00\u7ec4\u884c\u548c\u5217\u4e2d\u3002\u8fd9\u662f\u5bf9\u6240\u6709\u884c\u548c\u5217\u7684\u6807\u51c6\u8bbe\u7f6e\u3002 \u4e3a\u4e86\u83b7\u5f97\u6700\u5927\u7684\u7075\u6d3b\u6027\uff0c\u53ef\u6df7\u5408\u4f7f\u7528\u8fd9\u4e09\u79cd\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u521b\u5efa\u51e0\u4e2a\u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u884c\uff0c\u7136\u540e\u901a\u8fc7\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u65b9\u5f0f\u8ba9\u6700\u540e\u7684\u4e00\u884c\u6216\u4e24\u884c\u5145\u6ee1\u5269\u4f59\u7a7a\u95f4\uff0c\u8fd9\u901a\u5e38\u662f\u6709\u7528\u7684\u3002 \u53ef\u901a\u8fc7\u5c06 ColumnDefinition \u5bf9\u8c61\u7684 Width \u5c5e\u6027\u6216 RowDefinition \u5bf9\u8c61\u7684 Height \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u6570\u503c\u6765\u786e\u5b9a\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8bbe\u7f6e 100 \u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u7684\u7edd\u5bf9\u9ad8\u5ea6\uff1a < ColumnDefinition Width = \"100\" ></ ColumnDefinition > \u4e3a\u4f7f\u7528\u81ea\u52a8\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u53ef\u4f7f\u7528 Auto \u503c\uff1a < ColumnDefinition Width = \"Auto\" ></ ColumnDefinition > \u6700\u540e\uff0c\u4e3a\u4e86\u4f7f\u7528\u6309\u6bd4\u4f8b\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u9700\u8981\u4f7f\u7528\u661f\u53f7 * \uff1a < ColumnDefinition Width = \"*\" ></ ColumnDefinition > \u5982\u679c\u6df7\u5408\u4f7f\u7528\u6309\u6bd4\u4f8b\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\u548c\u5176\u4ed6\u5c3a\u5bf8\u8bbe\u7f6e\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5728\u5269\u4f59\u7684\u4efb\u610f\u7a7a\u95f4\u6309\u6bd4\u4f8b\u6539\u53d8\u884c\u6216\u5217\u7684\u5c3a\u5bf8\u3002 \u5982\u679c\u5e0c\u671b\u4e0d\u5747\u5300\u5730\u5206\u5272\u5269\u4f59\u7a7a\u95f4\uff0c\u53ef\u6307\u5b9a\u6743\u91cd\uff0c\u6743\u91cd\u5fc5\u987b\u653e\u5728\u661f\u53f7\u4e4b\u524d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e24\u884c\u662f\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\uff0c\u5e76\u5e0c\u671b\u7b2c\u4e00\u884c\u7684\u9ad8\u5ea6\u662f\u7b2c\u4e8c\u884c\u9ad8\u5ea6\u7684\u4e00\u534a\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8bbe\u7f6e\u6765\u5206\u914d\u5269\u4f59\u7a7a\u95f4\uff1a < RowDefinition Height = \"*\" ></ RowDefinition > < RowDefinition Height = \"2*\" ></ RowDefinition > \u4e0a\u9762\u7684\u4ee3\u7801\u544a\u8bc9 Grid \u9762\u677f\uff0c\u7b2c\u4e8c\u884c\u7684\u9ad8\u5ea6\u5e94\u662f\u7b2c\u4e00\u884c\u9ad8\u5ea6\u7684\u4e24\u500d\u3002\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6570\u5b57\u6765\u5212\u5206\u5269\u4f59\u7a7a\u95f4\u3002 \u901a\u8fc7\u4ee3\u7801\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u4e0e ColumnDefinition \u548c RowDefinition \u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002\u53ea\u9700\u8981\u77e5\u9053 Width \u548c Height \u5c5e\u6027\u662f GridLength \u7c7b\u578b\u7684\u5bf9\u8c61\u5373\u53ef\u3002\u4e3a\u521b\u5efa\u8868\u793a\u7279\u5b9a\u5c3a\u5bf8\u7684 GridLength \u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u4e3a GridLength \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f20\u9012\u4e00\u4e2a\u5408\u9002\u7684\u6570\u503c\u5373\u53ef\u3002\u4e3a\u4e86\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684 GridLength \u5bf9\u8c61\uff0c\u53ef\u4e3a GridLength \u7c7b\u7684\u6784\u9020\u51fd\u6570\u4f20\u9012\u6570\u503c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4f20\u9012 GridUnitType.Start \u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002\u8981\u6307\u5b9a\u4f7f\u7528\u81ea\u52a8\u8bbe\u7f6e\u5c3a\u5bf8\u65b9\u5f0f\uff0c\u53ef\u4f7f\u7528\u9759\u6001\u5c5e\u6027 GridLength.Auto\u3002","title":"\u8c03\u6574\u884c\u548c\u5217"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/#_2","text":"WPF \u4f7f\u7528\u5206\u8fa8\u7387\u65e0\u5173\u7684\u6d4b\u91cf\u7cfb\u7edf\uff0c\u8be5\u6d4b\u91cf\u7cfb\u7edf\u4e3a\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u7684\u786c\u4ef6\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\uff0c\u4f46\u6709\u65f6\u4e5f\u4f1a\u5f15\u5165\u4e00\u4e9b\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u662f\u5143\u7d20\u53ef\u80fd\u88ab\u5bf9\u9f50\u5230\u5b50\u50cf\u7d20\uff08subpixel\uff09\u8fb9\u754c\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f7f\u7528\u6ca1\u6709\u548c\u7269\u7406\u50cf\u7d20\u51c6\u786e\u5bf9\u9f50\u7684\u5c0f\u6570\u5750\u6807\u5b9a\u4f4d\u5143\u7d20\u3002\u53ef\u901a\u8fc7\u4e3a\u76f8\u90bb\u7684\u5e03\u5c40\u5bb9\u5668\u63d0\u4f9b\u975e\u6574\u6570\u5c3a\u5bf8\u5f3a\u5236\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u5f53\u4e0d\u5e0c\u671b\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8be5\u95ee\u9898\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u4f8b\u5982\u5f53\u521b\u5efa\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684 Grid \u9762\u677f\u65f6\u5c31\u53ef\u80fd\u53d1\u751f\u8be5\u95ee\u9898\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u4f7f\u7528\u4e00\u4e2a\u5305\u542b\u4e24\u5217\u4e14\u5177\u6709 200 \u50cf\u7d20\u7684 Grid \u9762\u677f\u3002\u5982\u679c\u5c06\u8be5\u9762\u677f\u5747\u5300\u5206\u6210\u4e24\u4e2a\u6309\u6bd4\u4f8b\u8bbe\u7f6e\u5c3a\u5bf8\u7684\u5217\uff0c\u90a3\u4e48\u610f\u5473\u7740\u6bcf\u5217\u4e3a 100 \u50cf\u7d20\u5bbd\u3002\u4f46\u662f\u5982\u679c\u8fd9\u4e2a Grid \u9762\u677f \u7684\u5bbd\u5ea6\u4e3a 175 \u50cf\u7d20\uff0c\u5c31\u4e0d\u80fd\u5f88\u6e05\u6670\u5730\u5206\u5272\u6210\u4e24\u5217\uff0c\u5e76\u4e14\u6bcf\u5217\u4e3a 87.5 \u50cf\u7d20\u3002\u8fd9\u610f\u5473\u7740\u7b2c\u4e8c\u8f6e\u4f1a\u548c\u539f\u59cb\u7684\u50cf\u7d20\u8fb9\u754c\u7a0d\u6709\u4e9b\u9519\u4f4d\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u8be5\u5217\u5305\u542b\u4e00\u4e2a\u5f62\u72b6\u5143\u7d20\u3001\u4e00\u4e2a\u8fb9\u6846\u6216\u4e00\u5e45\u56fe\u50cf\uff0c\u90a3\u4e48\u8be5\u5185\u5bb9\u7684\u663e\u793a\u53ef\u80fd\u662f\u6a21\u7cca\u7684\uff0c\u56e0\u4e3a WPF \u4f1a\u4f7f\u7528\u53cd\u952f\u9f7f\u529f\u80fd\u201c\u6df7\u5408\u201d\u539f\u672c\u6e05\u6670\u7684\u50cf\u7d20\u8fb9\u754c\u8fb9\u7f18\u3002 ![[Grid\u9762\u677f.png]] \u5982\u56fe\uff0c\u4e0a\u9762\u7684 Grid \u9762\u677f\u6ca1\u6709\u4f7f\u7528\u5e03\u5c40\u820d\u5165\uff08layout rounding\uff09\uff0c\u6240\u4ee5\u77e9\u5f62\u7684\u6e05\u6670\u8fb9\u7f18\u5728\u7279\u5b9a\u7684\u7a97\u53e3\u5c3a\u5bf8\u4e0b\u53d8\u5f97\u6a21\u7cca\u4e86\u3002 \u53ea\u9700\u8981\u5c06\u5e03\u5c40\u5bb9\u5668\u7684 UseLayoutRounding \u5c5e\u6027\u8bbe\u7f6e\u4e3a true\uff1a < Grid UseLayoutRounding = \"True\" > \u73b0\u5728\uff0cWPF \u4f1a\u786e\u4fdd\u5e03\u5c40\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u5bf9\u9f50\u5230\u6700\u8fd1\u7684\u50cf\u7d20\u8fb9\u754c\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u6240\u6709\u6a21\u7cca\u7684\u95ee\u9898\u3002","title":"\u5e03\u5c40\u820d\u5165"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/#_3","text":"RowSpan \u548c ColumnSpan \u8fd9\u4e24\u4e2a\u5c5e\u6027\u4f7f\u5143\u7d20\u8de8\u8d8a\u591a\u4e2a\u5355\u5143\u683c\uff0c\u4f7f\u7528\u5143\u7d20\u5c06\u4f1a\u5360\u6709\u7684\u884c\u6570\u548c\u5217\u6570\u8fdb\u884c\u8bbe\u7f6e\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6309\u94ae\u5c06\u5360\u636e\u7b2c\u4e00\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5355\u5143\u683c\u7684\u6240\u6709\u7a7a\u95f4\uff1a < Button Grid . Row = \"0\" Grid . Column = \"0\" Grid . ColumnSpan = \"2\" > Span Button </ Button > \u901a\u8fc7\u8de8\u8d8a\u884c\u548c\u5217\u53ef\u5f97\u5230\u66f4\u6709\u8da3\u7684\u6548\u679c\uff0c\u5f53\u9700\u8981\u5728\u7531\u5206\u5272\u5668\u6216\u66f4\u957f\u7684\u5185\u5bb9\u533a\u57df\u5206\u5f00\u7684\u8868\u683c\u7ed3\u6784\u4e2d\u653e\u7f6e\u5143\u7d20\u65f6\uff0c\u8fd9\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002","title":"\u8de8\u8d8a\u884c\u548c\u5217"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/#_4","text":"\u6bcf\u4e2a Windows \u7528\u6237\u90fd\u89c1\u8fc7\u5206\u5272\u6761\u2014\u2014\u80fd\u5c06\u7a97\u53e3\u7684\u4e00\u90e8\u5206\u4e0e\u53e6\u4e00\u90e8\u5206\u5206\u79bb\u7684\u53ef\u62d6\u52a8\u5206\u5272\u5668\u3002\u4f8b\u5982\uff0c\u5f53\u4f7f\u7528 Windows \u8d44\u6e90\u7ba1\u7406\u5668\u65f6\uff0c\u4f1a\u770b\u5230\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\uff08\u5728\u5de6\u8fb9\uff09\u548c\u4e00\u7cfb\u5217\u6587\u4ef6\uff08\u5728\u53f3\u8fb9\uff09\u3002\u53ef\u62d6\u52a8\u5b83\u4eec\u4e4b\u95f4\u7684\u5206\u5272\u6761\u6765\u786e\u5b9a\u6bcf\u90e8\u5206\u5360\u636e\u7a97\u53e3\u7684\u6bd4\u4f8b\u3002 \u5728 WPF \u4e2d\uff0c\u5206\u5272\u6761\u7531 GridSplitter \u7c7b\u8868\u793a\uff0c\u5b83\u662f Grid \u9762\u677f\u7684\u529f\u80fd\u4e4b\u4e00\u3002\u901a\u8fc7\u4e3a Grid \u9762\u677f\u6dfb\u52a0 GridSplitter \u5bf9\u8c61\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u6539\u53d8\u884c\u548c\u5217\u7684\u5c3a\u5bf8\u3002 \u5927\u591a\u6570\u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a WPF \u4e2d\u7684 GridSplitter \u7c7b\u4e0d\u662f\u6700\u76f4\u89c2\u7684\u3002\u7406\u89e3\u5982\u4f55\u4f7f\u7528 GridSplitter \u7c7b\uff0c\u4ece\u800c\u5f97\u5230\u6240\u671f\u671b\u7684\u6548\u679c\u9700\u8981\u4e00\u5b9a\u7684\u7ecf\u9a8c\u3002\u4e0b\u9762\u5217\u51fa\u51e0\u6761\u77e5\u9053\u539f\u5219\uff1a GridSplitter \u5bf9\u8c61\u5fc5\u987b\u653e\u5728 Grid \u5355\u5143\u683c\u4e2d\u3002\u53ef\u4e0e\u5df2\u7ecf\u5b58\u5728\u7684\u5185\u5bb9\u4e00\u5e76\u653e\u5230\u5355\u5143\u683c\u4e2d\uff0c\u8fd9\u65f6\u9700\u8981\u8c03\u6574\u8fb9\u8ddd\u8bbe\u7f6e\uff0c\u4f7f\u5b83\u4eec\u4e0d\u76f8\u4e92\u91cd\u53e0\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u4f7f\u9884\u7559\u4e00\u5217\u6216\u4e00\u884c\u4e13\u95e8\u7528\u4e8e\u653e\u7f6e GridSplitter \u5bf9\u8c61\uff0c\u5e76\u5c06\u9884\u7559\u884c\u6216\u5217\u7684 Height \u6216 Width \u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u4e3a Auto\u3002 GridSplitter \u5bf9\u8c61\u603b\u662f\u6539\u53d8\u6574\u884c\u6216\u6574\u5217\u7684\u5c3a\u5bf8\uff08\u800c\u975e\u6539\u53d8\u5355\u4e2a\u5355\u5143\u683c\u7684\u5c3a\u5bf8\uff09\u3002\u4e3a\u4f7f GridSplitter \u5bf9\u8c61\u7684\u5916\u89c2\u548c\u884c\u4e3a\u4fdd\u6301\u4e00\u81f4\uff0c\u9700\u8981\u62c9\u4f38 GridSplitter \u5bf9\u8c61\u4f7f\u5176\u7a7f\u8d8a\u6574\u884c\u6216\u6574\u5217\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u9650\u5236\u5728\u5355\u5143\u683c\u4e2d\u3002\u4e3a\u6b64\uff0c\u53ef\u4f7f\u7528 RowSpan \u6216 ColumnSpan \u5c5e\u6027\u3002 \u6700\u521d\uff0cGridSplitter \u5bf9\u8c61\u5f88\u5c0f\u4e0d\u6613\u770b\u89c1\u3002\u4e3a\u4e86\u4f7f\u5176\u66f4\u53ef\u7528\uff0c\u9700\u8981\u4e3a\u5176\u8bbe\u7f6e\u6700\u5c0f\u5c3a\u5bf8\u3002\u5bf9\u4e8e\u7ad6\u76f4\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 VerticalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Stretch\uff08\u4f7f\u5206\u5272\u6761\u586b\u6ee1\u533a\u57df\u7684\u6574\u4e2a\u9ad8\u5ea6\uff09\uff0c\u5e76\u5c06 Width \u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\uff08\u5982 10 \u4e2a\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\uff09\u3002\u5bf9\u4e8e\u6c34\u5e73\u5206\u5272\u6761\uff0c\u9700\u8981\u8bbe\u7f6e HorizontalAlignment \u5c5e\u6027\u6765\u62c9\u4f38\uff0c\u5e76\u5c06 Height \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u56fa\u5b9a\u503c\u3002 GridSplitter \u5bf9\u9f50\u65b9\u5f0f\u8fd8\u51b3\u5b9a\u4e86\u5206\u5272\u6761\u662f\u6c34\u5e73\u7684\uff08\u7528\u4e8e\u6539\u53d8\u884c\u7684\u5c3a\u5bf8\uff09\u8fd8\u662f\u7ad6\u76f4\u7684\uff08\u7528\u4e8e\u6539\u53d8\u5217\u7684\u5c3a\u5bf8\uff09\u3002\u5bf9\u4e8e\u6c34\u5e73\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 VerticalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Center\uff08\u8fd9\u4e5f\u662f\u9ed8\u8ba4\u503c\uff09\uff0c\u4ee5\u6307\u660e\u62d6\u52a8\u5206\u5272\u6761\u6539\u53d8\u4e0a\u9762\u884c\u548c\u4e0b\u9762\u884c\u7684\u5c3a\u5bf8\u3002\u5bf9\u4e8e\u7ad6\u76f4\u5206\u5272\u6761\uff0c\u9700\u8981\u5c06 HorizontalAlignment \u5c5e\u6027\u8bbe\u7f6e\u4e3a Center\uff0c\u4ee5\u6539\u53d8\u5206\u5272\u6761\u4e24\u4fa7\u5217\u7684\u5c3a\u5bf8\u3002","title":"\u5206\u5272\u7a97\u53e3"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/19.%20Grid%20%E9%9D%A2%E6%9D%BF/#_5","text":"\u5171\u4eab\u5c3a\u5bf8\u7ec4\u7684\u76ee\u6807\u662f\u4fdd\u6301\u7528\u6237\u754c\u9762\u72ec\u7acb\u90e8\u5206\u7684\u4e00\u81f4\u6027\u3002\u4f8b\u5982\uff0c\u53ef\u80fd\u5e0c\u671b\u6539\u53d8\u4e00\u5217\u7684\u5c3a\u5bf8\u4ee5\u9002\u5e94\u5176\u5185\u5bb9\uff0c\u5e76\u6539\u53d8\u53e6\u4e00\u5217\u7684\u5c3a\u5bf8\u4f7f\u5176\u4e0e\u524d\u9762\u4e00\u5217\u6539\u53d8\u540e\u7684\u5c3a\u5bf8\u76f8\u5339\u914d\u3002\u7136\u800c\uff0c\u5171\u4eab\u5c3a\u5bf8\u7ec4\u7684\u771f\u6b63\u4f18\u70b9\u662f\u4f7f\u72ec\u7acb\u7684 Grid \u7a7a\u95f4\u5177\u6709\u76f8\u540c\u7684\u6bd4\u4f8b\u3002 \u521b\u5efa\u5171\u4eab\u7ec4\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u8bbe\u7f6e\u4e24\u5217\u7684 SharedSizeGroup \u5c5e\u6027\u5373\u53ef\u3002","title":"\u5171\u4eab\u5c3a\u5bf8\u7ec4"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/20.%20%E4%BD%BF%E7%94%A8%20Canvas%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E5%9F%BA%E4%BA%8E%E5%9D%90%E6%A0%87%E7%9A%84%E5%B8%83%E5%B1%80/","text":"Canvas \u9762\u677f\u5141\u8bb8\u4f7f\u7528\u7cbe\u786e\u7684\u5750\u6807\u653e\u7f6e\u5143\u7d20\uff0c\u5982\u679c\u8bbe\u8ba1\u6570\u636e\u9a71\u52a8\u7684\u5bcc\u7a97\u4f53\u548c\u6807\u51c6\u5bf9\u8bdd\u6846\uff0c\u8fd9\u5e76\u975e\u597d\u7684\u9009\u62e9\uff1b\u4f46\u5982\u679c\u9700\u8981\u6784\u5efa\u5176\u4ed6\u4e00\u4e9b\u4e0d\u540c\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff0c\u4e3a\u56fe\u5f62\u5de5\u5177\u521b\u5efa\u7ed8\u56fe\u8868\u9762\uff09\uff0cCanvas \u9762\u677f\u53ef\u80fd\u662f\u4e2a\u6709\u7528\u7684\u5de5\u5177\u3002Canvas \u9762\u677f\u8fd8\u662f\u6700\u8f7b\u91cf\u7ea7\u7684\u5e03\u5c40\u5bb9\u5668\u3002\u8fd9\u662f\u56e0\u4e3a Canvas \u9762\u677f\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u590d\u6742\u7684\u5e03\u5c40\u903b\u8f91\uff0c\u7528\u4ee5\u6539\u53d8\u5176\u5b50\u5143\u7d20\u7684\u9996\u9009\u5c3a\u5bf8\u3002Canvas \u9762\u677f\u53ea\u662f\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u653e\u7f6e\u5176\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u5176\u5b50\u5143\u7d20\u5177\u6709\u6240\u5e0c\u671b\u7684\u7cbe\u786e\u5c3a\u5bf8\u3002 \u4e3a\u5728 Canvas \u9762\u677f\u4e2d\u5b9a\u4f4d\u5143\u7d20\uff0c\u9700\u8981\u8bbe\u7f6e Canvas.Left \u548c Canvas.Top \u9644\u52a0\u5c5e\u6027\u3002Canvas.Left \u5c5e\u6027\u8bbe\u7f6e\u5143\u7d20\u5de6\u8fb9\u548c Canvas.Left \u9762\u677f\u5de6\u8fb9\u4e4b\u95f4\u7684\u5355\u4f4d\u6570\uff0cCanvas.Top \u5c5e\u6027\u8bbe\u7f6e\u5b50\u5143\u7d20\u9876\u8fb9\u548c Canvas \u9762\u677f\u9876\u8fb9\u4e4b\u95f4\u7684\u5355\u4f4d\u6570\u3002\u540c\u6837\uff0c\u8fd9\u4e9b\u6570\u503c\u4e5f\u662f\u4ee5\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u8bbe\u7f6e\u7684\uff0c\u5f53\u5c06\u7cfb\u7edf DPI \u8bbe\u7f6e\u4e3a 96 dpi \u65f6\uff0c\u8bbe\u5907\u65e0\u5173\u5355\u4f4d\u6070\u597d\u7b49\u4e8e\u901a\u5e38\u7684\u50cf\u7d20\u3002 \u53ef\u4f7f\u7528 Canvas.Right \u5c5e\u6027\u6765\u786e\u5b9a\u5143\u7d20\u548c Canvas \u9762\u677f\u53f3\u8fb9\u7f18\u95f4\u7684\u8ddd\u79bb\uff1b\u53ef\u4f7f\u7528 Canvas.Bottom \u5c5e\u6027\u6765\u786e\u5b9a\u5143\u7d20\u548c Canvas \u9762\u677f\u5e95\u90e8\u8fb9\u7f18\u7684\u8ddd\u79bb\u3002\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528 Canvas.Left \u548c Canvas.Right\uff0c\u4e5f\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528 Canvas.Top \u548c Canvas.Bottom \u5c5e\u6027\u3002 \u53ef\u4f7f\u7528 Width \u548c Height \u5c5e\u6027\u660e\u786e\u8bbe\u7f6e\u5b50\u5143\u7d20\u7684\u5c3a\u5bf8\u3002\u4e0e\u4f7f\u7528\u5176\u4ed6\u9762\u677f\u76f8\u6bd4\uff0c\u4f7f\u7528 Canvas \u9762\u677f\u65f6\u8fd9\u79cd\u8bbe\u7f6e\u66f4\u666e\u904d\uff0c\u56e0\u4e3a Canvas \u9762\u677f\u6ca1\u6709\u81ea\u5df1\u7684\u5e03\u5c40\u903b\u8f91\uff08\u5e76\u4e14\u5f53\u9700\u8981\u7cbe\u786e\u63a7\u5236\u7ec4\u5408\u5143\u7d20\u5982\u4f55\u6392\u5217\u65f6\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528 Canvas \u9762\u677f\uff09\u3002\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e Width \u548c Height \u5c5e\u6027\uff0c\u5143\u7d20\u4f1a\u83b7\u53d6\u5b83\u6240\u671f\u671b\u7684\u5c3a\u5bf8\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u5c06\u53d8\u5f97\u8db3\u591f\u5927\u4ee5\u9002\u5e94\u5176\u5185\u5bb9\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a < Canvas > < Button Canvas . Left = \"10\" Canvas . Top = \"10\" >( 10 , 10 )</ Button > < Button Canvas . Left = \"120\" Canvas . Top = \"30\" >( 120 , 30 )</ Button > < Button Canvas . Left = \"60\" Canvas . Top = \"80\" Width = \"50\" Height = \"50\" >( 60 , 80 )</ Button > < Button Canvas . Left = \"70\" Canvas . Top = \"120\" Width = \"100\" Height = \"50>(70,120)</Button> </ Canvas > \u5982\u679c\u6539\u53d8\u7a97\u53e3\u7684\u5927\u5c0f\uff0cCanvas \u9762\u677f\u5c31\u4f1a\u62c9\u4f38\u4ee5\u586b\u6ee1\u53ef\u7528\u7a7a\u95f4\uff0c\u4f46 Canvas \u9762\u677f\u4e0a\u7684\u63a7\u4ef6\u4e0d\u4f1a\u6539\u53d8\u5176\u5c3a\u5bf8\u548c\u4f4d\u7f6e\u3002Canvas \u9762\u677f\u4e0d\u5305\u542b\u4efb\u4f55\u951a\u5b9a\u548c\u505c\u9760\u529f\u80fd\uff0c\u8fd9\u4e24\u4e2a\u529f\u80fd\u662f\u5728 Windows \u7a97\u4f53\u4e2d\u4f7f\u7528\u5750\u6807\u5e03\u5c40\u63d0\u4f9b\u7684\u3002\u9020\u6210\u8be5\u95ee\u9898\u7684\u90e8\u5206\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u6301 Canvas \u9762\u677f\u7684\u8f7b\u91cf\u7ea7\uff0c\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u4e3a\u4e86\u9632\u6b62\u4ee5\u4e0d\u5f53\u76ee\u7684\u4f7f\u7528 Canvas \u9762\u677f\uff08\u4f8b\u5982\uff0c\u786e\u5b9a\u6807\u51c6\u7528\u6237\u754c\u9762\u7684\u5e03\u5c40\uff09\u3002 \u5982\u679c\u4e0e\u5176\u4ed6\u5143\u7d20\u4e00\u8d77\u4f7f\u7528 Canvas \u9762\u677f\uff0c\u53ef\u80fd\u5e0c\u671b\u5c06\u5b83\u7684 ClipToBounds \u5c5e\u6027\u8bbe\u7f6e\u4e3a true\u3002\u8fd9\u6837\uff0c\u5982\u679c Canvas \u9762\u677f\u4e2d\u7684\u5143\u7d20\u5c06\u88ab\u62c9\u4f38\u8d85\u51fa Canvas \u9762\u677f\u7684\u8fb9\u754c\uff0c\u5c06\u5728 Canvas \u9762\u677f\u7684\u8fb9\u7f18\u5904\u526a\u88c1\u8fd9\u4e9b\u5b50\u5143\u7d20\uff08\u8fd9\u6837\u53ef\u4ee5\u963b\u6b62\u5b83\u4eec\u4e0e\u7a97\u53e3\u4e2d\u7684\u5176\u4ed6\u5143\u7d20\u91cd\u53e0\uff09\u3002\u5176\u4ed6\u6240\u6709\u5e03\u5c40\u5bb9\u5668\u603b\u662f\u526a\u88c1\u5b83\u4eec\u7684\u5b50\u5143\u7d20\u4ee5\u9002\u5e94\u5176\u5c3a\u5bf8\uff0c\u800c\u4e0d\u8003\u8651 ClipToBounds \u7684\u8bbe\u7f6e\u3002 Z \u987a\u5e8f \u5982\u679c Canvas \u9762\u677f\u4e2d\u7531\u591a\u4e2a\u4e92\u76f8\u91cd\u53e0\u7684\u5143\u7d20\uff0c\u53ef\u901a\u8fc7\u8bbe\u7f6e Canvas.ZIndex \u9644\u52a0\u5c5e\u6027\u6765\u63a7\u5236\u5b83\u4eec\u7684\u5c42\u53e0\u65b9\u5f0f\u3002 \u6dfb\u52a0\u7684\u6240\u6709\u5143\u7d20\u901a\u5e38\u90fd\u5177\u6709\u76f8\u540c\u7684 ZIndex \u503c\u2014\u20140\u3002\u5982\u679c\u5143\u7d20\u5177\u6709\u76f8\u540c\u7684 ZIndex \u503c\uff0c\u5c31\u6309\u5b83\u4eec\u5728 Canvas.Children \u96c6\u5408\u4e2d\u7684\u987a\u5e8f\u8fdb\u884c\u663e\u793a\uff0c\u8fd9\u4e2a\u987a\u5e8f\u4f9d\u8d56\u4e8e\u5143\u7d20\u5728 XAML \u6807\u8bb0\u4e2d\u5b9a\u4e49\u7684\u987a\u5e8f\u3002\u5728\u6807\u8bb0\u4e2d\u9760\u540e\u4f4d\u7f6e\u58f0\u660e\u7684\u5143\u7d20\u4f1a\u663e\u793a\u5728\u524d\u9762\u58f0\u660e\u7684\u5143\u7d20\u7684\u4e0a\u9762\u3002 \u7136\u800c\uff0c\u53ef\u901a\u8fc7\u589e\u52a0\u4efb\u4f55\u5b50\u5143\u7d20\u7684 ZIndex \u503c\u6765\u63d0\u9ad8\u5c42\u6b21\u7ea7\u522b\u3002\u56e0\u4e3a\u5177\u6709\u66f4\u9ad8 ZIndex \u503c\u7684\u5143\u7d20\u59cb\u7ec8\u663e\u793a\u5728\u8f83\u4f4e ZIndex \u503c\u7684\u5143\u7d20\u4e0a\u9762\u3002 \u53ef\u5c06 ZIndex \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u6b63\u6574\u6570\u6216\u8d1f\u6574\u6570\u3002 \u5982\u679c\u9700\u8981\u901a\u8fc7\u4ee3\u7801\u6765\u6539\u53d8\u5143\u7d20\u7684\u4f4d\u7f6e\uff0cZIndex \u5c5e\u6027\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u53ea\u9700\u8981\u8c03\u7528 Canvas.SetZIndex() \u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u5e0c\u671b\u4fee\u6539\u7684\u5143\u7d20\u548c\u5e0c\u671b\u4f7f\u7528\u7684\u65b0 ZIndex \u503c\u5373\u53ef\u3002\u9057\u61be\u7684\u662f\uff0c\u5e76\u4e0d\u5b58\u5728 BringToFront() \u6216 SendToBack() \u65b9\u6cd5\u2014\u2014\u8981\u5b9e\u73b0\u8fd9\u4e00\u884c\u4e3a\uff0c\u9700\u8981\u8ddf\u8e2a\u6700\u9ad8\u548c\u6700\u4f4e\u7684 ZIndex \u503c\u3002 InkCanvas \u5143\u7d20 WPF \u8fd8\u63d0\u4f9b\u4e86 InkCanvas \u5143\u7d20\uff0c\u5b83\u4e0e Canvas \u9762\u677f\u5728\u67d0\u4e9b\u65b9\u9762\u662f\u7c7b\u4f3c\u7684\uff08\u800c\u5728\u5176\u4ed6\u65b9\u9762\u5374\u5b8c\u5168\u4e0d\u540c\uff09\u3002 InkCanvas \u5143\u7d20\u7684\u4e3b\u8981\u76ee\u7684\u662f\u7528\u4e8e\u63a5\u6536\u624b\u5199\u7b14\u8f93\u5165\u3002","title":"20. \u4f7f\u7528 Canvas \u9762\u677f\u8fdb\u884c\u57fa\u4e8e\u5750\u6807\u7684\u5e03\u5c40"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/20.%20%E4%BD%BF%E7%94%A8%20Canvas%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E5%9F%BA%E4%BA%8E%E5%9D%90%E6%A0%87%E7%9A%84%E5%B8%83%E5%B1%80/#z","text":"\u5982\u679c Canvas \u9762\u677f\u4e2d\u7531\u591a\u4e2a\u4e92\u76f8\u91cd\u53e0\u7684\u5143\u7d20\uff0c\u53ef\u901a\u8fc7\u8bbe\u7f6e Canvas.ZIndex \u9644\u52a0\u5c5e\u6027\u6765\u63a7\u5236\u5b83\u4eec\u7684\u5c42\u53e0\u65b9\u5f0f\u3002 \u6dfb\u52a0\u7684\u6240\u6709\u5143\u7d20\u901a\u5e38\u90fd\u5177\u6709\u76f8\u540c\u7684 ZIndex \u503c\u2014\u20140\u3002\u5982\u679c\u5143\u7d20\u5177\u6709\u76f8\u540c\u7684 ZIndex \u503c\uff0c\u5c31\u6309\u5b83\u4eec\u5728 Canvas.Children \u96c6\u5408\u4e2d\u7684\u987a\u5e8f\u8fdb\u884c\u663e\u793a\uff0c\u8fd9\u4e2a\u987a\u5e8f\u4f9d\u8d56\u4e8e\u5143\u7d20\u5728 XAML \u6807\u8bb0\u4e2d\u5b9a\u4e49\u7684\u987a\u5e8f\u3002\u5728\u6807\u8bb0\u4e2d\u9760\u540e\u4f4d\u7f6e\u58f0\u660e\u7684\u5143\u7d20\u4f1a\u663e\u793a\u5728\u524d\u9762\u58f0\u660e\u7684\u5143\u7d20\u7684\u4e0a\u9762\u3002 \u7136\u800c\uff0c\u53ef\u901a\u8fc7\u589e\u52a0\u4efb\u4f55\u5b50\u5143\u7d20\u7684 ZIndex \u503c\u6765\u63d0\u9ad8\u5c42\u6b21\u7ea7\u522b\u3002\u56e0\u4e3a\u5177\u6709\u66f4\u9ad8 ZIndex \u503c\u7684\u5143\u7d20\u59cb\u7ec8\u663e\u793a\u5728\u8f83\u4f4e ZIndex \u503c\u7684\u5143\u7d20\u4e0a\u9762\u3002 \u53ef\u5c06 ZIndex \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u6b63\u6574\u6570\u6216\u8d1f\u6574\u6570\u3002 \u5982\u679c\u9700\u8981\u901a\u8fc7\u4ee3\u7801\u6765\u6539\u53d8\u5143\u7d20\u7684\u4f4d\u7f6e\uff0cZIndex \u5c5e\u6027\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u53ea\u9700\u8981\u8c03\u7528 Canvas.SetZIndex() \u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u5e0c\u671b\u4fee\u6539\u7684\u5143\u7d20\u548c\u5e0c\u671b\u4f7f\u7528\u7684\u65b0 ZIndex \u503c\u5373\u53ef\u3002\u9057\u61be\u7684\u662f\uff0c\u5e76\u4e0d\u5b58\u5728 BringToFront() \u6216 SendToBack() \u65b9\u6cd5\u2014\u2014\u8981\u5b9e\u73b0\u8fd9\u4e00\u884c\u4e3a\uff0c\u9700\u8981\u8ddf\u8e2a\u6700\u9ad8\u548c\u6700\u4f4e\u7684 ZIndex \u503c\u3002","title":"Z \u987a\u5e8f"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/20.%20%E4%BD%BF%E7%94%A8%20Canvas%20%E9%9D%A2%E6%9D%BF%E8%BF%9B%E8%A1%8C%E5%9F%BA%E4%BA%8E%E5%9D%90%E6%A0%87%E7%9A%84%E5%B8%83%E5%B1%80/#inkcanvas","text":"WPF \u8fd8\u63d0\u4f9b\u4e86 InkCanvas \u5143\u7d20\uff0c\u5b83\u4e0e Canvas \u9762\u677f\u5728\u67d0\u4e9b\u65b9\u9762\u662f\u7c7b\u4f3c\u7684\uff08\u800c\u5728\u5176\u4ed6\u65b9\u9762\u5374\u5b8c\u5168\u4e0d\u540c\uff09\u3002 InkCanvas \u5143\u7d20\u7684\u4e3b\u8981\u76ee\u7684\u662f\u7528\u4e8e\u63a5\u6536\u624b\u5199\u7b14\u8f93\u5165\u3002","title":"InkCanvas \u5143\u7d20"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/21.%20%E7%90%86%E8%A7%A3%E8%B7%AF%E7%94%B1%E4%BA%8B%E4%BB%B6/","text":"\u6bcf\u4e2a .NET \u5f00\u53d1\u4eba\u5458\u90fd\u719f\u6089\u201d\u4e8b\u4ef6\u201c\u601d\u60f3\u2014\u2014\u5f53\u6709\u610f\u4e49\u7684\u4e8b\u60c5\u53d1\u751f\u65f6\uff0c\u7531\u5bf9\u8c61\uff08\u5982 WPF \u5143\u7d20\uff09\u53d1\u9001\u7684\u7528\u4e8e\u901a\u77e5\u4ee3\u7801\u7684\u6d88\u606f\u3002WPF \u901a\u8fc7\u4e8b\u4ef6\u8def\u7531\uff08event routing\uff09\u7684\u6982\u5ff5\u589e\u5f3a\u4e86 .NET \u4e8b\u4ef6\u6a21\u578b\u3002\u4e8b\u4ef6\u8def\u7531\u5141\u8bb8\u6e90\u81ea\u67d0\u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u7531\u53e6\u4e00\u4e2a\u5143\u7d20\u5f15\u53d1\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u4e8b\u4ef6\u8def\u7531\uff0c\u6765\u81ea\u5de5\u5177\u680f\u6309\u94ae\u7684\u5355\u51fb\u4e8b\u4ef6\u53ef\u5728\u88ab\u4ee3\u7801\u5904\u7406\u4e4b\u524d\u4e0a\u4f20\u5230\u5de5\u5177\u680f\uff0c\u7136\u540e\u4e0a\u4f20\u5230\u5305\u542b\u5de5\u5177\u680f\u7684\u7a97\u53e3\u3002 \u4e8b\u4ef6\u8def\u7531\u4e3a\u5728\u6700\u5408\u9002\u7684\u4f4d\u7f6e\u7f16\u5199\u7d27\u51d1\u7684\u3001\u7ec4\u7ec7\u826f\u597d\u7684\u7528\u4e8e\u5904\u7406\u4e8b\u4ef6\u7684\u4ee3\u7801\u63d0\u4f9b\u4e86\u7075\u6d3b\u6027\u3002\u8981\u4f7f\u7528 WPF \u5185\u5bb9\u6a21\u578b\uff0c\u4e8b\u4ef6\u8def\u7531\u4e5f\u662f\u5fc5\u9700\u7684\uff0c\u5185\u5bb9\u6a21\u578b\u5141\u8bb8\u4f7f\u7528\u8bb8\u591a\u4e0d\u540c\u7684\u5143\u7d20\u6784\u5efa\u7b80\u5355\u5143\u7d20\uff08\u5982\u6309\u94ae\uff09\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5143\u7d20\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u4e8b\u4ef6\u96c6\u5408\u3002 \u5b9a\u4e49\u3001\u6ce8\u518c\u548c\u5c01\u88c5\u8def\u7531\u4e8b\u4ef6 WPF \u4e8b\u4ef6\u6a21\u578b\u548c WPF \u5c5e\u6027\u6a21\u578b\u975e\u5e38\u7c7b\u4f3c\u3002\u4e0e\u4f9d\u8d56\u9879\u5c5e\u6027\u4e00\u6837\uff0c\u8def\u7531\u4e8b\u4ef6\u7531\u5236\u5ea6\u7684\u9759\u6001\u5b57\u6bb5\u8868\u793a\uff0c\u5728\u9759\u6001\u6784\u9020\u51fd\u6570\u4e2d\u6ce8\u518c\uff0c\u5e76\u901a\u8fc7\u6807\u51c6\u7684 .NET \u4e8b\u4ef6\u5b9a\u4e49\u8fdb\u884c\u5c01\u88c5\u3002 \u4f8b\u5982\uff0cWPF \u7684 Button \u7c7b\u63d0\u4f9b\u4e86\u5927\u5bb6\u719f\u6089\u7684 Click \u4e8b\u4ef6\uff0c\u8be5\u4e8b\u4ef6\u7ee7\u627f\u81ea\u62bd\u8c61\u7684 ButtonBase \u57fa\u7c7b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8bf4\u660e\u4e86\u8be5\u4e8b\u4ef6\u662f\u5982\u4f55\u88ab\u5b9a\u4e49\u548c\u6ce8\u518c\u7684\uff1a public abstract class ButtonBase : ContentControl , ... { // The event definition. public static readonly RoutedEvent ClickEvent ; // The event registration. static ButtonBase () { ButtonBase . ClickEvent = EventManager . RegisterRoutedEvent ( \"Click\" , RoutingStrategy . Bubble , typeof ( RoutedEventHandler ), typeof ( ButtonBase )); ... } // The traditional event wrapper. public event RoutedEventHandler Click { add { base . AddHandler ( ButtonBase . ClickEvent , value ); } remove { base . RemoveHandler ( ButtonBase . ClickEvent , value ); } } ... } \u4f9d\u8d56\u9879\u5c5e\u6027\u662f\u4f7f\u7528 DependencyProperty.Register() \u65b9\u6cd5\u6ce8\u518c\u7684\uff0c\u800c\u8def\u7531\u4e8b\u4ef6\u662f\u4f7f\u7528 EventManager.RegisterRoutedEvent() \u65b9\u6cd5\u6ce8\u518c\u7684\u3002\u5f53\u6ce8\u518c\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e8b\u4ef6\u7684\u540d\u79f0\u3001\u8def\u7531\u7c7b\u578b\u3001\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u8bed\u6cd5\u7684\u59d4\u6258\uff08\u5728\u8be5\u4f8b\u4e2d\u662f RoutedEventHandler \uff09\u4ee5\u53ca\u62e5\u6709\u4e8b\u4ef6\u7684\u7c7b\uff08\u5728\u8be5\u4f8b\u4e2d\u662f ButtonBase \u7c7b\uff09\u3002 \u901a\u5e38\uff0c\u8def\u7531\u4e8b\u4ef6\u662f\u901a\u8fc7\u666e\u901a\u7684 .NET \u4e8b\u4ef6\u8fdb\u884c\u5c01\u88c5\uff0c\u4ece\u800c\u4f7f\u6240\u6709\u7684 .NET \u8bed\u8a00\u90fd\u80fd\u8bbf\u95ee\u5b83\u4eec\u3002\u4e8b\u4ef6\u5c01\u88c5\u5668\u53ef\u4f7f\u7528 AddHandler() \u548c RemoveHandler() \u65b9\u6cd5\u6dfb\u52a0\u548c\u5220\u9664\u5df2\u6ce8\u518c\u7684\u8c03\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u5728 FrameworkElement \u57fa\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5e76\u88ab\u6bcf\u4e2a WPF \u5143\u7d20\u7ee7\u627f\u3002 \u5171\u4eab\u8def\u7531\u4e8b\u4ef6","title":"21. \u7406\u89e3\u8def\u7531\u4e8b\u4ef6"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/21.%20%E7%90%86%E8%A7%A3%E8%B7%AF%E7%94%B1%E4%BA%8B%E4%BB%B6/#_1","text":"WPF \u4e8b\u4ef6\u6a21\u578b\u548c WPF \u5c5e\u6027\u6a21\u578b\u975e\u5e38\u7c7b\u4f3c\u3002\u4e0e\u4f9d\u8d56\u9879\u5c5e\u6027\u4e00\u6837\uff0c\u8def\u7531\u4e8b\u4ef6\u7531\u5236\u5ea6\u7684\u9759\u6001\u5b57\u6bb5\u8868\u793a\uff0c\u5728\u9759\u6001\u6784\u9020\u51fd\u6570\u4e2d\u6ce8\u518c\uff0c\u5e76\u901a\u8fc7\u6807\u51c6\u7684 .NET \u4e8b\u4ef6\u5b9a\u4e49\u8fdb\u884c\u5c01\u88c5\u3002 \u4f8b\u5982\uff0cWPF \u7684 Button \u7c7b\u63d0\u4f9b\u4e86\u5927\u5bb6\u719f\u6089\u7684 Click \u4e8b\u4ef6\uff0c\u8be5\u4e8b\u4ef6\u7ee7\u627f\u81ea\u62bd\u8c61\u7684 ButtonBase \u57fa\u7c7b\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u8bf4\u660e\u4e86\u8be5\u4e8b\u4ef6\u662f\u5982\u4f55\u88ab\u5b9a\u4e49\u548c\u6ce8\u518c\u7684\uff1a public abstract class ButtonBase : ContentControl , ... { // The event definition. public static readonly RoutedEvent ClickEvent ; // The event registration. static ButtonBase () { ButtonBase . ClickEvent = EventManager . RegisterRoutedEvent ( \"Click\" , RoutingStrategy . Bubble , typeof ( RoutedEventHandler ), typeof ( ButtonBase )); ... } // The traditional event wrapper. public event RoutedEventHandler Click { add { base . AddHandler ( ButtonBase . ClickEvent , value ); } remove { base . RemoveHandler ( ButtonBase . ClickEvent , value ); } } ... } \u4f9d\u8d56\u9879\u5c5e\u6027\u662f\u4f7f\u7528 DependencyProperty.Register() \u65b9\u6cd5\u6ce8\u518c\u7684\uff0c\u800c\u8def\u7531\u4e8b\u4ef6\u662f\u4f7f\u7528 EventManager.RegisterRoutedEvent() \u65b9\u6cd5\u6ce8\u518c\u7684\u3002\u5f53\u6ce8\u518c\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e8b\u4ef6\u7684\u540d\u79f0\u3001\u8def\u7531\u7c7b\u578b\u3001\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u8bed\u6cd5\u7684\u59d4\u6258\uff08\u5728\u8be5\u4f8b\u4e2d\u662f RoutedEventHandler \uff09\u4ee5\u53ca\u62e5\u6709\u4e8b\u4ef6\u7684\u7c7b\uff08\u5728\u8be5\u4f8b\u4e2d\u662f ButtonBase \u7c7b\uff09\u3002 \u901a\u5e38\uff0c\u8def\u7531\u4e8b\u4ef6\u662f\u901a\u8fc7\u666e\u901a\u7684 .NET \u4e8b\u4ef6\u8fdb\u884c\u5c01\u88c5\uff0c\u4ece\u800c\u4f7f\u6240\u6709\u7684 .NET \u8bed\u8a00\u90fd\u80fd\u8bbf\u95ee\u5b83\u4eec\u3002\u4e8b\u4ef6\u5c01\u88c5\u5668\u53ef\u4f7f\u7528 AddHandler() \u548c RemoveHandler() \u65b9\u6cd5\u6dfb\u52a0\u548c\u5220\u9664\u5df2\u6ce8\u518c\u7684\u8c03\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u5728 FrameworkElement \u57fa\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5e76\u88ab\u6bcf\u4e2a WPF \u5143\u7d20\u7ee7\u627f\u3002","title":"\u5b9a\u4e49\u3001\u6ce8\u518c\u548c\u5c01\u88c5\u8def\u7531\u4e8b\u4ef6"},{"location":"Programming/02.%20C%23/00.%20WPF/00.%20WPF%20%E7%BC%96%E7%A8%8B%E5%AE%9D%E5%85%B8/21.%20%E7%90%86%E8%A7%A3%E8%B7%AF%E7%94%B1%E4%BA%8B%E4%BB%B6/#_2","text":"","title":"\u5171\u4eab\u8def\u7531\u4e8b\u4ef6"},{"location":"Programming/03.%20Qt/00.%20Qt%20%E7%AE%80%E4%BB%8B/","text":"Qt Qt \u662f\u4e00\u4e2a 1991 \u5e74\u7531 Qt Company \u5f00\u53d1\u7684 \u8de8\u5e73\u53f0 [[00. C++ \u7b80\u4ecb#C++|C++]] \u56fe\u5f62\u7528\u6237\u754c\u9762 \u5e94\u7528\u7a0b\u5e8f \u5f00\u53d1\u6846\u67b6\u3002\u5b83\u65e2\u53ef\u4ee5\u5f00\u53d1 GUI \u7a0b\u5e8f\uff0c\u4e5f\u53ef\u7528\u4e8e\u5f00\u53d1\u975e GUI \u7a0b\u5e8f\uff0c\u6bd4\u5982 \u63a7\u5236\u53f0 \u5de5\u5177\u548c \u670d\u52a1\u5668 \u3002Qt \u662f \u9762\u5411\u5bf9\u8c61 \u7684\u6846\u67b6\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 \u4ee3\u7801 \u751f\u6210\u6269\u5c55\uff08\u79f0\u4e3a\u5143\u5bf9\u8c61\u7f16\u8bd1\u5668(Meta Object Compiler, moc)\uff09\u4ee5\u53ca\u4e00\u4e9b \u5b8f \uff0cQt \u5f88\u5bb9\u6613\u6269\u5c55\uff0c\u5e76\u4e14\u5141\u8bb8\u771f\u6b63\u5730\u7ec4\u4ef6[[00. \u7f16\u7a0b\u7b80\u4ecb#\u4ec0\u4e48\u662f\u7f16\u7a0b|\u7f16\u7a0b]]\u3002 2008 \u5e74\uff0cQt Company \u79d1\u6280\u88ab \u8bfa\u57fa\u4e9a\u516c\u53f8 \u6536\u8d2d\uff0cQt \u4e5f\u56e0\u6b64\u6210\u4e3a\u8bfa\u57fa\u4e9a\u65d7\u4e0b\u7684\u7f16\u7a0b\u8bed\u8a00\u5de5\u5177\u30022012 \u5e74\uff0cQt \u88abDigia \u6536\u8d2d\u3002 2014 \u5e74 4 \u6708\uff0c\u8de8\u5e73\u53f0\u96c6\u6210\u5f00\u53d1\u73af\u5883 Qt Creator 3.1.0 \u6b63\u5f0f\u53d1\u5e03\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e8e iOS \u7684\u5b8c\u5168\u652f\u6301\uff0c\u65b0\u589e WinRT \u3001Beautifier \u7b49\u63d2\u4ef6\uff0c\u5e9f\u5f03\u4e86\u65e0[[00. Python \u7b80\u4ecb|Python]]\u63a5\u53e3\u7684 GDB \u8c03\u8bd5\u652f\u6301\uff0c\u96c6\u6210\u4e86\u57fa\u4e8e Clang \u7684 C/C++ \u4ee3\u7801\u6a21\u5757\uff0c\u5e76\u5bf9 Android \u652f\u6301\u505a\u51fa\u4e86\u8c03\u6574\uff0c\u81f3\u6b64\u5b9e\u73b0\u4e86\u5168\u9762\u652f\u6301 iOS\u3001Android\u3001 WP ,\u5b83\u63d0\u4f9b\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5efa\u7acb\u827a\u672f\u7ea7\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u6240\u9700\u7684\u6240\u6709\u529f\u80fd\u3002\u57fa\u672c\u4e0a\uff0cQt \u540c X Window \u4e0a\u7684 Motif \uff0cOpenwin\uff0c GTK \u7b49\u56fe\u5f62\u754c\u9762\u5e93\u548c Windows \u5e73\u53f0\u4e0a\u7684 MFC\uff0cOWL\uff0cVCL\uff0cATL \u662f\u540c\u7c7b\u578b\u7684\u4e1c\u897f\u3002","title":"Qt"},{"location":"Programming/03.%20Qt/00.%20Qt%20%E7%AE%80%E4%BB%8B/#qt","text":"Qt \u662f\u4e00\u4e2a 1991 \u5e74\u7531 Qt Company \u5f00\u53d1\u7684 \u8de8\u5e73\u53f0 [[00. C++ \u7b80\u4ecb#C++|C++]] \u56fe\u5f62\u7528\u6237\u754c\u9762 \u5e94\u7528\u7a0b\u5e8f \u5f00\u53d1\u6846\u67b6\u3002\u5b83\u65e2\u53ef\u4ee5\u5f00\u53d1 GUI \u7a0b\u5e8f\uff0c\u4e5f\u53ef\u7528\u4e8e\u5f00\u53d1\u975e GUI \u7a0b\u5e8f\uff0c\u6bd4\u5982 \u63a7\u5236\u53f0 \u5de5\u5177\u548c \u670d\u52a1\u5668 \u3002Qt \u662f \u9762\u5411\u5bf9\u8c61 \u7684\u6846\u67b6\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 \u4ee3\u7801 \u751f\u6210\u6269\u5c55\uff08\u79f0\u4e3a\u5143\u5bf9\u8c61\u7f16\u8bd1\u5668(Meta Object Compiler, moc)\uff09\u4ee5\u53ca\u4e00\u4e9b \u5b8f \uff0cQt \u5f88\u5bb9\u6613\u6269\u5c55\uff0c\u5e76\u4e14\u5141\u8bb8\u771f\u6b63\u5730\u7ec4\u4ef6[[00. \u7f16\u7a0b\u7b80\u4ecb#\u4ec0\u4e48\u662f\u7f16\u7a0b|\u7f16\u7a0b]]\u3002 2008 \u5e74\uff0cQt Company \u79d1\u6280\u88ab \u8bfa\u57fa\u4e9a\u516c\u53f8 \u6536\u8d2d\uff0cQt \u4e5f\u56e0\u6b64\u6210\u4e3a\u8bfa\u57fa\u4e9a\u65d7\u4e0b\u7684\u7f16\u7a0b\u8bed\u8a00\u5de5\u5177\u30022012 \u5e74\uff0cQt \u88abDigia \u6536\u8d2d\u3002 2014 \u5e74 4 \u6708\uff0c\u8de8\u5e73\u53f0\u96c6\u6210\u5f00\u53d1\u73af\u5883 Qt Creator 3.1.0 \u6b63\u5f0f\u53d1\u5e03\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e8e iOS \u7684\u5b8c\u5168\u652f\u6301\uff0c\u65b0\u589e WinRT \u3001Beautifier \u7b49\u63d2\u4ef6\uff0c\u5e9f\u5f03\u4e86\u65e0[[00. Python \u7b80\u4ecb|Python]]\u63a5\u53e3\u7684 GDB \u8c03\u8bd5\u652f\u6301\uff0c\u96c6\u6210\u4e86\u57fa\u4e8e Clang \u7684 C/C++ \u4ee3\u7801\u6a21\u5757\uff0c\u5e76\u5bf9 Android \u652f\u6301\u505a\u51fa\u4e86\u8c03\u6574\uff0c\u81f3\u6b64\u5b9e\u73b0\u4e86\u5168\u9762\u652f\u6301 iOS\u3001Android\u3001 WP ,\u5b83\u63d0\u4f9b\u7ed9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u5efa\u7acb\u827a\u672f\u7ea7\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u6240\u9700\u7684\u6240\u6709\u529f\u80fd\u3002\u57fa\u672c\u4e0a\uff0cQt \u540c X Window \u4e0a\u7684 Motif \uff0cOpenwin\uff0c GTK \u7b49\u56fe\u5f62\u754c\u9762\u5e93\u548c Windows \u5e73\u53f0\u4e0a\u7684 MFC\uff0cOWL\uff0cVCL\uff0cATL \u662f\u540c\u7c7b\u578b\u7684\u4e1c\u897f\u3002","title":"Qt"},{"location":"Programming/03.%20Qt/Qt%20%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85%E5%AD%97%E4%BD%93/","text":"\u5c06\u5b57\u4f53\u6587\u4ef6\u6dfb\u52a0\u5230\u7a0b\u5e8f\u8d44\u6e90\uff08Qt Resource File\uff09 \u5728 main \u51fd\u6570\u4e2d\u8bbe\u7f6e\u5b57\u4f53\u4fe1\u606f #include <QFontDatabase> #include <QTextCodec> int main ( int argc , char * argv []) { QApplication a ( argc , argv ); //\u8bbe\u7f6e\u7a0b\u5e8f\u5b57\u4f53 int fontId = QFontDatabase :: addApplicationFont ( u8 \":/font/font/\u601d\u6e90\u9ed1\u4f53CN-Normal.otf\" ); QString fontname = QFontDatabase :: applicationFontFamilies ( fontId ). at ( 0 ); QFont font ; font . setFamily ( fontname ); font . setPixelSize ( 13 ); font . setWeight ( QFont :: Normal ); font . setItalic ( false ); a . setFont ( font ); //\u8bbe\u7f6e\u5b57\u7b26\u7f16\u7801 QTextCodec * codec = QTextCodec :: codecForName ( \"UTF-8\" ); QTextCodec :: setCodecForLocale ( codec ); return a . exec (); } \u53c2\u8003\uff1a Qt\u89e3\u51b3\u4e2d\u6587\u4e0d\u663e\u793a\u95ee\u9898\u7684\u7ec8\u6781\u89e3\u51b3\u529e\u6cd5","title":"Qt \u7a0b\u5e8f\u6253\u5305\u5b57\u4f53"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/00.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E7%9B%AE%E5%BD%95/","text":"[[00. Qt \u7b80\u4ecb#Qt|Qt]] \u5b66\u4e60\u4e4b\u8def [[01. \u81ea\u5b9a\u4e49\u4fe1\u53f7\u69fd]] [[02. Qt \u6a21\u5757\u7b80\u4ecb]] [[03. MainWindow \u7b80\u4ecb]] [[04. \u6dfb\u52a0\u52a8\u4f5c]] [[05. \u8d44\u6e90\u6587\u4ef6]] [[06. \u5e03\u5c40\u7ba1\u7406\u5668]] [[07. \u83dc\u5355\u680f\u3001\u5de5\u5177\u680f\u548c\u72b6\u6001\u680f]] [[08. \u5bf9\u8bdd\u6846\u7b80\u4ecb]] [[09. \u5bf9\u8bdd\u6846\u6570\u636e\u4f20\u9012]] [[10. \u6807\u51c6\u5bf9\u8bdd\u6846 QMessageBox]] [[11. \u6df1\u5165 Qt5 \u4fe1\u53f7\u69fd\u65b0\u8bed\u6cd5]] [[12. \u6587\u4ef6\u5bf9\u8bdd\u6846]] [[13. \u4e8b\u4ef6]] [[14. \u4e8b\u4ef6\u7684\u63a5\u53d7\u4e0e\u5ffd\u7565]] [[15. event()]] [[16. \u4e8b\u4ef6\u8fc7\u6ee4\u5668]] [[17. \u4e8b\u4ef6\u603b\u7ed3]] [[18. \u81ea\u5b9a\u4e49\u4e8b\u4ef6]] [[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb]] [[20. \u753b\u5237\u548c\u753b\u7b14]] [[21. \u53cd\u8d70\u6837]] [[22. \u6e10\u53d8]] [[23. \u5750\u6807\u7cfb\u7edf]] [[24. \u7ed8\u5236\u8bbe\u5907]] [[25. Graphics View Framework]] [[26. \u6587\u4ef6]] [[27. \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199]] [[28. \u6587\u672c\u6587\u4ef6\u8bfb\u5199]] [[29. \u5b58\u50a8\u5bb9\u5668]] [[30. \u904d\u5386\u5bb9\u5668]] [[31. \u9690\u5f0f\u6570\u636e\u5171\u4eab]] [[32. model view \u67b6\u6784]] [[33. QListWidget\u3001QTreeWidget \u548c QTableWidget]] [[34. \u6a21\u578b]] [[35. \u89c6\u56fe\u548c\u59d4\u6258]] [[36. \u89c6\u56fe\u4ee3\u7406]] [[37. \u4f7f\u7528\u62d6\u653e]] [[38. \u526a\u8d34\u677f]] [[39. QML \u548c QtQuick 2]] [[40. QML \u8bed\u6cd5]] [[41. QML \u57fa\u672c\u5143\u7d20]] [[42. QML \u7ec4\u4ef6]] [[43. \u5b9a\u4f4d\u5668]] [[44. \u5143\u7d20\u5e03\u5c40]] [[45. \u8f93\u5165\u5143\u7d20]] [[46. Repeater]] [[47. Canvas]] [[48. \u7c92\u5b50\u7cfb\u7edf]]","title":"00. Qt \u5b66\u4e60\u4e4b\u8def\u76ee\u5f55"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/01.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%A1%E5%8F%B7%E6%A7%BD/","text":"Qt \u7684\u4fe1\u53f7\u69fd\u673a\u5236\u5e76\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u90a3\u90e8\u5206\uff0c\u8fd8\u4f1a\u5141\u8bb8\u6211\u4eec\u81ea\u5df1\u8bbe\u8ba1\u81ea\u5df1\u7684\u4fe1\u53f7\u548c\u69fd\u3002\u8fd9\u4e5f\u662f Qt \u6846\u67b6\u7684\u8bbe\u8ba1\u601d\u8def\u4e4b\u4e00\uff0c\u7528\u4e8e\u6211\u4eec\u8bbe\u8ba1\u89e3\u8026\u7684\u7a0b\u5e8f\u3002 \u4fe1\u53f7\u69fd\u4e0d\u662f GUI \u6a21\u5757\u63d0\u4f9b\u7684\uff0c\u800c\u662f Qt \u6838\u5fc3\u7279\u6027\u4e4b\u4e00\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u666e\u901a\u7684\u63a7\u5236\u53f0\u7a0b\u5e8f\u4f7f\u7528\u4fe1\u53f7\u69fd\u3002 \u53ea\u6709\u7ee7\u627f\u4e86 QObject \u7c7b\u7684\u7c7b\uff0c\u624d\u5177\u6709\u4fe1\u53f7\u69fd\u7684\u80fd\u529b\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u4f7f\u7528\u4fe1\u53f7\u69fd\uff0c\u5fc5\u987b\u7ee7\u627f QObject \u3002\u51e1\u662f QObject \u7c7b\uff08\u4e0d\u7ba1\u662f\u76f4\u63a5\u5b50\u7c7b\u8fd8\u662f\u95f4\u63a5\u5b50\u7c7b\uff09\uff0c\u90fd\u5e94\u8be5\u5728\u7b2c\u4e00\u884c\u4ee3\u7801\u5199\u4e0a Q_OBJECT \u3002 \u4e0d\u7ba1\u662f\u4e0d\u662f\u4f7f\u7528\u4fe1\u53f7\u69fd\uff0c\u90fd\u5e94\u8be5\u6dfb\u52a0\u8fd9\u4e2a\u5b8f\u3002 \u8fd9\u4e2a\u5b8f\u7684\u5c55\u5f00\u5c06\u4e3a\u6211\u4eec\u7684\u7c7b\u63d0\u4f9b\u4fe1\u53f7\u69fd\u673a\u5236\u3001\u56fd\u9645\u5316\u673a\u5236\u4ee5\u53ca Qt \u63d0\u4f9b\u7684\u4e0d\u57fa\u4e8e C++ RTTI \u7684\u53cd\u5c04\u80fd\u529b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u4f60\u7684\u7c7b\u4e0d\u9700\u8981\u4f7f\u7528\u4fe1\u53f7\u69fd\uff0c\u5c31\u4e0d\u6dfb\u52a0\u8fd9\u4e2a\u5b8f\uff0c\u5c31\u662f\u9519\u8bef\u7684\u3002 \u8bb8\u591a\u521d\u5b66\u8005\u4f1a\u9047\u5230\u83ab\u540d\u5176\u5999\u7684\u9519\u8bef\uff0c\u4e00\u52a0\u4e0a Q_OBJECT \u5c31\u51fa\u9519\uff0c\u5f88\u5927\u4e00\u90e8\u5206\u662f\u56e0\u4e3a\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e2a\u5b8f\u5e94\u8be5\u653e\u5728\u5934\u6587\u4ef6\u4e2d\u3002 signals \u5757\u6240\u5217\u51fa\u7684\uff0c\u5c31\u662f\u8be5\u7c7b\u7684\u4fe1\u53f7\u3002\u4fe1\u53f7\u5c31\u662f\u4e00\u4e2a\u4e2a\u7684\u51fd\u6570\u540d\uff0c\u8fd4\u56de\u503c\u662f void\uff08\u56e0\u4e3a\u65e0\u6cd5\u83b7\u5f97\u4fe1\u53f7\u7684\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u4e5f\u5c31\u65e0\u9700\u8fd4\u56de\u4efb\u4f55\u503c\uff09\uff0c\u53c2\u6570\u662f\u8be5\u7c7b\u9700\u8981\u8ba9\u5916\u754c\u77e5\u9053\u7684\u6570\u636e\u3002 \u4fe1\u53f7\u4f5c\u4e3a\u51fd\u6570\u540d\uff0c\u4e0d\u9700\u8981\u5728 cpp \u51fd\u6570\u4e2d\u6dfb\u52a0\u4efb\u4f55\u5b9e\u73b0\u3002 emit \u662f Qt \u5bf9 C++ \u7684\u6269\u5c55\uff0c\u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff08\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u5b8f\uff09\uff0cemit \u7684\u542b\u4e49\u662f\u53d1\u51fa\u4fe1\u53f7\u3002 Qt 5 \u4e2d\uff0c\u4efb\u4f55\u6210\u5458\u51fd\u6570\u3001static \u51fd\u6570\u3001\u5168\u5c40\u51fd\u6570\u548c Lambda \u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u69fd\u51fd\u6570\u3002\u4e0e\u4fe1\u53f7\u51fd\u6570\u4e0d\u540c\uff0c\u69fd\u51fd\u6570\u5fc5\u987b\u81ea\u5df1\u5b8c\u6210\u5b9e\u73b0\u4ee3\u7801\u3002\u69fd\u51fd\u6570\u5c31\u662f\u666e\u901a\u7684\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u4e5f\u4f1a\u53d7\u5230 public\u3001private \u7b49\u8bbf\u95ee\u63a7\u5236\u7b26\u7684\u5f71\u54cd\u3002 \u81ea\u5b9a\u4e49\u4fe1\u53f7\u69fd\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879\uff1a - \u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u90fd\u9700\u8981\u662f QObject \u7684\u5b50\u7c7b\uff08\u5f53\u7136\uff0c\u69fd\u51fd\u6570\u662f\u5168\u5c40\u51fd\u6570\u3001Lambda \u8868\u8fbe\u5f0f\u7b49\u65e0\u9700\u63a5\u6536\u8005\u7684\u65f6\u5019\u9664\u5916\uff09\uff1b - \u4f7f\u7528 signals \u6807\u8bb0\u4fe1\u53f7\u51fd\u6570\uff0c\u4fe1\u53f7\u662f\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\uff0c\u8fd4\u56de void\uff0c\u4e0d\u9700\u8981\u5b9e\u73b0\u51fd\u6570\u4ee3\u7801\uff1b - \u69fd\u51fd\u6570\u662f\u666e\u901a\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u4f1a\u53d7\u5230 public\u3001private\u3001protected \u7684\u5f71\u54cd\uff1b - \u4f7f\u7528 emit \u5728\u6070\u5f53\u7684\u4f4d\u7f6e\u53d1\u9001\u4fe1\u53f7\uff1b - \u4f7f\u7528 QObject::connect() \u51fd\u6570\u8fde\u63a5\u4fe1\u53f7\u548c\u69fd\u3002 \u5b9e\u4f8b\u4ee3\u7801\uff1a //!!! Qt5 #include <QObject> ////////// newspaper.h class Newspaper : public QObject { Q_OBJECT public : Newspaper ( const QString & name ) : m_name ( name ) { } void send () { emit newPaper ( m_name ); } signals : void newPaper ( const QString & name ); private : QString m_name ; }; ////////// reader.h #include <QObject> #include <QDebug> class Reader : public QObject { Q_OBJECT public : Reader () {} void receiveNewspaper ( const QString & name ) { qDebug () << \"Receives Newspaper: \" << name ; } }; ////////// main.cpp #include <QCoreApplication> #include \"newspaper.h\" #include \"reader.h\" int main ( int argc , char * argv []) { QCoreApplication app ( argc , argv ); Newspaper newspaper ( \"Newspaper A\" ); Reader reader ; QObject :: connect ( & newspaper , & Newspaper :: newPaper , & reader , & Reader :: receiveNewspaper ); newspaper . send (); return app . exec (); }","title":"01. \u81ea\u5b9a\u4e49\u4fe1\u53f7\u69fd"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/02.%20Qt%20%E6%A8%A1%E5%9D%97%E7%AE%80%E4%BB%8B/","text":"Qt 5 \u6a21\u5757\u5206\u4e3a Essentials Modules \u548c Add-on Modules \u4e24\u90e8\u5206\u3002\u524d\u8005\u662f\u57fa\u7840\u6a21\u5757\uff0c\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u53ef\u7528\uff1b\u540e\u8005\u662f\u6269\u5c55\u6a21\u5757\uff0c\u5efa\u7acb\u5728\u57fa\u7840\u6a21\u5757\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5728\u80fd\u591f\u8fd0\u884c Qt \u7684\u5e73\u53f0\u4e4b\u4e0a\u53ef\u4ee5\u914c\u60c5\u5f15\u5165\u3002 Qt \u57fa\u7840\u6a21\u5757\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\uff1a - Qt Core \uff0c\u63d0\u4f9b\u6838\u5fc3\u7684\u975e GUI \u529f\u80fd\uff0c\u6240\u6709\u6a21\u5757\u90fd\u9700\u8981\u8fd9\u4e2a\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u7684\u7c7b\u5305\u62ec\u4e86\u52a8\u753b\u6846\u67b6\u3001\u5b9a\u65f6\u5668\u3001\u5404\u4e2a\u5bb9\u5668\u7c7b\u3001\u65f6\u95f4\u65e5\u671f\u7c7b\u3001\u4e8b\u4ef6\u3001IO\u3001JSON\u3001\u63d2\u4ef6\u673a\u5236\u3001\u667a\u80fd\u6307\u9488\u3001\u56fe\u5f62\uff08\u77e9\u5f62\u3001\u8def\u5f84\u7b49\uff09\u3001\u7ebf\u7a0b\u3001XML \u7b49\u3002\u6240\u6709\u8fd9\u4e9b\u7c7b\u90fd\u53ef\u4ee5\u901a\u8fc7\u5934\u6587\u4ef6\u5f15\u5165\u3002 - Qt Gui \uff0c\u63d0\u4f9b GUI \u7a0b\u5e8f\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5305\u62ec\u4e0e\u7a97\u53e3\u7cfb\u7edf\u7684\u96c6\u6210\u3001\u4e8b\u4ef6\u5904\u7406\u3001OpenGL \u548c OpenGL ES \u96c6\u6210\u30012D \u56fe\u50cf\u3001\u5b57\u4f53\u3001\u62d6\u653e\u7b49\u3002\u8fd9\u4e9b\u7c7b\u4e00\u822c\u7531 Qt \u7528\u6237\u754c\u9762\u7c7b\u5185\u90e8\u4f7f\u7528\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8bbf\u95ee\u5e95\u5c42\u7684 OpenGL ES \u56fe\u50cf API\u3002Qt Gui \u6a21\u5757\u63d0\u4f9b\u7684\u662f\u6240\u6709\u56fe\u5f62\u7528\u6237\u754c\u9762\u7a0b\u5e8f\u90fd\u9700\u8981\u7684\u901a\u7528\u529f\u80fd\u3002 - Qt Multimedia \uff0c\u63d0\u4f9b\u89c6\u9891\u3001\u97f3\u9891\u3001\u6536\u97f3\u673a\u4ee5\u53ca\u6444\u50cf\u5934\u7b49\u529f\u80fd\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += multimedia\u3002 - Qt Network \uff0c\u63d0\u4f9b\u8de8\u5e73\u53f0\u7684\u7f51\u7edc\u529f\u80fd\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += network\u3002 - Qt Qml \uff0c\u63d0\u4f9b\u4f9b QML\uff08\u4e00\u79cd\u811a\u672c\u8bed\u8a00\uff0c\u4e5f\u63d0\u4f9b JavaScript \u7684\u4ea4\u4e92\u673a\u5236\uff09 \u4f7f\u7528\u7684 C++ API\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += qml\u3002 - Qt Quick \uff0c\u5141\u8bb8\u5728 Qt/C++ \u7a0b\u5e8f\u4e2d\u5d4c\u5165 Qt Quick\uff08\u4e00\u79cd\u57fa\u4e8e Qt \u7684\u9ad8\u5ea6\u52a8\u753b\u7684\u7528\u6237\u754c\u9762\uff0c\u9002\u5408\u4e8e\u79fb\u52a8\u5e73\u53f0\u5f00\u53d1\uff09\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7 \u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += quick\u3002 - Qt SQL \uff0c\u5141\u8bb8\u4f7f\u7528 SQL \u8bbf\u95ee\u6570\u636e\u5e93\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7 \u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += sql\u3002 - Qt Test \uff0c\u63d0\u4f9b Qt \u7a0b\u5e8f\u7684\u5355\u5143\u6d4b\u8bd5\u529f\u80fd\u3002\u8fd9\u4e9b\u7c7b\u53ef\u4ee5\u901a\u8fc7 \u5f15\u5165\uff0c\u800c\u4e14\u9700\u8981\u5728 pro \u6587\u4ef6\u4e2d\u6dfb\u52a0 QT += testlib\u3002 - Qt Webkit \uff0c\u57fa\u4e8e WebKit2 \u7684\u5b9e\u73b0\u4ee5\u53ca\u4e00\u5957\u5168\u65b0\u7684 QML API\u3002 Qt \u6269\u5c55\u6a21\u5757\u5219\u6709\u66f4\u591a\u7684\u9009\u62e9\uff1a - Qt 3D \uff0c\u63d0\u4f9b\u58f0\u660e\u5f0f\u8bed\u6cd5\uff0c\u5728 Qt \u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u7b80\u5355\u5730\u5d4c\u5165 3D \u56fe\u50cf\u3002Qt 3D \u4e3a Qt Quick \u6dfb\u52a0\u4e86 3D \u5185\u5bb9\u6e32\u67d3\u3002Qt 3D \u63d0\u4f9b\u4e86 QML \u548c C++ \u4e24\u5957 API\uff0c\u7528\u4e8e\u5f00\u53d1 3D \u7a0b\u5e8f\u3002 - Qt Bluetooth \uff0c\u63d0\u4f9b\u7528\u4e8e\u8bbf\u95ee\u84dd\u7259\u65e0\u7ebf\u8bbe\u5907\u7684 C++ \u548c QML API\u3002 - Qt Contacts \uff0c\u7528\u4e8e\u8bbf\u95ee\u5730\u5740\u7c3f\u6216\u8005\u8054\u7cfb\u4eba\u6570\u636e\u5e93\u7684 C++ \u548c QML API\u3002 - Qt Concurrent \uff0c\u5c01\u88c5\u4e86\u5e95\u5c42\u7ebf\u7a0b\u6280\u672f\u7684\u7c7b\u5e93\uff0c\u65b9\u4fbf\u5f00\u53d1\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u3002 - Qt D-Bus \uff0c\u8fd9\u662f\u4e00\u4e2a\u4ec5\u4f9b Unix \u5e73\u53f0\u4f7f\u7528\u7684\u7c7b\u5e93\uff0c\u7528\u4e8e\u5229\u7528 D-Bus \u534f\u8bae\u8fdb\u884c\u8fdb\u7a0b\u95f4\u4ea4\u4e92\u3002 - Qt Graphical Effects \uff0c\u63d0\u4f9b\u4e00\u7cfb\u5217\u7528\u4e8e\u5b9e\u73b0\u56fe\u50cf\u7279\u6548\u7684\u7c7b\uff0c\u6bd4\u5982\u6a21\u7cca\u3001\u9510\u5316\u7b49\u3002 - Qt Image Formats \uff0c\u652f\u6301\u56fe\u7247\u683c\u5f0f\u7684\u4e00\u7cfb\u5217\u63d2\u4ef6\uff0c\u5305\u62ec TIFF\u3001MNG\u3001TGA \u548c WBMP\u3002 - Qt JS Backend \uff0c\u8be5\u6a21\u5757\u6ca1\u6709\u516c\u5f00\u7684 API\uff0c\u662f V8 JavaScript \u5f15\u64ce\u7684\u4e00\u4e2a\u79fb\u690d\u3002\u8fd9\u4e2a\u6a21\u5757\u4ec5\u4f9b QtQml \u6a21\u5757\u5185\u90e8\u4f7f\u7528\u3002 - Qt Location \uff0c\u63d0\u4f9b\u5b9a\u4f4d\u673a\u5236\u3001\u5730\u56fe\u548c\u5bfc\u822a\u6280\u672f\u3001\u4f4d\u7f6e\u641c\u7d22\u7b49\u529f\u80fd\u7684 QML \u548c C++ API\u3002 - Qt OpenGL \uff0c\u65b9\u4fbf\u5728 Qt \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 OpenGL\u3002\u8be5\u6a21\u5757\u4ec5\u4ec5\u4e3a\u4e86\u7a0b\u5e8f\u4ece Qt 4 \u79fb\u690d\u5230 Qt 5 \u7684\u65b9\u4fbf\u624d\u4fdd\u7559\u4e0b\u6765\uff0c\u5982\u679c\u4f60\u9700\u8981\u5728\u65b0\u7684 Qt 5 \u7a0b\u5e8f\u4e2d\u4f7f\u7528 OpenGL \u76f8\u5173\u6280\u672f\uff0c\u9700\u8981\u4f7f\u7528\u7684\u662f QtGui \u6a21\u5757\u4e2d\u7684 QOpenGL\u3002 - Qt Organizer \uff0c\u4f7f\u7528 QML \u548c C++ API \u8bbf\u95ee\u7ec4\u7ec7\u4e8b\u4ef6\uff08organizer event\uff09\u3002organizer API \u662f Personal Information Management API \u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u8bbf\u95ee Calendar \u4fe1\u606f\u3002\u901a\u8fc7 Organizer API \u53ef\u4ee5\u5b9e\u73b0\uff1a\u4ece\u65e5\u5386\u6570\u636e\u5e93\u8bbf\u95ee\u65e5\u5386\u65f6\u95f4\u3001\u5bfc\u5165 iCalendar \u4e8b\u4ef6\u6216\u8005\u5c06\u81ea\u5df1\u7684\u4e8b\u4ef6\u5bfc\u51fa\u5230 iCalendar\u3002 - Qt Print Support \uff0c\u63d0\u4f9b\u5bf9\u6253\u5370\u529f\u80fd\u7684\u652f\u6301\u3002 - Qt Publish and Subscribe \uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u5bf9\u9879\u76ee\u503c\u7684\u8bfb\u53d6\u3001\u5bfc\u822a\u3001\u8ba2\u9605\u7b49\u7684\u529f\u80fd\u3002 - Qt Quick 1 \uff0c\u4ece Qt 4 \u79fb\u690d\u8fc7\u6765\u7684 QtDeclarative \u6a21\u5757\uff0c\u7528\u4e8e\u63d0\u4f9b\u4e0e Qt 4 \u7684\u517c\u5bb9\u3002\u5982\u679c\u4f60\u9700\u8981\u5f00\u53d1\u65b0\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u4f7f\u7528 QtQuick \u6a21\u5757\u3002 - Qt Script \uff0c\u63d0\u4f9b\u811a\u672c\u5316\u673a\u5236\u3002\u8fd9\u4e5f\u662f\u4e3a\u63d0\u4f9b\u4e0e Qt 4 \u7684\u517c\u5bb9\u6027\uff0c\u5982\u679c\u8981\u4f7f\u7528\u811a\u672c\u5316\u652f\u6301\uff0c\u8bf7\u4f7f\u7528 QtQml \u6a21\u5757\u7684 QJS \u7c7b\u3002 - Qt Script Tools \uff0c\u4e3a\u4f7f\u7528\u4e86 Qt Script \u6a21\u5757\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u989d\u5916\u7684\u7ec4\u4ef6\u3002 - Qt Sensors \uff0c\u63d0\u4f9b\u8bbf\u95ee\u5404\u7c7b\u4f20\u611f\u5668\u7684 QML \u548c C++ \u63a5\u53e3\u3002 - Qt Service Framework \uff0c\u63d0\u4f9b\u5ba2\u6237\u7aef\u53d1\u73b0\u5176\u4ed6\u8bbe\u5907\u7684\u670d\u52a1\u3002Qt Service Framework \u4e3a\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u53d1\u73b0\u3001\u5b9e\u73b0\u548c\u8bbf\u95ee\u670d\u52a1\u5b9a\u4e49\u4e86\u4e00\u5957\u7edf\u4e00\u7684\u673a\u5236\u3002 - Qt SVG \uff0c\u63d0\u4f9b\u6e32\u67d3\u548c\u521b\u5efa SVG \u6587\u4ef6\u7684\u529f\u80fd\u3002 - Qt System Info \uff0c\u63d0\u4f9b\u4e00\u5957 API\uff0c\u7528\u4e8e\u53d1\u73b0\u7cfb\u7edf\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7535\u6c60\u4f7f\u7528\u91cf\u3001\u9501\u5c4f\u3001\u786c\u4ef6\u7279\u6027\u7b49\u3002 - Qt Tools \uff0c\u63d0\u4f9b\u4e86 Qt \u5f00\u53d1\u7684\u65b9\u4fbf\u5de5\u5177\uff0c\u5305\u62ec Qt CLucene\u3001Qt Designer\u3001Qt Help \u4ee5\u53ca Qt UI Tools \u3002 - Qt Versit \uff0c\u63d0\u4f9b\u4e86\u5bf9 Versit API \u7684\u652f\u6301\u3002Versit API \u662f Personal Information Management API \u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e QContacts \u548c vCard \u4ee5\u53ca QOrganizerItems \u548c iCalendar \u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\u3002 - Qt Wayland \uff0c\u4ec5\u7528\u4e8e Linux \u5e73\u53f0\uff0c\u7528\u4e8e\u66ff\u4ee3 QWS\uff0c\u5305\u62ec Qt Compositor API\uff08server\uff09\u548c Wayland \u5e73\u53f0\u63d2\u4ef6\uff08clients\uff09\u3002 - Qt WebKit \uff0c\u4ece Qt 4 \u79fb\u690d\u6765\u7684\u57fa\u4e8e WebKit1 \u548c QWidget \u7684 API\u3002 - Qt Widgets \uff0c\u4f7f\u7528 C++ \u6269\u5c55\u7684 Qt Gui \u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u754c\u9762\u7ec4\u4ef6\uff0c\u6bd4\u5982\u6309\u94ae\u3001\u5355\u9009\u6846\u7b49\u3002 - Qt XML \uff0cSAX \u548c DOM \u7684 C++ \u5b9e\u73b0\u3002\u8be5\u6a21\u5757\u5df2\u7ecf\u5e9f\u9664\uff0c\u8bf7\u4f7f\u7528 QXmlStreamReader/Writer\u3002 - Qt XML Patterns *\uff0c\u63d0\u4f9b\u5bf9 XPath\u3001XQuery\u3001XSLT \u548c XML Schema \u9a8c\u8bc1\u7684\u652f\u6301\u3002 \u8fd9\u91cc\u9700\u8981\u5f3a\u8c03\u4e00\u70b9\uff0c\u7531\u4e8e Qt \u7684\u6269\u5c55\u6a21\u5757\u5e76\u4e0d\u662f Qt \u5fc5\u987b\u5b89\u88c5\u7684\u90e8\u5206\uff0c\u56e0\u6b64 Qt \u5728\u672a\u6765\u7248\u672c\u4e2d\u53ef\u80fd\u4f1a\u63d0\u4f9b\u66f4\u591a\u7684\u6269\u5c55\u6a21\u5757\uff0c\u8fd9\u91cc\u7ed9\u51fa\u7684\u4e5f\u4ec5\u4ec5\u662f\u4e00\u4e9b\u73b0\u5728\u786e\u5b9a\u4f1a\u5305\u542b\u5728 Qt 5 \u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u4e9b\uff0c\u6bd4\u5982 Qt Active\u3001Qt QA \u7b49\uff0c\u5219\u53ef\u80fd\u4f1a\u5728 beta \u53ca\u4ee5\u540e\u7248\u672c\u4e2d\u51fa\u73b0\u3002","title":"02. Qt \u6a21\u5757\u7b80\u4ecb"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/03.%20MainWindow%20%E7%AE%80%E4%BB%8B/","text":"QMainWindow \u662f Qt \u6846\u67b6\u5e26\u6765\u7684\u4e00\u4e2a\u9884\u5b9a\u4e49\u597d\u7684\u4e3b\u7a97\u53e3\u7c7b\u3002\u6240\u8c13\u4e3b\u7a97\u53e3\uff0c\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u610f\u4e49\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u4e0d\u662f\u6307\u6e38\u620f\u4e4b\u7c7b\u7684\u90a3\u79cd\uff09\u6700\u9876\u5c42\u7684\u7a97\u53e3\u3002\u6bd4\u5982\u4f60\u73b0\u5728\u6b63\u5728\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\uff0c\u90a3\u4e48\u4e3b\u7a97\u53e3\u5c31\u662f\u8fd9\u4e2a\u6d4f\u89c8\u5668\u7a97\u53e3\u3002\u8bd5\u7740\u56de\u60f3\u4e00\u4e0b\u7ecf\u5178\u7684\u4e3b\u7a97\u53e3\uff0c\u901a\u5e38\u662f\u7531\u4e00\u4e2a\u6807\u9898\u680f\uff0c\u4e00\u4e2a\u83dc\u5355\u680f\uff0c\u82e5\u5e72\u5de5\u5177\u680f\u548c\u4e00\u4e2a\u4efb\u52a1\u680f\u3002\u5728\u8fd9\u4e9b\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u5219\u662f\u6211\u4eec\u7684\u5de5\u4f5c\u533a\u3002\u4e8b\u5b9e\u4e0a\uff0c QMainWindow \u6b63\u662f\u8fd9\u6837\u7684\u4e00\u79cd\u5e03\u5c40\u3002 \u5728\u65b0\u5efa\u5de5\u7a0b\u7684\u65f6\u5019\uff0cQt Creator \u901a\u5e38\u4f1a\u5e2e\u52a9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a MainWindow \uff0c\u76f4\u63a5\u4f7f\u7528 Qt Creator \u751f\u6210\u7684\u4ee3\u7801\u6765\u7f16\u8bd1\u8fd0\u884c\u4e00\u4e0b\uff1a #include \"mainwindow.h\" #include <QApplication> #include <QLocale> #include <QTranslator> int main ( int argc , char * argv []) { QApplication a ( argc , argv ); QTranslator translator ; const QStringList uiLanguages = QLocale :: system (). uiLanguages (); for ( const QString & locale : uiLanguages ) { const QString baseName = \"MainWnd_\" + QLocale ( locale ). name (); if ( translator . load ( \":/i18n/\" + baseName )) { a . installTranslator ( & translator ); break ; } } MainWindow w ; w . show (); return a . exec (); } \u5728 Windows 11 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a ![[MainWindow_1.png]] \u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u8fd9\u4e2a\u7a97\u53e3\u3002\u867d\u7136\u4e0d\u592a\u660e\u663e\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u5206\u6210\u4e86\u51e0\u4e2a\u90e8\u5206\uff1a ![[MainWindow_2.png]] \u4e3b\u7a97\u53e3\u7684\u6700\u4e0a\u9762\u662f Window Title\uff0c\u4e5f\u5c31\u662f\u6807\u9898\u680f\uff0c\u901a\u5e38\u7528\u4e8e\u663e\u793a\u6807\u9898\u548c\u63a7\u5236\u6309\u94ae\uff0c\u6bd4\u5982\u6700\u5927\u5316\u3001\u6700\u5c0f\u5316\u548c\u5173\u95ed\u7b49\u3002\u901a\u5e38\uff0c\u5404\u4e2a\u56fe\u5f62\u754c\u9762\u6846\u67b6\u90fd\u4f1a\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u672c\u5730\u4ee3\u7801\u6765\u751f\u6210\u4e00\u4e2a\u7a97\u53e3\u3002\u6240\u4ee5\uff0c\u4f60\u4f1a\u770b\u5230\u5728 KDE \u4e0a\u9762\uff0c\u4e3b\u7a97\u53e3\u7684\u6807\u9898\u680f\u662f KDE \u6837\u5f0f\u7684\uff1b\u5728 Windows \u5e73\u53f0\u4e0a\uff0c\u6807\u9898\u680f\u662f Windows \u98ce\u683c\u7684\u3002\u5982\u679c\u4f60\u4e0d\u559c\u6b22\u672c\u5730\u6837\u5f0f\uff0c\u6bd4\u5982 QQ \u8fd9\u79cd\uff0c\u5b83\u5176\u5b9e\u662f\u81ea\u5df1\u5c06\u6807\u9898\u680f\u7ed8\u5236\u51fa\u6765\uff0c\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a DirectUI\uff0c\u4e5f\u5c31\u662f\u65e0\u53e5\u67c4\u7ed8\u5236\uff0c\u8fd9\u4e0d\u5728\u672c\u6587\u7684\u8ba8\u8bba\u8303\u7574\u3002Window Title \u4e0b\u9762\u662f Menu Bar\uff0c\u4e5f\u5c31\u662f\u83dc\u5355\u680f\uff0c\u7528\u4e8e\u663e\u793a\u83dc\u5355\u3002\u7a97\u53e3\u6700\u5e95\u90e8\u662f Status Bar\uff0c\u79f0\u4e3a\u72b6\u6001\u680f\u3002\u5f53\u6211\u4eec\u9f20\u6807\u6ed1\u8fc7\u67d0\u4e9b\u7ec4\u4ef6\u65f6\uff0c\u53ef\u4ee5\u5728\u72b6\u6001\u680f\u663e\u793a\u67d0\u4e9b\u4fe1\u606f\uff0c\u6bd4\u5982\u6d4f\u89c8\u5668\u4e2d\uff0c\u9f20\u6807\u6ed1\u8fc7\u5e26\u6709\u94fe\u63a5\u7684\u6587\u5b57\uff0c\u4f60\u4f1a\u5728\u5e95\u90e8\u770b\u5230\u94fe\u63a5\u7684\u5b9e\u9645 URL\u3002 \u9664\u53bb\u4e0a\u9762\u8bf4\u7684\u4e09\u4e2a\u6a2a\u5411\u7684\u680f\uff0c\u4e2d\u95f4\u662f\u4ee5\u77e9\u5f62\u533a\u57df\u8868\u793a\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u5916\u5c42\u79f0\u4e3a Tool Bar Area\uff0c\u7528\u4e8e\u663e\u793a\u5de5\u5177\u6761\u533a\u57df\u3002\u4e4b\u6240\u4ee5\u662f\u77e9\u5f62\u8868\u793a\uff0c\u662f\u56e0\u4e3a\uff0cQt \u7684\u4e3b\u7a97\u53e3\u652f\u6301\u591a\u4e2a\u5de5\u5177\u6761\u3002\u4f60\u53ef\u4ee5\u5c06\u5de5\u5177\u6761\u62d6\u653e\u5230\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u8fd9\u91cc\u8bf4\u662f Area\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u51e0\u4e2a\u5de5\u5177\u6761\u5e76\u6392\u663e\u793a\u5728\u8fd9\u91cc\uff0c\u5c31\u50cf Word 2003 \u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u5206\u522b\u653e\u7f6e\uff0c\u7c7b\u4f3c Photoshop\u3002\u5728\u5de5\u5177\u6761\u533a\u57df\u5185\u90e8\u662f Dock Widget Area\uff0c\u8fd9\u662f\u505c\u9760\u7a97\u53e3\u7684\u663e\u793a\u533a\u57df\u3002\u6240\u8c13\u505c\u9760\u7a97\u53e3\uff0c\u5c31\u50cf Photoshop \u7684\u5de5\u5177\u7bb1\u4e00\u6837\uff0c\u53ef\u4ee5\u505c\u9760\u5728\u4e3b\u7a97\u53e3\u7684\u56db\u5468\uff0c\u4e5f\u53ef\u4ee5\u6d6e\u52a8\u663e\u793a\u3002\u4e3b\u7a97\u53e3\u6700\u4e2d\u95f4\u79f0\u4e3a Central Widget\uff0c\u5c31\u662f\u6211\u4eec\u7a0b\u5e8f\u7684\u5de5\u4f5c\u533a\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5c06\u7a0b\u5e8f\u6700\u4e3b\u8981\u7684\u5de5\u4f5c\u533a\u57df\u653e\u7f6e\u5728\u8fd9\u91cc\uff0c\u7c7b\u4f3c Word \u7684\u7a3f\u7eb8\u6216\u8005 Photoshop \u7684\u753b\u5e03\u7b49\u7b49\u3002 \u5bf9\u4e8e\u4e00\u822c\u7684 Qt \u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u6240\u9700\u8981\u505a\u7684\uff0c\u5c31\u662f\u7f16\u5199\u6211\u4eec\u7684\u4e3b\u7a97\u53e3\u4ee3\u7801\uff0c\u4e3b\u8981\u662f\u5411\u5176\u4e2d\u6dfb\u52a0\u5404\u79cd\u7ec4\u4ef6\uff0c\u6bd4\u5982\u83dc\u5355\u3001\u5de5\u5177\u680f\u7b49\uff0c\u5f53\u7136\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u5f53\u4e2d\u7684\u5de5\u4f5c\u533a\u3002\u5f53\u6211\u4eec\u5c06\u8fd9\u4e9b\u90fd\u5904\u7406\u5b8c\u6bd5\u4e4b\u540e\uff0c\u57fa\u672c\u4e0a\u7a0b\u5e8f\u7684\u5de5\u5177\u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u5b9e\u73b0\u3002 \u901a\u5e38\u6211\u4eec\u7684\u7a0b\u5e8f\u4e3b\u7a97\u53e3\u4f1a\u7ee7\u627f\u81ea QMainWindow \uff0c\u4ee5\u4fbf\u83b7\u5f97 QMainWindow \u63d0\u4f9b\u7684\u5404\u79cd\u4fbf\u5229\u7684\u51fd\u6570\u3002\u8fd9\u4e5f\u662f Qt Creator \u751f\u6210\u7684\u4ee3\u7801\u6240\u505a\u7684\u3002","title":"03. MainWindow \u7b80\u4ecb"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/04.%20%E6%B7%BB%E5%8A%A0%E5%8A%A8%E4%BD%9C/","text":"Qt \u4f7f\u7528 QAction \u7c7b\u4f5c\u4e3a\u52a8\u4f5c\u3002\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u4ee3\u8868\u4e86\u7a97\u53e3\u7684\u4e00\u4e2a\u201c\u52a8\u4f5c\u201d\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u53ef\u80fd\u663e\u793a\u5728\u83dc\u5355\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u83dc\u5355\u9879\uff0c\u5f53\u7528\u6237\u70b9\u51fb\u8be5\u83dc\u5355\u9879\uff0c\u5bf9\u7528\u6237\u7684\u70b9\u51fb\u505a\u51fa\u54cd\u5e94\uff1b\u4e5f\u53ef\u80fd\u5728\u5de5\u5177\u680f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5de5\u5177\u680f\u6309\u94ae\uff0c\u7528\u6237\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u5c31\u53ef\u4ee5\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\uff1a\u65e0\u8bba\u662f\u51fa\u73b0\u5728\u83dc\u5355\u680f\u8fd8\u662f\u5de5\u5177\u680f\uff0c\u7528\u6237\u9009\u62e9\u4e4b\u540e\uff0c\u6240\u6267\u884c\u7684\u52a8\u4f5c\u5e94\u8be5\u90fd\u662f\u4e00\u6837\u7684\u3002\u56e0\u6b64\uff0cQt \u5e76\u6ca1\u6709\u4e13\u95e8\u7684\u83dc\u5355\u9879\u7c7b\uff0c\u53ea\u662f\u4f7f\u7528\u4e00\u4e2a QAction \u7c7b\uff0c\u62bd\u8c61\u51fa\u516c\u5171\u7684\u52a8\u4f5c\u3002\u5f53\u6211\u4eec\u628a QAction \u5bf9\u8c61\u6dfb\u52a0\u5230\u83dc\u5355\uff0c\u5c31\u663e\u793a\u6210\u4e00\u4e2a\u83dc\u5355\u9879\uff0c\u6dfb\u52a0\u5230\u5de5\u5177\u680f\uff0c\u5c31\u663e\u793a\u6210\u4e00\u4e2a\u5de5\u5177\u6309\u94ae\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u83dc\u5355\u9879\u3001\u70b9\u51fb\u5de5\u5177\u680f\u6309\u94ae\u3001\u70b9\u51fb\u5feb\u6377\u952e\u6765\u6fc0\u6d3b\u8fd9\u4e2a\u52a8\u4f5c\u3002 QAction \u5305\u542b\u4e86\u56fe\u6807\u3001\u83dc\u5355\u6587\u5b57\u3001\u5feb\u6377\u952e\u3001\u72b6\u6001\u680f\u6587\u5b57\u3001\u6d6e\u52a8\u5e2e\u52a9\u7b49\u4fe1\u606f\u3002\u5f53\u628a\u4e00\u4e2a QAction \u5bf9\u8c61\u6dfb\u52a0\u5230\u7a0b\u5e8f\u4e2d\u65f6\uff0cQt \u81ea\u5df1\u9009\u62e9\u4f7f\u7528\u54ea\u4e2a\u5c5e\u6027\u6765\u663e\u793a\uff0c\u65e0\u9700\u6211\u4eec\u5173\u5fc3\u3002\u540c\u65f6\uff0cQt \u80fd\u591f\u4fdd\u8bc1\u628a QAction \u5bf9\u8c61\u6dfb\u52a0\u5230\u4e0d\u540c\u7684\u83dc\u5355\u3001\u5de5\u5177\u680f\u65f6\uff0c\u663e\u793a\u5185\u5bb9\u662f\u540c\u6b65\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u83dc\u5355\u4e2d\u4fee\u6539\u4e86 QAction \u7684\u56fe\u6807\uff0c\u90a3\u4e48\u5728\u5de5\u5177\u680f\u4e0a\u9762\u8fd9\u4e2a QAction \u6240\u5bf9\u5e94\u7684\u6309\u94ae\u7684\u56fe\u6807\u4e5f\u4f1a\u540c\u6b65\u4fee\u6539\u3002 \u5982\u4f55\u5728 QMainWindow \u4e2d\u4f7f\u7528 QAction \uff1a // !!! Qt 5 // ========== mainwindow.h #ifndef MAINWINDOW_H #define MAINWINDOW_H #include <QMainWindow> QT_BEGIN_NAMESPACE namespace Ui { class MainWindow ; } QT_END_NAMESPACE class MainWindow : public QMainWindow { Q_OBJECT public : MainWindow ( QWidget * parent = nullptr ); ~ MainWindow (); private : Ui :: MainWindow * ui ; void open (); QAction * openAction ; }; #endif // MAINWINDOW_H // ========== mainwindow.cpp #include \"mainwindow.h\" #include \"ui_mainwindow.h\" #include <QMessageBox> #include <qtoolbar.h> #include <qaction.h> MainWindow :: MainWindow ( QWidget * parent ) : QMainWindow ( parent ) , ui ( new Ui :: MainWindow ) { ui -> setupUi ( this ); openAction = new QAction ( QIcon ( \":/images/doc-open\" ), tr ( \"&Open...\" ), this ); openAction -> setShortcuts ( QKeySequence :: Open ); openAction -> setStatusTip ( tr ( \"Open an existing file\" )); connect ( openAction , & QAction :: triggered , this , & MainWindow :: open ); QMenu * file = menuBar () -> addMenu ( tr ( \"&File\" )); file -> addAction ( openAction ); QToolBar * toolBar = addToolBar ( tr ( \"&File\" )); toolBar -> addAction ( openAction ); statusBar () ; } MainWindow ::~ MainWindow () { delete ui ; } void MainWindow :: open () { QMessageBox :: information ( this , tr ( \"Information\" ), tr ( \"Open\" )); } \u8fd0\u884c\u7ed3\u679c\uff1a ![[\u6dfb\u52a0\u52a8\u4f5c.png]] \u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u5b8c\u6574\u7684\u7a0b\u5e8f\u3002\u9996\u5148\uff0c\u6211\u4eec\u5728 MainWindow \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u79c1\u6709\u51fd\u6570 open() \u548c\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf openAction \u3002\u6ce8\u610f\u6211\u4eec\u7684\u6587\u672c\u4f7f\u7528 tr() \u51fd\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e Qt \u56fd\u9645\u5316\u7684\u51fd\u6570\u3002\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Qt \u63d0\u4f9b\u7684\u56fd\u9645\u5316\u5de5\u5177\uff0c\u5c06 tr() \u51fd\u6570\u7684\u5b57\u7b26\u4e32\u63d0\u53d6\u51fa\u6765\uff0c\u8fdb\u884c\u56fd\u9645\u5316\u3002\u7531\u4e8e\u6240\u9700\u8fdb\u884c\u56fd\u9645\u5316\u7684\u6587\u672c\u5e94\u8be5\u88ab\u5927\u591a\u6570\u4eba\u8ba4\u8bc6\uff0c\u6240\u4ee5\uff0c tr() \u51fd\u6570\u91cc\u9762\u4e00\u822c\u4f1a\u662f\u82f1\u6587\u6587\u672c\u3002 \u7136\u540e\uff0c\u6211\u4eec\u5728\u5806\u4e0a\u521b\u5efa\u4e86 openAction \u5bf9\u8c61\u3002\u5728 QAction \u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u4f20\u5165\u4e86\u4e00\u4e2a\u56fe\u6807\u3001\u4e00\u4e2a\u6587\u672c\u548c this \u6307\u9488\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\u89e3\u91ca this \u6307\u9488\u7684\u542b\u4e49\u3002 QAction \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\uff0c\u6587\u672c\u503c\u524d\u9762\u6709\u4e00\u4e2a &\uff0c\u610f\u5473\u7740\u8fd9\u5c06\u6210\u4e3a\u4e00\u4e2a\u5feb\u6377\u952e\u3002\u6ce8\u610f\u770b\u622a\u56fe\u4e2d File \u7684 F \u6709\u4e00\u4e2a\u4e0b\u5212\u7ebf\u3002 \u4e0b\u9762\u4e00\u53e5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 setShortcut() \u51fd\u6570\uff0c\u7528\u4e8e\u8bf4\u660e\u8fd9\u4e2a QAction \u7684\u5feb\u6377\u952e\u3002Qt \u7684 QKeySequence \u4e3a\u6211\u4eec\u5b9a\u4e49\u4e86\u5f88\u591a\u5185\u7f6e\u7684\u5feb\u6377\u952e\uff0c\u6bd4\u5982\u6211\u4eec\u4f7f\u7528\u7684 Open\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u67e5\u9605 API \u6587\u6863\u83b7\u5f97\u6240\u6709\u7684\u5feb\u6377\u952e\u5217\u8868\u3002 \u8fd9\u4e2a\u4e0e\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a tr(\"Ctrl+O\") \u6765\u5b9e\u73b0\u5feb\u6377\u952e\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u8fd9\u662f Qt \u8de8\u5e73\u53f0\u6027\u7684\u4f53\u73b0\u3002\u6bd4\u5982 PC \u952e\u76d8\u548c Mac \u952e\u76d8\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4e00\u4e9b\u952e\u5728 PC \u952e\u76d8\u4e0a\u6709\uff0c\u800c Mac \u952e\u76d8\u4e0a\u53ef\u80fd\u5e76\u4e0d\u5b58\u5728\uff0c\u6216\u8005\u53cd\u4e4b\u3002\u4f7f\u7528 QKeySequence \u7c7b\u6765\u6dfb\u52a0\u5feb\u6377\u952e\uff0c\u4f1a\u6839\u636e\u5e73\u53f0\u7684\u4e0d\u540c\u6765\u5b9a\u4e49\u76f8\u5e94\u7684\u5feb\u6377\u952e\u3002 setStatusTip() \u5219\u5b9e\u73b0\u4e86\u5f53\u7528\u6237\u9f20\u6807\u6ed1\u8fc7\u8fd9\u4e2a action \u65f6\uff0c\u4f1a\u5728\u4e3b\u7a97\u53e3\u4e0b\u65b9\u7684\u72b6\u6001\u680f\u663e\u793a\u76f8\u5e94\u7684\u63d0\u793a\u3002 \u540e\u9762\u7684 connect() \u51fd\u6570\uff0c\u5c06\u8fd9\u4e2a QAction \u7684 triggered() \u4fe1\u53f7\u4e0e MainWindow \u7c7b\u7684 open() \u51fd\u6570\u8fde\u63a5\u8d77\u6765\u3002\u5f53\u7528\u6237\u70b9\u51fb\u4e86\u8fd9\u4e2a QAction \u65f6\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1 MainWindow \u7684 open() \u51fd\u6570\u3002\u8fd9\u662f\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u4e86\u89e3\u8fc7\u7684\u3002 \u4e0b\u9762\u7684 menuBar() \u3001 toolBar() \u548c statusBar() \u4e09\u4e2a\u662f QMainWindow \u7684\u51fd\u6570\uff0c\u7528\u4e8e\u521b\u5efa\u5e76\u8fd4\u56de\u83dc\u5355\u680f\u3001\u5de5\u5177\u680f\u548c\u72b6\u6001\u680f\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee3\u7801\u6e05\u695a\u5730\u770b\u51fa\uff0c\u6211\u4eec\u5411\u83dc\u5355\u680f\u6dfb\u52a0\u4e86\u4e00\u4e2a File \u83dc\u5355\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a QAction \u5bf9\u8c61\u6dfb\u52a0\u5230\u8fd9\u4e2a\u83dc\u5355\uff1b\u540c\u65f6\u65b0\u589e\u52a0\u4e86\u4e00\u4e2a File \u5de5\u5177\u680f\uff0c\u4e5f\u628a QAction \u5bf9\u8c61\u6dfb\u52a0\u5230\u4e86\u8fd9\u4e2a\u5de5\u5177\u680f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u83dc\u5355\u4e2d\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u663e\u793a\u6210\u4e00\u4e2a\u83dc\u5355\u9879\uff0c\u5728\u5de5\u5177\u680f\u53d8\u6210\u4e86\u4e00\u4e2a\u6309\u94ae\u3002\u81f3\u4e8e\u72b6\u6001\u680f\uff0c\u5219\u662f\u51fa\u73b0\u5728\u7a97\u53e3\u6700\u4e0b\u65b9\uff0c\u7528\u4e8e\u663e\u793a\u52a8\u4f5c\u5bf9\u8c61\u7684\u63d0\u793a\u4fe1\u606f\u7684\u3002","title":"04. \u6dfb\u52a0\u52a8\u4f5c"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/05.%20%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6/","text":"Qt \u8d44\u6e90\u7cfb\u7edf\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u8d44\u6e90\u673a\u5236\uff0c\u7528\u4e8e\u5c06\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u8d44\u6e90\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u5b58\u50a8\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u5185\u90e8\u3002\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u9700\u8981\u52a0\u8f7d\u7279\u5b9a\u7684\u8d44\u6e90\uff08\u56fe\u6807\u3001\u6587\u672c\u7ffb\u8bd1\u7b49\uff09\uff0c\u90a3\u4e48\uff0c\u5c06\u5176\u653e\u7f6e\u5728\u8d44\u6e90\u6587\u4ef6\u4e2d\uff0c\u5c31\u518d\u4e5f\u4e0d\u9700\u8981\u62c5\u5fc3\u8fd9\u4e9b\u6587\u4ef6\u7684\u4e22\u5931\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u5c06\u8d44\u6e90\u4ee5\u8d44\u6e90\u6587\u4ef6\u5f62\u5f0f\u5b58\u50a8\uff0c\u5b83\u662f\u4f1a\u7f16\u8bd1\u5230\u53ef\u6267\u884c\u6587\u4ef6\u5185\u90e8\u3002 \u4f7f\u7528 Qt Creator \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u521b\u5efa\u8d44\u6e90\u6587\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5de5\u7a0b\u4e0a\u70b9\u53f3\u952e\uff0c\u9009\u62e9\u201c\u6dfb\u52a0\u65b0\u6587\u4ef6\u2026\u201d\uff0c\u53ef\u4ee5\u5728 Qt \u5206\u7c7b\u4e0b\u627e\u5230\u201cQt \u8d44\u6e90\u6587\u4ef6\u201d\uff1a ![[\u8d44\u6e90\u6587\u4ef6_1.png]] \u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 Qt Creator \u7684\u5de6\u4fa7\u6587\u4ef6\u5217\u8868\u4e2d\u770b\u5230\u201cResources\u201d\u4e00\u9879\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u65b0\u521b\u5efa\u7684\u8d44\u6e90\u6587\u4ef6\uff1a ![[\u8d44\u6e90\u6587\u4ef6_2.png]] \u8d44\u6e90\u6587\u4ef6\u7f16\u8f91\uff1a ![[\u8d44\u6e90\u6587\u4ef6_3.png]] \u5982\u679c\u4ee5\u540e\u6211\u4eec\u8981\u66f4\u6539\u6587\u4ef6\u540d\uff0c\u6bd4\u5982\u5c06 docuemnt-open.png \u6539\u6210 docopen.png\uff0c\u90a3\u4e48\uff0c\u6240\u6709\u4f7f\u7528\u4e86\u8fd9\u4e2a\u540d\u5b57\u7684\u8def\u5f84\u90fd\u9700\u8981\u4fee\u6539\u3002\u6240\u4ee5\uff0c\u66f4\u597d\u7684\u529e\u6cd5\u662f\uff0c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u6587\u4ef6\u53d6\u4e00\u4e2a\u201c\u522b\u540d\u201d\uff0c\u4ee5\u540e\u5c31\u4ee5\u8fd9\u4e2a\u522b\u540d\u6765\u5f15\u7528\u8fd9\u4e2a\u6587\u4ef6\u3002 \u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u8fd8\u4f1a\u770b\u5230\u8d44\u6e90\u7f16\u8f91\u7a97\u53e3\u6700\u4e0b\u65b9\u6709\u4e00\u4e2a\u201c\u8bed\u8a00\u201d\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5bf9\u8d44\u6e90\u8fdb\u884c\u56fd\u9645\u5316\u3002\u8fd9\u4e2a\u201c\u8bed\u8a00\u201d\u7684\u4f5c\u7528\u662f\uff0c\u5982\u679c Qt \u53d1\u73b0\uff0c\u672c\u673a\u7684\u672c\u5730\u5316\u4fe1\u606f\u662f fr \u7684\u8bdd\uff08 QLocale::system().name() \u8fd4\u56de fr_FR\uff09\uff0c\u5219\u4f7f\u7528 :/images/fr/doc-open \u8fd9\u4e2a\u56fe\u7247\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 :/images/doc-open \u8fd9\u4e2a\u3002","title":"05. \u8d44\u6e90\u6587\u4ef6"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/06.%20%E5%B8%83%E5%B1%80%E7%AE%A1%E7%90%86%E5%99%A8/","text":"\u6240\u8c13 GUI \u754c\u9762\uff0c\u5f52\u6839\u7ed3\u5e95\uff0c\u5c31\u662f\u4e00\u5806\u7ec4\u4ef6\u7684\u53e0\u52a0\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u628a\u6309\u94ae\u653e\u4e0a\u9762\uff0c\u628a\u56fe\u6807\u653e\u4e0a\u9762\uff0c\u8fd9\u6837\u5c31\u6210\u4e86\u4e00\u4e2a\u754c\u9762\u3002\u5728\u653e\u7f6e\u65f6\uff0c\u7ec4\u4ef6\u7684\u4f4d\u7f6e\u5c24\u5176\u91cd\u8981\u3002\u6211\u4eec\u5fc5\u987b\u8981\u6307\u5b9a\u7ec4\u4ef6\u653e\u5728\u54ea\u91cc\uff0c\u4ee5\u4fbf\u7a97\u53e3\u80fd\u591f\u6309\u7167\u6211\u4eec\u9700\u8981\u7684\u65b9\u5f0f\u8fdb\u884c\u6e32\u67d3\u3002\u8fd9\u5c31\u6d89\u53ca\u5230\u7ec4\u4ef6\u5b9a\u4f4d\u7684\u673a\u5236\u3002Qt \u63d0\u4f9b\u4e86\u4e24\u79cd\u7ec4\u4ef6\u5b9a\u4f4d\u673a\u5236\uff1a\u7edd\u5bf9\u5b9a\u4f4d\u548c\u5e03\u5c40\u5b9a\u4f4d\u3002 \u987e\u540d\u601d\u4e49\uff0c\u7edd\u5bf9\u5b9a\u4f4d\u5c31\u662f\u4e00\u79cd\u6700\u539f\u59cb\u7684\u5b9a\u4f4d\u65b9\u6cd5\uff1a\u7ed9\u51fa\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u5750\u6807\u548c\u957f\u5bbd\u503c\u3002\u8fd9\u6837\uff0cQt \u5c31\u77e5\u9053\u8be5\u628a\u7ec4\u4ef6\u653e\u5728\u54ea\u91cc\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u7ec4\u4ef6\u7684\u5927\u5c0f\u3002\u4f46\u662f\u8fd9\u6837\u505a\u5e26\u6765\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u7528\u6237\u6539\u53d8\u4e86\u7a97\u53e3\u5927\u5c0f\uff0c\u6bd4\u5982\u70b9\u51fb\u6700\u5927\u5316\u6309\u94ae\u6216\u8005\u4f7f\u7528\u9f20\u6807\u62d6\u52a8\u7a97\u53e3\u8fb9\u7f18\uff0c\u91c7\u7528\u7edd\u5bf9\u5b9a\u4f4d\u7684\u7ec4\u4ef6\u662f\u4e0d\u4f1a\u6709\u4efb\u4f55\u54cd\u5e94\u7684\u3002\u8fd9\u4e5f\u5f88\u81ea\u7136\uff0c\u56e0\u4e3a\u4f60\u5e76\u6ca1\u6709\u544a\u8bc9 Qt\uff0c\u5728\u7a97\u53e3\u53d8\u5316\u65f6\uff0c\u7ec4\u4ef6\u662f\u5426\u8981\u66f4\u65b0\u81ea\u5df1\u4ee5\u53ca\u5982\u4f55\u66f4\u65b0\u3002\u5982\u679c\u4f60\u9700\u8981\u8ba9\u7ec4\u4ef6\u81ea\u52a8\u66f4\u65b0\u2014\u2014\u8fd9\u662f\u5f88\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u5728\u6700\u5927\u5316\u65f6\uff0cWord \u603b\u4f1a\u628a\u7a3f\u7eb8\u533a\u653e\u5927\uff0c\u628a\u5de5\u5177\u680f\u62c9\u957f\u2014\u2014\u5c31\u8981\u81ea\u5df1\u7f16\u5199\u76f8\u5e94\u7684\u51fd\u6570\u6765\u54cd\u5e94\u8fd9\u4e9b\u53d8\u5316\u3002\u6216\u8005\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u7981\u6b62\u7528\u6237\u6539\u53d8\u7a97\u53e3\u5927\u5c0f\u3002\u4f46\u8fd9\u603b\u4e0d\u662f\u957f\u8fdc\u4e4b\u8ba1\u3002 \u9488\u5bf9\u8fd9\u79cd\u53d8\u5316\u7684\u9700\u6c42\uff0cQt \u63d0\u4f9b\u4e86\u53e6\u5916\u7684\u4e00\u79cd\u673a\u5236\u2014\u2014\u5e03\u5c40\u2014\u2014\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f60\u53ea\u8981\u628a\u7ec4\u4ef6\u653e\u5165\u67d0\u4e00\u79cd\u5e03\u5c40\uff0c\u5e03\u5c40\u7531\u4e13\u95e8\u7684\u5e03\u5c40\u7ba1\u7406\u5668\u8fdb\u884c\u7ba1\u7406\u3002\u5f53\u9700\u8981\u8c03\u6574\u5927\u5c0f\u6216\u8005\u4f4d\u7f6e\u7684\u65f6\u5019\uff0cQt \u4f7f\u7528\u5bf9\u5e94\u7684\u5e03\u5c40\u7ba1\u7406\u5668\u8fdb\u884c\u8c03\u6574\u3002 Qt \u63d0\u4f9b\u4e86\u51e0\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\u4f9b\u6211\u4eec\u9009\u62e9\uff1a - QHBoxLayout \uff1a\u6309\u7167\u6c34\u5e73\u65b9\u5411\u4ece\u5de6\u5230\u53f3\u5e03\u5c40\uff1b - QVBoxLayout \uff1a\u6309\u7167\u7ad6\u76f4\u65b9\u5411\u4ece\u4e0a\u5230\u4e0b\u5e03\u5c40\uff1b - QGridLayout \uff1a\u5728\u4e00\u4e2a\u7f51\u683c\u4e2d\u8fdb\u884c\u5e03\u5c40\uff0c\u7c7b\u4f3c\u4e8e HTML \u7684 table\uff1b - QFormLayout \uff1a\u6309\u7167\u8868\u683c\u5e03\u5c40\uff0c\u6bcf\u4e00\u884c\u524d\u9762\u662f\u4e00\u6bb5\u6587\u672c\uff0c\u6587\u672c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u7ec4\u4ef6\uff08\u901a\u5e38\u662f\u8f93\u5165\u6846\uff09\uff0c\u7c7b\u4f3c HTML \u7684 form\uff1b - QStackedLayout \uff1a\u5c42\u53e0\u7684\u5e03\u5c40\uff0c\u5141\u8bb8\u6211\u4eec\u5c06\u51e0\u4e2a\u7ec4\u4ef6\u6309\u7167 Z \u8f74\u65b9\u5411\u5806\u53e0\uff0c\u53ef\u4ee5\u5f62\u6210\u5411\u5bfc\u90a3\u79cd\u4e00\u9875\u4e00\u9875\u7684\u6548\u679c\u3002","title":"06. \u5e03\u5c40\u7ba1\u7406\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/07.%20%E8%8F%9C%E5%8D%95%E6%A0%8F%E3%80%81%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E7%8A%B6%E6%80%81%E6%A0%8F/","text":"\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\uff0cQt \u5c06\u7528\u6237\u4e0e\u754c\u9762\u8fdb\u884c\u4ea4\u4e92\u7684\u5143\u7d20\u62bd\u8c61\u4e3a\u4e00\u79cd\u201c\u52a8\u4f5c\u201d\uff0c\u4f7f\u7528 QAction \u7c7b\u8868\u793a\u3002 QAction \u53ef\u4ee5\u6dfb\u52a0\u5230\u83dc\u5355\u4e0a\u3001\u5de5\u5177\u680f\u4e0a\u3002 \u4e0b\u9762\u662f\u7a0b\u5e8f\u4ee3\u7801\u7247\u6bb5\uff1a openAction = new QAction ( QIcon ( \":/images/doc-open\" ), tr ( \"&Open...\" ), this ); openAction -> setShortcuts ( QKeySequence :: Open ); openAction -> setStatusTip ( tr ( \"Open an existing file\" )); connect ( openAction , & QAction :: triggered , this , MainWindow :: open ); QMenu * file = menuBar () -> addMenu ( tr ( \"&File\" )); file -> addAction ( openAction ); QToolBar * toolBar = addToolBar ( tr ( \"&File\" )); toolBar -> addAction ( openAction ); statusBar (); \u6211\u4eec\u770b\u5230\uff0c\u4f7f\u7528 menuBar() \u51fd\u6570\uff0cQt \u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u83dc\u5355\u680f\u3002 menuBar() \u662f QMainWindow \u63d0\u4f9b\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u4f60\u662f\u4e0d\u4f1a\u5728 QWidget \u6216\u8005 QDialog \u4e2d\u627e\u5230\u5b83\u7684\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u7a97\u53e3\u7684\u83dc\u5355\u680f\uff0c\u5982\u679c\u6ca1\u6709\u83dc\u5355\u680f\u5219\u4f1a\u65b0\u521b\u5efa\u4e00\u4e2a\u3002\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 menuBar() \u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u6bd5\u7adf\u6211\u4eec\u5e76\u6ca1\u6709\u521b\u5efa\u4e00\u4e2a\u83dc\u5355\u680f\u5bf9\u8c61\u554a\uff01\u539f\u6765\uff0c\u8fd9\u5c31\u662f menuBar() \u4e3a\u6211\u4eec\u521b\u5efa\u597d\u5e76\u4e14\u8fd4\u56de\u4e86\u7684\u3002 Qt \u4e2d\uff0c\u8868\u793a\u83dc\u5355\u7684\u7c7b\u662f QMenuBar \uff08\u4f60\u5e94\u8be5\u5df2\u7ecf\u60f3\u5230\u8fd9\u4e2a\u540d\u5b57\u4e86\uff09\u3002 QMenuBar \u4ee3\u8868\u7684\u662f\u7a97\u53e3\u6700\u4e0a\u65b9\u7684\u4e00\u6761\u83dc\u5355\u680f\u3002\u6211\u4eec\u4f7f\u7528\u5176 addMenu() \u51fd\u6570\u4e3a\u5176\u6dfb\u52a0\u83dc\u5355\u3002\u5c3d\u7ba1\u6211\u4eec\u53ea\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f46\u662f Qt \u4e3a\u5c06\u5176\u4f5c\u4e3a\u65b0\u521b\u5efa\u7684\u83dc\u5355\u7684\u6587\u672c\u663e\u793a\u51fa\u6765\u3002\u81f3\u4e8e & \u7b26\u53f7\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u8fc7\uff0c\u8fd9\u53ef\u4ee5\u4e3a\u83dc\u5355\u521b\u5efa\u4e00\u4e2a\u5feb\u6377\u952e\u3002\u5f53\u6211\u4eec\u521b\u5efa\u51fa\u6765\u4e86\u83dc\u5355\u5bf9\u8c61\u65f6\uff0c\u5c31\u53ef\u4ee5\u628a QAction \u6dfb\u52a0\u5230\u8fd9\u4e2a\u83dc\u5355\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f addAction() \u51fd\u6570\u7684\u4f5c\u7528\u3002 \u4e0b\u9762\u7684 QToolBar \u90e8\u5206\u975e\u5e38\u7c7b\u4f3c\u3002\u987e\u540d\u601d\u4e49\uff0c QToolBar \u5c31\u662f\u5de5\u5177\u680f\u3002\u6211\u4eec\u4f7f\u7528\u7684\u662f addToolBar() \u51fd\u6570\u6dfb\u52a0\u65b0\u7684\u5de5\u5177\u680f\u3002\u4e3a\u4ec0\u4e48\u524d\u9762\u4e00\u4e2a\u662f menuBar() \u800c\u73b0\u5728\u7684\u662f addToolBar() \u5462\uff1f\u56e0\u4e3a\u4e00\u4e2a\u7a97\u53e3\u53ea\u6709\u4e00\u4e2a\u83dc\u5355\u680f\uff0c\u4f46\u662f\u5374\u53ef\u80fd\u6709\u591a\u4e2a\u5de5\u5177\u680f\u3002\u5de5\u5177\u680f\u53ef\u4ee5\u8bbe\u7f6e\u6210\u56fa\u5b9a\u7684\u3001\u6d6e\u52a8\u7684\u7b49\u7b49\uff0c\u5177\u4f53\u8bbe\u7f6e\u53ef\u4ee5\u53c2\u8003 Qt \u6587\u6863\u3002 \u6700\u540e\u4e00\u4e2a\u5b64\u96f6\u96f6\u7684 statuBar() \u663e\u5f97\u4e0d\u4f26\u4e0d\u7c7b\uff0c\u4f46\u662f\uff0c\u540c\u524d\u9762\u7684 menuBar() \u7684\u5b9e\u73b0\u7c7b\u4f3c\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a QStatusBar \u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u5219\u5148\u521b\u5efa\u518d\u8fd4\u56de\u3002 QStatusBar \u7ee7\u627f\u4e86 QWidget \uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5b83\u4efb\u610f QWidget \u5b50\u7c7b\u6dfb\u52a0\u5230\u72b6\u6001\u680f\uff0c\u4ece\u800c\u5b9e\u73b0\u7c7b\u4f3c Photoshop \u7a97\u53e3\u5e95\u90e8\u90a3\u79cd\u6709\u6bd4\u4f8b\u663e\u793a\u3001\u6709\u7f51\u683c\u5f00\u5173\u7684\u590d\u6742\u72b6\u6001\u680f\u3002\u6709\u5173 QStatusBar \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003 Qt \u6587\u6863\u3002 \u5bf9\u4e8e\u6ca1\u6709\u8fd9\u4e9b\u51fd\u6570\u7684 QDialog \u6216\u8005 QWidget \u600e\u4e48\u505a\u5462\uff1f\u8981\u8bb0\u5f97\uff0c QToolBar \u4ee5\u53ca QStatusBar \u90fd\u662f QWidget \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u7ed3\u5408\u5e03\u5c40\u7ba1\u7406\u5668\u6dfb\u52a0\u5230\u53e6\u5916\u7684 QWidget \u4e0a\u9762\u3002 QLayout \u5e03\u5c40\u63d0\u4f9b\u4e86 setMenuBar() \u51fd\u6570\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u6dfb\u52a0\u83dc\u5355\u680f\u3002\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u8be6\u89c1\u6587\u6863\u3002","title":"07. \u83dc\u5355\u680f\u3001\u5de5\u5177\u680f\u548c\u72b6\u6001\u680f"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/08.%20%E5%AF%B9%E8%AF%9D%E6%A1%86%E7%AE%80%E4%BB%8B/","text":"\u5bf9\u8bdd\u6846\u662f GUI \u7a0b\u5e8f\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u7ec4\u6210\u90e8\u5206\u3002\u5f88\u591a\u4e0d\u80fd\u6216\u8005\u4e0d\u9002\u5408\u653e\u5165\u4e3b\u7a97\u53e3\u7684\u529f\u80fd\u7ec4\u4ef6\u90fd\u5fc5\u987b\u653e\u5728\u5bf9\u8bdd\u6846\u4e2d\u8bbe\u7f6e\u3002\u5bf9\u8bdd\u6846\u901a\u5e38\u4f1a\u662f\u4e00\u4e2a\u9876\u5c42\u7a97\u53e3\uff0c\u51fa\u73b0\u5728\u7a0b\u5e8f\u6700\u4e0a\u5c42\uff0c\u7528\u4e8e\u5b9e\u73b0\u77ed\u671f\u4efb\u52a1\u6216\u8005\u7b80\u6d01\u7684\u7528\u6237\u4ea4\u4e92\u3002\u5c3d\u7ba1 Ribbon \u754c\u9762\u7684\u51fa\u73b0\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u5bf9\u8bdd\u6846\u7684\u4f7f\u7528\u51e0\u7387\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728\u6700\u65b0\u7248\u672c\u7684 Office \u4e2d\u53d1\u73b0\u4e0d\u5c11\u5bf9\u8bdd\u6846\u3002\u56e0\u6b64\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\uff0c\u5bf9\u8bdd\u6846\u4f1a\u4e00\u76f4\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u7a0b\u5e8f\u4e4b\u4e2d\u3002 Qt \u4e2d\u4f7f\u7528 QDialog \u7c7b\u5b9e\u73b0\u5bf9\u8bdd\u6846\u3002\u5c31\u50cf\u4e3b\u7a97\u53e3\u4e00\u6837\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\u7ee7\u627f QDialog \u3002 QDialog \uff08\u53ca\u5176\u5b50\u7c7b\uff0c\u4ee5\u53ca\u6240\u6709 Qt::Dialog \u7c7b\u578b\u7684\u7c7b\uff09\u7684\u5bf9\u4e8e\u5176 parent \u6307\u9488\u90fd\u6709\u989d\u5916\u7684\u89e3\u91ca\uff1a\u5982\u679c parent \u4e3a NULL\uff0c\u5219\u8be5\u5bf9\u8bdd\u6846\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u9876\u5c42\u7a97\u53e3\uff0c\u5426\u5219\u5219\u4f5c\u4e3a\u5176\u7236\u7ec4\u4ef6\u7684\u5b50\u5bf9\u8bdd\u6846\uff08\u6b64\u65f6\uff0c\u5176\u9ed8\u8ba4\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f parent \u7684\u4e2d\u5fc3\uff09\u3002 \u9876\u5c42\u7a97\u53e3\u4e0e\u975e\u9876\u5c42\u7a97\u53e3\u7684\u533a\u522b\u5728\u4e8e\uff0c\u9876\u5c42\u7a97\u53e3\u5728\u4efb\u52a1\u680f\u4f1a\u6709\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u800c\u975e\u9876\u5c42\u7a97\u53e3\u5219\u4f1a\u5171\u4eab\u5176\u7236\u7ec4\u4ef6\u7684\u4f4d\u7f6e\u3002 \u5c06\u4e4b\u524d\u9879\u76ee\u7684\u4ee3\u7801\u4fee\u6539\u4e00\u4e0b\uff1a void MainWindow::open () { //QMessageBox::information(this, tr(\"Information\"), tr(\"Open\")); QDialog dialog ; dialog . setWindowTitle ( tr ( \"Hello, dialog!\" )); dialog . exec (); } \u6211\u4eec\u4f7f\u7528 QDialog \u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u8bbe\u7f6e\u5176\u6807\u9898\u4e3a\u201cHello, dialog!\u201d\uff0c\u7136\u540e\u8c03\u7528 exec() \u5c06\u5176\u663e\u793a\u51fa\u6765\u3002\u6ce8\u610f\u770b\u7684\u662f\u4efb\u52a1\u680f\u7684\u56fe\u6807\uff0c\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8bbe\u7f6e\u5bf9\u8bdd\u6846\u7684 parent \u6307\u9488\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u5728\u4efb\u52a1\u680f\u51fa\u73b0\u4e86\u5bf9\u8bdd\u6846\u7684\u4f4d\u7f6e\uff1a ![[\u5bf9\u8bdd\u6846\u7b80\u4ecb.png]] \u518d\u4fee\u6539\u4e00\u4e0b\u4ee3\u7801\uff1a void MainWindow::open () { //QMessageBox::information(this, tr(\"Information\"), tr(\"Open\")); QDialog dialog ( this ); dialog . setWindowTitle ( tr ( \"Hello, dialog!\" )); dialog . exec (); } \u91cd\u65b0\u8fd0\u884c\u4e00\u4e0b\uff0c\u5bf9\u6bd4\u4e00\u4e0b\u5c31\u4f1a\u770b\u5230 parent \u6307\u9488\u7684\u6709\u65e0\u5bf9 QDialog \u5b9e\u4f8b\u7684\u5f71\u54cd\u3002 \u5bf9\u8bdd\u6846\u5206\u4e3a\u6a21\u6001\u5bf9\u8bdd\u6846\u548c\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u3002\u6240\u8c13\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u5c31\u662f\u4f1a\u963b\u585e\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5176\u5b83\u7a97\u53e3\u7684\u8f93\u5165\u3002\u6a21\u6001\u5bf9\u8bdd\u6846\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u201c\u6253\u5f00\u6587\u4ef6\u201d\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u8bb0\u4e8b\u672c\u7684\u6253\u5f00\u6587\u4ef6\uff0c\u5f53\u6253\u5f00\u6587\u4ef6\u5bf9\u8bdd\u6846\u51fa\u73b0\u65f6\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5bf9\u9664\u6b64\u5bf9\u8bdd\u6846\u4e4b\u5916\u7684\u7a97\u53e3\u90e8\u5206\u8fdb\u884c\u64cd\u4f5c\u7684\u3002\u4e0e\u6b64\u76f8\u53cd\u7684\u662f\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u4f8b\u5982\u67e5\u627e\u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u663e\u793a\u7740\u67e5\u627e\u5bf9\u8bdd\u6846\u7684\u540c\u65f6\uff0c\u7ee7\u7eed\u5bf9\u8bb0\u4e8b\u672c\u7684\u5185\u5bb9\u8fdb\u884c\u7f16\u8f91\u3002 Qt \u652f\u6301\u6a21\u6001\u5bf9\u8bdd\u6846\u548c\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u3002\u5176\u4e2d\uff0cQt \u6709\u4e24\u79cd\u7ea7\u522b\u7684\u6a21\u6001\u5bf9\u8bdd\u6846\uff1a\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u6a21\u6001\u548c\u7a97\u53e3\u7ea7\u522b\u7684\u6a21\u6001\uff0c\u9ed8\u8ba4\u662f\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u6a21\u6001\u3002\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u6a21\u6001\u662f\u6307\uff0c\u5f53\u8be5\u79cd\u6a21\u6001\u7684\u5bf9\u8bdd\u6846\u51fa\u73b0\u65f6\uff0c\u7528\u6237\u5fc5\u987b\u9996\u5148\u5bf9\u5bf9\u8bdd\u6846\u8fdb\u884c\u4ea4\u4e92\uff0c\u76f4\u5230\u5173\u95ed\u5bf9\u8bdd\u6846\uff0c\u7136\u540e\u624d\u80fd\u8bbf\u95ee\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u7684\u7a97\u53e3\u3002\u7a97\u53e3\u7ea7\u522b\u7684\u6a21\u6001\u662f\u6307\uff0c\u8be5\u6a21\u6001\u4ec5\u4ec5\u963b\u585e\u4e0e\u5bf9\u8bdd\u6846\u5173\u8054\u7684\u7a97\u53e3\uff0c\u4f46\u662f\u4f9d\u7136\u5141\u8bb8\u7528\u6237\u4e0e\u7a0b\u5e8f\u4e2d\u5176\u5b83\u7a97\u53e3\u4ea4\u4e92\u3002 Qt \u4f7f\u7528 QDialog::exec() \u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u4f7f\u7528 QDialog::open() \u5b9e\u73b0\u7a97\u53e3\u7ea7\u522b\u7684\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u4f7f\u7528 QDialog::show() \u5b9e\u73b0\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u3002\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86 exec() \u5c06\u5bf9\u8bdd\u6846\u663e\u793a\u51fa\u6765\uff0c\u56e0\u6b64\u8fd9\u5c31\u662f\u4e00\u4e2a\u6a21\u6001\u5bf9\u8bdd\u6846\u3002\u5f53\u5bf9\u8bdd\u6846\u51fa\u73b0\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u4e0e\u4e3b\u7a97\u53e3\u8fdb\u884c\u4efb\u4f55\u4ea4\u4e92\uff0c\u76f4\u5230\u6211\u4eec\u5173\u95ed\u4e86\u8be5\u5bf9\u8bdd\u6846\u3002","title":"08. \u5bf9\u8bdd\u6846\u7b80\u4ecb"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/09.%20%E5%AF%B9%E8%AF%9D%E6%A1%86%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92/","text":"\u6a21\u6001\u5bf9\u8bdd\u6846\u4f7f\u7528\u4e86 exec() \u51fd\u6570\u5c06\u5176\u663e\u793a\u51fa\u6765\u3002 exec() \u51fd\u6570\u7684\u771f\u6b63\u542b\u4e49\u662f\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u4e8b\u4ef6\u5faa\u73af\u3002\u6240\u8c13\u4e8b\u4ef6\u5faa\u73af\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u3002Qt \u5728\u5f00\u542f\u4e86\u4e8b\u4ef6\u5faa\u73af\u4e4b\u540e\uff0c\u7cfb\u7edf\u53d1\u51fa\u7684\u5404\u79cd\u4e8b\u4ef6\u624d\u80fd\u591f\u88ab\u7a0b\u5e8f\u76d1\u542c\u5230\u3002\u8fd9\u4e2a\u4e8b\u4ef6\u5faa\u73af\u76f8\u5f53\u4e8e\u4e00\u79cd\u8f6e\u8be2\u7684\u4f5c\u7528\u3002\u65e2\u7136\u662f\u65e0\u9650\u5faa\u73af\uff0c\u5f53\u7136\u5728\u5f00\u542f\u4e86\u4e8b\u4ef6\u5faa\u73af\u7684\u5730\u65b9\uff0c\u4ee3\u7801\u5c31\u4f1a\u88ab\u963b\u585e\uff0c\u540e\u9762\u7684\u8bed\u53e5\u4e5f\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4f7f\u7528\u4e86 exec() \u663e\u793a\u7684\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 exec() \u51fd\u6570\u4e4b\u540e\u76f4\u63a5\u4ece\u5bf9\u8bdd\u6846\u7684\u5bf9\u8c61\u83b7\u53d6\u5230\u6570\u636e\u503c\u3002 \u770b\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\uff1a void MainWindow::open () { QDialog dialog ( this ); dialog . setWindowTitle ( tr ( \"Hello, dialog!\" )); dialog . exec (); qDebug () << dialog . result (); } \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 exec() \u663e\u793a\u4e00\u4e2a\u6a21\u6001\u5bf9\u8bdd\u6846\u3002\u6700\u540e\u4e00\u884c\u4ee3\u7801\uff0c qDebug() \u7c7b\u4f3c\u4e8e std::cout \u6216\u8005 Java \u7684 System.out.println(); \u8bed\u53e5\uff0c\u5c06\u540e\u9762\u7684\u4fe1\u606f\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u4e00\u822c\u5c31\u662f\u63a7\u5236\u53f0\u3002\u4f7f\u7528 qDebug() \u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6\u3002\u5728 exec() \u51fd\u6570\u4e4b\u540e\uff0c\u6211\u4eec\u76f4\u63a5\u53ef\u4ee5\u83b7\u53d6\u5230 dialog \u7684\u6570\u636e\u503c\u3002\u6ce8\u610f\uff0c exec() \u5f00\u59cb\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\uff0c\u4ee3\u7801\u88ab\u963b\u585e\u5230\u8fd9\u91cc\u3002\u7531\u4e8e exec() \u51fd\u6570\u6ca1\u6709\u8fd4\u56de\uff0c\u56e0\u6b64\u4e0b\u9762\u7684 result() \u51fd\u6570\u4e5f\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u76f4\u5230\u5bf9\u8bdd\u6846\u5173\u95ed\uff0c exec() \u51fd\u6570\u8fd4\u56de\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d6\u5f97\u5bf9\u8bdd\u6846\u7684\u6570\u636e\u3002 \u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5982\u679c\u6211\u4eec\u8bbe\u7f6e dialog \u7684\u5c5e\u6027\u4e3a WA_DeleteOnClose \uff0c\u90a3\u4e48\u5f53\u5bf9\u8bdd\u6846\u5173\u95ed\u65f6\uff0c\u5bf9\u8c61\u88ab\u9500\u6bc1\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fd9\u79cd\u529e\u6cd5\u83b7\u53d6\u6570\u636e\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 parent \u6307\u9488\u7684\u65b9\u5f0f\u6784\u5efa\u5bf9\u8bdd\u6846\uff0c\u907f\u514d\u8bbe\u7f6e WA_DeleteOnClose \u5c5e\u6027\uff1b\u6216\u8005\u662f\u5229\u7528\u53e6\u5916\u7684\u65b9\u5f0f\u3002 \u5b9e\u9645\u4e0a\uff0c QDialog::exec() \u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5176\u8fd4\u56de\u503c\u662f QDialog::Accepted \u6216\u8005 QDialog::Rejected \u3002\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a QDialog dialog ( this ); if ( dialog . exec () == QDialog :: Accepted ) { // do something } else { // do something else } \u6a21\u6001\u5bf9\u8bdd\u6846\u76f8\u5bf9\u7b80\u5355\uff0c\u5982\u679c\u662f\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c QDialog::show() \u51fd\u6570\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u5982\u679c\u6211\u4eec\u4e5f\u8fd9\u4e48\u5199\uff0c\u5c31\u4e0d\u53ef\u80fd\u53d6\u5f97\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u3002\u56e0\u4e3a show() \u51fd\u6570\u4e0d\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c show() \u7acb\u5373\u8fd4\u56de\uff0c\u7528\u6237\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u8f93\u5165\uff0c\u5c31\u8981\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\uff0c\u5f53\u7136\u662f\u4e0d\u4f1a\u6709\u6b63\u786e\u7ed3\u679c\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u6362\u4e00\u79cd\u601d\u8def\u83b7\u53d6\u6570\u636e\uff0c\u90a3\u5c31\u662f\u4f7f\u7528\u4fe1\u53f7\u69fd\u673a\u5236\u3002 \u7531\u4e8e\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u5728\u5173\u95ed\u65f6\u53ef\u4ee5\u8c03\u7528 QDialog::accept() \u6216\u8005 QDialog::reject() \u6216\u8005\u66f4\u901a\u7528\u7684 QDialog::done() \u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u53d1\u51fa\u4fe1\u53f7\u3002\u53e6\u5916\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5408\u9002\u7684\u4fe1\u53f7\u53d1\u51fa\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u5199 QDialog::closeEvent() \u51fd\u6570\uff0c\u5728\u8fd9\u91cc\u53d1\u51fa\u4fe1\u53f7\u3002\u5728\u9700\u8981\u63a5\u6536\u6570\u636e\u7684\u7a97\u53e3\uff08\u8fd9\u91cc\u662f\u4e3b\u7a97\u53e3\uff09\u8fde\u63a5\u5230\u8fd9\u4e2a\u4fe1\u53f7\u5373\u53ef\u3002 \u7c7b\u4f3c\u7684\u4ee3\u7801\u7247\u6bb5\u5982\u4e0b\u6240\u793a\uff1a //!!! Qt 5 // in dialog: void UserAgeDialog::accept () { emit userAgeChanged ( newAge ); // newAge is an int QDialog :: accept (); } // in main window: void MainWindow::showUserAgeDialog () { UserAgeDialog * dialog = new UserAgeDialog ( this ); connect ( dialog , & UserAgeDialog :: userAgeChanged , this , & MainWindow :: setUserAge ); dialog -> show (); } // ... void MainWindow::setUserAge ( int age ) { userAge = age ; } \u4e0d\u8981\u62c5\u5fc3\u5982\u679c\u5bf9\u8bdd\u6846\u5173\u95ed\uff0c\u662f\u4e0d\u662f\u8fd8\u80fd\u83b7\u53d6\u5230\u6570\u636e\u3002\u56e0\u4e3a Qt \u4fe1\u53f7\u69fd\u7684\u673a\u5236\u4fdd\u8bc1\uff0c\u5728\u69fd\u51fd\u6570\u5728\u8c03\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u59cb\u7ec8\u53ef\u4ee5\u4f7f\u7528 sender() \u51fd\u6570\u83b7\u53d6\u5230 signal \u7684\u53d1\u51fa\u8005\u3002\u5173\u4e8e sender() \u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u6587\u6863\u4e2d\u627e\u5230\u66f4\u591a\u7684\u4ecb\u7ecd\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c sender() \u51fd\u6570\u7684\u5b58\u5728\u4f7f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u6765\u5b9e\u73b0\u4e00\u4e2a\u53ea\u80fd\u6253\u5f00\u4e00\u4e2a\u7684\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\uff08\u65b9\u6cd5\u5c31\u662f\u5728\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\u5728\u4e00\u4e2a\u5bf9\u8bdd\u6846\u6620\u5c04\u8868\u4e2d\u8bb0\u5f55\u4e0b\u6807\u8bb0\uff0c\u5728\u5bf9\u8bdd\u6846\u5173\u95ed\u65f6\u5229\u7528 sender() \u51fd\u6570\u5224\u65ad\u662f\u4e0d\u662f\u8be5\u5bf9\u8bdd\u6846\uff0c\u7136\u540e\u4ece\u6620\u5c04\u8868\u4e2d\u5c06\u5176\u5220\u9664\uff09\u3002","title":"09. \u5bf9\u8bdd\u6846\u6570\u636e\u4f20\u9012"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/10.%20%E6%A0%87%E5%87%86%E5%AF%B9%E8%AF%9D%E6%A1%86%20QMessageBox/","text":"\u6240\u8c13\u6807\u51c6\u5bf9\u8bdd\u6846\uff0c\u662f Qt \u5185\u7f6e\u7684\u4e00\u7cfb\u5217\u5bf9\u8bdd\u6846\uff0c\u7528\u4e8e\u7b80\u5316\u5f00\u53d1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u5f88\u591a\u5bf9\u8bdd\u6846\u90fd\u662f\u901a\u7528\u7684\uff0c\u6bd4\u5982\u6253\u5f00\u6587\u4ef6\u3001\u8bbe\u7f6e\u989c\u8272\u3001\u6253\u5370\u8bbe\u7f6e\u7b49\u3002\u8fd9\u4e9b\u5bf9\u8bdd\u6846\u5728\u6240\u6709\u7a0b\u5e8f\u4e2d\u51e0\u4e4e\u76f8\u540c\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u5728\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u81ea\u5df1\u5b9e\u73b0\u8fd9\u4e48\u4e00\u4e2a\u5bf9\u8bdd\u6846\u3002 Qt \u7684\u5185\u7f6e\u5bf9\u8bdd\u6846\u5927\u81f4\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a - QColorDialog \uff1a\u9009\u62e9\u989c\u8272\uff1b - QFileDialog \uff1a\u9009\u62e9\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff1b - QFontDialog \uff1a\u9009\u62e9\u5b57\u4f53\uff1b - QInputDialog \uff1a\u5141\u8bb8\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u503c\uff0c\u5e76\u5c06\u5176\u503c\u8fd4\u56de\uff1b - QMessageBox \uff1a\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u7528\u4e8e\u663e\u793a\u4fe1\u606f\u3001\u8be2\u95ee\u95ee\u9898\u7b49\uff1b - QPageSetupDialog \uff1a\u4e3a\u6253\u5370\u673a\u63d0\u4f9b\u7eb8\u5f20\u76f8\u5173\u7684\u9009\u9879\uff1b - QPrintDialog \uff1a\u6253\u5370\u673a\u914d\u7f6e\uff1b - QPrintPreviewDialog \uff1a\u6253\u5370\u9884\u89c8\uff1b - QProgressDialog \uff1a\u663e\u793a\u64cd\u4f5c\u8fc7\u7a0b\u3002 \u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u5730\u4ecb\u7ecd\u4e00\u4e0b\u6807\u51c6\u5bf9\u8bdd\u6846 QMessageBox \u7684\u4f7f\u7528\u3002\u5728\u524d\u9762\u6709\u4e86\u5173\u4e8e\u5bf9\u8bdd\u6846\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5e94\u8be5\u53ef\u4ee5\u7ed3\u5408\u6587\u6863\u5f88\u8f7b\u677e\u5730\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Qt \u7684\u6807\u51c6\u5bf9\u8bdd\u6846\u3002 QMessageBox \u7528\u4e8e\u663e\u793a\u6d88\u606f\u63d0\u793a\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u4f7f\u7528\u5176\u63d0\u4f9b\u7684\u51e0\u4e2a static \u51fd\u6570\uff1a - void about(QWidget * parent, const QString & title, const QString & text) \uff1a\u663e\u793a\u5173\u4e8e\u5bf9\u8bdd\u6846\u3002\u8fd9\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5bf9\u8bdd\u6846\uff0c\u5176\u6807\u9898\u662f title\uff0c\u5185\u5bb9\u662f text\uff0c\u7236\u7a97\u53e3\u662f parent\u3002\u5bf9\u8bdd\u6846\u53ea\u6709\u4e00\u4e2a OK \u6309\u94ae\u3002 - void aboutQt(QWidget * parent, const QString & title = QString()) \uff1a\u663e\u793a\u5173\u4e8e Qt \u5bf9\u8bdd\u6846\u3002\u8be5\u5bf9\u8bdd\u6846\u7528\u4e8e\u663e\u793a\u6709\u5173 Qt \u7684\u4fe1\u606f\u3002 - StandardButton critical(QWidget * parent, const QString & title, const QString & text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton) \uff1a\u663e\u793a\u4e25\u91cd\u9519\u8bef\u5bf9\u8bdd\u6846\u3002\u8fd9\u4e2a\u5bf9\u8bdd\u6846\u5c06\u663e\u793a\u4e00\u4e2a\u7ea2\u8272\u7684\u9519\u8bef\u7b26\u53f7\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 buttons \u53c2\u6570\u6307\u660e\u5176\u663e\u793a\u7684\u6309\u94ae\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ea\u6709\u4e00\u4e2a Ok \u6309\u94ae\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 StandardButtons \u7c7b\u578b\u6307\u5b9a\u591a\u79cd\u6309\u94ae\u3002 - StandardButton information(QWidget * parent, const QString & title, const QString & text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton) \uff1a QMessageBox::information() \u51fd\u6570\u4e0e QMessageBox::critical() \u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u8fd9\u4e2a\u5bf9\u8bdd\u6846\u63d0\u4f9b\u4e00\u4e2a\u666e\u901a\u4fe1\u606f\u56fe\u6807\u3002 - StandardButton question(QWidget * parent, const QString & title, const QString & text, StandardButtons buttons = StandardButtons( Yes | No ), StandardButton defaultButton = NoButton) \uff1a QMessageBox::question() \u51fd\u6570\u4e0e QMessageBox::critical() \u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u8fd9\u4e2a\u5bf9\u8bdd\u6846\u63d0\u4f9b\u4e00\u4e2a\u95ee\u53f7\u56fe\u6807\uff0c\u5e76\u4e14\u5176\u663e\u793a\u7684\u6309\u94ae\u662f\u201c\u662f\u201d\u548c\u201c\u5426\u201d\u4e24\u4e2a\u3002 - StandardButton warning(QWidget * parent, const QString & title, const QString & text, StandardButtons buttons = Ok, StandardButton defaultButton = NoButton) \uff1a QMessageBox::warning() \u51fd\u6570\u4e0e QMessageBox::critical() \u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u8fd9\u4e2a\u5bf9\u8bdd\u6846\u63d0\u4f9b\u4e00\u4e2a\u9ec4\u8272\u53f9\u53f7\u56fe\u6807\u3002 \u5b9e\u4f8b\u4ee3\u7801\uff1a if ( QMessageBox :: Yes == QMessageBox :: question ( this , tr ( \"Question\" ), tr ( \"Are you OK?\" ), QMessageBox :: Yes | QMessageBox :: No , QMessageBox :: Yes )) { QMessageBox :: information ( this , tr ( \"Hmmm...\" ), tr ( \"I'm glad to hear that!\" )); } else { QMessageBox :: information ( this , tr ( \"Hmmm...\" ), tr ( \"I'm sorry!\" )); } \u6211\u4eec\u4f7f\u7528 QMessageBox::question() \u6765\u8be2\u95ee\u4e00\u4e2a\u95ee\u9898\u3002\u8fd9\u4e2a\u5bf9\u8bdd\u6846\u7684\u7236\u7a97\u53e3\u662f this\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684 MainWindow\uff08\u6216\u8005\u5176\u4ed6 QWidget \u6307\u9488\uff09\u3002 QMessageBox \u662f QDialog \u7684\u5b50\u7c7b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u521d\u59cb\u663e\u793a\u4f4d\u7f6e\u5c06\u4f1a\u662f\u5728 parent \u7a97\u53e3\u7684\u4e2d\u592e\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5bf9\u8bdd\u6846\u7684\u6807\u9898\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u60f3\u8981\u663e\u793a\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u5c31\u662f\u6211\u4eec\u9700\u8981\u8be2\u95ee\u7684\u6587\u5b57\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u4f7f\u7528\u6216\u8fd0\u7b97\u7b26\uff08|\uff09\u6307\u5b9a\u5bf9\u8bdd\u6846\u5e94\u8be5\u51fa\u73b0\u7684\u6309\u94ae\u3002\u8fd9\u91cc\u6211\u4eec\u5e0c\u671b\u662f\u4e00\u4e2a Yes \u548c\u4e00\u4e2a No\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u9009\u62e9\u7684\u6309\u94ae\u3002\u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u786e\u5b9a\u7528\u6237\u70b9\u51fb\u7684\u662f\u54ea\u4e00\u4e2a\u6309\u94ae\u3002\u6309\u7167\u6211\u4eec\u7684\u5199\u6cd5\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u7684\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5176\u8fd4\u56de\u503c\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f Yes\uff0c\u4e5f\u5c31\u662f\u8bf4\u7528\u6237\u70b9\u51fb\u4e86 Yes \u6309\u94ae\uff0c\u6211\u4eec\u663e\u793a\u4e00\u4e2a\u666e\u901a\u6d88\u606f\u5bf9\u8bdd\u6846\uff0c\u663e\u793a\u201cI\u2019m glad to hear that!\u201d\uff0c\u5426\u5219\u5219\u663e\u793a\u201cI\u2019m sorry!\u201d\u3002\u8fd0\u884c\u4e00\u4e0b\u6211\u4eec\u7684\u7a0b\u5e8f\u7247\u6bb5\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u7684\u4e0d\u540c\uff1a ![[QMessageBox.png]] QMessageBox \u7c7b\u7684 static \u51fd\u6570\u4f18\u70b9\u662f\u65b9\u4fbf\u4f7f\u7528\uff0c\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u975e\u5e38\u4e0d\u7075\u6d3b\u3002\u6211\u4eec\u53ea\u80fd\u4f7f\u7528\u7b80\u5355\u7684\u51e0\u79cd\u5f62\u5f0f\u3002\u4e3a\u4e86\u80fd\u591f\u5b9a\u5236 QMessageBox \u7ec6\u8282\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 QMessageBox \u7684\u5c5e\u6027\u8bbe\u7f6e API\u3002 \u5982\u679c\u6211\u4eec\u5e0c\u671b\u5236\u4f5c\u4e00\u4e2a\u8be2\u95ee\u662f\u5426\u4fdd\u5b58\u7684\u5bf9\u8bdd\u6846\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u4ee3\u7801\uff1a QMessageBox msgBox ; msgBox . setText ( tr ( \"The document has been modified.\" )); msgBox . setInformativeText ( tr ( \"Do you want to save your changes?\" )); msgBox . setDetailedText ( tr ( \"Differences here...\" )); msgBox . setStandardButtons ( QMessageBox :: Save | QMessageBox :: Discard | QMessageBox :: Cancel ); msgBox . setDefaultButton ( QMessageBox :: Save ); int ret = msgBox . exec (); switch ( ret ) { case QMessageBox :: Save : qDebug () << \"Save document!\" ; break ; case QMessageBox :: Discard : qDebug () << \"Discard changes!\" ; break ; case QMessageBox :: Cancel : qDebug () << \"Close document!\" ; break ; } msgBox \u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u6808\u4e0a\u7684 QMessageBox \u5b9e\u4f8b\u3002\u6211\u4eec\u8bbe\u7f6e\u5176\u4e3b\u8981\u6587\u672c\u4fe1\u606f\u4e3a\u201cThe document has been modified.\u201d\uff0c informativeText \u5219\u662f\u4f1a\u5728\u5bf9\u8bdd\u6846\u4e2d\u663e\u793a\u7684\u7b80\u5355\u8bf4\u660e\u6587\u5b57\u3002\u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a detailedText \uff0c\u4e5f\u5c31\u662f\u8be6\u7ec6\u4fe1\u606f\uff0c\u5f53\u6211\u4eec\u70b9\u51fb\u4e86\u8be6\u7ec6\u4fe1\u606f\u6309\u94ae\u65f6\uff0c\u5bf9\u8bdd\u6846\u53ef\u4ee5\u81ea\u52a8\u663e\u793a\u66f4\u591a\u4fe1\u606f\u3002\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5bf9\u8bdd\u6846\u7684\u6309\u94ae\u6709\u4e09\u4e2a\uff1a\u4fdd\u5b58\u3001\u4e22\u5f03\u548c\u53d6\u6d88\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u4e86 exec() \u662f\u5176\u6210\u4e3a\u4e00\u4e2a\u6a21\u6001\u5bf9\u8bdd\u6846\uff0c\u6839\u636e\u5176\u8fd4\u56de\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002","title":"10. \u6807\u51c6\u5bf9\u8bdd\u6846 QMessageBox"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/11.%20%E6%B7%B1%E5%85%A5%20Qt5%20%E4%BF%A1%E5%8F%B7%E6%A7%BD%E6%96%B0%E8%AF%AD%E6%B3%95/","text":"\u57fa\u672c\u7528\u6cd5 Qt 5 \u5f15\u5165\u4e86\u4fe1\u53f7\u69fd\u7684\u65b0\u8bed\u6cd5\uff1a\u4f7f\u7528\u51fd\u6570\u6307\u9488\u80fd\u591f\u83b7\u5f97\u7f16\u8bd1\u671f\u7684\u7c7b\u578b\u68c0\u67e5\u3002\u4f7f\u7528\u6211\u4eec\u5728\u81ea\u5b9a\u4e49\u4fe1\u53f7\u69fd\u4e2d\u8bbe\u8ba1\u7684 Newspaper \u7c7b\uff0c\u6211\u4eec\u6765\u770b\u770b\u5176\u57fa\u672c\u8bed\u6cd5\uff1a //!!! Qt5 #include <QObject> ////////// newspaper.h class Newspaper : public QObject { Q_OBJECT public : Newspaper ( const QString & name ) : m_name ( name ) { } void send () const { emit newPaper ( m_name ); } signals : void newPaper ( const QString & name ) const ; private : QString m_name ; }; ////////// reader.h #include <QObject> #include <QDebug> class Reader : public QObject { Q_OBJECT public : Reader () {} void receiveNewspaper ( const QString & name ) const { qDebug () << \"Receives Newspaper: \" << name ; } }; ////////// main.cpp #include <QCoreApplication> #include \"newspaper.h\" #include \"reader.h\" int main ( int argc , char * argv []) { QCoreApplication app ( argc , argv ); Newspaper newspaper ( \"Newspaper A\" ); Reader reader ; QObject :: connect ( & newspaper , & Newspaper :: newPaper , & reader , & Reader :: receiveNewspaper ); newspaper . send (); return app . exec (); } \u5728 main() \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 connect() \u51fd\u6570\u5c06 newspaper \u5bf9\u8c61\u7684 newPaper() \u4fe1\u53f7\u4e0e reader \u5bf9\u8c61\u7684 receiveNewspaper() \u69fd\u51fd\u6570\u8054\u7cfb\u8d77\u6765\u3002\u5f53 newspaper \u53d1\u51fa\u8fd9\u4e2a\u4fe1\u53f7\u65f6\uff0c reader \u76f8\u5e94\u7684\u69fd\u51fd\u6570\u5c31\u4f1a\u81ea\u52a8\u88ab\u8c03\u7528\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86\u53d6\u5740\u64cd\u4f5c\u7b26\uff0c\u53d6\u5230 Newspaper::newPaper() \u4fe1\u53f7\u7684\u5730\u5740\uff0c\u540c\u6837\u7c7b\u4f3c\u7684\u53d6\u5230\u4e86 Reader::receiveNewspaper() \u51fd\u6570\u5730\u5740\u3002\u7f16\u8bd1\u5668\u80fd\u591f\u5229\u7528\u8fd9\u4e24\u4e2a\u5730\u5740\uff0c\u5728\u7f16\u8bd1\u671f\u5bf9\u8fd9\u4e2a\u8fde\u63a5\u64cd\u4f5c\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u6709\u4efb\u4f55\u9519\u8bef\uff08\u5305\u62ec\u5bf9\u8c61\u6ca1\u6709\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u6216\u8005\u4fe1\u53f7\u53c2\u6570\u4e0d\u5339\u914d\u7b49\uff09\uff0c\u7f16\u8bd1\u65f6\u5c31\u4f1a\u53d1\u73b0\u3002 \u6709\u91cd\u8f7d\u7684\u4fe1\u53f7 \u5982\u679c\u4fe1\u53f7\u6709\u91cd\u8f7d\uff0c\u6bd4\u5982\u6211\u4eec\u5411 Newspaper \u7c7b\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\uff1a void newPaper ( const QString & name , const QDate & date ); \u6b64\u65f6\u5982\u679c\u8fd8\u662f\u6309\u7167\u524d\u9762\u7684\u5199\u6cd5\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u51fa\u4e00\u4e2a\u9519\u8bef\uff1a\u7531\u4e8e\u8fd9\u4e2a\u51fd\u6570\uff08\u6ce8\u610f\uff0c\u4fe1\u53f7\u5b9e\u9645\u4e5f\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\uff09\u6709\u91cd\u8f7d\uff0c\u56e0\u6b64\u4e0d\u80fd\u7528\u4e00\u4e2a\u53d6\u5740\u64cd\u4f5c\u7b26\u83b7\u53d6\u5176\u5730\u5740\u3002 \u63a8\u8350\u5199\u6cd5\uff1a QObject :: connect ( & newspaper , static_cast < void ( Newspaper :: * )( const QString & , const QDate & ) > ( & Newspaper :: newPaper ), & reader , & Reader :: receiveNewspaper ); \u5e26\u6709\u9ed8\u8ba4\u53c2\u6570\u7684\u69fd\u51fd\u6570 Qt \u5141\u8bb8\u4fe1\u53f7\u548c\u69fd\u7684\u53c2\u6570\u6570\u76ee\u4e0d\u4e00\u81f4\uff1a\u69fd\u51fd\u6570\u7684\u53c2\u6570\u6570\u76ee\u53ef\u4ee5\u6bd4\u4fe1\u53f7\u7684\u53c2\u6570\u5c11\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6211\u4eec\u4fe1\u53f7\u7684\u53c2\u6570\u5b9e\u9645\u662f\u4f5c\u4e3a\u4e00\u79cd\u8fd4\u56de\u503c\u3002\u6b63\u5982\u666e\u901a\u7684\u51fd\u6570\u8c03\u7528\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\u4e00\u4e2a\u5e76\u4e0d\u5b58\u5728\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u69fd\u51fd\u6570\u7684\u53c2\u6570\u6570\u76ee\u6bd4\u4fe1\u53f7\u7684\u591a\uff0c\u5728\u69fd\u51fd\u6570\u4e2d\u5c31\u4f7f\u7528\u5230\u8fd9\u4e9b\u53c2\u6570\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u8fd9\u4e9b\u53c2\u6570\u5e76\u4e0d\u5b58\u5728\uff08\u56e0\u4e3a\u4fe1\u53f7\u7684\u53c2\u6570\u6bd4\u69fd\u7684\u5c11\uff0c\u56e0\u6b64\u5e76\u6ca1\u6709\u4f20\u8fc7\u6765\uff09\uff0c\u51fd\u6570\u5c31\u4f1a\u62a5\u9519\u3002\u8fd9\u79cd\u60c5\u51b5\u5f80\u5f80\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\u4e00\u662f\u69fd\u7684\u53c2\u6570\u5c31\u662f\u6bd4\u4fe1\u53f7\u7684\u5c11\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u50cf\u524d\u9762\u90a3\u79cd\u5199\u6cd5\u76f4\u63a5\u8fde\u63a5\u3002\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u4fe1\u53f7\u7684\u53c2\u6570\u5e26\u6709\u9ed8\u8ba4\u503c\u3002\u6bd4\u5982\uff1a void QPushButton::clicked ( bool checked = false );","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/11.%20%E6%B7%B1%E5%85%A5%20Qt5%20%E4%BF%A1%E5%8F%B7%E6%A7%BD%E6%96%B0%E8%AF%AD%E6%B3%95/#_1","text":"Qt 5 \u5f15\u5165\u4e86\u4fe1\u53f7\u69fd\u7684\u65b0\u8bed\u6cd5\uff1a\u4f7f\u7528\u51fd\u6570\u6307\u9488\u80fd\u591f\u83b7\u5f97\u7f16\u8bd1\u671f\u7684\u7c7b\u578b\u68c0\u67e5\u3002\u4f7f\u7528\u6211\u4eec\u5728\u81ea\u5b9a\u4e49\u4fe1\u53f7\u69fd\u4e2d\u8bbe\u8ba1\u7684 Newspaper \u7c7b\uff0c\u6211\u4eec\u6765\u770b\u770b\u5176\u57fa\u672c\u8bed\u6cd5\uff1a //!!! Qt5 #include <QObject> ////////// newspaper.h class Newspaper : public QObject { Q_OBJECT public : Newspaper ( const QString & name ) : m_name ( name ) { } void send () const { emit newPaper ( m_name ); } signals : void newPaper ( const QString & name ) const ; private : QString m_name ; }; ////////// reader.h #include <QObject> #include <QDebug> class Reader : public QObject { Q_OBJECT public : Reader () {} void receiveNewspaper ( const QString & name ) const { qDebug () << \"Receives Newspaper: \" << name ; } }; ////////// main.cpp #include <QCoreApplication> #include \"newspaper.h\" #include \"reader.h\" int main ( int argc , char * argv []) { QCoreApplication app ( argc , argv ); Newspaper newspaper ( \"Newspaper A\" ); Reader reader ; QObject :: connect ( & newspaper , & Newspaper :: newPaper , & reader , & Reader :: receiveNewspaper ); newspaper . send (); return app . exec (); } \u5728 main() \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 connect() \u51fd\u6570\u5c06 newspaper \u5bf9\u8c61\u7684 newPaper() \u4fe1\u53f7\u4e0e reader \u5bf9\u8c61\u7684 receiveNewspaper() \u69fd\u51fd\u6570\u8054\u7cfb\u8d77\u6765\u3002\u5f53 newspaper \u53d1\u51fa\u8fd9\u4e2a\u4fe1\u53f7\u65f6\uff0c reader \u76f8\u5e94\u7684\u69fd\u51fd\u6570\u5c31\u4f1a\u81ea\u52a8\u88ab\u8c03\u7528\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86\u53d6\u5740\u64cd\u4f5c\u7b26\uff0c\u53d6\u5230 Newspaper::newPaper() \u4fe1\u53f7\u7684\u5730\u5740\uff0c\u540c\u6837\u7c7b\u4f3c\u7684\u53d6\u5230\u4e86 Reader::receiveNewspaper() \u51fd\u6570\u5730\u5740\u3002\u7f16\u8bd1\u5668\u80fd\u591f\u5229\u7528\u8fd9\u4e24\u4e2a\u5730\u5740\uff0c\u5728\u7f16\u8bd1\u671f\u5bf9\u8fd9\u4e2a\u8fde\u63a5\u64cd\u4f5c\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u6709\u4efb\u4f55\u9519\u8bef\uff08\u5305\u62ec\u5bf9\u8c61\u6ca1\u6709\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u6216\u8005\u4fe1\u53f7\u53c2\u6570\u4e0d\u5339\u914d\u7b49\uff09\uff0c\u7f16\u8bd1\u65f6\u5c31\u4f1a\u53d1\u73b0\u3002","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/11.%20%E6%B7%B1%E5%85%A5%20Qt5%20%E4%BF%A1%E5%8F%B7%E6%A7%BD%E6%96%B0%E8%AF%AD%E6%B3%95/#_2","text":"\u5982\u679c\u4fe1\u53f7\u6709\u91cd\u8f7d\uff0c\u6bd4\u5982\u6211\u4eec\u5411 Newspaper \u7c7b\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\uff1a void newPaper ( const QString & name , const QDate & date ); \u6b64\u65f6\u5982\u679c\u8fd8\u662f\u6309\u7167\u524d\u9762\u7684\u5199\u6cd5\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u51fa\u4e00\u4e2a\u9519\u8bef\uff1a\u7531\u4e8e\u8fd9\u4e2a\u51fd\u6570\uff08\u6ce8\u610f\uff0c\u4fe1\u53f7\u5b9e\u9645\u4e5f\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\uff09\u6709\u91cd\u8f7d\uff0c\u56e0\u6b64\u4e0d\u80fd\u7528\u4e00\u4e2a\u53d6\u5740\u64cd\u4f5c\u7b26\u83b7\u53d6\u5176\u5730\u5740\u3002 \u63a8\u8350\u5199\u6cd5\uff1a QObject :: connect ( & newspaper , static_cast < void ( Newspaper :: * )( const QString & , const QDate & ) > ( & Newspaper :: newPaper ), & reader , & Reader :: receiveNewspaper );","title":"\u6709\u91cd\u8f7d\u7684\u4fe1\u53f7"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/11.%20%E6%B7%B1%E5%85%A5%20Qt5%20%E4%BF%A1%E5%8F%B7%E6%A7%BD%E6%96%B0%E8%AF%AD%E6%B3%95/#_3","text":"Qt \u5141\u8bb8\u4fe1\u53f7\u548c\u69fd\u7684\u53c2\u6570\u6570\u76ee\u4e0d\u4e00\u81f4\uff1a\u69fd\u51fd\u6570\u7684\u53c2\u6570\u6570\u76ee\u53ef\u4ee5\u6bd4\u4fe1\u53f7\u7684\u53c2\u6570\u5c11\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6211\u4eec\u4fe1\u53f7\u7684\u53c2\u6570\u5b9e\u9645\u662f\u4f5c\u4e3a\u4e00\u79cd\u8fd4\u56de\u503c\u3002\u6b63\u5982\u666e\u901a\u7684\u51fd\u6570\u8c03\u7528\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\u4e00\u4e2a\u5e76\u4e0d\u5b58\u5728\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u69fd\u51fd\u6570\u7684\u53c2\u6570\u6570\u76ee\u6bd4\u4fe1\u53f7\u7684\u591a\uff0c\u5728\u69fd\u51fd\u6570\u4e2d\u5c31\u4f7f\u7528\u5230\u8fd9\u4e9b\u53c2\u6570\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u8fd9\u4e9b\u53c2\u6570\u5e76\u4e0d\u5b58\u5728\uff08\u56e0\u4e3a\u4fe1\u53f7\u7684\u53c2\u6570\u6bd4\u69fd\u7684\u5c11\uff0c\u56e0\u6b64\u5e76\u6ca1\u6709\u4f20\u8fc7\u6765\uff09\uff0c\u51fd\u6570\u5c31\u4f1a\u62a5\u9519\u3002\u8fd9\u79cd\u60c5\u51b5\u5f80\u5f80\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\u4e00\u662f\u69fd\u7684\u53c2\u6570\u5c31\u662f\u6bd4\u4fe1\u53f7\u7684\u5c11\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u50cf\u524d\u9762\u90a3\u79cd\u5199\u6cd5\u76f4\u63a5\u8fde\u63a5\u3002\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u4fe1\u53f7\u7684\u53c2\u6570\u5e26\u6709\u9ed8\u8ba4\u503c\u3002\u6bd4\u5982\uff1a void QPushButton::clicked ( bool checked = false );","title":"\u5e26\u6709\u9ed8\u8ba4\u53c2\u6570\u7684\u69fd\u51fd\u6570"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/12.%20%E6%96%87%E4%BB%B6%E5%AF%B9%E8%AF%9D%E6%A1%86/","text":"\u4f7f\u7528 QFileDialog::getOpenFileName() \u6765\u83b7\u53d6\u9700\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4e2a\u51fd\u6570\u5177\u6709\u4e00\u4e2a\u957f\u957f\u7684\u7b7e\u540d\uff1a QString getOpenFileName ( QWidget * parent = 0 , const QString & caption = QString (), const QString & dir = QString (), const QString & filter = QString (), QString * selectedFilter = 0 , Options options = 0 ) \u4e0d\u8fc7\u6ce8\u610f\uff0c\u5b83\u7684\u6240\u6709\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\uff0c\u56e0\u6b64\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e5f\u662f\u7b80\u5355\u7684\u3002\u8fd9\u516d\u4e2a\u53c2\u6570\u5206\u522b\u662f\uff1a - parent\uff1a\u7236\u7a97\u53e3\u3002\u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u8fc7\uff0cQt \u7684\u6807\u51c6\u5bf9\u8bdd\u6846\u63d0\u4f9b\u9759\u6001\u51fd\u6570\uff0c\u7528\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6a21\u6001\u5bf9\u8bdd\u6846\uff08\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fd9\u5c31\u662f\u5916\u89c2\u6a21\u5f0f\u7684\u4e00\u79cd\u4f53\u73b0\uff09\uff1b - caption\uff1a\u5bf9\u8bdd\u6846\u6807\u9898\uff1b - dir\uff1a\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\u7684\u9ed8\u8ba4\u76ee\u5f55\uff0c\u201c.\u201d \u4ee3\u8868\u7a0b\u5e8f\u8fd0\u884c\u76ee\u5f55\uff0c\u201c/\u201d \u4ee3\u8868\u5f53\u524d\u76d8\u7b26\u7684\u6839\u76ee\u5f55\uff08\u7279\u6307 Windows \u5e73\u53f0\uff1bLinux \u5e73\u53f0\u5f53\u7136\u5c31\u662f\u6839\u76ee\u5f55\uff09\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f\u5e73\u53f0\u76f8\u5173\u7684\uff0c\u6bd4\u5982\u201cC:\\\u201d\u7b49\uff1b - filter\uff1a\u8fc7\u6ee4\u5668\u3002\u6211\u4eec\u4f7f\u7528\u6587\u4ef6\u5bf9\u8bdd\u6846\u53ef\u4ee5\u6d4f\u89c8\u5f88\u591a\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u4f46\u662f\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u4ec5\u5e0c\u671b\u6253\u5f00\u7279\u5b9a\u7c7b\u578b\u7684\u6587\u4ef6\u3002\u6bd4\u5982\uff0c\u6587\u672c\u7f16\u8f91\u5668\u5e0c\u671b\u6253\u5f00\u6587\u672c\u6587\u4ef6\uff0c\u56fe\u7247\u6d4f\u89c8\u5668\u5e0c\u671b\u6253\u5f00\u56fe\u7247\u6587\u4ef6\u3002\u8fc7\u6ee4\u5668\u5c31\u662f\u7528\u4e8e\u8fc7\u6ee4\u7279\u5b9a\u7684\u540e\u7f00\u540d\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u201cImage Files( .jpg .png)\u201d\uff0c\u5219\u53ea\u80fd\u663e\u793a\u540e\u7f00\u540d\u662f jpg \u6216\u8005 png \u7684\u6587\u4ef6\u3002\u5982\u679c\u9700\u8981\u591a\u4e2a\u8fc7\u6ee4\u5668\uff0c\u4f7f\u7528\u201c;;\u201d\u5206\u5272\uff0c\u6bd4\u5982\u201cJPEG Files( .jpg);;PNG Files( .png)\u201d\uff1b - selectedFilter\uff1a\u9ed8\u8ba4\u9009\u62e9\u7684\u8fc7\u6ee4\u5668\uff1b - options\uff1a\u5bf9\u8bdd\u6846\u7684\u4e00\u4e9b\u53c2\u6570\u8bbe\u5b9a\uff0c\u6bd4\u5982\u53ea\u663e\u793a\u6587\u4ef6\u5939\u7b49\u7b49\uff0c\u5b83\u7684\u53d6\u503c\u662f enum QFileDialog::Option \uff0c\u6bcf\u4e2a\u9009\u9879\u53ef\u4ee5\u4f7f\u7528 | \u8fd0\u7b97\u7ec4\u5408\u8d77\u6765\u3002 QFileDialog::getOpenFileName() \u8fd4\u56de\u503c\u662f\u9009\u62e9\u7684\u6587\u4ef6\u8def\u5f84\u3002\u6211\u4eec\u5c06\u5176\u8d4b\u503c\u7ed9 path\u3002\u901a\u8fc7\u5224\u65ad path \u662f\u5426\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u786e\u5b9a\u7528\u6237\u662f\u5426\u9009\u62e9\u4e86\u67d0\u4e00\u6587\u4ef6\u3002\u53ea\u6709\u5f53\u7528\u6237\u9009\u62e9\u4e86\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u624d\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\u3002\u4f7f\u7528\u8fd9\u79cd\u9759\u6001\u51fd\u6570\uff0c\u5728 Windows\u3001Mac OS \u4e0a\u9762\u90fd\u662f\u76f4\u63a5\u8c03\u7528\u672c\u5730\u5bf9\u8bdd\u6846\uff0c\u4f46\u662f Linux \u4e0a\u5219\u662f QFileDialog \u81ea\u5df1\u7684\u6a21\u62df\u3002\u8fd9\u6697\u793a\u4e86\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u9759\u6001\u51fd\u6570\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528 QFileDialog \u8fdb\u884c\u8bbe\u7f6e\uff0c\u5c31\u50cf\u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u7684 QMessageBox \u7684\u8bbe\u7f6e\u4e00\u6837\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u5bf9\u8bdd\u6846\u5f88\u53ef\u80fd\u4e0e\u7cfb\u7edf\u5bf9\u8bdd\u6846\u7684\u5916\u89c2\u4e0d\u4e00\u81f4\u3002\u8fd9\u4e00\u70b9\u662f\u9700\u8981\u6ce8\u610f\u7684\u3002","title":"12. \u6587\u4ef6\u5bf9\u8bdd\u6846"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/13.%20%E4%BA%8B%E4%BB%B6/","text":"\u4e8b\u4ef6\uff08event\uff09\u662f\u7531\u7cfb\u7edf\u6216\u8005 Qt \u672c\u8eab\u5728\u4e0d\u540c\u7684\u65f6\u523b\u53d1\u51fa\u7684\u3002\u5f53\u7528\u6237\u6309\u4e0b\u9f20\u6807\u3001\u6572\u4e0b\u952e\u76d8\uff0c\u6216\u8005\u662f\u7a97\u53e3\u9700\u8981\u91cd\u65b0\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53d1\u51fa\u4e00\u4e2a\u76f8\u5e94\u7684\u4e8b\u4ef6\u3002\u4e00\u4e9b\u4e8b\u4ef6\u5728\u5bf9\u7528\u6237\u64cd\u4f5c\u505a\u51fa\u54cd\u5e94\u65f6\u53d1\u51fa\uff0c\u5982\u952e\u76d8\u4e8b\u4ef6\u7b49\uff1b\u53e6\u4e00\u4e9b\u4e8b\u4ef6\u5219\u662f\u7531\u7cfb\u7edf\u81ea\u52a8\u53d1\u51fa\uff0c\u5982\u8ba1\u65f6\u5668\u4e8b\u4ef6\u3002 \u4e8b\u4ef6\u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u8bf4\u7684\u201c\u4e8b\u4ef6\u9a71\u52a8\uff08event drive\uff09\u201d\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\u6982\u5ff5\u3002\u4e8b\u4ef6\u7684\u51fa\u73b0\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u4ee3\u7801\u4e0d\u4f1a\u6309\u7167\u539f\u59cb\u7684\u7ebf\u6027\u987a\u5e8f\u6267\u884c\u3002\u60f3\u60f3\u770b\uff0c\u4ece\u6700\u521d\u7684 C \u8bed\u8a00\u5f00\u59cb\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u662f\u4ee5\u4e00\u79cd\u7ebf\u6027\u7684\u987a\u5e8f\u6267\u884c\u4ee3\u7801\uff1a\u8fd9\u4e00\u6761\u8bed\u53e5\u6267\u884c\u4e4b\u540e\uff0c\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5\uff1b\u8fd9\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u8fc7\u540e\uff0c\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u79cd\u7c7b\u4f3c\u201c\u6279\u5904\u7406\u201d\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\u663e\u7136\u4e0d\u9002\u5408\u4e8e\u5904\u7406\u590d\u6742\u7684\u7528\u6237\u4ea4\u4e92\u3002\u6211\u4eec\u6765\u60f3\u8c61\u4e00\u4e0b\u7528\u6237\u4ea4\u4e92\u7684\u60c5\u666f\uff1a\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u5806\u529f\u80fd\u653e\u5728\u754c\u9762\u4e0a\uff0c\u7528\u6237\u70b9\u51fb\u4e86\u201c\u6253\u5f00\u6587\u4ef6\u201d\uff0c\u4e8e\u662f\u5f00\u59cb\u6267\u884c\u6253\u5f00\u6587\u4ef6\u7684\u64cd\u4f5c\uff1b\u7528\u6237\u70b9\u51fb\u4e86\u201c\u4fdd\u5b58\u6587\u4ef6\u201d\uff0c\u4e8e\u662f\u5f00\u59cb\u6267\u884c\u4fdd\u5b58\u6587\u4ef6\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u4e0d\u77e5\u9053\u7528\u6237\u7a76\u7adf\u60f3\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u56e0\u6b64\u4e5f\u5c31\u4e0d\u80fd\u9884\u6d4b\u63a5\u4e0b\u6765\u5c06\u4f1a\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u201c\u6587\u4ef6\u53e6\u5b58\u4e3a\u201d\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u7528\u6237\u4e0d\u70b9\u51fb\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8c03\u7528\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u4e8b\u4ef6\u9a71\u52a8\u201d\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f\u4e0d\u518d\u662f\u7ebf\u6027\u7684\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7740\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\u3002\u6ca1\u6709\u4e8b\u4ef6\uff0c\u7a0b\u5e8f\u5c06\u963b\u585e\u5728\u90a3\u91cc\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u4ee3\u7801\u3002 \u5728 Qt \u4e2d\uff0c\u4e8b\u4ef6\u7684\u6982\u5ff5\u4f3c\u4e4e\u540c\u4fe1\u53f7\u69fd\u7c7b\u4f3c\u3002\u7684\u786e\u5982\u6b64\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4f7f\u7528 Qt \u7ec4\u4ef6\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u628a\u4e3b\u8981\u7cbe\u529b\u653e\u5728\u4e8b\u4ef6\u4e0a\u3002\u56e0\u4e3a\u5728 Qt \u4e2d\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u66f4\u591a\u7684\u662f\u4e8b\u4ef6\u5173\u8054\u7684\u4e00\u4e2a\u4fe1\u53f7\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e QPushButton \u7684\u9f20\u6807\u70b9\u51fb\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e2a\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\uff0c\u800c\u662f\u5173\u5fc3\u5b83\u7684 clicked() \u4fe1\u53f7\u7684\u53d1\u51fa\u3002\u8fd9\u4e0e\u5176\u4ed6\u7684\u4e00\u4e9b GUI \u6846\u67b6\u4e0d\u540c\uff1a\u5728 Swing \u4e2d\uff0c\u4f60\u6240\u8981\u5173\u5fc3\u7684\u662f JButton \u7684 ActionListener \u8fd9\u4e2a\u70b9\u51fb\u4e8b\u4ef6\u3002\u7531\u6b64\u770b\u51fa\uff0c\u76f8\u6bd4\u4e8e\u5176\u4ed6 GUI \u6846\u67b6\uff0cQt \u7ed9\u4e86\u6211\u4eec\u989d\u5916\u7684\u9009\u62e9\uff1a\u4fe1\u53f7\u69fd\u3002 \u4f46\u662f\uff0cQt \u4e2d\u7684\u4e8b\u4ef6\u548c\u4fe1\u53f7\u69fd\u5374\u5e76\u4e0d\u662f\u53ef\u4ee5\u76f8\u4e92\u66ff\u4ee3\u7684\u3002\u4fe1\u53f7\u7531\u5177\u4f53\u7684\u5bf9\u8c61\u53d1\u51fa\uff0c\u7136\u540e\u4f1a\u9a6c\u4e0a\u4ea4\u7ed9\u7531 connect() \u51fd\u6570\u8fde\u63a5\u7684\u69fd\u8fdb\u884c\u5904\u7406\uff1b\u800c\u5bf9\u4e8e\u4e8b\u4ef6\uff0cQt \u4f7f\u7528\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217\u5bf9\u6240\u6709\u53d1\u51fa\u7684\u4e8b\u4ef6\u8fdb\u884c\u7ef4\u62a4\uff0c\u5f53\u65b0\u7684\u4e8b\u4ef6\u4ea7\u751f\u65f6\uff0c\u4f1a\u88ab\u8ffd\u52a0\u5230\u4e8b\u4ef6\u961f\u5217\u7684\u5c3e\u90e8\u3002\u524d\u4e00\u4e2a\u4e8b\u4ef6\u5b8c\u6210\u540e\uff0c\u53d6\u51fa\u540e\u9762\u7684\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\u3002\u4f46\u662f\uff0c\u5fc5\u8981\u7684\u65f6\u5019\uff0cQt \u7684\u4e8b\u4ef6\u4e5f\u53ef\u4ee5\u4e0d\u8fdb\u5165\u4e8b\u4ef6\u961f\u5217\uff0c\u800c\u662f\u76f4\u63a5\u5904\u7406\u3002\u4fe1\u53f7\u4e00\u65e6\u53d1\u51fa\uff0c\u5bf9\u5e94\u7684\u69fd\u51fd\u6570\u4e00\u5b9a\u4f1a\u88ab\u6267\u884c\u3002\u4f46\u662f\uff0c\u4e8b\u4ef6\u5219\u53ef\u4ee5\u4f7f\u7528\u201c\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u201d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5bf9\u4e8e\u6709\u4e9b\u4e8b\u4ef6\u8fdb\u884c\u989d\u5916\u7684\u5904\u7406\uff0c\u53e6\u5916\u7684\u4e8b\u4ef6\u5219\u4e0d\u5173\u5fc3\u3002\u603b\u7684\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7ec4\u4ef6\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u4fe1\u53f7\u69fd\uff1b\u5982\u679c\u6211\u4eec \u81ea\u5b9a\u4e49 \u7ec4\u4ef6\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u4e8b\u4ef6\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8b\u4ef6\u6765\u6539\u53d8\u7ec4\u4ef6\u7684\u9ed8\u8ba4\u64cd\u4f5c\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u80fd\u591f\u54cd\u5e94\u9f20\u6807\u4e8b\u4ef6\u7684 EventLabel \uff0c\u6211\u4eec\u5c31\u9700\u8981\u91cd\u5199 QLabel \u7684\u9f20\u6807\u4e8b\u4ef6\uff0c\u505a\u51fa\u6211\u4eec\u5e0c\u671b\u7684\u64cd\u4f5c\uff0c\u6709\u53ef\u80fd\u8fd8\u5f97\u5728\u6070\u5f53\u7684\u65f6\u5019\u53d1\u51fa\u4e00\u4e2a\u7c7b\u4f3c\u6309\u94ae\u7684 clicked() \u4fe1\u53f7\uff08\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8ba9\u8fd9\u4e2a EventLabel \u80fd\u591f\u88ab\u5176\u5b83\u7ec4\u4ef6\u4f7f\u7528\uff09\u6216\u8005\u5176\u5b83\u7684\u4fe1\u53f7\u3002 Qt \u7a0b\u5e8f\u9700\u8981\u5728 main() \u51fd\u6570\u521b\u5efa\u4e00\u4e2a QCoreApplication \u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5b83\u7684 exec() \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u5f00\u59cb Qt \u7684\u4e8b\u4ef6\u5faa\u73af\u3002\u5728\u6267\u884c exec() \u51fd\u6570\u4e4b\u540e\uff0c\u7a0b\u5e8f\u5c06\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\u6765\u76d1\u542c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e8b\u4ef6\u3002\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cQt \u5c06\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u5bf9\u8c61\u3002Qt \u4e2d\u6240\u6709\u4e8b\u4ef6\u7c7b\u90fd\u7ee7\u627f\u4e8e QEvent \u3002\u5728\u4e8b\u4ef6\u5bf9\u8c61\u521b\u5efa\u5b8c\u6bd5\u540e\uff0cQt \u5c06\u8fd9\u4e2a\u4e8b\u4ef6\u5bf9\u8c61\u4f20\u9012\u7ed9 QObject \u7684 event() \u51fd\u6570\u3002 event() \u51fd\u6570\u5e76\u4e0d\u76f4\u63a5\u5904\u7406\u4e8b\u4ef6\uff0c\u800c\u662f\u6309\u7167\u4e8b\u4ef6\u5bf9\u8c61\u7684\u7c7b\u578b\u5206\u6d3e\u7ed9\u7279\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff08event handler\uff09\u3002 \u5728\u6240\u6709\u7ec4\u4ef6\u7684\u7236\u7c7b QWidget \u4e2d\uff0c\u5b9a\u4e49\u4e86\u5f88\u591a\u4e8b\u4ef6\u5904\u7406\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5982 keyPressEvent() \u3001 keyReleaseEvent() \u3001 mouseDoubleClickEvent() \u3001 mouseMoveEvent() \u3001 mousePressEvent() \u3001 mouseReleaseEvent() \u7b49\u3002\u8fd9\u4e9b\u51fd\u6570\u90fd\u662f protected virtual \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u91cd\u65b0\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u3002 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a class EventLabel : public QLabel { protected : void mouseMoveEvent ( QMouseEvent * event ); void mousePressEvent ( QMouseEvent * event ); void mouseReleaseEvent ( QMouseEvent * event ); }; void EventLabel::mouseMoveEvent ( QMouseEvent * event ) { this -> setText ( QString ( \"<center><h1>Move: (%1, %2)</h1></center>\" ) . arg ( QString :: number ( event -> x ()), QString :: number ( event -> y ()))); } void EventLabel::mousePressEvent ( QMouseEvent * event ) { this -> setText ( QString ( \"<center><h1>Press: (%1, %2)</h1></center>\" ) . arg ( QString :: number ( event -> x ()), QString :: number ( event -> y ()))); } void EventLabel::mouseReleaseEvent ( QMouseEvent * event ) { QString msg ; msg . sprintf ( \"<center><h1>Release: (%d, %d)</h1></center>\" , event -> x (), event -> y ()); this -> setText ( msg ); } int main ( int argc , char * argv []) { QApplication a ( argc , argv ); EventLabel * label = new EventLabel ; label -> setWindowTitle ( \"MouseEvent Demo\" ); label -> resize ( 300 , 200 ); label -> show (); return a . exec (); } EventLabel \u7ee7\u627f\u4e86 QLabel \uff0c\u8986\u76d6\u4e86 mousePressEvent() \u3001 mouseMoveEvent() \u548c MouseReleaseEvent() \u4e09\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u5e76\u6ca1\u6709\u6dfb\u52a0\u4ec0\u4e48\u529f\u80fd\uff0c\u53ea\u662f\u5728\u9f20\u6807\u6309\u4e0b\uff08press\uff09\u3001\u9f20\u6807\u79fb\u52a8\uff08move\uff09\u548c\u9f20\u6807\u91ca\u653e\uff08release\uff09\u7684\u65f6\u5019\uff0c\u628a\u5f53\u524d\u9f20\u6807\u7684\u5750\u6807\u503c\u663e\u793a\u5728\u8fd9\u4e2a Label \u4e0a\u9762\u3002\u7531\u4e8e QLabel \u662f\u652f\u6301 HTML \u4ee3\u7801\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e86 HTML \u4ee3\u7801\u6765\u683c\u5f0f\u5316\u6587\u5b57\u3002 QString \u7684 arg() \u51fd\u6570\u53ef\u4ee5\u81ea\u52a8\u66ff\u6362\u6389 QString \u4e2d\u51fa\u73b0\u7684\u5360\u4f4d\u7b26\u3002\u5176\u5360\u4f4d\u7b26\u4ee5 % \u5f00\u59cb\uff0c\u540e\u9762\u662f\u5360\u4f4d\u7b26\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982 %1\uff0c%2 \u8fd9\u79cd\u3002 QString ( \"[%1, %2]\" ). arg ( x , y ); \u8fd9\u6761\u8bed\u53e5\u5c06\u4f1a\u4f7f\u7528 x \u66ff\u6362 %1\uff0cy \u66ff\u6362 %2\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u8bed\u53e5\u751f\u6210\u7684 QString \u4e3a [x, y] \u3002 \u5728 mouseReleaseEvent() \u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd QString \u7684\u6784\u9020\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c C \u98ce\u683c\u7684\u683c\u5f0f\u5316\u51fd\u6570 sprintf() \u6765\u6784\u9020 QString \u3002","title":"13. \u4e8b\u4ef6"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/14.%20%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%8E%A5%E5%8F%97%E4%B8%8E%E5%BF%BD%E7%95%A5/","text":"\u5148\u770b\u4e00\u6bb5\u4ee3\u7801\uff1a //!!! Qt5 // ---------- custombutton.h ---------- // class CustomButton : public QPushButton { Q_OBJECT public : CustomButton ( QWidget * parent = 0 ); private : void onButtonCliecked (); }; // ---------- custombutton.cpp ---------- // CustomButton :: CustomButton ( QWidget * parent ) : QPushButton ( parent ) { connect ( this , & CustomButton :: clicked , this , & CustomButton :: onButtonCliecked ); } void CustomButton :: onButtonCliecked () { qDebug () << \"You clicked this!\" ; } // ---------- main.cpp ---------- // int main ( int argc , char * argv []) { QApplication a ( argc , argv ); CustomButton btn ; btn . setText ( \"This is a Button!\" ); btn . show (); return a . exec (); } \u8fd9\u662f\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u7ecf\u8fc7\u524d\u9762\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u77e5\u9053\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\uff1a\u70b9\u51fb\u6309\u94ae\uff0c\u4f1a\u5728\u63a7\u5236\u53f0\u6253\u5370\u51fa\u201cYou clicked this!\u201d\u5b57\u7b26\u4e32\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u5411 CustomButton \u7c7b\u6dfb\u52a0\u4e00\u4e2a[[13. \u4e8b\u4ef6|\u4e8b\u4ef6]]\u51fd\u6570\uff1a // CustomButton ... protected : void mousePressEvent ( QMouseEvent * event ); ... // ---------- custombutton.cpp ---------- // ... void CustomButton :: mousePressEvent ( QMouseEvent * event ) { if ( event -> button () == Qt :: LeftButton ) { qDebug () << \"left\" ; } else { QPushButton :: mousePressEvent ( event ); } } ... \u6211\u4eec\u91cd\u5199\u4e86 CustomButton \u7684 mousePressEvent() \u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u9f20\u6807\u6309\u4e0b\u3002\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5224\u65ad\u5982\u679c\u9f20\u6807\u6309\u4e0b\u7684\u662f\u5de6\u952e\uff0c\u5219\u6253\u5370\u51fa\u6765\u201cleft\u201d\u5b57\u7b26\u4e32\uff0c\u5426\u5219\uff0c\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\u3002\u7f16\u8bd1\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5f53\u6211\u4eec\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u201cYou clicked this!\u201d\u5b57\u7b26\u4e32\u4e0d\u518d\u51fa\u73b0\uff0c\u53ea\u6709\u4e00\u4e2a\u201cleft\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u628a\u7236\u7c7b\u7684\u5b9e\u73b0\u8986\u76d6\u6389\u4e86\u3002\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u7236\u7c7b QPushButton \u7684 mousePressEvent() \u51fd\u6570\u4e2d\u80af\u5b9a\u53d1\u51fa\u4e86 clicked() \u4fe1\u53f7\uff0c\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u69fd\u51fd\u6570\u600e\u4e48\u4f1a\u4e0d\u6267\u884c\u4e86\u5462\uff1f\u8fd9\u6697\u793a\u6211\u4eec\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ec6\u8282\uff1a \u5f53\u91cd\u5199\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u65f6\uff0c\u65f6\u523b\u6ce8\u610f\u662f\u5426\u9700\u8981\u901a\u8fc7\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\u6765\u786e\u4fdd\u539f\u6709\u5b9e\u73b0\u4ecd\u80fd\u8fdb\u884c\uff01 \u6bd4\u5982\u6211\u4eec\u7684 CustomButton \u7c7b\uff0c\u5982\u679c\u50cf\u6211\u4eec\u8fd9\u4e48\u8986\u76d6\u51fd\u6570\uff0c clicked() \u4fe1\u53f7\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\uff0c\u4f60\u8fde\u63a5\u5230\u8fd9\u4e2a\u4fe1\u53f7\u7684\u69fd\u51fd\u6570\u4e5f\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u4e2a\u9519\u8bef\u975e\u5e38\u9690\u853d\uff0c\u5f88\u53ef\u80fd\u4f1a\u6d6a\u8d39\u4f60\u5f88\u591a\u65f6\u95f4\u624d\u80fd\u627e\u5230\u3002\u56e0\u4e3a\u8fd9\u4e2a\u9519\u8bef\u4e0d\u4f1a\u6709\u4efb\u4f55\u63d0\u793a\u3002\u8fd9\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u6211\u4eec\u7684\u7ec4\u4ef6\u201c\u5ffd\u7565\u201d\u4e86\u7236\u7c7b\u7684\u4e8b\u4ef6\uff0c\u4f46\u8fd9\u66f4\u591a\u7684\u662f\u4e00\u79cd\u8fdd\u5fc3\u4e4b\u4e3e\uff0c\u4e00\u79cd\u9519\u8bef\u3002 \u901a\u8fc7\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u628a Qt \u7684\u4e8b\u4ef6\u4f20\u9012\u770b\u6210\u94fe\u72b6\uff1a\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u5904\u7406\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u5c31\u4f1a\u7ee7\u7eed\u5411\u5176\u7236\u7c7b\u4f20\u9012\u3002Qt \u7684\u4e8b\u4ef6\u5bf9\u8c61\u6709\u4e24\u4e2a\u51fd\u6570\uff1a accept() \u548c ignore() \u3002\u6b63\u5982\u5b83\u4eec\u7684\u540d\u5b57\u4e00\u6837\uff0c\u524d\u8005\u7528\u6765\u544a\u8bc9 Qt\uff0c\u8fd9\u4e2a\u7c7b\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u60f3\u8981\u5904\u7406\u8fd9\u4e2a\u4e8b\u4ef6\uff1b\u540e\u8005\u5219\u544a\u8bc9 Qt\uff0c\u8fd9\u4e2a\u7c7b\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e0d\u60f3\u8981\u5904\u7406\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u5728\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 isAccepted() \u6765\u67e5\u8be2\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u4e0d\u662f\u5df2\u7ecf\u88ab\u63a5\u6536\u4e86\u3002\u5177\u4f53\u6765\u8bf4\uff1a\u5982\u679c\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u8c03\u7528\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5bf9\u8c61\u7684 accept() \u51fd\u6570\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u5c31\u4e0d\u4f1a\u88ab\u7ee7\u7eed\u4f20\u64ad\u7ed9\u5176 \u7236\u7ec4\u4ef6 \uff1b\u5982\u679c\u5b83\u8c03\u7528\u4e86\u4e8b\u4ef6\u7684 ignore() \u51fd\u6570\uff0cQt \u4f1a\u4ece\u5176\u7236\u7ec4\u4ef6\u4e2d\u5bfb\u627e\u53e6\u5916\u7684\u63a5\u53d7\u8005\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5f88\u5c11\u4f1a\u4f7f\u7528 accept() \u548c ignore() \u51fd\u6570\uff0c\u800c\u662f\u50cf\u4e0a\u9762\u7684\u793a\u4f8b\u4e00\u6837\uff0c\u5982\u679c\u5e0c\u671b\u5ffd\u7565\u4e8b\u4ef6\uff08\u6240\u8c13\u5ffd\u7565\uff0c\u662f\u6307\u81ea\u5df1\u4e0d\u60f3\u8981\u8fd9\u4e2a\u4e8b\u4ef6\uff09\uff0c\u53ea\u8981\u8c03\u7528\u7236\u7c7b\u7684\u54cd\u5e94\u51fd\u6570\u5373\u53ef\u3002\u8bb0\u5f97\u6211\u4eec\u66fe\u7ecf\u8bf4\u8fc7\uff0cQt \u4e2d\u7684\u4e8b\u4ef6\u90fd\u662f protected \u7684\uff0c\u56e0\u6b64\uff0c\u91cd\u5199\u7684\u51fd\u6570\u5fc5\u5b9a\u5b58\u5728\u7740\u5176\u7236\u7c7b\u4e2d\u7684\u54cd\u5e94\u51fd\u6570\uff0c\u6240\u4ee5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ef\u884c\u7684\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u53bb\u624b\u52a8\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u786e\u8ba4\u7236\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u5904\u7406\u51fd\u6570\u6709\u6ca1\u6709\u989d\u5916\u7684\u64cd\u4f5c\u3002\u5982\u679c\u6211\u4eec\u5728\u5b50\u7c7b\u4e2d\u76f4\u63a5\u5ffd\u7565\u4e8b\u4ef6\uff0cQt \u4f1a\u53bb\u5bfb\u627e\u5176\u4ed6\u7684\u63a5\u6536\u8005\uff0c\u8be5\u5b50\u7c7b\u7684\u7236\u7c7b\u7684\u64cd\u4f5c\u4f1a\u88ab\u5ffd\u7565\uff08\u56e0\u4e3a\u6ca1\u6709\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6709\u6f5c\u5728\u7684\u5371\u9669\u3002\u4e3a\u4e86\u907f\u514d\u81ea\u5df1\u53bb\u8c03\u7528 accept() \u548c ignore() \u51fd\u6570\uff0c\u800c\u662f\u5c3d\u91cf\u8c03\u7528\u7236\u7c7b\u5b9e\u73b0\uff0cQt \u505a\u4e86\u7279\u6b8a\u7684\u8bbe\u8ba1\uff1a\u4e8b\u4ef6\u5bf9\u8c61\u9ed8\u8ba4\u662f accept \u7684\uff0c\u800c\u4f5c\u4e3a\u6240\u6709\u7ec4\u4ef6\u7684\u7236\u7c7b QWidget \u7684\u9ed8\u8ba4\u5b9e\u73b0\u5219\u662f\u8c03\u7528 ignore() \u3002\u8fd9\u4e48\u4e00\u6765\uff0c\u5982\u679c\u4f60\u81ea\u5df1\u5b9e\u73b0\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u4e0d\u8c03\u7528 QWidget \u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u4f60\u5c31\u7b49\u4e8e\u662f\u63a5\u53d7\u4e86\u4e8b\u4ef6\uff1b\u5982\u679c\u4f60\u8981\u5ffd\u7565\u4e8b\u4ef6\uff0c\u53ea\u9700\u8c03\u7528 QWidget \u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002\u8fd9\u4e00\u70b9\u6211\u4eec\u524d\u9762\u5df2\u7ecf\u8bf4\u660e\u3002 \u4e0b\u9762\u53ef\u4ee5\u4ece\u4ee3\u7801\u7ea7\u522b\u6765\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b QWidget \u7684 mousePressEvent() \u51fd\u6570\u7684\u5b9e\u73b0\uff1a //!!! Qt5 void QWidget::mousePressEvent ( QMouseEvent * event ) { event -> ignore (); if (( windowType () == Qt :: Popup )) { event -> accept (); QWidget * w ; while (( w = QApplication :: activePopupWidget ()) && w != this ){ w -> close (); if ( QApplication :: activePopupWidget () == w ) w -> hide (); // hide at least } if ( ! rect (). contains ( event -> pos ())){ close (); } } } \u6ce8\u610f\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\uff1a event->ignore() \uff0c\u5982\u679c\u5b50\u7c7b\u90fd\u6ca1\u6709\u91cd\u5199\u8fd9\u4e2a\u51fd\u6570\uff0cQt \u4f1a\u9ed8\u8ba4\u5ffd\u7565\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u7ee7\u7eed\u5bfb\u627e\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u63a5\u6536\u8005\u3002\u5982\u679c\u6211\u4eec\u5728\u5b50\u7c7b\u7684 mousePressEvent() \u51fd\u6570\u4e2d\u76f4\u63a5\u8c03\u7528\u4e86 accept() \u6216\u8005 ignore() \uff0c\u800c\u6ca1\u6709\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff0c QWidget::mousePressEvent() \u51fd\u6570\u4e2d\u5173\u4e8e Popup \u5224\u65ad\u7684\u90a3\u6bb5\u4ee3\u7801\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u51fa\u73b0\u9ed8\u8ba4\u5176\u5999\u7684\u602a\u5f02\u73b0\u8c61\u3002 \u9488\u5bf9 accept() \u548c ignore() \uff0c\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a class CustomButton : public QPushButton { Q_OBJECT public : CustomButton ( QWidget * parent ) : QPushButton ( parent ) { } protected : void mousePressEvent ( QMouseEvent * event ) { qDebug () << \"CustomButton\" ; } }; class CustomButtonEx : public CustomButton { Q_OBJECT public : CustomButtonEx ( QWidget * parent ) : CustomButton ( parent ) { } protected : void mousePressEvent ( QMouseEvent * event ) { qDebug () << \"CustomButtonEx\" ; } }; class CustomWidget : public QWidget { Q_OBJECT public : CustomWidget ( QWidget * parent ) : QWidget ( parent ) { } protected : void mousePressEvent ( QMouseEvent * event ) { qDebug () << \"CustomWidget\" ; } }; class MainWindow : public QMainWindow { Q_OBJECT public : MainWindow ( QWidget * parent = 0 ) : QMainWindow ( parent ) { CustomWidget * widget = new CustomWidget ( this ); CustomButton * cbex = new CustomButton ( widget ); cbex -> setText ( tr ( \"CustomButton\" )); CustomButtonEx * cb = new CustomButtonEx ( widget ); cb -> setText ( tr ( \"CustomButtonEx\" )); QVBoxLayout * widgetLayout = new QVBoxLayout ( widget ); widgetLayout -> addWidget ( cbex ); widgetLayout -> addWidget ( cb ); this -> setCentralWidget ( widget ); } protected : void mousePressEvent ( QMouseEvent * event ) { qDebug () << \"MainWindow\" ; } }; \u8fd9\u6bb5\u4ee3\u7801\u5728\u4e00\u4e2a MainWindow \u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a CustomWidget \uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u6309\u94ae\u5bf9\u8c61\uff1a CustomButton \u548c CustomButtonEx \u3002\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u91cd\u5199\u4e86 mousePressEvent() \u51fd\u6570\u3002 \u8fd0\u884c\u7a0b\u5e8f\u70b9\u51fb CustomButtonEx\uff0c\u7ed3\u679c\u662f CustomButtonEx \u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u91cd\u5199\u4e86\u9f20\u6807\u6309\u4e0b\u7684\u4e8b\u4ef6\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u8c03\u7528\u7236\u7c7b\u51fd\u6570\u6216\u8005\u663e\u5f0f\u8bbe\u7f6e accept() \u6216 ignore() \u3002\u4e0b\u9762\u6211\u4eec\u5728 CustomButtonEx \u7684 mousePressEvent() \u7b2c\u4e00\u884c\u589e\u52a0\u4e00\u53e5 event->accept() \uff0c\u91cd\u65b0\u8fd0\u884c\uff0c\u53d1\u73b0\u7ed3\u679c\u4e0d\u53d8\u3002\u6b63\u5982\u6211\u4eec\u524d\u9762\u6240\u8bf4\uff0c QEvent \u9ed8\u8ba4\u662f accept \u7684\uff0c\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u7136\u540e\u6211\u4eec\u5c06 CustomButtonEx \u7684 event->accept() \u6539\u6210 event->ignore() \u3002\u8fd9\u6b21\u8fd0\u884c\u7ed3\u679c\u662f CustomButtonEx CustomWidget ignore() \u8bf4\u660e\u6211\u4eec\u60f3\u8ba9\u4e8b\u4ef6\u7ee7\u7eed\u4f20\u64ad\uff0c\u4e8e\u662f CustomButtonEx \u7684\u7236\u7ec4\u4ef6 CustomWidget \u4e5f\u6536\u5230\u4e86\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u6240\u4ee5\u8f93\u51fa\u4e86\u81ea\u5df1\u7684\u7ed3\u679c\u3002\u540c\u7406\uff0c CustomWidget \u53c8\u6ca1\u6709\u8c03\u7528\u7236\u7c7b\u51fd\u6570\u6216\u8005\u663e\u5f0f\u8bbe\u7f6e accept() \u6216 ignore() \uff0c\u6240\u4ee5\u4e8b\u4ef6\u4f20\u64ad\u5c31\u6b64\u6253\u4f4f\u3002\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c CustomButtonEx \u7684\u4e8b\u4ef6\u4f20\u64ad\u7ed9\u4e86\u7236\u7ec4\u4ef6 CustomWidget \uff0c\u800c\u4e0d\u662f\u5b83\u7684\u7236\u7c7b CustomButton \u3002 \u4e8b\u4ef6\u7684\u4f20\u64ad\u662f\u5728\u7ec4\u4ef6\u5c42\u6b21\u4e0a\u9762\u7684\uff0c\u800c\u4e0d\u662f\u4f9d\u9760\u7c7b\u7ee7\u627f\u673a\u5236\u3002 \u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u60c5\u5f62\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528 accept() \u548c ignore() \u51fd\u6570\uff0c\u90a3\u5c31\u662f\u7a97\u53e3\u5173\u95ed\u7684\u4e8b\u4ef6\u3002\u5bf9\u4e8e\u7a97\u53e3\u5173\u95ed QCloseEvent \u4e8b\u4ef6\uff0c\u8c03\u7528 accept() \u610f\u5473\u7740 Qt \u4f1a\u505c\u6b62\u4e8b\u4ef6\u7684\u4f20\u64ad\uff0c\u7a97\u53e3\u5173\u95ed\uff1b\u8c03\u7528 ignore() \u5219\u610f\u5473\u7740\u4e8b\u4ef6\u7ee7\u7eed\u4f20\u64ad\uff0c\u5373\u963b\u6b62\u7a97\u53e3\u5173\u95ed\u3002","title":"14. \u4e8b\u4ef6\u7684\u63a5\u53d7\u4e0e\u5ffd\u7565"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/15.%20event%28%29/","text":"[[13. \u4e8b\u4ef6|\u4e8b\u4ef6]]\u5bf9\u8c61\u521b\u5efa\u5b8c\u6bd5\u540e\uff0cQt \u5c06\u8fd9\u4e2a\u4e8b\u4ef6\u5bf9\u8c61\u4f20\u9012\u7ed9 QObject \u7684 event() \u51fd\u6570\u3002 event() \u51fd\u6570\u5e76\u4e0d\u76f4\u63a5\u5904\u7406\u4e8b\u4ef6\uff0c\u800c\u662f\u5c06\u8fd9\u4e9b\u4e8b\u4ef6\u5bf9\u8c61\u6309\u7167\u5b83\u4eec\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5206\u53d1\u7ed9\u4e0d\u540c\u7684\u4e8b\u4ef6\u5904\u7406\u5668\uff08event handler\uff09\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c event() \u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u4e8b\u4ef6\u7684\u5206\u53d1\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5728\u4e8b\u4ef6\u5206\u53d1\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a event() \u51fd\u6570\u4e86\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4e00\u4e2a QWidget \u7ec4\u4ef6\u4e2d\u76d1\u542c tab \u952e\u7684\u6309\u4e0b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ee7\u627f QWidget \uff0c\u5e76\u91cd\u5199\u5b83\u7684 event() \u51fd\u6570\uff0c\u6765\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff1a bool CustomWidget::event ( QEvent * e ) { if ( e -> type () == QEvent :: KeyPress ) { QKeyEvent * keyEvent = static_cast < QKeyEvent *> ( e ); if ( keyEvent -> key () == Qt :: Key_Tab ) { qDebug () << \"You press tab.\" ; return true ; } } return QWidget :: event ( e ); } CustomWidget \u662f\u4e00\u4e2a\u666e\u901a\u7684 QWidget \u5b50\u7c7b\u3002\u6211\u4eec\u91cd\u5199\u4e86\u5b83\u7684 event() \u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a QEvent \u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u8f6c\u53d1\u7684\u4e8b\u4ef6\u5bf9\u8c61\u3002\u51fd\u6570\u8fd4\u56de\u503c\u662f bool \u7c7b\u578b\u3002\u5982\u679c\u4f20\u5165\u7684\u4e8b\u4ef6\u5df2\u88ab\u8bc6\u522b\u5e76\u4e14\u5904\u7406\uff0c\u5219\u9700\u8981\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f true\uff0c\u5e76\u4e14\uff0c\u8be5\u4e8b\u4ef6\u5bf9\u8c61\u8bbe\u7f6e\u4e86 accept() \uff0c\u90a3\u4e48 Qt \u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u4e8b\u4ef6\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u4e0d\u4f1a\u518d\u5c06\u8fd9\u4e2a\u4e8b\u4ef6\u53d1\u9001\u7ed9\u5176\u5b83\u5bf9\u8c61\uff0c\u800c\u662f\u4f1a\u7ee7\u7eed\u5904\u7406\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e8b\u4ef6\u3002\u6ce8\u610f\uff0c\u5728 event() \u51fd\u6570\u4e2d\uff0c\u8c03\u7528\u4e8b\u4ef6\u5bf9\u8c61\u7684 accept() \u548c ignore() \u51fd\u6570\u662f\u6ca1\u6709\u4f5c\u7528\u7684\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e8b\u4ef6\u7684\u4f20\u64ad\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 QEvent::type() \u51fd\u6570\u53ef\u4ee5\u68c0\u67e5\u4e8b\u4ef6\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5176\u8fd4\u56de\u503c\u662f QEvent::Type \u7c7b\u578b\u7684\u679a\u4e3e\u3002\u6211\u4eec\u5904\u7406\u8fc7\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de true\uff0c\u8868\u793a\u6211\u4eec\u5df2\u7ecf\u5bf9\u6b64\u4e8b\u4ef6\u8fdb\u884c\u4e86\u5904\u7406\uff1b\u5bf9\u4e8e\u5176\u5b83\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u4e8b\u4ef6\uff0c\u5219\u9700\u8981\u8c03\u7528\u7236\u7c7b\u7684 event() \u51fd\u6570\u7ee7\u7eed\u8f6c\u53d1\uff0c\u5426\u5219\u8fd9\u4e2a\u7ec4\u4ef6\u5c31\u53ea\u80fd\u5904\u7406\u6211\u4eec\u5b9a\u4e49\u7684\u4e8b\u4ef6\u4e86\u3002 \u4e3a\u4e86\u6d4b\u8bd5\u8fd9\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u7684\u4ee3\u7801\uff1a bool CustomTextEdit::event ( QEvent * e ) { if ( e -> type () == QEvent :: KeyPress ) { QKeyEvent * keyEvent = static_cast < QKeyEvent *> ( e ); if ( keyEvent -> key () == Qt :: Key_Tab ) { qDebug () << \"You press tab.\" ; return true ; } } return false ; } CustomTextEdit \u662f QTextEdit \u7684\u4e00\u4e2a\u5b50\u7c7b\u3002\u6211\u4eec\u91cd\u5199\u4e86\u5176 event() \u51fd\u6570\uff0c\u5374\u6ca1\u6709\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u7684\u7ec4\u4ef6\u5c31\u53ea\u80fd\u5904\u7406 Tab \u952e\uff0c\u518d\u4e5f\u65e0\u6cd5\u8f93\u5165\u4efb\u4f55\u6587\u672c\uff0c\u4e5f\u4e0d\u80fd\u54cd\u5e94\u5176\u5b83\u4e8b\u4ef6\uff0c\u6bd4\u5982\u9f20\u6807\u70b9\u51fb\u4e4b\u540e\u4e5f\u4e0d\u4f1a\u6709\u5149\u6807\u51fa\u73b0\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u5904\u7406\u7684 KeyPress \u7c7b\u578b\u7684\u4e8b\u4ef6\uff0c\u5e76\u4e14\u5982\u679c\u4e0d\u662f KeyPress \u4e8b\u4ef6\uff0c\u5219\u76f4\u63a5\u8fd4\u56de false\uff0c\u9f20\u6807\u4e8b\u4ef6\u6839\u672c\u4e0d\u4f1a\u88ab\u8f6c\u53d1\uff0c\u4e5f\u5c31\u6ca1\u6709\u4e86\u9f20\u6807\u4e8b\u4ef6\u3002 \u901a\u8fc7\u67e5\u770b QObject::event() \u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\uff0c event() \u51fd\u6570\u540c\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u6211\u4eec\u6240\u8bf4\u7684\u4e8b\u4ef6\u5904\u7406\u5668\u6709\u4ec0\u4e48\u8054\u7cfb\uff1a //!!! Qt5 bool QObject::event ( QEvent * e ) { switch ( e -> type ()) { case QEvent :: Timer : timerEvent (( QTimerEvent * ) e ); break ; case QEvent :: ChildAdded : case QEvent :: ChildPolished : case QEvent :: ChildRemoved : childEvent (( QChildEvent * ) e ); break ; // ... default : if ( e -> type () >= QEvent :: User ) { customEvent ( e ); break ; } return false ; } return true ; } \u8fd9\u662f Qt 5 \u4e2d QObject::event() \u51fd\u6570\u7684\u6e90\u4ee3\u7801\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u540c\u524d\u9762\u6211\u4eec\u6240\u8bf4\u7684\u4e00\u6837\uff0cQt \u4e5f\u662f\u4f7f\u7528 QEvent::type() \u5224\u65ad\u4e8b\u4ef6\u7c7b\u578b\uff0c\u7136\u540e\u8c03\u7528\u4e86\u7279\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u6bd4\u5982\uff0c\u5982\u679c event->type() \u8fd4\u56de\u503c\u662f QEvent::Timer \uff0c\u5219\u8c03\u7528 timerEvent() \u51fd\u6570\u3002 \u53ef\u4ee5\u60f3\u8c61\uff0c QWidget::event() \u4e2d\u4e00\u5b9a\u4f1a\u6709\u5982\u4e0b\u7684\u4ee3\u7801\uff1a switch ( event -> type ()) { case QEvent :: MouseMove : mouseMoveEvent (( QMouseEvent * ) event ); break ; // ... } \u4e5f\u5c31\u662f\u8bf4\uff0c event() \u51fd\u6570\u4e2d\u5b9e\u9645\u662f\u901a\u8fc7\u4e8b\u4ef6\u5904\u7406\u5668\u6765\u54cd\u5e94\u4e00\u4e2a\u5177\u4f53\u7684\u4e8b\u4ef6\u3002\u8fd9\u76f8\u5f53\u4e8e event() \u51fd\u6570\u5c06\u5177\u4f53\u4e8b\u4ef6\u7684\u5904\u7406\u201c\u59d4\u6258\u201d\u7ed9\u5177\u4f53\u7684\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u800c\u8fd9\u4e9b\u4e8b\u4ef6\u5904\u7406\u5668\u662f protected virtual \u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u91cd\u5199\u4e86\u67d0\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u5668\uff0c\u5373\u53ef\u8ba9 Qt \u8c03\u7528\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684\u7248\u672c\u3002 \u7531\u6b64\u53ef\u4ee5\u89c1\uff0c event() \u662f\u4e00\u4e2a\u96c6\u4e2d\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u4ef6\u7684\u5730\u65b9\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u91cd\u5199\u4e00\u5927\u5806\u4e8b\u4ef6\u5904\u7406\u5668\uff0c\u5c31\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a event() \u51fd\u6570\uff0c\u901a\u8fc7 QEvent::type() \u5224\u65ad\u4e0d\u540c\u7684\u4e8b\u4ef6\u3002\u9274\u4e8e\u91cd\u5199 event() \u51fd\u6570\u9700\u8981\u5341\u5206\u5c0f\u5fc3\u6ce8\u610f\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\u7684\u8c03\u7528\uff0c\u4e00\u4e0d\u7559\u795e\u5c31\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u4e00\u822c\u8fd8\u662f\u5efa\u8bae\u53ea\u91cd\u5199\u4e8b\u4ef6\u5904\u7406\u5668\uff08\u5f53\u7136\uff0c\u4e5f\u5fc5\u987b\u8bb0\u5f97\u662f\u4e0d\u662f\u5e94\u8be5\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u5904\u7406\u5668\uff09\u3002\u8fd9\u5176\u5b9e\u6697\u793a\u4e86 event() \u51fd\u6570\u7684\u53e6\u5916\u4e00\u4e2a\u4f5c\u7528\uff1a\u5c4f\u853d\u6389\u67d0\u4e9b\u4e0d\u9700\u8981\u7684\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u6b63\u5982\u6211\u4eec\u524d\u9762\u7684 CustomTextEdit \u4f8b\u5b50\u770b\u5230\u7684\u90a3\u6837\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u53ea\u80fd\u54cd\u5e94 tab \u952e\u7684\u7ec4\u4ef6\u3002\u8fd9\u79cd\u4f5c\u7528\u662f\u91cd\u5199\u4e8b\u4ef6\u5904\u7406\u5668\u6240\u4e0d\u80fd\u5b9e\u73b0\u7684\u3002","title":"15. event()"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/16.%20%E4%BA%8B%E4%BB%B6%E8%BF%87%E6%BB%A4%E5%99%A8/","text":"\u6709\u65f6\u5019\uff0c\u5bf9\u8c61\u9700\u8981\u67e5\u770b\u3001\u751a\u81f3\u8981\u62e6\u622a\u53d1\u9001\u5230\u53e6\u5916\u5bf9\u8c61\u7684[[13. \u4e8b\u4ef6|\u4e8b\u4ef6]]\u3002\u4f8b\u5982\uff0c\u5bf9\u8bdd\u6846\u53ef\u80fd\u60f3\u8981\u62e6\u622a\u6309\u952e\u4e8b\u4ef6\uff0c\u4e0d\u8ba9\u522b\u7684\u7ec4\u4ef6\u63a5\u6536\u5230\uff1b\u6216\u8005\u8981\u4fee\u6539\u56de\u8f66\u952e\u7684\u9ed8\u8ba4\u5904\u7406\u3002 \u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0cQt \u521b\u5efa\u4e86 QEvent \u4e8b\u4ef6\u5bf9\u8c61\u4e4b\u540e\uff0c\u4f1a\u8c03\u7528 QObject \u7684[[15. event()|event()]]\u51fd\u6570\u5904\u7406\u4e8b\u4ef6\u7684\u5206\u53d1\u3002\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 event() \u51fd\u6570\u4e2d\u5b9e\u73b0\u62e6\u622a\u7684\u64cd\u4f5c\u3002\u7531\u4e8e event() \u51fd\u6570\u662f protected \u7684\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u7ee7\u627f\u5df2\u6709\u7c7b\u3002\u5982\u679c\u7ec4\u4ef6\u5f88\u591a\uff0c\u5c31\u9700\u8981\u91cd\u5199\u5f88\u591a\u4e2a event() \u51fd\u6570\u3002\u8fd9\u5f53\u7136\u76f8\u5f53\u9ebb\u70e6\uff0c\u66f4\u4e0d\u7528\u8bf4\u91cd\u5199 event() \u51fd\u6570\u8fd8\u5f97\u5c0f\u5fc3\u4e00\u5806\u95ee\u9898\u3002\u597d\u5728 Qt \u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd\u673a\u5236\u6765\u8fbe\u5230\u8fd9\u4e00\u76ee\u7684\uff1a\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002 QObject \u6709\u4e00\u4e2a eventFilter() \u51fd\u6570\uff0c\u7528\u4e8e\u5efa\u7acb\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a virtual bool QObject::eventFilter ( QObject * watched , QEvent * event ); \u8fd9\u4e2a\u51fd\u6570\u6b63\u5982\u5176\u540d\u5b57\u663e\u793a\u7684\u90a3\u6837\uff0c\u662f\u4e00\u4e2a\u201c\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u201d\u3002\u6240\u8c13\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u79cd\u8fc7\u6ee4\u4ee3\u7801\u3002\u60f3\u60f3\u505a\u5316\u5b66\u5b9e\u9a8c\u65f6\u7528\u5230\u7684\u8fc7\u6ee4\u5668\uff0c\u53ef\u4ee5\u5c06\u6742\u8d28\u7559\u5230\u6ee4\u7eb8\u4e0a\uff0c\u8ba9\u8fc7\u6ee4\u540e\u7684\u6db2\u4f53\u6e9c\u8d70\u3002\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e5f\u662f\u5982\u6b64\uff1a\u5b83\u4f1a\u68c0\u67e5\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u3002\u5982\u679c\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u6211\u4eec\u611f\u5174\u8da3\u7684\u7c7b\u578b\uff0c\u5c31\u8fdb\u884c\u6211\u4eec\u81ea\u5df1\u7684\u5904\u7406\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u7ee7\u7eed\u8f6c\u53d1\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a bool \u7c7b\u578b\uff0c\u5982\u679c\u4f60\u60f3\u5c06\u53c2\u6570 event \u8fc7\u6ee4\u51fa\u6765\uff0c\u6bd4\u5982\uff0c\u4e0d\u60f3\u8ba9\u5b83\u7ee7\u7eed\u8f6c\u53d1\uff0c\u5c31\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7684\u8c03\u7528\u65f6\u95f4\u662f\u76ee\u6807\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u53c2\u6570\u91cc\u9762\u7684 watched \u5bf9\u8c61\uff09\u63a5\u6536\u5230\u4e8b\u4ef6\u5bf9\u8c61\u4e4b\u524d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d\u505c\u6b62\u4e86\u67d0\u4e2a\u4e8b\u4ef6\uff0c\u90a3\u4e48\uff0c watched \u5bf9\u8c61\u4ee5\u53ca\u4ee5\u540e\u6240\u6709\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u6839\u672c\u4e0d\u4f1a\u77e5\u9053\u8fd9\u4e48\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u6211\u4eec\u6765\u770b\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\uff1a class MainWindow : public QMainWindow { public : MainWindow (); protected : bool eventFilter ( QObject * obj , QEvent * event ); private : QTextEdit * textEdit ; }; MainWindow :: MainWindow () { textEdit = new QTextEdit ; setCentralWidget ( textEdit ); textEdit -> installEventFilter ( this ); } bool MainWindow :: eventFilter ( QObject * obj , QEvent * event ) { if ( obj == textEdit ) { if ( event -> type () == QEvent :: KeyPress ) { QKeyEvent * keyEvent = static_cast < QKeyEvent *> ( event ); qDebug () << \"Ate key press\" << keyEvent -> key (); return true ; } else { return false ; } } else { // pass the event on to the parent class return QMainWindow :: eventFilter ( obj , event ); } } MainWindow \u662f\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u4e2a\u7c7b\u3002\u6211\u4eec\u91cd\u5199\u4e86\u5b83\u7684 eventFilter() \u51fd\u6570\u3002\u4e3a\u4e86\u8fc7\u6ee4\u7279\u5b9a\u7ec4\u4ef6\u4e0a\u7684\u4e8b\u4ef6\uff0c\u9996\u5148\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e0d\u662f\u6211\u4eec\u611f\u5174\u8da3\u7684\u7ec4\u4ef6\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u7c7b\u578b\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9 textEdit \u7ec4\u4ef6\u5904\u7406\u952e\u76d8\u6309\u4e0b\u7684\u4e8b\u4ef6\u3002\u6240\u4ee5\uff0c\u9996\u5148\u6211\u4eec\u627e\u5230\u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u5982\u679c\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u952e\u76d8\u4e8b\u4ef6\uff0c\u5219\u76f4\u63a5\u8fd4\u56de true\uff0c\u4e5f\u5c31\u662f\u8fc7\u6ee4\u6389\u4e86\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u5176\u4ed6\u4e8b\u4ef6\u8fd8\u662f\u8981\u7ee7\u7eed\u5904\u7406\uff0c\u6240\u4ee5\u8fd4\u56de false\u3002\u5bf9\u4e8e\u5176\u5b83\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u5e76\u4e0d\u4fdd\u8bc1\u662f\u4e0d\u662f\u8fd8\u6709\u8fc7\u6ee4\u5668\uff0c\u4e8e\u662f\u6700\u4fdd\u9669\u7684\u529e\u6cd5\u662f\u8c03\u7528\u7236\u7c7b\u7684\u51fd\u6570\u3002 eventFilter() \u51fd\u6570\u76f8\u5f53\u4e8e\u521b\u5efa\u4e86\u8fc7\u6ee4\u5668\uff0c\u7136\u540e\u6211\u4eec\u9700\u8981\u5b89\u88c5\u8fd9\u4e2a\u8fc7\u6ee4\u5668\u3002\u5b89\u88c5\u8fc7\u6ee4\u5668\u9700\u8981\u8c03\u7528 QObject::installEventFilter() \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a void QObject :: installEventFilter ( QObject * filterObj ) \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a QObject * \u7c7b\u578b\u7684\u53c2\u6570\u3002\u8bb0\u5f97\u521a\u521a\u6211\u4eec\u8bf4\u7684\uff0c eventFilter() \u51fd\u6570\u662f QObject \u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\uff0c\u4efb\u610f QObject \u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff08\u95ee\u9898\u5728\u4e8e\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u91cd\u5199 eventFilter() \u51fd\u6570\uff0c\u8fd9\u4e2a\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u662f\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u7684\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u8fc7\u6ee4\uff09\u3002\u5df2\u7ecf\u5b58\u5728\u7684\u8fc7\u6ee4\u5668\u5219\u53ef\u4ee5\u901a\u8fc7 QObject::removeEventFilter() \u51fd\u6570\u79fb\u9664\u3002 \u6211\u4eec\u53ef\u4ee5\u5411\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u9762\u5b89\u88c5\u591a\u4e2a\u4e8b\u4ef6\u5904\u7406\u5668\uff0c\u53ea\u8981\u8c03\u7528\u591a\u6b21 installEventFilter() \u51fd\u6570\u3002\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5b58\u5728\u591a\u4e2a\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u90a3\u4e48\uff0c\u6700\u540e\u4e00\u4e2a\u5b89\u88c5\u7684\u4f1a\u7b2c\u4e00\u4e2a\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u540e\u8fdb\u5148\u6267\u884c\u7684\u987a\u5e8f\u3002 \u524d\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4f7f\u7528 event() \u51fd\u6570\u5904\u7406\u4e86 Tab \u952e\uff1a bool CustomWidget::event ( QEvent * e ) { if ( e -> type () == QEvent :: KeyPress ) { QKeyEvent * keyEvent = static_cast < QKeyEvent *> ( e ); if ( keyEvent -> key () == Qt :: Key_Tab ) { qDebug () << \"You press tab.\" ; return true ; } } return QWidget :: event ( e ); } \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4e00\u4e2a\u4f7f\u7528\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7684\u7248\u672c\uff1a bool FilterObject::eventFilter ( QObject * object , QEvent * event ) { if ( object == target && event -> type () == QEvent :: KeyPress ) { QKeyEvent * keyEvent = static_cast < QKeyEvent *> ( event ); if ( keyEvent -> key () == Qt :: Key_Tab ) { qDebug () << \"You press tab.\" ; return true ; } else { return false ; } } return false ; } \u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e2a\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002\u8bb0\u5f97\uff0c installEventFilter() \u51fd\u6570\u662f QObject \u7684\u51fd\u6570\uff0c QApplication \u6216\u8005 QCoreApplication \u5bf9\u8c61\u90fd\u662f QObject \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5411 QApplication \u6216\u8005 QCoreApplication \u6dfb\u52a0\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002\u8fd9\u79cd\u5168\u5c40\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u5c06\u4f1a\u5728\u6240\u6709\u5176\u5b83\u7279\u6027\u5bf9\u8c61\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e4b\u524d\u8c03\u7528\u3002\u5c3d\u7ba1\u5f88\u5f3a\u5927\uff0c\u4f46\u8fd9\u79cd\u884c\u4e3a\u4f1a\u4e25\u91cd\u964d\u4f4e\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u4e8b\u4ef6\u5206\u53d1\u6548\u7387\u3002\u56e0\u6b64\uff0c\u9664\u975e\u662f\u4e0d\u5f97\u4e0d\u4f7f\u7528\u7684\u60c5\u51b5\uff0c\u5426\u5219\u7684\u8bdd\u6211\u4eec\u4e0d\u5e94\u8be5\u8fd9\u4e48\u505a\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u5728\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e2d delete \u4e86\u67d0\u4e2a\u63a5\u6536\u7ec4\u4ef6\uff0c\u52a1\u5fc5\u5c06\u51fd\u6570\u8fd4\u56de\u503c\u8bbe\u4e3a true\u3002\u5426\u5219\uff0cQt \u8fd8\u662f\u4f1a\u5c06\u4e8b\u4ef6\u5206\u53d1\u7ed9\u8fd9\u4e2a\u63a5\u6536\u7ec4\u4ef6\uff0c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 \u4e8b\u4ef6\u8fc7\u6ee4\u5668\u548c\u88ab\u5b89\u88c5\u8fc7\u6ee4\u5668\u7684\u7ec4\u4ef6\u5fc5\u987b\u5728\u540c\u4e00\u7ebf\u7a0b\uff0c\u5426\u5219\uff0c\u8fc7\u6ee4\u5668\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\u53e6\u5916\uff0c\u5982\u679c\u5728\u5b89\u88c5\u8fc7\u6ee4\u5668\u4e4b\u540e\uff0c\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u5230\u4e86\u4e0d\u540c\u7684\u7ebf\u7a0b\uff0c\u90a3\u4e48\uff0c\u53ea\u6709\u7b49\u5230\u4e8c\u8005\u91cd\u65b0\u56de\u5230\u540c\u4e00\u7ebf\u7a0b\u7684\u65f6\u5019\u8fc7\u6ee4\u5668\u624d\u4f1a\u6709\u6548\u3002","title":"16. \u4e8b\u4ef6\u8fc7\u6ee4\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/17.%20%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BB%93/","text":"Qt \u7684[[13. \u4e8b\u4ef6|\u4e8b\u4ef6]]\u662f\u6574\u4e2a Qt \u6846\u67b6\u7684\u6838\u5fc3\u673a\u5236\u4e4b\u4e00\uff0c\u4e5f\u6bd4\u8f83\u590d\u6742\u3002\u8bf4\u5b83\u590d\u6742\uff0c\u66f4\u591a\u662f\u56e0\u4e3a\u5b83\u6d89\u53ca\u5230\u7684\u51fd\u6570\u4f17\u591a\uff0c\u800c\u5904\u7406\u65b9\u6cd5\u4e5f\u5f88\u591a\uff0c\u6709\u65f6\u5019\u8ba9\u4eba\u96be\u4ee5\u9009\u62e9\u3002\u73b0\u5728\u6211\u4eec\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b Qt \u4e2d\u7684\u4e8b\u4ef6\u673a\u5236\u3002 Qt \u4e2d\u6709\u5f88\u591a\u79cd\u4e8b\u4ef6\uff1a\u9f20\u6807\u4e8b\u4ef6\u3001\u952e\u76d8\u4e8b\u4ef6\u3001\u5927\u5c0f\u6539\u53d8\u7684\u4e8b\u4ef6\u3001\u4f4d\u7f6e\u79fb\u52a8\u7684\u4e8b\u4ef6\u7b49\u7b49\u3002\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u5b9e\u9645\u6709\u4e24\u79cd\u9009\u62e9\uff1a \u6240\u6709\u4e8b\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u7528\u4e00\u4e2a\u5f88\u5927\u7684\u5206\u652f\u8bed\u53e5\u8fdb\u884c\u9009\u62e9\uff0c\u5176\u4ee3\u8868\u4f5c\u5c31\u662f win32 API \u7684 WndProc() \u51fd\u6570\uff1a LRESULT CALLBACK WndProc ( HWND hWnd , UINT message , WPARAM wParam , LPARAM lParam ) \u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 switch \u8bed\u53e5\uff0c\u9009\u62e9 message \u53c2\u6570\u7684\u7c7b\u578b\u8fdb\u884c\u5904\u7406\uff0c\u5178\u578b\u4ee3\u7801\u662f\uff1a switch ( message ) { case WM_PAINT : // ... break ; case WM_DESTROY : // ... break ; ... } \u6bcf\u4e00\u79cd\u4e8b\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002Qt \u5c31\u662f\u4f7f\u7528\u7684\u8fd9\u4e48\u4e00\u79cd\u673a\u5236\uff1a mouseEvent() keyPressEvent() ... Qt \u5177\u6709\u8fd9\u4e48\u591a\u79cd\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u80af\u5b9a\u6709\u4e00\u4e2a\u5730\u65b9\u5bf9\u5176\u8fdb\u884c\u5206\u53d1\uff0c\u5426\u5219\uff0cQt \u600e\u4e48\u77e5\u9053\u54ea\u4e00\u79cd\u4e8b\u4ef6\u8c03\u7528\u54ea\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u5462\uff1f\u8fd9\u4e2a\u5206\u53d1\u7684\u51fd\u6570\uff0c\u5c31\u662f[[15. event()|event()]]\u3002\u663e\u7136\uff0c\u5f53 QMouseEvent \u4ea7\u751f\u4e4b\u540e\uff0c event() \u51fd\u6570\u5c06\u5176\u5206\u53d1\u7ed9 mouseEvent() \u4e8b\u4ef6\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002 event() \u51fd\u6570\u4f1a\u6709\u4e24\u4e2a\u95ee\u9898\uff1a - QWidget::event() \u51fd\u6570\u662f\u4e00\u4e2a protected \u7684\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u8981\u60f3\u91cd\u5199 event() \uff0c\u5fc5\u987b\u7ee7\u627f\u4e00\u4e2a\u5df2\u6709\u7684\u7c7b\u3002\u8bd5\u60f3\uff0c\u6211\u7684\u7a0b\u5e8f\u6839\u672c\u4e0d\u60f3\u8981\u9f20\u6807\u4e8b\u4ef6\uff0c\u7a0b\u5e8f\u4e2d\u6240\u6709\u7ec4\u4ef6\u90fd\u4e0d\u5141\u8bb8\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\uff0c\u662f\u4e0d\u662f\u6211\u5f97\u7ee7\u627f\u6240\u6709\u7ec4\u4ef6\uff0c\u4e00\u4e00\u91cd\u5199\u5176 event() \u51fd\u6570\uff1fprotected \u51fd\u6570\u5e26\u6765\u7684\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u57fa\u4e8e\u7b2c\u4e09\u65b9\u5e93\u8fdb\u884c\u5f00\u53d1\uff0c\u800c\u5bf9\u65b9\u6ca1\u6709\u63d0\u4f9b\u6e90\u4ee3\u7801\uff0c\u53ea\u6709\u4e00\u4e2a\u94fe\u63a5\u5e93\uff0c\u5176\u5b83\u90fd\u662f\u5c01\u88c5\u597d\u7684\u3002\u6211\u600e\u4e48\u53bb\u7ee7\u627f\u8fd9\u79cd\u5e93\u4e2d\u7684\u7ec4\u4ef6\u5462\uff1f - event() \u51fd\u6570\u7684\u786e\u6709\u4e00\u5b9a\u7684\u63a7\u5236\uff0c\u4e0d\u8fc7\u6709\u65f6\u5019\u6211\u7684\u9700\u6c42\u66f4\u4e25\u683c\u4e00\u4e9b\uff1a\u6211\u5e0c\u671b\u90a3\u4e9b\u7ec4\u4ef6\u6839\u672c\u770b\u4e0d\u5230\u8fd9\u79cd\u4e8b\u4ef6\u3002 event() \u51fd\u6570\u867d\u7136\u53ef\u4ee5\u62e6\u622a\uff0c\u4f46\u5176\u5b9e\u4e5f\u662f\u63a5\u6536\u5230\u4e86 QMouseEvent \u5bf9\u8c61\u3002\u6211\u8fde\u8ba9\u5b83\u6536\u90fd\u6536\u4e0d\u5230\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u6a21\u62df\u4e00\u79cd\u7cfb\u7edf\u6839\u672c\u6ca1\u6709\u90a3\u4e2a\u4e8b\u4ef6\u7684\u6548\u679c\uff0c\u6240\u4ee5\u5176\u5b83\u7ec4\u4ef6\u6839\u672c\u4e0d\u4f1a\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u4e5f\u5c31\u65e0\u9700\u4fee\u6539\u81ea\u5df1\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002\u8fd9\u79cd\u9700\u6c42\u600e\u4e48\u529e\u5462\uff1f \u8fd9\u4e24\u4e2a\u95ee\u9898\u662f event() \u51fd\u6570\u65e0\u6cd5\u5904\u7406\u7684\u3002\u4e8e\u662f\uff0cQt \u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a[[16. \u4e8b\u4ef6\u8fc7\u6ee4\u5668|\u4e8b\u4ef6\u8fc7\u6ee4\u5668]]\u3002\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7ed9\u6211\u4eec\u4e00\u79cd\u80fd\u529b\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5b8c\u5168\u79fb\u9664\u67d0\u79cd\u4e8b\u4ef6\u3002\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u53ef\u4ee5\u5b89\u88c5\u5230\u4efb\u610f QObject \u7c7b\u578b\u4e0a\u9762\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b89\u88c5\u591a\u4e2a\u3002\u5982\u679c\u8981\u5b9e\u73b0\u5168\u5c40\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u5219\u53ef\u4ee5\u5b89\u88c5\u5230 QApplication \u6216\u8005 QCoreApplication \u4e0a\u9762\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f7f\u7528 installEventFilter() \u51fd\u6570\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u5b89\u88c5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u90a3\u4e48\u8be5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u53ea\u5bf9\u8be5\u5bf9\u8c61\u6709\u6548\uff0c\u53ea\u6709\u8fd9\u4e2a\u5bf9\u8c61\u7684\u4e8b\u4ef6\u9700\u8981\u5148\u4f20\u9012\u7ed9\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7684 eventFilter() \u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5176\u5b83\u5bf9\u8c61\u4e0d\u53d7\u5f71\u54cd\u3002\u5982\u679c\u7ed9 QApplication \u5bf9\u8c61\u5b89\u88c5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u90a3\u4e48\u8be5\u8fc7\u6ee4\u5668\u5bf9\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u6709\u6548\uff0c\u4efb\u4f55\u5bf9\u8c61\u7684\u4e8b\u4ef6\u90fd\u662f\u5148\u4f20\u7ed9 eventFilter() \u51fd\u6570\u3002 \u4e8b\u4ef6\u8fc7\u6ee4\u5668\u53ef\u4ee5\u89e3\u51b3\u521a\u521a\u6211\u4eec\u63d0\u51fa\u7684 event() \u51fd\u6570\u7684\u4e24\u70b9\u4e0d\u8db3\uff1a\u9996\u5148\uff0c\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e0d\u662f protected \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5411\u4efb\u4f55 QObject \u5b50\u7c7b\u5b89\u88c5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff1b\u5176\u6b21\uff0c\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u5728\u76ee\u6807\u5bf9\u8c61\u63a5\u6536\u5230\u4e8b\u4ef6\u4e4b\u524d\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u6211\u4eec\u5c06\u4e8b\u4ef6\u8fc7\u6ee4\u6389\uff0c\u76ee\u6807\u5bf9\u8c61\u6839\u672c\u4e0d\u4f1a\u89c1\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u6ca1\u6709\u4ecb\u7ecd\u3002Qt \u4e8b\u4ef6\u7684\u8c03\u7528\u6700\u7ec8\u90fd\u4f1a\u8ffd\u6eaf\u5230 QCoreApplication::notify() \u51fd\u6570\uff0c\u56e0\u6b64\uff0c\u6700\u5927\u7684\u63a7\u5236\u6743\u5b9e\u9645\u4e0a\u662f\u91cd\u5199 QCoreApplication::notify() \u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u58f0\u660e\u662f\uff1a virtual bool QCoreApplication::notify ( QObject * receiver , QEvent * event ); \u8be5\u51fd\u6570\u4f1a\u5c06 event \u53d1\u9001\u7ed9 receiver \uff0c\u4e5f\u5c31\u662f\u8c03\u7528 receiver->event(event) \uff0c\u5176\u8fd4\u56de\u503c\u5c31\u662f\u6765\u81ea receiver \u7684\u4e8b\u4ef6\u5904\u7406\u5668\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e3a\u4efb\u610f\u7ebf\u7a0b\u7684\u4efb\u610f\u5bf9\u8c61\u7684\u4efb\u610f\u4e8b\u4ef6\u8c03\u7528\uff0c\u56e0\u6b64\uff0c\u5b83\u4e0d\u5b58\u5728\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u7684\u7ebf\u7a0b\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\uff0c\u56e0\u4e3a notify() \u51fd\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u800c\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u8981\u7075\u6d3b\u5f97\u591a\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b Qt \u7684\u4e8b\u4ef6\u5904\u7406\uff0c\u5b9e\u9645\u4e0a\u662f\u6709\u4e94\u4e2a\u5c42\u6b21\uff1a - \u91cd\u5199 paintEvent() \u3001 mousePressEvent() \u7b49\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002\u8fd9\u662f\u6700\u666e\u901a\u3001\u6700\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u540c\u65f6\u529f\u80fd\u4e5f\u6700\u7b80\u5355\u3002 - \u91cd\u5199 event() \u51fd\u6570\u3002 event() \u51fd\u6570\u662f\u6240\u6709\u5bf9\u8c61\u7684\u4e8b\u4ef6\u5165\u53e3\uff0c QObject \u548c QWidget \u4e2d\u7684\u5b9e\u73b0\uff0c\u9ed8\u8ba4\u662f\u628a\u4e8b\u4ef6\u4f20\u9012\u7ed9\u7279\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002 - \u5728\u7279\u5b9a\u5bf9\u8c61\u4e0a\u9762\u5b89\u88c5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002\u8be5\u8fc7\u6ee4\u5668\u4ec5\u8fc7\u6ee4\u8be5\u5bf9\u8c61\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u3002 - \u5728 QCoreApplication::instance() \u4e0a\u9762\u5b89\u88c5\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u3002\u8be5\u8fc7\u6ee4\u5668\u5c06\u8fc7\u6ee4\u6240\u6709\u5bf9\u8c61\u7684\u6240\u6709\u4e8b\u4ef6\uff0c\u56e0\u6b64\u548c notify() \u51fd\u6570\u4e00\u6837\u5f3a\u5927\uff0c\u4f46\u662f\u5b83\u66f4\u7075\u6d3b\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5b89\u88c5\u591a\u4e2a\u8fc7\u6ee4\u5668\u3002\u5168\u5c40\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u53ef\u4ee5\u770b\u5230 disabled \u7ec4\u4ef6\u4e0a\u9762\u53d1\u51fa\u7684\u9f20\u6807\u4e8b\u4ef6\u3002\u5168\u5c40\u8fc7\u6ee4\u5668\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u53ea\u80fd\u7528\u5728\u4e3b\u7ebf\u7a0b\u3002 - \u91cd\u5199 QCoreApplication::notify() \u51fd\u6570\u3002\u8fd9\u662f\u6700\u5f3a\u5927\u7684\uff0c\u548c\u5168\u5c40\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u4e00\u6837\u63d0\u4f9b\u5b8c\u5168\u63a7\u5236\uff0c\u5e76\u4e14\u4e0d\u53d7\u7ebf\u7a0b\u7684\u9650\u5236\u3002\u4f46\u662f\u5168\u5c40\u8303\u56f4\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u88ab\u4f7f\u7528\uff08\u56e0\u4e3a QCoreApplication \u662f\u5355\u4f8b\u7684\uff09\u3002 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u4e86\u89e3\u8fd9\u51e0\u4e2a\u5c42\u6b21\u7684\u4e8b\u4ef6\u5904\u7406\u65b9\u5f0f\u7684\u8c03\u7528\u987a\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u4ee3\u7801\uff1a class Label : public QWidget { public : Label () { installEventFilter ( this ); } bool eventFilter ( QObject * watched , QEvent * event ) { if ( watched == this ) { if ( event -> type () == QEvent :: MouseButtonPress ) { qDebug () << \"eventFilter\" ; } } return false ; } protected : void mousePressEvent ( QMouseEvent * ) { qDebug () << \"mousePressEvent\" ; } bool event ( QEvent * e ) { if ( e -> type () == QEvent :: MouseButtonPress ) { qDebug () << \"event\" ; } return QWidget :: event ( e ); } }; class EventFilter : public QObject { public : EventFilter ( QObject * watched , QObject * parent = 0 ) : QObject ( parent ), m_watched ( watched ) { } bool eventFilter ( QObject * watched , QEvent * event ) { if ( watched == m_watched ) { if ( event -> type () == QEvent :: MouseButtonPress ) { qDebug () << \"QApplication::eventFilter\" ; } } return false ; } private : QObject * m_watched ; }; int main ( int argc , char * argv []) { QApplication app ( argc , argv ); Label label ; app . installEventFilter ( new EventFilter ( & label , & label )); label . show (); return app . exec (); } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9f20\u6807\u70b9\u51fb\u4e4b\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a QApplication :: eventFilter eventFilter event mousePressEvent \u56e0\u6b64\u53ef\u4ee5\u77e5\u9053\uff0c\u5168\u5c40\u4e8b\u4ef6\u8fc7\u6ee4\u5668\u88ab\u7b2c\u4e00\u4e2a\u8c03\u7528\uff0c\u4e4b\u540e\u662f\u8be5\u5bf9\u8c61\u4e0a\u9762\u7684\u4e8b\u4ef6\u8fc7\u6ee4\u5668\uff0c\u5176\u6b21\u662f event() \u51fd\u6570\uff0c\u6700\u540e\u662f\u7279\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002","title":"17. \u4e8b\u4ef6\u603b\u7ed3"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/18.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/","text":"\u5c3d\u7ba1 Qt \u5df2\u7ecf\u63d0\u4f9b\u4e86\u5f88\u591a[[13. \u4e8b\u4ef6|\u4e8b\u4ef6]]\uff0c\u4f46\u5bf9\u4e8e\u66f4\u52a0\u5343\u53d8\u4e07\u5316\u7684\u9700\u6c42\u6765\u8bf4\uff0c\u6709\u9650\u7684\u4e8b\u4ef6\u90fd\u662f\u4e0d\u591f\u7684\u3002\u4f8b\u5982\uff0c\u6211\u8981\u652f\u6301\u4e00\u79cd\u65b0\u7684\u8bbe\u5907\uff0c\u8fd9\u4e2a\u8bbe\u5907\u63d0\u4f9b\u4e00\u79cd\u5d2d\u65b0\u7684\u4ea4\u4e92\u65b9\u5f0f\uff0c\u90a3\u4e48\uff0c\u8fd9\u79cd\u4e8b\u4ef6\u5982\u4f55\u5904\u7406\u5462\uff1f\u6240\u4ee5\uff0c\u5141\u8bb8\u521b\u5efa\u81ea\u5df1\u7684\u4e8b\u4ef6\u7c7b\u578b\u4e5f\u5c31\u52bf\u5728\u5fc5\u884c\u3002\u5373\u4fbf\u662f\u4e0d\u8bf4\u90a3\u79cd\u975e\u5e38\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u5728\u591a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u4e2d\uff0c\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u4e5f\u662f\u5c24\u5176\u6709\u7528\u3002\u5f53\u7136\uff0c\u4e8b\u4ef6\u4e5f\u5e76\u4e0d\u662f\u5c40\u9650\u5728\u591a\u7ebf\u7a0b\u4e2d\uff0c\u5b83\u53ef\u4ee5\u7528\u5728\u5355\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u79cd\u5bf9\u8c61\u95f4\u901a\u8baf\u7684\u673a\u5236\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6211\u9700\u8981\u4f7f\u7528\u4e8b\u4ef6\uff0c\u800c\u4e0d\u662f\u4fe1\u53f7\u69fd\u5462\uff1f\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u4e8b\u4ef6\u7684\u5206\u53d1\u65e2\u53ef\u4ee5\u662f\u540c\u6b65\u7684\uff0c\u53c8\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\uff0c\u800c\u51fd\u6570\u7684\u8c03\u7528\u6216\u8005\u8bf4\u662f\u69fd\u7684\u56de\u8c03\u603b\u662f\u540c\u6b65\u7684\u3002\u4e8b\u4ef6\u7684\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528[[16. \u4e8b\u4ef6\u8fc7\u6ee4\u5668|\u8fc7\u6ee4\u5668]]\u3002 Qt \u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5f88\u7b80\u5355\uff0c\u540c\u5176\u5b83\u7c7b\u5e93\u7684\u4f7f\u7528\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u8981\u7ee7\u627f\u4e00\u4e2a\u7c7b\u8fdb\u884c\u6269\u5c55\u3002\u5728 Qt \u4e2d\uff0c\u4f60\u9700\u8981\u7ee7\u627f\u7684\u7c7b\u662f QEvent \u3002 \u7ee7\u627f QEvent \u7c7b\uff0c\u6700\u91cd\u8981\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a QEvent::Type \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u7c7b\u578b\u503c\u3002\u56de\u5fc6\u4e00\u4e0b\uff0c\u8fd9\u4e2a type \u662f\u6211\u4eec\u5728\u5904\u7406\u4e8b\u4ef6\u65f6\u7528\u4e8e\u8bc6\u522b\u4e8b\u4ef6\u7c7b\u578b\u7684\u4ee3\u53f7\u3002\u6bd4\u5982\u5728 event() \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 QEvent::type() \u83b7\u5f97\u8fd9\u4e2a\u4e8b\u4ef6\u7c7b\u578b\uff0c\u7136\u540e\u4e0e\u6211\u4eec\u5b9a\u4e49\u7684\u5b9e\u9645\u7c7b\u578b\u5bf9\u6bd4\u3002 QEvent::Type \u662f QEvent \u5b9a\u4e49\u7684\u4e00\u4e2a\u679a\u4e3e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a int \u503c\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7c7b\u578b\u4e0d\u80fd\u548c\u5df2\u7ecf\u5b58\u5728\u7684 type \u503c\u91cd\u590d\uff0c\u5426\u5219\u4f1a\u6709\u4e0d\u53ef\u9884\u6599\u7684\u9519\u8bef\u53d1\u751f\u3002\u56e0\u4e3a\u7cfb\u7edf\u4f1a\u5c06\u4f60\u65b0\u589e\u52a0\u7684\u4e8b\u4ef6\u5f53\u505a\u7cfb\u7edf\u4e8b\u4ef6\u8fdb\u884c\u6d3e\u53d1\u548c\u8c03\u7528\u3002\u5728 Qt \u4e2d\uff0c\u7cfb\u7edf\u4fdd\u7559 0 \u2013 999 \u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u7684\u4e8b\u4ef6 type \u8981\u5927\u4e8e 999\u3002\u8fd9\u79cd\u6570\u503c\u5f53\u7136\u975e\u5e38\u96be\u8bb0\uff0c\u6240\u4ee5 Qt \u5b9a\u4e49\u4e86\u4e24\u4e2a\u8fb9\u754c\u503c\uff1a QEvent::User \u548c QEvent::MaxUser \u3002\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684 type \u5e94\u8be5\u5728\u8fd9\u4e24\u4e2a\u503c\u7684\u8303\u56f4\u4e4b\u95f4\u3002\u5176\u4e2d\uff0c QEvent::User \u7684\u503c\u662f 1000\uff0c QEvent::MaxUser \u7684\u503c\u662f 65535\u3002\u4ece\u8fd9\u91cc\u77e5\u9053\uff0c\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u5b9a\u4e49 64536 \u4e2a\u4e8b\u4ef6\u3002\u901a\u8fc7\u8fd9\u4e24\u4e2a\u679a\u4e3e\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u81ea\u5df1\u7684\u4e8b\u4ef6\u7c7b\u578b\u4e0d\u4f1a\u8986\u76d6\u7cfb\u7edf\u5b9a\u4e49\u7684\u4e8b\u4ef6\u7c7b\u578b\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u88ab\u8986\u76d6\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cQt \u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\uff1a registerEventType() \uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u6ce8\u518c\u3002\u8be5\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a static int QEvent::registerEventType ( int hint = -1 ); \u8fd9\u4e2a\u51fd\u6570\u662f static \u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528 QEvent \u7c7b\u76f4\u63a5\u8c03\u7528\u3002\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a int \u503c\uff0c\u5176\u9ed8\u8ba4\u503c\u662f -1\uff1b\u51fd\u6570\u8fd4\u56de\u503c\u662f\u5411\u7cfb\u7edf\u6ce8\u518c\u7684\u65b0\u7684 Type \u7c7b\u578b\u7684\u503c\u3002\u5982\u679c hint \u662f\u5408\u6cd5\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a hint \u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u8986\u76d6\uff08\u7cfb\u7edf\u7684\u4ee5\u53ca\u5176\u5b83\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\uff09\uff0c\u5219\u4f1a\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u503c\uff1b\u5426\u5219\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u5408\u6cd5\u503c\u5e76\u8fd4\u56de\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u5373\u53ef\u5b8c\u6210 type \u503c\u7684\u6307\u5b9a\u3002\u8fd9\u4e2a\u51fd\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e0d\u5fc5\u53e6\u5916\u6dfb\u52a0\u540c\u6b65\u3002 \u6211\u4eec\u53ef\u4ee5\u5728 QEvent \u5b50\u7c7b\u4e2d\u6dfb\u52a0\u81ea\u5df1\u7684\u4e8b\u4ef6\u6240\u9700\u8981\u7684\u6570\u636e\uff0c\u7136\u540e\u8fdb\u884c\u4e8b\u4ef6\u7684\u53d1\u9001\u3002Qt \u4e2d\u63d0\u4f9b\u4e86\u4e24\u79cd\u4e8b\u4ef6\u53d1\u9001\u65b9\u5f0f\uff1a \u76f4\u63a5\u5c06 event \u4e8b\u4ef6\u53d1\u9001\u7ed9 receiver \u63a5\u53d7\u8005\uff0c\u4f7f\u7528\u7684\u662f QCoreApplication::notify() \u51fd\u6570\u3002 static bool QCoreApplication::sendEvent ( QObject * receiver , QEvent * event ); \u51fd\u6570\u8fd4\u56de\u503c\u5c31\u662f\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u5728\u4e8b\u4ef6\u88ab\u53d1\u9001\u7684\u65f6\u5019\uff0c`event`\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u88ab\u9500\u6bc1\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u5728\u6808\u4e0a\u521b\u5efa`event`\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1a cpp QMouseEvent event(QEvent::MouseButtonPress, pos, 0, 0, 0); QApplication::sendEvent(mainWindow, &event); \u5c06 event \u4e8b\u4ef6\u53ca\u5176\u63a5\u53d7\u8005 receiver \u4e00\u540c\u8ffd\u52a0\u5230\u4e8b\u4ef6\u961f\u5217\u4e2d\uff0c\u51fd\u6570\u7acb\u5373\u8fd4\u56de\u3002 static void QCoreApplication::postEvent ( QObject * receiver , QEvent * event ); \u56e0\u4e3a post \u4e8b\u4ef6\u961f\u5217\u4f1a\u6301\u6709\u4e8b\u4ef6\u5bf9\u8c61\uff0c\u5e76\u4e14\u5728\u5176 post \u7684\u65f6\u5019\u5c06\u5176 delete \u6389\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u5806\u4e0a\u521b\u5efa event \u5bf9\u8c61\u3002\u5f53\u5bf9\u8c61\u88ab\u53d1\u9001\u4e4b\u540e\uff0c\u518d\u8bd5\u56fe\u8bbf\u95ee event \u5bf9\u8c61\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff08\u56e0\u4e3a post \u4e4b\u540e\uff0c event \u5bf9\u8c61\u5c31\u4f1a\u88ab delete\uff09\u3002 \u5f53\u63a7\u5236\u6743\u8fd4\u56de\u5230\u4e3b\u7ebf\u7a0b\u5faa\u73af\u65f6\uff0c\u4fdd\u5b58\u5728\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u6240\u6709\u4e8b\u4ef6\u90fd\u901a\u8fc7 notify() \u51fd\u6570\u53d1\u9001\u51fa\u53bb\u3002 \u4e8b\u4ef6\u4f1a\u6839\u636e post \u7684\u987a\u5e8f\u8fdb\u884c\u5904\u7406\u3002\u5982\u679c\u4f60\u60f3\u8981\u6539\u53d8\u4e8b\u4ef6\u7684\u5904\u7406\u987a\u5e8f\uff0c\u53ef\u4ee5\u8003\u8651\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u4f18\u5148\u7ea7\u3002\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u662f Qt::NormalEventPriority \u3002 \u8fd9\u4e2a\u51fd\u6570\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 Qt \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\uff1a static void QCoreApplication::sendPostedEvents ( QObject * receiver , int event_type ); \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff0c\u5c06\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u63a5\u53d7\u8005\u4e3a receiver \uff0c\u4e8b\u4ef6\u7c7b\u4f3c\u4e3a event_type \u7684\u6240\u6709\u4e8b\u4ef6\u7acb\u5373\u53d1\u9001\u7ed9 receiver \u8fdb\u884c\u5904\u7406\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6765\u81ea\u7a97\u53e3\u7cfb\u7edf\u7684\u4e8b\u4ef6\u5e76\u4e0d\u7531\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u800c\u662f processEvent() \u3002 \u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5bf9\u8c61\uff0c\u5df2\u7ecf\u80fd\u591f\u5c06\u4e8b\u4ef6\u53d1\u9001\u51fa\u53bb\uff0c\u8fd8\u5269\u4e0b\u6700\u540e\u4e00\u6b65\uff1a\u5904\u7406\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u3002\u5904\u7406\u81ea\u5b9a\u4e49\u4e8b\u4ef6\uff0c\u540c\u524d\u9762\u6211\u4eec\u8bb2\u89e3\u7684\u90a3\u4e9b\u5904\u7406\u65b9\u6cd5\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u6211\u4eec\u53ef\u4ee5\u91cd\u5199 QObject::customEvent() \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a QEvent \u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff1a void QObject::customEvent ( QEvent * event ); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8f6c\u6362 event \u5bf9\u8c61\u7c7b\u578b\u6765\u5224\u65ad\u4e0d\u540c\u7684\u4e8b\u4ef6\uff1a void CustomWidget::customEvent ( QEvent * event ) { CustomEvent * customEvent = static_cast < CustomEvent *> ( event ); // ... } \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 event() \u51fd\u6570\u4e2d\u76f4\u63a5\u5904\u7406\uff1a bool CustomWidget::event ( QEvent * event ) { if ( event -> type () == MyCustomEventType ) { CustomEvent * myEvent = static_cast < CustomEvent *> ( event ); // processing... return true ; } return QWidget :: event ( event ); }","title":"18. \u81ea\u5b9a\u4e49\u4e8b\u4ef6"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/19.%20Qt%20%E7%BB%98%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/","text":"Qt \u7684\u7ed8\u56fe\u7cfb\u7edf\u5141\u8bb8\u4f7f\u7528\u76f8\u540c\u7684 API \u5728\u5c4f\u5e55\u548c\u5176\u5b83\u6253\u5370\u8bbe\u5907\u4e0a\u8fdb\u884c\u7ed8\u5236\u3002\u6574\u4e2a\u7ed8\u56fe\u7cfb\u7edf\u57fa\u4e8e QPainter \uff0c QPainterDevice \u548c QPaintEngine \u4e09\u4e2a\u7c7b\u3002 QPainter \u7528\u6765\u6267\u884c\u7ed8\u5236\u7684\u64cd\u4f5c\uff1b QPaintDevice \u662f\u4e00\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\u7684\u62bd\u8c61\uff0c\u8fd9\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\u5141\u8bb8 QPainter \u5728\u5176\u4e0a\u9762\u8fdb\u884c\u7ed8\u5236\uff0c\u4e5f\u5c31\u662f QPainter \u5de5\u4f5c\u7684\u7a7a\u95f4\uff1b QPaintEngine \u63d0\u4f9b\u4e86\u753b\u7b14\uff08 QPainter \uff09\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\u8fdb\u884c\u7ed8\u5236\u7684\u7edf\u4e00\u7684\u63a5\u53e3\u3002 QPaintEngine \u7c7b\u5e94\u7528\u4e8e QPainter \u548c QPaintDevice \u4e4b\u95f4\uff0c\u901a\u5e38\u5bf9\u5f00\u53d1\u4eba\u5458\u662f\u900f\u660e\u7684\u3002\u9664\u975e\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u8bbe\u5907\uff0c\u5426\u5219\u4f60\u662f\u4e0d\u9700\u8981\u5173\u5fc3 QPaintEngine \u8fd9\u4e2a\u7c7b\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u628a QPainter \u7406\u89e3\u6210\u753b\u7b14\uff1b\u628a QPaintDevice \u7406\u89e3\u6210\u4f7f\u7528\u753b\u7b14\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u7eb8\u5f20\u3001\u5c4f\u5e55\u7b49\uff1b\u800c\u5bf9\u4e8e\u7eb8\u5f20\u3001\u5c4f\u5e55\u800c\u8a00\uff0c\u80af\u5b9a\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u753b\u7b14\u7ed8\u5236\uff0c\u4e3a\u4e86\u7edf\u4e00\u4f7f\u7528\u4e00\u79cd\u753b\u7b14\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86 QPaintEngine \u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u8ba9\u4e0d\u540c\u7684\u7eb8\u5f20\u3001\u5c4f\u5e55\u90fd\u80fd\u4f7f\u7528\u4e00\u79cd\u753b\u7b14\u3002 ^30d767 ![[Qt\u7ed8\u5236\u7cfb\u7edf_1.png]] \u4e0a\u9762\u7684\u793a\u610f\u56fe\u544a\u8bc9\u6211\u4eec\uff0cQt \u7684\u7ed8\u56fe\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\uff0c\u4f7f\u7528 QPainter \u5728 QPainterDevice \u4e0a\u8fdb\u884c\u7ed8\u5236\uff0c\u5b83\u4eec\u4e4b\u95f4\u4f7f\u7528 QPaintEngine \u8fdb\u884c\u901a\u8baf\uff08\u4e5f\u5c31\u662f\u7ffb\u8bd1 QPainter \u7684\u6307\u4ee4\uff09\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5b9e\u4f8b\u6765\u4ecb\u7ecd QPainter \u7684\u4f7f\u7528\uff1a //!!! Qt4/Qt5 class PaintedWidget : public QWidget { Q_OBJECT public : PaintedWidget ( QWidget * parent = 0 ); protected : void paintEvent ( QPaintEvent * ); }; \u6ce8\u610f\u6211\u4eec\u91cd\u5199\u4e86 QWidget \u7684 paintEvent() \u51fd\u6570\u3002\u8fd9\u6216\u8bb8\u662f\u6211\u4eec\u5728\u7406\u89e3\u4e86 Qt \u4e8b\u4ef6\u7cfb\u7edf\u4e4b\u540e\u9996\u6b21\u5b9e\u9645\u5e94\u7528\u3002\u63a5\u4e0b\u6765\u5c31\u662f PaintedWidget \u7684\u6e90\u4ee3\u7801\uff1a //!!! Qt4/Qt5 PaintedWidget :: PaintedWidget ( QWidget * parent ) : QWidget ( parent ) { resize ( 800 , 600 ); setWindowTitle ( tr ( \"Paint Demo\" )); } void PaintedWidget :: paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . drawLine ( 80 , 100 , 650 , 500 ); painter . setPen ( Qt :: red ); painter . drawRect ( 10 , 10 , 100 , 400 ); painter . setPen ( QPen ( Qt :: green , 5 )); painter . setBrush ( Qt :: blue ); painter . drawEllipse ( 50 , 150 , 400 , 200 ); } \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4ec5\u4ec5\u8bbe\u7f6e\u4e86\u7a97\u53e3\u7684\u5927\u5c0f\u548c\u6807\u9898\u3002\u800c paintEvent() \u51fd\u6570\u5219\u662f\u7ed8\u5236\u7684\u4ee3\u7801\u3002\u9996\u5148\uff0c\u6211\u4eec\u5728\u6808\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a QPainter \u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u8fd0\u884c paintEvent() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u91cd\u5efa\u8fd9\u4e2a QPainter \u5bf9\u8c61\u3002\u6ce8\u610f\uff0c\u8fd9\u4e00\u70b9\u53ef\u80fd\u4f1a\u5f15\u53d1\u67d0\u4e9b\u7ec6\u8282\u95ee\u9898\uff1a\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u91cd\u5efa QPainter \uff0c\u56e0\u6b64\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\u6240\u8bbe\u7f6e\u7684\u753b\u7b14\u989c\u8272\u3001\u72b6\u6001\u7b49\uff0c\u7b2c\u4e8c\u6b21\u518d\u8fdb\u5165\u8fd9\u4e2a\u51fd\u6570\u65f6\u5c31\u4f1a\u5168\u90e8\u4e22\u5931\u3002\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u4fdd\u5b58\u753b\u7b14\u72b6\u6001\uff0c\u5c31\u5fc5\u987b\u81ea\u5df1\u4fdd\u5b58\u6570\u636e\uff0c\u5426\u5219\u7684\u8bdd\u5219\u9700\u8981\u5c06 QPainter \u4f5c\u4e3a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002paintEvent() \u4f5c\u4e3a\u91cd\u7ed8\u51fd\u6570\uff0c\u4f1a\u5728\u9700\u8981\u91cd\u7ed8\u65f6\u7531 Qt \u81ea\u52a8\u8c03\u7528\u3002\u201c\u9700\u8981\u91cd\u7ed8\u201d\u53ef\u80fd\u53d1\u751f\u5728\u5f88\u591a\u5730\u65b9\uff0c\u6bd4\u5982\u7ec4\u4ef6\u521a\u521a\u521b\u5efa\u51fa\u6765\u7684\u65f6\u5019\u5c31\u9700\u8981\u91cd\u7ed8\uff1b\u7ec4\u4ef6\u6700\u5927\u5316\u3001\u6700\u5c0f\u5316\u7684\u65f6\u5019\u4e5f\u9700\u8981\u91cd\u65b0\u7ed8\u5236\uff1b\u7ec4\u4ef6\u7531\u906e\u6321\u53d8\u6210\u5b8c\u5168\u663e\u793a\u7684\u65f6\u5019\u4e5f\u9700\u8981\u7b49\u7b49\u3002 QPainter \u63a5\u6536\u4e00\u4e2a QPaintDevice \u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u3002 QPaintDevice \u6709\u5f88\u591a\u5b50\u7c7b\uff0c\u6bd4\u5982 QImage \uff0c\u4ee5\u53ca QWidget \u3002\u6ce8\u610f\u56de\u5fc6\u4e00\u4e0b\uff0c QPaintDevice \u53ef\u4ee5\u7406\u89e3\u6210\u8981\u5728\u54ea\u91cc\u53bb\u7ed8\u5236\uff0c\u800c\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u753b\u5728\u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u56e0\u6b64\u4f20\u5165\u7684\u662f this \u6307\u9488\u3002 QPainter \u6709\u5f88\u591a\u4ee5 draw \u5f00\u5934\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u5404\u79cd\u56fe\u5f62\u7684\u7ed8\u5236\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684 drawLine() \uff0c drawRect() \u4ee5\u53ca drawEllipse() \u7b49\u3002\u5f53\u7ed8\u5236\u8f6e\u5ed3\u7ebf\u65f6\uff0c\u4f7f\u7528 QPainter \u7684 pen() \u5c5e\u6027\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u8c03\u7528\u4e86 painter.setPen(Qt::red) \u5c06 pen \u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff0c\u5219\u4e0b\u9762\u7ed8\u5236\u7684\u77e9\u5f62\u5177\u6709\u7ea2\u8272\u7684\u8f6e\u5ed3\u7ebf\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06 pen \u4fee\u6539\u4e3a\u7eff\u8272\uff0c5 \u50cf\u7d20\u5bbd\uff08 painter.setPen(QPen(Qt::green, 5)) \uff09\uff0c\u53c8\u8bbe\u7f6e\u4e86\u753b\u5237\u4e3a\u84dd\u8272\u3002\u8fd9\u65f6\u5019\u518d\u8c03\u7528 draw \u51fd\u6570\uff0c\u5219\u662f\u5177\u6709\u7eff\u8272 5 \u50cf\u7d20\u5bbd\u8f6e\u5ed3\u7ebf\u3001\u84dd\u8272\u586b\u5145\u7684\u692d\u5706\u3002 \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a ![[Qt\u7ed8\u5236\u7cfb\u7edf_2.png]] \u53e6\u5916\u8981\u8bf4\u660e\u4e00\u70b9\uff0c\u8bf7\u6ce8\u610f\u6211\u4eec\u7684\u7ed8\u5236\u987a\u5e8f\uff0c\u9996\u5148\u662f\u76f4\u7ebf\uff0c\u7136\u540e\u662f\u77e9\u5f62\uff0c\u6700\u540e\u662f\u692d\u5706\u3002\u6309\u7167\u8fd9\u6837\u7684\u7ed8\u5236\u987a\u5e8f\uff0c\u53ef\u4ee5\u770b\u5230\u76f4\u7ebf\u662f\u7b2c\u4e00\u4e2a\u7ed8\u5236\uff0c\u4f4d\u4e8e\u6700\u4e0b\u4e00\u5c42\uff1b\u77e9\u5f62\u662f\u7b2c\u4e8c\u4e2a\u7ed8\u5236\uff0c\u5728\u4e2d\u95f4\u4e00\u5c42\uff1b\u692d\u5706\u662f\u6700\u540e\u7ed8\u5236\uff0c\u5728\u6700\u4e0a\u5c42\u3002 \u5982\u679c\u4e86\u89e3 OpenGL\uff0c\u80af\u5b9a\u542c\u8bf4\u8fc7\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1aOpenGL \u662f\u4e00\u4e2a\u72b6\u6001\u673a\u3002\u6240\u8c13\u72b6\u6001\u673a\uff0c\u5c31\u662f\u8bf4\uff0cOpenGL \u4fdd\u5b58\u7684\u53ea\u662f\u5404\u79cd\u72b6\u6001\u3002\u6bd4\u5982\uff0c\u5c06\u753b\u7b14\u989c\u8272\u8bbe\u7f6e\u6210\u7ea2\u8272\uff0c\u90a3\u4e48\uff0c\u9664\u975e\u4f60\u91cd\u65b0\u8bbe\u7f6e\u53e6\u5916\u7684\u989c\u8272\uff0c\u5b83\u7684\u989c\u8272\u4f1a\u4e00\u76f4\u662f\u7ea2\u8272\u3002 QPainter \u4e5f\u662f\u8fd9\u6837\uff0c\u5b83\u7684\u72b6\u6001\u4e0d\u4f1a\u81ea\u5df1\u6062\u590d\uff0c\u9664\u975e\u4f60\u4f7f\u7528\u4e86\u5404\u79cd\u8bbe\u7f6e\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5728\u692d\u5706\u7ed8\u5236\u4e4b\u540e\u518d\u753b\u4e00\u4e2a\u77e9\u5f62\uff0c\u5b83\u7684\u6837\u5f0f\u8fd8\u4f1a\u662f\u7eff\u8272 5 \u50cf\u7d20\u7684\u8f6e\u5ed3\u7ebf\u4ee5\u53ca\u84dd\u8272\u7684\u586b\u5145\uff0c\u9664\u975e\u4f60\u663e\u5f0f\u5730\u8c03\u7528\u4e86\u8bbe\u7f6e\u51fd\u6570\u8fdb\u884c\u72b6\u6001\u7684\u66f4\u65b0\u3002\u8fd9\u662f\u5927\u591a\u6570\u7ed8\u56fe\u7cfb\u7edf\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5305\u62ec OpenGL\u3001 QPainter \u4ee5\u53ca Java2D\u3002\u6b63\u56e0\u4e3a QPainter \u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u624d\u4f1a\u5f15\u51fa\u6211\u4eec\u524d\u9762\u66fe\u7ecf\u4ecb\u7ecd\u8fc7\u7684\u4e00\u4e2a\u7ec6\u8282\u95ee\u9898\uff1a\u7531\u4e8e paintEvent() \u662f\u9700\u8981\u91cd\u590d\u8fdb\u5165\u7684\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u6b21\u8fdb\u5165\u65f6\uff0c QPainter \u7684\u72b6\u6001\u662f\u4e0d\u662f\u548c\u7b2c\u4e00\u6b21\u4e00\u81f4\uff0c\u5426\u5219\u7684\u8bdd\u53ef\u80fd\u4f1a\u9020\u6210\u95ea\u70c1\u7684\u73b0\u8c61\u3002\u8fd9\u4e2a\u95ea\u70c1\u5e76\u4e0d\u662f\u7531\u4e8e\u53cc\u7f13\u51b2\u7684\u95ee\u9898\uff0c\u800c\u662f\u7531\u4e8e\u7ed8\u5236\u72b6\u6001\u7684\u5feb\u901f\u5207\u6362\u3002","title":"19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/20.%20%E7%94%BB%E5%88%B7%E5%92%8C%E7%94%BB%E7%AC%94/","text":"[[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb|Qt \u7ed8\u56fe\u7cfb\u7edf]]\u5b9a\u4e49\u4e86\u4e24\u4e2a\u7ed8\u5236\u65f6\u4f7f\u7528\u7684\u5173\u952e\u5c5e\u6027\uff1a\u753b\u5237\u548c\u753b\u7b14\u3002\u524d\u8005\u4f7f\u7528 QBrush \u63cf\u8ff0\uff0c\u5927\u591a\u7528\u4e8e\u586b\u5145\uff1b\u540e\u8005\u4f7f\u7528 QPen \u63cf\u8ff0\uff0c\u5927\u591a\u7528\u4e8e\u7ed8\u5236\u8f6e\u5ed3\u7ebf\u3002 QBrush QBrush \u5b9a\u4e49\u4e86 QPainter \u7684\u586b\u5145\u6a21\u5f0f\uff0c\u5177\u6709\u6837\u5f0f\u3001\u989c\u8272\u3001\u6e10\u53d8\u4ee5\u53ca\u7eb9\u7406\u7b49\u5c5e\u6027\u3002 \u753b\u5237\u7684 style() \u5b9a\u4e49\u4e86\u586b\u5145\u7684\u6837\u5f0f\uff0c\u4f7f\u7528 Qt::BrushStyle \u679a\u4e3e\uff0c\u9ed8\u8ba4\u503c\u662f Qt::NoBrush \uff0c\u4e5f\u5c31\u662f\u4e0d\u8fdb\u884c\u4efb\u4f55\u586b\u5145\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u56fe\u793a\u4e2d\u770b\u5230\u5404\u79cd\u586b\u5145\u6837\u5f0f\u7684\u533a\u522b\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_1.png]] \u753b\u5237\u7684 color() \u5b9a\u4e49\u4e86\u586b\u5145\u6a21\u5f0f\u7684\u989c\u8272\u3002\u8fd9\u4e2a\u989c\u8272\u53ef\u4ee5\u662f Qt \u9884\u5b9a\u4e49\u7684\u989c\u8272\u5e38\u91cf\uff0c\u4e5f\u5c31\u662f Qt::GlobalColor \uff0c\u4e5f\u53ef\u4ee5\u662f\u4efb\u610f QColor \u5bf9\u8c61\u3002 \u753b\u5237\u7684 gradient() \u5b9a\u4e49\u4e86\u6e10\u53d8\u586b\u5145\u3002\u8fd9\u4e2a\u5c5e\u6027\u53ea\u6709\u5728\u6837\u5f0f\u662f Qt::LinearGradientPattern \u3001 Qt::RadialGradientPattern \u6216\u8005 Qt::ConicalGradientPattern \u4e4b\u4e00\u65f6\u624d\u6709\u6548\u3002\u6e10\u53d8\u53ef\u4ee5\u7531 QGradient \u5bf9\u8c61\u8868\u793a\u3002 Qt \u63d0\u4f9b\u4e86\u4e09\u79cd\u6e10\u53d8\uff1a QLinearGradient \u3001 QConicalGradient \u548c QRadialGradient \uff0c\u5b83\u4eec\u90fd\u662f QGradient \u7684\u5b50\u7c7b\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\u6765\u5b9a\u4e49\u4e00\u4e2a\u6e10\u53d8\u7684\u753b\u5237\uff1a QRadialGradient gradient ( 50 , 50 , 50 , 50 , 50 ); gradient . setColorAt ( 0 , QColor :: fromRgbF ( 0 , 1 , 0 , 1 )); gradient . setColorAt ( 1 , QColor :: fromRgbF ( 0 , 0 , 0 , 0 )); QBrush brush ( gradient ); \u5f53\u753b\u5237\u6837\u5f0f\u662f Qt::TexturePattern \u65f6\uff0c texture() \u5b9a\u4e49\u4e86\u7528\u4e8e\u586b\u5145\u7684\u7eb9\u7406\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f60\u6ca1\u6709\u8bbe\u7f6e\u6837\u5f0f\u4e3a Qt::TexturePattern \uff0c\u5f53\u4f60\u8c03\u7528 setTexture() \u51fd\u6570\u65f6\uff0c QBrush \u4f1a\u81ea\u52a8\u5c06 style() \u8bbe\u7f6e\u4e3a Qt::TexturePattern \u3002 QPen QPen \u5b9a\u4e49\u4e86\u7528\u4e8e QPainter \u5e94\u8be5\u600e\u6837\u753b\u7ebf\u6216\u8005\u8f6e\u5ed3\u7ebf\u3002\u753b\u7b14\u5177\u6709\u6837\u5f0f\u3001\u5bbd\u5ea6\u3001\u753b\u5237\u3001\u7b14\u5e3d\u6837\u5f0f\u548c\u8fde\u63a5\u6837\u5f0f\u7b49\u5c5e\u6027\u3002\u753b\u7b14\u7684\u6837\u5f0f style() \u5b9a\u4e49\u4e86\u7ebf\u7684\u6837\u5f0f\u3002\u753b\u5237 brush() \u7528\u4e8e\u586b\u5145\u753b\u7b14\u6240\u7ed8\u5236\u7684\u7ebf\u6761\u3002\u7b14\u5e3d\u6837\u5f0f capStyle() \u5b9a\u4e49\u4e86\u4f7f\u7528 QPainter \u7ed8\u5236\u7684\u7ebf\u7684\u672b\u7aef\uff1b\u8fde\u63a5\u6837\u5f0f joinStyle() \u5219\u5b9a\u4e49\u4e86\u4e24\u6761\u7ebf\u5982\u4f55\u8fde\u63a5\u8d77\u6765\u3002\u753b\u7b14\u5bbd\u5ea6 width() \u6216 widthF() \u5b9a\u4e49\u4e86\u753b\u7b14\u7684\u5bbd\u3002\u6ce8\u610f\uff0c\u4e0d\u5b58\u5728\u5bbd\u5ea6\u4e3a 0 \u7684\u7ebf\u3002\u5047\u8bbe\u4f60\u8bbe\u7f6e width \u4e3a 0\uff0c QPainter \u4f9d\u7136\u4f1a\u7ed8\u5236\u51fa\u4e00\u6761\u7ebf\uff0c\u800c\u8fd9\u4e2a\u7ebf\u7684\u5bbd\u5ea6\u4e3a 1 \u50cf\u7d20\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u753b\u7b14\u5bbd\u5ea6\u901a\u5e38\u81f3\u5c11\u662f 1 \u50cf\u7d20\u3002 \u8fd9\u4e48\u591a\u53c2\u6570\u65e2\u53ef\u4ee5\u5728\u6784\u9020\u65f6\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set \u51fd\u6570\u6307\u5b9a\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u7684\u4e60\u60ef\uff0c\u4f8b\u5982\uff1a QPainter painter ( this ); QPen pen ( Qt :: green , 3 , Qt :: DashDotLine , Qt :: RoundCap , Qt :: RoundJoin ); painter . setPen ( pen ); \u7b49\u4ef7\u4e8e\uff1a QPainter painter ( this ); QPen pen ; // creates a default pen pen . setStyle ( Qt :: DashDotLine ); pen . setWidth ( 3 ); pen . setBrush ( Qt :: green ); pen . setCapStyle ( Qt :: RoundCap ); pen . setJoinStyle ( Qt :: RoundJoin ); painter . setPen ( pen ); \u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u4f18\u70b9\u662f\u4ee3\u7801\u8f83\u77ed\uff0c\u4f46\u662f\u53c2\u6570\u542b\u4e49\u4e0d\u660e\u786e\uff1b\u4f7f\u7528 set \u51fd\u6570\u5219\u6b63\u597d\u53cd\u8fc7\u6765\u3002 \u9ed8\u8ba4\u7684\u753b\u7b14\u5c5e\u6027\u662f\u7eaf\u9ed1\u8272\uff0c0 \u50cf\u7d20\uff0c\u65b9\u5f62\u7b14\u5e3d\uff08 Qt::SquareCap \uff09\uff0c\u659c\u9762\u578b\u8fde\u63a5\uff08 Qt::BevelJoin \uff09\u3002 \u4e0b\u9762\u662f\u753b\u7b14\u6837\u5f0f\u7684\u793a\u4f8b\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_2.png]] \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 setDashPattern() \u51fd\u6570\u81ea\u5b9a\u4e49\u6837\u5f0f\uff0c\u4f8b\u5982\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\uff1a QPen pen ; QVector < qreal > dashes ; qreal space = 4 ; dashes << 1 << space << 3 << space << 9 << space << 27 << space << 9 << space ; pen . setDashPattern ( dashes ); \u7b14\u5e3d\u5b9a\u4e49\u4e86\u753b\u7b14\u672b\u7aef\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_3.png]] \u4ed6\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u662f\uff0c Qt::SquareCap \u662f\u4e00\u79cd\u5305\u542b\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u65b9\u5f62\u7aef\u70b9\uff0c\u4f7f\u7528\u534a\u4e2a\u7ebf\u5bbd\u8986\u76d6\uff1b Qt::FlatCap \u4e0d\u5305\u542b\u6700\u540e\u4e00\u4e2a\u70b9\uff1b Qt::RoundCap \u662f\u5305\u542b\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u5706\u5f62\u7aef\u70b9\u3002 \u8fde\u63a5\u6837\u5f0f\u5b9a\u4e49\u4e86\u4e24\u6761\u7ebf\u8fde\u63a5\u65f6\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_4.png]] \u6ce8\u610f\uff0c\u6211\u4eec\u524d\u9762\u8bf4\u4e86\uff0c QPainter \u4e5f\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u8fd9\u91cc\u6211\u4eec\u6240\u8bf4\u7684\u8fd9\u4e9b\u5c5e\u6027\u90fd\u662f\u5904\u4e8e\u8fd9\u4e2a\u72b6\u6001\u673a\u4e4b\u4e2d\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u8bb0\u5f97\u662f\u5426\u8981\u5c06\u5176\u4fdd\u5b58\u4e0b\u6765\u6216\u8005\u662f\u91cd\u65b0\u6784\u5efa\u3002","title":"20. \u753b\u5237\u548c\u753b\u7b14"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/20.%20%E7%94%BB%E5%88%B7%E5%92%8C%E7%94%BB%E7%AC%94/#qbrush","text":"QBrush \u5b9a\u4e49\u4e86 QPainter \u7684\u586b\u5145\u6a21\u5f0f\uff0c\u5177\u6709\u6837\u5f0f\u3001\u989c\u8272\u3001\u6e10\u53d8\u4ee5\u53ca\u7eb9\u7406\u7b49\u5c5e\u6027\u3002 \u753b\u5237\u7684 style() \u5b9a\u4e49\u4e86\u586b\u5145\u7684\u6837\u5f0f\uff0c\u4f7f\u7528 Qt::BrushStyle \u679a\u4e3e\uff0c\u9ed8\u8ba4\u503c\u662f Qt::NoBrush \uff0c\u4e5f\u5c31\u662f\u4e0d\u8fdb\u884c\u4efb\u4f55\u586b\u5145\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u56fe\u793a\u4e2d\u770b\u5230\u5404\u79cd\u586b\u5145\u6837\u5f0f\u7684\u533a\u522b\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_1.png]] \u753b\u5237\u7684 color() \u5b9a\u4e49\u4e86\u586b\u5145\u6a21\u5f0f\u7684\u989c\u8272\u3002\u8fd9\u4e2a\u989c\u8272\u53ef\u4ee5\u662f Qt \u9884\u5b9a\u4e49\u7684\u989c\u8272\u5e38\u91cf\uff0c\u4e5f\u5c31\u662f Qt::GlobalColor \uff0c\u4e5f\u53ef\u4ee5\u662f\u4efb\u610f QColor \u5bf9\u8c61\u3002 \u753b\u5237\u7684 gradient() \u5b9a\u4e49\u4e86\u6e10\u53d8\u586b\u5145\u3002\u8fd9\u4e2a\u5c5e\u6027\u53ea\u6709\u5728\u6837\u5f0f\u662f Qt::LinearGradientPattern \u3001 Qt::RadialGradientPattern \u6216\u8005 Qt::ConicalGradientPattern \u4e4b\u4e00\u65f6\u624d\u6709\u6548\u3002\u6e10\u53d8\u53ef\u4ee5\u7531 QGradient \u5bf9\u8c61\u8868\u793a\u3002 Qt \u63d0\u4f9b\u4e86\u4e09\u79cd\u6e10\u53d8\uff1a QLinearGradient \u3001 QConicalGradient \u548c QRadialGradient \uff0c\u5b83\u4eec\u90fd\u662f QGradient \u7684\u5b50\u7c7b\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\u6765\u5b9a\u4e49\u4e00\u4e2a\u6e10\u53d8\u7684\u753b\u5237\uff1a QRadialGradient gradient ( 50 , 50 , 50 , 50 , 50 ); gradient . setColorAt ( 0 , QColor :: fromRgbF ( 0 , 1 , 0 , 1 )); gradient . setColorAt ( 1 , QColor :: fromRgbF ( 0 , 0 , 0 , 0 )); QBrush brush ( gradient ); \u5f53\u753b\u5237\u6837\u5f0f\u662f Qt::TexturePattern \u65f6\uff0c texture() \u5b9a\u4e49\u4e86\u7528\u4e8e\u586b\u5145\u7684\u7eb9\u7406\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f60\u6ca1\u6709\u8bbe\u7f6e\u6837\u5f0f\u4e3a Qt::TexturePattern \uff0c\u5f53\u4f60\u8c03\u7528 setTexture() \u51fd\u6570\u65f6\uff0c QBrush \u4f1a\u81ea\u52a8\u5c06 style() \u8bbe\u7f6e\u4e3a Qt::TexturePattern \u3002","title":"QBrush"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/20.%20%E7%94%BB%E5%88%B7%E5%92%8C%E7%94%BB%E7%AC%94/#qpen","text":"QPen \u5b9a\u4e49\u4e86\u7528\u4e8e QPainter \u5e94\u8be5\u600e\u6837\u753b\u7ebf\u6216\u8005\u8f6e\u5ed3\u7ebf\u3002\u753b\u7b14\u5177\u6709\u6837\u5f0f\u3001\u5bbd\u5ea6\u3001\u753b\u5237\u3001\u7b14\u5e3d\u6837\u5f0f\u548c\u8fde\u63a5\u6837\u5f0f\u7b49\u5c5e\u6027\u3002\u753b\u7b14\u7684\u6837\u5f0f style() \u5b9a\u4e49\u4e86\u7ebf\u7684\u6837\u5f0f\u3002\u753b\u5237 brush() \u7528\u4e8e\u586b\u5145\u753b\u7b14\u6240\u7ed8\u5236\u7684\u7ebf\u6761\u3002\u7b14\u5e3d\u6837\u5f0f capStyle() \u5b9a\u4e49\u4e86\u4f7f\u7528 QPainter \u7ed8\u5236\u7684\u7ebf\u7684\u672b\u7aef\uff1b\u8fde\u63a5\u6837\u5f0f joinStyle() \u5219\u5b9a\u4e49\u4e86\u4e24\u6761\u7ebf\u5982\u4f55\u8fde\u63a5\u8d77\u6765\u3002\u753b\u7b14\u5bbd\u5ea6 width() \u6216 widthF() \u5b9a\u4e49\u4e86\u753b\u7b14\u7684\u5bbd\u3002\u6ce8\u610f\uff0c\u4e0d\u5b58\u5728\u5bbd\u5ea6\u4e3a 0 \u7684\u7ebf\u3002\u5047\u8bbe\u4f60\u8bbe\u7f6e width \u4e3a 0\uff0c QPainter \u4f9d\u7136\u4f1a\u7ed8\u5236\u51fa\u4e00\u6761\u7ebf\uff0c\u800c\u8fd9\u4e2a\u7ebf\u7684\u5bbd\u5ea6\u4e3a 1 \u50cf\u7d20\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u753b\u7b14\u5bbd\u5ea6\u901a\u5e38\u81f3\u5c11\u662f 1 \u50cf\u7d20\u3002 \u8fd9\u4e48\u591a\u53c2\u6570\u65e2\u53ef\u4ee5\u5728\u6784\u9020\u65f6\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set \u51fd\u6570\u6307\u5b9a\uff0c\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u7684\u4e60\u60ef\uff0c\u4f8b\u5982\uff1a QPainter painter ( this ); QPen pen ( Qt :: green , 3 , Qt :: DashDotLine , Qt :: RoundCap , Qt :: RoundJoin ); painter . setPen ( pen ); \u7b49\u4ef7\u4e8e\uff1a QPainter painter ( this ); QPen pen ; // creates a default pen pen . setStyle ( Qt :: DashDotLine ); pen . setWidth ( 3 ); pen . setBrush ( Qt :: green ); pen . setCapStyle ( Qt :: RoundCap ); pen . setJoinStyle ( Qt :: RoundJoin ); painter . setPen ( pen ); \u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u4f18\u70b9\u662f\u4ee3\u7801\u8f83\u77ed\uff0c\u4f46\u662f\u53c2\u6570\u542b\u4e49\u4e0d\u660e\u786e\uff1b\u4f7f\u7528 set \u51fd\u6570\u5219\u6b63\u597d\u53cd\u8fc7\u6765\u3002 \u9ed8\u8ba4\u7684\u753b\u7b14\u5c5e\u6027\u662f\u7eaf\u9ed1\u8272\uff0c0 \u50cf\u7d20\uff0c\u65b9\u5f62\u7b14\u5e3d\uff08 Qt::SquareCap \uff09\uff0c\u659c\u9762\u578b\u8fde\u63a5\uff08 Qt::BevelJoin \uff09\u3002 \u4e0b\u9762\u662f\u753b\u7b14\u6837\u5f0f\u7684\u793a\u4f8b\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_2.png]] \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 setDashPattern() \u51fd\u6570\u81ea\u5b9a\u4e49\u6837\u5f0f\uff0c\u4f8b\u5982\u5982\u4e0b\u4ee3\u7801\u7247\u6bb5\uff1a QPen pen ; QVector < qreal > dashes ; qreal space = 4 ; dashes << 1 << space << 3 << space << 9 << space << 27 << space << 9 << space ; pen . setDashPattern ( dashes ); \u7b14\u5e3d\u5b9a\u4e49\u4e86\u753b\u7b14\u672b\u7aef\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_3.png]] \u4ed6\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u662f\uff0c Qt::SquareCap \u662f\u4e00\u79cd\u5305\u542b\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u65b9\u5f62\u7aef\u70b9\uff0c\u4f7f\u7528\u534a\u4e2a\u7ebf\u5bbd\u8986\u76d6\uff1b Qt::FlatCap \u4e0d\u5305\u542b\u6700\u540e\u4e00\u4e2a\u70b9\uff1b Qt::RoundCap \u662f\u5305\u542b\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u5706\u5f62\u7aef\u70b9\u3002 \u8fde\u63a5\u6837\u5f0f\u5b9a\u4e49\u4e86\u4e24\u6761\u7ebf\u8fde\u63a5\u65f6\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\uff1a ![[\u753b\u7b14\u548c\u753b\u5237_4.png]] \u6ce8\u610f\uff0c\u6211\u4eec\u524d\u9762\u8bf4\u4e86\uff0c QPainter \u4e5f\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u8fd9\u91cc\u6211\u4eec\u6240\u8bf4\u7684\u8fd9\u4e9b\u5c5e\u6027\u90fd\u662f\u5904\u4e8e\u8fd9\u4e2a\u72b6\u6001\u673a\u4e4b\u4e2d\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5e94\u8be5\u8bb0\u5f97\u662f\u5426\u8981\u5c06\u5176\u4fdd\u5b58\u4e0b\u6765\u6216\u8005\u662f\u91cd\u65b0\u6784\u5efa\u3002","title":"QPen"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/21.%20%E5%8F%8D%E8%B5%B0%E6%A0%B7/","text":"\u6211\u4eec\u5728\u5149\u6805\u56fe\u5f62\u663e\u793a\u5668\u4e0a\u7ed8\u5236\u975e\u6c34\u5e73\u3001\u975e\u5782\u76f4\u7684\u76f4\u7ebf\u6216\u591a\u8fb9\u5f62\u8fb9\u754c\u65f6\uff0c\u6216\u591a\u6216\u5c11\u4f1a\u5448\u73b0\u952f\u9f7f\u72b6\u5916\u89c2\u3002\u8fd9\u662f\u56e0\u4e3a\u76f4\u7ebf\u548c\u591a\u8fb9\u5f62\u7684\u8fb9\u754c\u662f\u8fde\u7eed\u7684\uff0c\u800c\u5149\u6805\u5219\u662f\u7531\u79bb\u6563\u7684\u70b9\u7ec4\u6210\u3002\u5728\u5149\u6805\u663e\u793a\u8bbe\u5907\u4e0a\u8868\u73b0\u76f4\u7ebf\u3001\u591a\u8fb9\u5f62\u7b49\uff0c\u5fc5\u987b\u5728\u79bb\u6563\u4f4d\u7f6e\u91c7\u6837\u3002\u7531\u4e8e\u91c7\u6837\u4e0d\u5145\u5206\u91cd\u5efa\u540e\u9020\u6210\u7684\u4fe1\u606f\u5931\u771f\uff0c\u5c31\u53eb\u8d70\u6837\uff1b\u7528\u4e8e\u51cf\u5c11\u6216\u6d88\u9664\u8fd9\u79cd\u6548\u679c\u7684\u6280\u672f\uff0c\u5c31\u79f0\u4e3a\u53cd\u8d70\u6837\u3002 ^ea1812 \u53cd\u8d70\u6837\u662f\u56fe\u5f62\u5b66\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\uff0c\u7528\u4ee5\u9632\u6b62\u901a\u5e38\u6240\u8bf4\u7684\u201c\u952f\u9f7f\u201d\u73b0\u8c61\u7684\u51fa\u73b0\u3002\u5f88\u591a\u7cfb\u7edf\u7684\u7ed8\u56fe API \u91cc\u9762\u90fd\u5185\u7f6e\u4e86\u6709\u5173\u53cd\u8d70\u6837\u7684\u7b97\u6cd5\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6027\u80fd\u95ee\u9898\uff0c\u9ed8\u8ba4\u4e00\u822c\u662f\u5173\u95ed\u7684\uff0cQt \u4e5f\u4e0d\u4f8b\u5916\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u4ee3\u7801\uff1a void paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . setPen ( QPen ( Qt :: black , 5 , Qt :: DashDotLine , Qt :: RoundCap )); painter . setBrush ( Qt :: yellow ); painter . drawEllipse ( 50 , 150 , 200 , 150 ); painter . setRenderHint ( QPainter :: Antialiasing , true ); painter . setPen ( QPen ( Qt :: black , 5 , Qt :: DashDotLine , Qt :: RoundCap )); painter . setBrush ( Qt :: yellow ); painter . drawEllipse ( 300 , 150 , 200 , 150 ); } \u8fd0\u884c\u7ed3\u679c\uff1a ![[\u53cd\u8d70\u6837_1.png]] \u6ce8\u610f\u770b\u5de6\u4fa7\u692d\u5706\u4e0e\u53f3\u4fa7\u692d\u5706\u5728\u8fb9\u754c\u5904\u7684\u533a\u522b\u3002\u5de6\u4fa7\u6ca1\u6709\u4f7f\u7528\u53cd\u952f\u9f7f\uff0c\u660e\u7ec6\u663e\u793a\u51fa\u952f\u9f7f\u7684\u6837\u5b50\uff1b\u53f3\u4fa7\u5219\u589e\u52a0\u4e86\u53cd\u952f\u9f7f\u4ee3\u7801\u3002 \u7b2c\u4e8c\u4e2a\u692d\u5706\u7684\u7ed8\u5236\u4e0e\u7b2c\u4e00\u4e2a\u5341\u5206\u76f8\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u591a\u4e86\u4e00\u53e5\uff1a painter . setRenderHint ( QPainter :: Antialiasing , true ); \u663e\u7136\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u6761\u8bed\u53e5\uff0c\u5c06 Antialiasing \u5c5e\u6027\uff08\u4e5f\u5c31\u662f\u53cd\u8d70\u6837\uff09\u8bbe\u7f6e\u4e3a true\u3002\u7ecf\u8fc7\u8fd9\u53e5\u8bbe\u7f6e\uff0c\u6211\u4eec\u5c31\u6253\u5f00\u4e86 QPainter \u7684\u53cd\u8d70\u6837\u529f\u80fd\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u66fe\u7ecf\u8bf4\u8fc7\uff0c QPainter \u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u56e0\u6b64\uff0c\u53ea\u8981\u8fd9\u91cc\u6211\u4eec\u6253\u5f00\u4e86\u5b83\uff0c\u4e4b\u540e\u6240\u6709\u7684\u4ee3\u7801\u90fd\u4f1a\u662f\u53cd\u8d70\u6837\u7ed8\u5236\u7684\u4e86\u3002\u7531\u4e8e\u53cd\u8d70\u6837\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u5728\u4e00\u4e9b\u5bf9\u56fe\u50cf\u8d28\u91cf\u8981\u6c42\u4e0d\u662f\u5f88\u9ad8\u7684\u5e94\u7528\u4e2d\uff0c\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u53cd\u8d70\u6837\u7684\u3002\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u4e00\u822c\u7684\u56fe\u5f62\u7ed8\u5236\u7cfb\u7edf\uff0c\u5982 Java2D\u3001OpenGL \u4e4b\u7c7b\u90fd\u662f\u9ed8\u8ba4\u4e0d\u8fdb\u884c\u53cd\u8d70\u6837\u7684\u3002 \u867d\u7136\u53cd\u8d70\u6837\u6bd4\u4e0d\u53cd\u8d70\u6837\u7684\u56fe\u50cf\u8d28\u91cf\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\uff0c\u6ca1\u6709\u53cd\u8d70\u6837\u7684\u56fe\u5f62\u7ed8\u5236\u8fd8\u662f\u6709\u5f88\u5927\u7528\u5904\u7684\u3002\u9996\u5148\uff0c\u5c31\u50cf\u524d\u9762\u8bf4\u7684\u4e00\u6837\uff0c\u5728\u4e00\u4e9b\u5bf9\u56fe\u50cf\u8d28\u91cf\u8981\u6c42\u4e0d\u9ad8\u7684\u73af\u5883\u4e0b\uff0c\u6216\u8005\u8bf4\u6027\u80fd\u53d7\u9650\u7684\u73af\u5883\u4e0b\uff0c\u6bd4\u5982\u5d4c\u5165\u5f0f\u548c\u624b\u673a\u73af\u5883\uff0c\u4e00\u822c\u662f\u4e0d\u8fdb\u884c\u53cd\u8d70\u6837\u7684\u3002\u53e6\u5916\uff0c\u5728\u4e00\u4e9b\u5fc5\u987b\u7cbe\u786e\u64cd\u4f5c\u50cf\u7d20\u7684\u5e94\u7528\u4e2d\uff0c\u4e5f\u662f\u4e0d\u80fd\u8fdb\u884c\u53cd\u8d70\u6837\u7684\u3002\u8fd9\u662f\u7531\u4e8e\u53cd\u8d70\u6837\u6280\u672f\u672c\u8eab\u7684\u9650\u5236\u7684\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff1a ![[\u53cd\u8d70\u6837_2.png]] \u8fd9\u662f\u4f7f\u7528 Photoshop \u7684\u94c5\u7b14\u548c\u753b\u7b14\u5de5\u5177\u7ed8\u5236\u7684 1 \u50cf\u7d20\u7684\u70b9\uff0c\u653e\u5927 3200% \u7684\u89c6\u56fe\u3002\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\uff0cPhotoshop \u7684\u94c5\u7b14\u5de5\u5177\u662f\u4e0d\u8fdb\u884c\u53cd\u8d70\u6837\uff0c\u800c\u753b\u7b14\u662f\u8981\u8fdb\u884c\u53cd\u8d70\u6837\u7684\u3002\u5728\u653e\u5927\u7684\u60c5\u51b5\u4e0b\u5c31\u4f1a\u77e5\u9053\uff0c\u6709\u53cd\u8d70\u6837\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u80fd\u8fdb\u884c\u7cbe\u786e\u5230 1 \u50cf\u7d20\u7684\u64cd\u4f5c\u7684\u3002\u56e0\u4e3a\u53cd\u8d70\u6837\u5f88\u96be\u8ba9\u4f60\u63a7\u5236\u5230 1 \u4e2a\u50cf\u7d20\u3002\u8fd9\u4e0d\u662f Photoshop \u753b\u7b14\u5de5\u5177\u7684\u7f3a\u9677\uff0c\u800c\u662f\u53cd\u8d70\u6837\u7b97\u6cd5\u7684\u95ee\u9898\u3002\u53cd\u8d70\u6837\u4e4b\u6240\u4ee5\u770b\u8d77\u6765\u6bd4\u8f83\u6a21\u7cca\uff0c\u5c31\u662f\u56e0\u4e3a\u5b83\u9700\u8981\u4ee5\u4e00\u79cd\u8fd1\u4f3c\u8272\u6765\u66ff\u6362\u539f\u59cb\u7684\u50cf\u7d20\u8272\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u4f1a\u663e\u5f97\u6a21\u7cca\u800c\u5706\u6ed1\u3002","title":"21. \u53cd\u8d70\u6837"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/22.%20%E6%B8%90%E5%8F%98/","text":"\u6e10\u53d8\u662f\u7ed8\u56fe\u4e2d\u5f88\u5e38\u89c1\u7684\u4e00\u79cd\u529f\u80fd\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u53ef\u4ee5\u628a\u51e0\u79cd\u989c\u8272\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u8ba9\u5b83\u4eec\u80fd\u591f\u81ea\u7136\u5730\u8fc7\u6e21\uff0c\u800c\u4e0d\u662f\u4e00\u4e0b\u5b50\u53d8\u6210\u53e6\u4e00\u79cd\u989c\u8272\u3002\u6e10\u53d8\u7684\u7b97\u6cd5\u6bd4\u8f83\u590d\u6742\uff0c\u5199\u5f97\u4e0d\u597d\u7684\u8bdd\u6548\u7387\u4f1a\u5f88\u4f4e\uff0c\u597d\u5728\u5f88\u591a\u7ed8\u56fe\u7cfb\u7edf\u90fd\u5185\u7f6e\u4e86\u6e10\u53d8\u7684\u529f\u80fd\uff0cQt \u4e5f\u4e0d\u4f8b\u5916\u3002\u6e10\u53d8\u4e00\u822c\u662f\u7528\u5728\u586b\u5145\u91cc\u9762\u7684\uff0c\u6240\u4ee5\uff0c\u8bbe\u7f6e\u6e10\u53d8\u662f\u5728 QBrush \u91cc\u9762\u3002 Qt \u63d0\u4f9b\u4e86\u4e09\u79cd\u6e10\u53d8\uff1a\u7ebf\u6027\u6e10\u53d8\uff08 QLinearGradient \uff09\u3001\u8f90\u5c04\u6e10\u53d8\uff08 QRadialGradient \uff09\u548c\u89d2\u5ea6\u6e10\u53d8\uff08 QConicalGradient \uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5728 Qt API \u624b\u518c\u4e2d\u770b\u5230\u8fd9\u51e0\u79cd\u6e10\u53d8\u7684\u533a\u522b\uff1a \u7ebf\u6027\u6e10\u53d8 ![[\u6e10\u53d8_1.png]] \u8f90\u5c04\u6e10\u53d8 ![[\u6e10\u53d8_2.png]] \u89d2\u5ea6\u6e10\u53d8 ![[\u6e10\u53d8_3.png]] \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u793a\u4f8b\u770b\u770b\u5982\u4f55\u4f7f\u7528\u6e10\u53d8\u8fdb\u884c\u586b\u5145\uff1a void paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . setRenderHint ( QPainter :: Antialiasing , true ); QLinearGradient linearGradient ( 60 , 50 , 200 , 200 ); linearGradient . setColorAt ( 0.2 , Qt :: white ); linearGradient . setColorAt ( 0.6 , Qt :: green ); linearGradient . setColorAt ( 1.0 , Qt :: black ); painter . setBrush ( QBrush ( linearGradient )); painter . drawEllipse ( 50 , 50 , 200 , 150 ); } \u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ea\u7ed9\u51fa\u4e86 paintEvent() \u7684\u4ee3\u7801\u3002\u8fd9\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u4e5f\u76f8\u5f53\u6e05\u6670\uff1a\u9996\u5148\u6211\u4eec\u6253\u5f00\u4e86\u53cd\u8d70\u6837\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a QLinearGradient \u5bf9\u8c61\u5b9e\u4f8b\u3002 QLinearGradient \u4e5f\u5c31\u662f\u7ebf\u6027\u6e10\u53d8\uff0c\u5176\u6784\u9020\u51fd\u6570\u6709\u56db\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662f x1\uff0cy1\uff0cx2\uff0cy2\uff0c\u5373\u6e10\u53d8\u7684\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece (60, 50) \u70b9\u5f00\u59cb\u6e10\u53d8\uff0c\u5230 (200, 200) \u70b9\u6b62\u3002\u5173\u4e8e\u5750\u6807\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u3002\u6e10\u53d8\u7684\u989c\u8272\u662f\u5728 setColorAt() \u51fd\u6570\u4e2d\u6307\u5b9a\u7684\u3002\u4e0b\u9762\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u7b7e\u540d\uff1a void QGradient :: setColorAt ( qreal position , const QColor & color ) \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff0c\u628a position \u4f4d\u7f6e\u7684\u989c\u8272\u8bbe\u7f6e\u6210 color\u3002\u5176\u4e2d\uff0cposition \u662f\u4e00\u4e2a [0, 1] \u95ed\u533a\u95f4\u7684\u6570\u5b57\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cposition \u662f\u76f8\u5bf9\u4e8e\u6211\u4eec\u5efa\u7acb\u6e10\u53d8\u5bf9\u8c61\u65f6\u505a\u7684\u90a3\u4e2a\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\u533a\u95f4\u7684\u4e00\u4e2a\u6bd4\u4f8b\u3002\u4ee5\u8fd9\u4e2a\u7ebf\u6027\u6e10\u53d8\u4e3a\u4f8b\uff0c\u5728\u4ece (60, 50) \u5230 (200, 200) \u7684\u7ebf\u6bb5\u4e0a\uff0c\u5728 0.2\uff0c\u4e5f\u5c31\u4e94\u5206\u4e4b\u4e00\u5904\u8bbe\u7f6e\u6210\u767d\u8272\uff0c\u5728 0.6 \u4e5f\u5c31\u662f\u4e94\u5206\u4e4b\u4e09\u5904\u8bbe\u7f6e\u6210\u7eff\u8272\uff0c\u5728 1.0 \u4e5f\u5c31\u662f\u7ec8\u70b9\u5904\u8bbe\u7f6e\u6210\u9ed1\u8272\u3002\u521b\u5efa QBrush \u5bf9\u8c61\u65f6\uff0c\u628a\u8fd9\u4e2a\u6e10\u53d8\u5bf9\u8c61\u4f20\u9012\u8fdb\u53bb\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86\uff1a ![[\u6e10\u53d8_4.png]] \u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u66f4\u590d\u6742\uff0c\u4e5f\u66f4\u5b9e\u7528\u4e00\u4e9b\u7684\u4f8b\u5b50\uff1a\u7ed8\u5236\u4e00\u4e2a\u8272\u8f6e\uff08color wheel\uff09\u3002 void ColorWheel::paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . setRenderHint ( QPainter :: Antialiasing ); const int r = 150 ; QConicalGradient conicalGradient ( 0 , 0 , 0 ); conicalGradient . setColorAt ( 0.0 , Qt :: red ); conicalGradient . setColorAt ( 60.0 / 360.0 , Qt :: yellow ); conicalGradient . setColorAt ( 120.0 / 360.0 , Qt :: green ); conicalGradient . setColorAt ( 180.0 / 360.0 , Qt :: cyan ); conicalGradient . setColorAt ( 240.0 / 360.0 , Qt :: blue ); conicalGradient . setColorAt ( 300.0 / 360.0 , Qt :: magenta ); conicalGradient . setColorAt ( 1.0 , Qt :: red ); painter . translate ( r , r ); QBrush brush ( conicalGradient ); painter . setPen ( Qt :: NoPen ); painter . setBrush ( brush ); painter . drawEllipse ( QPoint ( 0 , 0 ), r , r ); } \u8fd0\u884c\u7ed3\u679c\uff1a ![[\u6e10\u53d8_5.png]] \u9996\u5148\u8fd8\u662f\u65b0\u5efa[[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb#^30d767|QPainter]]\u5bf9\u8c61\uff0c\u5f00\u542f\u53cd\u8d70\u6837\u3002\u7136\u540e\u6211\u4eec\u5c06\u5706\u76d8\u534a\u5f84\u5b9a\u4e49\u4e3a 150\u3002\u4e0b\u9762\u521b\u5efa\u4e00\u4e2a\u89d2\u5ea6\u6e10\u53d8\u5b9e\u4f8b\uff0c\u5176\u6784\u9020\u51fd\u6570\u540c\u6837\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\uff1a QConicalGradient :: QConicalGradient ( qreal cx , qreal cy , qreal angle ) \u524d\u4e24\u4e2a\u53c2\u6570 cx \u548c cy \u7ec4\u6210\u89d2\u5ea6\u6e10\u53d8\u7684\u4e2d\u5fc3\u70b9\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6e10\u53d8\u7684\u8d77\u59cb\u89d2\u5ea6\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u6e10\u53d8\u4e2d\u5fc3\u70b9\u8bbe\u7f6e\u4e3a (0, 0)\uff0c\u8d77\u59cb\u89d2\u5ea6\u4e3a 0\u3002\u7c7b\u4f3c\u7ebf\u6027\u6e10\u53d8\uff0c\u89d2\u5ea6\u6e10\u53d8\u7684 setColorAt() \u51fd\u6570\u540c\u6837\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u89d2\u5ea6\u6bd4\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u989c\u8272\u3002\u4f8b\u5982\uff1a conicalGradient . setColorAt ( 0.0 , Qt :: red ); \u5c06 0 \u5ea6\u89d2\u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff1b conicalGradient . setColorAt ( 60.0 / 360.0 , Qt :: yellow ); \u5c06 60 \u5ea6\u89d2\u8bbe\u7f6e\u4e3a\u9ec4\u8272\u3002 \u7531\u4e8e\u4e00\u4e2a\u5706\u5468\u662f 360 \u5ea6\uff0c\u6240\u4ee5 60.0/360.0 \u5373\u662f\u8fd9\u4e2a\u89d2\u5ea6\u7684\u6bd4\u4f8b\u3002\u5176\u4f59\u4ee3\u7801\u4ee5\u6b64\u7c7b\u63a8\u3002\u6700\u540e\u4e00\u53e5\uff0c\u6211\u4eec\u5c06 1.0 \u5904\u8bbe\u7f6e\u4e3a\u7ea2\u8272\uff0c\u4e5f\u5c31\u662f\u91cd\u65b0\u56de\u5230\u8d77\u59cb\u5904\u3002\u81f3\u4e8e\u989c\u8272\u7684\u5206\u5e03\uff0c\u8fd9\u662f\u7531\u989c\u8272\u7a7a\u95f4\u5b9a\u4e49\u7684\uff0c\u53ef\u4ee5\u67e5\u9605\u6709\u5173\u989c\u8272\u6a21\u578b\u7684\u7406\u8bba\u3002 painter . translate ( r , r ); QPainter::translate(x, y) \u51fd\u6570\u610f\u601d\u662f\uff0c\u5c06\u5750\u6807\u7cfb\u7684\u539f\u70b9\u8bbe\u7f6e\u5230 (x, y) \u70b9\u3002\u539f\u672c\u5750\u6807\u7cfb\u539f\u70b9\u4f4d\u4e8e\u5de6\u4e0a\u89d2\uff0c\u6211\u4eec\u4f7f\u7528 translate(r, r) \uff0c\u5c06\u5750\u6807\u539f\u70b9\u8bbe\u7f6e\u4e3a (r, r)\u3002\u8fd9\u4e48\u4e00\u6765\uff0c\u5de6\u4e0a\u89d2\u7684\u70b9\u7684\u5750\u6807\u5c31\u5e94\u8be5\u662f (-r, -r)\u3002 \u6700\u540e\uff0c\u6211\u4eec\u4f7f\u7528 drawEllipse() \u51fd\u6570\u7ed8\u5236\u5706\u76d8\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u628a\u5750\u6807\u539f\u70b9\u8bbe\u7f6e\u4e3a (r, r)\uff0c\u56e0\u6b64\uff0c\u5728\u7ed8\u5236\u65f6\uff0c\u5706\u5fc3\u5e94\u8be5\u662f\u65b0\u7684\u5750\u6807 (0, 0)\uff0c\u800c\u4e0d\u662f\u539f\u6765\u7684 (r, r)\u3002","title":"22. \u6e10\u53d8"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/23.%20%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F/","text":"\u5750\u6807\u7cfb\u7edf\u662f\u7531[[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb#^30d767|QPainter]]\u63a7\u5236\u7684\u3002\u6211\u4eec\u524d\u9762\u8bf4\u8fc7\uff0c QPaintDevice \u3001 QPaintEngine \u548c QPainter \u662f[[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb|Qt \u7ed8\u5236\u7cfb\u7edf]]\u7684\u4e09\u4e2a\u6838\u5fc3\u7c7b\u3002 QPainter \u7528\u4e8e\u8fdb\u884c\u7ed8\u5236\u7684\u5b9e\u9645\u64cd\u4f5c\uff1b QPaintDevice \u662f\u90a3\u4e9b\u80fd\u591f\u8ba9 QPainter \u8fdb\u884c\u7ed8\u5236\u7684\u201c\u4e1c\u897f\u201d\uff08\u51c6\u786e\u7684\u672f\u8bed\u53eb\u505a\uff0c\u4e8c\u7ef4\u7a7a\u95f4\uff09\u7684\u62bd\u8c61\u5c42\uff08\u5176\u5b50\u7c7b\u6709 QWidget \u3001 QPixmap \u3001 QPicture \u3001 QImage \u548c QPrinter \u7b49\uff09\uff1b QPaintEngine \u63d0\u4f9b\u4f9b QPainter \u4f7f\u7528\u7684\u7528\u4e8e\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u7ed8\u5236\u7684\u7edf\u4e00\u7684\u63a5\u53e3\u3002 \u7531\u4e8e QPaintDeice \u662f\u8fdb\u884c\u7ed8\u5236\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64\uff0c\u6240\u8c13\u5750\u6807\u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f QPaintDevice \u4e0a\u9762\u7684\u5750\u6807\u3002\u9ed8\u8ba4\u5750\u6807\u7cfb\u7edf\u4f4d\u4e8e\u8bbe\u5907\u7684\u5de6\u4e0a\u89d2\uff0c\u4e5f\u5c31\u662f\u5750\u6807\u539f\u70b9 (0, 0)\u3002x \u8f74\u65b9\u5411\u5411\u53f3\uff1by \u8f74\u65b9\u5411\u5411\u4e0b\u3002\u5728\u57fa\u4e8e\u50cf\u7d20\u7684\u8bbe\u5907\u4e0a\uff08\u6bd4\u5982\u663e\u793a\u5668\uff09\uff0c\u5750\u6807\u7684\u9ed8\u8ba4\u5355\u4f4d\u662f\u50cf\u7d20\uff0c\u5728\u6253\u5370\u673a\u4e0a\u5219\u662f\u70b9\uff081/72 \u82f1\u5bf8\uff09\u3002 \u5c06 QPainter \u7684\u903b\u8f91\u5750\u6807\u4e0e QPaintDevice \u7684\u7269\u7406\u5750\u6807\u8fdb\u884c\u6620\u5c04\u7684\u5de5\u4f5c\uff0c\u662f\u7531 QPainter \u7684\u53d8\u6362\u77e9\u9635\uff08transformation matrix\uff09\u3001\u89c6\u53e3\uff08viewport\uff09\u548c\u7a97\u53e3\uff08window\uff09\u5b8c\u6210\u7684\u3002\u5982\u679c\u4f60\u4e0d\u7406\u89e3\u8fd9\u4e9b\u672f\u8bed\uff0c\u53ef\u4ee5\u7b80\u5355\u4e86\u89e3\u4e0b\u6709\u5173\u56fe\u5f62\u5b66\u7684\u5185\u5bb9\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u56fe\u5f62\u7684\u64cd\u4f5c\uff0c\u5e95\u5c42\u7684\u6570\u5b66\u90fd\u662f\u8fdb\u884c\u7684\u77e9\u9635\u53d8\u6362\u3001\u76f8\u4e58\u7b49\u8fd0\u7b97\u3002 \u5728 Qt \u7684\u5750\u6807\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5360\u636e 1\u00d71 \u7684\u7a7a\u95f4\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u5f20\u65b9\u683c\u7eb8\uff0c\u6bcf\u4e2a\u5c0f\u683c\u90fd\u662f1\u4e2a\u50cf\u7d20\u3002\u65b9\u683c\u7684\u7126\u70b9\u5b9a\u4e49\u4e86\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u50cf\u7d20 (x, y) \u7684\u4e2d\u5fc3\u4f4d\u7f6e\u5176\u5b9e\u662f\u5728 (x + 0.5, y + 0.5) \u7684\u4f4d\u7f6e\u4e0a\u3002\u8fd9\u4e2a\u5750\u6807\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u201c\u534a\u50cf\u7d20\u5750\u6807\u7cfb\u201d\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u793a\u610f\u56fe\u6765\u7406\u89e3\u8fd9\u79cd\u5750\u6807\u7cfb\uff1a ![[\u5750\u6807\u7cfb\u7edf_1.png]] \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u50cf\u7d20\u7684\u753b\u7b14\u8fdb\u884c\u7ed8\u5236\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e00\u4e2a\u7ed8\u5236\u50cf\u7d20\u90fd\u662f\u4ee5\u5750\u6807\u70b9\u4e3a\u4e2d\u5fc3\u7684\u77e9\u5f62\u3002 \u6ce8\u610f\uff0c\u8fd9\u662f\u5750\u6807\u7684\u903b\u8f91\u8868\u793a\uff0c\u5b9e\u9645\u7ed8\u5236\u5219\u4e0e\u6b64\u4e0d\u540c\u3002 \u56e0\u4e3a\u5728\u5b9e\u9645\u8bbe\u5907\u4e0a\uff0c\u50cf\u7d20\u662f\u6700\u5c0f\u5355\u4f4d\uff0c\u6211\u4eec\u4e0d\u80fd\u50cf\u4e0a\u9762\u4e00\u6837\uff0c\u5728\u4e24\u4e2a\u50cf\u7d20\u4e4b\u95f4\u8fdb\u884c\u7ed8\u5236\u3002\u6240\u4ee5\u5728\u5b9e\u9645\u7ed8\u5236\u65f6\uff0cQt \u7684\u5b9a\u4e49\u662f\uff0c\u7ed8\u5236\u70b9\u6240\u5728\u50cf\u7d20\u662f\u903b\u8f91\u5b9a\u4e49\u70b9\u7684\u53f3\u4e0b\u65b9\u7684\u50cf\u7d20\u3002 \u6211\u4eec\u524d\u9762\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0cQt \u7684\u7ed8\u5236\u5206\u4e3a\u8d70\u6837\u548c[[21. \u53cd\u8d70\u6837#^ea1812|\u53cd\u8d70\u6837]]\u4e24\u79cd\u3002\u5bf9\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u5206\u522b\u5bf9\u5f85\u3002 \u4e00\u4e2a\u50cf\u7d20\u7684\u7ed8\u5236\u6700\u7b80\u5355\uff0c\u6211\u4eec\u4ece\u8fd9\u91cc\u5f00\u59cb\uff1a ![[\u5750\u6807\u7cfb\u7edf_2.png]] \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u7ed8\u5236\u77e9\u5f62\u5de6\u4e0a\u89d2 (1, 2) \u65f6\uff0c\u5b9e\u9645\u7ed8\u5236\u7684\u50cf\u7d20\u662f\u5728\u53f3\u4e0b\u65b9\u3002 \u5f53\u7ed8\u5236\u5927\u4e8e1\u4e2a\u50cf\u7d20\u65f6\uff0c\u60c5\u51b5\u6bd4\u8f83\u590d\u6742\uff1a\u5982\u679c\u7ed8\u5236\u50cf\u7d20\u662f\u5076\u6570\uff0c\u5219\u5b9e\u9645\u7ed8\u5236\u4f1a\u5305\u88f9\u4f4f\u903b\u8f91\u5750\u6807\u503c\uff1b\u5982\u679c\u662f\u5947\u6570\uff0c\u5219\u662f\u5305\u88f9\u4f4f\u903b\u8f91\u5750\u6807\u503c\uff0c\u518d\u52a0\u4e0a\u53f3\u4e0b\u89d2\u4e00\u4e2a\u50cf\u7d20\u7684\u504f\u79fb\u3002\u5177\u4f53\u8bf7\u770b\u4e0b\u9762\u7684\u56fe\u793a\uff1a ![[\u5750\u6807\u7cfb\u7edf_3.png]] \u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u5b9e\u9645\u7ed8\u5236\u662f\u5076\u6570\u50cf\u7d20\uff0c\u5219\u4f1a\u5c06\u903b\u8f91\u5750\u6807\u503c\u5939\u5728\u76f8\u7b49\u7684\u4e24\u90e8\u5206\u50cf\u7d20\u4e4b\u95f4\uff1b\u5982\u679c\u662f\u5947\u6570\uff0c\u5219\u4f1a\u5728\u53f3\u4e0b\u65b9\u591a\u51fa\u4e00\u4e2a\u50cf\u7d20\u3002 Qt \u7684\u8fd9\u79cd\u5904\u7406\uff0c\u5e26\u6765\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6211\u4eec\u53ef\u80fd\u83b7\u53d6\u4e0d\u5230\u771f\u5b9e\u7684\u5750\u6807\u503c\u3002\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c QRect::right() \u548c QRect::bottom() \u7684\u8fd4\u56de\u503c\u5e76\u4e0d\u662f\u77e9\u5f62\u53f3\u4e0b\u89d2\u70b9\u7684\u771f\u5b9e\u5750\u6807\u503c\uff1a QRect::right() \u8fd4\u56de\u7684\u662f left() + width() \u2013 1\uff1b QRect::bottom() \u5219\u8fd4\u56de top() + height() \u2013 1\uff0c\u4e0a\u56fe\u7684\u7eff\u8272\u70b9\u6307\u51fa\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u70b9\u7684\u5750\u6807\u3002 \u4e3a\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5efa\u8bae\u662f\u4f7f\u7528 QRectF \u3002 QRectF \u4f7f\u7528\u6d6e\u70b9\u503c\uff0c\u800c\u4e0d\u662f\u6574\u6570\u503c\uff0c\u6765\u63cf\u8ff0\u5750\u6807\u3002\u8fd9\u4e2a\u7c7b\u7684\u4e24\u4e2a\u51fd\u6570 QRectF::right() \u548c QRectF::bottom() \u662f\u6b63\u786e\u7684\u3002\u5982\u679c\u4f60\u4e0d\u5f97\u4e0d\u4f7f\u7528 QRect \uff0c\u90a3\u4e48\u53ef\u4ee5\u5229\u7528 x() + width() \u548c y() + height() \u6765\u66ff\u4ee3 right() \u548c bottom() \u51fd\u6570\u3002 \u5bf9\u4e8e\u53cd\u8d70\u6837\uff0c\u5b9e\u9645\u7ed8\u5236\u4f1a\u5305\u88f9\u4f4f\u903b\u8f91\u5750\u6807\u503c\uff1a ![[\u5750\u6807\u7cfb\u7edf_4.png]] \u8fd9\u91cc\u6211\u4eec\u4e0d\u53bb\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5728\u53cd\u8d70\u6837\u65f6\uff0c\u50cf\u7d20\u989c\u8272\u4e0d\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u662f\u7531\u4e8e\u53cd\u8d70\u6837\u7b97\u6cd5\u5bfc\u81f4\u3002 Qt \u540c\u6837\u63d0\u4f9b\u4e86\u5750\u6807\u53d8\u6362\u3002\u524d\u9762\u8bf4\uff0c\u56fe\u5f62\u5b66\u5927\u90e8\u5206\u7b97\u6cd5\u4f9d\u8d56\u4e8e\u77e9\u9635\u8ba1\u7b97\uff0c\u5750\u6807\u53d8\u6362\u4fbf\u662f\u5176\u4e2d\u7684\u4ee3\u8868\uff1a\u6bcf\u4e00\u79cd\u53d8\u6362\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5b66\u7684\u7ebf\u6027\u4ee3\u6570\u6709\u4ec0\u4e48\u7528\u5904\uff0c\u8fd9\u5c31\u662f\u5e94\u7528\u4e4b\u4e00\u4e86\uff09\u3002\u6211\u4eec\u4f1a\u4ee5\u4e00\u4e2a\u5b9e\u9645\u7684\u4f8b\u5b50\u6765\u4e86\u89e3\u5750\u6807\u53d8\u6362\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e24\u4e2a\u51fd\u6570\uff1a QPainter::save() \u548c QPainter::restore() \u3002 \u524d\u9762\u8bf4\u8fc7\uff0c QPainter \u662f\u4e00\u4e2a\u72b6\u6001\u673a\u3002\u90a3\u4e48\uff0c\u6709\u65f6\u6211\u60f3\u4fdd\u5b58\u4e0b\u5f53\u524d\u7684\u72b6\u6001\uff1a\u5f53\u6211\u4e34\u65f6\u7ed8\u5236\u67d0\u4e9b\u56fe\u50cf\u65f6\uff0c\u5c31\u53ef\u80fd\u60f3\u8fd9\u4e48\u505a\u3002\u5f53\u7136\uff0c\u6211\u4eec\u6709\u6700\u539f\u59cb\u7684\u529e\u6cd5\uff1a\u5c06\u53ef\u80fd\u6539\u53d8\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u753b\u7b14\u989c\u8272\u3001\u7c97\u7ec6\u7b49\uff0c\u5728\u4e34\u65f6\u7ed8\u5236\u7ed3\u675f\u4e4b\u540e\u518d\u5168\u90e8\u6062\u590d\u3002\u5bf9\u6b64\uff0c QPainter \u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u51fd\u6570\uff1a save() \u548c restore() \u3002 save() \u5c31\u662f\u4fdd\u5b58\u4e0b\u5f53\u524d\u72b6\u6001\uff1b restore() \u5219\u6062\u590d\u4e0a\u4e00\u6b21\u4fdd\u5b58\u7684\u7ed3\u679c\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570 \u5fc5\u987b \u6210\u5bf9\u51fa\u73b0\uff1a QPainter \u4f7f\u7528\u6808\u6765\u4fdd\u5b58\u6570\u636e\uff0c\u6bcf\u4e00\u6b21 save() \uff0c\u5c06\u5f53\u524d\u72b6\u6001\u538b\u5165\u6808\u9876\uff0c restore() \u5219\u5f39\u51fa\u6808\u9876\u8fdb\u884c\u6062\u590d\u3002 \u5728\u4e86\u89e3\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u793a\u4f8b\u4ee3\u7801\u4e86\uff1a void PaintDemo::paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . fillRect ( 10 , 10 , 50 , 100 , Qt :: red ); painter . save (); painter . translate ( 100 , 0 ); // \u5411\u53f3\u5e73\u79fb 100px painter . fillRect ( 10 , 10 , 50 , 100 , Qt :: yellow ); painter . restore (); painter . save (); painter . translate ( 300 , 0 ); // \u5411\u53f3\u5e73\u79fb 300px painter . rotate ( 30 ); // \u987a\u65f6\u9488\u65cb\u8f6c 30 \u5ea6 painter . fillRect ( 10 , 10 , 50 , 100 , Qt :: green ); painter . restore (); painter . save (); painter . translate ( 400 , 0 ); // \u5411\u53f3\u5e73\u79fb 400px painter . scale ( 2 , 3 ); // \u6a2a\u5750\u6807\u5355\u4f4d\u653e\u5927 2 \u500d\uff0c\u7eb5\u5750\u6807\u653e\u5927 3 \u500d painter . fillRect ( 10 , 10 , 50 , 100 , Qt :: blue ); painter . restore (); painter . save (); painter . translate ( 600 , 0 ); // \u5411\u53f3\u5e73\u79fb 600px painter . shear ( 0 , 1 ); // \u6a2a\u5411\u4e0d\u53d8\uff0c\u7eb5\u5411\u626d\u66f2 1 \u500d painter . fillRect ( 10 , 10 , 50 , 100 , Qt :: cyan ); painter . restore (); } Qt \u63d0\u4f9b\u4e86\u56db\u79cd\u5750\u6807\u53d8\u6362\uff1a\u5e73\u79fb translate\uff0c\u65cb\u8f6c rotate\uff0c\u7f29\u653e scale \u548c\u626d\u66f2 shear\u3002\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 (10, 10) \u70b9\u7ed8\u5236\u4e00\u4e2a\u7ea2\u8272\u7684 50\u00d7100 \u77e9\u5f62\u3002\u4fdd\u5b58\u5f53\u524d\u72b6\u6001\uff0c\u5c06\u5750\u6807\u7cfb\u5e73\u79fb\u5230 (100, 0)\uff0c\u7ed8\u5236\u4e00\u4e2a\u9ec4\u8272\u7684\u77e9\u5f62\u3002\u6ce8\u610f\uff0c translate() \u64cd\u4f5c\u5e73\u79fb\u7684\u662f\u5750\u6807\u7cfb\uff0c\u4e0d\u662f\u77e9\u5f62\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u662f\u5728 (10, 10) \u70b9\u7ed8\u5236\u4e00\u4e2a 50\u00d7100 \u77e9\u5f62\uff0c\u73b0\u5728\uff0c\u5b83\u8dd1\u5230\u4e86\u53f3\u4fa7\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u6062\u590d\u5148\u524d\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u628a\u5750\u6807\u7cfb\u91cd\u65b0\u8bbe\u4e3a\u9ed8\u8ba4\u5750\u6807\u7cfb\uff08\u76f8\u5f53\u4e8e\u8fdb\u884c translate(-100, 0) \uff09\uff0c\u518d\u8fdb\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\u3002\u4e4b\u540e\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u662f\u4fdd\u5b58\u4e86\u9ed8\u8ba4\u5750\u6807\u7cfb\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u4e4b\u540e\u7684 translate() \u6a2a\u5750\u6807\u503c\u5fc5\u987b\u589e\u52a0\uff0c\u5426\u5219\u5c31\u4f1a\u8986\u76d6\u6389\u524d\u9762\u7684\u56fe\u5f62\u3002\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u9488\u5bf9\u5750\u6807\u7cfb\u7684\uff0c\u56e0\u6b64\u5728\u7ed8\u5236\u65f6\uff0c\u6211\u4eec\u63d0\u4f9b\u7684\u77e9\u5f62\u7684\u5750\u6807\u53c2\u6570\u90fd\u662f\u4e0d\u53d8\u7684\u3002 \u8fd0\u884c\u7ed3\u679c\uff1a ![[\u5750\u6807\u7cfb\u7edf_5.png]] Qt \u7684\u5750\u6807\u5206\u4e3a\u903b\u8f91\u5750\u6807\u548c\u7269\u7406\u5750\u6807\u3002\u5728\u6211\u4eec\u7ed8\u5236\u65f6\uff0c\u63d0\u4f9b\u7ed9 QPainter \u7684\u90fd\u662f\u903b\u8f91\u5750\u6807\u3002\u4e4b\u524d\u6211\u4eec\u770b\u5230\u7684\u5750\u6807\u53d8\u6362\uff0c\u4e5f\u662f\u9488\u5bf9\u903b\u8f91\u5750\u6807\u7684\u3002\u6240\u8c13\u7269\u7406\u5750\u6807\uff0c\u5c31\u662f\u7ed8\u5236\u5e95\u5c42 QPaintDevice \u7684\u5750\u6807\u3002\u5355\u5355\u53ea\u6709\u903b\u8f91\u5750\u6807\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5728\u8bbe\u5907\u4e0a\u8fdb\u884c\u7ed8\u5236\u7684\u3002\u8981\u60f3\u5728\u8bbe\u5907\u4e0a\u7ed8\u5236\uff0c\u5fc5\u987b\u63d0\u4f9b\u8bbe\u5907\u8ba4\u8bc6\u7684\u7269\u7406\u5750\u6807\u3002Qt \u4f7f\u7528 viewport-window \u673a\u5236\u5c06\u6211\u4eec\u63d0\u4f9b\u7684\u903b\u8f91\u5750\u6807\u8f6c\u6362\u6210\u7ed8\u5236\u8bbe\u5907\u4f7f\u7528\u7684\u7269\u7406\u5750\u6807\uff0c\u65b9\u6cd5\u662f\uff0c\u5728\u903b\u8f91\u5750\u6807\u548c\u7269\u7406\u5750\u6807\u4e4b\u95f4\u63d0\u4f9b\u4e00\u5c42\u201c\u7a97\u53e3\u201d\u5750\u6807\u3002\u89c6\u53e3\u662f\u7531\u4efb\u610f\u77e9\u5f62\u6307\u5b9a\u7684\u7269\u7406\u5750\u6807\uff1b\u7a97\u53e3\u5219\u662f\u8be5\u77e9\u5f62\u7684\u903b\u8f91\u5750\u6807\u8868\u793a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7269\u7406\u5750\u6807\u548c\u903b\u8f91\u5750\u6807\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u7b49\u4e8e\u8bbe\u5907\u77e9\u5f62\u3002 \u89c6\u53e3\u5750\u6807\uff08\u4e5f\u5c31\u662f\u7269\u7406\u5750\u6807\uff09\u548c\u7a97\u53e3\u5750\u6807\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u53d8\u6362\u3002\u6bd4\u5982\u4e00\u4e2a 400\u00d7400 \u7684\u7a97\u53e3\uff0c\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a void PaintDemo::paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . setWindow ( 0 , 0 , 200 , 200 ); painter . fillRect ( 0 , 0 , 200 , 200 , Qt :: red ); } \u6211\u4eec\u5c06\u7a97\u53e3\u77e9\u5f62\u8bbe\u7f6e\u4e3a\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a (0, 0)\uff0c\u957f\u548c\u5bbd\u90fd\u662f 200px\u3002\u6b64\u65f6\uff0c\u5750\u6807\u539f\u70b9\u4e0d\u53d8\uff0c\u8fd8\u662f\u5de6\u4e0a\u89d2\uff0c\u4f46\u662f\uff0c\u5bf9\u4e8e\u539f\u6765\u7684 (400, 400) \u70b9\uff0c\u65b0\u7684\u7a97\u53e3\u5750\u6807\u662f (200, 200)\u3002\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u903b\u8f91\u5750\u6807\u88ab\u201c\u91cd\u65b0\u5206\u914d\u201d\u3002\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e translate() \uff0c\u4f46\u662f\uff0c translate() \u51fd\u6570\u53ea\u662f\u7b80\u5355\u5730\u5c06\u5750\u6807\u539f\u70b9\u91cd\u65b0\u8bbe\u7f6e\uff0c\u800c setWindow() \u5219\u662f\u5c06\u6574\u4e2a\u5750\u6807\u7cfb\u8fdb\u884c\u4e86\u4fee\u6539\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u5c06\u6574\u4e2a\u7a97\u53e3\u8fdb\u884c\u4e86\u586b\u5145\u3002 \u8bd5\u6bd4\u8f83\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u7684\u533a\u522b\uff08\u8fd8\u662f 400\u00d7400 \u7684\u7a97\u53e3\uff09\uff1a painter . translate ( 200 , 200 ); painter . setWindow ( -160 , -320 , 320 , 640 ); \u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5750\u6807\u539f\u70b9\u8bbe\u7f6e\u5230 (200, 200) \u5904\uff0c\u6a2a\u5750\u6807\u8303\u56f4\u662f [-200, 200] \uff0c\u7eb5\u5750\u6807\u8303\u56f4\u662f [-200, 200] \u3002\u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u5750\u6807\u539f\u70b9\u4e5f\u662f\u5728\u7a97\u53e3\u6b63\u4e2d\u5fc3\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u5c06\u7269\u7406\u5bbd 400px \u6620\u5c04\u6210\u7a97\u53e3\u5bbd 320px\uff0c\u7269\u7406\u9ad8 400px \u6620\u5c04\u6210\u7a97\u53e3\u9ad8 640px\uff0c\u6b64\u65f6\uff0c\u6a2a\u5750\u6807\u8303\u56f4\u662f [-160, 160] \uff0c\u7eb5\u5750\u6807\u8303\u56f4\u662f [-320, 320] \u3002\u8fd9\u79cd\u53d8\u6362\u662f\u7b80\u5355\u7684\u7ebf\u6027\u53d8\u6362\u3002\u5047\u8bbe\u539f\u6765\u6709\u4e2a\u70b9\u5750\u6807\u662f (64\uff0c 60) \uff0c\u90a3\u4e48\u65b0\u7684\u7a97\u53e3\u5750\u6807\u4e0b\u5bf9\u5e94\u7684\u5750\u6807\u5e94\u8be5\u662f ((-160 + 64 *320 / 400), (-320 + 60* 640 / 400)) = (-108.8, -224) \u3002 \u4e0b\u9762\u6211\u4eec\u518d\u6765\u7406\u89e3\u4e0b\u89c6\u53e3\u7684\u542b\u4e49\u3002\u8fd8\u662f\u4ee5\u4e00\u6bb5\u4ee3\u7801\u4e3a\u4f8b\uff1a void PaintDemo::paintEvent ( QPaintEvent * ) { QPainter painter ( this ); painter . setViewport ( 0 , 0 , 200 , 200 ); painter . fillRect ( 0 , 0 , 200 , 200 , Qt :: red ); } \u8fd9\u6bb5\u4ee3\u7801\u548c\u524d\u9762\u4e00\u6837\uff0c\u53ea\u662f\u628a setWindow() \u6362\u6210\u4e86 setViewport() \u3002\u524d\u9762\u6211\u4eec\u8bf4\u8fc7\uff0cwindow \u4ee3\u8868\u7a97\u53e3\u5750\u6807\uff0cviewport \u4ee3\u8868\u7269\u7406\u5750\u6807\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u7269\u7406\u5750\u6807\u533a\u57df\u5b9a\u4e49\u4e3a\u5de6\u4e0a\u89d2\u4f4d\u4e8e (0, 0)\uff0c\u957f\u9ad8\u90fd\u662f 200px \u7684\u77e9\u5f62\u3002\u7136\u540e\u8fd8\u662f\u7ed8\u5236\u548c\u4e0a\u9762\u4e00\u6837\u7684\u77e9\u5f62\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u8fd0\u884c\u7ed3\u679c\u662f 1/4 \u7a97\u53e3\u88ab\u586b\u5145\uff0c\u90a3\u5c31\u9519\u4e86\u3002\u5b9e\u9645\u662f\u53ea\u6709 1/16 \u7684\u7a97\u53e3\u88ab\u586b\u5145\u3002\u8fd9\u662f\u7531\u4e8e\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u7269\u7406\u5750\u6807\uff0c\u4f46\u662f\u6ca1\u6709\u4fee\u6539\u76f8\u5e94\u7684\u7a97\u53e3\u5750\u6807\u3002\u9ed8\u8ba4\u7684\u903b\u8f91\u5750\u6807\u8303\u56f4\u662f\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a (0, 0)\uff0c\u957f\u5bbd\u90fd\u662f 400px \u7684\u77e9\u5f62\u3002\u5f53\u6211\u4eec\u5c06\u7269\u7406\u5750\u6807\u4fee\u6539\u4e3a\u5de6\u4e0a\u89d2\u4f4d\u4e8e (0, 0)\uff0c\u957f\u9ad8\u90fd\u662f 200px \u7684\u77e9\u5f62\u65f6\uff0c\u7a97\u53e3\u5750\u6807\u8303\u56f4\u4e0d\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u7269\u7406\u5bbd 200px \u6620\u5c04\u6210\u7a97\u53e3\u5bbd 400px\uff0c\u7269\u7406\u9ad8 200px \u6620\u5c04\u6210\u7a97\u53e3\u9ad8 400px\uff0c\u6240\u4ee5\uff0c\u539f\u59cb\u70b9 (200, 200) \u7684\u5750\u6807\u53d8\u6210\u4e86 ((0 + 200 200 / 400), (0 + 200 200 / 400)) = (100, 100)\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u5f20\u56fe\u793a\u603b\u7ed3\u4e00\u4e0b\u903b\u8f91\u5750\u6807\u3001\u7a97\u53e3\u5750\u6807\u548c\u7269\u7406\u5750\u6807\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a ![[\u5750\u6807\u7cfb\u7edf_6.png]] \u6211\u4eec\u4f20\u7ed9 QPainter \u7684\u662f\u903b\u8f91\u5750\u6807\uff08\u4e5f\u79f0\u4e3a\u4e16\u754c\u5750\u6807\uff09\uff0c\u903b\u8f91\u5750\u6807\u53ef\u4ee5\u901a\u8fc7\u53d8\u6362\u77e9\u9635\u8f6c\u6362\u6210\u7a97\u53e3\u5750\u6807\uff0c\u7a97\u53e3\u5750\u6807\u901a\u8fc7 window-viewport \u8f6c\u6362\u6210\u7269\u7406\u5750\u6807\uff08\u4e5f\u5c31\u662f\u8bbe\u5907\u5750\u6807\uff09\u3002","title":"23. \u5750\u6807\u7cfb\u7edf"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/24.%20%E7%BB%98%E5%88%B6%E8%AE%BE%E5%A4%87/","text":"\u7ed8\u56fe\u8bbe\u5907\u662f\u7ee7\u627f QPainterDevice \u7684\u7c7b\u3002 QPaintDevice \u5c31\u662f\u80fd\u591f\u8fdb\u884c\u7ed8\u5236\u7684\u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c[[19. Qt \u7ed8\u5236\u7cfb\u7edf\u7b80\u4ecb#^30d767|QPainter]]\u53ef\u4ee5\u5728\u4efb\u4f55 QPaintDevice \u7684\u5b50\u7c7b\u4e0a\u8fdb\u884c\u7ed8\u5236\u3002\u73b0\u5728\uff0cQt \u63d0\u4f9b\u4e86\u82e5\u5e72\u8fd9\u6837\u7684\u7c7b\uff1a ![[\u7ed8\u5236\u8bbe\u5907_1.png]] \u5728 Qt5 \u4e2d\uff0c QGLPixelBuffer \u5df2\u7ecf\u88ab\u5e9f\u5f03\u3002\u6211\u4eec\u5173\u6ce8\u7684\u662f QPixmap \u3001 QBitmap \u3001 QImage \u548c QPicture \u8fd9\u51e0\u4e2a\u7c7b\u3002\u53e6\u5916\u7684\u90e8\u5206\uff0c QWidget \u5c31\u662f\u6240\u6709\u7ec4\u4ef6\u7684\u7236\u7c7b\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u4f7f\u7528\u8fc7\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 QGLWidget \u548c QGLFramebufferObject \uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5173\u4e8e OpenGL \u7684\u76f8\u5173\u7c7b\u3002\u5728 Qt \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ed3\u5408 OpenGL \u8fdb\u884c\u7ed8\u5236\u3002\u7531\u4e8e\u8fd9\u90e8\u5206\u9700\u8981\u7275\u626f\u5230 OpenGL \u7684\u76f8\u5173\u5185\u5bb9\uff0c\u73b0\u5728\u4e5f\u4e0d\u518d\u6df1\u5165\u3002\u5728\u6211\u4eec\u9009\u62e9\u7684\u51e0\u4e2a\u7c7b\u4e2d\uff0c\u5927\u591a\u4e0e\u56fe\u50cf\u5bc6\u5207\u76f8\u5173\u3002 QPixmap \u4e13\u95e8\u4e3a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u7684\u663e\u793a\u505a\u4e86\u4f18\u5316\uff1b QBitmap \u662f QPixmap \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u7684\u8272\u6df1\u9650\u5b9a\u4e3a1\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 QPixmap \u7684 isQBitmap() \u51fd\u6570\u6765\u786e\u5b9a\u8fd9\u4e2a QPixmap \u662f\u4e0d\u662f\u4e00\u4e2a QBitmap \u3002 QImage \u4e13\u95e8\u4e3a\u56fe\u50cf\u7684\u50cf\u7d20\u7ea7\u8bbf\u95ee\u505a\u4e86\u4f18\u5316\u3002 QPicture \u5219\u53ef\u4ee5\u8bb0\u5f55\u548c\u91cd\u73b0 QPainter \u7684\u5404\u6761\u547d\u4ee4\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u5206\u4e24\u90e8\u5206\u4ecb\u7ecd\u8fd9\u56db\u79cd\u7ed8\u56fe\u8bbe\u5907\u3002 QPixmap \u7ee7\u627f\u4e86 QPaintDevice \uff0c\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 QPainter \u76f4\u63a5\u5728\u4e0a\u9762\u7ed8\u5236\u56fe\u5f62\u3002 QPixmap \u4e5f\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4e00\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u6765\u663e\u793a\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6bd4\u5982\u4f60\u60f3\u5728\u7a0b\u5e8f\u4e4b\u4e2d\u6253\u5f00 png\u3001jpeg \u4e4b\u7c7b\u7684\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 QPixmap \u3002\u4f7f\u7528 QPainter::drawPixmap() \u51fd\u6570\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6587\u4ef6\u7ed8\u5236\u5230\u4e00\u4e2a QLabel \u3001 QPushButton \u6216\u8005\u5176\u4ed6\u7684\u8bbe\u5907\u4e0a\u9762\u3002\u6b63\u5982\u524d\u9762\u6240\u8bf4\u7684\u90a3\u6837\uff0c QPixmap \u662f\u9488\u5bf9\u5c4f\u5e55\u8fdb\u884c\u7279\u6b8a\u4f18\u5316\u7684\uff0c\u56e0\u6b64\uff0c\u5b83\u4e0e\u5b9e\u9645\u7684\u5e95\u5c42\u663e\u793a\u8bbe\u5907\u606f\u606f\u76f8\u5173\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u8bf4\u7684\u663e\u793a\u8bbe\u5907\u5e76\u4e0d\u662f\u786c\u4ef6\uff0c\u800c\u662f\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u539f\u751f\u7684\u7ed8\u56fe\u5f15\u64ce\u3002\u6240\u4ee5\uff0c\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u4e0b\uff0c QPixmap \u7684\u663e\u793a\u53ef\u80fd\u4f1a\u6709\u6240\u5dee\u522b\u3002 QPixmap \u63d0\u4f9b\u4e86\u9759\u6001\u7684 grabWidget() \u548c grabWindow() \u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u81ea\u8eab\u56fe\u50cf\u7ed8\u5236\u5230\u76ee\u6807\u4e0a\u3002\u540c\u65f6\uff0c\u5728\u4f7f\u7528 QPixmap \u65f6\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4f20\u503c\u7684\u5f62\u5f0f\uff0c\u4e0d\u9700\u8981\u4f20\u6307\u9488\uff0c\u56e0\u4e3a QPixmap \u63d0\u4f9b\u4e86\u201c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u201d\u3002\u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u4f1a\u5728\u4ee5\u540e\u7684\u7ae0\u8282\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u822c\u5bf9\u4e8e\u5927\u578b\u6570\u636e\uff08\u56fe\u50cf\u65e0\u7591\u5c31\u662f\u8fd9\u79cd\u201c\u5927\u578b\u6570\u636e\u201d\uff09\uff0c\u4e3a\u6027\u80fd\u8d77\u89c1\uff0c\u901a\u5e38\u4f1a\u91c7\u7528\u4f20\u6307\u9488\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u7531\u4e8e QPixmap \u5185\u7f6e\u4e86\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff0c\u6240\u4ee5\u53ea\u8981\u77e5\u9053\u4f20\u9012 QPixmap \u3002 \u524d\u9762\u8bf4\u8fc7\uff0c QBitmap \u7ee7\u627f\u81ea QPixmap \uff0c\u56e0\u6b64\u5177\u6709 QPixmap \u7684\u6240\u6709\u7279\u6027\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c QBitmap \u7684\u8272\u6df1\u59cb\u7ec8\u4e3a 1\u3002\u8272\u6df1\u8fd9\u4e2a\u6982\u5ff5\u6765\u81ea\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\uff0c\u662f\u6307\u7528\u4e8e\u8868\u73b0\u989c\u8272\u7684\u4e8c\u8fdb\u5236\u7684\u4f4d\u6570\u3002\u6211\u4eec\u77e5\u9053\uff0c\u8ba1\u7b97\u673a\u91cc\u9762\u7684\u6570\u636e\u90fd\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u3002\u4e3a\u4e86\u8868\u793a\u4e00\u79cd\u989c\u8272\uff0c\u6211\u4eec\u4e5f\u4f1a\u4f7f\u7528\u4e8c\u8fdb\u5236\u3002\u6bd4\u5982\u6211\u4eec\u8981\u8868\u793a 8 \u79cd\u989c\u8272\uff0c\u9700\u8981\u7528 3 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u8bf4\u8272\u6df1\u662f 3\u3002\u56e0\u6b64\uff0c\u6240\u8c13\u8272\u6df1\u4e3a 1\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528 1 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a\u989c\u8272\u30021 \u4e2a\u4f4d\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a0 \u548c 1\uff0c\u56e0\u6b64\u5b83\u6240\u8868\u793a\u7684\u989c\u8272\u5c31\u6709\u4e24\u79cd\uff0c\u9ed1\u548c\u767d\u3002\u6240\u4ee5\u8bf4\uff0c QBitmap \u5b9e\u9645\u4e0a\u662f\u53ea\u6709\u9ed1\u767d\u4e24\u8272\u7684\u56fe\u50cf\u6570\u636e\u3002\u7531\u4e8e QBitmap \u8272\u6df1\u5c0f\uff0c\u56e0\u6b64\u53ea\u5360\u7528\u5f88\u5c11\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u4ee5\u9002\u5408\u505a\u5149\u6807\u6587\u4ef6\u548c\u7b14\u5237\u3002 QPixmap \u4f7f\u7528\u5e95\u5c42\u5e73\u53f0\u7684\u7ed8\u5236\u7cfb\u7edf\u8fdb\u884c\u7ed8\u5236\uff0c\u65e0\u6cd5\u63d0\u4f9b\u50cf\u7d20\u7ea7\u522b\u7684\u64cd\u4f5c\uff0c\u800c QImage \u5219\u662f\u4f7f\u7528\u72ec\u7acb\u4e8e\u786c\u4ef6\u7684\u7ed8\u5236\u7cfb\u7edf\uff0c\u5b9e\u9645\u4e0a\u662f\u81ea\u5df1\u7ed8\u5236\u81ea\u5df1\uff0c\u56e0\u6b64\u63d0\u4f9b\u4e86\u50cf\u7d20\u7ea7\u522b\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u4e0d\u540c\u7cfb\u7edf\u4e4b\u4e0a\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u663e\u793a\u5f62\u5f0f\u3002 ![[\u7ed8\u5236\u8bbe\u5907_2.png]] QImage \u4e0e QPixmap \u76f8\u6bd4\uff0c\u6700\u5927\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u591f\u8fdb\u884c\u50cf\u7d20\u7ea7\u522b\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u901a\u8fc7\u4e0a\u9762\u7684\u793a\u610f\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u58f0\u660e\u4e00\u4e2a 3 x 3 \u50cf\u7d20\u7684 QImage \u5bf9\u8c61\uff0c\u7136\u540e\u5229\u7528 setPixel() \u51fd\u6570\u8fdb\u884c\u989c\u8272\u7684\u8bbe\u7f6e\u3002\u4f60\u53ef\u4ee5\u628a QImage \u60f3\u8c61\u6210\u4e00\u4e2a RGB \u989c\u8272\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e86\u6bcf\u4e00\u50cf\u7d20\u7684\u989c\u8272\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728 QImage \u4e0a\u8fdb\u884c\u7ed8\u5236\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528 QImage::Format_Indexed8 \u8fd9\u79cd\u683c\u5f0f\u3002 \u6700\u540e\u4e00\u79cd QPicture \u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u4f7f\u7528\u5728\u591a\u79cd\u8bbe\u5907\u4e4b\u4e0a\uff0c\u6bd4\u5982 svg\u3001pdf\u3001ps\u3001\u6253\u5370\u673a\u6216\u8005\u5c4f\u5e55\u3002\u56de\u5fc6\u4e0b\u6211\u4eec\u66fe\u7ecf\u8bf4\u7684 QPaintDevice \uff0c\u5b9e\u9645\u4e0a\u662f\u8bf4\u53ef\u4ee5\u7531 QPainter \u8fdb\u884c\u7ed8\u5236\u7684\u5bf9\u8c61\u3002 QPicture \u4f7f\u7528\u7cfb\u7edf\u5206\u8fa8\u7387\uff0c\u5e76\u4e14\u53ef\u4ee5\u8c03\u6574 QPainter \u6765\u6d88\u9664\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u7684\u663e\u793a\u5dee\u5f02\u3002\u5982\u679c\u6211\u4eec\u8981\u8bb0\u5f55\u4e0b QPainter \u7684\u547d\u4ee4\uff0c\u9996\u5148\u8981\u4f7f\u7528 QPainter::begin() \u51fd\u6570\uff0c\u5c06 QPicture \u5b9e\u4f8b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\uff0c\u4ee5\u4fbf\u544a\u8bc9\u7cfb\u7edf\u5f00\u59cb\u8bb0\u5f55\uff0c\u8bb0\u5f55\u5b8c\u6bd5\u540e\u4f7f\u7528 QPainter::end() \u547d\u4ee4\u7ec8\u6b62\u3002 \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a QPicture picture ; QPainter painter ; painter . begin ( & picture ); // \u5728 picture \u8fdb\u884c\u7ed8\u5236 painter . drawEllipse ( 10 , 20 , 80 , 70 ); // \u7ed8\u5236\u4e00\u4e2a\u692d\u5706 painter . end (); // \u7ed8\u5236\u5b8c\u6210 picture . save ( \"drawing.pic\" ); // \u4fdd\u5b58 picture \u5982\u679c\u6211\u4eec\u8981\u91cd\u73b0\u547d\u4ee4\uff0c\u9996\u5148\u8981\u4f7f\u7528 QPicture::load() \u51fd\u6570\u8fdb\u884c\u88c5\u8f7d\uff1a QPicture picture ; picture . load ( \"drawing.pic\" ); // \u52a0\u8f7d picture QPainter painter ; painter . begin ( & myImage ); // \u5728 myImage \u4e0a\u5f00\u59cb\u7ed8\u5236 painter . drawPicture ( 0 , 0 , picture ); // \u5728 (0, 0) \u70b9\u5f00\u59cb\u7ed8\u5236 picture painter . end (); // \u7ed8\u5236\u5b8c\u6210 \u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 QPicture::play() \u8fdb\u884c\u7ed8\u5236\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a QPainter \u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u7ed8\u5236\u7684\u753b\u7b14\u3002","title":"24. \u7ed8\u5236\u8bbe\u5907"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/25.%20Graphics%20View%20Framework/","text":"Graphics View \u63d0\u4f9b\u4e86\u4e00\u79cd\u63a5\u53e3\uff0c\u7528\u4e8e\u7ba1\u7406\u5927\u91cf\u81ea\u5b9a\u4e49\u7684 2D \u56fe\u5f62\u5143\u7d20\uff0c\u5e76\u4e0e\u4e4b\u8fdb\u884c\u4ea4\u4e92\uff1b\u8fd8\u63d0\u4f9b\u4e86\u7528\u4e8e\u5c06\u8fd9\u4e9b\u5143\u7d20\u8fdb\u884c\u53ef\u89c6\u5316\u663e\u793a\u7684\u89c2\u5bdf\u7ec4\u4ef6\uff0c\u5e76\u652f\u6301\u7f29\u653e\u548c\u65cb\u8f6c\u3002\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684 Linux \u7684 KDE \u684c\u9762\u73af\u5883\uff0c\u5c31\u662f\u5efa\u7acb\u5728 Graphics View \u57fa\u7840\u4e4b\u4e0a\u7684\uff08\u5c3d\u7ba1\u65b0\u7248\u672c\u7684 KDE \u6709\u5411 QML \u8fc1\u79fb\u7684\u8d8b\u52bf\uff09\u3002 Graphics View \u6846\u67b6\u5305\u542b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u4e8b\u4ef6\u4f53\u7cfb\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e0e\u573a\u666f\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u53cc\u7cbe\u5ea6\u7684\u4ea4\u4e92\u3002\u8fd9\u4e9b\u5143\u7d20\u540c\u6837\u652f\u6301\u952e\u76d8\u4e8b\u4ef6\u3001\u9f20\u6807\u4e8b\u4ef6\u7b49\u3002Graphics View \u4f7f\u7528\u4e86 BSP \u6811\uff08Binary Space Partitioning tree\uff0c\u8fd9\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u56fe\u5f62\u5b66\u65b9\u9762\u7684\u6570\u636e\u7ed3\u6784\uff09\u6765\u63d0\u4f9b\u975e\u5e38\u5feb\u901f\u7684\u5143\u7d20\u53d1\u73b0\uff0c\u4e5f\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u624d\u80fd\u591f\u5b9e\u73b0\u4e00\u79cd\u4e0a\u767e\u4e07\u6570\u91cf\u7ea7\u5143\u7d20\u7684\u5b9e\u65f6\u663e\u793a\u673a\u5236\u3002 Graphics View \u6700\u521d\u5728 Qt 4.2 \u5f15\u5165\uff0c\u6765\u53d6\u4ee3 Qt 3 \u4e2d\u7684 QCanvas\u3002\u5f53\u7136\uff0c\u5728\u6700\u65b0\u7684 Qt5 \u4e2d\uff0cQt3 \u7684\u4ee3\u7801\u5df2\u7ecf\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528\u4e86\uff08\u5c3d\u7ba1\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c Qt4 \u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u9057\u7559\u4ee3\u7801\uff09\u3002 Graphics View \u662f\u4e00\u4e2a\u57fa\u4e8e\u5143\u7d20\uff08item\uff09\u7684 MV \u67b6\u6784\u7684\u6846\u67b6\u3002\u5b83\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a\u5143\u7d20 item\u3001\u573a\u666f scene \u548c\u89c6\u56fe view\u3002 \u57fa\u4e8e\u5143\u7d20\u7684\u610f\u601d\u662f\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5143\u7d20\u3002\u8fd9\u662f\u4e0e\u6211\u4eec\u4e4b\u524d\u8bb2\u5230\u8fc7\u7684 QPainter \u72b6\u6001\u673a\u673a\u5236\u4e0d\u540c\u3002\u56de\u5fc6\u4e00\u4e0b\uff0c\u4f7f\u7528 QPainter \u7ed8\u56fe\uff0c\u5927\u591a\u662f\u91c7\u7528\u4e00\u79cd\u9762\u5411\u8fc7\u7a0b\u7684\u63cf\u8ff0\u65b9\u5f0f\uff1a\u9996\u5148\u4f7f\u7528 drawLine() \u753b\u4e00\u6761\u76f4\u7ebf\uff0c\u7136\u540e\u4f7f\u7528 drawPolygon() \u753b\u4e00\u4e2a\u591a\u8fb9\u5f62\u3002\u5bf9\u4e8e Graphics View\uff0c\u76f8\u540c\u7684\u8fc7\u7a0b\u53ef\u4ee5\u662f\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u573a\u666f\uff08scene\uff09\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u76f4\u7ebf\u5bf9\u8c61\u548c\u4e00\u4e2a\u591a\u8fb9\u5f62\u5bf9\u8c61\uff0c\u518d\u4f7f\u7528\u573a\u666f\u7684 add() \u51fd\u6570\uff0c\u5c06\u76f4\u7ebf\u548c\u591a\u8fb9\u5f62\u6dfb\u52a0\u5230\u573a\u666f\u4e2d\uff0c\u6700\u540e\u901a\u8fc7\u89c6\u56fe\u8fdb\u884c\u89c2\u5bdf\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4e86\u3002\u4e4d\u770b\u8d77\u6765\uff0c\u540e\u8005\u4f3c\u4e4e\u66f4\u52a0\u590d\u6742\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4f60\u7684\u56fe\u50cf\u4e2d\u5305\u542b\u4e86\u6210\u5343\u4e0a\u4e07\u7684\u76f4\u7ebf\u3001\u591a\u8fb9\u5f62\u4e4b\u7c7b\uff0c\u7ba1\u7406\u8fd9\u4e9b\u5bf9\u8c61\u8981\u6bd4\u7ba1\u7406 QPainter \u7684\u7ed8\u5236\u8bed\u53e5\u5bb9\u6613\u5f97\u591a\u3002\u5e76\u4e14\uff0c\u8fd9\u4e9b\u56fe\u5f62\u5bf9\u8c61\u4e5f\u66f4\u52a0\u7b26\u5408\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u8981\u6c42\uff1a\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u56fe\u5f62\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u590d\u7528\u3002 MV \u67b6\u6784\u7684\u610f\u601d\u662f\uff0cGraphics View \u63d0\u4f9b\u4e00\u4e2a model \u548c\u4e00\u4e2a view\uff08\u6b63\u5982 MVC \u67b6\u6784\uff0c\u53ea\u4e0d\u8fc7 MV \u67b6\u6784\u5c11\u4e86 C \u8fd9\u4e48\u4e00\u4e2a\u7ec4\u4ef6\uff09\u3002\u6240\u8c13\u6a21\u578b\uff08model\uff09\u5c31\u662f\u6211\u4eec\u6dfb\u52a0\u7684\u79cd\u79cd\u5bf9\u8c61\uff1b\u6240\u8c13\u89c6\u56fe\uff08view\uff09\u5c31\u662f\u6211\u4eec\u89c2\u5bdf\u8fd9\u4e9b\u5bf9\u8c61\u7684\u89c6\u53e3\u3002\u540c\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u7531\u5f88\u591a\u89c6\u56fe\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u8fdb\u884c\u89c2\u5bdf\uff0c\u8fd9\u662f\u5f88\u5e38\u89c1\u7684\u9700\u6c42\u3002\u4f7f\u7528 QPainter \u5f88\u96be\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8fd9\u9700\u8981\u5f88\u590d\u6742\u7684\u8ba1\u7b97\uff0c\u800c Graphics View \u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0\u3002 Graphics View \u63d0\u4f9b\u4e86 QGraphicsScene \u4f5c\u4e3a\u573a\u666f\uff0c\u5373\u662f\u5141\u8bb8\u6211\u4eec\u6dfb\u52a0\u56fe\u5f62\u7684\u7a7a\u95f4\uff0c\u76f8\u5f53\u4e8e\u6574\u4e2a\u4e16\u754c\uff1b QGraphicsView \u4f5c\u4e3a\u89c6\u53e3\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u89c2\u5bdf\u7a97\u53e3\uff0c\u76f8\u5f53\u4e8e\u7167\u76f8\u673a\u7684\u53d6\u666f\u6846\uff0c\u8fd9\u4e2a\u53d6\u666f\u6846\u53ef\u4ee5\u8986\u76d6\u6574\u4e2a\u573a\u666f\uff0c\u4e5f\u53ef\u4ee5\u662f\u573a\u666f\u7684\u4e00\u90e8\u5206\uff1b QGraphicsItem \u4f5c\u4e3a\u56fe\u5f62\u5143\u4ef6\uff0c\u4ee5\u4fbf\u6dfb\u52a0\u5230\u573a\u666f\u4e2d\u53bb\uff0cQt \u5185\u7f6e\u4e86\u5f88\u591a\u56fe\u5f62\uff0c\u6bd4\u5982\u76f4\u7ebf\u3001\u591a\u8fb9\u5f62\u7b49\uff0c\u5b83\u4eec\u90fd\u662f\u7ee7\u627f\u81ea QGraphicsItem \u3002 \u4e0b\u9762\u901a\u8fc7\u4e00\u6bb5\u4ee3\u7801\u770b\u770b Graphics View \u7684\u4f7f\u7528\uff1a int main ( int argc , char * argv []) { QApplication app ( argc , argv ); QGraphicsScene scene ; scene . addLine ( 0 , 0 , 150 , 150 ); QGraphicsView view ( & scene ); view . setWindowTitle ( \"Graphics View\" ); view . resize ( 500 , 500 ); view . show (); return app . exec (); } \u8fd9\u6bb5\u4ee3\u7801\u5f88\u7b80\u5355\uff1a\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u573a\u666f\uff0c\u4e5f\u5c31\u662f QGraphicsScene \u5bf9\u8c61\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528 addLine() \u51fd\u6570\u5411\u573a\u666f\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u76f4\u7ebf\uff0c\u8d77\u59cb\u70b9\u548c\u7ec8\u70b9\u5750\u6807\u5206\u522b\u662f (0, 0) \u548c (150, 150)\u3002\u53ef\u4ee5\u60f3\u8c61\uff0c\u8fd9\u662f\u4e00\u4e2a\u8fb9\u957f 150px \u7684\u6b63\u65b9\u5f62\u7684\u5bf9\u89d2\u7ebf\u3002\u901a\u8fc7\u8fd9\u4e24\u6b65\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u573a\u666f\u548c\u5143\u7d20\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a GraphicsView \u5bf9\u8c61\uff0c\u7ed1\u5b9a\u5230\u4e00\u4e2a\u573a\u666f\u4e0a\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u524d\u9762\u521b\u5efa\u7684 scene \u5bf9\u8c61\uff09\u3002\u6ce8\u610f\uff0c QGraphicsScene \u4e0d\u662f QWidget \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u8be5\u6784\u9020\u51fd\u6570\u5e76\u4e0d\u662f\u8c03\u7528\u7684 QGraphicsView(QWidget *parent) \u3002 \u8fd0\u884c\u7ed3\u679c\uff1a ![[Graphics_View.png]] \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u76f4\u7ebf\u81ea\u52a8\u5728\u89c6\u56fe\u5c45\u4e2d\u663e\u793a\u3002\u8fd9\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u8fdb\u884c\u4efb\u4f55\u989d\u5916\u7684\u4ee3\u7801\u3002\u5982\u679c\u4e0d\u60f3\u8fd9\u4e48\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9 scene \u8bbe\u7f6e\u4e00\u4e0b sceneRect() \u5c5e\u6027\uff1a QGraphicsScene scene ; scene . setSceneRect ( 0 , 0 , 300 , 300 ); scene . addLine ( 0 , 0 , 150 , 150 ); QGraphicsView view ( & scene ); view . setWindowTitle ( \"Graphics View\" ); // view.resize(500, 500); view . show (); \u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u53bb\u6389\u4e86 view.resize() \u4e00\u884c\u3002 QGraphicsScene \u7684 sceneRect \u5c5e\u6027\u4f9b QGraphicsView \u786e\u5b9a\u89c6\u56fe\u9ed8\u8ba4\u7684\u6eda\u52a8\u6761\u533a\u57df\uff0c\u5e76\u4e14\u534f\u52a9 QGraphicsScene \u7ba1\u7406\u5143\u7d20\u7d22\u5f15\u3002\u4e4b\u6240\u4ee5\u53bb\u6389 view.resize() \u4e00\u884c\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u8ba9\u7cfb\u7edf\u53bb\u51b3\u5b9a\u89c6\u56fe\u7684\u6700\u5c0f\u5c3a\u5bf8\uff08\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u5c06\u7a97\u53e3\u6807\u9898\u680f\u7b49\u7684\u5927\u5c0f\u540c\u65f6\u8003\u8651\u8bbe\u7f6e\uff09\u3002","title":"25. Graphics View Framework"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/26.%20%E6%96%87%E4%BB%B6/","text":"\u6587\u4ef6\u64cd\u4f5c\u662f\u5e94\u7528\u7a0b\u5e8f\u5fc5\u4e0d\u53ef\u5c11\u7684\u90e8\u5206\u3002Qt \u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u5f00\u53d1\u5e93\uff0c\u63d0\u4f9b\u4e86\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u64cd\u4f5c\u80fd\u529b\u3002\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u6211\u4eec\u6765\u4e86\u89e3\u4e0b Qt \u7684\u6587\u4ef6\u4ee5\u53ca\u8f93\u5165\u8f93\u51fa\u7684\u529f\u80fd\uff0c\u4e5f\u5c31\u662f I/O \u7cfb\u7edf\u3002 Qt \u901a\u8fc7 QIODevice \u63d0\u4f9b\u4e86\u5bf9 I/O \u8bbe\u5907\u7684\u62bd\u8c61\uff0c\u8fd9\u4e9b\u8bbe\u5907\u5177\u6709\u8bfb\u5199\u5b57\u8282\u5757\u7684\u80fd\u529b\u3002\u4e0b\u9762\u662f I/O \u8bbe\u5907\u7684\u7c7b\u56fe\uff1a ![[\u6587\u4ef6.png]] \u5176\u4e2d\u6240\u6d89\u53ca\u7684\u7c7b\u53ca\u5176\u7528\u9014\u7b80\u8981\u8bf4\u660e\u5982\u4e0b\uff1a - QIODevice \uff1a\u6240\u6709 I/O \u8bbe\u5907\u7c7b\u7684\u7236\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5b57\u8282\u5757\u8bfb\u5199\u7684\u901a\u7528\u64cd\u4f5c\u4ee5\u53ca\u57fa\u672c\u63a5\u53e3\uff1b - QFlie \uff1a\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u6216\u8005\u5d4c\u5165\u8d44\u6e90\uff1b - QTemporaryFile \uff1a\u521b\u5efa\u548c\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7684\u4e34\u65f6\u6587\u4ef6\uff1b - QBuffer \uff1a\u8bfb\u5199 QByteArray \uff1b - QProcess \uff1a\u8fd0\u884c\u5916\u90e8\u7a0b\u5e8f\uff0c\u5904\u7406\u8fdb\u7a0b\u95f4\u901a\u8baf\uff1b - QAbstractSocket \uff1a\u6240\u6709\u5957\u63a5\u5b57\u7c7b\u7684\u7236\u7c7b\uff1b - QTcpSocket\uff1aTCP \u534f\u8bae\u7f51\u7edc\u6570\u636e\u4f20\u8f93\uff1b - QUdpSocket \uff1a\u4f20\u8f93 UDP \u62a5\u6587\uff1b - QSslSocket \uff1a\u4f7f\u7528 SSL/TLS \u4f20\u8f93\u6570\u636e\uff1b - QFileDevice\uff1aQt5 \u65b0\u589e\u52a0\u7684\u7c7b\uff0c\u63d0\u4f9b\u4e86\u6709\u5173\u6587\u4ef6\u64cd\u4f5c\u7684\u901a\u7528\u5b9e\u73b0\u3002 \u8fd9\u5176\u4e2d\uff0c QProcess \u3001 QTcpSocket \u3001 QUdpSoctet \u548c QSslSocket \u662f\u987a\u5e8f\u8bbf\u95ee\u8bbe\u5907\u3002\u6240\u8c13\u201c\u987a\u5e8f\u8bbf\u95ee\u201d\uff0c\u662f\u6307\u5b83\u4eec\u7684\u6570\u636e\u53ea\u80fd\u8bbf\u95ee\u4e00\u904d\uff1a\u4ece\u5934\u8d70\u5230\u5c3e\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5b57\u8282\u5f00\u59cb\u8bbf\u95ee\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u8282\uff0c\u4e2d\u9014\u4e0d\u80fd\u8fd4\u56de\u53bb\u8bfb\u53d6\u4e0a\u4e00\u4e2a\u5b57\u8282\uff1b QFile \u3001 QTemporaryFile \u548c QBuffer \u662f\u968f\u673a\u8bbf\u95ee\u8bbe\u5907\uff0c\u53ef\u4ee5\u8bbf\u95ee\u4efb\u610f\u4f4d\u7f6e\u4efb\u610f\u6b21\u6570\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 QIODevice::seek() \u51fd\u6570\u6765\u91cd\u65b0\u5b9a\u4f4d\u6587\u4ef6\u8bbf\u95ee\u4f4d\u7f6e\u6307\u9488\u3002 \u5728\u6240\u6709\u7684 I/O \u8bbe\u5907\u4e2d\uff0c\u6587\u4ef6 I/O \u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\u4e4b\u4e00\u3002\u56e0\u4e3a\u6211\u4eec\u5927\u591a\u6570\u7684\u7a0b\u5e8f\u4f9d\u65e7\u9700\u8981\u9996\u5148\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\uff08\u5f53\u7136\uff0c\u5728\u4e91\u8ba1\u7b97\u5927\u884c\u5176\u9053\u7684\u5c06\u6765\uff0c\u8fd9\u4e00\u89c2\u70b9\u53ef\u80fd\u6539\u53d8\uff09\u3002 QFile \u63d0\u4f9b\u4e86\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u7684\u80fd\u529b\u3002Qt5 \u65b0\u52a0\u5165\u7684 QFileDevice \u7c7b\uff0c\u5219\u5c06\u8fd9\u90e8\u5206\u516c\u5171\u64cd\u4f5c\u653e\u5230\u4e86\u8fd9\u4e2a\u5355\u72ec\u7684\u7c7b\u4e2d\u3002\u663e\u7136\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5728 Qt4 \u4e2d\u4f4d\u4e8e QFile \u7c7b\u3002\u8fd9\u6837\u770b\u6765\uff0cQt5 \u7684\u4ee3\u7801\u7ed3\u6784\u66f4\u4e3a\u6e05\u6670\uff0c\u5c42\u6b21\u66f4\u597d\u3002 \u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 QFile \u7684\u6784\u9020\u51fd\u6570\u3002\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u5728\u521b\u5efa\u597d\u5bf9\u8c61\u6700\u540e\uff0c\u4f7f\u7528 setFileName() \u6765\u4fee\u6539\u3002 QFile \u9700\u8981\u4f7f\u7528 / \u4f5c\u4e3a\u6587\u4ef6\u5206\u9694\u7b26\uff0c\u4e0d\u8fc7\uff0c\u5b83\u4f1a\u81ea\u52a8\u5c06\u5176\u8f6c\u6362\u6210\u64cd\u4f5c\u7cfb\u7edf\u6240\u9700\u8981\u7684\u5f62\u5f0f\u3002\u4f8b\u5982 C:/windows \u8fd9\u6837\u7684\u8def\u5f84\u5728 Windows \u5e73\u53f0\u4e0b\u540c\u6837\u662f\u53ef\u4ee5\u7684\u3002 QFile \u4e3b\u8981\u63d0\u4f9b\u4e86\u6709\u5173\u6587\u4ef6\u7684\u5404\u79cd\u64cd\u4f5c\uff0c\u6bd4\u5982\u6253\u5f00\u6587\u4ef6\u3001\u5173\u95ed\u6587\u4ef6\u3001\u5237\u65b0\u6587\u4ef6\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 QDataStream \u6216 QTextStream \u7c7b\u6765\u8bfb\u5199\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 QIODevice \u7c7b\u63d0\u4f9b\u7684 read() \u3001 readLine() \u3001 readAll() \u4ee5\u53ca write() \u8fd9\u6837\u7684\u51fd\u6570\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6709\u5173\u6587\u4ef6\u672c\u8eab\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u7684\u540d\u5b57\u7b49\uff0c\u5219\u662f\u901a\u8fc7 QFileInfo \u83b7\u53d6\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u5206\u6790\u6587\u4ef6\u8def\u5f84\u5b57\u7b26\u4e32\u3002 \u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u4e00\u6bb5\u4ee3\u7801\u6765\u770b\u770b QFile \u7684\u6709\u5173\u64cd\u4f5c\uff1a int main ( int argc , char * argv []) { QApplication app ( argc , argv ); QFile file ( \"in.txt\" ); if ( ! file . open ( QIODevice :: ReadOnly | QIODevice :: Text )) { qDebug () << \"Open file failed.\" ; return -1 ; } else { while ( ! file . atEnd ()) { qDebug () << file . readLine (); } } QFileInfo info ( file ); qDebug () << info . isDir (); qDebug () << info . isExecutable (); qDebug () << info . baseName (); qDebug () << info . completeBaseName (); qDebug () << info . suffix (); qDebug () << info . completeSuffix (); return app . exec (); } \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 QFile \u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002\u8fd9\u4e2a\u6587\u4ef6\u540d\u5b57\u662f in.txt\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5e94\u8be5\u628a\u5b83\u653e\u5728\u54ea\u91cc\uff0c\u53ef\u4ee5\u4f7f\u7528 QDir::currentPath() \u6765\u83b7\u5f97\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u5f53\u524d\u8def\u5f84\u3002\u53ea\u8981\u5c06\u8fd9\u4e2a\u6587\u4ef6\u653e\u5728\u4e0e\u5f53\u524d\u8def\u5f84\u4e00\u81f4\u7684\u76ee\u5f55\u4e0b\u5373\u53ef\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 open() \u51fd\u6570\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6253\u5f00\u5f62\u5f0f\u662f\u53ea\u8bfb\u65b9\u5f0f\uff0c\u6587\u672c\u683c\u5f0f\u3002\u8fd9\u4e2a\u7c7b\u4f3c\u4e8e fopen() \u7684 r \u8fd9\u6837\u7684\u53c2\u6570\u3002 open() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a bool \u7c7b\u578b\uff0c\u5982\u679c\u6253\u5f00\u5931\u8d25\uff0c\u6211\u4eec\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4e00\u6bb5\u63d0\u793a\u7136\u540e\u7a0b\u5e8f\u9000\u51fa\u3002\u5426\u5219\uff0c\u6211\u4eec\u5229\u7528 while \u5faa\u73af\uff0c\u5c06\u6bcf\u4e00\u884c\u8bfb\u5230\u7684\u5185\u5bb9\u8f93\u51fa\u3002 \u7a0b\u5e8f\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u6211\u4eec\u4f7f\u7528 QFileInfo \u83b7\u53d6\u6709\u5173\u8be5\u6587\u4ef6\u7684\u4fe1\u606f\u3002 QFileInfo \u6709\u5f88\u591a\u7c7b\u578b\u7684\u51fd\u6570\uff0c\u6211\u4eec\u53ea\u4e3e\u51fa\u4e00\u4e9b\u4f8b\u5b50\u3002\u6bd4\u5982\u8fd9\u91cc\uff0c isDir() \u68c0\u67e5\u8be5\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55\uff1b isExecutable() \u68c0\u67e5\u8be5\u6587\u4ef6\u662f\u5426\u662f\u53ef\u6267\u884c\u6587\u4ef6\u7b49\u3002 baseName() \u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u6587\u4ef6\u540d\uff1b suffix() \u5219\u76f4\u63a5\u83b7\u53d6\u6587\u4ef6\u540e\u7f00\u540d\u3002\u6211\u4eec\u53ef\u4ee5\u7531\u4e0b\u9762\u7684\u793a\u4f8b\u770b\u5230\uff0c baseName() \u548c completeBaseName() \uff0c\u4ee5\u53ca suffix() \u548c completeSuffix() \u7684\u533a\u522b\uff1a QFileInfo fi ( \"/tmp/archive.tar.gz\" ); QString base = fi . baseName (); // base = \"archive\" QString cbase = fi . completeBaseName (); // base = \"archive.tar\" QString ext = fi . suffix (); // ext = \"gz\" QString ext = fi . completeSuffix (); // ext = \"tar.gz\"","title":"26. \u6587\u4ef6"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/27.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/","text":"QDataStream \u63d0\u4f9b\u4e86\u57fa\u4e8e[[26. \u6587\u4ef6|QIODevice]]\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5e8f\u5217\u5316\u3002\u6570\u636e\u6d41\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6d41\uff0c\u8fd9\u79cd\u6d41 \u5b8c\u5168\u4e0d\u4f9d\u8d56 \u4e8e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u3001CPU \u6216\u8005\u5b57\u8282\u987a\u5e8f\uff08\u5927\u7aef\u6216\u5c0f\u7aef\uff09\u3002\u4f8b\u5982\uff0c\u5728\u5b89\u88c5\u4e86 Windows \u5e73\u53f0\u7684 PC \u4e0a\u9762\u5199\u5165\u7684\u4e00\u4e2a\u6570\u636e\u6d41\uff0c\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u5904\u7406\uff0c\u76f4\u63a5\u62ff\u5230\u8fd0\u884c\u4e86 Solaris \u7684 SPARC \u673a\u5668\u4e0a\u8bfb\u53d6\u3002\u7531\u4e8e\u6570\u636e\u6d41\u5c31\u662f\u4e8c\u8fdb\u5236\u6d41\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bfb\u5199\u6ca1\u6709\u7f16\u7801\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u4f8b\u5982\u56fe\u50cf\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u3002 QDataStream \u65e2\u80fd\u591f\u5b58\u53d6 C++ \u57fa\u672c\u7c7b\u578b\uff0c\u5982 int\u3001char\u3001short \u7b49\uff0c\u4e5f\u53ef\u4ee5\u5b58\u53d6\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\u81ea\u5b9a\u4e49\u7684\u7c7b\u3002\u5b9e\u9645\u4e0a\uff0c QDataStream \u5bf9\u4e8e\u7c7b\u7684\u5b58\u50a8\uff0c\u662f\u5c06\u590d\u6742\u7684\u7c7b\u5206\u5272\u4e3a\u5f88\u591a\u57fa\u672c\u5355\u5143\u5b9e\u73b0\u7684\u3002 \u7ed3\u5408 QIODevice \uff0c QDataStream \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5bf9\u6587\u4ef6\u3001\u7f51\u7edc\u5957\u63a5\u5b57\u7b49\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u6211\u4eec\u4ece\u4ee3\u7801\u5f00\u59cb\u770b\u8d77\uff1a QFile file ( \"file.dat\" ); file . open ( QIODevice :: WriteOnly ); QDataStream out ( & file ); out << QString ( \"the answer is\" ); out << ( qint32 ) 42 ; \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a file.dat \u7684\u6587\u4ef6\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u5e76\u6ca1\u6709\u68c0\u67e5\u6587\u4ef6\u6253\u5f00\u662f\u5426\u6210\u529f\uff0c\u8fd9\u5728\u6b63\u5f0f\u7a0b\u5e8f\u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u521a\u521a\u521b\u5efa\u7684 file \u5bf9\u8c61\u7684\u6307\u9488\u4f20\u9012\u7ed9\u4e00\u4e2a QDataStream \u5b9e\u4f8b out \u3002\u7c7b\u4f3c\u4e8e std::cout \u6807\u51c6\u8f93\u51fa\u6d41\uff0c QDataStream \u4e5f\u91cd\u8f7d\u4e86\u8f93\u51fa\u91cd\u5b9a\u5411 << \u8fd0\u7b97\u7b26\u3002\u540e\u9762\u7684\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\uff1a\u5c06\u201cthe answer is\u201d\u548c\u6570\u5b57 42 \u8f93\u51fa\u5230\u6570\u636e\u6d41\u3002\u7531\u4e8e\u6211\u4eec\u7684 out \u5bf9\u8c61\u5efa\u7acb\u5728 file \u4e4b\u4e0a\uff0c\u56e0\u6b64\u76f8\u5f53\u4e8e\u5c06\u5b87\u5b99\u7ec8\u6781\u95ee\u9898\u7684\u7b54\u6848\u5199\u5165 file \u3002 \u9700\u8981\u6307\u51fa\u4e00\u70b9\uff1a\u6700\u597d\u4f7f\u7528 Qt \u6574\u578b\u6765\u8fdb\u884c\u8bfb\u5199\uff0c\u6bd4\u5982\u7a0b\u5e8f\u4e2d\u7684 qint32 \u3002\u8fd9\u4fdd\u8bc1\u4e86\u5728\u4efb\u610f\u5e73\u53f0\u548c\u4efb\u610f\u7f16\u8bd1\u5668\u90fd\u80fd\u591f\u6709\u76f8\u540c\u7684\u884c\u4e3a\u3002 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u770b Qt \u662f\u5982\u4f55\u5b58\u50a8\u6570\u636e\u7684\u3002\u4f8b\u5982 char * \u5b57\u7b26\u4e32\uff0c\u5728\u5b58\u50a8\u65f6\uff0c\u4f1a\u9996\u5148\u5b58\u50a8\u8be5\u5b57\u7b26\u4e32\u5305\u62ec \\0 \u7ed3\u675f\u7b26\u7684\u957f\u5ea6\uff0832\u4f4d\u6574\u578b\uff09\uff0c\u7136\u540e\u662f\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u4ee5\u53ca\u7ed3\u675f\u7b26 \\0\u3002\u5728\u8bfb\u53d6\u65f6\uff0c\u5148\u4ee5 32 \u4f4d\u6574\u578b\u8bfb\u51fa\u6574\u4e2a\u7684\u957f\u5ea6\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e2a\u957f\u5ea6\u53d6\u51fa\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u7a7a\u767d\u7684 file.dat\uff0c\u5e76\u6ca1\u6709\u5199\u5165\u4efb\u4f55\u6570\u636e\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7684 file \u6ca1\u6709\u6b63\u5e38\u5173\u95ed\u3002\u4e3a\u6027\u80fd\u8d77\u89c1\uff0c\u6570\u636e\u53ea\u6709\u5728\u6587\u4ef6\u5173\u95ed\u65f6\u624d\u4f1a\u771f\u6b63\u5199\u5165\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6700\u540e\u6dfb\u52a0\u4e00\u884c\u4ee3\u7801\uff1a file . close (); // \u5982\u679c\u4e0d\u60f3\u5173\u95ed\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 file.flush(); \u91cd\u65b0\u8fd0\u884c\u4e00\u4e0b\u7a0b\u5e8f\uff0c\u4f60\u5c31\u5f97\u5230\u5b87\u5b99\u7ec8\u6781\u95ee\u9898\u7684\u7b54\u6848\u4e86\u3002 \u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u5b87\u5b99\u7ec8\u6781\u95ee\u9898\u7684\u7b54\u6848\u4e86\uff0c\u4e0b\u9762\uff0c\u6211\u4eec\u8981\u5c06\u8fd9\u4e2a\u7b54\u6848\u8bfb\u53d6\u51fa\u6765\uff1a QFile file ( \"file.dat\" ); file . open ( QIODevice :: ReadOnly ); QDataStream in ( & file ); QString str ; qint32 a ; in >> str >> a ; \u8fd9\u6bb5\u4ee3\u7801\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u5fc5\u987b\u6309\u7167\u5199\u5165\u7684\u987a\u5e8f\uff0c\u5c06\u6570\u636e\u8bfb\u53d6\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7a0b\u5e8f\u6570\u636e\u5199\u5165\u7684\u987a\u5e8f\u5fc5\u987b\u9884\u5148\u5b9a\u4e49\u597d\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5199\u5165\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5199\u5165\u6570\u5b57\uff0c\u90a3\u4e48\u5c31\u9996\u5148\u8bfb\u51fa\u6765\u7684\u5c31\u662f\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u624d\u662f\u6570\u5b57\u3002\u987a\u5e8f\u98a0\u5012\u7684\u8bdd\uff0c\u7a0b\u5e8f\u884c\u4e3a\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4e25\u91cd\u65f6\u4f1a\u76f4\u63a5\u9020\u6210\u7a0b\u5e8f\u5d29\u6e83\u3002 \u7531\u4e8e\u4e8c\u8fdb\u5236\u6d41\u662f\u7eaf\u7cb9\u7684\u5b57\u8282\u6570\u636e\uff0c\u5e26\u6765\u7684\u95ee\u9898\u662f\uff0c\u5982\u679c\u7a0b\u5e8f\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u6309\u7167\u4e0d\u540c\u7684\u65b9\u5f0f\u8bfb\u53d6\uff08\u524d\u9762\u8bf4\u8fc7\uff0cQt \u4fdd\u8bc1\u8bfb\u5199\u5185\u5bb9\u7684\u4e00\u81f4\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e0d\u540c Qt \u7248\u672c\u4e4b\u95f4\u7684\u4e00\u81f4\uff09\uff0c\u6570\u636e\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u63d0\u4f9b\u4e00\u79cd\u673a\u5236\u6765\u786e\u4fdd\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5982\u4e0b\u7684\u4ee3\u7801\u5199\u5165\uff1a QFile file ( \"file.dat\" ); file . open ( QIODevice :: WriteOnly ); QDataStream out ( & file ); // \u5199\u5165\u9b54\u672f\u6570\u5b57\u548c\u7248\u672c out << ( quint32 ) 0xA0B0C0D0 ; out << ( qint32 ) 123 ; out . setVersion ( QDataStream :: Qt_4_0 ); // \u5199\u5165\u6570\u636e out << lots_of_interesting_data ; \u8fd9\u91cc\uff0c\u6211\u4eec\u589e\u52a0\u4e86\u4e24\u884c\u4ee3\u7801\u7528\u4e8e\u5199\u5165\u9b54\u672f\u6570\u5b57\u3002\u6240\u8c13\u9b54\u672f\u6570\u5b57\uff0c\u662f\u4e8c\u8fdb\u5236\u8f93\u51fa\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u79cd\u6280\u672f\u3002\u4e8c\u8fdb\u5236\u683c\u5f0f\u662f\u4eba\u4e0d\u53ef\u8bfb\u7684\uff0c\u5e76\u4e14\u901a\u5e38\u5177\u6709\u76f8\u540c\u7684\u540e\u7f00\u540d\uff08\u6bd4\u5982 dat \u4e4b\u7c7b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u533a\u5206\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u54ea\u4e2a\u662f\u5408\u6cd5\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u901a\u5e38\u5177\u6709\u4e00\u4e2a\u9b54\u672f\u6570\u5b57\uff0c\u7528\u4e8e\u6807\u8bc6\u6587\u4ef6\u7684\u5408\u6cd5\u6027\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u6587\u4ef6\u6700\u5f00\u59cb\u5199\u5165 0xA0B0C0D0\uff0c\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u9996\u5148\u68c0\u67e5\u8fd9\u4e2a\u6570\u5b57\u662f\u4e0d\u662f 0xA0B0C0D0\u3002\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6587\u4ef6\u4e0d\u662f\u53ef\u8bc6\u522b\u683c\u5f0f\uff0c\u56e0\u6b64\u6839\u672c\u4e0d\u9700\u8981\u53bb\u7ee7\u7eed\u8bfb\u53d6\u3002\u4e00\u822c\u4e8c\u8fdb\u5236\u6587\u4ef6\u90fd\u4f1a\u6709\u8fd9\u4e48\u4e00\u4e2a\u9b54\u672f\u6570\u5b57\uff0c\u4f8b\u5982 Java \u7684 class \u6587\u4ef6\u7684\u9b54\u672f\u6570\u5b57\u5c31\u662f 0xCAFEBABE\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u67e5\u770b\u5668\u5c31\u53ef\u4ee5\u67e5\u770b\u3002\u9b54\u672f\u6570\u5b57\u662f\u4e00\u4e2a 32 \u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528 quint32 \u6765\u5f97\u5230\u4e00\u4e2a\u5e73\u53f0\u65e0\u5173\u7684 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u578b\u3002 \u63a5\u4e0b\u6765\u4e00\u884c\uff0c\u662f\u6807\u8bc6\u6587\u4ef6\u7684\u7248\u672c\u3002\u6211\u4eec\u7528\u9b54\u672f\u6570\u5b57\u6807\u8bc6\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u4ece\u800c\u5224\u65ad\u6587\u4ef6\u662f\u4e0d\u662f\u5408\u6cd5\u7684\u3002\u4f46\u662f\uff0c\u6587\u4ef6\u7684\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u4e5f\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\uff1a\u6211\u4eec\u53ef\u80fd\u5728\u7b2c\u4e00\u7248\u4fdd\u5b58\u6574\u578b\uff0c\u7b2c\u4e8c\u7248\u53ef\u80fd\u4fdd\u5b58\u5b57\u7b26\u4e32\u3002\u4e3a\u4e86\u6807\u8bc6\u4e0d\u540c\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ea\u80fd\u5c06\u7248\u672c\u5199\u5165\u6587\u4ef6\u3002\u6bd4\u5982\uff0c\u73b0\u5728\u6211\u4eec\u7684\u7248\u672c\u662f 123\u3002 \u4e0b\u9762\u4e00\u884c\u8fd8\u662f\u6709\u5173\u7248\u672c\u7684\uff1a out . setVersion ( QDataStream :: Qt_4_0 ); \u4e0a\u9762\u4e00\u53e5\u662f\u6587\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u4f46\u662f\uff0cQt \u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u8bfb\u53d6\u65b9\u5f0f\u53ef\u80fd\u4e5f\u4e0d\u4e00\u6837\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u6307\u5b9a Qt \u6309\u7167\u54ea\u4e2a\u7248\u672c\u53bb\u8bfb\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u6307\u5b9a\u4ee5 Qt 4.0 \u683c\u5f0f\u53bb\u8bfb\u53d6\u5185\u5bb9\u3002 \u5f53\u6211\u4eec\u8fd9\u6837\u5199\u5165\u6587\u4ef6\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u5c31\u9700\u8981\u589e\u52a0\u4e00\u7cfb\u5217\u7684\u5224\u65ad\uff1a QFile file ( \"file.dat\" ); file . open ( QIODevice :: ReadOnly ); QDataStream in ( & file ); // \u68c0\u67e5\u9b54\u672f\u6570\u5b57 quint32 magic ; in >> magic ; if ( magic != 0xA0B0C0D0 ) { return BAD_FILE_FORMAT ; } // \u68c0\u67e5\u7248\u672c qint32 version ; in >> version ; if ( version < 100 ) { return BAD_FILE_TOO_OLD ; } if ( version > 123 ) { return BAD_FILE_TOO_NEW ; } if ( version <= 110 ) { in . setVersion ( QDataStream :: Qt_3_2 ); } else { in . setVersion ( QDataStream :: Qt_4_0 ); } // \u8bfb\u53d6\u6570\u636e in >> lots_of_interesting_data ; if ( version >= 120 ) { in >> data_new_in_version_1_2 ; } in >> other_interesting_data ; \u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u6309\u7167\u524d\u9762\u7684\u89e3\u91ca\u8fdb\u884c\u7684\u3002\u9996\u5148\u8bfb\u53d6\u9b54\u672f\u6570\u5b57\uff0c\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5408\u6cd5\u3002\u5982\u679c\u5408\u6cd5\uff0c\u8bfb\u53d6\u6587\u4ef6\u7248\u672c\uff1a\u5c0f\u4e8e 100 \u6216\u8005\u5927\u4e8e 123 \u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002\u5982\u679c\u5728\u652f\u6301\u7684\u7248\u672c\u8303\u56f4\u5185\uff08100 <= version <= 123\uff09\uff0c\u5219\u5f53\u662f\u5c0f\u4e8e\u7b49\u4e8e 110 \u7684\u65f6\u5019\uff0c\u6309\u7167 Qt_3_2 \u7684\u683c\u5f0f\u8bfb\u53d6\uff0c\u5426\u5219\u6309\u7167 Qt_4_0 \u7684\u683c\u5f0f\u8bfb\u53d6\u3002\u5f53\u8bbe\u7f6e\u5b8c\u8fd9\u4e9b\u53c2\u6570\u4e4b\u540e\uff0c\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u3002 \u65e2\u7136 QIODevice \u63d0\u4f9b\u4e86 read() \u3001 readLine() \u4e4b\u7c7b\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6709 QDataStream \u5462\uff1f QDataStream \u540c QIODevice \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u533a\u522b\u5728\u4e8e\uff0c QDataStream \u63d0\u4f9b\u6d41\u7684\u5f62\u5f0f\uff0c\u6027\u80fd\u4e0a\u4e00\u822c\u6bd4\u76f4\u63a5\u8c03\u7528\u539f\u59cb API \u66f4\u597d\u4e00\u4e9b\u3002\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\u770b\u770b\u4ec0\u4e48\u662f\u6d41\u7684\u5f62\u5f0f\uff1a QFile file ( \"file.dat\" ); file . open ( QIODevice :: ReadWrite ); QDataStream stream ( & file ); QString str = \"the answer is 42\" ; QString strout ; stream << str ; file . flush (); stream >> strout ; \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u6570\u636e\uff0c\u7d27\u63a5\u7740\u628a\u6570\u636e\u8bfb\u51fa\u6765\u3002\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f\u8fd0\u884c\u4e4b\u540e\u4f60\u4f1a\u53d1\u73b0\uff0c strout \u5b9e\u9645\u662f\u7a7a\u7684\u3002\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8bfb\u53d6\u51fa\u6765\uff1f\u6211\u4eec\u4e0d\u662f\u5df2\u7ecf\u6dfb\u52a0\u4e86 file.flush(); \u8bed\u53e5\u5417\uff1f\u539f\u56e0\u5e76\u4e0d\u5728\u4e8e\u6587\u4ef6\u6709\u6ca1\u6709\u5199\u5165\uff0c\u800c\u662f\u5728\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u201c\u6d41\u201d\u3002\u6240\u8c13\u6d41\uff0c\u5c31\u50cf\u6c34\u6d41\u4e00\u6837\uff0c\u5b83\u7684\u6e38\u6807\u4f1a\u968f\u7740\u8f93\u51fa\u5411\u540e\u79fb\u52a8\u3002\u5f53\u4f7f\u7528 << \u64cd\u4f5c\u7b26\u8f93\u51fa\u4e4b\u540e\uff0c\u6d41\u7684\u6e38\u6807\u5df2\u7ecf\u5230\u4e86\u6700\u540e\uff0c\u6b64\u65f6\u4f60\u518d\u53bb\u8bfb\uff0c\u5f53\u7136\u4ec0\u4e48\u4e5f\u8bfb\u4e0d\u5230\u4e86\u3002\u6240\u4ee5\u4f60\u9700\u8981\u5728\u8f93\u51fa\u4e4b\u540e\u91cd\u65b0\u628a\u6e38\u6807\u8bbe\u7f6e\u4e3a 0 \u7684\u4f4d\u7f6e\u624d\u80fd\u591f\u7ee7\u7eed\u8bfb\u53d6\u3002\u5177\u4f53\u4ee3\u7801\u7247\u6bb5\u5982\u4e0b\uff1a stream << str ; stream . device () -> seek ( 0 ); stream >> strout ;","title":"27. \u4e8c\u8fdb\u5236\u6587\u4ef6\u8bfb\u5199"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/28.%20%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/","text":"\u4e8c\u8fdb\u5236\u6587\u4ef6\u6bd4\u8f83\u5c0f\u5de7\uff0c\u5374\u4e0d\u662f\u4eba\u53ef\u8bfb\u7684\u683c\u5f0f\u3002\u800c\u6587\u672c\u6587\u4ef6\u662f\u4e00\u79cd\u4eba\u53ef\u8bfb\u7684\u6587\u4ef6\u3002\u4e3a\u4e86\u64cd\u4f5c\u8fd9\u79cd\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 QTextStream \u7c7b\u3002 QTextStream \u548c QDataStream \u7684\u4f7f\u7528\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u662f\u64cd\u4f5c\u7eaf\u6587\u672c\u6587\u4ef6\u7684\u3002\u53e6\u5916\uff0c\u50cf XML\u3001HTML \u8fd9\u79cd\uff0c\u867d\u7136\u4e5f\u662f\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u4ee5\u7531 QTextStream \u751f\u6210\uff0c\u4f46 Qt \u63d0\u4f9b\u4e86\u66f4\u65b9\u4fbf\u7684 XML \u64cd\u4f5c\u7c7b\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5305\u62ec\u8fd9\u90e8\u5206\u5185\u5bb9\u4e86\u3002 QTextStream \u4f1a\u81ea\u52a8\u5c06 Unicode \u7f16\u7801\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u7f16\u7801\u8fdb\u884c\u8f6c\u6362\uff0c\u8fd9\u4e00\u64cd\u4f5c\u5bf9\u5f00\u53d1\u4eba\u5458\u662f\u900f\u660e\u7684\u3002\u5b83\u4e5f\u4f1a\u5c06\u6362\u884c\u7b26\u8fdb\u884c\u8f6c\u6362\uff0c\u540c\u6837\u4e0d\u9700\u8981\u81ea\u5df1\u5904\u7406\u3002 QTextStream \u4f7f\u7528 16 \u4f4d\u7684 QChar \u4f5c\u4e3a\u57fa\u7840\u7684\u6570\u636e\u5b58\u50a8\u5355\u4f4d\uff0c\u540c\u6837\uff0c\u5b83\u4e5f\u652f\u6301 C++ \u6807\u51c6\u7c7b\u578b\uff0c\u5982 int \u7b49\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f\u5c06\u8fd9\u79cd\u6807\u51c6\u7c7b\u578b\u4e0e\u5b57\u7b26\u4e32\u8fdb\u884c\u4e86\u76f8\u4e92\u8f6c\u6362\u3002 QTextStream \u540c QDataStream \u7684\u4f7f\u7528\u57fa\u672c\u4e00\u81f4\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u628a\u201cThe answer is 42\u201d\u5199\u5165\u5230 file.txt \u6587\u4ef6\u4e2d\uff1a QFile data ( \"file.txt\" ); if ( data . open ( QFile :: WriteOnly | QIODevice :: Truncate )) { QTextStream out ( & data ); out << \"The answer is \" << 42 ; } \u8fd9\u91cc\uff0c\u6211\u4eec\u5728 open() \u51fd\u6570\u4e2d\u589e\u52a0\u4e86 QIODevice::Truncate \u6253\u5f00\u65b9\u5f0f\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u8868\u4e2d\u770b\u5230\u8fd9\u4e9b\u6253\u5f00\u65b9\u5f0f\u7684\u533a\u522b\uff1a |\u679a\u4e3e\u503c|\u63cf\u8ff0| |:-:|:-:| |QIODevice::NotOpen|\u672a\u6253\u5f00| |QIODevice::ReadOnly|\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00| |QIODevice::WriteOnly|\u4ee5\u53ea\u5199\u65b9\u5f0f\u6253\u5f00| |QIODevice::ReadWrite|\u4ee5\u8bfb\u5199\u65b9\u5f0f\u6253\u5f00| |QIODevice::Append|\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u65b0\u589e\u52a0\u7684\u5185\u5bb9\u5c06\u88ab\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e| |QIODevice::Truncate|\u4ee5\u91cd\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u5728\u5199\u5165\u65b0\u7684\u6570\u636e\u65f6\u4f1a\u5c06\u539f\u6709\u6570\u636e\u5168\u90e8\u6e05\u9664\uff0c\u6e38\u6807\u8bbe\u7f6e\u5728\u6587\u4ef6\u5f00\u5934\u3002| |QIODevice::Text|\u5728\u8bfb\u53d6\u65f6\uff0c\u5c06\u884c\u7ed3\u675f\u7b26\u8f6c\u6362\u6210 \\n\uff1b\u5728\u5199\u5165\u65f6\uff0c\u5c06\u884c\u7ed3\u675f\u7b26\u8f6c\u6362\u6210\u672c\u5730\u683c\u5f0f\uff0c\u4f8b\u5982 Win32 \u5e73\u53f0\u4e0a\u662f \\r\\n| |QIODevice::Unbuffered|\u5ffd\u7565\u7f13\u5b58| \u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u4e86 QFile::WriteOnly | QIODevice::Truncate \uff0c\u4e5f\u5c31\u662f\u4ee5\u53ea\u5199\u5e76\u4e14\u8986\u76d6\u5df2\u6709\u5185\u5bb9\u7684\u5f62\u5f0f\u64cd\u4f5c\u6587\u4ef6\u3002\u6ce8\u610f\uff0c QIODevice::Truncate \u4f1a\u76f4\u63a5\u5c06\u6587\u4ef6\u5185\u5bb9\u6e05\u7a7a\u3002 \u867d\u7136 QTextStream \u7684\u5199\u5165\u5185\u5bb9\u4e0e QDataStream \u4e00\u81f4\uff0c\u4f46\u662f\u8bfb\u53d6\u65f6\u5374\u4f1a\u6709\u4e9b\u56f0\u96be\uff1a QFile data ( \"file.txt\" ); if ( data . open ( QFile :: ReadOnly )) { QTextStream in ( & data ); QString str ; int ans = 0 ; in >> str >> ans ; } \u5728\u4f7f\u7528 QDataStream \u7684\u65f6\u5019\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5f88\u65b9\u4fbf\uff0c\u4f46\u662f\u4f7f\u7528\u4e86 QTextStream \u65f6\u5374\u6709\u6240\u4e0d\u540c\uff1a\u8bfb\u51fa\u7684\u65f6\u5019\uff0cstr \u91cc\u9762\u5c06\u662f The answer is 42\uff0cans \u662f 0\u3002\u8fd9\u662f\u56e0\u4e3a\u4ee5\u6587\u672c\u5f62\u5f0f\u5199\u5165\u6570\u636e\uff0c\u662f\u6ca1\u6709\u6570\u636e\u4e4b\u95f4\u7684\u5206\u9694\u7684\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u524d\u9762\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u4f7f\u7528 QDataStream \u5199\u5165\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5728\u8981\u5199\u5165\u7684\u5185\u5bb9\u524d\u9762\uff0c\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a\u8fd9\u6bb5\u5185\u5bb9\u7684\u957f\u5ea6\u503c\u3002\u800c\u6587\u672c\u6587\u4ef6\u5219\u6ca1\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u5f88\u5c11\u4f1a\u5c06\u5176\u5206\u5272\u5f00\u6765\u8bfb\u53d6\uff0c\u800c\u662f\u4f7f\u7528\u8bf8\u5982 QTextStream::readLine() \u8bfb\u53d6\u4e00\u884c\uff0c\u4f7f\u7528 QTextStream::readAll() \u8bfb\u53d6\u6240\u6709\u6587\u672c\u8fd9\u79cd\u51fd\u6570\uff0c\u4e4b\u540e\u518d\u5bf9\u83b7\u5f97\u7684 QString \u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c QTextStream \u7684\u7f16\u7801\u683c\u5f0f\u662f Unicode\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53e6\u5916\u7684\u7f16\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528 stream . setCodec ( \"UTF-8\" ); \u53e6\u5916\uff0c\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c QTextStream \u540c std::cout \u4e00\u6837\u63d0\u4f9b\u4e86\u5f88\u591a\u63cf\u8ff0\u7b26\uff0c\u88ab\u79f0\u4e3a stream manipulators\u3002\u56e0\u4e3a\u6587\u672c\u6587\u4ef6\u662f\u4f9b\u4eba\u53bb\u8bfb\u7684\uff0c\u81ea\u7136\u9700\u8981\u826f\u597d\u7684\u683c\u5f0f\uff08\u76f8\u6bd4\u800c\u8a00\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898\uff0c\u53ea\u8981\u6570\u636e\u51c6\u786e\u5c31\u53ef\u4ee5\u4e86\uff09\u3002\u8fd9\u4e9b\u63cf\u8ff0\u7b26\u662f\u4e00\u4e9b\u51fd\u6570\u7684\u7b80\u5199\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6587\u6863\u4e2d\u627e\u5230\uff1a \u63cf\u8ff0\u7b26 \u7b49\u4ef7\u4e8e bin setIntegerBase(2) oct setIntegerBase(8) dec setIntegerBase(10) hex setIntegerBase(16) showbase setNumberFlags(numberFlags() &#124; ShowBase) forcesign setNumberFlags(numberFlags() &#124; ForceSign) forcepoint setNumberFlags(numberFlags() &#124; ForcePoint) noshowbase setNumberFlags(numberFlags() & ~ShowBase) noforcesign setNumberFlags(numberFlags() & ~ForceSign) noforcepoint setNumberFlags(numberFlags() & ~ForcePoint) uppercasebase setNumberFlags(numberFlags() &#124; UppercaseBase) uppercasedigits setNumberFlags(numberFlags() &#124; UppercaseDigits) lowercasebase setNumberFlags(numberFlags() & ~UppercaseBase) lowercasedigits setNumberFlags(numberFlags() & ~UppercaseDigits) fixed setRealNumberNotation(FixedNotation) scientific setRealNumberNotation(ScientificNotation) left setFieldAlignment(AlignLeft) right setFieldAlignment(AlignRight) center setFieldAlignment(AlignCenter) endl operator<<('\\n') \u548c flush() flush flush() reset reset() ws skipWhiteSpace() bom setGenerateByteOrderMark(true) \u8fd9\u4e9b\u63cf\u8ff0\u7b26\u53ea\u662f\u4e00\u4e9b\u51fd\u6570\u7684\u7b80\u5199\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u8981\u8f93\u51fa 12345678 \u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 out << bin << 12345678 ; \u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u7b49\u4ef7\u4e8e out . setIntegerBase ( 2 ); out << 12345678 ; \u66f4\u590d\u6742\u7684\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8212\u670d 1234567890 \u7684\u5e26\u6709\u524d\u7f00\u3001\u5168\u90e8\u5b57\u6bcd\u5927\u5199\u7684\u5341\u516d\u8fdb\u5236\u683c\u5f0f\uff080xBC614E\uff09\uff0c\u90a3\u4e48\u53ea\u8981\u4f7f\u7528 out << showbase << uppercasedigits << hex << 12345678 ; \u4e0d\u4ec5\u662f QIODevice \uff0c QTextStream \u4e5f\u53ef\u4ee5\u76f4\u63a5\u628a\u5185\u5bb9\u8f93\u51fa\u5230 QString \u3002\u4f8b\u5982 QString str ; QTextStream ( & str ) << oct << 31 << \" \" << dec << 25 << endl ; \u8fd9\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u5904\u7406\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u65b9\u6cd5\u3002","title":"28. \u6587\u672c\u6587\u4ef6\u8bfb\u5199"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/29.%20%E5%AD%98%E5%82%A8%E5%AE%B9%E5%99%A8/","text":"\u5b58\u50a8\u5bb9\u5668\uff08containers\uff09\u6709\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u96c6\u5408\uff08collections\uff09\uff0c\u662f\u80fd\u591f\u5728\u5185\u5b58\u4e2d\u5b58\u50a8\u5176\u5b83\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u901a\u5e38\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u822c\u662f\u901a\u7528\u6a21\u677f\u7c7b\u7684\u5f62\u5f0f\u3002C++ \u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f5c\u4e3a\u6807\u51c6\u6a21\u677f\u5e93\uff08Standard Template Library\uff09\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684 STL\u3002 Qt \u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u5957\u57fa\u4e8e\u6a21\u677f\u7684\u5bb9\u5668\u7c7b\u3002\u76f8\u6bd4 STL\uff0c\u8fd9\u4e9b\u5bb9\u5668\u7c7b\u901a\u5e38\u66f4\u8f7b\u91cf\u3001\u66f4\u5b89\u5168\u3001\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\u5982\u679c\u4f60\u5bf9 STL \u4e0d\u5927\u719f\u6089\uff0c\u6216\u8005\u66f4\u559c\u6b22 Qt \u98ce\u683c\u7684 API\uff0c\u90a3\u4e48\u4f60\u5c31\u5e94\u8be5\u9009\u62e9\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728 Qt \u4e2d\u4f7f\u7528 STL \u5bb9\u5668\uff0c\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002 Qt \u7684\u5bb9\u5668\u7c7b\u90fd\u4e0d\u7ee7\u627f QObject \uff0c\u90fd\u63d0\u4f9b\u4e86[[31. \u9690\u5f0f\u6570\u636e\u5171\u4eab|\u9690\u5f0f\u6570\u636e\u5171\u4eab]]\u3001\u4e0d\u53ef\u53d8\u7684\u7279\u6027\uff0c\u5e76\u4e14\u4e3a\u901f\u5ea6\u505a\u4e86\u4f18\u5316\uff0c\u5177\u6709\u8f83\u4f4e\u7684\u5185\u5b58\u5360\u7528\u91cf\u7b49\u3002\u53e6\u5916\u4e00\u70b9\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5b83\u4eec\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u8fd9\u4e9b\u5bb9\u5668\u7c7b\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u5373\u4e0d\u56e0\u7f16\u8bd1\u5668\u7684\u4e0d\u540c\u800c\u5177\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\uff1b\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff0c\u6709\u65f6\u4e5f\u88ab\u79f0\u4f5c\u201c\u5199\u65f6\u590d\u5236\uff08copy on write\uff09\u201d\uff0c\u8fd9\u79cd\u6280\u672f\u5141\u8bb8\u5728\u5bb9\u5668\u7c7b\u4e2d\u4f7f\u7528\u4f20\u503c\u53c2\u6570\uff0c\u4f46\u5374\u4e0d\u4f1a\u51fa\u73b0\u989d\u5916\u7684\u6027\u80fd\u635f\u5931\u3002\u904d\u5386\u662f\u5bb9\u5668\u7c7b\u7684\u91cd\u8981\u64cd\u4f5c\u3002Qt \u5bb9\u5668\u7c7b\u63d0\u4f9b\u4e86\u7c7b\u4f3c Java \u7684\u904d\u5386\u5668\u8bed\u6cd5\uff0c\u540c\u6837\u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c STL \u7684\u904d\u5386\u5668\u8bed\u6cd5\uff0c\u4ee5\u65b9\u4fbf\u7528\u6237\u9009\u62e9\u81ea\u5df1\u4e60\u60ef\u7684\u7f16\u7801\u65b9\u5f0f\u3002\u76f8\u6bd4\u800c\u8a00\uff0cJava \u98ce\u683c\u7684\u904d\u5386\u5668\u66f4\u6613\u7528\uff0c\u662f\u4e00\u79cd\u9ad8\u5c42\u6b21\u7684\u51fd\u6570\uff1b\u800c STL \u98ce\u683c\u7684\u904d\u5386\u5668\u66f4\u9ad8\u6548\uff0c\u540c\u65f6\u80fd\u591f\u652f\u6301 Qt \u548c STL \u7684\u901a\u7528\u7b97\u6cd5\u3002\u6700\u540e\u4e00\u70b9\uff0c\u5728\u4e00\u4e9b\u5d4c\u5165\u5f0f\u5e73\u53f0\uff0cSTL \u5f80\u5f80\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u8fd9\u65f6\u4f60\u5c31\u53ea\u80fd\u4f7f\u7528 Qt \u63d0\u4f9b\u7684\u5bb9\u5668\u7c7b\uff0c\u9664\u975e\u4f60\u60f3\u81ea\u5df1\u521b\u5efa\u3002\u987a\u4fbf\u63d0\u4e00\u53e5\uff0c\u9664\u4e86\u904d\u5386\u5668\uff0cQt \u8fd8\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684[[30. \u904d\u5386\u5bb9\u5668#foreach \u5173\u952e\u5b57|foreach]]\u8bed\u6cd5\u3002 Qt \u63d0\u4f9b\u4e86\u987a\u5e8f\u5b58\u50a8\u5bb9\u5668\uff1a QList \uff0c QLinkedList \uff0c QVector \uff0c QStack \u548c QQueue \u3002\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\uff0c QList \u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u867d\u7136\u5b83\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u5217\u8868\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u5feb\u901f\u7684\u5411\u524d\u6dfb\u52a0\u548c\u5411\u540e\u8ffd\u52a0\u7684\u64cd\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u94fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 QLinkedList \u3002\u5982\u679c\u4f60\u5e0c\u671b\u6240\u6709\u5143\u7d20\u5360\u7528\u8fde\u7eed\u5730\u5740\u7a7a\u95f4\uff0c\u53ef\u4ee5\u9009\u62e9 QVector \u3002 QStack \u548c QQueue \u5219\u662f LIFO \u548c FIFO \u7684\u3002 Qt \u8fd8\u63d0\u4f9b\u4e86\u5173\u8054\u5bb9\u5668\uff1a QMap \uff0c QMultiMap \uff0c QHash \uff0c QMultiHash \u548c QSet \u3002\u5e26\u6709\u201cMulti\u201d\u5b57\u6837\u7684\u5bb9\u5668\u652f\u6301\u5728\u4e00\u4e2a\u952e\u4e0a\u9762\u5173\u8054\u591a\u4e2a\u503c\u3002\u201cHash\u201d\u5bb9\u5668\u63d0\u4f9b\u4e86\u57fa\u4e8e\u6563\u5217\u51fd\u6570\u7684\u66f4\u5feb\u7684\u67e5\u627e\uff0c\u800c\u975e Hash \u5bb9\u5668\u5219\u662f\u57fa\u4e8e\u4e8c\u5206\u641c\u7d22\u7684\u6709\u5e8f\u96c6\u5408\u3002 \u53e6\u5916\u4e24\u4e2a\u7279\u4f8b\uff1a QCache \u548c QContiguousCache \u63d0\u4f9b\u4e86\u5728\u6709\u9650\u7f13\u5b58\u7a7a\u95f4\u4e2d\u7684\u9ad8\u6548 hash \u67e5\u627e\u3002 Qt \u63d0\u4f9b\u7684\u5404\u4e2a\u5bb9\u5668\u7c7b\u603b\u7ed3\u5982\u4e0b\uff1a - QList<T> \uff1a\u8fd9\u662f\u81f3\u4eca\u4e3a\u6b62\u63d0\u4f9b\u7684\u6700\u901a\u7528\u7684\u5bb9\u5668\u7c7b\u3002\u5b83\u5c06\u7ed9\u5b9a\u7684\u7c7b\u578b T \u7684\u5bf9\u8c61\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u4e0e\u4e00\u4e2a\u6574\u578b\u7684\u7d22\u5f15\u5173\u8054\u3002 QList \u5728\u5185\u90e8\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\uff0c\u540c\u65f6\u63d0\u4f9b\u57fa\u4e8e\u7d22\u5f15\u7684\u5feb\u901f\u8bbf\u95ee\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 QList::append() \u548c QList::prepend() \u5728\u5217\u8868\u5c3e\u90e8\u6216\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 QList::insert() \u5728\u4e2d\u95f4\u63d2\u5165\u3002\u76f8\u6bd4\u5176\u5b83\u5bb9\u5668\u7c7b\uff0c QList \u4e13\u95e8\u4e3a\u8fd9\u79cd\u4fee\u6539\u64cd\u4f5c\u4f5c\u4e86\u4f18\u5316\u3002 QStringList \u7ee7\u627f\u81ea QList<QString> \u3002 - QLinkedList<T> \uff1a\u7c7b\u4f3c\u4e8e QList \uff0c\u9664\u4e86\u5b83\u662f\u4f7f\u7528\u904d\u5386\u5668\u8fdb\u884c\u904d\u5386\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u6574\u6570\u7d22\u5f15\u7684\u968f\u673a\u8bbf\u95ee\u3002\u5bf9\u4e8e\u5728\u4e2d\u90e8\u63d2\u5165\u5927\u91cf\u6570\u636e\uff0c\u5b83\u7684\u6027\u80fd\u8981\u4f18\u4e8e QList \u3002\u540c\u65f6\u5177\u6709\u66f4\u597d\u7684\u904d\u5386\u5668\u8bed\u4e49\uff08\u53ea\u8981\u6570\u636e\u5143\u7d20\u5b58\u5728\uff0c QLinkedList \u7684\u904d\u5386\u5668\u5c31\u4f1a\u6307\u5411\u4e00\u4e2a\u5408\u6cd5\u5143\u7d20\uff0c\u76f8\u6bd4\u800c\u8a00\uff0c\u5f53\u63d2\u5165\u6216\u5220\u9664\u6570\u636e\u65f6\uff0c QList \u7684\u904d\u5386\u5668\u5c31\u4f1a\u6307\u5411\u4e00\u4e2a\u975e\u6cd5\u503c\uff09\u3002 - QVector<T> \uff1a\u7528\u4e8e\u5728\u5185\u5b58\u7684\u8fde\u7eed\u533a\u5b58\u50a8\u4e00\u7cfb\u5217\u7ed9\u5b9a\u7c7b\u578b\u7684\u503c\u3002\u5728\u5934\u90e8\u6216\u4e2d\u95f4\u63d2\u5165\u6570\u636e\u53ef\u80fd\u4f1a\u975e\u5e38\u6162\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5f15\u8d77\u5927\u91cf\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u79fb\u52a8\u3002 - QStack<T> \uff1a\u8fd9\u662f QVector \u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\u8bed\u4e49\u3002\u76f8\u6bd4 QVector \uff0c\u5b83\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u51fd\u6570\uff1a push() \uff0c pop() \u548c top() \u3002 - QQueue<T> \uff1a\u8fd9\u662f QList \u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u8bed\u4e49\u3002\u76f8\u6bd4 QList \uff0c\u5b83\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u51fd\u6570\uff1a enqueue() \uff0c dequeue() \u548c head() \u3002 - QSet<T> \uff1a\u63d0\u4f9b\u5355\u503c\u7684\u6570\u5b66\u4e0a\u9762\u7684\u96c6\u5408\uff0c\u5177\u6709\u5feb\u901f\u7684\u67e5\u627e\u6027\u80fd\u3002 - QMap<Key, T> \uff1a\u63d0\u4f9b\u4e86\u5b57\u5178\u6570\u636e\u7ed3\u6784\uff08\u5173\u8054\u6570\u7ec4\uff09\uff0c\u5c06\u7c7b\u578b T \u7684\u503c\u540c\u7c7b\u578b Key \u7684\u952e\u5173\u8054\u8d77\u6765\u3002\u901a\u5e38\uff0c\u6bcf\u4e2a\u952e\u4e0e\u4e00\u4e2a\u503c\u5173\u8054\u3002 QMap \u4ee5\u952e\u7684\u987a\u5e8f\u5b58\u50a8\u6570\u636e\uff1b\u5982\u679c\u987a\u5e8f\u65e0\u5173\uff0c QHash \u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002 - QMultiMap<Key, T> \uff1a\u8fd9\u662f QMap \u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u591a\u503c\u6620\u5c04\uff1a\u4e00\u4e2a\u952e\u53ef\u4ee5\u4e0e\u591a\u4e2a\u503c\u5173\u8054\u3002 - QHash<Key, T> \uff1a\u8be5\u7c7b\u540c QMap \u7684\u63a5\u53e3\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u662f\u63d0\u4f9b\u4e86\u66f4\u5feb\u7684\u67e5\u627e\u3002 QHash \u4ee5\u5b57\u6bcd\u987a\u5e8f\u5b58\u50a8\u6570\u636e\u3002 - QMultiHash<Key, T> \uff1a\u8fd9\u662f QHash \u7684\u5b50\u7c7b\uff0c\u63d0\u4f9b\u4e86\u591a\u503c\u6563\u5217\u3002\u6240\u6709\u7684\u5bb9\u5668\u90fd\u53ef\u4ee5\u5d4c\u5957\u3002\u4f8b\u5982\uff0c QMap<QString, QList<int> > \u662f\u4e00\u4e2a\u6620\u5c04\uff0c\u5176\u952e\u662f QString \u7c7b\u578b\uff0c\u503c\u662f QList<int> \u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u503c\u90fd\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a int\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cC++ \u7f16\u8bd1\u5668\u4f1a\u5c06\u8fde\u7eed\u7684\u4e24\u4e2a > \u5f53\u505a\u8f93\u5165\u91cd\u5b9a\u5411\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u7684\u4e24\u4e2a > \u4e2d\u95f4\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u80fd\u591f\u5b58\u50a8\u5728\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u5fc5\u987b\u662f \u53ef\u8d4b\u503c\u6570\u636e\u7c7b\u578b \u3002\u6240\u8c13\u53ef\u8d4b\u503c\u6570\u636e\u7c7b\u578b\uff0c\u662f\u6307\u5177\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u7c7b\u578b\u3002\u7edd\u5927\u591a\u6570\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u57fa\u672c\u7c7b\u578b\uff0c\u6bd4\u5982 int \u548c double\uff0c\u6307\u9488\uff0cQt \u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982 QString \u3001 QDate \u548c QTime \uff0c\u90fd\u662f\u53ef\u8d4b\u503c\u6570\u636e\u7c7b\u578b\u3002\u4f46\u662f\uff0c QObject \u53ca\u5176\u5b50\u7c7b\uff08 QWidget \u3001 QTimer \u7b49\uff09\u90fd\u4e0d\u662f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u80fd\u4f7f\u7528 QList<QWidget> \u8fd9\u79cd\u5bb9\u5668\uff0c\u56e0\u4e3a QWidget \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u53ef\u7528\u3002\u5982\u679c\u4f60\u9700\u8981\u8fd9\u79cd\u7c7b\u578b\u7684\u5bb9\u5668\uff0c\u53ea\u80fd\u5b58\u50a8\u5176\u6307\u9488\uff0c\u4e5f\u5c31\u662f QList<QWidget *> \u3002 \u5982\u679c\u8981\u4f7f\u7528 QMap \u6216\u8005 QHash \uff0c\u4f5c\u4e3a\u952e\u7684\u7c7b\u578b\u5fc5\u987b\u63d0\u4f9b\u989d\u5916\u7684\u8f85\u52a9\u51fd\u6570\u3002 QMap \u7684\u952e\u5fc5\u987b\u63d0\u4f9b operator<() \u91cd\u8f7d\uff0c QHash \u7684\u952e\u5fc5\u987b\u63d0\u4f9b operator==() \u91cd\u8f7d\u548c\u4e00\u4e2a\u540d\u5b57\u662f qHash() \u7684\u5168\u5c40\u51fd\u6570\u3002 \u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u8003\u8651\u5982\u4e0b\u7684\u4ee3\u7801\uff1a struct Movie { int id ; QString title ; QDate releaseDate ; }; \u4f5c\u4e3a struct\uff0c\u6211\u4eec\u5f53\u505a\u7eaf\u6570\u636e\u7c7b\u4f7f\u7528\u3002\u8fd9\u4e2a\u7c7b\u6ca1\u6709\u989d\u5916\u7684\u6784\u9020\u51fd\u6570\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u4e3a\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u540c\u65f6\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u751f\u6210\u9ed8\u8ba4\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u8fd9\u5c31\u6ee1\u8db3\u4e86\u5c06\u5176\u653e\u5165\u5bb9\u5668\u7c7b\u5b58\u50a8\u7684\u6761\u4ef6\uff1a QList < Movie > movs ; Qt \u5bb9\u5668\u7c7b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 QDataStream \u8fdb\u884c\u5b58\u53d6\u3002\u6b64\u65f6\uff0c\u5bb9\u5668\u4e2d\u6240\u5b58\u50a8\u7684\u7c7b\u578b\u5fc5\u987b\u4e5f\u80fd\u591f\u4f7f\u7528 QDataStream \u8fdb\u884c\u5b58\u50a8\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u9700\u8981\u91cd\u8f7d operator<<() \u548c operator>>() \u8fd0\u7b97\u7b26\uff1a QDataStream & operator << ( QDataStream & out , const Movie & movie ) { out << ( quint32 ) movie . id << movie . title << movie . releaseDate ; return out ; } QDataStream & operator >> ( QDataStream & in , Movie & movie ) { quint32 id ; QDate date ; in >> id >> movie . title >> date ; movie . id = ( int ) id ; movie . releaseDate = date ; return in ; } \u6839\u636e\u6570\u636e\u7ed3\u6784\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u5bf9\u8fd9\u4e9b\u5bb9\u5668\u7c7b\u7684\u7b97\u6cd5\u590d\u6742\u6027\u8fdb\u884c\u5b9a\u91cf\u5206\u6790\u3002\u7b97\u6cd5\u590d\u6742\u5ea6\u5173\u5fc3\u7684\u662f\u5728\u6570\u636e\u91cf\u589e\u957f\u65f6\uff0c\u5bb9\u5668\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u7a76\u7adf\u6709\u591a\u5feb\uff08\u6216\u8005\u591a\u6162\uff09\u3002\u4f8b\u5982\uff0c\u5411 QLinkedList \u4e2d\u90e8\u63d2\u5165\u6570\u636e\u662f\u4e00\u4e2a\u76f8\u5f53\u5feb\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u4e0e QLinkedList \u4e2d\u5df2\u7ecf\u5b58\u50a8\u7684\u6570\u636e\u91cf\u65e0\u5173\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c QVector \u4e2d\u5df2\u7ecf\u4fdd\u5b58\u4e86\u5927\u91cf\u6570\u636e\uff0c\u5411 QVector \u4e2d\u90e8\u63d2\u5165\u6570\u636e\u4f1a\u975e\u5e38\u6162\uff0c\u56e0\u4e3a\u5728\u5185\u5b58\u4e2d\uff0c\u6709\u4e00\u534a\u7684\u6570\u636e\u5fc5\u987b\u79fb\u52a8\u4f4d\u7f6e\u3002\u4e3a\u4e86\u63cf\u8ff0\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u5f15\u5165 O \u8bb0\u53f7\uff08\u5927\u5199\u5b57\u6bcd O\uff0c\u8bfb\u4f5c\u201c\u5927 O\u201d\uff09\uff1a - \u5e38\u91cf\u65f6\u95f4\uff1aO(1)\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\u4e0e\u5bb9\u5668\u4e2d\u6570\u636e\u91cf\u65e0\u5173\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u51fd\u6570\u662f\u5e38\u91cf\u65f6\u95f4\u7684\u3002 QLinkedList::insert() \u5c31\u662f\u5e38\u91cf\u65f6\u95f4\u7684\u3002 - \u5bf9\u6570\u65f6\u95f4\uff1aO(log n)\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5bb9\u5668\u6570\u636e\u91cf\u7684\u5bf9\u6570\u5173\u7cfb\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u51fd\u6570\u662f\u5bf9\u6570\u65f6\u95f4\u7684\u3002 qBinaryFind() \u5c31\u662f\u5bf9\u6570\u65f6\u95f4\u7684\u3002 - \u7ebf\u6027\u65f6\u95f4\uff1aO(n)\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5bb9\u5668\u6570\u636e\u91cf\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u76f4\u63a5\u4e0e\u6570\u91cf\u76f8\u5173\uff0c\u6211\u4eec\u8bf4\u8fd9\u4e2a\u51fd\u6570\u662f\u7ebf\u6027\u65f6\u95f4\u7684\u3002 QVector::insert() \u5c31\u662f\u7ebf\u6027\u65f6\u95f4\u7684\u3002 - \u7ebf\u6027\u5bf9\u6570\u65f6\u95f4\uff1aO(n log n)\u3002\u7ebf\u6027\u5bf9\u6570\u65f6\u95f4\u8981\u6bd4\u7ebf\u6027\u65f6\u95f4\u6162\uff0c\u4f46\u662f\u8981\u6bd4\u5e73\u65b9\u65f6\u95f4\u5feb\u3002 - \u5e73\u65b9\u65f6\u95f4\uff1aO(n\u00b2)\u3002\u5e73\u65b9\u65f6\u95f4\u4e0e\u5bb9\u5668\u6570\u636e\u91cf\u7684\u5e73\u65b9\u5173\u7cfb\u3002 \u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002Qt \u9ed8\u8ba4\u7684\u589e\u957f\u7b97\u6cd5\u5df2\u7ecf\u8db3\u591f\u3002\u5982\u679c\u4f60\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\uff0c QVector<T> \u3001 QHash<Key, T> \u3001 QSet<T> \u3001 QString \u548c QByteArray \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u6307\u5b9a\u7a76\u7adf\u8981\u5206\u914d\u591a\u5c11\u5185\u5b58\uff1a - capacity() \uff1a\u8fd4\u56de\u5b9e\u9645\u5df2\u7ecf\u5206\u914d\u5185\u5b58\u7684\u5143\u7d20\u6570\u76ee\uff08\u5bf9\u4e8e QHash \u548c QSet \uff0c\u5219\u662f\u6563\u5217\u8868\u4e2d\u6876\u7684\u4e2a\u6570\uff09 - reserve(size) \uff1a\u4e3a\u6307\u5b9a\u6570\u76ee\u7684\u5143\u7d20\u663e\u5f0f\u5730\u9884\u5206\u914d\u5185\u5b58\u3002 - squeeze() \uff1a\u91ca\u653e\u90a3\u4e9b\u4e0d\u9700\u8981\u771f\u5b9e\u5b58\u50a8\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u77e5\u9053\u5bb9\u5668\u5927\u7ea6\u6709\u591a\u5c11\u6570\u636e\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 reserve() \u51fd\u6570\u6765\u51cf\u5c11\u5185\u5b58\u5360\u7528\u3002\u5982\u679c\u5df2\u7ecf\u5c06\u6240\u6709\u6570\u636e\u5168\u90e8\u5b58\u5165\u5bb9\u5668\uff0c\u5219\u53ef\u4ee5\u8c03\u7528 squeeze() \u51fd\u6570\uff0c\u91ca\u653e\u6240\u6709\u672a\u4f7f\u7528\u7684\u9884\u5206\u914d\u7a7a\u95f4\u3002","title":"29. \u5b58\u50a8\u5bb9\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/30.%20%E9%81%8D%E5%8E%86%E5%AE%B9%E5%99%A8/","text":"\u6ca1\u6709\u904d\u5386\u5668\u65f6\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5411\u5916\u754c\u63d0\u4f9b\u4e00\u4e2a\u5217\u8868\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u5176\u8fd4\u56de\uff1a QList < int > intlist () const { return list ; } \u8fd9\u4e48\u505a\u7684\u95ee\u9898\u662f\uff1a\u5411\u7528\u6237\u66b4\u9732\u4e86\u96c6\u5408\u7684\u5185\u90e8\u5b9e\u73b0\u3002\u7528\u6237\u77e5\u9053\uff0c\u539f\u6765\u4f60\u7528\u7684\u5c31\u662f\u4e00\u4e2a QList \u554a~\u90a3\u6211\u5c31\u53ef\u4ee5\u5411\u91cc\u9762\u589e\u52a0\u4e1c\u897f\u4e86\uff0c\u6216\u8005\u4fee\u6539\u5176\u4e2d\u7684\u5185\u5bb9\u3002\u6709\u65f6\u8fd9\u4e0d\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u662f\u60f3\u63d0\u4f9b\u7528\u6237\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u5141\u8bb8\u7528\u6237\u77e5\u9053\u8fd9\u4e2a\u96c6\u5408\u4e2d\u6709\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5bf9\u5b83\u8fdb\u884c\u4fee\u6539\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5e0c\u671b\u6709\u8fd9\u4e48\u4e00\u79cd\u5bf9\u8c61\uff1a\u901a\u8fc7\u5b83\u5c31\u80fd\u591f\u63d0\u4f9b\u4e00\u79cd\u901a\u7528\u7684\u8bbf\u95ee\u96c6\u5408\u5143\u7d20\u7684\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u5e95\u5c42\u7684\u96c6\u5408\u662f\u94fe\u8868\u8fd8\u662f\u6563\u5217\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u5bf9\u8c61\u5b9e\u73b0\u3002\u8fd9\u5c31\u662f\u904d\u5386\u5668\u3002 [[29. \u5b58\u50a8\u5bb9\u5668|Qt \u7684\u5bb9\u5668\u7c7b]]\u63d0\u4f9b\u4e86\u4e24\u79cd\u98ce\u683c\u7684\u904d\u5386\u5668\uff1aJava \u98ce\u683c\u548c STL \u98ce\u683c\u3002\u8fd9\u4e24\u79cd\u98ce\u683c\u7684\u904d\u5386\u5668\u5728\u901a\u8fc7\u975e const \u51fd\u6570\u5bf9\u96c6\u5408\u8fdb\u884c\u4fee\u6539\u65f6\u90fd\u662f\u4e0d\u53ef\u7528\u7684\u3002 Java \u98ce\u683c\u7684\u904d\u5386\u5668 Java \u98ce\u683c\u7684\u904d\u5386\u5668\u662f\u5728 Qt4 \u9996\u5148\u5f15\u5165\u7684\uff0c\u662f Qt \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u63a8\u8350\u4f7f\u7528\u7684\u5f62\u5f0f\u3002\u8fd9\u79cd\u98ce\u683c\u6bd4\u8d77 STL \u98ce\u683c\u7684\u904d\u5386\u5668\u66f4\u65b9\u4fbf\u3002\u65b9\u4fbf\u7684\u4ee3\u4ef7\u5c31\u662f\u4e0d\u5982\u540e\u8005\u9ad8\u6548\u3002\u5b83\u4eec\u7684 API \u975e\u5e38\u7c7b\u4f3c\u4e8e Java \u7684\u904d\u5386\u5668\u7c7b\uff0c\u6545\u540d\u3002 \u6bcf\u4e00\u79cd\u5bb9\u5668\u90fd\u6709\u4e24\u79cd Java \u98ce\u683c\u7684\u904d\u5386\u5668\uff1a\u4e00\u79cd\u63d0\u4f9b\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4e00\u79cd\u63d0\u4f9b\u8bfb\u5199\u8bbf\u95ee\uff1a \u5bb9\u5668 \u53ea\u8bfb\u904d\u5386 \u8bfb\u5199\u904d\u5386 QList<T> , QQueue<T> QListIterator<T> QMutableListIterator<T> QLinkedList<T> QLinkedListIterator<T> QMutableLinkedListIterator<T> QVector<T> , QStack<T> QVectorIterator<T> QMutableVectorIterator<T> QSet<T> QSetIterator<T> QMutableSetIterator<T> QMap<Key, T>,QMultiMap<Key, T> QMapIterator<T> QMutableMapIterator<T> QHash<Key, T>,QMultiHash<Key, T> QHashIterator<T> QMutableHashIterator<T> \u8fd9\u91cc\u6211\u4eec\u53ea\u8ba8\u8bba QList \u548c QMap \u7684\u904d\u5386\u5668\u3002 QLinkedList \u3001 QVector \u548c QSet \u7684\u904d\u5386\u5668\u63a5\u53e3\u4e0e QList \u7684\u662f\u4e00\u6837\u7684\uff1b QHash \u904d\u5386\u5668\u7684\u63a5\u53e3\u5219\u540c QMap \u662f\u4e00\u6837\u7684\u3002 \u4e0d\u540c\u4e8e\u4e0b\u9762\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u7684 STL \u98ce\u683c\u7684\u904d\u5386\u5668\uff0cJava \u98ce\u683c\u7684\u904d\u5386\u5668\u6307\u5411\u7684\u662f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u6307\u5411\u5143\u7d20\u672c\u8eab\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u6307\u5411\u96c6\u5408\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u80fd\u6307\u5411\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a ![[\u904d\u5386\u5bb9\u5668_1.png]] \u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u770b\u770b\u5982\u4f55\u4f7f\u7528\u8fd9\u79cd\u904d\u5386\u5668\uff1a QList < QString > list ; list << \"A\" << \"B\" << \"C\" << \"D\" ; QListIterator < QString > i ( list ); while ( i . hasNext ()) { qDebug () << i . next (); } \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528 list \u5bf9\u8c61\u521b\u5efa\u4e00\u4e2a\u904d\u5386\u5668\u3002\u521a\u521a\u521b\u5efa\u5b8c\u6210\u65f6\uff0c\u8be5\u904d\u5386\u5668\u4f4d\u4e8e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\uff08\u4e5f\u5c31\u662f A \u4e4b\u524d\uff09\u3002\u6211\u4eec\u901a\u8fc7\u8c03\u7528 hasNext() \u51fd\u6570\u5224\u65ad\u904d\u5386\u5668\u4e4b\u540e\u7684\u4f4d\u7f6e\u4e0a\u6709\u65e0\u5143\u7d20\u3002\u5982\u679c\u6709\uff0c\u8c03\u7528 next() \u51fd\u6570\u5c06\u904d\u5386\u5668\u8df3\u8fc7\u5176\u540e\u7684\u5143\u7d20\u3002 next() \u51fd\u6570\u8fd4\u56de\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 hasPrevious() \u548c previous() \u51fd\u6570\u6765\u4ece\u5c3e\u90e8\u5f00\u59cb\u904d\u5386\u3002 QListIterator \u662f\u53ea\u8bfb\u904d\u5386\u5668\uff0c\u4e0d\u80fd\u63d2\u5165\u6216\u8005\u5220\u9664\u6570\u636e\u3002\u5982\u679c\u9700\u8981\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 QMutableListIterator \u3002\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { if ( i . next () % 2 != 0 ) { i . remove (); } } \u8fd9\u6bb5\u4ee3\u7801\u4f7f\u7528 QMutableListIterator \u904d\u5386\u96c6\u5408\uff0c\u5982\u679c\u5176\u503c\u662f\u5947\u6570\u5219\u5c06\u5176\u5220\u9664\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\u90fd\u8981\u8c03\u7528 next() \u51fd\u6570\u3002\u6b63\u5982\u524d\u9762\u6240\u8bf4\uff0c\u5b83\u4f1a\u8df3\u8fc7\u5176\u540e\u7684\u4e00\u4e2a\u5143\u7d20\u3002 remove() \u51fd\u6570\u4f1a\u5220\u9664\u6211\u4eec\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u3002\u8c03\u7528 remove() \u51fd\u6570\u5e76\u4e0d\u4f1a\u5c06\u904d\u5386\u5668\u7f6e\u4f4d\u4e0d\u53ef\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8fde\u7eed\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u5411\u524d\u904d\u5386\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u4f7f\u7528 setValue() \u51fd\u6570\u3002\u4f8b\u5982\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { if ( i . next () > 128 ) { i . setValue ( 128 ); } } \u5982\u540c remove() \u51fd\u6570\uff0c setValue() \u4e5f\u662f\u5bf9\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u3002\u5b9e\u9645\u4e0a\uff0c next() \u51fd\u6570\u8fd4\u56de\u7684\u662f\u96c6\u5408\u5143\u7d20\u7684\u975e const \u5f15\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u8c03\u7528 setValue() \u51fd\u6570\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { i . next () *= 2 ; } QMapItrator \u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\u4f8b\u5982\uff0c\u4f7f\u7528 QMapItrator \u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u636e\u4ece QMap \u590d\u5236\u5230 QHash \uff1a QMap < int , QWidget *> map ; QHash < int , QWidget *> hash ; QMapIterator < int , QWidget *> i ( map ); while ( i . hasNext ()) { i . next (); hash . insert ( i . key (), i . value ()); } STL \u98ce\u683c\u7684\u904d\u5386\u5668 STL \u98ce\u683c\u7684\u904d\u5386\u5668\u4ece Qt 2.0 \u5c31\u5f00\u59cb\u63d0\u4f9b\u3002\u8fd9\u79cd\u904d\u5386\u5668\u80fd\u591f\u517c\u5bb9 Qt \u548c STL \u7684\u901a\u7528\u7b97\u6cd5\uff0c\u5e76\u4e14\u4e3a\u901f\u5ea6\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u540c Java \u98ce\u683c\u904d\u5386\u5668\u7c7b\u4f3c\uff0cQt \u4e5f\u63d0\u4f9b\u4e86\u4e24\u79cd STL \u98ce\u683c\u7684\u904d\u5386\u5668\uff1a\u4e00\u79cd\u662f\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4e00\u79cd\u662f\u8bfb\u5199\u8bbf\u95ee\u3002\u6211\u4eec\u63a8\u8350\u5c3d\u53ef\u80fd\u4f7f\u7528\u53ea\u8bfb\u8bbf\u95ee\uff0c\u56e0\u4e3a\u5b83\u4eec\u8981\u6bd4\u8bfb\u5199\u8bbf\u95ee\u7684\u904d\u5386\u5668\u5feb\u4e00\u4e9b\u3002 \u5bb9\u5668 \u53ea\u8bfb\u904d\u5386 \u8bfb\u5199\u904d\u5386 QList<T> , QQueue<T> QList<T>::const_iterator QList<T>::iterator QLinkedList<T> QLinkedList<T>::const_iterator QLinkedList<T>::iterator QVector<T> , QStack<T> QVector<T>::const_iterator QVector<T>::iterator QSet<T> QSet<T>::const_iterator QSet<T>::iterator QMap<Key, T> , QMultiMap<Key, T> QMap<Key, T>::const_iterator QMap<Key, T>::iterator QHash<Key, T> , QMultiHash<Key, T> QHash<Key, T>::const_iterator QHash<Key, T>::iterator STL \u98ce\u683c\u7684\u904d\u5386\u5668\u5177\u6709\u7c7b\u4f3c\u6570\u7ec4\u6307\u9488\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ++ \u8fd0\u7b97\u7b26\u8ba9\u904d\u5386\u5668\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528 \u8fd0\u7b97\u7b26\u83b7\u53d6\u904d\u5386\u5668\u6240\u6307\u7684\u5143\u7d20\u3002\u5bf9\u4e8e QVector \u548c QStack \uff0c\u867d\u7136\u5b83\u4eec\u662f\u5728\u8fde\u7eed\u5185\u5b58\u533a\u5b58\u50a8\u5143\u7d20\uff0c\u904d\u5386\u5668\u7c7b\u578b\u662f typedef T \uff0c const_iterator \u7c7b\u578b\u5219\u662f typedef const T * \u3002 \u6211\u4eec\u8fd8\u662f\u4ee5 QList \u548c QMap \u4e3a\u4f8b\uff0c\u7406\u7531\u5982\u4e0a\u3002\u4e0b\u9762\u662f\u6709\u5173 QList \u7684\u76f8\u5173\u4ee3\u7801\uff1a QList < QString > list ; list << \"A\" << \"B\" << \"C\" << \"D\" ; QList < QString >:: iterator i ; for ( i = list . begin (); i != list . end (); ++ i ) { * i = ( * i ). toLower (); } \u4e0d\u540c\u4e8e Java \u98ce\u683c\u904d\u5386\u5668\uff0cSTL \u98ce\u683c\u904d\u5386\u5668\u76f4\u63a5\u6307\u5411\u5143\u7d20\u672c\u8eab\u3002\u5bb9\u5668\u7684 begin() \u51fd\u6570\u8fd4\u56de\u6307\u5411\u8be5\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u904d\u5386\u5668\uff1b end() \u51fd\u6570\u8fd4\u56de\u6307\u5411\u8be5\u5bb9\u5668 \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u5143\u7d20 \u7684\u904d\u5386\u5668\u3002 end() \u5b9e\u9645\u662f\u4e00\u4e2a\u975e\u6cd5\u4f4d\u7f6e\uff0c\u6c38\u8fdc\u4e0d\u53ef\u8fbe\u3002\u8fd9\u662f\u4e3a\u8df3\u51fa\u5faa\u73af\u505a\u7684\u4e00\u4e2a\u865a\u5143\u7d20\u3002\u5982\u679c\u96c6\u5408\u662f\u7a7a\u7684\uff0c begin() \u7b49\u4e8e end() \uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u6267\u884c\u5faa\u73af\u3002 \u4e0b\u56fe\u662f STL \u98ce\u683c\u904d\u5386\u5668\u7684\u793a\u610f\u56fe\uff1a ![[\u904d\u5386\u5bb9\u5668_2.png]] \u6211\u4eec\u4f7f\u7528 const_iterator \u8fdb\u884c\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a QList < QString >:: const_iterator i ; for ( i = list . constBegin (); i != list . constEnd (); ++ i ) { qDebug () << * i ; } QMap \u548c QHash \u7684\u904d\u5386\u5668\uff0c* \u8fd0\u7b97\u7b26\u8fd4\u56de\u96c6\u5408\u952e\u503c\u5bf9\u3002\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u6253\u5370\u51fa QMap \u7684\u6240\u6709\u5143\u7d20\uff1a QMap < int , int > map ; QMap < int , int >:: const_iterator i ; for ( i = map . constBegin (); i != map . constEnd (); ++ i ) { qDebug () << i . key () << \":\" << i . value (); } \u7531\u4e8e\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff08\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4ecb\u7ecd\u8be5\u90e8\u5206\u5185\u5bb9\uff09\uff0c\u5373\u4f7f\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u503c\u4e5f\u4e0d\u4f1a\u6709\u5f88\u5927\u7684\u4ee3\u4ef7\u3002Qt API \u5305\u542b\u4e86\u5f88\u591a\u4ee5\u503c\u7684\u5f62\u5f0f\u8fd4\u56de QList \u6216 QStringList \u7684\u51fd\u6570\uff08\u4f8b\u5982 QSplitter::sizes() \uff09\u3002\u5982\u679c\u4f60\u5e0c\u671b\u4f7f\u7528 STL \u98ce\u683c\u7684\u904d\u5386\u5668\u904d\u5386\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u5e94\u8be5\u4f7f\u7528\u904d\u5386\u5668\u904d\u5386\u5bb9\u5668\u7684\u62f7\u8d1d\uff0c\u4f8b\u5982\uff1a // \u6b63\u786e\u7684\u65b9\u5f0f const QList < QString > sizes = splitter -> sizes (); QList < QString >:: const_iterator i ; for ( i = sizes . begin (); i != sizes . end (); ++ i ) ... // \u9519\u8bef\u7684\u65b9\u5f0f QList < QString >:: const_iterator i ; for ( i = splitter -> sizes (). begin (); i != splitter -> sizes (). end (); ++ i ) ... \u5bf9\u4e8e\u90a3\u4e9b\u8fd4\u56de\u96c6\u5408\u7684 const \u6216\u975e const \u5f15\u7528\u7684\u51fd\u6570\uff0c\u5c31\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 \u53e6\u5916\uff0c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u5bf9 STL \u98ce\u683c\u904d\u5386\u5668\u9020\u6210\u7684\u53e6\u4e00\u4e2a\u5f71\u54cd\u662f\uff0c\u5f53\u4e00\u4e2a\u5bb9\u5668\u6b63\u5728\u88ab\u4e00\u4e2a\u904d\u5386\u5668\u904d\u5386\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5bf9\u8fd9\u4e2a\u5bb9\u5668\u8fdb\u884c\u62f7\u8d1d\u3002\u5982\u679c\u4f60\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u62f7\u8d1d\uff0c\u90a3\u4e48\u5c31\u5f97\u4e07\u5206\u5c0f\u5fc3\u3002\u4f8b\u5982\uff0c QVector < int > a , b ; a . resize ( 100000 ); // \u4f7f\u7528 0 \u586b\u5145\u4e00\u4e2a\u975e\u5e38\u5927\u7684 vector QVector < int >:: iterator i = a . begin (); // \u4f7f\u7528\u904d\u5386\u5668 i \u7684\u9519\u8bef\u65b9\u5f0f\uff08\u6ce8\u610f\uff0c\u6b64\u65f6\uff0ca \u4e0a\u9762\u5df2\u7ecf\u6709\u4e00\u4e2a\u6b63\u5728\u904d\u5386\u7684\u904d\u5386\u5668\uff09: b = a ; /* \u73b0\u5728\uff0c\u6211\u4eec\u7684\u4e07\u5206\u5c0f\u5fc3\u904d\u5386\u5668 i\u3002\u56e0\u4e3a\u5b83\u6307\u5411\u4e86\u5171\u4eab\u7684\u6570\u636e\u3002 \u5982\u679c\u6211\u4eec\u6267\u884c\u8bed\u53e5 *i = 4\uff0c\u6211\u4eec\u5c31\u4f1a\u6539\u53d8\u4e86\u5171\u4eab\u7684\u6570\u636e\u5b9e\u4f8b\uff08\u4e24\u4e2a vector \u90fd\u4f1a\u88ab\u6539\u53d8\uff09\u3002 \u8fd9\u91cc\u7684\u884c\u4e3a\u4e0e STL \u5bb9\u5668\u4e0d\u540c\uff0c\u56e0\u6b64\u8fd9\u79cd\u95ee\u9898\u4ec5\u51fa\u73b0\u5728 Qt \u4e2d\uff1b\u4f7f\u7528 STL \u6807\u51c6\u5bb9\u5668\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 */ a [ 0 ] = 5 ; /* \u73b0\u5728\uff0c\u5bb9\u5668 a \u88ab\u4fee\u6539\u4e86\uff0c\u5176\u5b9e\u9645\u6570\u636e\u5df2\u7ecf\u4e0e\u5171\u4eab\u6570\u636e\u4e0d\u540c\uff0c \u5373\u4f7f i \u5c31\u662f\u4ece\u5bb9\u5668 a \u521b\u5efa\u7684\u904d\u5386\u5668\uff0c\u4f46\u662f\u5b83\u6307\u5411\u7684\u6570\u636e\u4e0e a \u5e76\u4e0d\u4e00\u81f4\uff0c\u5176\u8868\u73b0\u5c31\u50cf\u662f b \u7684\u904d\u5386\u5668\u3002 \u8fd9\u91cc\u7684\u60c5\u5f62\u662f\uff1a(*i) == 0. */ b . clear (); // \u73b0\u5728\u6211\u4eec\u6e05\u7a7a b\uff0c\u6b64\u65f6\uff0c\u904d\u5386\u5668 i \u5df2\u7ecf\u4e0d\u53ef\u7528\u4e86\u3002 int j = * i ; // \u65e0\u5b9a\u4e49\u884c\u4e3a\uff01 /* \u6765\u81ea b \u7684\u6570\u636e\uff08\u4e5f\u5c31\u662f i \u6307\u5411\u7684\u90a3\u4e9b\u6570\u636e\uff09\u5df2\u7ecf\u88ab\u9500\u6bc1\u4e86\u3002 \u8fd9\u79cd\u884c\u4e3a\u5728 STL \u5bb9\u5668\u4e2d\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff08\u5728 STL \u5bb9\u5668\u4e2d\uff0c(*i) == 5\uff09\uff0c \u4f46\u662f\u4f7f\u7528 QVector \u5219\u5f88\u6709\u53ef\u80fd\u51fa\u73b0\u5d29\u6e83\u3002 */ \u867d\u7136\u8fd9\u4e2a\u4f8b\u5b50\u53ea\u6f14\u793a\u4e86 QVector \uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u9002\u7528\u4e8e\u6240\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u5bb9\u5668\u7c7b\u3002 foreach \u5173\u952e\u5b57 \u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u60f3\u8981\u904d\u5386\u96c6\u5408\u6240\u6709\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Qt \u7684 foreach \u5173\u952e\u5b57\u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u662f Qt \u7279\u6709\u7684\uff0c\u901a\u8fc7\u9884\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002C++ 11 \u4e5f\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 foreach \u5173\u952e\u5b57\uff0c\u4e0d\u8fc7\u4e0e\u6b64\u8fd8\u662f\u6709 \u533a\u522b \u7684\u3002 foreach \u7684\u8bed\u6cd5\u662f foreach (variable, container) \u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4f7f\u7528 foreach \u5bf9 QLinkedList \u8fdb\u884c\u904d\u5386\uff1a QLinkedList < QString > list ; ... QString str ; foreach ( str , list ) { qDebug () << str ; } \u8fd9\u6bb5\u4ee3\u7801\u4e0e\u4e0b\u9762\u662f\u7b49\u4ef7\u7684\uff1a QLinkedList < QString > list ; ... QLinkedListIterator < QString > i ( list ); while ( i . hasNext ()) { qDebug () << i . next (); } \u5982\u679c\u7c7b\u578b\u540d\u4e2d\u5e26\u6709\u9017\u53f7\uff0c\u6bd4\u5982 QPair<int, int> \uff0c\u6211\u4eec\u53ea\u80fd\u50cf\u4e0a\u9762\u4e00\u6837\uff0c\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528 foreach \u5173\u952e\u5b57\u3002\u5982\u679c\u6ca1\u6709\u9017\u53f7\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5728 foreach \u5173\u952e\u5b57\u4e2d\u4f7f\u7528\u65b0\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1a QLinkedList < QString > list ; ... foreach ( const QString & str , list ) { qDebug () << str ; } Qt \u4f1a\u5728 foreach \u5faa\u73af\u65f6\u81ea\u52a8\u62f7\u8d1d\u5bb9\u5668\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u904d\u5386\u65f6\u4fee\u6539\u96c6\u5408\uff0c\u5bf9\u4e8e\u6b63\u5728\u8fdb\u884c\u7684\u904d\u5386\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u5373\u4f7f\u4e0d\u4fee\u6539\u5bb9\u5668\uff0c\u62f7\u8d1d\u4e5f\u662f\u4f1a\u53d1\u751f\u7684\u3002\u4f46\u662f\u7531\u4e8e\u5b58\u5728\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff0c\u8fd9\u79cd\u62f7\u8d1d\u8fd8\u662f\u975e\u5e38\u8fc5\u901f\u7684\u3002 \u56e0\u4e3a foreach \u521b\u5efa\u4e86\u96c6\u5408\u7684\u62f7\u8d1d\uff0c\u4f7f\u7528\u96c6\u5408\u7684\u975e const \u5f15\u7528\u4e5f\u4e0d\u80fd\u5b9e\u9645\u4fee\u6539\u539f\u59cb\u96c6\u5408\uff0c\u6240\u4fee\u6539\u7684\u53ea\u662f\u8fd9\u4e2a\u62f7\u8d1d\u3002","title":"30. \u904d\u5386\u5bb9\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/30.%20%E9%81%8D%E5%8E%86%E5%AE%B9%E5%99%A8/#java","text":"Java \u98ce\u683c\u7684\u904d\u5386\u5668\u662f\u5728 Qt4 \u9996\u5148\u5f15\u5165\u7684\uff0c\u662f Qt \u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u63a8\u8350\u4f7f\u7528\u7684\u5f62\u5f0f\u3002\u8fd9\u79cd\u98ce\u683c\u6bd4\u8d77 STL \u98ce\u683c\u7684\u904d\u5386\u5668\u66f4\u65b9\u4fbf\u3002\u65b9\u4fbf\u7684\u4ee3\u4ef7\u5c31\u662f\u4e0d\u5982\u540e\u8005\u9ad8\u6548\u3002\u5b83\u4eec\u7684 API \u975e\u5e38\u7c7b\u4f3c\u4e8e Java \u7684\u904d\u5386\u5668\u7c7b\uff0c\u6545\u540d\u3002 \u6bcf\u4e00\u79cd\u5bb9\u5668\u90fd\u6709\u4e24\u79cd Java \u98ce\u683c\u7684\u904d\u5386\u5668\uff1a\u4e00\u79cd\u63d0\u4f9b\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4e00\u79cd\u63d0\u4f9b\u8bfb\u5199\u8bbf\u95ee\uff1a \u5bb9\u5668 \u53ea\u8bfb\u904d\u5386 \u8bfb\u5199\u904d\u5386 QList<T> , QQueue<T> QListIterator<T> QMutableListIterator<T> QLinkedList<T> QLinkedListIterator<T> QMutableLinkedListIterator<T> QVector<T> , QStack<T> QVectorIterator<T> QMutableVectorIterator<T> QSet<T> QSetIterator<T> QMutableSetIterator<T> QMap<Key, T>,QMultiMap<Key, T> QMapIterator<T> QMutableMapIterator<T> QHash<Key, T>,QMultiHash<Key, T> QHashIterator<T> QMutableHashIterator<T> \u8fd9\u91cc\u6211\u4eec\u53ea\u8ba8\u8bba QList \u548c QMap \u7684\u904d\u5386\u5668\u3002 QLinkedList \u3001 QVector \u548c QSet \u7684\u904d\u5386\u5668\u63a5\u53e3\u4e0e QList \u7684\u662f\u4e00\u6837\u7684\uff1b QHash \u904d\u5386\u5668\u7684\u63a5\u53e3\u5219\u540c QMap \u662f\u4e00\u6837\u7684\u3002 \u4e0d\u540c\u4e8e\u4e0b\u9762\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u7684 STL \u98ce\u683c\u7684\u904d\u5386\u5668\uff0cJava \u98ce\u683c\u7684\u904d\u5386\u5668\u6307\u5411\u7684\u662f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u6307\u5411\u5143\u7d20\u672c\u8eab\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u6307\u5411\u96c6\u5408\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u80fd\u6307\u5411\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a ![[\u904d\u5386\u5bb9\u5668_1.png]] \u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u770b\u770b\u5982\u4f55\u4f7f\u7528\u8fd9\u79cd\u904d\u5386\u5668\uff1a QList < QString > list ; list << \"A\" << \"B\" << \"C\" << \"D\" ; QListIterator < QString > i ( list ); while ( i . hasNext ()) { qDebug () << i . next (); } \u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528 list \u5bf9\u8c61\u521b\u5efa\u4e00\u4e2a\u904d\u5386\u5668\u3002\u521a\u521a\u521b\u5efa\u5b8c\u6210\u65f6\uff0c\u8be5\u904d\u5386\u5668\u4f4d\u4e8e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\uff08\u4e5f\u5c31\u662f A \u4e4b\u524d\uff09\u3002\u6211\u4eec\u901a\u8fc7\u8c03\u7528 hasNext() \u51fd\u6570\u5224\u65ad\u904d\u5386\u5668\u4e4b\u540e\u7684\u4f4d\u7f6e\u4e0a\u6709\u65e0\u5143\u7d20\u3002\u5982\u679c\u6709\uff0c\u8c03\u7528 next() \u51fd\u6570\u5c06\u904d\u5386\u5668\u8df3\u8fc7\u5176\u540e\u7684\u5143\u7d20\u3002 next() \u51fd\u6570\u8fd4\u56de\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 hasPrevious() \u548c previous() \u51fd\u6570\u6765\u4ece\u5c3e\u90e8\u5f00\u59cb\u904d\u5386\u3002 QListIterator \u662f\u53ea\u8bfb\u904d\u5386\u5668\uff0c\u4e0d\u80fd\u63d2\u5165\u6216\u8005\u5220\u9664\u6570\u636e\u3002\u5982\u679c\u9700\u8981\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 QMutableListIterator \u3002\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { if ( i . next () % 2 != 0 ) { i . remove (); } } \u8fd9\u6bb5\u4ee3\u7801\u4f7f\u7528 QMutableListIterator \u904d\u5386\u96c6\u5408\uff0c\u5982\u679c\u5176\u503c\u662f\u5947\u6570\u5219\u5c06\u5176\u5220\u9664\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\u90fd\u8981\u8c03\u7528 next() \u51fd\u6570\u3002\u6b63\u5982\u524d\u9762\u6240\u8bf4\uff0c\u5b83\u4f1a\u8df3\u8fc7\u5176\u540e\u7684\u4e00\u4e2a\u5143\u7d20\u3002 remove() \u51fd\u6570\u4f1a\u5220\u9664\u6211\u4eec\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u3002\u8c03\u7528 remove() \u51fd\u6570\u5e76\u4e0d\u4f1a\u5c06\u904d\u5386\u5668\u7f6e\u4f4d\u4e0d\u53ef\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8fde\u7eed\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u5411\u524d\u904d\u5386\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u5982\u679c\u6211\u4eec\u9700\u8981\u4fee\u6539\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\uff0c\u4f7f\u7528 setValue() \u51fd\u6570\u3002\u4f8b\u5982\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { if ( i . next () > 128 ) { i . setValue ( 128 ); } } \u5982\u540c remove() \u51fd\u6570\uff0c setValue() \u4e5f\u662f\u5bf9\u521a\u521a\u8df3\u8fc7\u7684\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u3002\u5b9e\u9645\u4e0a\uff0c next() \u51fd\u6570\u8fd4\u56de\u7684\u662f\u96c6\u5408\u5143\u7d20\u7684\u975e const \u5f15\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u8c03\u7528 setValue() \u51fd\u6570\uff1a QMutableListIterator < int > i ( list ); while ( i . hasNext ()) { i . next () *= 2 ; } QMapItrator \u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\u4f8b\u5982\uff0c\u4f7f\u7528 QMapItrator \u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u636e\u4ece QMap \u590d\u5236\u5230 QHash \uff1a QMap < int , QWidget *> map ; QHash < int , QWidget *> hash ; QMapIterator < int , QWidget *> i ( map ); while ( i . hasNext ()) { i . next (); hash . insert ( i . key (), i . value ()); }","title":"Java \u98ce\u683c\u7684\u904d\u5386\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/30.%20%E9%81%8D%E5%8E%86%E5%AE%B9%E5%99%A8/#stl","text":"STL \u98ce\u683c\u7684\u904d\u5386\u5668\u4ece Qt 2.0 \u5c31\u5f00\u59cb\u63d0\u4f9b\u3002\u8fd9\u79cd\u904d\u5386\u5668\u80fd\u591f\u517c\u5bb9 Qt \u548c STL \u7684\u901a\u7528\u7b97\u6cd5\uff0c\u5e76\u4e14\u4e3a\u901f\u5ea6\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u540c Java \u98ce\u683c\u904d\u5386\u5668\u7c7b\u4f3c\uff0cQt \u4e5f\u63d0\u4f9b\u4e86\u4e24\u79cd STL \u98ce\u683c\u7684\u904d\u5386\u5668\uff1a\u4e00\u79cd\u662f\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4e00\u79cd\u662f\u8bfb\u5199\u8bbf\u95ee\u3002\u6211\u4eec\u63a8\u8350\u5c3d\u53ef\u80fd\u4f7f\u7528\u53ea\u8bfb\u8bbf\u95ee\uff0c\u56e0\u4e3a\u5b83\u4eec\u8981\u6bd4\u8bfb\u5199\u8bbf\u95ee\u7684\u904d\u5386\u5668\u5feb\u4e00\u4e9b\u3002 \u5bb9\u5668 \u53ea\u8bfb\u904d\u5386 \u8bfb\u5199\u904d\u5386 QList<T> , QQueue<T> QList<T>::const_iterator QList<T>::iterator QLinkedList<T> QLinkedList<T>::const_iterator QLinkedList<T>::iterator QVector<T> , QStack<T> QVector<T>::const_iterator QVector<T>::iterator QSet<T> QSet<T>::const_iterator QSet<T>::iterator QMap<Key, T> , QMultiMap<Key, T> QMap<Key, T>::const_iterator QMap<Key, T>::iterator QHash<Key, T> , QMultiHash<Key, T> QHash<Key, T>::const_iterator QHash<Key, T>::iterator STL \u98ce\u683c\u7684\u904d\u5386\u5668\u5177\u6709\u7c7b\u4f3c\u6570\u7ec4\u6307\u9488\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ++ \u8fd0\u7b97\u7b26\u8ba9\u904d\u5386\u5668\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528 \u8fd0\u7b97\u7b26\u83b7\u53d6\u904d\u5386\u5668\u6240\u6307\u7684\u5143\u7d20\u3002\u5bf9\u4e8e QVector \u548c QStack \uff0c\u867d\u7136\u5b83\u4eec\u662f\u5728\u8fde\u7eed\u5185\u5b58\u533a\u5b58\u50a8\u5143\u7d20\uff0c\u904d\u5386\u5668\u7c7b\u578b\u662f typedef T \uff0c const_iterator \u7c7b\u578b\u5219\u662f typedef const T * \u3002 \u6211\u4eec\u8fd8\u662f\u4ee5 QList \u548c QMap \u4e3a\u4f8b\uff0c\u7406\u7531\u5982\u4e0a\u3002\u4e0b\u9762\u662f\u6709\u5173 QList \u7684\u76f8\u5173\u4ee3\u7801\uff1a QList < QString > list ; list << \"A\" << \"B\" << \"C\" << \"D\" ; QList < QString >:: iterator i ; for ( i = list . begin (); i != list . end (); ++ i ) { * i = ( * i ). toLower (); } \u4e0d\u540c\u4e8e Java \u98ce\u683c\u904d\u5386\u5668\uff0cSTL \u98ce\u683c\u904d\u5386\u5668\u76f4\u63a5\u6307\u5411\u5143\u7d20\u672c\u8eab\u3002\u5bb9\u5668\u7684 begin() \u51fd\u6570\u8fd4\u56de\u6307\u5411\u8be5\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u904d\u5386\u5668\uff1b end() \u51fd\u6570\u8fd4\u56de\u6307\u5411\u8be5\u5bb9\u5668 \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u5143\u7d20 \u7684\u904d\u5386\u5668\u3002 end() \u5b9e\u9645\u662f\u4e00\u4e2a\u975e\u6cd5\u4f4d\u7f6e\uff0c\u6c38\u8fdc\u4e0d\u53ef\u8fbe\u3002\u8fd9\u662f\u4e3a\u8df3\u51fa\u5faa\u73af\u505a\u7684\u4e00\u4e2a\u865a\u5143\u7d20\u3002\u5982\u679c\u96c6\u5408\u662f\u7a7a\u7684\uff0c begin() \u7b49\u4e8e end() \uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u6267\u884c\u5faa\u73af\u3002 \u4e0b\u56fe\u662f STL \u98ce\u683c\u904d\u5386\u5668\u7684\u793a\u610f\u56fe\uff1a ![[\u904d\u5386\u5bb9\u5668_2.png]] \u6211\u4eec\u4f7f\u7528 const_iterator \u8fdb\u884c\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a QList < QString >:: const_iterator i ; for ( i = list . constBegin (); i != list . constEnd (); ++ i ) { qDebug () << * i ; } QMap \u548c QHash \u7684\u904d\u5386\u5668\uff0c* \u8fd0\u7b97\u7b26\u8fd4\u56de\u96c6\u5408\u952e\u503c\u5bf9\u3002\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u6253\u5370\u51fa QMap \u7684\u6240\u6709\u5143\u7d20\uff1a QMap < int , int > map ; QMap < int , int >:: const_iterator i ; for ( i = map . constBegin (); i != map . constEnd (); ++ i ) { qDebug () << i . key () << \":\" << i . value (); } \u7531\u4e8e\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff08\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u4ecb\u7ecd\u8be5\u90e8\u5206\u5185\u5bb9\uff09\uff0c\u5373\u4f7f\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u503c\u4e5f\u4e0d\u4f1a\u6709\u5f88\u5927\u7684\u4ee3\u4ef7\u3002Qt API \u5305\u542b\u4e86\u5f88\u591a\u4ee5\u503c\u7684\u5f62\u5f0f\u8fd4\u56de QList \u6216 QStringList \u7684\u51fd\u6570\uff08\u4f8b\u5982 QSplitter::sizes() \uff09\u3002\u5982\u679c\u4f60\u5e0c\u671b\u4f7f\u7528 STL \u98ce\u683c\u7684\u904d\u5386\u5668\u904d\u5386\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u5e94\u8be5\u4f7f\u7528\u904d\u5386\u5668\u904d\u5386\u5bb9\u5668\u7684\u62f7\u8d1d\uff0c\u4f8b\u5982\uff1a // \u6b63\u786e\u7684\u65b9\u5f0f const QList < QString > sizes = splitter -> sizes (); QList < QString >:: const_iterator i ; for ( i = sizes . begin (); i != sizes . end (); ++ i ) ... // \u9519\u8bef\u7684\u65b9\u5f0f QList < QString >:: const_iterator i ; for ( i = splitter -> sizes (). begin (); i != splitter -> sizes (). end (); ++ i ) ... \u5bf9\u4e8e\u90a3\u4e9b\u8fd4\u56de\u96c6\u5408\u7684 const \u6216\u975e const \u5f15\u7528\u7684\u51fd\u6570\uff0c\u5c31\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 \u53e6\u5916\uff0c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u5bf9 STL \u98ce\u683c\u904d\u5386\u5668\u9020\u6210\u7684\u53e6\u4e00\u4e2a\u5f71\u54cd\u662f\uff0c\u5f53\u4e00\u4e2a\u5bb9\u5668\u6b63\u5728\u88ab\u4e00\u4e2a\u904d\u5386\u5668\u904d\u5386\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u5bf9\u8fd9\u4e2a\u5bb9\u5668\u8fdb\u884c\u62f7\u8d1d\u3002\u5982\u679c\u4f60\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u62f7\u8d1d\uff0c\u90a3\u4e48\u5c31\u5f97\u4e07\u5206\u5c0f\u5fc3\u3002\u4f8b\u5982\uff0c QVector < int > a , b ; a . resize ( 100000 ); // \u4f7f\u7528 0 \u586b\u5145\u4e00\u4e2a\u975e\u5e38\u5927\u7684 vector QVector < int >:: iterator i = a . begin (); // \u4f7f\u7528\u904d\u5386\u5668 i \u7684\u9519\u8bef\u65b9\u5f0f\uff08\u6ce8\u610f\uff0c\u6b64\u65f6\uff0ca \u4e0a\u9762\u5df2\u7ecf\u6709\u4e00\u4e2a\u6b63\u5728\u904d\u5386\u7684\u904d\u5386\u5668\uff09: b = a ; /* \u73b0\u5728\uff0c\u6211\u4eec\u7684\u4e07\u5206\u5c0f\u5fc3\u904d\u5386\u5668 i\u3002\u56e0\u4e3a\u5b83\u6307\u5411\u4e86\u5171\u4eab\u7684\u6570\u636e\u3002 \u5982\u679c\u6211\u4eec\u6267\u884c\u8bed\u53e5 *i = 4\uff0c\u6211\u4eec\u5c31\u4f1a\u6539\u53d8\u4e86\u5171\u4eab\u7684\u6570\u636e\u5b9e\u4f8b\uff08\u4e24\u4e2a vector \u90fd\u4f1a\u88ab\u6539\u53d8\uff09\u3002 \u8fd9\u91cc\u7684\u884c\u4e3a\u4e0e STL \u5bb9\u5668\u4e0d\u540c\uff0c\u56e0\u6b64\u8fd9\u79cd\u95ee\u9898\u4ec5\u51fa\u73b0\u5728 Qt \u4e2d\uff1b\u4f7f\u7528 STL \u6807\u51c6\u5bb9\u5668\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 */ a [ 0 ] = 5 ; /* \u73b0\u5728\uff0c\u5bb9\u5668 a \u88ab\u4fee\u6539\u4e86\uff0c\u5176\u5b9e\u9645\u6570\u636e\u5df2\u7ecf\u4e0e\u5171\u4eab\u6570\u636e\u4e0d\u540c\uff0c \u5373\u4f7f i \u5c31\u662f\u4ece\u5bb9\u5668 a \u521b\u5efa\u7684\u904d\u5386\u5668\uff0c\u4f46\u662f\u5b83\u6307\u5411\u7684\u6570\u636e\u4e0e a \u5e76\u4e0d\u4e00\u81f4\uff0c\u5176\u8868\u73b0\u5c31\u50cf\u662f b \u7684\u904d\u5386\u5668\u3002 \u8fd9\u91cc\u7684\u60c5\u5f62\u662f\uff1a(*i) == 0. */ b . clear (); // \u73b0\u5728\u6211\u4eec\u6e05\u7a7a b\uff0c\u6b64\u65f6\uff0c\u904d\u5386\u5668 i \u5df2\u7ecf\u4e0d\u53ef\u7528\u4e86\u3002 int j = * i ; // \u65e0\u5b9a\u4e49\u884c\u4e3a\uff01 /* \u6765\u81ea b \u7684\u6570\u636e\uff08\u4e5f\u5c31\u662f i \u6307\u5411\u7684\u90a3\u4e9b\u6570\u636e\uff09\u5df2\u7ecf\u88ab\u9500\u6bc1\u4e86\u3002 \u8fd9\u79cd\u884c\u4e3a\u5728 STL \u5bb9\u5668\u4e2d\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff08\u5728 STL \u5bb9\u5668\u4e2d\uff0c(*i) == 5\uff09\uff0c \u4f46\u662f\u4f7f\u7528 QVector \u5219\u5f88\u6709\u53ef\u80fd\u51fa\u73b0\u5d29\u6e83\u3002 */ \u867d\u7136\u8fd9\u4e2a\u4f8b\u5b50\u53ea\u6f14\u793a\u4e86 QVector \uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u9002\u7528\u4e8e\u6240\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u5bb9\u5668\u7c7b\u3002","title":"STL \u98ce\u683c\u7684\u904d\u5386\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/30.%20%E9%81%8D%E5%8E%86%E5%AE%B9%E5%99%A8/#foreach","text":"\u5982\u679c\u6211\u4eec\u4ec5\u4ec5\u60f3\u8981\u904d\u5386\u96c6\u5408\u6240\u6709\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Qt \u7684 foreach \u5173\u952e\u5b57\u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u662f Qt \u7279\u6709\u7684\uff0c\u901a\u8fc7\u9884\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002C++ 11 \u4e5f\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 foreach \u5173\u952e\u5b57\uff0c\u4e0d\u8fc7\u4e0e\u6b64\u8fd8\u662f\u6709 \u533a\u522b \u7684\u3002 foreach \u7684\u8bed\u6cd5\u662f foreach (variable, container) \u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4f7f\u7528 foreach \u5bf9 QLinkedList \u8fdb\u884c\u904d\u5386\uff1a QLinkedList < QString > list ; ... QString str ; foreach ( str , list ) { qDebug () << str ; } \u8fd9\u6bb5\u4ee3\u7801\u4e0e\u4e0b\u9762\u662f\u7b49\u4ef7\u7684\uff1a QLinkedList < QString > list ; ... QLinkedListIterator < QString > i ( list ); while ( i . hasNext ()) { qDebug () << i . next (); } \u5982\u679c\u7c7b\u578b\u540d\u4e2d\u5e26\u6709\u9017\u53f7\uff0c\u6bd4\u5982 QPair<int, int> \uff0c\u6211\u4eec\u53ea\u80fd\u50cf\u4e0a\u9762\u4e00\u6837\uff0c\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528 foreach \u5173\u952e\u5b57\u3002\u5982\u679c\u6ca1\u6709\u9017\u53f7\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5728 foreach \u5173\u952e\u5b57\u4e2d\u4f7f\u7528\u65b0\u7684\u5bf9\u8c61\uff0c\u4f8b\u5982\uff1a QLinkedList < QString > list ; ... foreach ( const QString & str , list ) { qDebug () << str ; } Qt \u4f1a\u5728 foreach \u5faa\u73af\u65f6\u81ea\u52a8\u62f7\u8d1d\u5bb9\u5668\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u904d\u5386\u65f6\u4fee\u6539\u96c6\u5408\uff0c\u5bf9\u4e8e\u6b63\u5728\u8fdb\u884c\u7684\u904d\u5386\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u5373\u4f7f\u4e0d\u4fee\u6539\u5bb9\u5668\uff0c\u62f7\u8d1d\u4e5f\u662f\u4f1a\u53d1\u751f\u7684\u3002\u4f46\u662f\u7531\u4e8e\u5b58\u5728\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff0c\u8fd9\u79cd\u62f7\u8d1d\u8fd8\u662f\u975e\u5e38\u8fc5\u901f\u7684\u3002 \u56e0\u4e3a foreach \u521b\u5efa\u4e86\u96c6\u5408\u7684\u62f7\u8d1d\uff0c\u4f7f\u7528\u96c6\u5408\u7684\u975e const \u5f15\u7528\u4e5f\u4e0d\u80fd\u5b9e\u9645\u4fee\u6539\u539f\u59cb\u96c6\u5408\uff0c\u6240\u4fee\u6539\u7684\u53ea\u662f\u8fd9\u4e2a\u62f7\u8d1d\u3002","title":"foreach \u5173\u952e\u5b57"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/31.%20%E9%9A%90%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB/","text":"Qt \u4e2d\u8bb8\u591a C++ \u7c7b\u4f7f\u7528\u4e86\u9690\u5f0f\u6570\u636e\u5171\u4eab\u6280\u672f\uff0c\u6765\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u548c\u6700\u5c0f\u5316\u62f7\u8d1d\u65f6\u7684\u8d44\u6e90\u6d88\u8017\u3002\u5f53\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5177\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u7c7b\u5373\u5b89\u5168\u53c8\u9ad8\u6548\u3002\u5728\u6570\u636e\u4f20\u9012\u65f6\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u4f20\u9012\u4e86\u6570\u636e\u7684\u6307\u9488\uff08\u8fd9\u4e00\u5207\u90fd\u662f\u9690\u542b\u5e2e\u4f60\u5b8c\u6210\u7684\uff09\uff0c\u800c\u53ea\u6709\u5728\u51fd\u6570\u53d1\u751f\u9700\u8981\u5199\u5165\u7684\u60c5\u51b5\u65f6\uff0c\u6570\u636e\u624d\u4f1a\u88ab\u62f7\u8d1d\uff08\u4e5f\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684\u5199\u65f6\u590d\u5236\uff09\u3002 \u5177\u6709\u6570\u636e\u5171\u4eab\u80fd\u529b\u7684\u7c7b\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5411\u5171\u4eab\u6570\u636e\u5757\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u6570\u636e\u5757\u5305\u542b\u4e86\u6570\u636e\u672c\u8eab\u4ee5\u53ca\u6570\u636e\u7684\u5f15\u7528\u8ba1\u6570\u3002\u5f53\u5171\u4eab\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u88ab\u8bbe\u7f6e\u4e3a 1\u3002\u5f53\u65b0\u7684\u5bf9\u8c61\u5f15\u7528\u5230\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u589e\u52a0\uff1b\u5f53\u5bf9\u8c61\u5f15\u7528\u4e0d\u518d\u5f15\u7528\u6570\u636e\u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\u3002\u5f53\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a 0 \u65f6\uff0c\u5171\u4eab\u6570\u636e\u88ab\u5220\u9664\u3002 \u5728\u6211\u4eec\u64cd\u4f5c\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5b9e\u9645\u6709\u4e24\u79cd\u62f7\u8d1d\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1a\u6211\u4eec\u901a\u5e38\u79f0\u5176\u4e3a\u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d\u3002\u6df1\u62f7\u8d1d\u610f\u5473\u7740\u8981\u91cd\u65b0\u6784\u9020\u4e00\u4e2a\u5168\u65b0\u7684\u5bf9\u8c61\uff1b\u6d45\u62f7\u8d1d\u5219\u4ec5\u4ec5\u590d\u5236\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u90a3\u4e2a\u6307\u5411\u5171\u4eab\u6570\u636e\u5757\u7684\u6307\u9488\u3002\u6df1\u62f7\u8d1d\u5bf9\u5185\u5b58\u548c CPU \u8d44\u6e90\u90fd\u662f\u5f88\u6602\u8d35\u7684\uff1b\u6d45\u62f7\u8d1d\u5219\u975e\u5e38\u5feb\u901f\uff0c\u56e0\u4e3a\u5b83\u4ec5\u4ec5\u662f\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u6307\u9488\uff0c\u7136\u540e\u5c06\u5f15\u7528\u8ba1\u6570\u52a0 1\u3002\u5177\u6709\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u5bf9\u8c61\uff0c\u5176\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f7f\u7528\u7684\u662f\u6d45\u62f7\u8d1d\u6765\u5b9e\u73b0\u7684\u3002 \u8fd9\u79cd\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u597d\u5904\u662f\uff0c\u7a0b\u5e8f\u4e0d\u9700\u8981\u62e5\u6709\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u6570\u636e\uff0c\u51cf\u5c11\u6570\u636e\u62f7\u8d1d\u7684\u9700\u6c42\u3002\u91cd\u590d\u6570\u636e\u7684\u4ee3\u4ef7\u662f\u964d\u4f4e\u5185\u5b58\u4f7f\u7528\u7387\uff08\u56e0\u4e3a\u5185\u5b58\u5b58\u50a8\u4e86\u66f4\u591a\u91cd\u590d\u7684\u6570\u636e\uff09\u3002\u901a\u8fc7\u6570\u636e\u5171\u4eab\uff0c\u5bf9\u8c61\u53ef\u4ee5\u66f4\u7b80\u5355\u5730\u4f5c\u4e3a\u503c\u6765\u4f20\u9012\u4ee5\u53ca\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u3002 \u9690\u5f0f\u6570\u636e\u5171\u4eab\u662f\u5728\u5e95\u5c42\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u4eba\u5458\u65e0\u9700\u5173\u5fc3\u3002\u8fd9\u4e5f\u662f\u201c\u9690\u5f0f\u201d\u4e00\u8bcd\u7684\u542b\u4e49\u3002\u4ece Qt4 \u5f00\u59cb\uff0c\u5373\u4f7f\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u4e5f\u662f\u8d77\u4f5c\u7528\u7684\u3002\u5728\u5f88\u591a\u4eba\u770b\u6765\uff0c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u548c\u591a\u7ebf\u7a0b\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u8fd9\u662f\u7531\u5f15\u7528\u8ba1\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\u51b3\u5b9a\u7684\u3002\u4f46\u662f\uff0cQt \u4f7f\u7528\u4e86\u539f\u5b50\u6027\u7684\u5f15\u7528\u8ba1\u6570\u6765\u907f\u514d\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u53ef\u80fd\u51fa\u73b0\u7684\u6267\u884c\u987a\u5e8f\u6253\u65ad\u7684\u884c\u4e3a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u539f\u5b50\u5f15\u7528\u8ba1\u6570\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u8fd8\u662f\u9700\u8981\u6070\u5f53\u7684\u9501\u673a\u5236\u3002\u8fd9\u79cd\u89c2\u70b9\u5bf9\u6240\u6709\u7c7b\u4f3c\u7684\u573a\u5408\u90fd\u662f\u9002\u7528\u7684\u3002\u539f\u5b50\u5f15\u7528\u8ba1\u6570\u80fd\u591f\u4fdd\u8bc1\u7684\u662f\uff0c\u7ebf\u7a0b\u80af\u5b9a\u64cd\u4f5c\u81ea\u5df1\u7684\u6570\u636e\uff0c\u7ebf\u7a0b\u81ea\u5df1\u7684\u6570\u636e\u662f\u5b89\u5168\u7684\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4ece Qt4 \u5f00\u59cb\uff0c\u4f60\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u7c7b\uff0c\u5373\u4f7f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 QSharedData \u548c QSharedDataPointer \u7c7b\u5b9e\u73b0\u81ea\u5df1\u7684\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7c7b\u3002 \u5f53\u5bf9\u8c61\u5373\u5c06\u88ab\u4fee\u6539\uff0c\u5e76\u4e14\u5176\u5f15\u7528\u8ba1\u6570\u5927\u4e8e 1 \u65f6\uff0c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u81ea\u52a8\u5c06\u6570\u636e\u4ece\u5171\u4eab\u5757\u4e2d\u62ff\u51fa\u3002\u9690\u5f0f\u5171\u4eab\u7c7b\u5fc5\u987b\u63a7\u5236\u5176\u5185\u90e8\u6570\u636e\uff0c\u5728\u4efb\u4f55\u4fee\u6539\u5176\u6570\u636e\u7684\u51fd\u6570\u4e2d\uff0c\u5c06\u6570\u636e\u81ea\u52a8\u53d6\u51fa\u3002 QPen \u4f7f\u7528\u4e86\u9690\u5f0f\u6570\u636e\u5171\u4eab\u6280\u672f\uff0c\u6211\u4eec\u4ee5 QPen \u4e3a\u4f8b\uff0c\u770b\u770b\u9690\u5f0f\u6570\u636e\u5171\u4eab\u662f\u5982\u4f55\u8d77\u4f5c\u7528\u7684\uff1a void QPen::setStyle ( Qt :: PenStyle style ) { detach (); // \u4ece\u5171\u4eab\u533a\u53d6\u51fa\u6570\u636e d -> style = style ; // \u8bbe\u7f6e\u6570\u636e\uff08\u66f4\u65b0\uff09 } void QPen::detach () { if ( d -> ref != 1 ) { ... // \u6267\u884c\u6df1\u62f7\u8d1d } } \u51e1\u662f\u652f\u6301\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684 Qt \u7c7b\u90fd\u652f\u6301\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\u7528\u6237\u751a\u81f3\u4e0d\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u5176\u5b9e\u5df2\u7ecf\u5171\u4eab\u3002\u56e0\u6b64\uff0c\u4f60\u5e94\u8be5\u628a\u8fd9\u6837\u7684\u7c7b\u5f53\u4f5c\u666e\u901a\u7c7b\u4e00\u6837\uff0c\u800c\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u5176\u5171\u4eab\u7684\u7279\u8272\u4f5c\u4e00\u4e9b\u201c\u5c0f\u52a8\u4f5c\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u7c7b\u7684\u884c\u4e3a\u540c\u666e\u901a\u7c7b\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u6dfb\u52a0\u4e86\u53ef\u80fd\u7684\u5171\u4eab\u6570\u636e\u7684\u4f18\u70b9\u3002\u56e0\u6b64\uff0c\u4f60\u5927\u53ef\u4ee5\u4f7f\u7528\u6309\u503c\u4f20\u53c2\uff0c\u800c\u65e0\u987b\u62c5\u5fc3\u6570\u636e\u62f7\u8d1d\u5e26\u6765\u7684\u6027\u80fd\u95ee\u9898\u3002\u4f8b\u5982\uff1a QPixmap p1 , p2 ; p1 . load ( \"image.bmp\" ); p2 = p1 ; // p1 \u548c p2 \u5171\u4eab\u6570\u636e QPainter paint ; paint . begin ( & p2 ); // \u4ece\u6b64\uff0cp2 \u4e0e p1 \u5206\u9053\u626c\u9573 paint . drawText ( 0 , 50 , \"Hi\" ); paint . end (); \u4e0a\u4f8b\u4e2d\uff0cp1 \u548c p2 \u5728 QPainter::begin() \u4e00\u884c\u4e4b\u524d\u90fd\u662f\u5171\u4eab\u6570\u636e\u7684\uff0c\u76f4\u5230\u8fd9\u4e00\u8bed\u53e5\u3002\u56e0\u4e3a\u8be5\u8bed\u53e5\u5f00\u59cb\uff0cp2 \u5c31\u8981\u88ab\u4fee\u6539\u4e86\u3002 \u6ce8\u610f\uff0c\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u4e0d\u8981\u5728\u4f7f\u7528\u4e86\u9690\u5f0f\u6570\u636e\u5171\u4eab\u7684\u5bb9\u5668\u4e0a\uff0c\u5728\u6709\u975e const STL \u98ce\u683c\u7684\u904d\u5386\u5668\u6b63\u5728\u904d\u5386\u65f6\u590d\u5236\u5bb9\u5668\u3002\u53e6\u5916\u8fd8\u6709\u4e00\u70b9\uff0c\u5bf9\u4e8e QList \u6216\u8005 QVector \uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 at() \u51fd\u6570\u800c\u4e0d\u662f [] \u64cd\u4f5c\u7b26\u8fdb\u884c\u53ea\u8bfb\u8bbf\u95ee\u3002\u539f\u56e0\u662f [] \u64cd\u4f5c\u7b26\u65e2\u53ef\u4ee5\u662f\u5de6\u503c\u53c8\u53ef\u4ee5\u662f\u53f3\u503c\uff0c\u8fd9\u8ba9 Qt \u5bb9\u5668\u5f88\u96be\u5224\u65ad\u5230\u5e95\u662f\u5de6\u503c\u8fd8\u662f\u53f3\u503c\uff0c\u8fd9\u610f\u5473\u7740\u65e0\u6cd5\u8fdb\u884c\u9690\u5f0f\u6570\u636e\u5171\u4eab\uff1b\u800c at() \u51fd\u6570\u4e0d\u80fd\u4f5c\u5de6\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u884c\u9690\u5f0f\u6570\u636e\u5171\u4eab\u3002\u53e6\u5916\u4e00\u70b9\u662f\uff0c\u5bf9\u4e8e begin() \uff0c end() \u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u975e const \u904d\u5386\u5668\uff0c\u7531\u4e8e\u6570\u636e\u53ef\u80fd\u6539\u53d8\uff0c\u56e0\u6b64 Qt \u4f1a\u8fdb\u884c\u6df1\u590d\u5236\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e00\u70b9\uff0c\u8981\u5c3d\u53ef\u80fd\u4f7f\u7528 const_iterator \u3001 constBegin() \u548c constEnd() \u3002","title":"31. \u9690\u5f0f\u6570\u636e\u5171\u4eab"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/32.%20model%20view%20%E6%9E%B6%E6%9E%84/","text":"\u6709\u65f6\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u9700\u8981\u663e\u793a\u5927\u91cf\u6570\u636e\uff0c\u6bd4\u5982\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u663e\u793a\u5728\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u754c\u9762\u4e2d\u3002\u65e9\u671f\u7684 Qt \u8981\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5728\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d\u4fdd\u5b58\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u6bd4\u5982\u4e00\u4e2a\u5217\u8868\u3002\u6211\u4eec\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u884c\u67e5\u627e\u3001\u63d2\u5165\u7b49\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u628a\u4fee\u6539\u7684\u5730\u65b9\u5199\u56de\uff0c\u7136\u540e\u5237\u65b0\u7ec4\u4ef6\u8fdb\u884c\u663e\u793a\u3002\u8fd9\u4e2a\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e5f\u5f88\u6e05\u6670\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u5c31\u663e\u5f97\u82cd\u767d\u65e0\u529b\u3002\u6bd4\u5982\uff0c\u5728\u4e00\u4e2a\u5927\u578b\u7cfb\u7edf\u4e2d\uff0c\u4f60\u7684\u6570\u636e\u53ef\u80fd\u5f88\u5927\uff0c\u5168\u90e8\u5b58\u5165\u4e00\u4e2a\u7ec4\u4ef6\u7684\u6570\u636e\u5bf9\u8c61\u4e2d\uff0c\u6548\u7387\u4f1a\u5f88\u4f4e\uff0c\u5e76\u4e14\u8fd9\u6837\u7684\u8bbe\u8ba1\u4e5f\u5f88\u96be\u5728\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002\u5982\u679c\u4f60\u8981\u51e0\u4e2a\u7ec4\u4ef6\u5171\u4eab\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u8981\u4e48\u4f60\u5c31\u8981\u7528\u5b58\u53d6\u51fd\u6570\u516c\u5f00\u8fd9\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u8981\u4e48\u4f60\u5c31\u5fc5\u987b\u628a\u8fd9\u4e2a\u6570\u636e\u5bf9\u8c61\u653e\u8fdb\u4e0d\u540c\u7684\u7ec4\u4ef6\u5206\u522b\u8fdb\u884c\u7ef4\u62a4\u3002 Smalltalk \u8bed\u8a00\u53d1\u660e\u4e86\u4e00\u79cd\u5d2d\u65b0\u7684\u5b9e\u73b0\uff0c\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u5c31\u662f\u8457\u540d\u7684 MVC \u6a21\u578b\u3002\u5bf9\u8fd9\u4e2a\u6a21\u578b\u65e0\u9700\u591a\u8a00\u3002MVC \u662f Model-View-Controller \u7684\u7b80\u5199\uff0c\u5373\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u3002\u5728 MVC \u4e2d\uff0c\u6a21\u578b\u8d1f\u8d23\u83b7\u53d6\u9700\u8981\u663e\u793a\u7684\u6570\u636e\uff0c\u5e76\u4e14\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u4fee\u6539\u3002\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u90fd\u6709\u5b83\u81ea\u5df1\u5bf9\u5e94\u7684\u6a21\u578b\uff0c\u4f46\u662f\u8fd9\u4e9b\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u76f8\u540c\u7684 API\uff0c\u7528\u4e8e\u9690\u85cf\u5185\u90e8\u5b9e\u73b0\u3002\u89c6\u56fe\u7528\u4e8e\u5c06\u6a21\u578b\u6570\u636e\u663e\u793a\u7ed9\u7528\u6237\u3002\u5bf9\u4e8e\u6570\u91cf\u5f88\u5927\u7684\u6570\u636e\uff0c\u6216\u8bb8\u53ea\u663e\u793a\u4e00\u5c0f\u90e8\u5206\uff0c\u8fd9\u6837\u5c31\u80fd\u5f88\u597d\u7684\u63d0\u9ad8\u6027\u80fd\u3002\u63a7\u5236\u5668\u662f\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u5a92\u4ecb\uff0c\u5c06\u7528\u6237\u7684\u52a8\u4f5c\u89e3\u6790\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u67e5\u627e\u6570\u636e\u6216\u8005\u4fee\u6539\u6570\u636e\uff0c\u7136\u540e\u8f6c\u53d1\u7ed9\u6a21\u578b\u6267\u884c\uff0c\u6700\u540e\u518d\u5c06\u6a21\u578b\u4e2d\u9700\u8981\u88ab\u663e\u793a\u7684\u6570\u636e\u76f4\u63a5\u8f6c\u53d1\u7ed9\u89c6\u56fe\u8fdb\u884c\u663e\u793a\u3002MVC \u7684\u6838\u5fc3\u601d\u60f3\u662f\u5206\u5c42\uff0c\u4e0d\u540c\u7684\u5c42\u5e94\u7528\u4e0d\u540c\u7684\u529f\u80fd\u3002 Qt 4 \u5f00\u59cb\uff0c\u5f15\u5165\u4e86\u7c7b\u4f3c\u7684 model/view \u67b6\u6784\u6765\u5904\u7406\u6570\u636e\u548c\u9762\u5411\u6700\u7ec8\u7528\u6237\u7684\u663e\u793a\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5f53 MVC \u7684 V \u548c C \u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86 model/view \u67b6\u6784\u3002\u8fd9\u79cd\u67b6\u6784\u4f9d\u7136\u5c06\u6570\u636e\u548c\u754c\u9762\u5206\u79bb\uff0c\u4f46\u662f\u6846\u67b6\u66f4\u4e3a\u7b80\u5355\u3002\u540c\u6837\uff0c\u8fd9\u79cd\u67b6\u6784\u4e5f\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u754c\u9762\u663e\u793a\u540c\u4e00\u6570\u636e\uff0c\u4e5f\u80fd\u591f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u65b0\u7684\u663e\u793a\u754c\u9762\u3002\u4e3a\u4e86\u5904\u7406\u7528\u6237\u8f93\u5165\uff0c\u6211\u4eec\u8fd8\u5f15\u5165\u4e86\u59d4\u6258\uff08delegate\uff09\u3002\u5f15\u5165\u59d4\u6258\u7684\u597d\u5904\u662f\uff0c\u6211\u4eec\u80fd\u591f\u81ea\u5b9a\u4e49\u6570\u636e\u9879\u7684\u6e32\u67d3\u548c\u7f16\u8f91\u3002 ![[model_view.png]] \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6a21\u578b\u4e0e\u6570\u636e\u6e90\u8fdb\u884c\u4ea4\u4e92\uff0c\u4e3a\u6846\u67b6\u4e2d\u5176\u5b83\u7ec4\u4ef6\u63d0\u4f9b\u63a5\u53e3\u3002\u8fd9\u79cd\u4ea4\u4e92\u7684\u672c\u8d28\u5728\u4e8e\u6570\u636e\u6e90\u7684\u7c7b\u578b\u4ee5\u53ca\u6a21\u578b\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u89c6\u56fe\u4ece\u6a21\u578b\u83b7\u53d6\u6a21\u578b\u7d22\u5f15\uff0c\u8fd9\u79cd\u7d22\u5f15\u5c31\u662f\u6570\u636e\u9879\u7684\u5f15\u7528\u3002\u901a\u8fc7\u5c06\u8fd9\u4e2a\u6a21\u578b\u7d22\u5f15\u53cd\u5411\u4f20\u7ed9\u6a21\u578b\uff0c\u89c6\u56fe\u53c8\u53ef\u4ee5\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\u3002\u5728\u6807\u51c6\u89c6\u56fe\u4e2d\uff0c\u59d4\u6258\u6e32\u67d3\u6570\u636e\u9879\uff1b\u5728\u9700\u8981\u7f16\u8f91\u6570\u636e\u65f6\uff0c\u59d4\u6258\u4f7f\u7528\u76f4\u63a5\u6a21\u578b\u7d22\u5f15\u76f4\u63a5\u4e0e\u6a21\u578b\u8fdb\u884c\u4ea4\u4e92\u3002 \u603b\u7684\u6765\u8bf4\uff0cmodel/view \u67b6\u6784\u5c06\u4f20\u7edf\u7684 MV \u6a21\u578b\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\u6a21\u578b\u3001\u89c6\u56fe\u548c\u59d4\u6258\u3002\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u90fd\u7531\u4e00\u4e2a\u62bd\u8c61\u7c7b\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u62bd\u8c61\u7c7b\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u516c\u5171\u63a5\u53e3\u4ee5\u53ca\u4e00\u4e9b\u9ed8\u8ba4\u5b9e\u73b0\u3002\u6a21\u578b\u3001\u89c6\u56fe\u548c\u59d4\u6258\u5219\u4f7f\u7528\u4fe1\u53f7\u69fd\u8fdb\u884c\u4ea4\u4e92\uff1a \u6765\u81ea\u6a21\u578b\u7684\u4fe1\u53f7\u901a\u77e5\u89c6\u56fe\uff0c\u5176\u5e95\u5c42\u7ef4\u62a4\u7684\u6570\u636e\u53d1\u751f\u4e86\u6539\u53d8\uff1b \u6765\u81ea\u89c6\u56fe\u7684\u4fe1\u53f7\u63d0\u4f9b\u4e86\u6709\u5173\u7528\u6237\u4e0e\u754c\u9762\u8fdb\u884c\u4ea4\u4e92\u7684\u4fe1\u606f\uff1b \u6765\u81ea\u59d4\u6258\u7684\u4fe1\u53f7\u5728\u7528\u6237\u7f16\u8f91\u6570\u636e\u9879\u65f6\u4f7f\u7528\uff0c\u7528\u4e8e\u544a\u77e5\u6a21\u578b\u548c\u89c6\u56fe\u7f16\u8f91\u5668\u7684\u72b6\u6001\u3002\u6240\u6709\u7684\u6a21\u578b\u90fd\u662f QAbstractItemModel \u7684\u5b50\u7c7b\u3002\u8fd9\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u4f9b\u89c6\u56fe\u548c\u59d4\u6258\u8bbf\u95ee\u6570\u636e\u7684\u63a5\u53e3\u3002\u6a21\u578b\u5e76\u4e0d\u5b58\u50a8\u6570\u636e\u672c\u8eab\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\u3001\u53e6\u5916\u7684\u7c7b\u4e2d\u3001\u6587\u4ef6\u4e2d\u3001\u6570\u636e\u5e93\u4e2d\uff0c\u6216\u8005\u5176\u4ed6\u4f60\u6240\u80fd\u60f3\u5230\u7684\u4e1c\u897f\u4e2d\u3002 QAbstractItemModel \u63d0\u4f9b\u7684\u63a5\u53e3\u8db3\u591f\u7075\u6d3b\uff0c\u8db3\u4ee5\u5e94\u4ed8\u4ee5\u8868\u683c\u3001\u5217\u8868\u548c\u6811\u7684\u5f62\u5f0f\u663e\u793a\u7684\u6570\u636e\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u9700\u8981\u4e3a\u5217\u8868\u6216\u8005\u8868\u683c\u8bbe\u8ba1\u53e6\u5916\u7684\u6a21\u578b\uff0c\u76f4\u63a5\u7ee7\u627f QAbstractListModel \u548c QAbstractTableModel \u7c7b\u53ef\u80fd\u66f4\u597d\u4e00\u4e9b\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u7c7b\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5f88\u591a\u901a\u7528\u51fd\u6570\u3002 Qt \u5185\u7f6e\u4e86\u8bb8\u591a\u6807\u51c6\u6a21\u578b\uff1a - QStringListModel \uff1a\u5b58\u50a8\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u5217\u8868\u3002 - QStandardItemModel \uff1a\u53ef\u4ee5\u7528\u4e8e\u6811\u7ed3\u6784\u7684\u5b58\u50a8\uff0c\u63d0\u4f9b\u4e86\u5c42\u6b21\u6570\u636e\u3002 - QFileSystemModel \uff1a\u672c\u5730\u7cfb\u7edf\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u4fe1\u606f\u3002 - QSqlQueryModel \u3001 QSqlTableModel \u548c QSqlRelationalTableModel \uff1a\u5b58\u53d6\u6570\u636e\u5e93\u6570\u636e\u3002\u6b63\u5982\u4e0a\u9762\u6240\u8bf4\uff0c\u5982\u679c\u8fd9\u4e9b\u6807\u51c6\u6a21\u578b\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u8981\uff0c\u5c31\u5fc5\u987b\u7ee7\u627f QAbstractItemModel \u3001 QAbstractListModel \u6216\u8005 QAbstractTableModel \uff0c\u521b\u5efa\u81ea\u5df1\u7684\u6a21\u578b\u7c7b\u3002 Qt \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9884\u5b9a\u4e49\u597d\u7684\u89c6\u56fe\uff1a QListView \u7528\u4e8e\u663e\u793a\u5217\u8868\uff0c QTableView \u7528\u4e8e\u663e\u793a\u8868\u683c\uff0c QTreeView \u7528\u4e8e\u663e\u793a\u5c42\u6b21\u6570\u636e\u3002\u8fd9\u4e9b\u7c7b\u90fd\u662f QAbstractItemView \u7684\u5b50\u7c7b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u8981\u521b\u5efa\u65b0\u7684\u89c6\u56fe\u7c7b\uff0c\u5219\u53ef\u4ee5\u7ee7\u627f QAbstractItemView \u3002 QAbstractItemDelegate \u5219\u662f\u6240\u6709\u59d4\u6258\u7684\u62bd\u8c61\u57fa\u7c7b\u3002\u81ea Qt 4.4 \u4ee5\u6765\uff0c\u9ed8\u8ba4\u7684\u59d4\u6258\u5b9e\u73b0\u662f QStyledItemDelegate \u3002\u4f46\u662f\uff0c QStyledItemDelegate \u548c QItemDelegate \u90fd\u53ef\u4ee5\u4f5c\u4e3a\u89c6\u56fe\u7684\u7f16\u8f91\u5668\uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c QStyledItemDelegate \u4f7f\u7528\u5f53\u524d\u6837\u5f0f\u8fdb\u884c\u7ed8\u5236\u3002\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u59d4\u6258\u65f6\uff0c\u63a8\u8350\u4f7f\u7528 QStyledItemDelegate \u4f5c\u4e3a\u57fa\u7c7b\uff0c\u6216\u8005\u7ed3\u5408 Qt style sheets\u3002 \u5982\u679c\u4f60\u89c9\u5f97 model/view \u6a21\u578b\u8fc7\u4e8e\u590d\u6742\uff0c\u6216\u8005\u6709\u5f88\u591a\u529f\u80fd\u662f\u7528\u4e0d\u5230\u7684\uff0cQt \u8fd8\u6709\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f7f\u7528\u7684\u7c7b\u3002\u8fd9\u4e9b\u7c7b\u90fd\u662f\u7ee7\u627f\u81ea\u6807\u51c6\u7684\u89c6\u56fe\u7c7b\uff0c\u5e76\u4e14\u7ee7\u627f\u4e86\u6807\u51c6\u6a21\u578b\u3002\u8fd9\u4e9b\u7c7b\u5e76\u4e0d\u662f\u4e3a\u5176\u4ed6\u7c7b\u7ee7\u627f\u800c\u51c6\u5907\u7684\uff0c\u53ea\u662f\u4e3a\u4e86\u4f7f\u7528\u65b9\u4fbf\u3002\u5b83\u4eec\u5305\u62ec QListWidget \u3001 QTreeWidget \u548c QTableWidget \u3002\u8fd9\u4e9b\u7c7b\u8fdc\u4e0d\u5982\u89c6\u56fe\u7c7b\u7075\u6d3b\uff0c\u4e0d\u80fd\u4f7f\u7528\u53e6\u5916\u7684\u6a21\u578b\uff0c\u56e0\u6b64\u53ea\u9002\u7528\u4e8e\u7b80\u5355\u7684\u60c5\u5f62\u3002","title":"32. model view \u67b6\u6784"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/33.%20QListWidget%E3%80%81QTreeWidget%20%E5%92%8C%20QTableWidget/","text":"QListWidget \u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u7b2c\u4e00\u4e2a\u662f QListWidget \u3002\u5148\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\uff1a label = new QLabel ( this ); label -> setFixedWidth ( 70 ); listWidget = new QListWidget ( this ); new QListWidgetItem ( QIcon ( \":/Chrome.png\" ), tr ( \"Chrome\" ), listWidget ); new QListWidgetItem ( QIcon ( \":/Firefox.png\" ), tr ( \"Firefox\" ), listWidget ); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/IE.png\" ), tr ( \"IE\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Netscape.png\" ), tr ( \"Netscape\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Opera.png\" ), tr ( \"Opera\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Safari.png\" ), tr ( \"Safari\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/TheWorld.png\" ), tr ( \"TheWorld\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Traveler.png\" ), tr ( \"Traveler\" ))); QListWidgetItem * newItem = new QListWidgetItem ; newItem -> setIcon ( QIcon ( \":/Maxthon.png\" )); newItem -> setText ( tr ( \"Maxthon\" )); listWidget -> insertItem ( 3 , newItem ); QHBoxLayout * layout = new QHBoxLayout ; layout -> addWidget ( label ); layout -> addWidget ( listWidget ); setLayout ( layout ); connect ( listWidget , SIGNAL ( currentTextChanged ( QString )), label , SLOT ( setText ( QString ))); QListWidget \u662f\u7b80\u5355\u7684\u5217\u8868\u7ec4\u4ef6\u3002\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u590d\u6742\u7684\u5217\u8868\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9 QListWidget \u3002 QListWidget \u4e2d\u53ef\u4ee5\u6dfb\u52a0 QListWidgetItem \u7c7b\u578b\u4f5c\u4e3a\u5217\u8868\u9879\uff0c QListWidgetItem \u5373\u53ef\u4ee5\u6709\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u6709\u56fe\u6807\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u4e09\u79cd\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5217\u8868\u9879\u7684\u65b9\u6cd5\uff08\u5b9e\u9645\u662f\u4e24\u79cd\uff0c\u540e\u4e24\u79cd\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff09\uff0c\u6211\u4eec\u7684\u5217\u8868\u7ec4\u4ef6\u662f listWidget \uff0c\u90a3\u4e48\uff0c\u5411 listWidget \u6dfb\u52a0\u5217\u8868\u9879\u53ef\u4ee5\uff1a\u7b2c\u4e00\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5 new QListWidgetItem ( QIcon ( \":/Chrome.png\" ), tr ( \"Chrome\" ), listWidget ); \u7b2c\u4e8c\uff0c\u4f7f\u7528 listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/IE.png\" ), tr ( \"IE\" ))); // \u6216\u8005 QListWidgetItem * newItem = new QListWidgetItem ; newItem -> setIcon ( QIcon ( \":/Maxthon.png\" )); newItem -> setText ( tr ( \"Maxthon\" )); listWidget -> insertItem ( 3 , newItem ); \u6ce8\u610f\u8fd9\u4e24\u79cd\u6dfb\u52a0\u65b9\u5f0f\u7684\u533a\u522b\uff1a\u7b2c\u4e00\u79cd\u9700\u8981\u5728\u6784\u9020\u65f6\u8bbe\u7f6e\u6240\u8981\u6dfb\u52a0\u5230\u7684 QListWidget \u5bf9\u8c61\uff1b\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e0d\u9700\u8981\u8fd9\u6837\u8bbe\u7f6e\uff0c\u800c\u662f\u8981\u8c03\u7528 addItem() \u6216\u8005 insertItem() \u81ea\u884c\u6dfb\u52a0\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u67e5\u9605 QListWidgetItem \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 type \u53c2\u6570\u3002\u8be5\u53c2\u6570\u6709\u4e24\u4e2a\u5408\u6cd5\u503c\uff1a QListWidgetItem::Type \uff08\u9ed8\u8ba4\uff09\u548c QListWidgetItem::UserType \u3002\u5982\u679c\u6211\u4eec\u7ee7\u627f QListWidgetItem \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u53c2\u6570\uff0c\u4f5c\u4e3a\u6211\u4eec\u5b50\u7c7b\u7684\u4e00\u79cd\u533a\u522b\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728 QListWidget \u533a\u522b\u5904\u7406\u4e0d\u540c\u5b50\u7c7b\u3002","title":"QListWidget"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/33.%20QListWidget%E3%80%81QTreeWidget%20%E5%92%8C%20QTableWidget/#qlistwidget","text":"\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u7b2c\u4e00\u4e2a\u662f QListWidget \u3002\u5148\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\uff1a label = new QLabel ( this ); label -> setFixedWidth ( 70 ); listWidget = new QListWidget ( this ); new QListWidgetItem ( QIcon ( \":/Chrome.png\" ), tr ( \"Chrome\" ), listWidget ); new QListWidgetItem ( QIcon ( \":/Firefox.png\" ), tr ( \"Firefox\" ), listWidget ); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/IE.png\" ), tr ( \"IE\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Netscape.png\" ), tr ( \"Netscape\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Opera.png\" ), tr ( \"Opera\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Safari.png\" ), tr ( \"Safari\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/TheWorld.png\" ), tr ( \"TheWorld\" ))); listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/Traveler.png\" ), tr ( \"Traveler\" ))); QListWidgetItem * newItem = new QListWidgetItem ; newItem -> setIcon ( QIcon ( \":/Maxthon.png\" )); newItem -> setText ( tr ( \"Maxthon\" )); listWidget -> insertItem ( 3 , newItem ); QHBoxLayout * layout = new QHBoxLayout ; layout -> addWidget ( label ); layout -> addWidget ( listWidget ); setLayout ( layout ); connect ( listWidget , SIGNAL ( currentTextChanged ( QString )), label , SLOT ( setText ( QString ))); QListWidget \u662f\u7b80\u5355\u7684\u5217\u8868\u7ec4\u4ef6\u3002\u5f53\u6211\u4eec\u4e0d\u9700\u8981\u590d\u6742\u7684\u5217\u8868\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9 QListWidget \u3002 QListWidget \u4e2d\u53ef\u4ee5\u6dfb\u52a0 QListWidgetItem \u7c7b\u578b\u4f5c\u4e3a\u5217\u8868\u9879\uff0c QListWidgetItem \u5373\u53ef\u4ee5\u6709\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u6709\u56fe\u6807\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u4e09\u79cd\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5217\u8868\u9879\u7684\u65b9\u6cd5\uff08\u5b9e\u9645\u662f\u4e24\u79cd\uff0c\u540e\u4e24\u79cd\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff09\uff0c\u6211\u4eec\u7684\u5217\u8868\u7ec4\u4ef6\u662f listWidget \uff0c\u90a3\u4e48\uff0c\u5411 listWidget \u6dfb\u52a0\u5217\u8868\u9879\u53ef\u4ee5\uff1a\u7b2c\u4e00\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u53e5 new QListWidgetItem ( QIcon ( \":/Chrome.png\" ), tr ( \"Chrome\" ), listWidget ); \u7b2c\u4e8c\uff0c\u4f7f\u7528 listWidget -> addItem ( new QListWidgetItem ( QIcon ( \":/IE.png\" ), tr ( \"IE\" ))); // \u6216\u8005 QListWidgetItem * newItem = new QListWidgetItem ; newItem -> setIcon ( QIcon ( \":/Maxthon.png\" )); newItem -> setText ( tr ( \"Maxthon\" )); listWidget -> insertItem ( 3 , newItem ); \u6ce8\u610f\u8fd9\u4e24\u79cd\u6dfb\u52a0\u65b9\u5f0f\u7684\u533a\u522b\uff1a\u7b2c\u4e00\u79cd\u9700\u8981\u5728\u6784\u9020\u65f6\u8bbe\u7f6e\u6240\u8981\u6dfb\u52a0\u5230\u7684 QListWidget \u5bf9\u8c61\uff1b\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e0d\u9700\u8981\u8fd9\u6837\u8bbe\u7f6e\uff0c\u800c\u662f\u8981\u8c03\u7528 addItem() \u6216\u8005 insertItem() \u81ea\u884c\u6dfb\u52a0\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u67e5\u9605 QListWidgetItem \u7684\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u53d1\u73b0\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 type \u53c2\u6570\u3002\u8be5\u53c2\u6570\u6709\u4e24\u4e2a\u5408\u6cd5\u503c\uff1a QListWidgetItem::Type \uff08\u9ed8\u8ba4\uff09\u548c QListWidgetItem::UserType \u3002\u5982\u679c\u6211\u4eec\u7ee7\u627f QListWidgetItem \uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u53c2\u6570\uff0c\u4f5c\u4e3a\u6211\u4eec\u5b50\u7c7b\u7684\u4e00\u79cd\u533a\u522b\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728 QListWidget \u533a\u522b\u5904\u7406\u4e0d\u540c\u5b50\u7c7b\u3002","title":"QListWidget"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/34.%20%E6%A8%A1%E5%9E%8B/","text":"\u5728[[32. model view \u67b6\u6784|model view \u67b6\u6784]]\u4e2d\uff0cmodel \u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u63a5\u53e3\uff0c\u4f9b[[35. \u89c6\u56fe\u548c\u59d4\u6258]]\u8bbf\u95ee\u6570\u636e\u3002\u5728 Qt \u4e2d\uff0c\u8fd9\u4e2a\u63a5\u53e3\u7531 QAbstractItemModel \u7c7b\u8fdb\u884c\u5b9a\u4e49\u3002\u4e0d\u7ba1\u5e95\u5c42\u6570\u636e\u662f\u5982\u4f55\u5b58\u50a8\u7684\uff0c\u53ea\u8981\u662f QAbstractItemModel \u7684\u5b50\u7c7b\uff0c\u90fd\u63d0\u4f9b\u4e00\u79cd\u8868\u683c\u5f62\u5f0f\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u89c6\u56fe\u5229\u7528\u7edf\u4e00\u7684\u8f6c\u6362\u6765\u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u6570\u636e\u3002\u4f46\u662f\uff0c\u9700\u8981\u63d0\u4f9b\u7684\u662f\uff0c\u5c3d\u7ba1\u6a21\u578b\u5185\u90e8\u662f\u8fd9\u6837\u7ec4\u7ec7\u6570\u636e\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u8981\u6c42\u4e5f\u5f97\u8fd9\u6837\u5b50\u5411\u7528\u6237\u5c55\u793a\u6570\u636e\u3002 \u4e0b\u9762\u662f\u5404\u79cd model \u7684\u7ec4\u7ec7\u793a\u610f\u56fe\u3002\u6211\u4eec\u5229\u7528\u6b64\u56fe\u6765\u7406\u89e3\u4ec0\u4e48\u53eb\u201c\u4e00\u79cd\u8868\u683c\u5f62\u5f0f\u7684\u5c42\u6b21\u7ed3\u6784\u201d\u3002 ![[\u6a21\u578b_1.png]] \u5982\u4e0a\u56fe\u6240\u793a\uff0cList Model \u867d\u7136\u662f\u7ebf\u6027\u7684\u5217\u8868\uff0c\u4e5f\u6709\u4e00\u4e2a Root Item\uff08\u6839\u8282\u70b9\uff09\uff0c\u4e4b\u4e0b\u624d\u662f\u5448\u7ebf\u6027\u7684\u4e00\u4e2a\u4e2a\u6570\u636e\uff0c\u800c\u8fd9\u4e9b\u6570\u636e\u5b9e\u9645\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u53ea\u6709\u4e00\u5217\u7684\u8868\u683c\uff0c\u4f46\u662f\u5b83\u662f\u6709\u5c42\u6b21\u7684\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u3002Table Model \u5c31\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u53ea\u662f\u4e5f\u5b58\u5728\u4e00\u4e2a\u6839\u8282\u70b9\u3002Tree Model \u4e3b\u8981\u9762\u5411\u5c42\u6b21\u6570\u636e\uff0c\u800c\u6bcf\u4e00\u5c42\u6b21\u90fd\u53ef\u4ee5\u90fd\u5f88\u591a\u5217\uff0c\u56e0\u6b64\u4e5f\u662f\u4e00\u4e2a\u5e26\u6709\u5c42\u6b21\u7684\u8868\u683c\u3002 \u4e3a\u4e86\u80fd\u591f\u4f7f\u5f97\u6570\u636e\u7684\u663e\u793a\u540c\u5b58\u50a8\u5206\u79bb\uff0c\u6211\u4eec\u5f15\u5165\u6a21\u578b\u7d22\u5f15\uff08model index\uff09\u7684\u6982\u5ff5\u3002\u901a\u8fc7\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u6a21\u578b\u7684\u7279\u5b9a\u5143\u7d20\u7684\u7279\u5b9a\u90e8\u5206\u3002\u89c6\u56fe\u548c\u59d4\u6258\u4f7f\u7528\u7d22\u5f15\u6765\u8bf7\u6c42\u6240\u9700\u8981\u7684\u6570\u636e\u3002\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u53ea\u6709\u6a21\u578b\u81ea\u5df1\u9700\u8981\u77e5\u9053\u5982\u4f55\u83b7\u5f97\u6570\u636e\uff0c\u6a21\u578b\u6240\u7ba1\u7406\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u901a\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9a\u4e49\u3002\u7d22\u5f15\u4fdd\u5b58\u6709\u521b\u5efa\u7684\u5b83\u7684\u90a3\u4e2a\u6a21\u578b\u7684\u6307\u9488\uff0c\u8fd9\u4f7f\u5f97\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6a21\u578b\u6210\u4e3a\u53ef\u80fd\u3002 QAbstractItemModel * model = index . model (); \u6a21\u578b\u7d22\u5f15\u63d0\u4f9b\u4e86\u6240\u9700\u8981\u7684\u4fe1\u606f\u7684 \u4e34\u65f6\u7d22\u5f15 \uff0c\u53ef\u4ee5\u7528\u4e8e\u901a\u8fc7\u6a21\u578b\u53d6\u56de\u6216\u8005\u4fee\u6539\u6570\u636e\u3002\u7531\u4e8e\u6a21\u578b\u968f\u65f6\u53ef\u80fd\u91cd\u65b0\u7ec4\u7ec7\u5176\u5185\u90e8\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u6a21\u578b\u7d22\u5f15\u5f88\u53ef\u80fd\u53d8\u6210\u4e0d\u53ef\u7528\u7684\uff0c\u6b64\u65f6\uff0c\u5c31\u4e0d\u5e94\u8be5\u4fdd\u5b58\u8fd9\u4e9b\u6570\u636e\u3002\u5982\u679c\u4f60\u9700\u8981\u957f\u671f\u6709\u6548\u7684\u6570\u636e\u7247\u6bb5\uff0c\u5fc5\u987b\u521b\u5efa \u6301\u4e45\u7d22\u5f15 \u3002\u6301\u4e45\u7d22\u5f15\u4fdd\u8bc1\u5176\u5f15\u7528\u7684\u6570\u636e\u53ca\u65f6\u66f4\u65b0\u3002\u4e34\u65f6\u7d22\u5f15\uff08\u4e5f\u5c31\u662f\u901a\u5e38\u4f7f\u7528\u7684\u7d22\u5f15\uff09\u7531 QModelIndex \u7c7b\u63d0\u4f9b\uff0c\u6301\u4e45\u7d22\u5f15\u5219\u662f QPersistentModelIndex \u7c7b\u3002 \u4e3a\u4e86\u5b9a\u4f4d\u6a21\u578b\u4e2d\u7684\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4e2a\u5c5e\u6027\uff1a\u884c\u53f7\u3001\u5217\u53f7\u4ee5\u53ca\u7236\u7d22\u5f15\u3002\u4e0b\u9762\u6211\u4eec\u5bf9\u5176\u4e00\u4e00\u8fdb\u884c\u89e3\u91ca\u3002 \u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u8fc7\u6a21\u578b\u7684\u57fa\u672c\u5f62\u5f0f\uff1a\u6570\u636e\u4ee5\u4e8c\u7ef4\u8868\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\u3002\u6b64\u65f6\uff0c\u4e00\u4e2a\u6570\u636e\u53ef\u4ee5\u7531\u884c\u53f7\u548c\u5217\u53f7\u8fdb\u884c\u5b9a\u4f4d\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4ec5\u4ec5\u662f\u4f7f\u7528\u201c\u4e8c\u7ef4\u8868\u201d\u8fd9\u4e2a\u540d\u8bcd\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6a21\u578b\u5185\u90e8\u771f\u7684\u662f\u4ee5\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff1b\u6240\u8c13\u201c\u884c\u53f7\u201d\u201c\u5217\u53f7\u201d\uff0c\u4e5f\u4ec5\u4ec5\u662f\u4e3a\u65b9\u4fbf\u63cf\u8ff0\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\uff0c\u5e76\u4e0d\u771f\u7684\u662f\u6709\u884c\u5217\u4e4b\u5206\u3002\u901a\u8fc7\u6307\u5b9a\u884c\u53f7\u548c\u5217\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4f4d\u4e00\u4e2a\u5143\u7d20\u9879\uff0c\u53d6\u51fa\u5176\u4fe1\u606f\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u662f\u4e00\u4e2a\u7d22\u5f15\u5bf9\u8c61\uff08\u56de\u5fc6\u4e00\u4e0b\uff0c\u901a\u8fc7\u7d22\u5f15\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u5177\u4f53\u4fe1\u606f\uff09\uff1a QModelIndex index = model -> index ( row , column , ...); \u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u7528\u4e8e\u5217\u8868\u4ee5\u53ca\u8868\u683c\u8fd9\u79cd\u975e\u5c42\u6b21\u89c6\u56fe\u7684\u6570\u636e\u83b7\u53d6\u3002\u4e0d\u8fc7\uff0c\u6b63\u5982\u4e0a\u9762\u7684\u4ee3\u7801\u6697\u793a\u7684\u90a3\u6837\uff0c\u5b9e\u9645\u63a5\u53e3\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6587\u6863\u67e5\u770b\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\uff1a QModelIndex QAbstractItemModel :: index ( int row , int column , const QModelIndex & parent = QModelIndex ()) const \u8fd9\u91cc\uff0c\u6211\u4eec\u4ec5\u4ec5\u4f7f\u7528\u4e86\u524d\u4e24\u4e2a\u53c2\u6570\u3002\u901a\u8fc7\u4e0b\u56fe\u6765\u7406\u89e3\u4e00\u4e0b\uff1a ![[\u6a21\u578b_2.png]] \u5728\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u683c\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u9879\u90fd\u53ef\u4ee5\u7531\u884c\u53f7\u548c\u5217\u53f7\u786e\u5b9a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\u83b7\u53d6\u5230\u8868\u683c\u4e2d\u7684\u67d0\u4e00\u4e2a\u6570\u636e\u9879\uff1a QModelIndex indexA = model -> index ( 0 , 0 , QModelIndex ()); QModelIndex indexB = model -> index ( 1 , 1 , QModelIndex ()); QModelIndex indexC = model -> index ( 2 , 1 , QModelIndex ()); \u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u59cb\u7ec8\u662f QModelIndex()\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u8ba8\u8bba\u8fd9\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u3002 \u5728\u7c7b\u4f3c\u8868\u683c\u7684\u89c6\u56fe\u4e2d\uff0c\u6bd4\u5982\u5217\u8868\u548c\u8868\u683c\uff0c\u884c\u53f7\u548c\u5217\u53f7\u8db3\u4ee5\u5b9a\u4f4d\u4e00\u4e2a\u6570\u636e\u9879\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u6811\u578b\u7ed3\u6784\uff0c\u4ec5\u6709\u4e24\u4e2a\u53c2\u6570\u5c31\u4e0d\u8db3\u591f\u4e86\u3002\u8fd9\u662f\u56e0\u4e3a\u6811\u578b\u7ed3\u6784\u662f\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\uff0c\u800c\u5c42\u6b21\u7ed3\u6784\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u53ef\u80fd\u662f\u53e6\u5916\u4e00\u4e2a\u8868\u683c\u3002\u6240\u4ee5\uff0c\u6bcf\u4e00\u4e2a\u9879\u9700\u8981\u6307\u660e\u5176\u7236\u8282\u70b9\u3002\u524d\u9762\u8bf4\u8fc7\uff0c\u5728\u6a21\u578b\u5916\u90e8\u53ea\u80fd\u7528\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5185\u90e8\u6570\u636e\uff0c\u56e0\u6b64\uff0c index() \u51fd\u6570\u8fd8\u9700\u8981\u4e00\u4e2a parent \u53c2\u6570\uff1a QModelIndex index = model -> index ( row , column , parent ); \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e0b\u9762\u7684\u793a\u610f\u56fe\uff1a ![[\u6a21\u578b_3.png]] \u56fe\u4e2d\uff0cA \u548c C \u90fd\u662f\u6a21\u578b\u4e2d\u7684\u9876\u7ea7\u9879\uff1a QModelIndex indexA = model -> index ( 0 , 0 , QModelIndex ()); QModelIndex indexC = model -> index ( 2 , 1 , QModelIndex ()); A \u8fd8\u6709\u81ea\u5df1\u7684\u5b50\u9879\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u83b7\u53d6 B \u7684\u7d22\u5f15\uff1a QModelIndex indexB = model -> index ( 1 , 0 , indexA ); \u7531\u6b64\u6211\u4eec\u770b\u5230\uff0c\u5982\u679c\u53ea\u6709\u884c\u53f7\u548c\u5217\u53f7\u4e24\u4e2a\u53c2\u6570\uff0cB \u7684\u884c\u53f7\u662f 1\uff0c\u5217\u53f7\u662f 0\uff0c\u8fd9\u540c\u4e0e A \u540c\u7ea7\u7684\u884c\u53f7\u662f 1\uff0c\u5217\u53f7\u662f 0 \u7684\u9879\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7 parent \u5c5e\u6027\u533a\u522b\u5f00\u6765\u3002 \u4ee5\u4e0a\u6211\u4eec\u8ba8\u8bba\u4e86\u6709\u5173\u7d22\u5f15\u7684\u5b9a\u4f4d\u3002\u73b0\u5728\u6211\u4eec\u6765\u770b\u770b\u6a21\u578b\u7684\u53e6\u5916\u4e00\u4e2a\u90e8\u5206\uff1a\u6570\u636e\u89d2\u8272\u3002\u6a21\u578b\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u7ec4\u4ef6\uff08\u6216\u8005\u7ec4\u4ef6\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u6bd4\u5982\u6309\u94ae\u7684\u63d0\u793a\u4ee5\u53ca\u663e\u793a\u7684\u6587\u672c\u7b49\uff09\u63d0\u4f9b\u4e0d\u540c\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c Qt::DisplayRole \u7528\u4e8e\u89c6\u56fe\u7684\u6587\u672c\u663e\u793a\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u6570\u636e\u9879\u5305\u542b\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u6570\u636e\u89d2\u8272\uff0c\u8fd9\u4e9b\u89d2\u8272\u5b9a\u4e49\u5728 Qt::ItemDataRole \u679a\u4e3e\u4e2d\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u7d22\u5f15\u4ee5\u53ca\u89d2\u8272\u6765\u83b7\u5f97\u6a21\u578b\u6240\u63d0\u4f9b\u7684\u6570\u636e\uff1a QVariant value = model -> data ( index , role ); \u901a\u8fc7\u4e3a\u6bcf\u4e00\u4e2a\u89d2\u8272\u63d0\u4f9b\u6070\u5f53\u7684\u6570\u636e\uff0c\u6a21\u578b\u53ef\u4ee5\u544a\u8bc9\u89c6\u56fe\u548c\u59d4\u6258\u5982\u4f55\u5411\u7528\u6237\u663e\u793a\u5185\u5bb9\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u89c6\u56fe\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u81ea\u5df1\u4e0d\u9700\u8981\u7684\u6570\u636e\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6211\u4eec\u6240\u9700\u8981\u7684\u989d\u5916\u6570\u636e\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a - \u6a21\u578b\u4f7f\u7528\u7d22\u5f15\u6765\u63d0\u4f9b\u7ed9\u89c6\u56fe\u548c\u59d4\u6258\u6709\u5173\u6570\u636e\u9879\u7684\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u6a21\u578b\u4e4b\u5916\u7684\u5bf9\u8c61\u65e0\u9700\u77e5\u9053\u5e95\u5c42\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff1b - \u6570\u636e\u9879\u901a\u8fc7\u884c\u53f7\u3001\u5217\u53f7\u4ee5\u53ca\u7236\u9879\u4e09\u4e2a\u5750\u6807\u8fdb\u884c\u5b9a\u4f4d\uff1b - \u6a21\u578b\u7d22\u5f15\u7531\u6a21\u578b\u5728\u5176\u5b83\u7ec4\u4ef6\uff08\u89c6\u56fe\u548c\u59d4\u6258\uff09\u8bf7\u6c42\u65f6\u624d\u4f1a\u88ab\u521b\u5efa\uff1b - \u5982\u679c\u4f7f\u7528 index() \u51fd\u6570\u8bf7\u6c42\u83b7\u5f97\u4e00\u4e2a\u7236\u9879\u7684\u53ef\u7528\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u4f1a\u6307\u5411\u6a21\u578b\u4e2d\u8fd9\u4e2a\u7236\u9879\u4e0b\u9762\u7684\u6570\u636e\u9879\u3002\u8fd9\u4e2a\u7d22\u5f15\u6307\u5411\u8be5\u9879\u7684\u4e00\u4e2a\u5b50\u9879\uff1b\u5982\u679c\u4f7f\u7528 index() \u51fd\u6570\u8bf7\u6c42\u83b7\u5f97\u4e00\u4e2a\u7236\u9879\u7684\u4e0d\u53ef\u7528\u7d22\u5f15\uff0c\u8be5\u7d22\u5f15\u6307\u5411\u6a21\u578b\u7684\u6700\u9876\u7ea7\u9879\uff1b - \u89d2\u8272\u7528\u4e8e\u533a\u5206\u6570\u636e\u9879\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002 \u4e0b\u9762\u56de\u5230\u524d\u9762\u6211\u4eec\u66fe\u7ecf\u89c1\u8fc7\u7684\u6a21\u578b QFileSystemModel \uff0c\u770b\u770b\u5982\u4f55\u4ece\u6a21\u578b\u83b7\u53d6\u6570\u636e\u3002 QFileSystemModel * model = new QFileSystemModel ; QModelIndex parentIndex = model -> index ( QDir :: currentPath ()); int numRows = model -> rowCount ( parentIndex ); \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86 QFileSystemModel \u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528 QFileSystemModel \u91cd\u8f7d\u7684 index() \u83b7\u53d6\u7d22\u5f15\uff0c\u7136\u540e\u4f7f\u7528 rowCount() \u51fd\u6570\u8ba1\u7b97\u5f53\u524d\u76ee\u5f55\u4e0b\u6709\u591a\u5c11\u6570\u636e\u9879\uff08\u4e5f\u5c31\u662f\u884c\u6570\uff09\u3002\u524d\u9762\u4e00\u7ae0\u4e2d\u8ff7\u8ff7\u7cca\u7cca\u7684\u4ee3\u7801\uff0c\u73b0\u5728\u5df2\u7ecf\u76f8\u5f53\u6e05\u695a\u4e86\u3002 \u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u4e0b\u9762\u6211\u4eec\u53ea\u5173\u5fc3\u6a21\u578b\u7b2c\u4e00\u5217\u3002\u6211\u4eec\u904d\u5386\u6240\u6709\u6570\u636e\uff0c\u53d6\u5f97\u7b2c\u4e00\u5217\u7d22\u5f15\uff1a for ( int row = 0 ; row < numRows ; ++ row ) { QModelIndex index = model -> index ( row , 0 , parentIndex ); } \u6211\u4eec\u4f7f\u7528 index() \u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6bcf\u4e00\u884c\u884c\u53f7\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f 0\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u5217\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f parentIndex\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u76ee\u5f55\u4f5c\u4e3a\u7236\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u7684 data() \u51fd\u6570\u83b7\u53d6\u6bcf\u4e00\u9879\u7684\u6570\u636e\u3002\u6ce8\u610f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u503c\u662f QVariant \uff0c\u5b9e\u9645\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u8f6c\u6362\u6210 QString \uff1a QString text = model -> data ( index , Qt :: DisplayRole ). toString (); // \u4f7f\u7528 text \u6570\u636e } \u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u663e\u793a\u4e86\u4ece\u6a21\u578b\u83b7\u53d6\u6570\u636e\u7684\u4e00\u4e9b\u6709\u7528\u7684\u51fd\u6570\uff1a - \u6a21\u578b\u7684\u6570\u76ee\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7 rowCount() \u548c columnCount() \u83b7\u5f97\u3002\u8fd9\u4e9b\u51fd\u6570\u9700\u8981\u5236\u5b9a\u7236\u9879\uff1b - \u7d22\u5f15\u7528\u4e8e\u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u5229\u7528\u884c\u53f7\u3001\u5217\u53f7\u4ee5\u53ca\u7236\u9879\u4e09\u4e2a\u53c2\u6570\u6765\u83b7\u5f97\u8be5\u7d22\u5f15\uff1b - \u5f53\u6211\u4eec\u4f7f\u7528 QModelIndex() \u521b\u5efa\u4e00\u4e2a\u7a7a\u7d22\u5f15\u4f7f\u7528\u65f6\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u5c31\u662f\u6a21\u578b\u4e2d\u6700\u9876\u7ea7\u9879\uff1b - \u6570\u636e\u9879\u5305\u542b\u4e86\u4e0d\u540c\u89d2\u8272\u7684\u6570\u636e\u3002\u4e3a\u83b7\u53d6\u7279\u5b9a\u89d2\u8272\u7684\u6570\u636e\uff0c\u5fc5\u987b\u6307\u5b9a\u8fd9\u4e2a\u89d2\u8272\u3002","title":"34. \u6a21\u578b"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/35.%20%E8%A7%86%E5%9B%BE%E5%92%8C%E5%A7%94%E6%89%98/","text":"\u5728[[32. model view \u67b6\u6784|model view \u67b6\u6784]]\u4e2d\uff0c\u89c6\u56fe\u662f\u6570\u636e\u4ece[[34. \u6a21\u578b|\u6a21\u578b]]\u5230\u6700\u7ec8\u7528\u6237\u7684\u9014\u5f84\u3002\u6570\u636e\u901a\u8fc7\u89c6\u56fe\u5411\u7528\u6237\u8fdb\u884c\u663e\u793a\u3002\u6b64\u65f6\uff0c\u8fd9\u79cd\u663e\u793a\u65b9\u5f0f\u4e0d\u5fc5\u987b\u540c\u6a21\u578b\u7684\u5b58\u50a8\u7ed3\u6784\u76f8\u4e00\u81f4\u3002\u5b9e\u9645\u4e0a\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u7684\u663e\u793a\u540c\u5e95\u5c42\u6570\u636e\u7684\u5b58\u50a8\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u3002 \u6211\u4eec\u4f7f\u7528 QAbstractItemModel \u63d0\u4f9b\u6807\u51c6\u7684\u6a21\u578b\u63a5\u53e3\uff0c\u4f7f\u7528 QAbstractItemView \u63d0\u4f9b\u6807\u51c6\u7684\u89c6\u56fe\u63a5\u53e3\uff0c\u800c\u7ed3\u5408\u8fd9\u4e24\u8005\uff0c\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u540c\u8868\u73b0\u5c42\u5206\u79bb\uff0c\u5728\u89c6\u56fe\u4e2d\u5229\u7528\u524d\u9762\u6240\u8bf4\u7684\u6a21\u578b\u7d22\u5f15\u3002\u89c6\u56fe\u7ba1\u7406\u6765\u81ea\u6a21\u578b\u7684\u6570\u636e\u7684\u5e03\u5c40\uff1a\u65e2\u53ef\u4ee5\u76f4\u63a5\u6e32\u67d3\u6570\u636e\u672c\u8eab\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u59d4\u6258\u6e32\u67d3\u548c\u7f16\u8f91\u6570\u636e\u3002 \u89c6\u56fe\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u5c55\u793a\u6570\u636e\uff0c\u8fd8\u7528\u4e8e\u5728\u6570\u636e\u9879\u4e4b\u95f4\u7684\u5bfc\u822a\u4ee5\u53ca\u6570\u636e\u9879\u7684\u9009\u62e9\u3002\u53e6\u5916\uff0c\u89c6\u56fe\u4e5f\u9700\u8981\u652f\u6301\u5f88\u591a\u57fa\u672c\u7684\u7528\u6237\u754c\u9762\u7684\u7279\u6027\uff0c\u4f8b\u5982\u53f3\u952e\u83dc\u5355\u4ee5\u53ca\u62d6\u653e\u3002\u89c6\u56fe\u53ef\u4ee5\u63d0\u4f9b\u6570\u636e\u7f16\u8f91\u529f\u80fd\uff0c\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u79cd\u7f16\u8f91\u529f\u80fd\u4ea4\u7531\u67d0\u4e2a\u59d4\u6258\u5b8c\u6210\u3002\u89c6\u56fe\u53ef\u4ee5\u8131\u79bb\u6a21\u578b\u521b\u5efa\uff0c\u4f46\u662f\u5728\u5176\u8fdb\u884c\u663e\u793a\u4e4b\u524d\uff0c\u5fc5\u987b\u5b58\u5728\u4e00\u4e2a\u6a21\u578b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u89c6\u56fe\u7684\u663e\u793a\u662f\u5b8c\u5168\u57fa\u4e8e\u6a21\u578b\u7684\uff0c\u8fd9\u662f\u4e0d\u80fd\u8131\u79bb\u6a21\u578b\u5b58\u5728\u7684\u3002\u5bf9\u4e8e\u7528\u6237\u7684\u9009\u62e9\uff0c\u591a\u4e2a\u89c6\u56fe\u53ef\u4ee5\u76f8\u4e92\u72ec\u7acb\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5171\u4eab\u3002 \u67d0\u4e9b\u89c6\u56fe\uff0c\u4f8b\u5982 QTableView \u548c QTreeView \uff0c\u4e0d\u4ec5\u663e\u793a\u6570\u636e\uff0c\u8fd8\u4f1a\u663e\u793a\u5217\u5934\u6216\u8005\u8868\u5934\u3002\u8fd9\u4e9b\u662f\u7531 QHeaderView \u89c6\u56fe\u7c7b\u63d0\u4f9b\u7684\u3002\u8868\u5934\u901a\u5e38\u8bbf\u95ee\u89c6\u56fe\u6240\u5305\u542b\u7684\u540c\u4e00\u6a21\u578b\u3002\u5b83\u4eec\u4f7f\u7528 QAbstractItemModel::headerData() \u51fd\u6570\u4ece\u6a21\u578b\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u7136\u540e\u5c06\u5176\u4ee5\u6807\u7b7e label \u7684\u5f62\u5f0f\u663e\u793a\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f QHeaderView \u7c7b\uff0c\u5b9e\u73b0\u67d0\u4e9b\u66f4\u7279\u6b8a\u7684\u529f\u80fd\u3002 \u6b63\u5982\u524d\u9762\u7684\u7ae0\u8282\u4ecb\u7ecd\u7684\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u4e3a\u89c6\u56fe\u63d0\u4f9b\u4e00\u4e2a\u6a21\u578b\u3002\u62ff\u524d\u9762\u6211\u4eec\u66fe\u7ecf\u89c1\u8fc7\u7684\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\uff1a QStringList data ; data << \"0\" << \"1\" << \"2\" ; model = new QStringListModel ( this ); model -> setStringList ( data ); listView = new QListView ( this ); listView -> setModel ( model ); QPushButton * btnShow = new QPushButton ( tr ( \"Show Model\" ), this ); connect ( btnShow , SIGNAL ( clicked ()), this , SLOT ( showModel ())); QHBoxLayout * buttonLayout = new QHBoxLayout ; buttonLayout -> addWidget ( btnShow ); QVBoxLayout * layout = new QVBoxLayout ; layout -> addWidget ( listView ); layout -> addLayout ( buttonLayout ); setLayout ( layout ); \u6b63\u5982\u524d\u9762\u6240\u8bf4\uff0c\u59d4\u6258\u5c31\u662f\u4f9b\u89c6\u56fe\u5b9e\u73b0\u67d0\u79cd\u9ad8\u7ea7\u7684\u7f16\u8f91\u529f\u80fd\u3002\u4e0d\u540c\u4e8e\u7ecf\u5178\u7684 Model-View-Controller\uff08MVC\uff09\u6a21\u5f0f\uff0cmodel/view \u6ca1\u6709\u5c06\u7528\u6237\u4ea4\u4e92\u90e8\u5206\u5b8c\u5168\u5206\u79bb\u3002\u4e00\u822c\u5730\uff0c\u89c6\u56fe\u5c06\u6570\u636e\u5411\u7528\u6237\u8fdb\u884c\u5c55\u793a\u5e76\u4e14\u5904\u7406\u901a\u7528\u7684\u8f93\u5165\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u8981\u6c42\uff08\u6bd4\u5982\u8fd9\u91cc\u7684\u8981\u6c42\u5fc5\u987b\u8f93\u5165\u6570\u5b57\uff09\uff0c\u5219\u4ea4\u4e88\u59d4\u6258\u5b8c\u6210\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u63d0\u4f9b\u8f93\u5165\u529f\u80fd\uff0c\u540c\u65f6\u4e5f\u80fd\u6e32\u67d3\u67d0\u4e9b\u7279\u6b8a\u6570\u636e\u9879\u3002\u59d4\u6258\u7684\u63a5\u53e3\u7531 QAbstractItemDelegate \u5b9a\u4e49\u3002\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u59d4\u6258\u901a\u8fc7 paint() \u548c sizeHint() \u4e24\u4e2a\u51fd\u6570\u6e32\u67d3\u7528\u6237\u5185\u5bb9\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u5c06\u6e32\u67d3\u5668\u7ed8\u5236\u51fa\u6765\uff09\u3002\u4e3a\u4f7f\u7528\u65b9\u4fbf\uff0c\u4ece 4.4 \u5f00\u59cb\uff0cQt \u63d0\u4f9b\u4e86\u53e6\u5916\u7684\u57fa\u4e8e\u7ec4\u4ef6\u7684\u5b50\u7c7b\uff1a QItemDelegate \u548c QStyledItemDelegate \u3002\u9ed8\u8ba4\u7684\u59d4\u6258\u662f QStyledItemDelegate \u3002\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\u7ed8\u5236\u548c\u5411\u89c6\u56fe\u63d0\u4f9b\u7f16\u8f91\u5668\u7684\u65b9\u5f0f\u3002 QStyledItemDelegate \u4f7f\u7528\u5f53\u524d\u6837\u5f0f\u7ed8\u5236\uff0c\u5e76\u4e14\u80fd\u591f\u4f7f\u7528 Qt Style Sheet\uff08\u6211\u4eec\u4f1a\u5728\u540e\u9762\u7684\u7ae0\u8282\u5bf9 QSS \u8fdb\u884c\u4ecb\u7ecd\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u63a8\u8350\u5728\u81ea\u5b9a\u4e49\u59d4\u6258\u65f6\uff0c\u4f7f\u7528 QStyledItemDelegate \u4f5c\u4e3a\u57fa\u7c7b\u3002\u4e0d\u8fc7\uff0c\u9664\u975e\u81ea\u5b9a\u4e49\u59d4\u6258\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u7ed8\u5236\uff0c\u5426\u5219\uff0c\u4e8c\u8005\u7684\u4ee3\u7801\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002 \u7ee7\u627f QStyledItemDelegate \u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a - createEditor() \uff1a\u8fd4\u56de\u4e00\u4e2a\u7ec4\u4ef6\u3002\u8be5\u7ec4\u4ef6\u4f1a\u88ab\u4f5c\u4e3a\u7528\u6237\u7f16\u8f91\u6570\u636e\u65f6\u6240\u4f7f\u7528\u7684\u7f16\u8f91\u5668\uff0c\u4ece\u6a21\u578b\u4e2d\u63a5\u53d7\u6570\u636e\uff0c\u8fd4\u56de\u7528\u6237\u4fee\u6539\u7684\u6570\u636e\u3002 - setEditorData() \uff1a\u63d0\u4f9b\u4e0a\u8ff0\u7ec4\u4ef6\u5728\u663e\u793a\u65f6\u6240\u9700\u8981\u7684\u9ed8\u8ba4\u503c\u3002 - updateEditorGeometry() \uff1a\u786e\u4fdd\u4e0a\u8ff0\u7ec4\u4ef6\u4f5c\u4e3a\u7f16\u8f91\u5668\u65f6\u80fd\u591f\u5b8c\u6574\u5730\u663e\u793a\u51fa\u6765\u3002 - setModelData() \uff1a\u8fd4\u56de\u7ed9\u6a21\u578b\u7528\u6237\u4fee\u6539\u8fc7\u7684\u6570\u636e\u3002 \u7a00\u70c2\uff0c\u8fd9\u7bc7\u4f5c\u5e9f\u3002","title":"35. \u89c6\u56fe\u548c\u59d4\u6258"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/36.%20%E8%A7%86%E5%9B%BE%E4%BB%A3%E7%90%86/","text":"\u4e0eQt [[32. model view \u67b6\u6784|model view \u67b6\u6784]]\u7c7b\u4f3c\uff0c\u5728\u81ea\u5b9a\u4e49\u7528\u6237\u754c\u9762\u4e2d\uff0c\u4ee3\u7406\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\u3002[[34. \u6a21\u578b|\u6a21\u578b]]\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u9879\u90fd\u8981\u901a\u8fc7\u4e00\u4e2a\u4ee3\u7406\u5411\u7528\u6237\u5c55\u793a\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7528\u6237\u770b\u5230\u7684\u53ef\u89c6\u90e8\u5206\u5c31\u662f\u4ee3\u7406\u3002 \u6bcf\u4e00\u4e2a\u4ee3\u7406\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e00\u7cfb\u5217\u5c5e\u6027\u548c\u9644\u52a0\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u53ca\u9644\u52a0\u5c5e\u6027\u4e2d\uff0c\u6709\u4e9b\u6765\u81ea\u4e8e\u6570\u636e\u6a21\u578b\uff0c\u6709\u4e9b\u5219\u6765\u81ea\u4e8e\u89c6\u56fe\u3002\u524d\u8005\u4e3a\u4ee3\u7406\u63d0\u4f9b\u4e86\u6bcf\u4e00\u4e2a\u6570\u636e\u9879\u7684\u6570\u636e\u4fe1\u606f\uff1b\u540e\u8005\u5219\u662f\u6709\u5173\u89c6\u56fe\u7684\u72b6\u6001\u4fe1\u606f\u3002 \u4ee3\u7406\u4e2d\u6700\u5e38\u7528\u5230\u7684\u662f\u6765\u81ea\u4e8e\u89c6\u56fe\u7684\u9644\u52a0\u5c5e\u6027 ListView.isCurrentItem \u548c ListView.view \u3002\u524d\u8005\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u7528\u4e8e\u8868\u793a\u4ee3\u7406\u6240\u4ee3\u8868\u7684\u6570\u636e\u9879\u662f\u4e0d\u662f\u89c6\u56fe\u6240\u5c55\u793a\u7684\u5f53\u524d\u6570\u636e\u9879\uff1b\u540e\u8005\u5219\u662f\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u8868\u793a\u8be5\u4ee3\u7406\u6240\u5c5e\u4e8e\u7684\u89c6\u56fe\u3002\u901a\u8fc7\u8bbf\u95ee\u89c6\u56fe\u7684\u76f8\u5173\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u901a\u7528\u7684\u53ef\u590d\u7528\u7684\u4ee3\u7406\uff0c\u7528\u4e8e\u9002\u914d\u89c6\u56fe\u7684\u5927\u5c0f\u548c\u5c55\u793a\u7279\u6027\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u6bcf\u4e00\u4e2a\u4ee3\u7406\u7684\u5bbd\u5ea6\u90fd\u7ed1\u5b9a\u5230\u89c6\u56fe\u7684\u5bbd\u5ea6\uff0c\u800c\u4ee3\u7406\u7684\u80cc\u666f\u8272\u5219\u6839\u636e\u9644\u52a0\u5c5e\u6027 ListView.isCurrentItem \u7684\u4e0d\u540c\u800c\u6709\u6240\u4e0d\u540c\u3002 import QtQuick 2.0 Rectangle { width : 120 height : 300 gradient : Gradient { GradientStop { position : 0.0 ; color : \"#f6f6f6\" } GradientStop { position : 1.0 ; color : \"#d7d7d7\" } } ListView { anchors . fill : parent anchors . margins : 20 clip : true model : 100 delegate : numberDelegate spacing : 5 focus : true } Component { id : numberDelegate Rectangle { width : ListView . view . width height : 40 color : ListView . isCurrentItem ? \"#157efb\" : \"#53d769\" border . color : Qt . lighter ( color , 1.1 ) Text { anchors . centerIn : parent font . pixelSize : 10 text : index } } } } \u4e00\u6837\u7a00\u70c2\uff0c\u4f5c\u5e9f\u3002","title":"36. \u89c6\u56fe\u4ee3\u7406"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/37.%20%E4%BD%BF%E7%94%A8%E6%8B%96%E6%94%BE/","text":"\u62d6\u653e\uff08Drag and Drop\uff09\uff0c\u901a\u5e38\u4f1a\u7b80\u79f0\u4e3a DnD\uff0c\u662f\u73b0\u4ee3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u9879\u6280\u672f\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u80fd\u591f\u5728\u5e94\u7528\u7a0b\u5e8f\u5185\u90e8\u751a\u81f3\u662f\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u8fdb\u884c\u4fe1\u606f\u4ea4\u6362\u7684\u673a\u5236\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u8fdb\u884c\u7684\u526a\u8d34\u677f\u5185\u5bb9\u7684\u4ea4\u6362\uff0c\u4e5f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u62d6\u653e\u7684\u4e00\u90e8\u5206\u3002 \u62d6\u653e\u5176\u5b9e\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u7684\uff1a\u62d6\u52a8\u548c\u91ca\u653e\u3002\u62d6\u52a8\u662f\u5c06\u88ab\u62d6\u653e\u5bf9\u8c61\u8fdb\u884c\u79fb\u52a8\uff0c\u91ca\u653e\u662f\u5c06\u88ab\u62d6\u653e\u5bf9\u8c61\u653e\u4e0b\u3002\u524d\u8005\u662f\u4e00\u4e2a\u6309\u4e0b\u9f20\u6807\u6309\u952e\u5e76\u79fb\u52a8\u7684\u8fc7\u7a0b\uff0c\u540e\u8005\u662f\u4e00\u4e2a\u677e\u5f00\u9f20\u6807\u6309\u952e\u7684\u8fc7\u7a0b\uff1b\u901a\u5e38\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u7684\u9f20\u6807\u6309\u952e\u662f\u88ab\u4e00\u76f4\u6309\u4e0b\u7684\u3002\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u666e\u904d\u7684\u60c5\u51b5\uff0c\u5176\u5b83\u60c5\u51b5\u8fd8\u662f\u8981\u770b\u5e94\u7528\u7a0b\u5e8f\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5bf9\u4e8e Qt \u800c\u8a00\uff0c\u4e00\u4e2a\u7ec4\u4ef6\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u62d6\u52a8\u5bf9\u8c61\u8fdb\u884c\u62d6\u52a8\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u91ca\u653e\u6389\u7684\u76ee\u7684\u5730\u5bf9\u8c61\uff0c\u6216\u8005\u4e8c\u8005\u90fd\u662f\u3002 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u6587\u672c\u6587\u4ef6\u62d6\u8fdb\u6765\uff0c\u7136\u540e\u5728\u7a97\u53e3\u4e2d\u8bfb\u53d6\u5185\u5bb9\u3002 class MainWindow : public QMainWindow { Q_OBJECT public : MainWindow ( QWidget * parent = 0 ); ~ MainWindow (); protected : void dragEnterEvent ( QDragEnterEvent * event ); void dropEvent ( QDropEvent * event ); private : bool readFile ( const QString & fileName ); QTextEdit * textEdit ; }; \u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u91cd\u5199 dragEnterEvent() \u548c dropEvent() \u4e24\u4e2a\u51fd\u6570\u3002\u987e\u540d\u601d\u4e49\uff0c\u524d\u8005\u662f\u62d6\u653e\u8fdb\u5165\u7684\u4e8b\u4ef6\uff0c\u540e\u8005\u662f\u91ca\u653e\u9f20\u6807\u7684\u4e8b\u4ef6\u3002 MainWindow :: MainWindow ( QWidget * parent ) : QMainWindow ( parent ) { textEdit = new QTextEdit ; setCentralWidget ( textEdit ); textEdit -> setAcceptDrops ( false ); setAcceptDrops ( true ); setWindowTitle ( tr ( \"Text Editor\" )); } MainWindow ::~ MainWindow () { } \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86 QTextEdit \u7684\u5bf9\u8c61\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c QTextEdit \u53ef\u4ee5\u63a5\u53d7\u4ece\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u62d6\u653e\u8fc7\u6765\u7684\u6587\u672c\u7c7b\u578b\u7684\u6570\u636e\u3002\u5982\u679c\u7528\u6237\u628a\u4e00\u4e2a\u6587\u4ef6\u62d6\u5230\u8fd9\u9762\uff0c\u9ed8\u8ba4\u4f1a\u628a\u6587\u4ef6\u540d\u63d2\u5165\u5230\u5149\u6807\u4f4d\u7f6e\u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u8ba9 MainWindow \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u63d2\u5165\u6587\u4ef6\u540d\uff0c\u6240\u4ee5\u6211\u4eec\u5728 MainWindow \u4e2d\u52a0\u5165\u4e86\u62d6\u653e\u64cd\u4f5c\u3002\u9996\u5148\u8981\u628a QTextEdit \u7684 setAcceptDrops() \u51fd\u6570\u7f6e\u4e3a false\uff0c\u5e76\u4e14\u628a MainWindow \u7684 setAcceptDrops() \u7f6e\u4e3a true\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u8ba9 MainWindow \u622a\u83b7\u62d6\u653e\u4e8b\u4ef6\uff0c\u800c\u4e0d\u662f\u4ea4\u7ed9 QTextEdit \u5904\u7406\u3002 void MainWindow::dragEnterEvent ( QDragEnterEvent * event ) { if ( event -> mimeData () -> hasFormat ( \"text/uri-list\" )) { event -> acceptProposedAction (); } } \u5f53\u7528\u6237\u5c06\u5bf9\u8c61\u62d6\u52a8\u5230\u7ec4\u4ef6\u4e0a\u9762\u65f6\uff0c\u7cfb\u7edf\u4f1a\u56de\u8c03 dragEnterEvent() \u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u5728\u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\u4e2d\u8c03\u7528 acceptProposeAction() \u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u5411\u7528\u6237\u6697\u793a\uff0c\u4f60\u53ef\u4ee5\u5c06\u62d6\u52a8\u7684\u5bf9\u8c61\u653e\u5728\u8fd9\u4e2a\u7ec4\u4ef6\u4e0a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ec4\u4ef6\u662f\u4e0d\u4f1a\u63a5\u53d7\u62d6\u653e\u7684\u3002\u5982\u679c\u6211\u4eec\u8c03\u7528\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u90a3\u4e48 Qt \u4f1a\u81ea\u52a8\u4ee5\u5149\u6807\u6837\u5f0f\u7684\u53d8\u5316\u6765\u63d0\u793a\u7528\u6237\u662f\u5426\u53ef\u4ee5\u5c06\u5bf9\u8c61\u653e\u5728\u7ec4\u4ef6\u4e0a\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u544a\u8bc9\u7528\u6237\uff0c\u7a97\u53e3\u53ef\u4ee5\u63a5\u53d7\u62d6\u653e\uff0c\u4f46\u662f\u6211\u4eec\u4ec5\u63a5\u53d7\u67d0\u4e00\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u5168\u90e8\u6587\u4ef6\u3002\u6211\u4eec\u9996\u5148\u68c0\u67e5\u62d6\u653e\u6587\u4ef6\u7684 MIME \u7c7b\u578b\u4fe1\u606f\u3002MIME \u7c7b\u578b\u7531 Internet Assigned Numbers Authority (IANA) \u5b9a\u4e49\uff0cQt \u7684\u62d6\u653e\u4e8b\u4ef6\u4f7f\u7528 MIME \u7c7b\u578b\u6765\u5224\u65ad\u62d6\u653e\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u5173\u4e8e MIME \u7c7b\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003 http://www.iana.org/assignments/media-types/ \u3002MIME \u7c7b\u578b\u4e3a text/uri-list \u901a\u5e38\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a URI \u5217\u8868\u3002\u8fd9\u4e9b URI \u53ef\u4ee5\u662f\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u662f URL \u6216\u8005\u5176\u5b83\u7684\u8d44\u6e90\u63cf\u8ff0\u7b26\u3002\u5982\u679c\u53d1\u73b0\u7528\u6237\u62d6\u653e\u7684\u662f\u4e00\u4e2a text/uri-list \u6570\u636e\uff08\u5373\u6587\u4ef6\u540d\uff09\uff0c\u6211\u4eec\u4fbf\u63a5\u53d7\u8fd9\u4e2a\u52a8\u4f5c\u3002 void MainWindow::dropEvent ( QDropEvent * event ) { QList < QUrl > urls = event -> mimeData () -> urls (); if ( urls . isEmpty ()) { return ; } QString fileName = urls . first (). toLocalFile (); if ( fileName . isEmpty ()) { return ; } if ( readFile ( fileName )) { setWindowTitle ( tr ( \"%1 - %2\" ). arg ( fileName , tr ( \"Drag File\" ))); } } bool MainWindow::readFile ( const QString & fileName ) { bool r = false ; QFile file ( fileName ); QString content ; if ( file . open ( QIODevice :: ReadOnly )) { content = file . readAll (); r = true ; } textEdit -> setText ( content ); return r ; } \u5f53\u7528\u6237\u5c06\u5bf9\u8c61\u91ca\u653e\u5230\u7ec4\u4ef6\u4e0a\u9762\u65f6\uff0c\u7cfb\u7edf\u56de\u8c03 dropEvent() \u51fd\u6570\u3002\u6211\u4eec\u4f7f\u7528 QMimeData::urls() \u6765\u83b7\u5f97 QUrl \u7684\u4e00\u4e2a\u5217\u8868\u3002\u901a\u5e38\uff0c\u8fd9\u79cd\u62d6\u52a8\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u4e5f\u4e0d\u6392\u9664\u591a\u4e2a\u6587\u4ef6\u4e00\u8d77\u62d6\u52a8\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u68c0\u67e5\u8fd9\u4e2a\u5217\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u53d6\u51fa\u7b2c\u4e00\u4e2a\uff0c\u5426\u5219\u7acb\u5373\u8fd4\u56de\u3002\u6700\u540e\u6211\u4eec\u8c03\u7528 readFile() \u51fd\u6570\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 \u5728\u4e0b\u9762\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u5de6\u53f3\u4e24\u4e2a\u5e76\u5217\u7684\u5217\u8868\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e8c\u8005\u4e4b\u95f4\u6570\u636e\u7684\u76f8\u4e92\u62d6\u52a8\u3002 class ProjectListWidget : public QListWidget { Q_OBJECT public : ProjectListWidget ( QWidget * parent = 0 ); protected : void mousePressEvent ( QMouseEvent * event ); void mouseMoveEvent ( QMouseEvent * event ); void dragEnterEvent ( QDragEnterEvent * event ); void dragMoveEvent ( QDragMoveEvent * event ); void dropEvent ( QDropEvent * event ); private : void performDrag (); QPoint startPos ; }; ProjectListWidget \u662f\u6211\u4eec\u7684\u5217\u8868\u7684\u5b9e\u73b0\u3002\u8fd9\u4e2a\u7c7b\u7ee7\u627f\u81ea QListWidget \u3002\u5728\u6700\u7ec8\u7684\u7a0b\u5e8f\u4e2d\uff0c\u5c06\u4f1a\u662f\u4e24\u4e2a ProjectListWidget \u7684\u5e76\u5217\u3002 ProjectListWidget :: ProjectListWidget ( QWidget * parent ) : QListWidget ( parent ) { setAcceptDrops ( true ); } \u6784\u9020\u51fd\u6570\u6211\u4eec\u8bbe\u7f6e\u4e86 setAcceptDrops() \uff0c\u4f7f ProjectListWidget \u80fd\u591f\u652f\u6301\u62d6\u52a8\u64cd\u4f5c\u3002 void ProjectListWidget::mousePressEvent ( QMouseEvent * event ) { if ( event -> button () == Qt :: LeftButton ) startPos = event -> pos (); QListWidget :: mousePressEvent ( event ); } void ProjectListWidget::mouseMoveEvent ( QMouseEvent * event ) { if ( event -> buttons () & Qt :: LeftButton ) { int distance = ( event -> pos () - startPos ). manhattanLength (); if ( distance >= QApplication :: startDragDistance ()) performDrag (); } QListWidget :: mouseMoveEvent ( event ); } void ProjectListWidget::performDrag () { QListWidgetItem * item = currentItem (); if ( item ) { QMimeData * mimeData = new QMimeData ; mimeData -> setText ( item -> text ()); QDrag * drag = new QDrag ( this ); drag -> setMimeData ( mimeData ); drag -> setPixmap ( QPixmap ( \":/images/person.png\" )); if ( drag -> exec ( Qt :: MoveAction ) == Qt :: MoveAction ) delete item ; } } mousePressEvent() \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u68c0\u6d4b\u9f20\u6807\u5de6\u952e\u70b9\u51fb\uff0c\u5982\u679c\u662f\u7684\u8bdd\u5c31\u8bb0\u5f55\u4e0b\u5f53\u524d\u4f4d\u7f6e\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u6700\u540e\u9700\u8981\u8c03\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u5904\u7406\u51fd\u6570\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u901a\u5e38\u7684\u90a3\u79cd\u64cd\u4f5c\u3002\u8fd9\u5728\u4e00\u4e9b\u91cd\u5199\u4e8b\u4ef6\u7684\u51fd\u6570\u4e2d\u90fd\u662f\u9700\u8981\u6ce8\u610f\u7684\uff0c\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u53cd\u590d\u5f3a\u8c03\u8fc7\u8fd9\u4e00\u70b9\u3002 mouseMoveEvent() \u51fd\u6570\u5224\u65ad\u4e86\uff0c\u5982\u679c\u9f20\u6807\u5728\u79fb\u52a8\u7684\u65f6\u5019\u4e00\u76f4\u6309\u4f4f\u5de6\u952e\uff08\u4e5f\u5c31\u662f if \u91cc\u9762\u7684\u5185\u5bb9\uff09\uff0c\u90a3\u4e48\u5c31\u8ba1\u7b97\u4e00\u4e2a manhattanLength() \u503c\u3002\u4ece\u5b57\u9762\u4e0a\u7ffb\u8bd1\uff0c\u8fd9\u662f\u4e2a\u201c\u66fc\u54c8\u987f\u957f\u5ea6\u201d\u3002\u9996\u5148\u6765\u770b\u770b event.pos() - startPos \u662f\u4ec0\u4e48\u3002\u5728 mousePressEvent() \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u9f20\u6807\u6309\u4e0b\u7684\u5750\u6807\u8bb0\u5f55\u4e3a startPos\uff0c\u800c event.pos() \u5219\u662f\u9f20\u6807\u5f53\u524d\u7684\u5750\u6807\uff1a\u4e00\u4e2a\u70b9\u51cf\u53bb\u53e6\u5916\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4f4d\u79fb\u5411\u91cf\u3002\u6240\u8c13\u66fc\u54c8\u987f\u8ddd\u79bb\u5c31\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u6309\u7167\u52fe\u80a1\u5b9a\u7406\u8fdb\u884c\u8ba1\u7b97\u800c\u6765\uff09\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u3002\u7136\u540e\u7ee7\u7eed\u5224\u65ad\uff0c\u5982\u679c\u5927\u4e8e QApplication::startDragDistance() \uff0c\u6211\u4eec\u624d\u8fdb\u884c\u91ca\u653e\u7684\u64cd\u4f5c\u3002\u5f53\u7136\uff0c\u6700\u540e\u8fd8\u662f\u8981\u8c03\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u9f20\u6807\u62d6\u52a8\u51fd\u6570\u3002\u8fd9\u4e00\u5224\u65ad\u7684\u610f\u4e49\u5728\u4e8e\uff0c\u9632\u6b62\u7528\u6237\u56e0\u4e3a\u624b\u7684\u6296\u52a8\u7b49\u56e0\u7d20\u9020\u6210\u7684\u9f20\u6807\u62d6\u52a8\u3002\u7528\u6237\u5fc5\u987b\u5c06\u9f20\u6807\u62d6\u52a8\u4e00\u6bb5\u8ddd\u79bb\u4e4b\u540e\uff0c\u6211\u4eec\u624d\u8ba4\u4e3a\u4ed6\u662f\u5e0c\u671b\u8fdb\u884c\u62d6\u52a8\u64cd\u4f5c\uff0c\u800c\u8fd9\u4e00\u8ddd\u79bb\u5c31\u662f QApplication::startDragDistance() \u63d0\u4f9b\u7684\uff0c\u8fd9\u4e2a\u503c\u901a\u5e38\u662f 4px\u3002 performDrag() \u5f00\u59cb\u5904\u7406\u62d6\u653e\u7684\u8fc7\u7a0b\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a QDrag \u5bf9\u8c61\uff0c\u5c06 this \u4f5c\u4e3a parent\u3002 QDrag \u4f7f\u7528 QMimeData \u5b58\u50a8\u6570\u636e\u3002\u4f8b\u5982\u6211\u4eec\u4f7f\u7528 QMimeData::setText() \u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b58\u50a8\u4e3a text/plain \u7c7b\u578b\u7684\u6570\u636e\u3002 QMimeData \u63d0\u4f9b\u4e86\u5f88\u591a\u51fd\u6570\uff0c\u7528\u4e8e\u5b58\u50a8\u8bf8\u5982 URL\u3001\u989c\u8272\u7b49\u7c7b\u578b\u7684\u6570\u636e\u3002\u4f7f\u7528 QDrag::setPixmap() \u5219\u53ef\u4ee5\u8bbe\u7f6e\u62d6\u52a8\u53d1\u751f\u65f6\u9f20\u6807\u7684\u6837\u5f0f\u3002 QDrag::exec() \u4f1a\u963b\u585e\u62d6\u52a8\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u7528\u6237\u5b8c\u6210\u64cd\u4f5c\u6216\u8005\u53d6\u6d88\u64cd\u4f5c\u3002\u5b83\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684\u52a8\u4f5c\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u662f\u771f\u6b63\u6267\u884c\u7684\u52a8\u4f5c\u3002\u8fd9\u4e9b\u52a8\u4f5c\u7684\u7c7b\u578b\u4e00\u822c\u4e3a Qt::CopyAction \uff0c Qt::MoveAction \u548c Qt::LinkAction \u3002\u8fd4\u56de\u503c\u4f1a\u6709\u8fd9\u51e0\u79cd\u52a8\u4f5c\uff0c\u540c\u65f6\u8fd8\u4f1a\u6709\u4e00\u4e2a Qt::IgnoreAction \u7528\u4e8e\u8868\u793a\u7528\u6237\u53d6\u6d88\u4e86\u62d6\u653e\u3002\u8fd9\u4e9b\u52a8\u4f5c\u53d6\u51b3\u4e8e\u62d6\u653e\u6e90\u5bf9\u8c61\u5141\u8bb8\u7684\u7c7b\u578b\uff0c\u76ee\u7684\u5bf9\u8c61\u63a5\u53d7\u7684\u7c7b\u578b\u4ee5\u53ca\u62d6\u653e\u65f6\u6309\u4e0b\u7684\u952e\u76d8\u6309\u952e\u3002\u5728 exec() \u8c03\u7528\u4e4b\u540e\uff0cQt \u4f1a\u5728\u62d6\u653e\u5bf9\u8c61\u4e0d\u9700\u8981\u7684\u65f6\u5019\u91ca\u653e\u6389\u3002 void ProjectListWidget::dragMoveEvent ( QDragMoveEvent * event ) { ProjectListWidget * source = qobject_cast ( event -> source ()); if ( source && source != this ) { event -> setDropAction ( Qt :: MoveAction ); event -> accept (); } } void ProjectListWidget::dropEvent ( QDropEvent * event ) { ProjectListWidget * source = qobject_cast ( event -> source ()); if ( source && source != this ) { addItem ( event -> mimeData () -> text ()); event -> setDropAction ( Qt :: MoveAction ); event -> accept (); } } dragMoveEvent() \u548c dropEvent() \u76f8\u4f3c\u3002\u9996\u5148\u5224\u65ad\u4e8b\u4ef6\u7684\u6765\u6e90\uff08source\uff09\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u4e24\u4e2a ProjectListWidget \u4e4b\u95f4\u76f8\u4e92\u62d6\u52a8\uff0c\u6240\u4ee5\u6765\u6e90\u5e94\u8be5\u662f ProjectListWidget \u7c7b\u578b\u7684\uff08\u5f53\u7136\uff0c\u8fd9\u4e2a source \u4e0d\u80fd\u662f\u81ea\u5df1\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u5f97\u5224\u65ad source != this \uff09\u3002 dragMoveEvent() \u4e2d\u6211\u4eec\u68c0\u67e5\u7684\u662f\u88ab\u62d6\u52a8\u7684\u5bf9\u8c61\uff1b dropEvent() \u4e2d\u6211\u4eec\u68c0\u67e5\u7684\u662f\u91ca\u653e\u7684\u5bf9\u8c61\uff1a\u8fd9\u4e8c\u8005\u662f\u4e0d\u540c\u7684\u3002","title":"37. \u4f7f\u7528\u62d6\u653e"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/38.%20%E5%89%AA%E8%B4%B4%E6%9D%BF/","text":"\u526a\u8d34\u677f\u7684\u64cd\u4f5c\u7ecf\u5e38\u548c\u524d\u9762\u6240\u8bf4\u7684[[37. \u4f7f\u7528\u62d6\u653e|\u62d6\u653e]]\u6280\u672f\u5728\u4e00\u8d77\u4f7f\u7528\u3002\u5927\u5bb6\u5bf9\u526a\u8d34\u677f\u90fd\u5f88\u719f\u6089\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u628a\u5b83\u7406\u89e3\u6210\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u6c60\uff0c\u5916\u9762\u7684\u6570\u636e\u53ef\u4ee5\u5b58\u8fdb\u53bb\uff0c\u91cc\u9762\u6570\u636e\u4e5f\u53ef\u4ee5\u53d6\u51fa\u6765\u3002\u526a\u8d34\u677f\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u7ef4\u62a4\u7684\uff0c\u6240\u4ee5\u8fd9\u63d0\u4f9b\u4e86\u8de8\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u4ea4\u4e92\u7684\u4e00\u79cd\u65b9\u5f0f\u3002Qt \u5df2\u7ecf\u4e3a\u6211\u4eec\u5c01\u88c5\u597d\u5f88\u591a\u5173\u4e8e\u526a\u8d34\u677f\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5e94\u7528\u4e2d\u5f88\u5bb9\u6613\u5b9e\u73b0\u5bf9\u526a\u8d34\u677f\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5b9e\u73b0\u8d77\u6765\u4e5f\u662f\u5f88\u7b80\u5355\u7684\uff1a class ClipboardDemo : public QWidget { Q_OBJECT public : ClipboardDemo ( QWidget * parent = 0 ); private slots : void setClipboardContent (); void getClipboardContent (); }; \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a ClipboardDemo \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u53ea\u6709\u4e24\u4e2a\u69fd\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u4ece\u526a\u8d34\u677f\u83b7\u53d6\u5185\u5bb9\uff0c\u4e00\u4e2a\u662f\u7ed9\u526a\u8d34\u677f\u8bbe\u7f6e\u5185\u5bb9\u3002 ClipboardDemo :: ClipboardDemo ( QWidget * parent ) : QWidget ( parent ) { QVBoxLayout * mainLayout = new QVBoxLayout ( this ); QHBoxLayout * northLayout = new QHBoxLayout ; QHBoxLayout * southLayout = new QHBoxLayout ; QTextEdit * editor = new QTextEdit ; QLabel * label = new QLabel ; label -> setText ( \"Text Input: \" ); label -> setBuddy ( editor ); QPushButton * copyButton = new QPushButton ; copyButton -> setText ( \"Set Clipboard\" ); QPushButton * pasteButton = new QPushButton ; pasteButton -> setText ( \"Get Clipboard\" ); northLayout -> addWidget ( label ); northLayout -> addWidget ( editor ); southLayout -> addWidget ( copyButton ); southLayout -> addWidget ( pasteButton ); mainLayout -> addLayout ( northLayout ); mainLayout -> addLayout ( southLayout ); connect ( copyButton , SIGNAL ( clicked ()), this , SLOT ( setClipboardContent ())); connect ( pasteButton , SIGNAL ( clicked ()), this , SLOT ( getClipboardContent ())); } \u4e3b\u754c\u9762\u4e5f\u5f88\u7b80\u5355\uff1a\u7a0b\u5e8f\u5206\u4e3a\u4e0a\u4e0b\u4e24\u884c\uff0c\u4e0a\u4e00\u884c\u663e\u793a\u4e00\u4e2a\u6587\u672c\u6846\uff0c\u4e0b\u4e00\u884c\u662f\u4e24\u4e2a\u6309\u94ae\uff0c\u5206\u522b\u4e3a\u8bbe\u7f6e\u526a\u8d34\u677f\u548c\u8bfb\u53d6\u526a\u8d34\u677f\u3002\u6700\u4e3b\u8981\u7684\u4ee3\u7801\u8fd8\u662f\u5728\u4e24\u4e2a\u69fd\u51fd\u6570\u4e2d\uff1a void ClipboardDemo::setClipboardContent () { QClipboard * board = QApplication :: clipboard (); board -> setText ( \"Text from Qt Application\" ); } void ClipboardDemo::getClipboardContent () { QClipboard * board = QApplication :: clipboard (); QString str = board -> text (); QMessageBox :: information ( NULL , \"From clipboard\" , str ); } \u69fd\u51fd\u6570\u4e5f\u5f88\u7b80\u5355\u3002\u6211\u4eec\u4f7f\u7528 QApplication::clipboard() \u51fd\u6570\u83b7\u5f97\u7cfb\u7edf\u526a\u8d34\u677f\u5bf9\u8c61\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f QClipboard \u6307\u9488\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u7c7b\u7684 API \u4e2d\u770b\u5230\uff0c\u901a\u8fc7 setText() \uff0c setImage() \u6216\u8005 setPixmap() \u51fd\u6570\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u7f6e\u5230\u526a\u8d34\u677f\u5185\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u6240\u8bf4\u7684\u526a\u8d34\u6216\u8005\u590d\u5236\u7684\u64cd\u4f5c\uff1b\u4f7f\u7528 text() \uff0c image() \u6216\u8005 pixmap() \u51fd\u6570\u5219\u53ef\u4ee5\u4ece\u526a\u8d34\u677f\u83b7\u5f97\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u7c98\u8d34\u3002 \u53e6\u5916\u503c\u5f97\u8bf4\u7684\u662f\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c QTextEdit \u9ed8\u8ba4\u5c31\u652f\u6301 Ctrl+C, Ctrl+V \u7b49\u5feb\u6377\u952e\u64cd\u4f5c\u7684\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5f88\u591a Qt \u7684\u7ec4\u4ef6\u90fd\u63d0\u4f9b\u4e86\u5f88\u65b9\u4fbf\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u6587\u6863\u4e2d\u83b7\u53d6\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u907f\u514d\u81ea\u5df1\u91cd\u65b0\u53bb\u53d1\u660e\u8f6e\u5b50\u3002 QClipboard \u63d0\u4f9b\u7684\u6570\u636e\u7c7b\u578b\u5f88\u5c11\uff0c\u5982\u679c\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f QMimeData \u7c7b\uff0c\u901a\u8fc7\u8c03\u7528 setMimeData() \u51fd\u6570\u8ba9\u526a\u8d34\u677f\u80fd\u591f\u652f\u6301\u6211\u4eec\u81ea\u5df1\u7684\u6570\u636e\u7c7b\u578b\u3002","title":"38. \u526a\u8d34\u677f"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/39.%20QML%20%E5%92%8C%20QtQuick%202/","text":"\u4ece Qt 4.7 \u5f00\u59cb\uff0cQt \u5f15\u5165\u4e86\u4e00\u79cd\u58f0\u660e\u5f0f\u811a\u672c\u8bed\u8a00\uff0c\u79f0\u4e3a QML\uff08Qt Meta Language \u6216\u8005 Qt Modeling Language\uff09\uff0c\u4f5c\u4e3a C++ \u8bed\u8a00\u7684\u4e00\u79cd\u66ff\u4ee3\u3002\u800c Qt Quick \u5c31\u662f\u4f7f\u7528 QML \u6784\u5efa\u7684\u4e00\u5957\u7c7b\u5e93\u3002 QML \u662f\u4e00\u79cd\u57fa\u4e8e JavaScript \u7684\u58f0\u660e\u5f0f\u8bed\u8a00\u3002\u5728 Qt 5 \u4e2d\uff0cQML \u6709\u4e86\u957f\u8db3\u8fdb\u6b65\uff0c\u5e76\u4e14\u540c C++ \u5e76\u5217\u6210\u4e3a Qt \u7684\u9996\u9009\u7f16\u7a0b\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f7f\u7528 Qt 5\uff0c\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528 C++ \u5f00\u53d1 Qt \u7a0b\u5e8f\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u7528 QML\u3002\u867d\u7136 QML \u662f\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u6027\u80fd\u8981\u6bd4 C++ \u4f4e\u4e00\u4e9b\uff0c\u4f46\u662f\u65b0\u7248 QML \u4f7f\u7528 V8\uff0cQt 5.2 \u53c8\u5f15\u5165\u4e86\u4e13\u4e3a QML \u4f18\u5316\u7684 V4 \u5f15\u64ce\uff0c\u4f7f\u5f97\u5176\u6027\u80fd\u4e0d\u518d\u6709\u660e\u663e\u964d\u4f4e\u3002\u5728 Nokia \u53d1\u5e03 Qt 4.7 \u7684\u65f6\u5019\uff0cQML \u88ab\u7528\u4e8e\u5f00\u53d1\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5168\u9762\u652f\u6301\u89e6\u6478\u64cd\u4f5c\u3001\u6d41\u7545\u7684\u52a8\u753b\u6548\u679c\u7b49\u3002\u4f46\u662f\u5728 Qt 5 \u4e2d\uff0cQML \u5df2\u7ecf\u4e0d\u4ec5\u9650\u4e8e\u5f00\u53d1\u624b\u673a\u5e94\u7528\uff0c\u4e5f\u53ef\u4ee5\u7528\u6237\u5f00\u53d1\u4f20\u7edf\u7684\u684c\u9762\u7a0b\u5e8f\u3002 ^7aa44d QML \u6587\u6863\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5bf9\u8c61\u6811\u3002QML \u5143\u7d20\u5305\u542b\u4e86\u5176\u6784\u9020\u5757\u3001\u56fe\u5f62\u5143\u7d20\uff08\u77e9\u5f62\u3001\u56fe\u7247\u7b49\uff09\u548c\u884c\u4e3a\uff08\u4f8b\u5982\u52a8\u753b\u3001\u5207\u6362\u7b49\uff09\u3002\u8fd9\u4e9b QML \u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u5d4c\u5957\u5173\u7cfb\u6784\u6210\u590d\u6742\u7684\u7ec4\u4ef6\uff0c\u4f9b\u7528\u6237\u4ea4\u4e92\u3002 \u65b0\u5efa QML \u5de5\u7a0b\u540e\uff0c\u4f1a\u81ea\u52a8\u751f\u4ea7\u5f88\u591a\u6587\u4ef6\uff1a ![[QML\u5de5\u7a0b.png]] \u6211\u4eec\u771f\u6b63\u5173\u5fc3\u7684\u662f main.qml \u91cc\u9762\u7684\u5185\u5bb9\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello World\" ) } \u4e00\u4e2a QML \u6587\u6863\u5206\u4e3a import \u548c declaration \u4e24\u90e8\u5206\u3002\u524d\u8005\u7528\u4e8e\u5f15\u5165\u6587\u6863\u4e2d\u6240\u9700\u8981\u7684\u7ec4\u4ef6\uff08\u6709\u53ef\u80fd\u662f\u7c7b\u5e93\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a JavaScript \u6587\u4ef6\u6216\u8005\u53e6\u5916\u7684 QML \u6587\u4ef6\uff09\uff1b\u540e\u8005\u7528\u4e8e\u58f0\u660e\u672c\u6587\u6863\u4e2d\u7684 QML \u5143\u7d20\u3002 \u7b2c\u4e00\u884c\uff0c\u6211\u4eec\u4f7f\u7528 import \u8bed\u53e5\u5f15\u5165 QtQuick 2.12\u3002 \u7b2c\u4e8c\u884c\uff0c\u5f15\u5165\u4e86 QtQuick.Window 2.12\u3002 \u6bcf\u4e00\u4e2a QML \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u5143\u7d20\uff0c\u7c7b\u4f3c\u4e8e XML \u6587\u6863\u3002\u8fd9\u4e2a\u6839\u5143\u7d20\u5c31\u662f\u8fd9\u4e2a QML \u6587\u6863\u4e2d\u5b9a\u4e49\u7684 QML \u5143\u7d20\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5c31\u662f\u4e00\u4e2a Window \u5bf9\u8c61\u3002\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a QML \u6587\u6863\u7684\u5177\u4f53\u8bed\u6cd5\uff0c\u975e\u5e38\u7c7b\u4f3c\u4e8e JSON \u7684\u5b9a\u4e49\uff0c\u4f7f\u7528\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u533a\u5206\u5143\u7d20\u5c5e\u6027\u3002\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u5f88\u6e05\u695a\u770b\u5230\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7a97\u53e3\uff0c\u5bbd\u5ea6\u4e3a 640 \u50cf\u7d20\uff0c\u9ad8\u5ea6\u4e3a 480 \u50cf\u7d20\u3002\u8bb0\u5f97\u6211\u4eec\u8bf4\u8fc7\uff0cQML \u6587\u6863\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u6811\uff0c\u6240\u4ee5 QML \u6587\u6863\u4e2d\u5143\u7d20\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u6539\u53d8 main.qml \u6587\u4ef6\u4e2d\u7684\u201cHello World\u201d\u5b57\u7b26\u4e32\uff0c\u4e0d\u91cd\u65b0\u7f16\u8bd1\u76f4\u63a5\u8fd0\u884c\uff0c\u5c31\u4f1a\u770b\u5230\u8fd0\u884c\u7ed3\u679c\u4e5f\u4f1a\u76f8\u5e94\u7684\u53d8\u5316\u3002\u8fd9\u8bf4\u660e QML \u6587\u6863\u662f\u8fd0\u884c\u65f6\u89e3\u91ca\u7684\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7\u7f16\u8bd1\u3002\u6240\u4ee5\uff0c\u5229\u7528 QML \u7684\u89e3\u91ca\u6267\u884c\u7684\u7279\u6027\uff0cQML \u5c24\u5176\u9002\u5408\u4e8e\u5feb\u901f\u5f00\u53d1\u548c\u539f\u578b\u5efa\u6a21\u3002\u53e6\u5916\uff0c\u7531\u4e8e QML \u6bd4 C++ \u7b80\u5355\u5f88\u591a\uff0c\u6240\u4ee5 QML \u4e5f\u9002\u7528\u4e8e\u63d0\u4f9b\u63d2\u4ef6\u7b49\u673a\u5236\u3002","title":"39. QML \u548c QtQuick 2"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/40.%20QML%20%E8%AF%AD%E6%B3%95/","text":"\u53ef\u53c2\u8003\u94fe\u63a5\uff1a Qt5 Cadaques \u2014 Qt5 Cadaques Book vmaster (qmlbook.github.io) [[39. QML \u548c QtQuick 2#^7aa44d|QML]] \u662f\u4e00\u79cd\u58f0\u660e\u8bed\u8a00\uff0c\u7528\u4e8e\u63cf\u8ff0\u7a0b\u5e8f\u754c\u9762\u3002QML \u5c06\u7528\u6237\u754c\u9762\u5206\u89e3\u6210\u4e00\u5757\u5757\u5c0f\u7684\u5143\u7d20\uff0c\u6bcf\u4e00\u5143\u7d20\u90fd\u7531\u5f88\u591a\u7ec4\u4ef6\u6784\u6210\u3002QML \u5b9a\u4e49\u4e86\u7528\u6237\u754c\u9762\u5143\u7d20\u7684\u5916\u89c2\u548c\u884c\u4e3a\uff1b\u66f4\u590d\u6742\u7684\u903b\u8f91\u5219\u53ef\u4ee5\u7ed3\u5408 JavaScript \u811a\u672c\u5b9e\u73b0\u3002\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e HTML \u548c JavaScript \u7684\u5173\u7cfb\uff0c\u524d\u8005\u7528\u6765\u663e\u793a\u754c\u9762\uff0c\u540e\u8005\u7528\u6765\u5b9a\u4e49\u884c\u4e3a\u3002 QML \u5728\u6700\u7b80\u5355\u7684\u5143\u7d20\u5173\u7cfb\u662f\u5c42\u6b21\u5173\u7cfb\u3002\u5b50\u5143\u7d20\u5904\u4e8e\u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u7684\u5750\u6807\u7cfb\u7edf\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b50\u5143\u7d20\u7684 x \u548c y \u7684\u5750\u6807\u503c\u59cb\u7ec8\u76f8\u5bf9\u4e8e\u7236\u5143\u7d20\u3002\u8fd9\u4e00\u70b9\u6bd4\u8d77[[25. Graphics View Framework|Graphics View Framework]]\u8981\u7b80\u5355\u5f97\u591a\u3002 ![[QML\u8bed\u6cd5.png]] \u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6587\u6863\u6765\u4e86\u89e3 QML \u7684\u8bed\u6cd5\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { // \u547d\u540d\u6839\u5143\u7d20 id : root // \u58f0\u660e\u5c5e\u6027\uff1a<name>: <value> width : 120 ; height : 240 color : \"#D8D8D8\" // \u989c\u8272\u5c5e\u6027 // \u58f0\u660e\u4e00\u4e2a\u5d4c\u5957\u5143\u7d20\uff08\u6839\u5143\u7d20\u7684\u5b50\u5143\u7d20\uff09 Image { id : rocket x : ( parent . width - width ) / 2 ; y : 40 // \u4f7f\u7528 parent \u5f15\u7528\u7236\u5143\u7d20 source : ' assets / rocket . png ' } // \u6839\u5143\u7d20\u7684\u53e6\u4e00\u4e2a\u5b50\u5143\u7d20 Text { // \u8be5\u5143\u7d20\u672a\u547d\u540d y : rocket . y + rocket . height + 20 // \u4f7f\u7528 id \u5f15\u7528\u5143\u7d20 width : root . width // \u4f7f\u7528 id \u5f15\u7528\u5143\u7d20 horizontalAlignment : Text . AlignHCenter text : ' Rocket ' } } } \u7b2c\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662f import \u8bed\u53e5\u3002\u524d\u9762\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u8fc7\uff0cQML \u6587\u6863\u603b\u8981\u6709 import \u90e8\u5206\uff0c\u7528\u4e8e\u6307\u5b9a\u8be5\u6587\u6863\u6240\u9700\u8981\u5f15\u5165\u7684\u6a21\u5757\u3002\u901a\u5e38\u8fd9\u662f\u4e00\u4e2a\u6a21\u5757\u540d\u548c\u7248\u672c\u53f7\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684 QtQuick 2.12 \u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f15\u5165\u81ea\u5df1\u7684\u6a21\u5757\u6216\u8005\u5176\u4ed6\u6587\u4ef6\u3002 QML\u6587\u6863\u7684\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f QML \u5143\u7d20\u3002\u4e00\u4e2a QML \u6587\u6863\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u5143\u7d20\uff0c\u7c7b\u4f3c XML \u6587\u6863\u7684\u89c4\u5b9a\u3002QML \u6587\u6863\u4e2d\u7684\u5143\u7d20\u540c\u6837\u7c7b\u4f3c XML \u6587\u6863\uff0c\u6784\u6210\u4e00\u68f5\u6811\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e2a\u6839\u5143\u7d20\u5c31\u662f Window \u5143\u7d20\u3002QML \u5143\u7d20\u4f7f\u7528 {} \u5305\u56f4\u8d77\u6765\u3002{} \u4e4b\u4e2d\u662f\u8be5\u5143\u7d20\u7684\u5c5e\u6027\uff1b\u5c5e\u6027\u4ee5\u952e\u503c\u5bf9 name : value \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u8fd9\u5341\u5206\u7c7b\u4f3c\u4e0e JSON \u8bed\u6cd5\u3002QML \u5143\u7d20\u53ef\u4ee5\u6709\u4e00\u4e2a id \u5c5e\u6027\uff0c\u4f5c\u4e3a\u8be5\u5143\u7d20\u7684\u540d\u5b57\u3002\u4ee5\u540e\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e2a\u540d\u5b57\u6307\u4ee3\u8be5\u5143\u7d20\uff0c\u76f8\u5f53\u4e8e\u8be5\u5143\u7d20\u7684\u6307\u9488\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c id \u5c5e\u6027\u5728\u6574\u4e2a QML \u6587\u6863\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002QML \u5143\u7d20\u5141\u8bb8\u5d4c\u5957\uff0c\u4e00\u4e2a QML \u5143\u7d20\u53ef\u4ee5\u6ca1\u6709\u3001\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u5143\u7d20\u3002\u5b50\u5143\u7d20\u53ef\u4ee5\u4f7f\u7528 parent \u5173\u952e\u5b57\u8bbf\u95ee\u5176\u7236\u5143\u7d20\u3002\u6b63\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u663e\u793a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 id\uff0c\u4e5f\u53ef\u4ee5\u7528 parent \u5173\u952e\u5b57\u8bbf\u95ee\u5176\u4ed6\u5143\u7d20\u3002\u4e00\u4e2a\u6700\u4f73\u5b9e\u8df5\u662f\uff0c\u5c06\u6839\u5143\u7d20\u7684 id \u547d\u540d\u4e3a root\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8bbf\u95ee\u5230\u6839\u5143\u7d20\u3002 QML \u6587\u6863\u7684\u6ce8\u91ca\u4f7f\u7528 // \u6216\u8005 /**/ \u3002\u8fd9\u540c C/C++ \u6216\u8005 JavaScript \u662f\u4e00\u81f4\u7684\u3002 QML \u5143\u7d20\u7684\u5c5e\u6027\u5c31\u662f\u952e\u503c\u5bf9\uff0c\u8fd9\u540c JSON \u662f\u4e00\u81f4\u7684\u3002\u5c5e\u6027\u662f\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u521d\u59cb\u503c\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Text { // (1) \u6807\u8bc6\u7b26 id : thisLabel // (2) x\u3001y \u5750\u6807 x : 24 ; y : 16 // (3) \u7ed1\u5b9a height : 2 * width // (4) \u81ea\u5b9a\u4e49\u5c5e\u6027 property int times : 24 // (5) \u5c5e\u6027\u522b\u540d property alias anotherTimes : times // (6) \u6587\u672c\u548c\u503c text : \"Greetings \" + times // (7) \u5b57\u4f53\u5c5e\u6027\u7ec4 font . family : \"Ubuntu\" font . pixelSize : 24 // (8) \u9644\u52a0\u5c5e\u6027 KeyNavigation KeyNavigation . tab : otherLabel // (9) \u5c5e\u6027\u503c\u6539\u53d8\u7684\u4fe1\u53f7\u5904\u7406\u56de\u8c03 onHeightChanged : console . log ( ' height : ' , height ) // \u63a5\u6536\u952e\u76d8\u4e8b\u4ef6\u9700\u8981\u8bbe\u7f6e focus focus : true // \u6839\u636e focus \u503c\u6539\u53d8\u989c\u8272 color : focus ? \"red\" : \"black\" } \u6807\u8bc6\u7b26 id \u7528\u4e8e\u5728 QML \u6587\u6863\u4e2d\u5f15\u7528\u8fd9\u4e2a\u5143\u7d20\u3002id \u5e76\u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26\u7c7b\u578b\uff0c\u8fd9\u662f QML \u8bed\u6cd5\u7684\u4e00\u90e8\u5206\u3002\u5982\u524d\u6587\u6240\u8ff0\uff0cid \u5728\u6587\u6863\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u4e00\u65e6\u6307\u5b9a\uff0c\u4e0d\u5141\u8bb8\u91cd\u65b0\u8bbe\u7f6e\u4e3a\u53e6\u5916\u7684\u5143\u7d20\u3002\u56e0\u6b64\uff0cid \u5f88\u50cf C++ \u7684\u6307\u9488\u3002\u548c\u6307\u9488\u7c7b\u4f3c\uff0cid \u4e5f\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u5177\u4f53\u89c4\u5219\u540c C++ \u6307\u9488\u7684\u547d\u540d\u4e00\u81f4\u3002id \u770b\u8d77\u6765\u540c\u5176\u5b83\u5c5e\u6027\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528 id \u53cd\u67e5\u51fa\u5177\u4f53\u7684\u503c\u3002\u4f8b\u5982\uff0c aElement.id \u662f\u4e0d\u5141\u8bb8\u7684\u3002 \u5143\u7d20 id \u5e94\u8be5\u5728 QML \u6587\u6863\u4e2d\u662f\u552f\u4e00\u7684\u3002\u5b9e\u9645\u4e0a\uff0cQML \u63d0\u4f9b\u4e86\u4e00\u79cd\u52a8\u6001\u4f5c\u7528\u57df\uff08dynamic-scoping\uff09\u7684\u673a\u5236\uff0c\u540e\u52a0\u8f7d\u7684\u6587\u6863\u4f1a\u8986\u76d6\u6389\u524d\u9762\u52a0\u8f7d\u7684\u6587\u6863\u7684\u76f8\u540c id\u3002\u8fd9\u770b\u8d77\u6765\u80fd\u591f\u201c\u66f4\u6539\u201d id \u7684\u6307\u5411\uff0c\u5176\u610f\u4e49\u662f\u6784\u6210\u4e00\u4e2a id \u7684\u67e5\u8be2\u94fe\u3002\u5982\u679c\u5f53\u524d\u6587\u6863\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a id\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u4e4b\u524d\u52a0\u8f7d\u7684\u6587\u6863\u4e2d\u627e\u5230\u3002\u8fd9\u5f88\u50cf\u5168\u5c40\u53d8\u91cf\u3002\u4e0d\u8fc7\uff0c\u8fd9\u79cd\u4ee3\u7801\u5f88\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u8fd9\u79cd\u673a\u5236\u610f\u5473\u7740\u4f60\u7684\u4ee3\u7801\u4f9d\u8d56\u4e8e\u6587\u6863\u7684\u52a0\u8f7d\u987a\u5e8f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u5173\u95ed\u8fd9\u79cd\u673a\u5236\u3002\u56e0\u6b64\uff0c\u5728\u9009\u7528 id \u65f6\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u6ce8\u610f\u552f\u4e00\u6027\u8fd9\u4e2a\u8981\u6c42\uff0c\u5426\u5219\u5f88\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u5f88\u96be\u8c03\u8bd5\u7684\u95ee\u9898\u3002 \u5c5e\u6027\u7684\u503c\u7531\u5176\u7c7b\u578b\u51b3\u5b9a\u3002\u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u6ca1\u6709\u7ed9\u503c\uff0c\u5219\u4f1a\u4f7f\u7528\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u6587\u6863\u627e\u5230\u5c5e\u6027\u9ed8\u8ba4\u503c\u7a76\u7adf\u662f\u4ec0\u4e48\u3002 \u5c5e\u6027\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5176\u5b83\u5c5e\u6027\uff0c\u8fd9\u79cd\u884c\u4e3a\u53eb\u4f5c\u7ed1\u5b9a\u3002\u7ed1\u5b9a\u7c7b\u4f3c\u4fe1\u53f7\u69fd\u673a\u5236\u3002\u5f53\u6240\u4f9d\u8d56\u7684\u5c5e\u6027\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u7ed1\u5b9a\u5230\u8fd9\u4e2a\u5c5e\u6027\u7684\u5c5e\u6027\u4f1a\u5f97\u5230\u901a\u77e5\uff0c\u5e76\u4e14\u81ea\u52a8\u66f4\u65b0\u81ea\u5df1\u7684\u503c\u3002\u4f8b\u5982\u4e0a\u9762\u7684 height: 2 * width \u3002 height \u4f9d\u8d56\u4e8e width \u5c5e\u6027\u3002\u5f53 width \u6539\u53d8\u65f6\uff0c height \u4f1a\u81ea\u52a8\u53d1\u751f\u53d8\u5316\uff0c\u5c06\u81ea\u8eab\u7684\u503c\u66f4\u65b0\u4e3a width \u65b0\u503c\u7684\u4e24\u500d\u3002 text \u5c5e\u6027\u4e5f\u662f\u4e00\u4e2a\u7ed1\u5b9a\u7684\u4f8b\u5b50\u3002\u6ce8\u610f\uff0c int \u7c7b\u578b\u7684\u5c5e\u6027\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff1b\u5e76\u4e14\u5728\u503c\u53d8\u5316\u65f6\uff0c\u7ed1\u5b9a\u4f9d\u7136\u6210\u7acb\u3002 \u7cfb\u7edf\u63d0\u4f9b\u7684\u5c5e\u6027\u80af\u5b9a\u662f\u4e0d\u591f\u7684\u3002\u6240\u4ee5 QML \u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 property \u5173\u952e\u5b57\u58f0\u660e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u540e\u9762\u662f\u5c5e\u6027\u7c7b\u578b\u548c\u5c5e\u6027\u540d\uff0c\u6700\u540e\u662f\u5c5e\u6027\u503c\u3002\u58f0\u660e\u81ea\u5b9a\u4e49\u5c5e\u6027\u7684\u8bed\u6cd5\u662f property <type> <name> : <value> \u3002\u5982\u679c\u6ca1\u6709\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u5c06\u7ed9\u51fa\u7cfb\u7edf\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u9ed8\u8ba4\u5c5e\u6027\uff0c\u4f8b\u5982\uff1a // MyLabel.qml import QtQuick 2.0 Text { default property var defaultText text : \"Hello, \" + defaultText . text } \u5728 MyLabel \u4e2d\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u5c5e\u6027 defaultText \u3002\u6ce8\u610f\u8fd9\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u662f var \u3002\u8fd9\u662f\u4e00\u79cd\u901a\u7528\u7c7b\u578b\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4efb\u4f55\u7c7b\u578b\u7684\u5c5e\u6027\u503c\u3002 \u9ed8\u8ba4\u5c5e\u6027\u7684\u542b\u4e49\u5728\u4e8e\uff0c\u5982\u679c\u4e00\u4e2a\u5b50\u5143\u7d20\u5728\u7236\u5143\u7d20\u4e2d\uff0c\u4f46\u662f\u6ca1\u6709\u8d4b\u503c\u7ed9\u7236\u5143\u7d20\u7684\u4efb\u4f55\u5c5e\u6027\uff0c\u90a3\u4e48\u5b83\u5c31\u6210\u4e3a\u8fd9\u4e2a\u9ed8\u8ba4\u5c5e\u6027\u3002\u5229\u7528\u4e0a\u9762\u7684 MyLabel \uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u5982\u4e0b\u7684\u4ee3\u7801\uff1a MyLabel { Text { text : \"world\" } } MyLabel.qml \u5b9e\u9645\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165\u5230\u53e6\u5916\u7684 QML \u6587\u6863\uff0c\u5f53\u505a\u4e00\u4e2a\u72ec\u7acb\u7684\u5143\u7d20\u4f7f\u7528\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a MyLabel \u4f5c\u4e3a\u6839\u5143\u7d20\u3002\u6ce8\u610f MyLabel \u7684\u5b50\u5143\u7d20 Text \u6ca1\u6709\u8d4b\u503c\u7ed9 MyLabel \u7684\u4efb\u4f55\u5c5e\u6027\uff0c\u6240\u4ee5\uff0c\u5b83\u5c06\u81ea\u52a8\u6210\u4e3a\u9ed8\u8ba4\u5c5e\u6027 defaultText \u7684\u503c\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u5176\u5b9e\u7b49\u4ef7\u4e8e\uff1a MyLabel { defaultText \uff1a Text { text : \"world\" } } \u5982\u679c\u4ed4\u7ec6\u67e5\u770b\u4ee3\u7801\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u79cd\u9ed8\u8ba4\u5c5e\u6027\u7684\u5199\u6cd5\u5f88\u50cf\u5d4c\u5957\u5143\u7d20\u3002\u5176\u5b9e\u5d4c\u5957\u5143\u7d20\u6b63\u662f\u5229\u7528\u8fd9\u79cd\u9ed8\u8ba4\u5c5e\u6027\u5b9e\u73b0\u7684\u3002\u6240\u6709\u53ef\u4ee5\u5d4c\u5957\u5143\u7d20\u7684\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u540d\u4e3a data \u7684\u9ed8\u8ba4\u5c5e\u6027\u3002\u6240\u4ee5\u8fd9\u4e9b\u5d4c\u5957\u7684\u5b50\u5143\u7d20\u90fd\u662f\u6dfb\u52a0\u5230\u4e86 data \u5c5e\u6027\u4e2d\u3002 \u5c5e\u6027\u4e5f\u53ef\u4ee5\u6709\u522b\u540d\u3002\u6211\u4eec\u4f7f\u7528 alias \u5173\u952e\u5b57\u58f0\u660e\u5c5e\u6027\u7684\u522b\u540d\uff1a property alias <name> : <reference> \u3002\u522b\u540d\u548c\u5f15\u7528\u7c7b\u4f3c\uff0c\u53ea\u662f\u7ed9\u4e00\u4e2a\u5c5e\u6027\u53e6\u5916\u4e00\u4e2a\u540d\u5b57\u3002C++ \u6559\u7a0b\u91cc\u9762\u7ecf\u5e38\u8bf4\uff0c\u201c\u5f15\u7528\u5373\u522b\u540d\u201d\uff0c\u8fd9\u91cc\u5c31\u662f\u201c\u522b\u540d\u5373\u5f15\u7528\u201d\u3002\u8fd9\u79cd\u6280\u672f\u5bf9\u4e8e\u5bfc\u51fa\u5c5e\u6027\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9\u4e00\u4e2a\u5b50\u5143\u7d20\u7684\u5c5e\u6027\u5916\u90e8\u53ef\u7528\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u5c5e\u6027\u4e00\u4e2a\u522b\u540d\uff0c\u8ba9\u5916\u90e8\u6587\u6863\u901a\u8fc7\u8fd9\u4e2a\u522b\u540d\u8bbf\u95ee\u8fd9\u4e2a\u5c5e\u6027\u3002\u522b\u540d\u4e0d\u9700\u8981\u7279\u522b\u58f0\u660e\u5c5e\u6027\u7c7b\u578b\uff0c\u5b83\u4f7f\u7528\u88ab\u5f15\u7528\u5c5e\u6027\u7684\u7c7b\u578b\u6216\u8005 id\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c5e\u6027\u522b\u540d\u5728\u7ec4\u4ef6\u5b8c\u5168\u521d\u59cb\u5316\u4e4b\u540e\u624d\u53ef\u7528\u3002\u56e0\u6b64\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u975e\u6cd5\u7684\uff1a property alias myLabel : label myLabel . text : \"error\" // \u9519\u8bef\uff01\u6b64\u65f6\u7ec4\u4ef6\u8fd8\u6ca1\u6709\u521d\u59cb\u5316 property alias myLabelText : myLabel . text // \u9519\u8bef\uff01\u4e0d\u80fd\u4e3a\u5c5e\u6027\u522b\u540d\u7684\u5c5e\u6027\u521b\u5efa\u522b\u540d \u5c5e\u6027\u4e5f\u53ef\u4ee5\u5206\u7ec4\u3002\u5206\u7ec4\u53ef\u4ee5\u8ba9\u5c5e\u6027\u66f4\u5177\u7ed3\u6784\u5316\u3002\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684 font \u5c5e\u6027\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\u662f\uff1a font { family : \"Ubuntu\" ; pixelSize : 24 } \u6709\u4e9b\u5c5e\u6027\u53ef\u4ee5\u9644\u52a0\u5230\u5143\u7d20\u672c\u8eab\uff0c\u5176\u8bed\u6cd5\u662f <Element>.<property>: <value> \u3002 \u6bcf\u4e00\u4e2a\u5c5e\u6027\u90fd\u53ef\u4ee5\u53d1\u51fa\u4fe1\u53f7\uff0c\u56e0\u800c\u90fd\u53ef\u4ee5\u5173\u8054\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\u8fd9\u4e2a\u5904\u7406\u51fd\u6570\u5c06\u5728\u5c5e\u6027\u503c\u53d8\u5316\u65f6\u8c03\u7528\u3002\u8fd9\u79cd\u503c\u53d8\u5316\u7684\u4fe1\u53f7\u69fd\u547d\u540d\u4e3a on + \u5c5e\u6027\u540d + Changed\uff0c\u5176\u4e2d\u5c5e\u6027\u540d\u8981\u9996\u5b57\u6bcd\u5927\u5199\u3002\u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c height \u5c5e\u6027\u53d8\u5316\u65f6\u5bf9\u5e94\u7684\u69fd\u51fd\u6570\u540d\u5b57\u5c31\u662f onHeightChanged \u3002 QML \u548c JavaScript \u5173\u7cfb\u5bc6\u5207\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\u8be6\u7ec6\u89e3\u91ca\uff0c\u4e0d\u8fc7\u73b0\u5728\u53ef\u4ee5\u5148\u770b\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a Text { id : label x : 24 ; y : 24 // \u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u8868\u793a\u7a7a\u683c\u6309\u4e0b\u7684\u6b21\u6570 property int spacePresses : 0 text : \"Space pressed: \" + spacePresses + \" times\" // (1) \u6587\u672c\u53d8\u5316\u7684\u54cd\u5e94\u51fd\u6570 onTextChanged : console . log ( \"text changed to:\" , text ) // \u63a5\u6536\u952e\u76d8\u4e8b\u4ef6\uff0c\u9700\u8981\u8bbe\u7f6e focus \u5c5e\u6027 focus : true // (2) \u8c03\u7528 JavaScript \u51fd\u6570 Keys . onSpacePressed : { increment () } // \u6309\u4e0b Esc \u952e\u6e05\u7a7a\u6587\u672c Keys . onEscapePressed : { label . text = '' } // (3) \u4e00\u4e2a JavaScript \u51fd\u6570 function increment () { spacePresses = spacePresses + 1 } } Text \u5143\u7d20\u4f1a\u53d1\u51fa textChanged \u4fe1\u53f7\u3002\u6211\u4eec\u4f7f\u7528 on + \u4fe1\u53f7\u540d\uff0c\u4fe1\u53f7\u540d\u9996\u5b57\u6bcd\u5927\u5199\u7684\u5c5e\u6027\u8868\u793a\u4e00\u4e2a\u69fd\u51fd\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 Text \u5143\u7d20\u53d1\u51fa textChanged \u4fe1\u53f7\u65f6\uff0c onTextChanged \u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u7c7b\u4f3c\u7684\uff0c onSpacePressed \u5c5e\u6027\u4f1a\u5728\u7a7a\u683c\u952e\u6309\u4e0b\u65f6\u88ab\u8c03\u7528\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u8c03\u7528\u4e86\u4e00\u4e2a JavaScript \u51fd\u6570\u3002 QML \u6587\u6863\u4e2d\u53ef\u4ee5\u5b9a\u4e49 JavaScript \u51fd\u6570\uff0c\u8bed\u6cd5\u540c\u666e\u901a JavaScript \u51fd\u6570\u4e00\u6837\u3002 QML \u7684\u7ed1\u5b9a\u673a\u5236\u540c JavaScript \u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u6709\u4e00\u5b9a\u7c7b\u4f3c\u3002\u5b83\u4eec\u90fd\u53ef\u4ee5\u5c06\u53f3\u9762\u7684\u503c\u8d4b\u503c\u7ed9\u524d\u9762\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u7ed1\u5b9a\u4f1a\u5728\u540e\u9762\u7684\u503c\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u91cd\u65b0\u8ba1\u7b97\u524d\u9762\u7684\u503c\uff1b\u4f46\u662f\u8d4b\u503c\u53ea\u662f\u4e00\u6b21\u6027\u7684\u3002","title":"40. QML \u8bed\u6cd5"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/41.%20QML%20%E5%9F%BA%E6%9C%AC%E5%85%83%E7%B4%A0/","text":"[[39. QML \u548c QtQuick 2#^7aa44d|QML]] \u57fa\u672c\u5143\u7d20\u53ef\u4ee5\u5206\u4e3a\u53ef\u89c6\u5143\u7d20\u548c\u4e0d\u53ef\u89c6\u5143\u7d20\u4e24\u7c7b\u3002\u53ef\u89c6\u5143\u7d20\uff08\u4f8b\u5982\u524d\u9762\u63d0\u5230\u8fc7\u7684 Rectangle \uff09\u5177\u6709\u51e0\u4f55\u5750\u6807\uff0c\u4f1a\u5728\u5c4f\u5e55\u4e0a\u5360\u636e\u4e00\u5757\u663e\u793a\u533a\u57df\u3002\u4e0d\u53ef\u89c6\u5143\u7d20\uff08\u4f8b\u5982 Timer \uff09\u901a\u5e38\u63d0\u4f9b\u4e00\u79cd\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u4f5c\u7528\u4e8e\u53ef\u89c6\u5143\u7d20\u3002 \u672c\u7ae0\u6211\u4eec\u5c06\u4f1a\u96c6\u4e2d\u4ecb\u7ecd\u96c6\u4e2d\u6700\u57fa\u672c\u7684\u53ef\u89c6\u5143\u7d20\uff1a Item \u3001 Rectangle \u3001 Text \u3001 Image \u548c MouseArea \u3002 Item \u662f\u6240\u6709\u53ef\u89c6\u5143\u7d20\u4e2d\u6700\u57fa\u672c\u7684\u4e00\u4e2a\u3002\u5b83\u662f\u6240\u6709\u5176\u5b83\u53ef\u89c6\u5143\u7d20\u7684\u7236\u5143\u7d20\uff0c\u53ef\u4ee5\u8bf4\u662f\u6240\u6709\u5176\u5b83\u53ef\u89c6\u5143\u7d20\u90fd\u7ee7\u627f Item \u3002 Item \u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u7ed8\u5236\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5b9a\u4e49\u6240\u6709\u53ef\u89c6\u5143\u7d20\u7684\u901a\u7528\u5c5e\u6027\uff1a |\u5206\u7ec4|\u5c5e\u6027| |:-:|:-:| |\u51e0\u4f55|x\u548cy\u7528\u4e8e\u5b9a\u4e49\u5143\u7d20\u5de6\u4e0a\u89d2\u7684\u5750\u6807\uff0cwidth\u548cheight\u5219\u5b9a\u4e49\u4e86\u5143\u7d20\u7684\u8303\u56f4\u3002z\u5b9a\u4e49\u4e86\u5143\u7d20\u4e0a\u4e0b\u7684\u5c42\u53e0\u5173\u7cfb\u3002| |\u5e03\u5c40|anchors\uff08\u5177\u6709 left\u3001right\u3001top\u3001bottom\u3001vertical \u548c horizontal center \u7b49\u5c5e\u6027\uff09\u7528\u4e8e\u5b9a\u4f4d\u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u5b83\u5143\u7d20\u7684margins\u7684\u4f4d\u7f6e\u3002| |\u952e\u76d8\u5904\u7406|Key\u548cKeyNavigation\u5c5e\u6027\u7528\u4e8e\u63a7\u5236\u952e\u76d8\uff1bfocus\u5c5e\u6027\u5219\u7528\u4e8e\u542f\u7528\u952e\u76d8\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u83b7\u53d6\u7126\u70b9\u3002| |\u53d8\u5f62|\u63d0\u4f9bscale\u548crotate\u53d8\u5f62\u4ee5\u53ca\u66f4\u4e00\u822c\u7684\u9488\u5bf9 x\u3001y\u3001z \u5750\u6807\u503c\u53d8\u6362\u4ee5\u53catransformOrigin\u70b9\u7684transform\u5c5e\u6027\u5217\u8868\u3002| |\u53ef\u89c6\u5316|opacity\u5c5e\u6027\u7528\u4e8e\u63a7\u5236\u900f\u660e\u5ea6\uff1bvisible\u5c5e\u6027\u7528\u4e8e\u63a7\u5236\u663e\u793a/\u9690\u85cf\u5143\u7d20\uff1bclip\u5c5e\u6027\u7528\u4e8e\u526a\u5207\u5143\u7d20\uff1bsmooth\u5c5e\u6027\u7528\u4e8e\u589e\u5f3a\u6e32\u67d3\u8d28\u91cf\u3002| |\u72b6\u6001\u5b9a\u4e49|\u63d0\u4f9b\u4e00\u4e2a\u7531\u72b6\u6001\u7ec4\u6210\u7684\u5217\u8868states\u548c\u5f53\u524d\u72b6\u6001state\u5c5e\u6027\uff1b\u540c\u65f6\u8fd8\u6709\u4e00\u4e2atransitions\u5217\u8868\uff0c\u7528\u4e8e\u8bbe\u7f6e\u72b6\u6001\u5207\u6362\u65f6\u7684\u52a8\u753b\u6548\u679c\u3002| \u9664\u4e86\u5b9a\u4e49\u901a\u7528\u5c5e\u6027\uff0c Item \u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u4f5c\u7528\u662f\u4f5c\u4e3a\u5176\u5b83\u53ef\u89c6\u5143\u7d20\u7684\u5bb9\u5668\u3002\u4ece\u8fd9\u4e00\u70b9\u6765\u8bf4\uff0c Item \u975e\u5e38\u7c7b\u4f3c\u4e8e HTML \u4e2d div \u6807\u7b7e\u7684\u4f5c\u7528\u3002 Rectangle \u7ee7\u627f\u4e86 Item \uff0c\u5e76\u5728 Item \u7684\u57fa\u7840\u4e4b\u4e0a\u589e\u52a0\u4e86\u586b\u5145\u8272\u5c5e\u6027\u3001\u8fb9\u6846\u76f8\u5173\u7684\u5c5e\u6027\u3002\u4e3a\u4e86\u5b9a\u4e49\u5706\u89d2\u77e9\u5f62\uff0c Rectangle \u8fd8\u6709\u4e00\u4e2a radius \u5c5e\u6027\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bbd 100 \u50cf\u7d20\u3001\u9ad8 150 \u50cf\u7d20\uff0c\u6d45\u91d1\u5c5e\u84dd\u586b\u5145\uff0c\u7ea2\u8272 4 \u50cf\u7d20\u7684\u8fb9\u6846\u7684\u77e9\u5f62\uff1a Rectangle { id: rect width: 100 height: 150 color: \"lightsteelblue\" border { color: \"#FF0000\" width: 4 } radius: 8 } ![[QML\u57fa\u672c\u5143\u7d20_1.png]] QML \u4e2d\u7684\u989c\u8272\u503c\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 # \u5341\u516d\u8fdb\u5236\u7684\u5f62\u5f0f\u3002\u8fd9\u91cc\u7684\u989c\u8272\u540d\u5b57\u540c SVG \u989c\u8272\u5b9a\u4e49\u4e00\u81f4\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u89c1 \u8fd9\u4e2a\u7f51\u9875 \u3002 Rectangle \u9664\u4e86 color \u5c5e\u6027\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a gradient \u5c5e\u6027\uff0c\u7528\u4e8e\u5b9a\u4e49\u4f7f\u7528\u6e10\u53d8\u8272\u586b\u5145\u3002\u4f8b\u5982\uff1a Rectangle { width: 100 height: 150 gradient: Gradient { GradientStop { position: 0.0 ; color: \"red\" } GradientStop { position: 0.33 ; color: \"yellow\" } GradientStop { position: 1.0 ; color: \"green\" } } border.color: \"slategray\" } ![[QML\u57fa\u672c\u5143\u7d20_2.png]] gradient \u8981\u6c42\u4e00\u4e2a Gradient \u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u9700\u8981\u4e00\u4e2a GradientStop \u7684\u5217\u8868\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\u6e10\u53d8\uff1a\u6240\u8c13\u6e10\u53d8\uff0c\u5c31\u662f\u6211\u4eec\u6307\u5b9a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u5fc5\u987b\u662f\u67d0\u79cd\u989c\u8272\uff0c\u8fd9\u671f\u95f4\u7684\u8fc7\u6e21\u8272\u5219\u7531\u8ba1\u7b97\u800c\u5f97\u3002 GradientStop \u5bf9\u8c61\u5c31\u662f\u7528\u4e8e\u8fd9\u79cd\u6307\u5b9a\uff0c\u5b83\u9700\u8981\u4e24\u4e2a\u5c5e\u6027\uff1a position \u548c color \u3002\u524d\u8005\u662f\u4e00\u4e2a 0.0 \u5230 1.0 \u7684\u6d6e\u70b9\u6570\uff0c\u8bf4\u660e y \u8f74\u65b9\u5411\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982\u5143\u7d20\u7684\u6700\u9876\u90e8\u662f 0.0\uff0c\u6700\u5e95\u90e8\u662f 1.0\uff0c\u4ecb\u4e8e\u6700\u9876\u548c\u6700\u5e95\u4e4b\u95f4\u7684\u4f4d\u7f6e\u53ef\u4ee5\u7528\u8fd9\u4e48\u4e00\u4e2a\u6d6e\u70b9\u6570\u8868\u793a\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6bd4\u4f8b\uff1b\u540e\u8005\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u989c\u8272\u503c\u3002\u4f8b\u5982\u4e0a\u9762\u7684 GradientStop { position: 0.33; color: \"yellow\" } \u8bf4\u660e\u5728\u4ece\u4e0a\u5f80\u4e0b\u4e09\u5206\u4e4b\u4e00\u5904\u662f\u9ec4\u8272\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c Rectangle \u5fc5\u987b\u540c\u65f6\u6307\u5b9a\uff08\u663e\u5f0f\u5730\u6216\u9690\u5f0f\u5730\uff09\u5bbd\u548c\u9ad8\uff0c\u5426\u5219\u7684\u8bdd\u662f\u4e0d\u80fd\u5728\u5c4f\u5e55\u4e0a\u9762\u663e\u793a\u51fa\u6765\u7684\u3002\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u3002 \u5982\u679c\u9700\u8981\u663e\u793a\u6587\u672c\uff0c\u4f60\u9700\u8981\u4f7f\u7528 Text \u5143\u7d20\u3002 Text \u5143\u7d20\u6700\u91cd\u8981\u7684\u5c5e\u6027\u5f53\u7136\u5c31\u662f text \u5c5e\u6027\u3002\u8fd9\u4e2a\u5c5e\u6027\u7c7b\u578b\u662f string \u3002 Text \u5143\u7d20\u4f1a\u6839\u636e\u6587\u672c\u548c\u5b57\u4f53\u8ba1\u7b97\u81ea\u5df1\u7684\u521d\u59cb\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5b57\u4f53\u5219\u53ef\u4ee5\u901a\u8fc7\u5b57\u4f53\u5c5e\u6027\u7ec4\u8bbe\u7f6e\uff08\u4f8b\u5982 font.family \u3001 font.pixelSize \u7b49\uff09\u3002\u5982\u679c\u8981\u8bbe\u7f6e\u6587\u672c\u989c\u8272\uff0c\u53ea\u9700\u8981\u8bbe\u7f6e color \u5c5e\u6027\u3002 Text \u6700\u7b80\u5355\u7684\u4f7f\u7528\u5982\u4e0b\uff1a Text { text: \"The quick brown fox\" color: \"#303030\" font.family: \"Century\" font.pixelSize: 28 } Text \u5143\u7d20\u4e2d\u7684\u6587\u672c\u53ef\u4ee5\u4f7f\u7528 horizontalAlignment \u548c verticalAlignment \u5c5e\u6027\u6307\u5b9a\u5bf9\u9f50\u65b9\u5f0f\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u589e\u5f3a\u6587\u672c\u6e32\u67d3\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 style \u548c styleColor \u4e24\u4e2a\u5c5e\u6027\u3002\u8fd9\u4e24\u4e2a\u5c5e\u6027\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u6587\u672c\u7684\u663e\u793a\u6837\u5f0f\u548c\u8fd9\u4e9b\u6837\u5f0f\u7684\u989c\u8272\u3002\u5bf9\u4e8e\u5f88\u957f\u7684\u6587\u672c\uff0c\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u5728\u6587\u672c\u672b\u5c3e\u4f7f\u7528 \u2026 \uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u4f7f\u7528 elide \u5c5e\u6027\u3002 elide \u5c5e\u6027\u8fd8\u5141\u8bb8\u4f60\u6307\u5b9a \u2026 \u7684\u663e\u793a\u4f4d\u7f6e\u3002\u5982\u679c\u4e0d\u5e0c\u671b\u4f7f\u7528\u8fd9\u79cd\u663e\u793a\u65b9\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7 wrapMode \u5c5e\u6027\u6307\u5b9a\u6362\u884c\u6a21\u5f0f\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Text { width: 160 height: 120 text: \"A very very long text\" elide: Text . ElideMiddle style: Text . Sunken styleColor: '#FF4444' verticalAlignment: Text . AlignTop font { pixelSize: 24 } } Text \u5143\u7d20\u7684\u4f5c\u7528\u662f\u663e\u793a\u6587\u672c\u3002\u5b83\u4e0d\u4f1a\u663e\u793a\u6587\u672c\u7684\u4efb\u4f55\u80cc\u666f\uff0c\u8fd9\u662f\u53e6\u5916\u7684\u5143\u7d20\u9700\u8981\u5b8c\u6210\u7684\u4e8b\u60c5\u3002 Image \u5143\u7d20\u5219\u7528\u4e8e\u663e\u793a\u56fe\u50cf\u3002\u76ee\u524d QML \u652f\u6301\u7684\u56fe\u50cf\u683c\u5f0f\u6709 PNG\u3001JPG\u3001GIF \u548c BMP \u7b49\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ed9 source \u5c5e\u6027\u4e00\u4e2a URL \u6765\u81ea\u52a8\u4ece\u7f51\u7edc\u52a0\u8f7d\u56fe\u7247\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 fillMode \u5c5e\u6027\u8bbe\u7f6e\u6539\u53d8\u5927\u5c0f\u7684\u884c\u4e3a\u3002\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u7247\u6bb5\uff1a Image { x: 12 ; y: 12 // width: 48 // height: 118 source: \"assets/rocket.png\" } Image { x: 112 ; y: 12 width: 48 height: 118 / 2 source: \"assets/rocket.png\" fillMode: Image . PreserveAspectCrop clip: true } \u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u8bf4\u7684 URL\uff0c\u53ef\u4ee5\u662f\u672c\u5730\u8def\u5f84\uff08./images/home.png\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u7f51\u7edc\u8def\u5f84\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 Image.PreserveAspectCrop \uff0c\u610f\u601d\u662f\u7b49\u6bd4\u4f8b\u5207\u5272\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u540c\u65f6\u8bbe\u7f6e clip \u5c5e\u6027\uff0c\u907f\u514d\u6240\u8981\u6e32\u67d3\u7684\u5bf9\u8c61\u8d85\u51fa\u5143\u7d20\u8303\u56f4\u3002 \u6700\u540e\u4e00\u4e2a\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u57fa\u672c\u5143\u7d20\u662f MouseArea \u3002\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2a\u5143\u7d20\u7528\u4e8e\u7528\u6237\u4ea4\u4e92\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u53ef\u89c1\u7684\u77e9\u5f62\u533a\u57df\uff0c\u7528\u4e8e\u6355\u83b7\u9f20\u6807\u4e8b\u4ef6\u3002\u6211\u4eec\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u89c1\u8fc7\u8fd9\u4e2a\u5143\u7d20\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u5c06\u8fd9\u4e2a\u5143\u7d20\u4e0e\u4e00\u4e2a\u53ef\u89c6\u5143\u7d20\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u4ee5\u4fbf\u8fd9\u4e2a\u53ef\u89c6\u5143\u7d20\u80fd\u591f\u4e0e\u7528\u6237\u4ea4\u4e92\u3002\u4f8b\u5982\uff1a Rectangle { id: rect1 x: 12 ; y: 12 width: 76 ; height: 96 color: \"lightsteelblue\" MouseArea { /* ~~ */ } } MouseArea \u662f QtQuick \u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u5c06\u53ef\u89c6\u5316\u5c55\u793a\u4e0e\u7528\u6237\u8f93\u5165\u63a7\u5236\u89e3\u8026\u3002\u901a\u8fc7\u8fd9\u79cd\u6280\u672f\uff0c\u4f60\u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u8f83\u5c0f\u7684\u5143\u7d20\uff0c\u4f46\u662f\u5b83\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u53ef\u4ea4\u4e92\u533a\u57df\uff0c\u4ee5\u4fbf\u5728\u754c\u9762\u663e\u793a\u4e0e\u7528\u6237\u4ea4\u4e92\u4e4b\u95f4\u627e\u5230\u4e00\u4e2a\u5e73\u8861\uff08\u5982\u679c\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\uff0c\u8f83\u5c0f\u7684\u533a\u57df\u975e\u5e38\u4e0d\u5bb9\u6613\u88ab\u7528\u6237\u6210\u529f\u70b9\u51fb\u3002\u82f9\u679c\u516c\u53f8\u8981\u6c42\u754c\u9762\u7684\u4ea4\u4e92\u90e8\u5206\u6700\u5c11\u8981\u6709 40 \u50cf\u7d20\u4ee5\u4e0a\uff0c\u624d\u80fd\u591f\u5f88\u5bb9\u6613\u88ab\u624b\u6307\u70b9\u4e2d\uff09\u3002","title":"41. QML \u57fa\u672c\u5143\u7d20"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/42.%20QML%20%E7%BB%84%E4%BB%B6/","text":"[[39. QML \u548c QtQuick 2#^7aa44d|QML]] \u53ef\u4ee5\u7531\u57fa\u672c\u5143\u7d20\u7ec4\u5408\u6210\u4e00\u4e2a\u590d\u6742\u7684\u5143\u7d20\uff0c\u65b9\u4fbf\u4ee5\u540e\u6211\u4eec\u7684\u91cd\u7528\u3002\u8fd9\u79cd\u7ec4\u5408\u5143\u7d20\u5c31\u88ab\u79f0\u4e3a\u7ec4\u4ef6\u3002\u7ec4\u4ef6\u5c31\u662f\u4e00\u79cd\u53ef\u91cd\u7528\u7684\u5143\u7d20\u3002QML \u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\u6765\u521b\u5efa\u7ec4\u4ef6\u3002\u4e0d\u8fc7\uff0c\u672c\u7ae0\u6211\u4eec\u53ea\u4ecb\u7ecd\u4e00\u79cd\u65b9\u5f0f\uff1a\u57fa\u4e8e\u6587\u4ef6\u7684\u7ec4\u4ef6\u3002\u57fa\u4e8e\u6587\u4ef6\u7684\u7ec4\u4ef6\u5c06 QML \u5143\u7d20\u653e\u7f6e\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u7ed9\u8fd9\u4e2a\u6587\u4ef6\u4e00\u4e2a\u540d\u5b57\u3002\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u540d\u5b57\u6765\u4f7f\u7528\u8fd9\u4e2a\u7ec4\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3a Button.qml\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 QML \u4e2d\u4f7f\u7528 Button { \u2026 } \u8fd9\u79cd\u5f62\u5f0f\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u6f14\u793a\u8fd9\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u6587\u672c\u8bf4\u660e\u7684 Rectangle \uff0c\u8fd9\u4e2a\u77e9\u5f62\u5c06\u6210\u4e3a\u4e00\u4e2a\u6309\u94ae\u3002\u7528\u6237\u53ef\u4ee5\u70b9\u51fb\u77e9\u5f62\u6765\u54cd\u5e94\u4e8b\u4ef6\u3002 import QtQuick 2.0 Rectangle { id : root property alias text : label . text signal clicked width : 116 ; height : 26 color : \"lightsteelblue\" border . color : \"slategrey\" Text { id : label anchors . centerIn : parent text : \"Start\" } MouseArea { anchors . fill : parent onClicked : { root . clicked () } } } \u6211\u4eec\u5c06\u8fd9\u4e2a\u6587\u4ef6\u547d\u540d\u4e3a Button.qml\uff0c\u653e\u5728 main.qml \u540c\u4e00\u76ee\u5f55\u4e0b\u3002\u8fd9\u91cc\u7684 main.qml \u5c31\u662f IDE \u5e2e\u6211\u4eec\u751f\u6210\u7684 QML \u6587\u4ef6\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a QML \u7ec4\u4ef6\u3002\u8fd9\u4e2a\u7ec4\u4ef6\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u9884\u5b9a\u4e49\u597d\u7684 Rectangle \u3002\u8fd9\u662f\u4e00\u4e2a\u6309\u94ae\uff0c\u6709\u4e00\u4e2a Text \u7528\u4e8e\u663e\u793a\u6309\u94ae\u7684\u6587\u672c\uff1b\u6709\u4e00\u4e2a MouseArea \u7528\u4e8e\u63a5\u6536\u9f20\u6807\u4e8b\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u6309\u94ae\u7684\u6587\u672c\uff0c\u8fd9\u662f\u7528\u8fc7\u8bbe\u7f6e Text \u7684 text \u5c5e\u6027\u5b9e\u73b0\u7684\u3002\u4e3a\u4e86\u4e0d\u5bf9\u5916\u66b4\u9732 Text \u5143\u7d20\uff0c\u6211\u4eec\u7ed9\u4e86\u5b83\u7684 text \u5c5e\u6027\u4e00\u4e2a\u522b\u540d\u3002 signal clicked \u7ed9\u8fd9\u4e2a Button \u4e00\u4e2a\u4fe1\u53f7\u3002\u7531\u4e8e\u8fd9\u4e2a\u4fe1\u53f7\u662f\u65e0\u53c2\u6570\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210 signal clicked() \uff0c\u4e8c\u8005\u662f\u7b49\u4ef7\u7684\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u4f1a\u5728 MouseArea \u7684 clicked \u4fe1\u53f7\u88ab\u53d1\u51fa\uff0c\u5177\u4f53\u5c31\u662f\u5728 MouseArea \u7684 onClicked \u5c5e\u6027\u4e2d\u8c03\u7528\u4e2a\u8fd9\u4e2a\u4fe1\u53f7\u3002 \u4e0b\u9762\u6211\u4eec\u9700\u8981\u4fee\u6539 main.qml \u6765\u4f7f\u7528\u8fd9\u4e2a\u7ec4\u4ef6\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Button { id : button x : 12 ; y : 12 text : \"Start\" onClicked : { status . text = \"Button clicked!\" } } Text { id : status x : 12 ; y : 76 width : 116 ; height : 26 text : \"waiting ...\" horizontalAlignment : Text . AlignHCenter } } \u5728 main.qml \u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e86 Button \u8fd9\u4e2a\u7ec4\u4ef6\uff0c\u5c31\u50cf QML \u5176\u5b83\u5143\u7d20\u4e00\u6837\u3002\u7531\u4e8e Button.qml \u4e0e main.qml \u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5c06 Button.qml \u653e\u5728\u4e0d\u540c\u76ee\u5f55\uff0c\u6bd4\u5982\u6784\u6210\u5982\u4e0b\u7684\u76ee\u5f55\u7ed3\u679c\uff1a app |- QML | |- main . qml |- components |- Button . qml \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728 main.qml \u7684 import \u90e8\u5206\u589e\u52a0\u4e00\u884c import ../components \u624d\u80fd\u591f\u627e\u5230 Button \u7ec4\u4ef6\u3002 \u6709\u65f6\u5019\uff0c\u9009\u62e9\u4e00\u4e2a\u7ec4\u4ef6\u7684\u6839\u5143\u7d20\u5f88\u91cd\u8981\u3002\u6bd4\u5982\u6211\u4eec\u7684 Button \u7ec4\u4ef6\u3002\u6211\u4eec\u4f7f\u7528 Rectangle \u4f5c\u4e3a\u5176\u6839\u5143\u7d20\u3002 Rectangle \u5143\u7d20\u53ef\u4ee5\u8bbe\u7f6e\u80cc\u666f\u8272\u7b49\u3002\u4f46\u662f\uff0c\u6709\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u5141\u8bb8\u7528\u6237\u8bbe\u7f6e\u80cc\u666f\u8272\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 Item \u5143\u7d20\u4f5c\u4e3a\u6839\u3002\u4e8b\u5b9e\u4e0a\uff0c Item \u5143\u7d20\u4f5c\u4e3a\u6839\u5143\u7d20\u4f1a\u66f4\u5e38\u89c1\u4e00\u4e9b\u3002","title":"42. QML \u7ec4\u4ef6"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/43.%20%E5%AE%9A%E4%BD%8D%E5%99%A8/","text":"[[39. QML \u548c QtQuick 2#^7aa44d|QML]] \u63d0\u4f9b\u4e86\u5f88\u591a\u7528\u4e8e\u5b9a\u4f4d\u7684\u5143\u7d20\u3002\u8fd9\u4e9b\u5143\u7d20\u53eb\u505a\u5b9a\u4f4d\u5668\uff0c\u90fd\u5305\u542b\u5728 QtQuick \u6a21\u5757\u3002\u8fd9\u4e9b\u5b9a\u4f4d\u5668\u4e3b\u8981\u6709 Row \u3001 Column \u3001 Grid \u548c Flow \u7b49\u3002 \u4e3a\u4e86\u4ecb\u7ecd\u5b9a\u4f4d\u5668\uff0c\u6211\u4eec\u5148\u6dfb\u52a0\u4e09\u4e2a\u7b80\u5355\u7684[[42. QML \u7ec4\u4ef6|\u7ec4\u4ef6]]\u7528\u4e8e\u6f14\u793a\uff1a \u9996\u5148\u662f RedRectangle \uff0c import QtQuick 2.0 Rectangle { width : 48 height : 48 color : \"red\" border . color : Qt . lighter ( color ) } \u7136\u540e\u662f BlueRectangle \uff0c import QtQuick 2.0 Rectangle { width : 48 height : 48 color : \"blue\" border . color : Qt . lighter ( color ) } \u6700\u540e\u662f GreenRectangle \uff0c import QtQuick 2.0 Rectangle { width : 48 height : 48 color : \"green\" border . color : Qt . lighter ( color ) } \u8fd9\u4e09\u4e2a\u7ec4\u4ef6\u90fd\u5f88\u7b80\u5355\uff0c\u4ec5\u6709\u7684\u533a\u522b\u662f\u989c\u8272\u4e0d\u540c\u3002\u8fd9\u662f\u4e00\u4e2a 48\u00d748 \u7684\u77e9\u5f62\uff0c\u5206\u522b\u662f\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u8272\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u628a\u8fb9\u6846\u989c\u8272\u8bbe\u7f6e\u4e3a Qt.lighter(color) \uff0c\u4e5f\u5c31\u662f\u6bd4\u586b\u5145\u8272\u4eae\u4e00\u4e9b\u7684\u989c\u8272\uff0c\u9ed8\u8ba4\u662f\u586b\u5145\u8272\u7684 50%\u3002 Column \u5c06\u5b50\u5143\u7d20\u6309\u7167\u52a0\u5165\u7684\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\uff0c\u5728\u540c\u4e00\u5217\u6392\u5217\u51fa\u6765\u3002 spacing \u5c5e\u6027\u7528\u4e8e\u5b9a\u4e49\u5b50\u5143\u7d20\u4e4b\u95f4\u7684\u95f4\u9694\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 120 height : 240 color : \"black\" Column { id : row anchors . centerIn : parent spacing : 8 RedRectangle { } GreenRectangle { width : 96 } BlueRectangle { } } } } \u8fd0\u884c\u7ed3\u679c\uff1a ![[\u5b9a\u4f4d\u5668_1.png]] \u6ce8\u610f\uff0c\u6211\u4eec\u6309\u7167\u7ea2\u3001\u7eff\u3001\u84dd\u7684\u987a\u5e8f\u52a0\u5165\u4e86\u5b50\u7ec4\u4ef6\uff0c Column \u6309\u7167\u540c\u6837\u7684\u987a\u5e8f\u628a\u5b83\u4eec\u6dfb\u52a0\u8fdb\u6765\u3002\u5176\u4e2d\uff0c\u6211\u4eec\u72ec\u7acb\u8bbe\u7f6e\u4e86\u7eff\u8272\u77e9\u5f62\u7684\u5bbd\u5ea6\uff0c\u8fd9\u4f53\u73b0\u4e86\u6211\u4eec\u540e\u6765\u8bbe\u7f6e\u7684\u5c5e\u6027\u8986\u76d6\u4e86\u7ec4\u4ef6\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c\u3002 anchors \u662f\u53e6\u5916\u4e00\u79cd\u5e03\u5c40\u65b9\u5f0f\uff0c\u6307\u5b9a\u8be5\u7ec4\u4ef6\u4e0e\u7236\u7ec4\u4ef6\u7684\u76f8\u5bf9\u5173\u7cfb\u3002 \u4e0e Column \u7c7b\u4f3c\uff0c Row \u5c06\u5176\u5b50\u7ec4\u4ef6\u653e\u7f6e\u5728\u4e00\u884c\u7684\u4f4d\u7f6e\uff0c\u65e2\u53ef\u4ee5\u8bbe\u7f6e\u4ece\u5de6\u5411\u53f3\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4ece\u53f3\u5411\u5de6\uff0c\u8fd9\u53d6\u51b3\u4e8e layoutDirection \u5c5e\u6027\u3002\u540c\u6837\uff0c\u5b83\u4e5f\u6709 spacing \u5c5e\u6027\uff0c\u7528\u4e8e\u6307\u5b9a\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u95f4\u9694\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 240 height : 120 color : \"black\" Row { id : row anchors . centerIn : parent spacing : 8 RedRectangle { } GreenRectangle { width : 96 } BlueRectangle { } } } } ![[\u5b9a\u4f4d\u5668_2.png]] Grid \u5143\u7d20\u5c06\u5176\u5b50\u5143\u7d20\u6392\u5217\u4e3a\u4e00\u4e2a\u7f51\u683c\u3002\u5b83\u9700\u8981\u5236\u5b9a rows \u548c columns \u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u884c\u548c\u5217\u7684\u6570\u503c\u3002\u5982\u679c\u4e8c\u8005\u6709\u4e00\u4e2a\u4e0d\u663e\u5f0f\u8bbe\u7f6e\uff0c\u5219\u53e6\u5916\u4e00\u4e2a\u4f1a\u6839\u636e\u5b50\u5143\u7d20\u7684\u6570\u76ee\u8ba1\u7b97\u51fa\u6765\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e3a 3 \u884c\uff0c\u4e00\u5171\u653e\u5165 6 \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5217\u6570\u4f1a\u81ea\u52a8\u8ba1\u7b97\u4e3a 2\u3002 flow \u548c layoutDirection \u5c5e\u6027\u5219\u7528\u6765\u63a7\u5236\u6dfb\u52a0\u5230\u7f51\u683c\u7684\u5143\u7d20\u7684\u987a\u5e8f\u3002\u540c\u6837\uff0c Grid \u5143\u7d20\u4e5f\u6709 spacing \u5c5e\u6027\u3002\u6211\u4eec\u8fd8\u662f\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 200 height : 200 color : \"black\" Grid { id : grid rows : 2 anchors . centerIn : parent spacing : 8 RedRectangle { } RedRectangle { } RedRectangle { } RedRectangle { } RedRectangle { } } } } ![[\u5b9a\u4f4d\u5668_3.png]] \u6700\u540e\u4e00\u4e2a\u5b9a\u4f4d\u5668\u662f Flow \u3002\u987e\u540d\u601d\u4e49\uff0c\u5b83\u4f1a\u5c06\u5176\u5b50\u5143\u7d20\u4ee5\u6d41\u7684\u5f62\u5f0f\u663e\u793a\u51fa\u6765\u3002\u6211\u4eec\u4f7f\u7528 flow \u548c layoutDirection \u4e24\u4e2a\u5c5e\u6027\u6765\u63a7\u5236\u663e\u793a\u65b9\u5f0f\u3002\u5b83\u53ef\u4ee5\u4ece\u5de6\u5411\u53f3\u6a2a\u5411\u5e03\u5c40\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4e0a\u5411\u4e0b\u7eb5\u5411\u5e03\u5c40\uff0c\u6216\u8005\u53cd\u4e4b\u3002\u521d\u770b\u8d77\u6765\uff0c\u8fd9\u79cd\u5e03\u5c40\u65b9\u5f0f\u4e0e Column \u548c Row \u6781\u5176\u7c7b\u4f3c\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6dfb\u52a0\u5230 Flow \u91cc\u9762\u7684\u5143\u7d20\uff0c\u5f53 Flow \u7684\u5bbd\u5ea6\u6216\u9ad8\u5ea6\u4e0d\u8db3\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u4f1a\u81ea\u52a8\u6362\u884c\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4ee4 Flow \u6b63\u786e\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u5176\u5bbd\u5ea6\u6216\u8005\u9ad8\u5ea6\u3002\u8fd9\u79cd\u6307\u5b9a\u65e2\u53ef\u4ee5\u662f\u663e\u5f0f\u7684\uff0c\u4e5f\u53ef\u4ee5\u4f9d\u636e\u7236\u5143\u7d20\u8ba1\u7b97\u800c\u5f97\u3002\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 160 height : 160 color : \"black\" Flow { anchors . fill : parent anchors . margins : 20 spacing : 20 RedRectangle { } BlueRectangle { } GreenRectangle { } } } } ![[\u5b9a\u4f4d\u5668_4.png]] \u6700\u540e\uff0c\u6211\u4eec\u518d\u6765\u4ecb\u7ecd\u4e00\u4e2a\u7ecf\u5e38\u7ed3\u5408\u5b9a\u4f4d\u5668\u4e00\u8d77\u4f7f\u7528\u7684\u5143\u7d20\uff1a Repeater \u3002 Repeater \u975e\u5e38\u50cf\u4e00\u4e2a for \u5faa\u73af\uff0c\u5b83\u80fd\u591f\u904d\u5386\u6570\u636e\u6a21\u578b\u4e2d\u7684\u5143\u7d20\u3002\u4e0b\u9762\u6765\u770b\u4ee3\u7801\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 252 height : 252 color : \"black\" property variant colorArray : [ \"#00bde3\" , \"#67c111\" , \"#ea7025\" ] Grid { anchors . fill : parent anchors . margins : 8 spacing : 4 Repeater { model : 16 Rectangle { width : 56 ; height : 56 property int colorIndex : Math . floor ( Math . random () * 3 ) color : root . colorArray [ colorIndex ] border . color : Qt . lighter ( color ) Text { anchors . centerIn : parent color : \"black\" text : \"Cell \" + index } } } } } } ![[\u5b9a\u4f4d\u5668_5.png]] \u8fd9\u91cc\uff0c\u6211\u4eec\u5c06 Repeater \u540c Grid \u4e00\u8d77\u4f7f\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\uff0c Repeater \u4f5c\u4e3a Grid \u7684\u6570\u636e\u63d0\u4f9b\u8005\u3002 Repeater \u7684 model \u53ef\u4ee5\u662f\u4efb\u4f55\u80fd\u591f\u63a5\u53d7\u7684\u6570\u636e\u6a21\u578b\uff0c\u5e76\u4e14\u53ea\u80fd\u91cd\u590d\u57fa\u4e8e Item \u7684\u7ec4\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7406\u89e3\u4e3a\uff1a\u91cd\u590d\u751f\u6210 16 \u4e2a\u5982\u4e0b\u5b9a\u4e49\u7684 Rectangle \u5143\u7d20\u3002\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u989c\u8272\u6570\u7ec4 colorArray \u3002 Repeater \u4f1a\u6309\u7167 model \u5c5e\u6027\u5b9a\u4e49\u7684\u4e2a\u6570\u5faa\u73af\u751f\u6210\u5176\u5b50\u5143\u7d20\u3002\u6bcf\u4e00\u6b21\u5faa\u73af\uff0c Repeater \u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u77e9\u5f62\u4f5c\u4e3a\u81ea\u5df1\u7684\u5b50\u5143\u7d20\u3002\u8fd9\u4e2a\u65b0\u751f\u6210\u7684\u77e9\u5f62\u7684\u989c\u8272\u6309\u7167 Math.floor(Math.random()*3) \u7684\u7b97\u6cd5\u8ba1\u7b97\u800c\u5f97\uff08\u56e0\u6b64\uff0c\u4f60\u5728\u672c\u5730\u8fd0\u884c\u4ee3\u7801\u65f6\u5f88\u53ef\u80fd\u4e0e\u8fd9\u91cc\u7684\u56fe\u7247\u4e0d\u4e00\u81f4\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u4f1a\u5f97\u5230 0\uff0c1\uff0c2 \u4e09\u8005\u4e4b\u4e00\uff0c\u7528\u4e8e\u9009\u62e9\u6570\u7ec4 colorArray \u4e2d\u9884\u5b9a\u4e49\u7684\u989c\u8272\u3002\u7531\u4e8e JavaScript \u662f QtQuick \u7684\u6838\u5fc3\u90e8\u5206\uff0c\u6240\u4ee5 JavaScript \u6807\u51c6\u51fd\u6570\u90fd\u662f\u53ef\u7528\u7684\u3002 Repeater \u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u6ce8\u5165\u4e00\u4e2a index \u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u7684\u5faa\u73af\u7d22\u5f15\uff08\u4f8b\u5b50\u4e2d\u5373 0\u30011 \u76f4\u5230 15\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5b50\u5143\u7d20\u5b9a\u4e49\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u50cf\u4f8b\u5b50\u4e2d\u7ed9 Text \u8d4b\u503c\u90a3\u6837\u3002 \u6ce8\u610f\uff0c\u5728 Repeater \u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6ce8\u610f\u6027\u80fd\u95ee\u9898\u3002\u5904\u7406\u5f88\u5927\u7684\u6570\u636e\u6a21\u578b\uff0c\u6216\u8005\u9700\u8981\u52a8\u6001\u83b7\u53d6\u6570\u636e\u65f6\uff0c Repeater \u8fd9\u79cd\u4ee3\u7801\u5c31\u975e\u5e38\u5403\u529b\u4e86\uff0c\u6211\u4eec\u9700\u8981\u53e6\u5916\u7684\u5b9e\u73b0\u3002\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u518d\u6765\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u91cc\u53ea\u9700\u8981\u4e86\u89e3\uff0c Repeater \u4e0d\u9002\u7528\u4e8e\u5904\u7406\u5927\u91cf\u6570\u636e\u6216\u8005\u52a8\u6001\u6570\u636e\uff0c\u4ec5\u9002\u7528\u4e8e\u5c11\u91cf\u7684\u9759\u6001\u6570\u636e\u7684\u5448\u73b0\u3002","title":"43. \u5b9a\u4f4d\u5668"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/44.%20%E5%85%83%E7%B4%A0%E5%B8%83%E5%B1%80/","text":"\u9664\u4e86\u5b9a\u4f4d\u5668\uff0cQML \u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd\u7528\u4e8e\u5e03\u5c40\u7684\u673a\u5236\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u673a\u5236\u6210\u4e3a\u951a\u70b9\uff08anchor\uff09\u3002\u951a\u70b9\u5141\u8bb8\u6211\u4eec\u7075\u6d3b\u5730\u8bbe\u7f6e\u4e24\u4e2a\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\u5b83\u4f7f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u5f62\u6210\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u951a\u7684\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u5f62\u6210\u4e00\u4e2a\u56fa\u5b9a\u70b9\u3002\u951a\u70b9\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u4e00\u79cd\u94fe\u63a5\uff0c\u5b83\u8981\u6bd4\u5355\u7eaf\u5730\u8ba1\u7b97\u5750\u6807\u6539\u53d8\u66f4\u5f3a\u3002\u7531\u4e8e\u951a\u70b9\u63cf\u8ff0\u7684\u662f\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u951a\u70b9\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u4e24\u4e2a\u5143\u7d20\uff0c\u58f0\u660e\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u76f8\u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u5143\u7d20\u3002\u951a\u70b9\u662f Item \u5143\u7d20\u7684\u57fa\u672c\u5c5e\u6027\u4e4b\u4e00\uff0c\u56e0\u800c\u9002\u7528\u4e8e\u6240\u6709 QML \u53ef\u89c6\u5143\u7d20\u3002 \u4e00\u4e2a\u5143\u7d20\u6709 6 \u4e2a\u4e3b\u8981\u7684\u951a\u70b9\u7684\u5b9a\u4f4d\u7ebf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a ![[\u5143\u7d20\u5e03\u5c40_1.png]] \u8fd9 6 \u4e2a\u5b9a\u4f4d\u7ebf\u5206\u522b\u662f\uff1a top \u3001 bottom \u3001 left \u3001 right \u3001 horizontalCenter \u548c verticalCenter \u3002\u5bf9\u4e8e Text \u5143\u7d20\uff0c\u8fd8\u6709\u4e00\u4e2a baseline \u951a\u70b9\u3002\u6bcf\u4e00\u4e2a\u951a\u70b9\u5b9a\u4f4d\u7ebf\u90fd\u53ef\u4ee5\u7ed3\u5408\u4e00\u4e2a\u504f\u79fb\u7684\u6570\u503c\u3002\u5176\u4e2d\uff0c top \u3001 bottom \u3001 left \u548c right \u79f0\u4e3a\u5916\u8fb9\u6846\uff1b horizontalCenter \u3001 verticalCenter \u548c baseline \u79f0\u4e3a\u504f\u79fb\u91cf\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u4f7f\u7528\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e9b\u951a\u70b9\u7684\u4f7f\u7528\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e0b\u4e0a\u4e00\u7ae0\u4f7f\u7528\u8fc7\u7684 BlueRectangle \u7ec4\u4ef6\uff1a import QtQuick 2.0 Rectangle { width : 48 height : 48 color : \"blue\" border . color : Qt . lighter ( color ) MouseArea { anchors . fill : parent drag . target : parent } } \u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u5728 BlueRectangle \u6700\u540e\u589e\u52a0\u4e86\u4e00\u4e2a MouseArea \u7ec4\u4ef6\u3002\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\u7684\u7ec4\u4ef6\u3002\u4e4b\u524d\u6211\u4eec\u4f7f\u7528\u4e86\u5b83\u5904\u7406\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5176\u62d6\u52a8\u4e8b\u4ef6\u3002 anchors.fill: parent \u4e00\u884c\u7684\u542b\u4e49\u9a6c\u4e0a\u5c31\u4f1a\u89e3\u91ca\uff1b drag.target: parent \u5219\u8bf4\u660e\u62d6\u52a8\u76ee\u6807\u662f parent \u3002\u6211\u4eec\u7684\u62d6\u52a8\u5bf9\u8c61\u662f MouseArea \u7684\u7236\u7ec4\u4ef6\uff0c\u4e5f\u5c31\u662f BlueRectangle \u7ec4\u4ef6\u3002 \u63a5\u4e0b\u6765\u770b\u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { width : 12 anchors . fill : parent anchors . margins : 8 } } } } ![[\u5143\u7d20\u5e03\u5c40_2.png]] \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 anchors.fill \u8bbe\u7f6e\u5185\u90e8\u84dd\u8272\u77e9\u5f62\u7684\u951a\u70b9\u4e3a\u586b\u5145\uff08fill\uff09\uff0c\u586b\u5145\u7684\u76ee\u7684\u5bf9\u8c61\u662f parent \uff1b\u586b\u5145\u8fb9\u8ddd\u662f 8px\u3002\u6ce8\u610f\uff0c\u5c3d\u7ba1\u6211\u4eec\u8bbe\u7f6e\u4e86\u84dd\u8272\u77e9\u5f62\u5bbd\u5ea6\u4e3a 12px\uff0c\u4f46\u662f\u56e0\u4e3a\u951a\u70b9\u7684\u4f18\u5148\u7ea7\u8981\u9ad8\u4e8e\u5bbd\u5ea6\u5c5e\u6027\u8bbe\u7f6e\uff0c\u6240\u4ee5\u84dd\u8272\u77e9\u5f62\u7684\u5b9e\u9645\u5bbd\u5ea6\u662f 100px \u2013 8px \u2013 8px = 84px\u3002 \u7b2c\u4e8c\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { width : 48 y : 8 anchors . left : parent . left anchors . leftMargin : 8 } } } } ![[\u5143\u7d20\u5e03\u5c40_3.png]] \u8fd9\u6b21\uff0c\u6211\u4eec\u4f7f\u7528 anchors.left \u8bbe\u7f6e\u5185\u90e8\u84dd\u8272\u77e9\u5f62\u7684\u951a\u70b9\u4e3a\u7236\u7ec4\u4ef6\u7684\u5de6\u8fb9\u7ebf\uff08parent.left\uff09\uff1b\u5de6\u8fb9\u8ddd\u662f 8px\u3002\u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u62d6\u52a8\u84dd\u8272\u77e9\u5f62\uff0c\u770b\u5b83\u7684\u79fb\u52a8\u65b9\u5f0f\u3002\u5728\u6211\u4eec\u62d6\u52a8\u65f6\uff0c\u84dd\u8272\u77e9\u5f62\u53ea\u80fd\u6cbf\u7740\u8ddd\u79bb\u7236\u7ec4\u4ef6\u5de6\u8fb9 8px \u7684\u4f4d\u7f6e\u4e0a\u4e0b\u79fb\u52a8\uff0c\u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u8bbe\u7f6e\u4e86\u951a\u70b9\u7684\u7f18\u6545\u3002\u6b63\u5982\u6211\u4eec\u524d\u9762\u63d0\u5230\u8fc7\u7684\uff0c\u951a\u70b9\u8981\u6bd4\u5355\u7eaf\u5730\u8ba1\u7b97\u5750\u6807\u6539\u53d8\u7684\u6548\u679c\u66f4\u5f3a\uff0c\u66f4\u4f18\u5148\u3002 \u7b2c\u4e09\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { width : 48 anchors . left : parent . right } } } } ![[\u5143\u7d20\u5e03\u5c40_4.png]] \u8fd9\u91cc\uff0c\u6211\u4eec\u4fee\u6539\u4ee3\u7801\u4e3a anchors.left: parent.right \uff0c\u4e5f\u5c31\u662f\u5c06\u7ec4\u4ef6\u951a\u70b9\u7684\u5de6\u8fb9\u7ebf\u8bbe\u7f6e\u4e3a\u7236\u7ec4\u4ef6\u7684\u53f3\u8fb9\u7ebf\u3002\u6548\u679c\u5373\u5982\u4e0a\u56fe\u6240\u793a\u3002\u5f53\u6211\u4eec\u62d6\u52a8\u7ec4\u4ef6\u65f6\uff0c\u4f9d\u7136\u53ea\u80fd\u4e0a\u4e0b\u79fb\u52a8\u3002 \u7b2c\u56db\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { id : blue1 width : 48 ; height : 24 y : 8 anchors . horizontalCenter : parent . horizontalCenter } BlueRectangle { id : blue2 width : 72 ; height : 24 anchors . top : blue1 . bottom anchors . topMargin : 4 anchors . horizontalCenter : blue1 . horizontalCenter } } } } ![[\u5143\u7d20\u5e03\u5c40_5.png]] \u8fd9\u7b97\u662f\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u7684\u4f8b\u5b50\u3002\u8fd9\u91cc\u6709\u4e24\u4e2a\u84dd\u8272\u77e9\u5f62\uff1a blue1 \u548c blue2 \u3002 blue1 \u7684\u951a\u70b9\u6c34\u5e73\u4e2d\u5fc3\u7ebf\u8bbe\u7f6e\u4e3a\u7236\u7ec4\u4ef6\u7684\u6c34\u5e73\u4e2d\u5fc3\uff1b blue2 \u7684\u951a\u70b9\u4e0a\u8fb9\u7ebf\u76f8\u5bf9\u4e8e blue1 \u7684\u5e95\u90e8\uff0c\u5176\u4e2d\u8fb9\u8ddd\u4e3a 4px\uff0c\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u589e\u52a0\u4e86\u4e00\u4e2a\u6c34\u5e73\u4e2d\u7ebf\u4e3a blue1 \u7684\u6c34\u5e73\u4e2d\u7ebf\u3002\u8fd9\u6837\uff0c blue1 \u76f8\u5bf9\u4e8e\u7236\u7ec4\u4ef6\uff0c blue2 \u76f8\u5bf9\u4e8e blue1 \uff0c\u8fd9\u6837\u4fbf\u51b3\u5b9a\u4e86\u4e09\u8005\u4e4b\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\u3002\u5f53\u6211\u4eec\u62d6\u52a8\u84dd\u8272\u77e9\u5f62\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c blue1 \u548c blue2 \u7684\u76f8\u5bf9\u4f4d\u7f6e\u59cb\u7ec8\u4e0d\u53d8\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u660e\u786e\u6307\u5b9a\u4e86\u8fd9\u79cd\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u800c\u4e8c\u8005\u53ef\u4ee5\u50cf\u4e00\u4e2a\u6574\u4f53\u4f3c\u7684\u540c\u65f6\u4e0a\u4e0b\u79fb\u52a8\uff08\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6307\u5b9a\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u7684\u4e0a\u4e0b\u8fb9\u8ddd\u4e0e\u7236\u7ec4\u4ef6\u7684\u5173\u7cfb\uff09\u3002 \u7b2c\u4e94\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { width : 48 anchors . centerIn : parent } } } } ![[\u5143\u7d20\u5e03\u5c40_6.png]] \u4e0e\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u7c7b\u4f3c\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f anchors.centerIn: parent \u5c06\u84dd\u8272\u77e9\u5f62\u7684\u4e2d\u5fc3\u56fa\u5b9a\u5728\u7236\u7ec4\u4ef6\u7684\u4e2d\u5fc3\u3002\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u6307\u660e\u662f\u4e2d\u5fc3\uff0c\u6240\u4ee5\u4e5f\u4e0d\u80fd\u62d6\u52a8\u8fd9\u4e2a\u84dd\u8272\u77e9\u5f62\u3002 \u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) Rectangle { id : root width : 220 height : 220 color : \"black\" GreenRectangle { x : 10 y : 10 width : 100 height : 100 BlueRectangle { width : 48 anchors . horizontalCenter : parent . horizontalCenter anchors . horizontalCenterOffset : -12 anchors . verticalCenter : parent . verticalCenter } } } } ![[\u5143\u7d20\u5e03\u5c40_7.png]] \u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0c anchors.centerIn: parent \u53ef\u4ee5\u770b\u4f5c\u7b49\u4ef7\u4e8e anchors.horizontalCenter: parent.horizontalCenter \u548c anchors.verticalCenter: parent.verticalCenter \u3002\u800c\u8fd9\u91cc\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86 anchors.horizontalCenterOffset \u4e3a -12\uff0c\u4e5f\u5c31\u662f\u5411\u5de6\u504f\u79fb 12px\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728 anchors.centerIn: parent \u7684\u57fa\u7840\u4e0a\u589e\u52a0 anchors.horizontalCenterOffset \u7684\u503c\uff0c\u4e8c\u8005\u662f\u7b49\u4ef7\u7684\u3002\u7531\u4e8e\u6211\u4eec\u5728\u8fd9\u91cc\u6307\u5b9a\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5df2\u7ecf\u5f88\u660e\u786e\uff0c\u62d6\u52a8\u4e5f\u662f\u65e0\u6548\u7684\u3002","title":"44. \u5143\u7d20\u5e03\u5c40"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/45.%20%E8%BE%93%E5%85%A5%E5%85%83%E7%B4%A0/","text":"\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4f5c\u4e3a\u8f93\u5165\u5143\u7d20\u7684 MouseArea \uff0c\u7528\u4e8e\u63a5\u6536\u9f20\u6807\u7684\u8f93\u5165\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u518d\u6765\u4ecb\u7ecd\u5173\u4e8e\u952e\u76d8\u8f93\u5165\u7684\u4e24\u4e2a\u5143\u7d20\uff1a TextInput \u548c TextEdit \u3002 TextInput \u662f\u5355\u884c\u7684\u6587\u672c\u8f93\u5165\u6846\uff0c\u652f\u6301\u9a8c\u8bc1\u5668\u3001\u8f93\u5165\u63a9\u7801\u548c\u663e\u793a\u6a21\u5f0f\u7b49\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) TextInput { id : input1 x : 8 ; y : 8 width : 96 ; height : 20 focus : true text : \"Text Input 1\" } TextInput { id : input2 x : 8 ; y : 36 width : 96 ; height : 20 text : \"Text Input 2\" } } ![[\u8f93\u5165\u5143\u7d20_1.png]] \u6ce8\u610f\uff0c\u6211\u4eec\u8fd9\u91cc\u653e\u7f6e\u4e86\u4e24\u4e2a TextInput \uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u8f93\u5165\u6846\u6539\u53d8\u7126\u70b9\u3002\u5982\u679c\u6211\u4eec\u60f3\u652f\u6301\u952e\u76d8\u5bfc\u822a\uff0c\u53ef\u4ee5\u6dfb\u52a0 KeyNavigation \u9644\u52a0\u5c5e\u6027\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) TextInput { id : input1 x : 8 ; y : 8 width : 96 ; height : 20 focus : true text : \"Text Input 1\" KeyNavigation . tab : input2 } TextInput { id : input2 x : 8 ; y : 36 width : 96 ; height : 20 text : \"Text Input 2\" KeyNavigation . tab : input1 } } KeyNavigation \u662f\u4e00\u4e2a\u9644\u52a0\u5c5e\u6027\u3002\u5f53\u7528\u6237\u70b9\u51fb\u4e86\u6307\u5b9a\u7684\u6309\u952e\u65f6\uff0c\u5c5e\u6027\u6307\u5b9a\u7684\u7ec4\u4ef6\u5c31\u4f1a\u83b7\u5f97\u7126\u70b9\u3002\u9644\u52a0\u5c5e\u6027\u7c7b\u4f3c\u4e8e\u666e\u901a\u5c5e\u6027\uff0c\u4f46\u662f\u53c8\u6709\u6240\u533a\u522b\u3002\u666e\u901a\u7684\u5c5e\u6027\u96b6\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u578b\uff1b\u9644\u52a0\u5c5e\u6027\u4e00\u822c\u7528\u4e8e\u4fee\u9970\u6216\u8865\u5145\u76ee\u6807\u7c7b\u578b\u3002\u6bd4\u5982\u8fd9\u91cc\u7684 KeyNavigation.tab \u5e76\u4e0d\u662f TextInput \u7684\u666e\u901a\u5c5e\u6027\uff0c\u4ec5\u4ec5\u662f\u7528\u6765\u8bf4\u660e TextInput \u7684\u4e00\u79cd\u7279\u5f81\u3002\u9644\u52a0\u5c5e\u6027\u7684\u4e00\u822c\u8bed\u6cd5\u662f \u7c7b\u578b.\u5c5e\u6027\u540d \uff0c\u4ee5\u6b64\u4e3a\u4f8b\uff0c\u7c7b\u578b\u5c31\u662f KeyNavigation \uff0c\u5c5e\u6027\u540d\u5c31\u662f tab \u3002 \u4e0e QLineEdit \u4e0d\u540c\uff0cQML \u7684\u6587\u672c\u51fa\u5165\u7ec4\u4ef6\u53ea\u6709\u4e00\u4e2a\u95ea\u52a8\u7684\u5149\u6807\u548c\u7528\u6237\u8f93\u5165\u7684\u6587\u672c\uff0c\u6ca1\u6709\u8fb9\u6846\u7b49\u53ef\u89c6\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u80fd\u591f\u8ba9\u7528\u6237\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u53ef\u8f93\u5165\u5143\u7d20\uff0c\u901a\u5e38\u9700\u8981\u4e00\u4e9b\u53ef\u89c6\u5316\u4fee\u9970\uff0c\u6bd4\u5982\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u6846\u3002\u5f53\u6211\u4eec\u8fd9\u4e48\u505a\u7684\u65f6\u5019\uff0c\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7ec4\u4ef6\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0c\u53ea\u662f\u8981\u8bb0\u5f97\u5bfc\u51fa\u6240\u9700\u8981\u7684\u5c5e\u6027\uff0c\u4ee5\u4fbf\u5916\u90e8\u4f7f\u7528\u3002\u6309\u7167\u8fd9\u79cd\u601d\u8def\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7ec4\u4ef6\uff1a // LineEdit.qml import QtQuick 2.0 Rectangle { width : 96 ; height : input . height + 8 color : \"lightsteelblue\" border . color : \"gray\" property alias text : input . text property alias input : input TextInput { id : input anchors . fill : parent anchors . margins : 4 focus : true } } \u4e3a\u4e86\u8ba9\u5916\u754c\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e TextInput \u7684 text \u5c5e\u6027\uff0c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u5c5e\u6027\u58f0\u660e\u4e86\u4e00\u4e2a\u522b\u540d\u3002\u540c\u65f6\uff0c\u4e3a\u4e86\u8ba9\u5916\u754c\u53ef\u4ee5\u8bbf\u95ee\u5230\u5185\u90e8\u7684 textInput \uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5b50\u7ec4\u4ef6\u4e5f\u66b4\u9732\u51fa\u6765\u3002\u4e0d\u8fc7\uff0c\u4ece\u5c01\u88c5\u7684\u89d2\u5ea6\u800c\u8a00\uff0c\u5c06\u5b9e\u73b0\u7ec6\u8282\u66b4\u9732\u51fa\u53bb\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u8bbe\u8ba1\uff0c\u8fd9\u8981\u770b\u66b4\u9732\u51fa\u6765\u8fd9\u4e2a\u5b50\u7ec4\u4ef6\u7684\u5f71\u54cd\u7a76\u7adf\u6709\u591a\u5927\u3002\u7136\u800c\u8fd9\u4e9b\u90fd\u662f\u5173\u4e8e\u8bbe\u8ba1\u7684\u95ee\u9898\uff0c\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 \u4e0b\u9762\u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u9762\u7684\u4f8b\u5b50\u4fee\u6539\u6210\u6211\u4eec\u65b0\u521b\u5efa\u7684 LineEdit \u7ec4\u4ef6\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 640 height : 480 visible : true title : qsTr ( \"Hello QML\" ) LineEdit { id : input1 x : 8 ; y : 8 width : 96 ; height : 20 focus : true text : \"Text Input 1\" KeyNavigation . tab : input2 } LineEdit { id : input2 x : 8 ; y : 36 width : 96 ; height : 20 text : \"Text Input 2\" KeyNavigation . tab : input1 } } ![[\u8f93\u5165\u5143\u7d20_2.png]] \u73b0\u5728\u518d\u6765\u8bd5\u8bd5\u952e\u76d8\u5bfc\u822a\u3002\u8fd9\u6b21\u65e0\u8bba\u600e\u4e48\u6309\u952e\u76d8\uff0c\u7126\u70b9\u59cb\u7ec8\u4e0d\u4f1a\u5230 input2 \u3002\u867d\u7136\u6211\u4eec\u5728\u7ec4\u4ef6\u4e2d\u6dfb\u52a0\u4e86 focus: true \uff0c\u53ef\u662f\u4e0d\u8d77\u4f5c\u7528\u3002\u539f\u56e0\u662f\uff0c\u7126\u70b9\u88ab inputText \u7684\u7236\u7ec4\u4ef6 Rectangle \u83b7\u5f97\uff0c\u7136\u800c\uff0c Rectangle \u4e0d\u4f1a\u5c06\u7126\u70b9\u8f6c\u53d1\u7ed9 inputText \u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0cQML\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u7ec4\u4ef6 FocusScope \u3002 \u5f53 FocusScope \u63a5\u6536\u5230\u7126\u70b9\u65f6\uff0c\u4f1a\u5c06\u7126\u70b9\u8f6c\u53d1\u7ed9\u6700\u540e\u4e00\u4e2a\u8bbe\u7f6e\u4e86 focus:true \u7684\u5b50\u5bf9\u8c61\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 FocusScope \u91cd\u5199 LineEdit \u7ec4\u4ef6\uff1a // LineEdit.qml import QtQuick 2.0 FocusScope { width : 96 ; height : input . height + 8 color : \"lightsteelblue\" border . color : \"gray\" property alias text : input . text property alias input : input TextInput { id : input anchors . fill : parent anchors . margins : 4 focus : true } } ~~\u8fd9\u6837\u4fee\u6539\u8fc7\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u4e4b\u524d\u7684 TextInput \u4e00\u6837\u6b63\u5e38\u4f7f\u7528\u4e86\u3002~~ \u6b64\u5904\u6709\u95ee\u9898\uff0c\u672a\u80fd\u5b9e\u73b0\u6240\u8bf4\u6548\u679c\u3002","title":"45. \u8f93\u5165\u5143\u7d20"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/46.%20Repeater/","text":"\u524d\u9762\u4ecb\u7ecd\u8fc7[[34. \u6a21\u578b|\u6a21\u578b]]\u89c6\u56fe\u3002\u8fd9\u662f\u4e00\u79cd\u6570\u636e\u548c\u663e\u793a\u76f8\u5206\u79bb\u7684\u6280\u672f\uff0c\u5728 Qt \u4e2d\u6709\u7740\u975e\u5e38\u91cd\u8981\u7684\u5730\u4f4d\u3002\u5728 QtQuick \u4e2d\uff0c\u6570\u636e\u548c\u663e\u793a\u7684\u5206\u79bb\u540c\u6837\u4e5f\u662f\u5229\u7528\u8fd9\u79cd\u201c\u6a21\u578b-\u89c6\u56fe\u201d\u6280\u672f\u5b9e\u73b0\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u89c6\u56fe\uff0c\u6570\u636e\u5143\u7d20\u7684\u53ef\u89c6\u5316\u663e\u793a\u4ea4\u7ed9\u4ee3\u7406\u5b8c\u6210\u3002\u4e0e Qt/C++ \u7c7b\u4f3c\uff0cQtQuick \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9884\u5b9a\u4e49\u7684\u6a21\u578b\u548c\u89c6\u56fe\u3002 \u5c06\u6570\u636e\u4ece\u8868\u73b0\u5c42\u5206\u79bb\u7684\u6700\u57fa\u672c\u65b9\u6cd5\u662f\u4f7f\u7528 Repeater \u5143\u7d20\u3002 Repeater \u5143\u7d20\u53ef\u4ee5\u7528\u4e8e\u663e\u793a\u4e00\u4e2a\u6570\u7ec4\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728\u7528\u6237\u754c\u9762\u8fdb\u884c\u5b9a\u4f4d\u3002 Repeater \u7684\u6a21\u578b\u8303\u56f4\u5f88\u5e7f\uff1a\u4ece\u4e00\u4e2a\u6574\u578b\u5230\u7f51\u7edc\u6570\u636e\uff0c\u5747\u53ef\u4f5c\u4e3a\u5176\u6570\u636e\u6a21\u578b\u3002 Repeater \u6700\u7b80\u5355\u7684\u7528\u6cd5\u662f\u5c06\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u5176 model \u5c5e\u6027\u7684\u503c\u3002\u8fd9\u4e2a\u6574\u578b\u4ee3\u8868 Repeater \u6240\u4f7f\u7528\u7684\u6a21\u578b\u4e2d\u7684\u6570\u636e\u4e2a\u6570\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c model: 10 \u4ee3\u8868 Repeater \u7684\u6a21\u578b\u6709 10 \u4e2a\u6570\u636e\u9879\u3002 import QtQuick 2.2 Column { spacing : 2 Repeater { model : 10 Rectangle { width : 100 height : 20 radius : 3 color : \"lightBlue\" Text { anchors . centerIn : parent text : index } } } } \u73b0\u5728\u6211\u4eec\u8bbe\u7f6e\u4e86 10 \u4e2a\u6570\u636e\u9879\uff0c\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a Rectangle \u8fdb\u884c\u663e\u793a\u3002\u6bcf\u4e00\u4e2a Rectangle \u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5206\u522b\u4e3a 100px \u548c 20px\uff0c\u5e76\u4e14\u6709\u5706\u89d2\u548c\u6d45\u84dd\u8272\u80cc\u666f\u3002 Rectangle \u4e2d\u6709\u4e00\u4e2a Text \u5143\u7d20\u4e3a\u5176\u5b50\u5143\u7d20\uff0c Text \u6587\u672c\u503c\u4e3a\u5f53\u524d\u9879\u7684\u7d22\u5f15\u3002 \u867d\u7136\u6307\u5b9a\u6a21\u578b\u9879\u7684\u4e2a\u6570\u5f88\u7b80\u5355\uff0c\u4f46\u5b9e\u9645\u7528\u5904\u4e0d\u5927\u3002 Repeater \u8fd8\u652f\u6301\u66f4\u590d\u6742\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982\uff0c\u628a\u4e00\u4e2a JavaScript \u6570\u7ec4\u4f5c\u4e3a\u6a21\u578b\u3002JavaScript \u6570\u7ec4\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff1a\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u6216\u5bf9\u8c61\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4f5c\u4e3a Repeater \u7684\u6a21\u578b\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528 index \u83b7\u5f97\u5f53\u524d\u7d22\u5f15\uff0c\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 modelData \u8bbf\u95ee\u5230\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1a import QtQuick 2.2 Column { spacing : 2 Repeater { model : [ \"Enterprise\" , \"Colombia\" , \"Challenger\" , \"Discovery\" , \"Endeavour\" , \"Atlantis\" ] Rectangle { width : 100 height : 20 radius : 3 color : \"lightBlue\" Text { anchors . centerIn : parent text : index + \": \" + modelData } } } } \u7531\u4e8e\u80fd\u591f\u4f7f\u7528 JavaScript \u6570\u7ec4\u4f5c\u4e3a Repeater \u7684\u6a21\u578b\uff0c\u800c JavaScript \u6570\u7ec4\u80fd\u591f\u4ee5\u5bf9\u8c61\u4f5c\u4e3a\u5176\u5143\u7d20\u7c7b\u578b\uff0c\u56e0\u800c Repeater \u5c31\u53ef\u4ee5\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u9879\uff0c\u6bd4\u5982\u5e26\u6709\u5c5e\u6027\u7684\u5bf9\u8c61\u3002\u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u66f4\u4e3a\u5e38\u89c1\u3002\u76f8\u6bd4\u666e\u901a\u7684 JavaScript \u5bf9\u8c61\uff0c\u66f4\u5e38\u7528\u7684\u662f ListElement \u7c7b\u578b\u3002\u7c7b\u4f3c\u666e\u901a JavaScript \u5bf9\u8c61\uff0c\u6bcf\u4e00\u4e2a ListElement \u53ef\u4ee5\u6709\u4efb\u610f\u5c5e\u6027\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u9879\u90fd\u6709\u4e00\u4e2a\u540d\u5b57\u548c\u5916\u89c2\u989c\u8272\u3002 import QtQuick 2.2 Column { spacing : 2 Repeater { model : ListModel { ListElement { name : \"Mercury\" ; surfaceColor : \"gray\" } ListElement { name : \"Venus\" ; surfaceColor : \"yellow\" } ListElement { name : \"Earth\" ; surfaceColor : \"blue\" } ListElement { name : \"Mars\" ; surfaceColor : \"orange\" } ListElement { name : \"Jupiter\" ; surfaceColor : \"orange\" } ListElement { name : \"Saturn\" ; surfaceColor : \"yellow\" } ListElement { name : \"Uranus\" ; surfaceColor : \"lightBlue\" } ListElement { name : \"Neptune\" ; surfaceColor : \"lightBlue\" } } Rectangle { width : 100 height : 20 radius : 3 color : \"lightBlue\" Text { anchors . centerIn : parent text : name } Rectangle { anchors . left : parent . left anchors . verticalCenter : parent . verticalCenter anchors . leftMargin : 2 width : 16 height : 16 radius : 8 border . color : \"black\" border . width : 1 color : surfaceColor } } } } ListElement \u7684\u6bcf\u4e2a\u5c5e\u6027\u90fd\u88ab Repeater \u7ed1\u5b9a\u5230\u5b9e\u4f8b\u5316\u7684\u663e\u793a\u9879\u3002\u6b63\u5982\u4e0a\u9762\u4ee3\u7801\u4e2d\u663e\u793a\u7684\u90a3\u6837\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u7528\u4e8e\u663e\u793a\u6570\u636e\u7684 Rectangle \u4f5c\u7528\u57df\u5185\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230 ListElement \u7684 name \u548c surfaceColor \u5c5e\u6027\u3002 \u50cf\u4e0a\u9762\u51e0\u6bb5\u4ee3\u7801\u4e2d\uff0c Repeater \u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u9879\u90fd\u4f7f\u7528\u4e00\u4e2a Rectangle \u6e32\u67d3\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u7531\u4e8e Repeater \u5177\u6709\u4e00\u4e2a delegate \u7684\u9ed8\u8ba4\u5c5e\u6027\uff0c\u7531\u4e8e Rectangle \u6ca1\u6709\u663e\u5f0f\u8d4b\u503c\u7ed9\u4efb\u4f55\u4e00\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u5b83\u76f4\u63a5\u6210\u4e3a\u9ed8\u8ba4\u5c5e\u6027 delegate \u7684\u503c\uff0c\u6240\u4ee5\u624d\u4f1a\u4f7f\u7528 Rectangle \u6e32\u67d3\u3002\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u5177\u6709\u663e\u5f0f\u8d4b\u503c\u7684\u4ee3\u7801\uff1a import QtQuick 2.2 Column { spacing : 2 Repeater { model : 10 delegate : Rectangle { width : 100 height : 20 radius : 3 color : \"lightBlue\" Text { anchors . centerIn : parent text : index } } } }","title":"46. Repeater"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/","text":"\u4e3a\u4e86\u4f7f\u7528\u811a\u672c\u5316\u7684\u7ed8\u56fe\u673a\u5236\uff0cQt 5 \u5f15\u5165\u7684 Canvas \u5143\u7d20\u3002 Canvas \u5143\u7d20\u63d0\u4f9b\u4e86\u4e00\u79cd\u4e0e\u5206\u8fa8\u7387\u65e0\u5173\u7684\u4f4d\u56fe\u7ed8\u5236\u673a\u5236\u3002\u901a\u8fc7 Canvas \uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 JavaScript \u4ee3\u7801\u8fdb\u884c\u7ed8\u5236\u3002\u5982\u679c\u719f\u6089 HTML5 \u7684\u8bdd\uff0cQt Quick \u7684 Canvas \u5143\u7d20\u4e0e HTML5 \u4e2d\u7684 Canvas \u5143\u7d20\u5982\u51fa\u4e00\u8f99\u3002 Canvas \u5143\u7d20\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u4f7f\u7528\u4e00\u4e2a 2D \u4e0a\u4e0b\u6587\u5bf9\u8c61\u6e32\u67d3\u8def\u5f84\u3002\u8fd9\u4e2a 2D \u4e0a\u4e0b\u6587\u5bf9\u8c61\u5305\u542b\u6240\u5fc5\u987b\u7684\u7ed8\u5236\u51fd\u6570\uff0c\u4ece\u800c\u4f7f Canvas \u5143\u7d20\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u753b\u677f\u3002\u8fd9\u4e2a\u5bf9\u8c61\u652f\u6301\u753b\u7b14\u3001\u586b\u5145\u3001\u6e10\u53d8\u3001\u6587\u672c\u4ee5\u53ca\u5176\u5b83\u4e00\u7cfb\u5217\u8def\u5f84\u521b\u5efa\u51fd\u6570\u3002 \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u8def\u5f84\u7ed8\u5236\u7684\u4f8b\u5b50\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 200 height : 200 visible : true Canvas { id : root // \u753b\u677f\u5927\u5c0f width : 200 ; height : 200 // \u91cd\u5199\u7ed8\u5236\u51fd\u6570 onPaint : { // \u83b7\u5f97 2D \u4e0a\u4e0b\u6587\u5bf9\u8c61 var ctx = getContext ( \"2d\" ) // \u8bbe\u7f6e\u753b\u7b14 ctx . lineWidth = 4 ctx . strokeStyle = \"blue\" // \u8bbe\u7f6e\u586b\u5145 ctx . fillStyle = \"steelblue\" // \u5f00\u59cb\u7ed8\u5236\u8def\u5f84 ctx . beginPath () // \u79fb\u52a8\u5230\u5de6\u4e0a\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9 ctx . moveTo ( 50 , 50 ) // \u4e0a\u8fb9\u7ebf ctx . lineTo ( 150 , 50 ) // \u53f3\u8fb9\u7ebf ctx . lineTo ( 150 , 150 ) // \u5e95\u8fb9\u7ebf ctx . lineTo ( 50 , 150 ) // \u5de6\u8fb9\u7ebf\uff0c\u5e76\u7ed3\u675f\u8def\u5f84 ctx . closePath () // \u4f7f\u7528\u586b\u5145\u586b\u5145\u8def\u5f84 ctx . fill () // \u4f7f\u7528\u753b\u7b14\u7ed8\u5236\u8fb9\u7ebf ctx . stroke () } } } \u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u5728\u5de6\u4e0a\u89d2\u4e3a (50, 50) \u5904\uff0c\u7ed8\u5236\u4e00\u4e2a\u957f\u548c\u5bbd\u5747\u4e3a 100 \u50cf\u7d20\u7684\u77e9\u5f62\u3002\u8fd9\u4e2a\u77e9\u5f62\u4f7f\u7528\u94a2\u94c1\u84dd\u586b\u5145\uff0c\u5e76\u4e14\u5177\u6709\u84dd\u8272\u8fb9\u6846\u3002 ![[Canvas_1.png]] \u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u5206\u6790\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u3002\u9996\u5148\uff0c\u753b\u7b14\u7684\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a 4 \u50cf\u7d20\uff1b\u4f7f\u7528 strokeStyle \u5c5e\u6027\uff0c\u5c06\u753b\u7b14\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u84dd\u8272\u3002 fillStyle \u5c5e\u6027\u5219\u662f\u8bbe\u7f6e\u586b\u5145\u8272\u4e3a steelblue\u3002\u53ea\u6709\u5f53\u8c03\u7528\u4e86 stroke() \u6216 fill() \u51fd\u6570\u65f6\uff0c\u771f\u5b9e\u7684\u7ed8\u5236\u624d\u4f1a\u6267\u884c\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u5b8c\u5168\u53ef\u4ee5\u72ec\u7acb\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u8d77\u3002\u8c03\u7528 stroke() \u6216 fill() \u51fd\u6570\u610f\u5473\u7740\u5c06\u5f53\u524d\u8def\u5f84\u7ed8\u5236\u51fa\u6765\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8def\u5f84\u662f\u4e0d\u80fd\u591f\u88ab\u590d\u7528\u7684\uff0c\u53ea\u6709\u5f53\u524d\u7ed8\u5236\u72b6\u6001\u624d\u80fd\u591f\u88ab\u590d\u7528\u3002\u6240\u8c13\u201c\u5f53\u524d\u7ed8\u5236\u72b6\u6001\u201d\uff0c\u6307\u7684\u662f\u5f53\u524d\u7684\u753b\u7b14\u989c\u8272\u3001\u5bbd\u5ea6\u3001\u586b\u5145\u8272\u7b49\u5c5e\u6027\u3002 \u5728[[39. QML \u548c QtQuick 2#^7aa44d|QML]]\u4e2d\uff0c Canvas \u5143\u7d20\u5c31\u662f\u4e00\u79cd\u7ed8\u5236\u7684\u5bb9\u5668\u30022D \u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u5b9e\u9645\u7ed8\u5236\u7684\u6267\u884c\u8005\u3002\u7ed8\u5236\u8fc7\u7a0b\u5fc5\u987b\u5728 onPaint \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u5b8c\u6210\u3002\u4e0b\u9762\u5373\u4e00\u4e2a\u4ee3\u7801\u6846\u67b6\uff1a Canvas { width : 200 ; height : 200 onPaint : { var ctx = getContext ( \"2d\" ) // \u8bbe\u7f6e\u7ed8\u5236\u5c5e\u6027 // \u5f00\u59cb\u7ed8\u5236 } } Canvas \u672c\u8eab\u63d0\u4f9b\u4e00\u4e2a\u5178\u578b\u7684\u4e8c\u7ef4\u5750\u6807\u7cfb\uff0c\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\uff0cX \u8f74\u6b63\u65b9\u5411\u5411\u53f3\uff0cY \u8f74\u6b63\u65b9\u5411\u5411\u4e0b\u3002\u4f7f\u7528 Canvas \u8fdb\u884c\u7ed8\u5236\u7684\u5178\u578b\u8fc7\u7a0b\u662f\uff1a - \u8bbe\u7f6e\u753b\u7b14\u548c\u586b\u5145\u6837\u5f0f - \u521b\u5efa\u8def\u5f84 - \u5e94\u7528\u753b\u7b14\u548c\u586b\u5145 \u4f8b\u5982\uff1a onPaint : { var ctx = getContext ( \"2d\" ) // \u8bbe\u7f6e\u753b\u7b14 ctx . strokeStyle = \"red\" // \u521b\u5efa\u8def\u5f84 ctx . beginPath () ctx . moveTo ( 50 , 50 ) ctx . lineTo ( 150 , 50 ) // \u7ed8\u5236 ctx . stroke () } \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u8fd0\u884c\u7ed3\u679c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ece (50, 50) \u5f00\u59cb\uff0c\u5230 (150, 50) \u7ed3\u675f\u7684\u4e00\u6761\u7ea2\u8272\u7ebf\u6bb5\u3002 \u7531\u4e8e\u6211\u4eec\u5728\u521b\u5efa\u8def\u5f84\u4e4b\u524d\u4f1a\u5c06\u753b\u7b14\u653e\u5728\u8d77\u59cb\u70b9\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\uff0c\u5728\u8c03\u7528 beginPath() \u51fd\u6570\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u5f80\u5f80\u662f moveTo() \u3002 \u5f62\u72b6 API \u9664\u4e86\u81ea\u5df1\u8fdb\u884c\u8def\u5f84\u7684\u521b\u5efa\u4e4b\u5916\uff0c Canvas \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u4e00\u6b21\u6dfb\u52a0\u4e00\u4e2a\u77e9\u5f62\u7b49\uff0c\u4f8b\u5982\uff1a import QtQuick 2.0 Canvas { id : root width : 120 ; height : 120 onPaint : { var ctx = getContext ( \"2d\" ) ctx . fillStyle = ' green ' ctx . strokeStyle = \"blue\" ctx . lineWidth = 4 // \u586b\u5145\u77e9\u5f62 ctx . fillRect ( 20 , 20 , 80 , 80 ) // \u88c1\u51cf\u6389\u5185\u90e8\u77e9\u5f62 ctx . clearRect ( 30 , 30 , 60 , 60 ) // \u4ece\u5de6\u4e0a\u89d2\u8d77\uff0c\u5230\u5916\u5c42\u77e9\u5f62\u4e2d\u5fc3\u7ed8\u5236\u4e00\u4e2a\u8fb9\u6846 ctx . strokeRect ( 20 , 20 , 40 , 40 ) } } ![[Canvas_2.png]] \u6ce8\u610f\u84dd\u8272\u8fb9\u6846\u7684\u4f4d\u7f6e\u3002\u5728\u7ed8\u5236\u8fb9\u6846\u65f6\uff0c\u753b\u7b14\u4f1a\u6cbf\u7740\u8def\u5f84\u8fdb\u884c\u7ed8\u5236\u3002\u4e0a\u9762\u7ed9\u51fa\u7684 4 \u50cf\u7d20\u8fb9\u6846\uff0c\u5176\u4e2d\u5fc3\u70b9\u4e3a\u8def\u5f84\uff0c\u56e0\u6b64\u4f1a\u6709 2 \u50cf\u7d20\u5728\u8def\u5f84\u5916\u4fa7\uff0c2 \u50cf\u7d20\u5728\u8def\u5f84\u5185\u4fa7\u3002 \u6e10\u53d8 Canvas \u5143\u7d20\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u8fdb\u884c\u586b\u5145\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e10\u53d8\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a onPaint : { var ctx = getContext ( \"2d\" ) var gradient = ctx . createLinearGradient ( 100 , 0 , 100 , 200 ) gradient . addColorStop ( 0 , \"blue\" ) gradient . addColorStop ( 0.5 , \"lightsteelblue\" ) ctx . fillStyle = gradient ctx . fillRect ( 50 , 50 , 100 , 100 ) } ![[Canvas_3.png]] \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6e10\u53d8\u7684\u8d77\u59cb\u70b9\u4f4d\u4e8e (100, 0)\uff0c\u7ec8\u6b62\u70b9\u4f4d\u4e8e (100, 200)\u3002\u6ce8\u610f\u8fd9\u4e24\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5b9e\u9645\u521b\u5efa\u4e86\u4e00\u6761\u4f4d\u4e8e\u753b\u5e03\u4e2d\u592e\u4f4d\u7f6e\u7684\u7ad6\u76f4\u7ebf\u3002\u6e10\u53d8\u7c7b\u4f3c\u4e8e\u63d2\u503c\uff0c\u53ef\u4ee5\u5728 [0.0, 1.0] \u533a\u95f4\u5185\u63d2\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u786e\u5b9a\u7684\u989c\u8272\uff1b\u5176\u4e2d\uff0c0.0 \u610f\u5473\u7740\u6e10\u53d8\u7684\u8d77\u59cb\u70b9\uff0c1.0 \u610f\u5473\u7740\u6e10\u53d8\u7684\u7ec8\u6b62\u70b9\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728 0.0 \u7684\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u6e10\u53d8\u8d77\u59cb\u70b9 (100, 0) \u7684\u4f4d\u7f6e\uff09\u8bbe\u7f6e\u989c\u8272\u4e3a\u201cblue\u201d\uff1b\u5728 1.0 \u7684\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u6e10\u53d8\u7ec8\u6b62\u70b9 (100, 200) \u7684\u4f4d\u7f6e\uff09\u8bbe\u7f6e\u989c\u8272\u4e3a\u201clightsteelblue\u201d\u3002\u6ce8\u610f\uff0c\u6e10\u53d8\u7684\u8303\u56f4\u53ef\u4ee5\u5927\u4e8e\u5b9e\u9645\u7ed8\u5236\u7684\u77e9\u5f62\uff0c\u6b64\u65f6\uff0c\u7ed8\u5236\u51fa\u6765\u7684\u77e9\u5f62\u5b9e\u9645\u4e0a\u88c1\u51cf\u4e86\u6e10\u53d8\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u6e10\u53d8\u7684\u5b9a\u4e49\u5176\u5b9e\u662f\u4f9d\u636e\u753b\u5e03\u7684\u5750\u6807\uff0c\u4e5f\u4e0d\u662f\u5b9a\u4e49\u7684\u7ed8\u5236\u8def\u5f84\u7684\u5750\u6807\u3002 \u9634\u5f71 \u8def\u5f84\u53ef\u4ee5\u4f7f\u7528\u9634\u5f71\u589e\u5f3a\u89c6\u89c9\u8868\u73b0\u529b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u9634\u5f71\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u56f4\u7ed5\u5728\u8def\u5f84\u5468\u56f4\u7684\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u4f1a\u6709\u4e00\u5b9a\u7684\u504f\u79fb\u3001\u6709\u4e00\u5b9a\u7684\u989c\u8272\u548c\u7279\u6b8a\u7684\u6a21\u7cca\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 shadowColor \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u7684\u989c\u8272\uff1b\u4f7f\u7528 shadowOffsetX \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u5728 X \u8f74\u65b9\u5411\u7684\u504f\u79fb\u91cf\uff1b\u4f7f\u7528 shadowOffsetY \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u5728 Y \u8f74\u65b9\u5411\u7684\u504f\u79fb\u91cf\uff1b\u4f7f\u7528 shadowBlur \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u6a21\u7cca\u7684\u7a0b\u5ea6\u3002\u4e0d\u4ec5\u662f\u9634\u5f71\uff0c\u5229\u7528\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cd\u56f4\u7ed5\u5728\u8def\u5f84\u5468\u8fb9\u7684\u53d1\u5149\u7279\u6548\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u53d1\u5149\u6548\u679c\u7684\u6587\u672c\u3002\u4e3a\u4e86\u66f4\u660e\u663e\u7684\u663e\u793a\u53d1\u5149\u6548\u679c\uff0c\u5176\u80cc\u666f\u754c\u9762\u5c06\u4f1a\u662f\u6df1\u8272\u7684\u3002\u4e0b\u9762\u662f\u76f8\u5e94\u7684\u4ee3\u7801\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 280 height : 120 visible : true Canvas { id : root width : 280 ; height : 120 onPaint : { var ctx = getContext ( \"2d\" ) // \u80cc\u666f\u77e9\u5f62 ctx . strokeStyle = \"#333\" ctx . fillRect ( 0 , 0 , root . width , root . height ); // \u8bbe\u7f6e\u9634\u5f71\u5c5e\u6027 ctx . shadowColor = \"blue\" ; ctx . shadowOffsetX = 2 ; ctx . shadowOffsetY = 2 ; ctx . shadowBlur = 10 ; // \u8bbe\u7f6e\u5b57\u4f53\u5e76\u7ed8\u5236 ctx . font = ' bold 80 px sans - serif ' ; ctx . fillStyle = \"#33a9ff\" ; ctx . fillText ( \"Earth\" , 30 , 80 ); } } } ![[Canvas_4.png]] \u9996\u5148\uff0c\u6211\u4eec\u5229\u7528 #333 \u586b\u5145\u4e86\u4e00\u4e2a\u80cc\u666f\u77e9\u5f62\u3002\u77e9\u5f62\u7684\u8d77\u59cb\u70b9\u4f4d\u4e8e\u539f\u70b9\uff0c\u957f\u5ea6\u548c\u5bbd\u5ea6\u5206\u522b\u7ed1\u5b9a\u5230\u753b\u5e03\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u9634\u5f71\u7684\u5c5e\u6027\u3002\u6700\u540e\uff0c\u6211\u4eec\u8bbe\u7f6e\u6587\u672c\u5b57\u4f53\u4e3a 80 \u50cf\u7d20\u52a0\u7c97\u7684 sans-serif\uff0c\u4f1a\u7ed8\u5236\u4e86\u201cEarth\u201d\u5355\u8bcd\u3002 \u53d8\u6362 Canvas \u4e2d\u7684\u201c\u53d8\u5f62\u201d\uff0c\u4e3b\u8981\u6307\u7684\u662f\u5750\u6807\u7cfb\u7684\u53d8\u6362\uff0c\u800c\u4e0d\u662f\u8def\u5f84\u7684\u53d8\u6362\u3002\u8fd9\u4e0e QML \u5143\u7d20\u53d8\u6362\u975e\u5e38\u76f8\u4f3c\uff0c\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5750\u6807\u7cfb\u7edf\u7684 scale \uff08\u7f29\u653e\uff09\u3001 rotate \uff08\u65cb\u8f6c\uff09\u548c translate \uff08\u5e73\u79fb\uff09\uff1b\u4e0d\u540c\u7684\u662f\uff0c\u53d8\u6362\u7684\u539f\u70b9\u662f\u753b\u5e03\u539f\u70b9\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u4e00\u4e2a\u8def\u5f84\u7684\u4e2d\u5fc3\u70b9\u4e3a\u5b9a\u70b9\u8fdb\u884c\u7f29\u653e\uff0c\u90a3\u4e48\uff0c\u4f60\u9700\u8981\u73b0\u5c06\u753b\u5e03\u539f\u70b9\u79fb\u52a8\u5230\u8def\u5f84\u4e2d\u5fc3\u70b9\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53d8\u6362\u51fd\u6570\u5b9e\u73b0\u590d\u6742\u7684\u53d8\u6362\u3002\u7406\u89e3\u201c\u53d8\u6362\u662f\u9488\u5bf9\u5750\u6807\u7cfb\u7684\u201d\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u6709\u65f6\u5019\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u610f\u5916\u7684\u7ed3\u679c\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 200 height : 200 visible : true Canvas { id : root width : 200 ; height : 200 onPaint : { var ctx = getContext ( \"2d\" ) ctx . strokeStyle = \"blue\" ctx . lineWidth = 4 ctx . translate ( 120 , 60 ) ctx . strokeRect ( -20 , -20 , 40 , 40 ) // draw path now rotated ctx . strokeStyle = \"green\" ctx . rotate ( Math . PI / 4 ) ctx . strokeRect ( -20 , -20 , 40 , 40 ) ctx . restore () } } } ![[Canvas_5.png]] \u901a\u8fc7\u8c03\u7528 resetTransform() \u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u53d8\u6362\u77e9\u9635\u91cd\u7f6e\u4e3a\u5355\u4f4d\u77e9\u9635\uff1a ctx . resetTransform () \u7ec4\u5408 \u7ec4\u5408\u610f\u601d\u662f\uff0c\u5c06\u4f60\u7ed8\u5236\u7684\u56fe\u5f62\u4e0e\u5df2\u5b58\u5728\u7684\u50cf\u7d20\u505a\u4e00\u4e9b\u878d\u5408\u64cd\u4f5c\u3002 canvas \u652f\u6301\u51e0\u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u4f7f\u7528 globalCompositeOperation \u53ef\u4ee5\u8bbe\u7f6e\u7ec4\u5408\u7684\u6a21\u5f0f\u3002\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7ec4\u5408\u7684\u76f8\u5e94\u8868\u73b0\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 600 height : 450 visible : true Canvas { id : root width : 600 ; height : 450 property var operation : [ ' source - over ' , ' source - in ' , ' source - over ' , ' source - atop ' , ' destination - over ' , ' destination - in ' , ' destination - out ' , ' destination - atop ' , ' lighter ' , ' copy ' , ' xor ' , ' qt - clear ' , ' qt - destination ' , ' qt - multiply ' , ' qt - screen ' , ' qt - overlay ' , ' qt - darken ' , ' qt - lighten ' , ' qt - color - dodge ' , ' qt - color - burn ' , ' qt - hard - light ' , ' qt - soft - light ' , ' qt - difference ' , ' qt - exclusion ' ] onPaint : { var ctx = getContext ( ' 2 d ' ) for ( var i = 0 ; i < operation . length ; i ++ ) { var dx = Math . floor ( i % 6 ) * 100 var dy = Math . floor ( i / 6 ) * 100 ctx . save () ctx . fillStyle = '# 33 a9ff ' ctx . fillRect ( 10 + dx , 10 + dy , 60 , 60 ) // TODO: does not work yet ctx . globalCompositeOperation = root . operation [ i ] ctx . fillStyle = '# ff33a9 ' ctx . globalAlpha = 0.75 ctx . beginPath () ctx . arc ( 60 + dx , 60 + dy , 30 , 0 , 2 * Math . PI ) ctx . closePath () ctx . fill () ctx . restore () } } } } ![[Canvas_6.png]] \u50cf\u7d20\u7f13\u5b58 \u4f7f\u7528 canvas \uff0c\u4f60\u53ef\u4ee5\u5c06 canvas \u5185\u5bb9\u7684\u50cf\u7d20\u6570\u636e\u8bfb\u53d6\u51fa\u6765\uff0c\u5e76\u4e14\u80fd\u591f\u9488\u5bf9\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u4e9b\u64cd\u4f5c\u3002 \u4f7f\u7528 createImageData(sw, sh) \u6216 getImageData(sx, sy, sw, sh) \u51fd\u6570\u53ef\u4ee5\u8bfb\u53d6\u56fe\u50cf\u6570\u636e\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a ImageData \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5177\u6709 width \u3001 height \u548c data \u7b49\u53d8\u91cf\u3002 data \u5305\u542b\u4e00\u4e2a\u4ee5 RGBA \u683c\u5f0f\u5b58\u50a8\u7684\u50cf\u7d20\u4e00\u7ef4\u6570\u7ec4\uff0c\u5176\u6bcf\u4e00\u4e2a\u5206\u91cf\u503c\u7684\u8303\u56f4\u90fd\u662f [0, 255] \u3002\u5982\u679c\u8981\u8bbe\u7f6e\u753b\u5e03\u4e0a\u9762\u7684\u50cf\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 putImageData(imagedata, dx, dy) \u51fd\u6570\u3002 \u53e6\u5916\u4e00\u4e2a\u83b7\u53d6\u753b\u5e03\u5185\u5bb9\u7684\u65b9\u6cd5\u662f\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u4e00\u4e2a\u56fe\u7247\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 Canvas \u7684\u51fd\u6570 save(path) \u6216 toDataURL(mimeType) \u5b9e\u73b0\uff0c\u540e\u8005\u4f1a\u8fd4\u56de\u4e00\u4e2a\u56fe\u50cf\u7684 URL\uff0c\u53ef\u4ee5\u4f9b Image \u5143\u7d20\u52a0\u8f7d\u56fe\u50cf\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 import QtQml 2.12 Window { width : 240 height : 120 visible : true Rectangle { width : 240 ; height : 120 Canvas { id : canvas x : 10 ; y : 10 width : 100 ; height : 100 property real hue : 0.0 onPaint : { var ctx = getContext ( \"2d\" ) var x = 10 + Math . random ( 80 ) * 80 var y = 10 + Math . random ( 80 ) * 80 hue += Math . random () * 0.1 if ( hue > 1.0 ) { hue -= 1 } ctx . globalAlpha = 0.7 ctx . fillStyle = Qt . hsla ( hue , 0.5 , 0.5 , 1.0 ) ctx . beginPath () ctx . moveTo ( x + 5 , y ) ctx . arc ( x , y , x / 10 , 0 , 360 ) ctx . closePath () ctx . fill () } MouseArea { anchors . fill : parent onClicked : { var url = canvas . toDataURL ( ' image / png ' ) print ( ' image url = ' , url ) image . source = url } } } Image { id : image x : 130 ; y : 10 width : 100 ; height : 100 } Timer { interval : 1000 running : true triggeredOnStart : true repeat : true onTriggered : canvas . requestPaint () } } } \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u753b\u5e03\uff0c\u5de6\u4fa7\u7684\u753b\u5e03\u6bcf\u4e00\u79d2\u4ea7\u751f\u4e00\u4e2a\u5706\u70b9\uff1b\u9f20\u6807\u70b9\u51fb\u4f1a\u5c06\u753b\u5e03\u5185\u5bb9\u4fdd\u5b58\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u56fe\u50cf\u7684 URL\uff0c\u53f3\u4fa7\u5219\u4f1a\u663e\u793a\u8fd9\u4e2a\u56fe\u50cf\u3002","title":"47. Canvas"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#api","text":"\u9664\u4e86\u81ea\u5df1\u8fdb\u884c\u8def\u5f84\u7684\u521b\u5efa\u4e4b\u5916\uff0c Canvas \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u4e00\u6b21\u6dfb\u52a0\u4e00\u4e2a\u77e9\u5f62\u7b49\uff0c\u4f8b\u5982\uff1a import QtQuick 2.0 Canvas { id : root width : 120 ; height : 120 onPaint : { var ctx = getContext ( \"2d\" ) ctx . fillStyle = ' green ' ctx . strokeStyle = \"blue\" ctx . lineWidth = 4 // \u586b\u5145\u77e9\u5f62 ctx . fillRect ( 20 , 20 , 80 , 80 ) // \u88c1\u51cf\u6389\u5185\u90e8\u77e9\u5f62 ctx . clearRect ( 30 , 30 , 60 , 60 ) // \u4ece\u5de6\u4e0a\u89d2\u8d77\uff0c\u5230\u5916\u5c42\u77e9\u5f62\u4e2d\u5fc3\u7ed8\u5236\u4e00\u4e2a\u8fb9\u6846 ctx . strokeRect ( 20 , 20 , 40 , 40 ) } } ![[Canvas_2.png]] \u6ce8\u610f\u84dd\u8272\u8fb9\u6846\u7684\u4f4d\u7f6e\u3002\u5728\u7ed8\u5236\u8fb9\u6846\u65f6\uff0c\u753b\u7b14\u4f1a\u6cbf\u7740\u8def\u5f84\u8fdb\u884c\u7ed8\u5236\u3002\u4e0a\u9762\u7ed9\u51fa\u7684 4 \u50cf\u7d20\u8fb9\u6846\uff0c\u5176\u4e2d\u5fc3\u70b9\u4e3a\u8def\u5f84\uff0c\u56e0\u6b64\u4f1a\u6709 2 \u50cf\u7d20\u5728\u8def\u5f84\u5916\u4fa7\uff0c2 \u50cf\u7d20\u5728\u8def\u5f84\u5185\u4fa7\u3002","title":"\u5f62\u72b6 API"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#_1","text":"Canvas \u5143\u7d20\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u8fdb\u884c\u586b\u5145\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6e10\u53d8\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a onPaint : { var ctx = getContext ( \"2d\" ) var gradient = ctx . createLinearGradient ( 100 , 0 , 100 , 200 ) gradient . addColorStop ( 0 , \"blue\" ) gradient . addColorStop ( 0.5 , \"lightsteelblue\" ) ctx . fillStyle = gradient ctx . fillRect ( 50 , 50 , 100 , 100 ) } ![[Canvas_3.png]] \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6e10\u53d8\u7684\u8d77\u59cb\u70b9\u4f4d\u4e8e (100, 0)\uff0c\u7ec8\u6b62\u70b9\u4f4d\u4e8e (100, 200)\u3002\u6ce8\u610f\u8fd9\u4e24\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u70b9\u5b9e\u9645\u521b\u5efa\u4e86\u4e00\u6761\u4f4d\u4e8e\u753b\u5e03\u4e2d\u592e\u4f4d\u7f6e\u7684\u7ad6\u76f4\u7ebf\u3002\u6e10\u53d8\u7c7b\u4f3c\u4e8e\u63d2\u503c\uff0c\u53ef\u4ee5\u5728 [0.0, 1.0] \u533a\u95f4\u5185\u63d2\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u786e\u5b9a\u7684\u989c\u8272\uff1b\u5176\u4e2d\uff0c0.0 \u610f\u5473\u7740\u6e10\u53d8\u7684\u8d77\u59cb\u70b9\uff0c1.0 \u610f\u5473\u7740\u6e10\u53d8\u7684\u7ec8\u6b62\u70b9\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5728 0.0 \u7684\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u6e10\u53d8\u8d77\u59cb\u70b9 (100, 0) \u7684\u4f4d\u7f6e\uff09\u8bbe\u7f6e\u989c\u8272\u4e3a\u201cblue\u201d\uff1b\u5728 1.0 \u7684\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u6e10\u53d8\u7ec8\u6b62\u70b9 (100, 200) \u7684\u4f4d\u7f6e\uff09\u8bbe\u7f6e\u989c\u8272\u4e3a\u201clightsteelblue\u201d\u3002\u6ce8\u610f\uff0c\u6e10\u53d8\u7684\u8303\u56f4\u53ef\u4ee5\u5927\u4e8e\u5b9e\u9645\u7ed8\u5236\u7684\u77e9\u5f62\uff0c\u6b64\u65f6\uff0c\u7ed8\u5236\u51fa\u6765\u7684\u77e9\u5f62\u5b9e\u9645\u4e0a\u88c1\u51cf\u4e86\u6e10\u53d8\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u6e10\u53d8\u7684\u5b9a\u4e49\u5176\u5b9e\u662f\u4f9d\u636e\u753b\u5e03\u7684\u5750\u6807\uff0c\u4e5f\u4e0d\u662f\u5b9a\u4e49\u7684\u7ed8\u5236\u8def\u5f84\u7684\u5750\u6807\u3002","title":"\u6e10\u53d8"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#_2","text":"\u8def\u5f84\u53ef\u4ee5\u4f7f\u7528\u9634\u5f71\u589e\u5f3a\u89c6\u89c9\u8868\u73b0\u529b\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u9634\u5f71\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u56f4\u7ed5\u5728\u8def\u5f84\u5468\u56f4\u7684\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u4f1a\u6709\u4e00\u5b9a\u7684\u504f\u79fb\u3001\u6709\u4e00\u5b9a\u7684\u989c\u8272\u548c\u7279\u6b8a\u7684\u6a21\u7cca\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 shadowColor \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u7684\u989c\u8272\uff1b\u4f7f\u7528 shadowOffsetX \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u5728 X \u8f74\u65b9\u5411\u7684\u504f\u79fb\u91cf\uff1b\u4f7f\u7528 shadowOffsetY \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u5728 Y \u8f74\u65b9\u5411\u7684\u504f\u79fb\u91cf\uff1b\u4f7f\u7528 shadowBlur \u5c5e\u6027\u5b9a\u4e49\u9634\u5f71\u6a21\u7cca\u7684\u7a0b\u5ea6\u3002\u4e0d\u4ec5\u662f\u9634\u5f71\uff0c\u5229\u7528\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cd\u56f4\u7ed5\u5728\u8def\u5f84\u5468\u8fb9\u7684\u53d1\u5149\u7279\u6548\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u53d1\u5149\u6548\u679c\u7684\u6587\u672c\u3002\u4e3a\u4e86\u66f4\u660e\u663e\u7684\u663e\u793a\u53d1\u5149\u6548\u679c\uff0c\u5176\u80cc\u666f\u754c\u9762\u5c06\u4f1a\u662f\u6df1\u8272\u7684\u3002\u4e0b\u9762\u662f\u76f8\u5e94\u7684\u4ee3\u7801\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 280 height : 120 visible : true Canvas { id : root width : 280 ; height : 120 onPaint : { var ctx = getContext ( \"2d\" ) // \u80cc\u666f\u77e9\u5f62 ctx . strokeStyle = \"#333\" ctx . fillRect ( 0 , 0 , root . width , root . height ); // \u8bbe\u7f6e\u9634\u5f71\u5c5e\u6027 ctx . shadowColor = \"blue\" ; ctx . shadowOffsetX = 2 ; ctx . shadowOffsetY = 2 ; ctx . shadowBlur = 10 ; // \u8bbe\u7f6e\u5b57\u4f53\u5e76\u7ed8\u5236 ctx . font = ' bold 80 px sans - serif ' ; ctx . fillStyle = \"#33a9ff\" ; ctx . fillText ( \"Earth\" , 30 , 80 ); } } } ![[Canvas_4.png]] \u9996\u5148\uff0c\u6211\u4eec\u5229\u7528 #333 \u586b\u5145\u4e86\u4e00\u4e2a\u80cc\u666f\u77e9\u5f62\u3002\u77e9\u5f62\u7684\u8d77\u59cb\u70b9\u4f4d\u4e8e\u539f\u70b9\uff0c\u957f\u5ea6\u548c\u5bbd\u5ea6\u5206\u522b\u7ed1\u5b9a\u5230\u753b\u5e03\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6\u3002\u63a5\u4e0b\u6765\u5b9a\u4e49\u9634\u5f71\u7684\u5c5e\u6027\u3002\u6700\u540e\uff0c\u6211\u4eec\u8bbe\u7f6e\u6587\u672c\u5b57\u4f53\u4e3a 80 \u50cf\u7d20\u52a0\u7c97\u7684 sans-serif\uff0c\u4f1a\u7ed8\u5236\u4e86\u201cEarth\u201d\u5355\u8bcd\u3002","title":"\u9634\u5f71"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#_3","text":"Canvas \u4e2d\u7684\u201c\u53d8\u5f62\u201d\uff0c\u4e3b\u8981\u6307\u7684\u662f\u5750\u6807\u7cfb\u7684\u53d8\u6362\uff0c\u800c\u4e0d\u662f\u8def\u5f84\u7684\u53d8\u6362\u3002\u8fd9\u4e0e QML \u5143\u7d20\u53d8\u6362\u975e\u5e38\u76f8\u4f3c\uff0c\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5750\u6807\u7cfb\u7edf\u7684 scale \uff08\u7f29\u653e\uff09\u3001 rotate \uff08\u65cb\u8f6c\uff09\u548c translate \uff08\u5e73\u79fb\uff09\uff1b\u4e0d\u540c\u7684\u662f\uff0c\u53d8\u6362\u7684\u539f\u70b9\u662f\u753b\u5e03\u539f\u70b9\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4ee5\u4e00\u4e2a\u8def\u5f84\u7684\u4e2d\u5fc3\u70b9\u4e3a\u5b9a\u70b9\u8fdb\u884c\u7f29\u653e\uff0c\u90a3\u4e48\uff0c\u4f60\u9700\u8981\u73b0\u5c06\u753b\u5e03\u539f\u70b9\u79fb\u52a8\u5230\u8def\u5f84\u4e2d\u5fc3\u70b9\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53d8\u6362\u51fd\u6570\u5b9e\u73b0\u590d\u6742\u7684\u53d8\u6362\u3002\u7406\u89e3\u201c\u53d8\u6362\u662f\u9488\u5bf9\u5750\u6807\u7cfb\u7684\u201d\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u6709\u65f6\u5019\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u610f\u5916\u7684\u7ed3\u679c\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 200 height : 200 visible : true Canvas { id : root width : 200 ; height : 200 onPaint : { var ctx = getContext ( \"2d\" ) ctx . strokeStyle = \"blue\" ctx . lineWidth = 4 ctx . translate ( 120 , 60 ) ctx . strokeRect ( -20 , -20 , 40 , 40 ) // draw path now rotated ctx . strokeStyle = \"green\" ctx . rotate ( Math . PI / 4 ) ctx . strokeRect ( -20 , -20 , 40 , 40 ) ctx . restore () } } } ![[Canvas_5.png]] \u901a\u8fc7\u8c03\u7528 resetTransform() \u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u53d8\u6362\u77e9\u9635\u91cd\u7f6e\u4e3a\u5355\u4f4d\u77e9\u9635\uff1a ctx . resetTransform ()","title":"\u53d8\u6362"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#_4","text":"\u7ec4\u5408\u610f\u601d\u662f\uff0c\u5c06\u4f60\u7ed8\u5236\u7684\u56fe\u5f62\u4e0e\u5df2\u5b58\u5728\u7684\u50cf\u7d20\u505a\u4e00\u4e9b\u878d\u5408\u64cd\u4f5c\u3002 canvas \u652f\u6301\u51e0\u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u4f7f\u7528 globalCompositeOperation \u53ef\u4ee5\u8bbe\u7f6e\u7ec4\u5408\u7684\u6a21\u5f0f\u3002\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7ec4\u5408\u7684\u76f8\u5e94\u8868\u73b0\uff1a import QtQuick 2.12 import QtQuick . Window 2.12 Window { width : 600 height : 450 visible : true Canvas { id : root width : 600 ; height : 450 property var operation : [ ' source - over ' , ' source - in ' , ' source - over ' , ' source - atop ' , ' destination - over ' , ' destination - in ' , ' destination - out ' , ' destination - atop ' , ' lighter ' , ' copy ' , ' xor ' , ' qt - clear ' , ' qt - destination ' , ' qt - multiply ' , ' qt - screen ' , ' qt - overlay ' , ' qt - darken ' , ' qt - lighten ' , ' qt - color - dodge ' , ' qt - color - burn ' , ' qt - hard - light ' , ' qt - soft - light ' , ' qt - difference ' , ' qt - exclusion ' ] onPaint : { var ctx = getContext ( ' 2 d ' ) for ( var i = 0 ; i < operation . length ; i ++ ) { var dx = Math . floor ( i % 6 ) * 100 var dy = Math . floor ( i / 6 ) * 100 ctx . save () ctx . fillStyle = '# 33 a9ff ' ctx . fillRect ( 10 + dx , 10 + dy , 60 , 60 ) // TODO: does not work yet ctx . globalCompositeOperation = root . operation [ i ] ctx . fillStyle = '# ff33a9 ' ctx . globalAlpha = 0.75 ctx . beginPath () ctx . arc ( 60 + dx , 60 + dy , 30 , 0 , 2 * Math . PI ) ctx . closePath () ctx . fill () ctx . restore () } } } } ![[Canvas_6.png]]","title":"\u7ec4\u5408"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/47.%20Canvas/#_5","text":"\u4f7f\u7528 canvas \uff0c\u4f60\u53ef\u4ee5\u5c06 canvas \u5185\u5bb9\u7684\u50cf\u7d20\u6570\u636e\u8bfb\u53d6\u51fa\u6765\uff0c\u5e76\u4e14\u80fd\u591f\u9488\u5bf9\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u4e9b\u64cd\u4f5c\u3002 \u4f7f\u7528 createImageData(sw, sh) \u6216 getImageData(sx, sy, sw, sh) \u51fd\u6570\u53ef\u4ee5\u8bfb\u53d6\u56fe\u50cf\u6570\u636e\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a ImageData \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5177\u6709 width \u3001 height \u548c data \u7b49\u53d8\u91cf\u3002 data \u5305\u542b\u4e00\u4e2a\u4ee5 RGBA \u683c\u5f0f\u5b58\u50a8\u7684\u50cf\u7d20\u4e00\u7ef4\u6570\u7ec4\uff0c\u5176\u6bcf\u4e00\u4e2a\u5206\u91cf\u503c\u7684\u8303\u56f4\u90fd\u662f [0, 255] \u3002\u5982\u679c\u8981\u8bbe\u7f6e\u753b\u5e03\u4e0a\u9762\u7684\u50cf\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 putImageData(imagedata, dx, dy) \u51fd\u6570\u3002 \u53e6\u5916\u4e00\u4e2a\u83b7\u53d6\u753b\u5e03\u5185\u5bb9\u7684\u65b9\u6cd5\u662f\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u4e00\u4e2a\u56fe\u7247\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 Canvas \u7684\u51fd\u6570 save(path) \u6216 toDataURL(mimeType) \u5b9e\u73b0\uff0c\u540e\u8005\u4f1a\u8fd4\u56de\u4e00\u4e2a\u56fe\u50cf\u7684 URL\uff0c\u53ef\u4ee5\u4f9b Image \u5143\u7d20\u52a0\u8f7d\u56fe\u50cf\u3002 import QtQuick 2.12 import QtQuick . Window 2.12 import QtQml 2.12 Window { width : 240 height : 120 visible : true Rectangle { width : 240 ; height : 120 Canvas { id : canvas x : 10 ; y : 10 width : 100 ; height : 100 property real hue : 0.0 onPaint : { var ctx = getContext ( \"2d\" ) var x = 10 + Math . random ( 80 ) * 80 var y = 10 + Math . random ( 80 ) * 80 hue += Math . random () * 0.1 if ( hue > 1.0 ) { hue -= 1 } ctx . globalAlpha = 0.7 ctx . fillStyle = Qt . hsla ( hue , 0.5 , 0.5 , 1.0 ) ctx . beginPath () ctx . moveTo ( x + 5 , y ) ctx . arc ( x , y , x / 10 , 0 , 360 ) ctx . closePath () ctx . fill () } MouseArea { anchors . fill : parent onClicked : { var url = canvas . toDataURL ( ' image / png ' ) print ( ' image url = ' , url ) image . source = url } } } Image { id : image x : 130 ; y : 10 width : 100 ; height : 100 } Timer { interval : 1000 running : true triggeredOnStart : true repeat : true onTriggered : canvas . requestPaint () } } } \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u753b\u5e03\uff0c\u5de6\u4fa7\u7684\u753b\u5e03\u6bcf\u4e00\u79d2\u4ea7\u751f\u4e00\u4e2a\u5706\u70b9\uff1b\u9f20\u6807\u70b9\u51fb\u4f1a\u5c06\u753b\u5e03\u5185\u5bb9\u4fdd\u5b58\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u56fe\u50cf\u7684 URL\uff0c\u53f3\u4fa7\u5219\u4f1a\u663e\u793a\u8fd9\u4e2a\u56fe\u50cf\u3002","title":"\u50cf\u7d20\u7f13\u5b58"},{"location":"Programming/03.%20Qt/01.%20Qt%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/48.%20%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/","text":"\u7c92\u5b50\u7cfb\u7edf\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u6280\u672f\uff0c\u7528\u4e8e\u6a21\u62df\u4e00\u4e9b\u7279\u5b9a\u7684\u6a21\u7cca\u73b0\u8c61\uff0c\u8fd9\u4e9b\u73b0\u8c61\u7528\u4f20\u7edf\u7684\u6e32\u67d3\u6280\u672f\u96be\u4ee5\u8fbe\u5230\u4e00\u5b9a\u7684\u771f\u5b9e\u611f\u3002\u867d\u7136\u540d\u4e3a\u201c\u7c92\u5b50\u201d\uff0c\u4f46\u5374\u53ef\u4ee5\u6a21\u62df\u7206\u70b8\u3001\u70df\u3001\u6c34\u6d41\u3001\u843d\u53f6\u3001\u4e91\u3001\u96fe\u3001\u6d41\u661f\u5c3e\u8ff9\u6216\u5176\u5b83\u53d1\u5149\u8f68\u8ff9\u8fd9\u6837\u7684\u62bd\u8c61\u89c6\u89c9\u6548\u679c\u3002\u7c92\u5b50\u7cfb\u7edf\u7684\u7279\u8272\u662f\u201c\u6a21\u7cca\u201d\uff0c\u5176\u6e32\u67d3\u6548\u679c\u5e76\u975e\u5b8c\u5168\u53d6\u51b3\u4e8e\u50cf\u7d20\uff0c\u800c\u662f\u4f7f\u7528\u7279\u5b9a\u7684\u8fb9\u754c\u53c2\u6570\u63cf\u8ff0\u968f\u673a\u7c92\u5b50\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4f7f\u7528[[39. QML \u548c QtQuick 2#^7aa44d|QML]]\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u7c92\u5b50\u7cfb\u7edf\u3002 \u7c92\u5b50\u7cfb\u7edf\u7684\u6838\u5fc3\u662f ParticleSystem \uff0c\u7528\u4e8e\u63a7\u5236\u5171\u4eab\u65f6\u95f4\u7ebf\u3002\u4e00\u4e2a\u573a\u666f\u53ef\u4ee5\u6709\u591a\u4e2a\u7c92\u5b50\u7cfb\u7edf\uff0c\u6bcf\u4e00\u4e2a\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u65f6\u95f4\u7ebf\u3002\u7c92\u5b50\u7531 Emitter \u5143\u7d20\u53d1\u5c04\uff0c\u4f7f\u7528 ParticlePainter \u8fdb\u884c\u53ef\u89c6\u5316\u663e\u793a\uff0c\u8fd9\u4e2a\u663e\u793a\u53ef\u4ee5\u662f\u56fe\u50cf\u3001QML \u9879\u76ee\u6216\u8005\u9634\u5f71\u5143\u7d20\u7b49\u3002 Emitter \u8fd8\u4f7f\u7528\u5411\u91cf\u7a7a\u95f4\u5b9a\u4e49\u4e86\u7c92\u5b50\u7684\u65b9\u5411\u3002\u7c92\u5b50\u4e00\u65e6\u53d1\u5c04\uff0c\u5c31\u5b8c\u5168\u8131\u79bb\u4e86\u53d1\u5c04\u5668\u7684\u7ba1\u7406\u3002\u7c92\u5b50\u6a21\u5757\u5219\u63d0\u4f9b\u4e86 Affector \uff0c\u5141\u8bb8\u63a7\u5236\u53d1\u5c04\u51fa\u7684\u7c92\u5b50\u3002\u7cfb\u7edf\u4e2d\u7684\u7c92\u5b50\u53ef\u4ee5\u901a\u8fc7 ParticleGroup \u5171\u4eab\u65f6\u95f4\u53d8\u6362\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7c92\u5b50\u90fd\u662f\u5c5e\u4e8e\u7a7a\u7ec4\uff08\u5373\u201d\"\uff09\u3002 ![[\u7c92\u5b50\u7cfb\u7edf_1.png]] \u6309\u7167\u4e0a\u9762\u7684\u7b80\u4ecb\uff0c\u7c92\u5b50\u7cfb\u7edf\u5305\u542b\u4ee5\u4e0b\u91cd\u8981\u7684\u7c7b\uff1a - ParticleSystem \u2013 \u7ba1\u7406\u53d1\u5c04\u5668\u5171\u4eab\u7684\u65f6\u95f4\u7ebf - Emitter \u2013 \u5411\u7cfb\u7edf\u4e2d\u53d1\u5c04\u903b\u8f91\u7c92\u5b50 - ParticlePainter \u2013 \u4f7f\u7528\u7c92\u5b50\u753b\u7b14\u7ed8\u5236\u7c92\u5b50 - Direction \u2013 \u5df2\u7ecf\u53d1\u5c04\u51fa\u7684\u7c92\u5b50\u4f7f\u7528\u7684\u5411\u91cf\u7a7a\u95f4 - ParticleGroup \u2013 \u6bcf\u4e00\u4e2a\u7c92\u5b50\u90fd\u96b6\u5c5e\u4e8e\u4e00\u4e2a\u7ec4 - Affector \u2013 \u7ef4\u62a4\u5df2\u7ecf\u53d1\u5c04\u51fa\u7684\u7c92\u5b50 \u4e0b\u9762\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5f00\u59cb\u3002\u4f7f\u7528 Qt Quick \u7c92\u5b50\u7cfb\u7edf\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\uff1a - \u4e3a\u6a21\u62df\u7cfb\u7edf\u6784\u5efa\u6240\u6709\u5143\u7d20\u7684 ParticleSystem - \u5411\u7cfb\u7edf\u4e2d\u53d1\u5c04\u7c92\u5b50\u7684 Emitter - \u7ee7\u627f\u81ea ParticlePainter \u7684\u5143\u7d20\uff0c\u7528\u4e8e\u5b9e\u73b0\u7c92\u5b50\u53ef\u89c6\u5316\u7684 import QtQuick 2.12 import QtQuick . Window 2.12 import QtQuick . Particles 2.12 Window { width : 300 height : 160 visible : true Rectangle { id : root ; width : 300 ; height : 160 color : \"#1f1f1f\" ParticleSystem { id : particles } Emitter { id : emitter anchors . centerIn : parent width : 160 ; height : 80 system : particles emitRate : 10 lifeSpan : 1000 lifeSpanVariation : 500 size : 16 endSize : 32 Rectangle { anchors . fill : parent color : ' transparent ' border . color : ' green ' border . width : 2 opacity : 0.8 } } ItemParticle { system : particles delegate : Rectangle { id : rect width : 10 height : 10 color : \"red\" radius : 10 } } } } ![[\u7c92\u5b50\u7cfb\u7edf_2.png]] \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a 300\u00d7160 \u7684\u6df1\u8272\u77e9\u5f62\u4f5c\u4e3a\u80cc\u666f\uff1b\u7136\u540e\u58f0\u660e\u4e00\u4e2a ParticleSystem \u7ec4\u4ef6\u3002\u901a\u5e38\u8fd9\u662f\u4f7f\u7528\u7c92\u5b50\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\uff1a\u6b63\u662f ParticleSystem \u7ec4\u4ef6\u8fde\u63a5\u8d77\u5176\u5b83\u5143\u7d20\u3002\u7b2c\u4e8c\u6b65\u4e00\u822c\u662f\u521b\u5efa Emitter \uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c92\u5b50\u53d1\u5c04\u533a\u57df\u4ee5\u53ca\u53d1\u5c04\u7c92\u5b50\u7684\u76f8\u5173\u53c2\u6570\u3002 Emitter \u4f7f\u7528 system \u5c5e\u6027\u5c06\u5176\u81ea\u5df1\u4e0e\u4e00\u4e2a\u7c92\u5b50\u7cfb\u7edf\u5173\u8054\u8d77\u6765\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53d1\u5c04\u5668\u6240\u5b9a\u4e49\u7684\u533a\u57df\u6bcf\u79d2\u53d1\u5c04 10 \u4e2a\u7c92\u5b50\uff08 emitRate: 10 \uff09\uff0c\u6bcf\u4e2a\u7c92\u5b50\u7684\u751f\u547d\u5468\u671f\u662f 1000 \u6beb\u79d2\uff08 lifeSpan : 1000 \uff09\uff0c\u53d1\u5c04\u51fa\u7684\u7c92\u5b50\u7684\u751f\u547d\u5468\u671f\u53d8\u52a8\u533a\u95f4\u4e3a 500 \u6beb\u79d2\uff08 lifeSpanVariation: 500 \uff09\u3002\u6bcf\u4e00\u4e2a\u7c92\u5b50\u53d1\u51fa\u65f6\u7684\u8d77\u59cb\u5927\u5c0f\u4e3a 16px\uff08 size: 16 \uff09\uff0c\u6d88\u5931\u65f6\u7684\u5927\u5c0f\u4e3a 32px\uff08 endSize: 32 \uff09\u3002 \u4e3a\u4e86\u663e\u793a\u51fa\u53d1\u5c04\u5668\u7684\u8303\u56f4\uff0c\u6211\u4eec\u7279\u610f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7eff\u8272\u77e9\u5f62\uff0c\u7528\u4e8e\u6807\u8bb0\u5904\u53d1\u5c04\u5668\u7684\u8fb9\u6846\u3002\u6ce8\u610f\u89c2\u5bdf\uff0c\u5927\u90e8\u5206\u7c92\u5b50\u90fd\u4f1a\u51fa\u73b0\u5728\u8fd9\u4e2a\u7eff\u8272\u77e9\u5f62\u5185\uff0c\u4f46\u662f\u4e5f\u4f1a\u6709\u5c11\u91cf\u7c92\u5b50\u8d85\u51fa\u8fb9\u754c\u3002\u7c92\u5b50\u6e32\u67d3\u7684\u4f4d\u7f6e\u53d6\u51b3\u4e8e\u5176\u751f\u547d\u5468\u671f\u548c\u7c92\u5b50\u7684\u65b9\u5411\u3002\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\u6709\u5173\u7c92\u5b50\u65b9\u5411\u7684\u6982\u5ff5\u3002 \u53d1\u5c04\u5668\u4ec5\u4ec5\u53d1\u5c04\u903b\u8f91\u4e0a\u7684\u7c92\u5b50\uff0c\u6bcf\u4e00\u4e2a\u903b\u8f91\u7c92\u5b50\u90fd\u8981\u901a\u8fc7 ParticlePainter \u7ed8\u5236\u51fa\u6765\uff0c\u4ee5\u4fbf\u53ef\u89c6\u5316\u663e\u793a\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 ItemParticle \u7c7b\u578b\u3002 ItemParticle \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4ee3\u7406\uff0c\u7528\u4e8e\u6e32\u67d3\u6bcf\u4e2a\u7c92\u5b50\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u540c\u6837\u4f7f\u7528 system \u5c5e\u6027\uff0c\u5c06 ItemParticle \u4e0e ParticleSystem \u5173\u8054\u8d77\u6765\u3002 \u4e0b\u9762\u7740\u91cd\u8bf4\u660e\u51e0\u4e2a\u53c2\u6570\uff1a - emitRate \uff1a\u6bcf\u79d2\u949f\u5c04\u51fa\u7684\u7c92\u5b50\u6570\uff08\u9ed8\u8ba4\u662f\u6bcf\u79d2 10 \u4e2a\uff09 - lifeSpan \uff1a\u7c92\u5b50\u751f\u547d\u5468\u671f\u7684\u6beb\u79d2\u6570\uff08\u9ed8\u8ba4\u662f 1000 \u6beb\u79d2\uff09\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u201c\u5efa\u8bae\u503c\u201d\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u4e25\u683c\u8bbe\u7f6e\u6bcf\u4e00\u4e2a\u7c92\u5b50\u90fd\u662f\u8fd9\u4e48\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u4ee5\u770b\u4f5c\u6709\u4e00\u4e2a\u8bef\u5dee\u8303\u56f4 - size \uff0c endSize \uff1a\u7c92\u5b50\u7684\u8d77\u59cb\u5927\u5c0f\u548c\u7ec8\u6b62\u5927\u5c0f\uff08\u9ed8\u8ba4\u662f 16px\uff09 \u4fee\u6539\u8fd9\u4e9b\u53c2\u6570\uff0c\u53ef\u4ee5\u975e\u5e38\u660e\u663e\u7684\u5f71\u54cd\u5230\u4e00\u4e2a\u7c92\u5b50\u7cfb\u7edf\u7684\u8fd0\u884c\u884c\u4e3a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u7684 Emitter \u4fee\u6539\u4e3a\uff1a Emitter { id : emitter anchors . centerIn : parent width : 160 ; height : 80 system : particles emitRate : 40 lifeSpan : 2000 lifeSpanVariation : 500 Rectangle { anchors . fill : parent color : ' transparent ' border . color : ' green ' border . width : 2 opacity : 0.8 } } ![[\u7c92\u5b50\u7cfb\u7edf_3.png]] \u7531\u4e8e\u589e\u5927\u4e86 emitRate \uff0c\u540c\u65f6\u5ef6\u957f\u4e86 lifeSpan \u548c lifeSpanVariation \uff0c\u7cfb\u7edf\u4e2d\u540c\u65f6\u5b58\u5728\u7684\u7c92\u5b50\u6bd4\u4e4b\u524d\u7684\u7248\u672c\u589e\u52a0\u4e86\u5f88\u591a\u3002 \u9664\u4e86 ItemParticle \uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 ImageParticle \u3002\u987e\u540d\u601d\u4e49\uff0c ImageParticle \u4f7f\u7528\u56fe\u50cf\u6e32\u67d3\u7c92\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5176 source \u5c5e\u6027\u6307\u5b9a\u56fe\u50cf\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\uff1a ImageParticle { system : particles source : \"qrc:/images/star.png\" } ![[\u7c92\u5b50\u7cfb\u7edf_4.png]] \u5982\u679c\u6240\u6709\u7c92\u5b50\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u56fe\u50cf\uff0c\u8fd9\u4e2a\u7c92\u5b50\u7cfb\u7edf\u4f1a\u663e\u5f97\u5f88\u5047\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4fbf\u4f7f\u7528\u56fe\u50cf\uff0c\u7c92\u5b50\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5176\u989c\u8272\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u7c92\u5b50\u7684\u4e3b\u4f53\u989c\u8272\u8bbe\u7f6e\u4e3a\u91d1\u8272\uff0c\u4f46\u662f\u5141\u8bb8\u4e00\u4e2a +/-60% \u7684\u8bef\u5dee\u8303\u56f4\uff1a color : '# FFD700 ' colorVariation : 0.6 \u4e3a\u4e86\u8ba9\u573a\u666f\u66f4\u751f\u52a8\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u65cb\u8f6c\u7c92\u5b50\uff1a\u5c06\u6bcf\u4e00\u4e2a\u7c92\u5b50\u987a\u65f6\u9488\u65cb\u8f6c 15 \u5ea6\uff0c\u53e6\u5916\u6709\u4e00\u4e2a +/-5 \u5ea6\u7684\u8bef\u5dee\u8303\u56f4\uff1b\u7136\u540e\uff0c\u8fd9\u4e9b\u7c92\u5b50\u7ee7\u7eed\u4ee5\u6bcf\u79d2 45 \u5ea6\u7684\u901f\u5ea6\u65cb\u8f6c\u3002\u8fd9\u4e2a\u901f\u5ea6\u56e0\u7c92\u5b50\u800c\u5f02\uff0c\u4f1a\u6709\u4e00\u4e2a +/-15 \u5ea6\u6bcf\u79d2\u7684\u8bef\u5dee\u8303\u56f4\u3002 rotation : 15 rotationVariation : 5 rotationVelocity : 45 rotationVelocityVariation : 15 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4fee\u6539\u7c92\u5b50\u8fdb\u5165\u573a\u666f\u7684\u6548\u679c\u3002\u5f53\u7c92\u5b50\u7684\u751f\u547d\u5468\u671f\u5f00\u59cb\u65f6\uff0c\u5c31\u4f1a\u5e94\u7528\u8fd9\u4e2a\u6548\u679c\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u6dfb\u52a0\u4e00\u4e2a\u7f29\u653e\u6548\u679c\uff1a entryEffect : ImageParticle . Scale ![[\u7c92\u5b50\u7cfb\u7edf_5.png]] \u7c92\u5b50\u7684\u65cb\u8f6c\u4f5c\u7528\u4e8e\u6bcf\u4e00\u4e2a\u7c92\u5b50\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u7c92\u5b50\u8f68\u8ff9\u7684\u65b9\u5411\u3002\u8f68\u8ff9\u53d6\u51b3\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5411\u91cf\u7a7a\u95f4\uff0c\u8be5\u5411\u91cf\u7a7a\u95f4\u5b9a\u4e49\u4e86\u7c92\u5b50\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\uff0c\u4ee5\u53ca\u4e00\u4e2a\u968f\u673a\u7684\u65b9\u5411\u3002QML \u63d0\u4f9b\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u5411\u91cf\u7a7a\u95f4\uff0c\u7528\u4e8e\u5b9a\u4e49\u7c92\u5b50\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\uff1a - PointDirection \uff1a\u4f7f\u7528 x \u548c y \u503c\u5b9a\u4e49\u7684\u65b9\u5411 - AngleDirection \uff1a\u4f7f\u7528\u89d2\u5ea6\u5b9a\u4e49\u7684\u65b9\u5411 - TargetDirection \uff1a\u4f7f\u7528\u4e00\u4e2a\u76ee\u6807\u70b9\u5750\u6807\u5b9a\u4e49\u7684\u65b9\u5411 ![[\u7c92\u5b50\u7cfb\u7edf_6.png]] \u9996\u5148\uff0c\u6211\u4eec\u8ba8\u8bba AngleDirection \u3002\u8981\u4f7f\u7528 AngleDirection \uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8d4b\u503c\u7ed9 Emitter \u7684 velocity \u5c5e\u6027\uff1a velocity: AngleDirection { } \u7c92\u5b50\u53d1\u5c04\u89d2\u5ea6\u4f7f\u7528 angle \u5c5e\u6027\u5b9a\u4e49\u3002 angle \u5c5e\u6027\u7684\u53d6\u503c\u8303\u56f4\u662f [0, 360) \uff0c0 \u4e3a\u6c34\u5e73\u5411\u53f3\u3002\u5728\u6211\u4eec\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7c92\u5b50\u5411\u53f3\u53d1\u5c04\uff0c\u56e0\u6b64 angle \u8bbe\u7f6e\u4e3a 0\uff1b\u7c92\u5b50\u53d1\u5c04\u8303\u56f4\u5219\u662f +/-5 \u5ea6\uff1a velocity : AngleDirection { angle : 0 angleVariation : 15 } \u73b0\u5728\u6211\u4eec\u8bbe\u7f6e\u597d\u4e86\u65b9\u5411\uff0c\u4e0b\u9762\u7ee7\u7eed\u8bbe\u7f6e\u7c92\u5b50\u901f\u5ea6\u3002\u7c92\u5b50\u7684\u901f\u5ea6\u7531 magnitude \u5c5e\u6027\u51b3\u5b9a\u3002 magnitude \u5355\u4f4d\u662f\u50cf\u7d20/\u79d2\u3002\u5982\u679c\u6211\u4eec\u7684\u573a\u666f\u5bbd\u5ea6\u662f 640px\uff0c\u90a3\u4e48\u5c06 magnitude \u8bbe\u7f6e\u4e3a 100 \u6216\u8bb8\u8fd8\u4e0d\u9519\u3002\u8fd9\u610f\u5473\u7740\uff0c\u7c92\u5b50\u5e73\u5747\u9700\u8981\u8017\u8d39 6.4 \u79d2\u65f6\u95f4\u4ece\u573a\u666f\u4e00\u7aef\u79fb\u52a8\u5230\u53e6\u4e00\u7aef\u3002\u4e3a\u4e86\u8ba9\u7c92\u5b50\u901f\u5ea6\u66f4\u6709\u8da3\uff0c\u6211\u4eec\u8fd8\u8981\u8bbe\u7f6e magnitudeVariation \u5c5e\u6027\u3002\u8fd9\u4f1a\u4e3a\u8be5\u901f\u5ea6\u8bbe\u7f6e\u4e00\u4e2a\u53ef\u53d8\u7684\u8303\u56f4\u533a\u95f4\uff1a velocity : AngleDirection { ... magnitude : 100 magnitudeVariation : 50 } \u4e0b\u9762\u662f Emitter \u7684\u5b8c\u6574\u4ee3\u7801\uff1a Emitter { id : emitter anchors . left : parent . left anchors . verticalCenter : parent . verticalCenter width : 1 ; height : 1 system : particleSystem lifeSpan : 6400 lifeSpanVariation : 400 size : 32 velocity : AngleDirection { angle : 0 angleVariation : 15 magnitude : 100 magnitudeVariation : 50 } }","title":"48. \u7c92\u5b50\u7cfb\u7edf"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/QLocalSocket%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","text":"QLocalSocket \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u672c\u673a socket\u3002 \u5728 Windows \u7cfb\u7edf\u4e0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u547d\u540d\u7ba1\u9053\u3002\u5728 Unix \u7cfb\u7edf\u4e0b\uff0c\u8fd9\u662f\u4e00\u4e2a\u672c\u5730\u57df socket\u3002 UNIX-domain Socket\u662f\u5728 Socket \u7684\u57fa\u7840\u4e0a\u884d\u751f\u51fa\u6765\u7684\u4e00\u79cd IPC \u901a\u4fe1\u673a\u5236\uff0c\u56e0\u6b64 LocalSocket \u89e3\u51b3\u7684\u662f\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\u4e0d\u540c\u8fdb\u7a0b\u95f4\u4e92\u76f8\u901a\u4fe1\u7684\u95ee\u9898\u3002\u5176\u76f8\u5bf9\u4e8e\u7f51\u7edc\u901a\u4fe1\u4f7f\u7528\u7684 socket \u4e0d\u9700\u8981\u7ecf\u8fc7\u7f51\u7edc\u534f\u8bae\u6808\uff0c\u4e0d\u9700\u8981\u6253\u5305\u62c6\u5305\u3001\u8ba1\u7b97\u6821\u9a8c\uff0c\u81ea\u7136\u7684\u6267\u884c\u6548\u7387\u4e5f\u9ad8\u3002 Windows \u5e73\u53f0\u5b9e\u4f8b Windows \u547d\u540d\u7ba1\u9053\u4f5c\u4e3a\u670d\u52a1\u7aef\uff1a #include <iostream> #include <tchar.h> #include <Windows.h> int main () { HANDLE hPipe = CreateNamedPipe ( _T ( \" \\\\\\\\ . \\\\ pipe \\\\ LocalServer\" ), PIPE_ACCESS_DUPLEX , PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT , 1 , 1024 , 1024 , 10 , nullptr ); if ( hPipe != INVALID_HANDLE_VALUE ) { if ( ConnectNamedPipe ( hPipe , nullptr )) { char msg [] = \"Win32 pipe message\" ; int len = sizeof ( msg ) / sizeof ( char ); BOOL res = WriteFile ( hPipe , msg , len , nullptr , nullptr ); Sleep ( 60000 ); } DisconnectNamedPipe ( hPipe ); CloseHandle ( hPipe ); } return 0 ; } QLocalSocket \u4f5c\u4e3a\u5ba2\u6237\u7aef\u8bfb\u53d6\u547d\u540d\u7ba1\u9053\u6570\u636e\u7684\u5173\u952e\u4ee3\u7801\uff1a #include <QLocalSocket> QLocalSocket * m_sock ; m_sock = new QLocalSocket ( this ); connect ( m_sock , & QLocalSocket :: readyRead , this , & MainWindow :: readMsg ); m_sock -> connectToServer ( \"LocalServer\" ); //\u786e\u4fdd\u670d\u52a1\u7aef\u540d\u79f0\u4e0e\u547d\u540d\u7ba1\u9053\u540d\u79f0\u4e00\u81f4\u5373\u53ef\u901a\u4fe1 void MainWindow::readMsg () { auto msg = m_sock -> readAll (); QString strMsg ( msg ); ui -> label -> setText ( strMsg ); } \u8981\u5c06 Qt \u7a0b\u5e8f\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u9700\u8981\u4f7f\u7528 QLocalServer \u7c7b\u3002 Linux \u5e73\u53f0\u5b9e\u4f8b Linux \u4f5c\u4e3a\u670d\u52a1\u7aef\uff1a #include <iostream> #include <sys/types.h> #include <sys/socket.h> #include <sys/un.h> #include <sys/stat.h> #include <stdio.h> #include <stddef.h> #include <string> #include <unistd.h> int main () { int fd ; // AF_LOCAL \u548c AF_UNIX \u6548\u679c\u4e00\u6837 if (( fd = socket ( AF_LOCAL , SOCK_STREAM , 0 )) < 0 ) { return -1 ; } struct sockaddr_un un ; //\u8fd9\u4e2a\u540d\u79f0\u5fc5\u987b\u662f\u8def\u5f84\u5f62\u5f0f\uff0c\u901a\u5e38\u7528 /tmp/servername char servername [] = \"/tmp/LinuxServer\" ; unlink ( servername ); memset ( & un , 0 , sizeof ( un )); un . sun_family = AF_LOCAL ; strcpy ( un . sun_path , servername ); int len = offsetof ( struct sockaddr_un , sun_path ) + strlen ( servername ); int rval = 0 ; if ( bind ( fd , ( sockaddr * ) & un , len ) < 0 ) { return -2 ; } if ( listen ( fd , 5 ) < 0 ) { return -3 ; } int addr_len = 0 ; int connfd = accept ( fd , ( sockaddr * ) & un , ( socklen_t * ) & addr_len ); if ( connfd < 0 ) { int err = errno ; return -4 ; } char buf [ 1024 ] = { 0 }; do { int size = recv ( connfd , buf , 1024 , 0 ); if ( size >= 0 ) { printf ( \"recv msg:%s \\n \" , buf ); } } while ( 1 ); close ( connfd ); close ( fd ); return 0 ; } QLocalSocket \u5ba2\u6237\u7aef\u5173\u952e\u4ee3\u7801\uff1a #include <QLocalSocket> QLocalSocket * m_sock ; m_sock = new QLocalSocket ( this ); m_sock -> connectToServer ( \"/tmp/LinuxServer\" ); if ( QLocalSocket :: ConnectedState == m_sock -> state ()) { m_sock -> write ( ba . data ()); }","title":"QLocalSocket \u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/QLocalSocket%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#windows","text":"Windows \u547d\u540d\u7ba1\u9053\u4f5c\u4e3a\u670d\u52a1\u7aef\uff1a #include <iostream> #include <tchar.h> #include <Windows.h> int main () { HANDLE hPipe = CreateNamedPipe ( _T ( \" \\\\\\\\ . \\\\ pipe \\\\ LocalServer\" ), PIPE_ACCESS_DUPLEX , PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT , 1 , 1024 , 1024 , 10 , nullptr ); if ( hPipe != INVALID_HANDLE_VALUE ) { if ( ConnectNamedPipe ( hPipe , nullptr )) { char msg [] = \"Win32 pipe message\" ; int len = sizeof ( msg ) / sizeof ( char ); BOOL res = WriteFile ( hPipe , msg , len , nullptr , nullptr ); Sleep ( 60000 ); } DisconnectNamedPipe ( hPipe ); CloseHandle ( hPipe ); } return 0 ; } QLocalSocket \u4f5c\u4e3a\u5ba2\u6237\u7aef\u8bfb\u53d6\u547d\u540d\u7ba1\u9053\u6570\u636e\u7684\u5173\u952e\u4ee3\u7801\uff1a #include <QLocalSocket> QLocalSocket * m_sock ; m_sock = new QLocalSocket ( this ); connect ( m_sock , & QLocalSocket :: readyRead , this , & MainWindow :: readMsg ); m_sock -> connectToServer ( \"LocalServer\" ); //\u786e\u4fdd\u670d\u52a1\u7aef\u540d\u79f0\u4e0e\u547d\u540d\u7ba1\u9053\u540d\u79f0\u4e00\u81f4\u5373\u53ef\u901a\u4fe1 void MainWindow::readMsg () { auto msg = m_sock -> readAll (); QString strMsg ( msg ); ui -> label -> setText ( strMsg ); } \u8981\u5c06 Qt \u7a0b\u5e8f\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u9700\u8981\u4f7f\u7528 QLocalServer \u7c7b\u3002","title":"Windows \u5e73\u53f0\u5b9e\u4f8b"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/QLocalSocket%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#linux","text":"Linux \u4f5c\u4e3a\u670d\u52a1\u7aef\uff1a #include <iostream> #include <sys/types.h> #include <sys/socket.h> #include <sys/un.h> #include <sys/stat.h> #include <stdio.h> #include <stddef.h> #include <string> #include <unistd.h> int main () { int fd ; // AF_LOCAL \u548c AF_UNIX \u6548\u679c\u4e00\u6837 if (( fd = socket ( AF_LOCAL , SOCK_STREAM , 0 )) < 0 ) { return -1 ; } struct sockaddr_un un ; //\u8fd9\u4e2a\u540d\u79f0\u5fc5\u987b\u662f\u8def\u5f84\u5f62\u5f0f\uff0c\u901a\u5e38\u7528 /tmp/servername char servername [] = \"/tmp/LinuxServer\" ; unlink ( servername ); memset ( & un , 0 , sizeof ( un )); un . sun_family = AF_LOCAL ; strcpy ( un . sun_path , servername ); int len = offsetof ( struct sockaddr_un , sun_path ) + strlen ( servername ); int rval = 0 ; if ( bind ( fd , ( sockaddr * ) & un , len ) < 0 ) { return -2 ; } if ( listen ( fd , 5 ) < 0 ) { return -3 ; } int addr_len = 0 ; int connfd = accept ( fd , ( sockaddr * ) & un , ( socklen_t * ) & addr_len ); if ( connfd < 0 ) { int err = errno ; return -4 ; } char buf [ 1024 ] = { 0 }; do { int size = recv ( connfd , buf , 1024 , 0 ); if ( size >= 0 ) { printf ( \"recv msg:%s \\n \" , buf ); } } while ( 1 ); close ( connfd ); close ( fd ); return 0 ; } QLocalSocket \u5ba2\u6237\u7aef\u5173\u952e\u4ee3\u7801\uff1a #include <QLocalSocket> QLocalSocket * m_sock ; m_sock = new QLocalSocket ( this ); m_sock -> connectToServer ( \"/tmp/LinuxServer\" ); if ( QLocalSocket :: ConnectedState == m_sock -> state ()) { m_sock -> write ( ba . data ()); }","title":"Linux \u5e73\u53f0\u5b9e\u4f8b"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E4%B8%8E%E9%9D%9E%20Qt%20%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95/","text":"QSharedMemory \u5b9e\u73b0\u5171\u4eab\u5185\u5b58 #include <QSharedMemory> //\u5b9a\u4e49\u5171\u4eab\u5185\u5b58\u5bf9\u8c61 QSharedMemory m_memory ; if ( m_memory . isAttached ()) m_memory . detach (); // \u8bbe\u7f6e\u5e73\u53f0\u76f8\u5173\u7684 key \u503c m_memory . setNativeKey ( \"QSharedMemoryExample\" ); m_memory . lock (); //\u8bbe\u7f6e NativeKey \u540e\u65e0\u6cd5\u9501\u5b9a\uff0c\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u9501\u5b9a\u673a\u5236 QString strTmp = \"shared memory test message\" ; int Size = strTmp . length (); QByteArray ba ; ba . append ( strTmp ); //\u5c06 QString \u6570\u636e\u8f6c\u6362\u4e3a char*\uff0c\u901a\u8fc7 ba.data() \u83b7\u53d6 m_memory . create ( 100 ); memcpy_s ( m_memory . data (), Size , ba . data (), Size ); m_memory . unlock (); Windows \u5e73\u53f0\u5171\u4eab\u5185\u5b58 HANDLE hSharedObj = :: CreateFileMapping ( INVALID_HANDLE_VALUE , nullptr , PAGE_READWRITE , 0 , 100 , L \"QSharedMemoryExample\" ); if ( hSharedObj ) { LPVOID addr = :: MapViewOfFile ( hSharedObj , FILE_MAP_ALL_ACCESS , 0 , 0 , 100 ); if ( ! addr ) return -1 ; char tmp [ 100 ] = { 0 }; memcpy_s ( tmp , 100 , addr , 100 ); std :: string strSharedMsg ( tmp ); std :: cout << strSharedMsg ; } CloseHandle ( hSharedObj ); \u5728 Windows \u5e73\u53f0\u4e0b\uff0c CreateFileMapping \u4e2d\u8bbe\u7f6e\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u540d\u79f0\u4e0e QSharedMemory \u5bf9\u8c61\u8bbe\u7f6e\u7684 NativeKey \u4e00\u81f4\uff0c\u5373\u53ef\u8bbf\u95ee Qt \u7a0b\u5e8f\u5f00\u8f9f\u7684\u5171\u4eab\u5185\u5b58\u3002 Linux \u5e73\u53f0\u5171\u4eab\u5185\u5b58 #include <iostream> #include <sys/ipc.h> #include <sys/shm.h> #include <errno.h> int main ( int argc , char * argv [] ) { // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6587\u4ef6\uff0c\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\u4e14\u53ef\u8bbf\u95ee key_t key = ftok ( \"QSharedMemory\" , 12 ); if ( key < 0 ) { return -1 ; } int id = shmget ( key , 100 , IPC_CREAT ); if ( id < 0 && errno != EEXIST ) { return -2 ; } shmctl ( id , IPC_RMID , nullptr ); return 0 ; } Linux \u5e73\u53f0\u4e0b\u521b\u5efa\u5171\u4eab\u5185\u5b58\u540e\u8fd4\u56de\u7684\u662f\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684 id\uff0c\u662f\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u6ca1\u6709\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u540d\u79f0\u3002\u800c QSharedMemory \u5bf9\u8c61\u4e5f\u6ca1\u6709\u53ef\u83b7\u53d6\u5171\u4eab\u5185\u5b58\u5bf9\u8c61 id \u7684\u63a5\u53e3\uff0c\u6545\u65e0\u6cd5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u4e0e\u975e Qt \u5bf9\u8c61\u8fdb\u884c\u901a\u4fe1\u3002","title":"QSharedMemory \u5b9e\u73b0\u5171\u4eab\u5185\u5b58"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E4%B8%8E%E9%9D%9E%20Qt%20%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95/#qsharedmemory","text":"#include <QSharedMemory> //\u5b9a\u4e49\u5171\u4eab\u5185\u5b58\u5bf9\u8c61 QSharedMemory m_memory ; if ( m_memory . isAttached ()) m_memory . detach (); // \u8bbe\u7f6e\u5e73\u53f0\u76f8\u5173\u7684 key \u503c m_memory . setNativeKey ( \"QSharedMemoryExample\" ); m_memory . lock (); //\u8bbe\u7f6e NativeKey \u540e\u65e0\u6cd5\u9501\u5b9a\uff0c\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u9501\u5b9a\u673a\u5236 QString strTmp = \"shared memory test message\" ; int Size = strTmp . length (); QByteArray ba ; ba . append ( strTmp ); //\u5c06 QString \u6570\u636e\u8f6c\u6362\u4e3a char*\uff0c\u901a\u8fc7 ba.data() \u83b7\u53d6 m_memory . create ( 100 ); memcpy_s ( m_memory . data (), Size , ba . data (), Size ); m_memory . unlock ();","title":"QSharedMemory \u5b9e\u73b0\u5171\u4eab\u5185\u5b58"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E4%B8%8E%E9%9D%9E%20Qt%20%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95/#windows","text":"HANDLE hSharedObj = :: CreateFileMapping ( INVALID_HANDLE_VALUE , nullptr , PAGE_READWRITE , 0 , 100 , L \"QSharedMemoryExample\" ); if ( hSharedObj ) { LPVOID addr = :: MapViewOfFile ( hSharedObj , FILE_MAP_ALL_ACCESS , 0 , 0 , 100 ); if ( ! addr ) return -1 ; char tmp [ 100 ] = { 0 }; memcpy_s ( tmp , 100 , addr , 100 ); std :: string strSharedMsg ( tmp ); std :: cout << strSharedMsg ; } CloseHandle ( hSharedObj ); \u5728 Windows \u5e73\u53f0\u4e0b\uff0c CreateFileMapping \u4e2d\u8bbe\u7f6e\u7684\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u540d\u79f0\u4e0e QSharedMemory \u5bf9\u8c61\u8bbe\u7f6e\u7684 NativeKey \u4e00\u81f4\uff0c\u5373\u53ef\u8bbf\u95ee Qt \u7a0b\u5e8f\u5f00\u8f9f\u7684\u5171\u4eab\u5185\u5b58\u3002","title":"Windows \u5e73\u53f0\u5171\u4eab\u5185\u5b58"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E4%B8%8E%E9%9D%9E%20Qt%20%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95/#linux","text":"#include <iostream> #include <sys/ipc.h> #include <sys/shm.h> #include <errno.h> int main ( int argc , char * argv [] ) { // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6587\u4ef6\uff0c\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\u4e14\u53ef\u8bbf\u95ee key_t key = ftok ( \"QSharedMemory\" , 12 ); if ( key < 0 ) { return -1 ; } int id = shmget ( key , 100 , IPC_CREAT ); if ( id < 0 && errno != EEXIST ) { return -2 ; } shmctl ( id , IPC_RMID , nullptr ); return 0 ; } Linux \u5e73\u53f0\u4e0b\u521b\u5efa\u5171\u4eab\u5185\u5b58\u540e\u8fd4\u56de\u7684\u662f\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684 id\uff0c\u662f\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u6ca1\u6709\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u540d\u79f0\u3002\u800c QSharedMemory \u5bf9\u8c61\u4e5f\u6ca1\u6709\u53ef\u83b7\u53d6\u5171\u4eab\u5185\u5b58\u5bf9\u8c61 id \u7684\u63a5\u53e3\uff0c\u6545\u65e0\u6cd5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u4e0e\u975e Qt \u5bf9\u8c61\u8fdb\u884c\u901a\u4fe1\u3002","title":"Linux \u5e73\u53f0\u5171\u4eab\u5185\u5b58"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","text":"\u5728 Qt \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0cQt \u63d0\u4f9b\u4e86\u51e0\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u3002\u53ef\u4ee5\u5728\u52a9\u624b\u4e2d\u67e5\u627e\u5173\u952e\u5b57\u201dInter-Process\u201d\u8fdb\u884c\u67e5\u627e\u3002 TCP/IP \u8de8\u5e73\u53f0\u7684 Qt Network \u6a21\u5757\u63d0\u4f9b\u7684\u7c7b\u53ef\u4ee5\u8ba9\u7f51\u7edc\u7f16\u7a0b\u66f4\u52a0\u4fbf\u643a\u548c\u65b9\u4fbf\u3002\u5b83\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u7c7b\uff08\u4f8b\u5982\uff1aQNetworkAccessManager\u3001QFtp\uff09\u901a\u4fe1\uff0c\u4f7f\u7528\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u7ea7\u534f\u8bae\uff0c\u548c\u8f83\u5e95\u5c42\u7684\u7c7b\uff08\u4f8b\u5982\uff1aQTcpSocket\u3001QTcpServer\u3001QSslSocket\uff09\u7528\u4e8e\u5b9e\u73b0\u534f\u8bae\u3002 [[QLocalSocket \u8fdb\u7a0b\u95f4\u901a\u4fe1]] Shared Memory \u8de8\u5e73\u53f0\u7684 QSharedMemory \u5171\u4eab\u5185\u5b58\u7c7b\uff0c\u63d0\u4f9b\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u5171\u4eab\u5185\u5b58\u7684\u5b9e\u73b0\u3002\u5b83\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5b89\u5168\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u6bb5\u3002\u6b64\u5916\uff0cQSystemSemaphore \u53ef\u4ee5\u7528\u6765\u63a7\u5236\u8bbf\u95ee\u7531\u7cfb\u7edf\u5171\u4eab\u7684\u8d44\u6e90\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 [[Qt \u4e0e\u975e Qt \u7a0b\u5e8f\u5171\u4eab\u5185\u5b58\u4ea4\u4e92\u6d4b\u8bd5]] D-Bus Qt \u7684 D-Bus \u6a21\u5757\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u4f7f\u7528 D-Bus \u534f\u8bae\u5b9e\u73b0 IPC \u7684\u552f\u4e00 Unix \u5e93\u3002\u5b83\u5c06 Qt \u7684\u4fe1\u53f7\u548c\u69fd\u673a\u5236\u5ef6\u4f38\u5230 IPC \u7ea7\u522b\uff0c\u5141\u8bb8\u7531\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u51fa\u7684\u4fe1\u53f7\u88ab\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u69fd\u3002Qt \u7684 D-Bus \u6587\u6863\u5df2\u7ecf\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 Qt \u4e2d\u7684 D-Bus \u6a21\u5757\u3002 QProcess \u8de8\u5e73\u53f0\u7c7b QProcess \u53ef\u4ee5\u7528\u4e8e\u542f\u52a8\u5916\u90e8\u7a0b\u5e8f\u4f5c\u4e3a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u4e0e\u5b83\u4eec\u8fdb\u884c\u901a\u4fe1\u3002\u5b83\u63d0\u4f9b\u4e86\u7528\u4e8e\u76d1\u6d4b\u548c\u63a7\u5236\u8be5\u5b50\u8fdb\u7a0b\u72b6\u6001\u7684 API\u3002\u53e6\u5916\uff0cQProcess \u4e3a\u4ece QIODevice \u7ee7\u627f\u7684\u5b50\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u8f93\u5165/\u8f93\u51fa\u901a\u9053\u3002 Session Management \u5728 Linux/X11 \u5e73\u53f0\u4e0a\uff0cQt \u63d0\u4f9b\u4e86\u4f1a\u8bdd\u7ba1\u7406\u7684\u652f\u6301\u3002\u4f1a\u8bdd\u5141\u8bb8\u4e8b\u4ef6\u4f20\u64ad\u5230\u8fdb\u7a0b\uff0c\u4f8b\u5982\uff0c\u5f53\u68c0\u6d4b\u5230\u5173\u673a\u65f6\u3002\u8fdb\u7a0b\u548c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a\u4fdd\u5b58\u6253\u5f00\u7684\u6587\u6863\u3002","title":"Qt \u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#tcpip","text":"\u8de8\u5e73\u53f0\u7684 Qt Network \u6a21\u5757\u63d0\u4f9b\u7684\u7c7b\u53ef\u4ee5\u8ba9\u7f51\u7edc\u7f16\u7a0b\u66f4\u52a0\u4fbf\u643a\u548c\u65b9\u4fbf\u3002\u5b83\u63d0\u4f9b\u4e86\u9ad8\u7ea7\u7c7b\uff08\u4f8b\u5982\uff1aQNetworkAccessManager\u3001QFtp\uff09\u901a\u4fe1\uff0c\u4f7f\u7528\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u7ea7\u534f\u8bae\uff0c\u548c\u8f83\u5e95\u5c42\u7684\u7c7b\uff08\u4f8b\u5982\uff1aQTcpSocket\u3001QTcpServer\u3001QSslSocket\uff09\u7528\u4e8e\u5b9e\u73b0\u534f\u8bae\u3002 [[QLocalSocket \u8fdb\u7a0b\u95f4\u901a\u4fe1]]","title":"TCP/IP"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#shared-memory","text":"\u8de8\u5e73\u53f0\u7684 QSharedMemory \u5171\u4eab\u5185\u5b58\u7c7b\uff0c\u63d0\u4f9b\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u5171\u4eab\u5185\u5b58\u7684\u5b9e\u73b0\u3002\u5b83\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5b89\u5168\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u6bb5\u3002\u6b64\u5916\uff0cQSystemSemaphore \u53ef\u4ee5\u7528\u6765\u63a7\u5236\u8bbf\u95ee\u7531\u7cfb\u7edf\u5171\u4eab\u7684\u8d44\u6e90\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 [[Qt \u4e0e\u975e Qt \u7a0b\u5e8f\u5171\u4eab\u5185\u5b58\u4ea4\u4e92\u6d4b\u8bd5]]","title":"Shared Memory"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#d-bus","text":"Qt \u7684 D-Bus \u6a21\u5757\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u4f7f\u7528 D-Bus \u534f\u8bae\u5b9e\u73b0 IPC \u7684\u552f\u4e00 Unix \u5e93\u3002\u5b83\u5c06 Qt \u7684\u4fe1\u53f7\u548c\u69fd\u673a\u5236\u5ef6\u4f38\u5230 IPC \u7ea7\u522b\uff0c\u5141\u8bb8\u7531\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u51fa\u7684\u4fe1\u53f7\u88ab\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u69fd\u3002Qt \u7684 D-Bus \u6587\u6863\u5df2\u7ecf\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 Qt \u4e2d\u7684 D-Bus \u6a21\u5757\u3002","title":"D-Bus"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#qprocess","text":"\u8de8\u5e73\u53f0\u7c7b QProcess \u53ef\u4ee5\u7528\u4e8e\u542f\u52a8\u5916\u90e8\u7a0b\u5e8f\u4f5c\u4e3a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u4e0e\u5b83\u4eec\u8fdb\u884c\u901a\u4fe1\u3002\u5b83\u63d0\u4f9b\u4e86\u7528\u4e8e\u76d1\u6d4b\u548c\u63a7\u5236\u8be5\u5b50\u8fdb\u7a0b\u72b6\u6001\u7684 API\u3002\u53e6\u5916\uff0cQProcess \u4e3a\u4ece QIODevice \u7ee7\u627f\u7684\u5b50\u8fdb\u7a0b\u63d0\u4f9b\u4e86\u8f93\u5165/\u8f93\u51fa\u901a\u9053\u3002","title":"QProcess"},{"location":"Programming/03.%20Qt/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/Qt%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/#session-management","text":"\u5728 Linux/X11 \u5e73\u53f0\u4e0a\uff0cQt \u63d0\u4f9b\u4e86\u4f1a\u8bdd\u7ba1\u7406\u7684\u652f\u6301\u3002\u4f1a\u8bdd\u5141\u8bb8\u4e8b\u4ef6\u4f20\u64ad\u5230\u8fdb\u7a0b\uff0c\u4f8b\u5982\uff0c\u5f53\u68c0\u6d4b\u5230\u5173\u673a\u65f6\u3002\u8fdb\u7a0b\u548c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a\u4fdd\u5b58\u6253\u5f00\u7684\u6587\u6863\u3002","title":"Session Management"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E5%AE%A2%E6%88%B7%E7%AB%AF/http_client.cpp/","text":"#include <QDebug> #include <QFile> #include <QHash> #include <QUrlQuery> #include <QNetworkReply> #include <QNetworkRequest> #include <QHttpPart> #include <QHttpMultiPart> #include <QEventLoop> #include \"http_client.h\" struct HttpClientPrivate { HttpClientPrivate ( const QString & url ) : url ( url ), networkAccessManager ( nullptr ), useInternalNetworkAccessManager ( true ), debug ( false ) { } QString url ; // \u8bf7\u6c42\u7684 URL QUrlQuery params ; // \u8bf7\u6c42\u7684\u53c2\u6570 QHash < QString , QString > headers ; // \u8bf7\u6c42\u7684\u5934 QNetworkAccessManager * networkAccessManager ; bool useInternalNetworkAccessManager ; // \u662f\u5426\u4f7f\u7528\u5185\u90e8\u7684 QNetworkAccessManager bool debug ; }; HttpClient :: HttpClient ( const QString & url ) : m_private ( new HttpClientPrivate ( url )) { // qDebug() << \"HttpClient\"; } HttpClient ::~ HttpClient () { // qDebug() << \"~HttpClient\"; delete m_private ; } HttpClient & HttpClient :: UseManager ( QNetworkAccessManager * manager ) { m_private -> networkAccessManager = manager ; m_private -> useInternalNetworkAccessManager = false ; return * this ; } // \u4f20\u5165 debug \u4e3a true \u5219\u4f7f\u7528 debug \u6a21\u5f0f\uff0c\u8bf7\u6c42\u6267\u884c\u65f6\u8f93\u51fa\u8bf7\u6c42\u7684 URL \u548c\u53c2\u6570\u7b49 HttpClient & HttpClient :: Debug ( bool debug ) { m_private -> debug = debug ; return * this ; } // \u589e\u52a0\u53c2\u6570 HttpClient & HttpClient :: AddParam ( const QString & name , const QString & value ) { m_private -> params . addQueryItem ( name , value ); return * this ; } // \u589e\u52a0\u8bbf\u95ee\u5934 HttpClient & HttpClient :: AddHeader ( const QString & header , const QString & value ) { m_private -> headers [ header ] = value ; return * this ; } HttpClient & HttpClient :: AddFormHeader () { return AddHeader ( \"content-type\" , \"application/x-www-form-urlencoded\" ); } // \u6267\u884c GET \u8bf7\u6c42 void HttpClient :: Get ( std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync , const char * encoding ) { Execute ( false , successHandler , errorHandler , sync , encoding ); } // \u6267\u884c POST \u8bf7\u6c42 void HttpClient :: Post ( std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync , const char * encoding ) { Execute ( true , successHandler , errorHandler , sync , encoding ); } // \u4f7f\u7528 GET \u8fdb\u884c\u4e0b\u8f7d\uff0c\u5f53\u6709\u6570\u636e\u53ef\u8bfb\u53d6\u65f6\u56de\u8c03 readyRead(), \u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e94\u8be5\u5728 readyRead() \u91cc\u628a\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6 void HttpClient :: Download ( std :: function < void ( const QByteArray & ) > readyRead , std :: function < void () > finishHandler , std :: function < void ( const QString & ) > errorHandler ) { if ( ! readyRead ) { return ; } // \u5982\u679c\u662f GET \u8bf7\u6c42\uff0c\u5e76\u4e14\u53c2\u6570\u4e0d\u4e3a\u7a7a\uff0c\u5219\u7f16\u7801\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u653e\u5230 URL \u540e\u9762 if ( ! m_private -> params . isEmpty ()) { m_private -> url += \"?\" + m_private -> params . toString ( QUrl :: FullyEncoded ); } if ( m_private -> debug ) { qDebug () << QString ( \"URL: %1?%2\" ). arg ( m_private -> url ). arg ( m_private -> params . toString ()); } QUrl urlx ( m_private -> url ); QNetworkRequest request ( urlx ); bool internal = m_private -> useInternalNetworkAccessManager ; QNetworkAccessManager * manager = internal ? new QNetworkAccessManager () : m_private -> networkAccessManager ; QNetworkReply * reply = manager -> get ( request ); // \u6709\u6570\u636e\u53ef\u8bfb\u53d6\u65f6\u56de\u8c03 readyRead() QObject :: connect ( reply , & QNetworkReply :: readyRead , [ = ] { readyRead ( reply -> readAll ()); }); // \u8bf7\u6c42\u7ed3\u675f QObject :: connect ( reply , & QNetworkReply :: finished , [ = ] { if ( reply -> error () == QNetworkReply :: NoError && finishHandler ) { finishHandler (); } // \u91ca\u653e\u8d44\u6e90 reply -> deleteLater (); if ( internal ) { manager -> deleteLater (); } }); // \u8bf7\u6c42\u9519\u8bef\u5904\u7406 QObject :: connect ( reply , static_cast < void ( QNetworkReply ::* )( QNetworkReply :: NetworkError ) > ( & QNetworkReply :: error ), [ = ] { if ( errorHandler ) { errorHandler ( reply -> errorString ()); } }); } void HttpClient :: Upload ( const QString & path , std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , const char * encoding ) { if ( m_private -> debug ) { qDebug () << QString ( \"URL: %1\" ). arg ( m_private -> url ); } QHttpMultiPart * multiPart = new QHttpMultiPart ( QHttpMultiPart :: FormDataType ); QFile * file = new QFile ( path ); file -> setParent ( multiPart ); // we cannot delete the file now, so delete it with the multiPart // \u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\uff0c\u5219\u91ca\u653e\u8d44\u6e90\u8fd4\u56de if ( ! file -> open ( QIODevice :: ReadOnly )) { if ( errorHandler ) { errorHandler ( QString ( \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25: %1\" ). arg ( file -> errorString ())); multiPart -> deleteLater (); return ; } } // \u8868\u660e\u662f\u6587\u4ef6\u4e0a\u4f20 QString disposition = QString ( \"form-data; name= \\\" file \\\" ; filename= \\\" %1 \\\" \" ). arg ( file -> fileName ()); QHttpPart imagePart ; imagePart . setHeader ( QNetworkRequest :: ContentDispositionHeader , QVariant ( disposition )); imagePart . setBodyDevice ( file ); multiPart -> append ( imagePart ); bool internal = m_private -> useInternalNetworkAccessManager ; QNetworkRequest request ( QUrl ( m_private -> url )); QNetworkAccessManager * manager = internal ? new QNetworkAccessManager () : m_private -> networkAccessManager ; QNetworkReply * reply = manager -> post ( request , multiPart ); multiPart -> setParent ( reply ); // \u8bf7\u6c42\u7ed3\u675f\u65f6\u4e00\u6b21\u6027\u8bfb\u53d6\u6240\u6709\u54cd\u5e94\u6570\u636e QObject :: connect ( reply , & QNetworkReply :: finished , [ = ] { if ( reply -> error () == QNetworkReply :: NoError && successHandler ) { successHandler ( ReadResponse ( reply , encoding )); // \u6210\u529f\u6267\u884c } // \u91ca\u653e\u8d44\u6e90 reply -> deleteLater (); if ( internal ) { manager -> deleteLater (); } }); // \u8bf7\u6c42\u9519\u8bef\u5904\u7406 QObject :: connect ( reply , static_cast < void ( QNetworkReply ::* )( QNetworkReply :: NetworkError ) > ( & QNetworkReply :: error ), [ = ] { if ( errorHandler ) { errorHandler ( reply -> errorString ()); } }); } // \u6267\u884c\u8bf7\u6c42\u7684\u8f85\u52a9\u51fd\u6570 void HttpClient :: Execute ( bool posted , std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync , const char * encoding ) { // \u5982\u679c\u662f GET \u8bf7\u6c42\uff0c\u5e76\u4e14\u53c2\u6570\u4e0d\u4e3a\u7a7a\uff0c\u5219\u7f16\u7801\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u653e\u5230 URL \u540e\u9762 if ( ! posted && ! m_private -> params . isEmpty ()) { m_private -> url += \"?\" + m_private -> params . toString ( QUrl :: FullyEncoded ); } if ( m_private -> debug ) { qDebug () << QString ( \"URL: %1?%2\" ). arg ( m_private -> url ). arg ( m_private -> params . toString ()); } QUrl urlx ( m_private -> url ); QNetworkRequest request ( urlx ); // \u628a\u8bf7\u6c42\u7684\u5934\u6dfb\u52a0\u5230 request \u4e2d QHashIterator < QString , QString > iter ( m_private -> headers ); while ( iter . hasNext ()) { iter . next (); request . setRawHeader ( iter . key (). toUtf8 (), iter . value (). toUtf8 ()); } // \u6ce8\u610f: \u4e0d\u80fd\u5728 Lambda \u8868\u8fbe\u5f0f\u91cc\u4f7f\u7528 HttpClient \u5bf9\u8c61\u7684\u6210\u5458\u6570\u636e\uff0c\u56e0\u5176\u53ef\u80fd\u5728\u7f51\u7edc\u8bbf\u95ee\u672a\u7ed3\u675f\u65f6\u5c31\u5df2\u7ecf\u88ab\u6790\u6784\u6389\u4e86\uff0c // \u6240\u4ee5\u5982\u679c\u8981\u4f7f\u7528\u5b83\u7684\u76f8\u5173\u6570\u636e\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u6765\u4fdd\u5b58\u5176\u6570\u636e\uff0c\u7136\u540e\u5728 Lambda \u8868\u8fbe\u5f0f\u91cc\u8bbf\u95ee\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf // \u5982\u679c\u4e0d\u4f7f\u7528\u5916\u90e8\u7684 manager \u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\uff0c\u5728\u8bbf\u95ee\u5b8c\u6210\u540e\u4f1a\u81ea\u52a8\u5220\u9664\u6389 bool internal = m_private -> useInternalNetworkAccessManager ; QNetworkAccessManager * manager = internal ? new QNetworkAccessManager () : m_private -> networkAccessManager ; QNetworkReply * reply = posted ? manager -> post ( request , m_private -> params . toString ( QUrl :: FullyEncoded ). toUtf8 ()) : manager -> get ( request ); // \u8bf7\u6c42\u7ed3\u675f\u65f6\u4e00\u6b21\u6027\u8bfb\u53d6\u6240\u6709\u54cd\u5e94\u6570\u636e QObject :: connect ( reply , & QNetworkReply :: finished , [ = ] { if ( reply -> error () == QNetworkReply :: NoError && successHandler ) { successHandler ( ReadResponse ( reply , encoding )); // \u6210\u529f\u6267\u884c } // \u91ca\u653e\u8d44\u6e90 reply -> deleteLater (); if ( internal ) { manager -> deleteLater (); } }); // \u8bf7\u6c42\u9519\u8bef\u5904\u7406 QObject :: connect ( reply , static_cast < void ( QNetworkReply ::* )( QNetworkReply :: NetworkError ) > ( & QNetworkReply :: error ), [ = ] { if ( errorHandler ) { errorHandler ( reply -> errorString ()); } }); //\u540c\u6b65\u8bf7\u6c42\u6a21\u5f0f if ( sync ) { QEventLoop loop ; QObject :: connect ( reply , & QNetworkReply :: finished , & loop , & QEventLoop :: quit ); loop . exec ( QEventLoop :: ExcludeUserInputEvents ); } } QString HttpClient :: ReadResponse ( QNetworkReply * reply , const char * encoding ) { QTextStream in ( reply ); QString result ; in . setCodec ( encoding ); while ( ! in . atEnd ()) { result += in . readLine (); } return result ; }","title":"Http client.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E5%AE%A2%E6%88%B7%E7%AB%AF/http_client.h/","text":"#ifndef HTTPCLIENT_H #define HTTPCLIENT_H #include <QObject> #include <QNetworkAccessManager> #include <functional> struct HttpClientPrivate ; class HttpClient { public : explicit HttpClient ( const QString & url ); ~ HttpClient (); /***************************************************************************** * @brief \u6bcf\u521b\u5efa\u4e00\u4e2a QNetworkAccessManager \u5bf9\u8c61\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5f53\u9891\u7e41\u7684\u8bbf\u95ee\u7f51\u7edc\u65f6\uff0c\u4e3a\u4e86 * \u8282\u7701\u7ebf\u7a0b\u8d44\u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165\u7684 QNetworkAccessManager\uff0c\u5b83\u4e0d\u4f1a\u88ab HttpClient \u5220\u9664\u3002 * \u5982\u679c\u6ca1\u6709\u4f7f\u7528 UseManager() \u4f20\u5165\u4e00\u4e2a QNetworkAccessManager\uff0c\u5219 HttpClient \u4f1a * \u81ea\u52a8\u7684\u521b\u5efa\u4e00\u4e2a\uff0c\u5e76\u4e14\u5728\u7f51\u7edc\u8bbf\u95ee\u5b8c\u6210\u540e\u5220\u9664\u5b83\u3002 * @param [manager] QNetworkAccessManager \u5bf9\u8c61 * @returns \u8fd4\u56de HttpClient \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528 *****************************************************************************/ HttpClient & UseManager ( QNetworkAccessManager * manager ); /***************************************************************************** * @brief \u53c2\u6570 debug \u4e3a true \u5219\u4f7f\u7528 debug \u6a21\u5f0f\uff0c\u8bf7\u6c42\u6267\u884c\u65f6\u8f93\u51fa\u8bf7\u6c42\u7684 URL \u548c\u53c2\u6570\u7b49 * @param [debug] \u662f\u5426\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f * @returns \u8fd4\u56de HttpClient \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528 *****************************************************************************/ HttpClient & Debug ( bool debug ); /***************************************************************************** * @brief \u589e\u52a0\u53c2\u6570 * @param [name] \u53c2\u6570\u7684\u540d\u5b57 * @param [value] \u53c2\u6570\u7684\u503c * @returns \u8fd4\u56de HttpClient \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528 *****************************************************************************/ HttpClient & AddParam ( const QString & name , const QString & value ); /***************************************************************************** * @brief \u589e\u52a0\u8bbf\u95ee\u5934 * @param [header] \u8bbf\u95ee\u5934\u7684\u540d\u5b57 * @param [value] \u8bbf\u95ee\u5934\u7684\u503c * @returns \u8fd4\u56de HttpClient \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528 *****************************************************************************/ HttpClient & AddHeader ( const QString & header , const QString & value ); /***************************************************************************** * @brief \u6dfb\u52a0 POST \u8868\u5355\u4f7f\u7528\u7684\u5934\u4fe1\u606f\uff0c\u7b49\u4ef7\u4e8e addHeader(\"content-type\", \"application/x-www-form-urlencoded\") * @returns \u8fd4\u56de HttpClient \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u4e8e\u94fe\u5f0f\u8c03\u7528 *****************************************************************************/ HttpClient & AddFormHeader (); /***************************************************************************** * @brief \u6267\u884c GET \u8bf7\u6c42 * @param [successHandler] \u8bf7\u6c42\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [errorHandler] \u8bf7\u6c42\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [sync] \u662f\u5426\u4e3a\u540c\u6b65\u8bf7\u6c42\u6a21\u5f0f * @param [encoding] \u8bf7\u6c42\u54cd\u5e94\u7684\u7f16\u7801 * @returns \u65e0 *****************************************************************************/ void Get ( std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync = false , const char * encoding = \"UTF-8\" ); /***************************************************************************** * @brief \u6267\u884c POST \u8bf7\u6c42 * @param [successHandler] \u8bf7\u6c42\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [errorHandler] \u8bf7\u6c42\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [sync] \u662f\u5426\u4e3a\u540c\u6b65\u8bf7\u6c42\u6a21\u5f0f * @param [encoding] \u8bf7\u6c42\u54cd\u5e94\u7684\u7f16\u7801 * @returns \u65e0 *****************************************************************************/ void Post ( std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync = false , const char * encoding = \"UTF-8\" ); /***************************************************************************** * @brief \u4f7f\u7528 GET \u8fdb\u884c\u4e0b\u8f7d\uff0c\u5f53\u6709\u6570\u636e\u53ef\u8bfb\u53d6\u65f6\u56de\u8c03 readyRead(), \u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e94\u8be5\u5728 readyRead() \u91cc\u628a\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6 * @param [readyRead] \u6709\u6570\u636e\u53ef\u8bfb\u53d6\u65f6\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [finishHandler] \u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u540e\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [errorHandler] \u8bf7\u6c42\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @returns \u65e0 *****************************************************************************/ void Download ( std :: function < void ( const QByteArray & ) > readyRead , std :: function < void () > finishHandler , std :: function < void ( const QString & ) > errorHandler ); /***************************************************************************** * @brief \u4e0a\u4f20\u6587\u4ef6 * @param [path] \u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u7684\u8def\u5f84 * @param [successHandler] \u8bf7\u6c42\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [errorHandler] \u8bf7\u6c42\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [encoding] \u8bf7\u6c42\u54cd\u5e94\u7684\u7f16\u7801 * @returns \u65e0 *****************************************************************************/ void Upload ( const QString & path , std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , const char * encoding = \"UTF-8\" ); private : /***************************************************************************** * @brief \u6267\u884c\u8bf7\u6c42\u7684\u8f85\u52a9\u51fd\u6570 * @param [posted] true \u8868\u793a POST \u8bf7\u6c42\uff0cfalse \u8868\u793a GET \u8bf7\u6c42 * @param [successHandler] \u8bf7\u6c42\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [errorHandler] \u8bf7\u6c42\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u5bf9\u8c61 * @param [sync] \u662f\u5426\u4e3a\u540c\u6b65\u8bf7\u6c42\u6a21\u5f0f * @param [encoding] \u8bf7\u6c42\u54cd\u5e94\u7684\u7f16\u7801 * @returns \u65e0 *****************************************************************************/ void Execute ( bool posted , std :: function < void ( const QString & ) > successHandler , std :: function < void ( const QString & ) > errorHandler , bool sync , const char * encoding ); /***************************************************************************** * @brief \u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\u7684\u6570\u636e * @param [reply] \u8bf7\u6c42\u7684 QNetworkReply \u5bf9\u8c61 * @param [encoding] \u8bf7\u6c42\u54cd\u5e94\u7684\u7f16\u7801\uff0c\u9ed8\u8ba4\u4f7f\u7528 UTF-8 * @returns \u670d\u52a1\u5668\u7aef\u54cd\u5e94\u7684\u5b57\u7b26\u4e32 *****************************************************************************/ QString ReadResponse ( QNetworkReply * reply , const char * encoding = \"UTF-8\" ); HttpClientPrivate * m_private ; }; #endif // HTTPCLIENT_H","title":"Http client.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9D%97/","text":"\u4e00\u4e2a Sqlite \u6570\u636e\u5e93\u64cd\u4f5c\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93\uff0c\u5bfc\u51fa\u4e00\u4e2a\u7c7b\u3002 DatabaseHelper.pro QT -= gui QT += sql TEMPLATE = lib DEFINES += DATABASEHELPER_LIBRARY CONFIG += c++11 # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES += QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 SOURCES += \\ databasehelper.cpp HEADERS += \\ DataBaseHelper_global.h \\ databasehelper.h # Default rules for deployment. unix { target.path = /usr/lib } !isEmpty(target.path): INSTALLS += target DatabaseHelper_global.h #ifndef DATABASEHELPER_GLOBAL_H #define DATABASEHELPER_GLOBAL_H #include <QtCore/qglobal.h> #if defined(DATABASEHELPER_LIBRARY) # define DATABASEHELPER_EXPORT Q_DECL_EXPORT #else # define DATABASEHELPER_EXPORT Q_DECL_IMPORT #endif #endif // DATABASEHELPER_GLOBAL_H database_helper.h #ifndef DATABASEHELPER_H #define DATABASEHELPER_H #include <QObject> #include <QSqlDatabase> #include \"DataBaseHelper_global.h\" class DATABASEHELPER_EXPORT DataBaseHelper : public QObject { Q_OBJECT public : explicit DataBaseHelper ( QObject * parent = nullptr ); ~ DataBaseHelper (); /***************************************************************************** * @brief \u8bbe\u7f6e\u6570\u636e\u5e93\u6587\u4ef6\u8def\u5f84 * @returns \u65e0 *****************************************************************************/ void SetDataBasePath ( const QString & path ); /***************************************************************************** * @brief \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool OpenDataBase (); /***************************************************************************** * @brief \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 * @returns \u65e0 *****************************************************************************/ void CloseDataBase (); /***************************************************************************** * @brief \u521b\u5efa\u8868 * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5217\u540d\u79f0 * @param [column_types] \u5217\u5b9a\u4e49 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CreateTable ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ); /***************************************************************************** * @brief \u521b\u5efa\u5e26\u6709\u6574\u578b\u81ea\u589eID\u7684\u8868 * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5217\u540d\u79f0 * @param [column_types] \u5217\u5b9a\u4e49 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CreateTable_ID ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ); /***************************************************************************** * @brief \u5220\u9664\u8868 * @param [table_name] \u8868\u540d\u79f0 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool DropTable ( const QString & table_name ); void InsertValues ( QString tablename , QStringList values ); void InsertColnamesValues ( QString tablename , QStringList colnames , QStringList values ); /***************************************************************************** * @brief \u67e5\u8be2\u6570\u636e\u5e93\u8868\u4e2d\u7684\u6240\u6709\u6570\u636e * @param [table_name] \u8868\u540d\u79f0 * @param [data] \u8f93\u51fa\u53c2\u6570\uff0c\u7528\u4e8e\u4fdd\u5b58\u67e5\u8be2\u7ed3\u679c * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool QueryData ( const QString & table_name , QList < QHash < QString , QVariant >> * data ); /***************************************************************************** * @brief \u67e5\u8be2\u6570\u636e\u5e93\u8868\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bb5\u4fe1\u606f * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5b57\u6bb5\u540d\u79f0\u5217\u8868\uff0c\u5217\u8868\u4e3a\u7a7a\u5219\u8fd4\u56de\u6240\u6709\u5b57\u6bb5\u4fe1\u606f * @param [sql_where] SQL\u67e5\u8be2\u6761\u4ef6\u8bed\u53e5\uff0c\u6761\u4ef6\u8bed\u53e5\u4e3a\u7a7a\u5219\u8fd4\u56de\u6240\u6709\u6570\u636e\u9879 * @param [data] \u8f93\u51fa\u53c2\u6570\uff0c\u7528\u4e8e\u4fdd\u5b58\u67e5\u8be2\u7ed3\u679c * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool QueryData ( const QString & table_name , const QStringList & column_names , const QString & sql_where , QList < QHash < QString , QVariant >> * data ); /***************************************************************************** * @brief \u63d2\u5165\u6570\u636e * @param [table_name] \u8868\u540d\u79f0 * @param [values] \u6570\u636e\u503c\u5217\u8868\uff0c\u4e0d\u53ef\u4e3a\u7a7a * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool InsertData ( const QString & table_name , const QStringList & values ); /***************************************************************************** * @brief \u63d2\u5165\u6570\u636e * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5b57\u6bb5\u540d\u79f0\u5217\u8868\uff0c\u4e0d\u53ef\u4e3a\u7a7a * @param [values] \u6570\u636e\u503c\u5217\u8868\uff0c\u4e0d\u53ef\u4e3a\u7a7a * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool InsertData ( const QString & table_name , const QStringList & column_names , const QStringList & values ); /***************************************************************************** * @brief \u66f4\u65b0\u6570\u636e * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5b57\u6bb5\u540d\u79f0\u5217\u8868\uff0c\u4e0d\u53ef\u4e3a\u7a7a * @param [values] \u6570\u636e\u503c\u5217\u8868\uff0c\u4e0d\u53ef\u4e3a\u7a7a * @param [sql_where] SQL\u6761\u4ef6\u8bed\u53e5\uff0c\u6761\u4ef6\u8bed\u53e5\u4e3a\u7a7a\u5219\u66f4\u65b0\u6240\u6709\u6570\u636e\u9879 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool UpdateData ( const QString & table_name , const QStringList & column_names , const QStringList & values , const QString & sql_where ); /***************************************************************************** * @brief \u5220\u9664\u6570\u636e * @param [table_name] \u8868\u540d\u79f0 * @param [sql_where] SQL\u6761\u4ef6\u8bed\u53e5\uff0c\u6761\u4ef6\u8bed\u53e5\u4e3a\u7a7a\u5219\u5220\u9664\u6240\u6709\u6570\u636e\u9879 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool DeleteData ( const QString & table_name , const QString & sql_where ); /***************************************************************************** * @brief \u83b7\u53d6\u9519\u8bef\u4fe1\u606f * @returns \u63cf\u8ff0\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u4e32 *****************************************************************************/ QString GetErrorString () const ; /***************************************************************************** * @brief \u5f00\u542f\u4e8b\u52a1 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool Transaction (); /***************************************************************************** * @brief \u63d0\u4ea4\u4e8b\u52a1 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool Commit (); /***************************************************************************** * @brief \u56de\u6eda\u4e8b\u52a1 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool Rollback (); private : /***************************************************************************** * @brief \u6267\u884cSQL\u8bed\u53e5 * @param [sql] SQL\u8bed\u53e5\u5b57\u7b26\u4e32 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool ExecuteQuery ( const QString & sql ); /***************************************************************************** * @brief \u83b7\u53d6\u67e5\u8be2\u7ed3\u679c * @param [sql] SQL\u8bed\u53e5\u5b57\u7b26\u4e32 * @param [data] \u8f93\u51fa\u53c2\u6570\uff0c\u7528\u4e8e\u4fdd\u5b58\u67e5\u8be2\u7ed3\u679c * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool GetData ( const QString & sql , QList < QHash < QString , QVariant >> * data ); private : QSqlDatabase m_db ; QString m_db_path { \"\" }; QString m_error_info { \"\" }; }; #endif // DATABASEHELPER_H database_helper.cpp #include <QSqlQuery> #include <QDebug> #include <QCoreApplication> #include <QSqlError> #include <QSqlRecord> #include \"databasehelper.h\" DataBaseHelper :: DataBaseHelper ( QObject * parent ) : QObject ( parent ) { m_db = QSqlDatabase :: addDatabase ( \"QSQLITE\" ); } DataBaseHelper ::~ DataBaseHelper () { CloseDataBase (); } void DataBaseHelper :: SetDataBasePath ( const QString & path ) { m_db_path = path ; } bool DataBaseHelper :: OpenDataBase () { m_db . setDatabaseName ( m_db_path ); bool ret = m_db . open (); if ( ! ret ) { m_error_info = m_db . lastError (). text (); } return ret ; } void DataBaseHelper :: CloseDataBase () { if ( m_db . isOpen ()) { m_db . close (); } } bool DataBaseHelper :: ExecuteQuery ( const QString & sql ) { QSqlQuery query ( m_db ); if ( ! query . exec ( sql )) { m_error_info = query . lastError (). text (); return false ; } return true ; } bool DataBaseHelper :: CreateTable ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ) { QString queryString = \"CREATE TABLE IF NOT EXISTS \" + table_name + \"( \" + column_names [ 0 ] + \" \" + column_types [ 0 ]; for ( int i = 1 ; i < column_names . size (); i ++ ) { queryString += \", \" + column_names [ i ] + \" \" + column_types [ i ]; } queryString += \" ) \" ; printf ( \"%s \\n \" , queryString . toStdString (). data ()); return ExecuteQuery ( queryString ); } bool DataBaseHelper :: CreateTable_ID ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ) { QString queryString = \"CREATE TABLE IF NOT EXISTS \" + table_name + \"( \" + \"id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\" + column_names [ 0 ] + \" \" + column_types [ 0 ]; for ( int i = 1 ; i < column_names . size (); i ++ ) { queryString += \", \" + column_names [ i ] + \" \" + column_types [ i ]; } queryString += \" ) \" ; printf ( \"%s \\n \" , queryString . toStdString (). data ()); return ExecuteQuery ( queryString ); } bool DataBaseHelper :: DropTable ( const QString & table_name ) { QString query_string = QString ( \"DROP TABLE %1;\" ). arg ( table_name ); return ExecuteQuery ( query_string ); } void DataBaseHelper :: InsertValues ( QString tablename , QStringList values ) { QString queryString = \"INSERT INTO \" + tablename + \" VALUES ( '\" + values [ 0 ]; for ( int i = 1 ; i < values . size (); i ++ ) { queryString += \"', '\" + values [ i ]; } queryString += \"' )\" ; printf ( \"%s \\n \" , queryString . toStdString (). data ()); ExecuteQuery ( queryString ); } void DataBaseHelper :: InsertColnamesValues ( QString tablename , QStringList colnames , QStringList values ) { QString queryString = \"INSERT INTO \" + tablename + \"( \" + colnames [ 0 ]; for ( int i = 1 ; i < colnames . size (); i ++ ) { queryString += \", \" + colnames [ i ]; } queryString += \" ) \" ; queryString += \" VALUES ( '\" + values [ 0 ]; for ( int i = 1 ; i < values . size (); i ++ ) { queryString += \"', '\" + values [ i ]; } queryString += \"' )\" ; //printf(\"%s\\n\",queryString.toStdString().data()); ExecuteQuery ( queryString ); } bool DataBaseHelper :: GetData ( const QString & sql , QList < QHash < QString , QVariant >> * data ) { data -> clear (); QSqlQuery query ( m_db ); if ( ! query . exec ( sql )) { m_error_info = query . lastError (). text (); return false ; } while ( query . next ()) { QHash < QString , QVariant > row_data ; QSqlRecord cur_record = query . record (); int count = cur_record . count (); for ( int index = 0 ; index < count ; ++ index ) { QString field_name = cur_record . fieldName ( index ); QVariant value = cur_record . value ( index ); row_data . insert ( field_name , value ); } data -> append ( row_data ); } return true ; } bool DataBaseHelper :: QueryData ( const QString & table_name , QList < QHash < QString , QVariant >> * data ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } if ( nullptr == data ) { m_error_info = \"Output buffer is nullptr\" ; return false ; } if ( ! m_db . isOpen ()) { m_error_info = \"Database not connected\" ; return false ; } QString sql = \"SELECT * FROM \" + table_name + \";\" ; return GetData ( sql , data ); } bool DataBaseHelper :: QueryData ( const QString & table_name , const QStringList & column_names , const QString & sql_where , QList < QHash < QString , QVariant >> * data ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } if ( nullptr == data ) { m_error_info = \"Output buffer is nullptr\" ; return false ; } if ( ! m_db . isOpen ()) { m_error_info = \"Database not connected\" ; return false ; } QString query_columns ; if ( column_names . isEmpty ()) { query_columns = \"*\" ; } else { query_columns = column_names . join ( \", \" ); } QString sql = \"SELECT \" + query_columns + \" FROM \" + table_name ; if ( ! sql_where . isNull ()) { sql = sql + \" \" + sql_where ; } sql += \";\" ; return GetData ( sql , data ); } bool DataBaseHelper :: InsertData ( const QString & table_name , const QStringList & values ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } if ( values . isEmpty ()) { m_error_info = \"Insertion values not available\" ; return false ; } QString insert_values = values . join ( \", \" ); QString sql = \"INSERT INTO \" + table_name + \" VALUES (%1);\" ; sql = sql . arg ( insert_values ); qDebug () << sql ; return ExecuteQuery ( sql ); } bool DataBaseHelper :: InsertData ( const QString & table_name , const QStringList & column_names , const QStringList & values ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } if ( column_names . isEmpty ()) { m_error_info = \"Insertion columns not available\" ; return false ; } if ( values . isEmpty ()) { m_error_info = \"Insertion values not available\" ; return false ; } QString insert_columns = column_names . join ( \", \" ); QString insert_values = values . join ( \", \" ); QString sql = \"INSERT INTO \" + table_name + \"(%1) VALUES (%2);\" ; sql = sql . arg ( insert_columns , insert_values ); qDebug () << sql ; return ExecuteQuery ( sql ); } bool DataBaseHelper :: UpdateData ( const QString & table_name , const QStringList & column_names , const QStringList & values , const QString & sql_where ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } if ( column_names . isEmpty ()) { m_error_info = \"Update columns not available\" ; return false ; } if ( values . isEmpty ()) { m_error_info = \"Update values not available\" ; return false ; } if ( column_names . size () != values . size ()) { m_error_info = \"Number of columns is not equal to number of values\" ; return false ; } int size = column_names . size (); QStringList list ; for ( int i = 0 ; i < size ; i ++ ) { list . append ( QString ( \"%1 = %2\" ). arg ( column_names . at ( i )). arg ( values . at ( i ))); } QString sql = \"UPDATE \" + table_name + \" SET %1 \" ; sql = sql . arg ( list . join ( \", \" )); if ( ! sql_where . isNull ()) { sql += sql_where ; } sql += \";\" ; return ExecuteQuery ( sql ); } bool DataBaseHelper :: DeleteData ( const QString & table_name , const QString & sql_where ) { if ( table_name . isNull ()) { m_error_info = \"Invalid table name\" ; return false ; } QString sql = \"DELETE FROM \" + table_name + \" \" + sql_where + \";\" ; return ExecuteQuery ( sql ); } QString DataBaseHelper :: GetErrorString () const { return m_error_info ; } bool DataBaseHelper :: Transaction () { m_error_info . clear (); if ( m_db . isOpen ()) { return m_db . transaction (); } return false ; } bool DataBaseHelper :: Commit () { m_error_info . clear (); bool ret = false ; if ( m_db . isOpen ()) { ret = m_db . commit (); if ( ! ret ) { m_error_info = m_db . lastError (). text (); } return ret ; } return ret ; } bool DataBaseHelper :: Rollback () { m_error_info . clear (); bool ret = false ; if ( m_db . isOpen ()) { ret = m_db . rollback (); if ( ! ret ) { m_error_info = m_db . lastError (). text (); } return ret ; } return ret ; }","title":"\u6570\u636e\u5e93\u6a21\u5757"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/","text":"\u4e00\u4e2a\u591a\u7ebf\u7a0b HTTP \u670d\u52a1\u6846\u67b6\uff0c\u5b9e\u73b0\u4e86 HTTP \u957f\u8fde\u63a5\u3001\u77ed\u8fde\u63a5\u3001\u8bf7\u6c42\u3001\u56de\u590d\u7b49\u5904\u7406\uff0c\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93\u3002 [[HttpServer.pro]] [[HttpServer_global.h]] [[http_connection_handler.h]] [[http_connection_handler.cpp]] [[http_connection_handler_pool.h]] [[http_connection_handler_pool.cpp]] [[http_request.h]] [[http_request.cpp]] [[http_request_handler.h]] [[http_request_handler.cpp]] [[http_response.h]] [[http_response.cpp]] [[http_server.h]] [[http_server.cpp]]","title":"HTTP \u670d\u52a1\u6846\u67b6"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/HttpServer.pro/","text":"QT -= gui QT += network TEMPLATE = lib DEFINES += HTTPSERVER_LIBRARY CONFIG += c++11 # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES += QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 SOURCES += \\ httpconnectionhandler.cpp \\ httpconnectionhandlerpool.cpp \\ httprequest.cpp \\ httprequesthandler.cpp \\ httpresponse.cpp \\ httpserver.cpp HEADERS += \\ HttpServer_global.h \\ httpconnectionhandler.h \\ httpconnectionhandlerpool.h \\ httprequest.h \\ httprequesthandler.h \\ httpresponse.h \\ httpserver.h # Default rules for deployment. unix { target.path = /usr/lib } !isEmpty(target.path): INSTALLS += target","title":"HttpServer.pro"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/HttpServer_global.h/","text":"#ifndef HTTPSERVER_GLOBAL_H #define HTTPSERVER_GLOBAL_H #include <QtCore/qglobal.h> #if defined(HTTPSERVER_LIBRARY) # define HTTPSERVER_EXPORT Q_DECL_EXPORT #else # define HTTPSERVER_EXPORT Q_DECL_IMPORT #endif #endif // HTTPSERVER_GLOBAL_H","title":"HttpServer global.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_connection_handler.cpp/","text":"#include \"httpconnectionhandler.h\" #include \"httpresponse.h\" using namespace abrobohttpsevers ; HttpConnectionHandler :: HttpConnectionHandler ( const QSettings * settings , HttpRequestHandler * requesthandler ) { Q_ASSERT ( nullptr != settings ); this -> m_settings = settings ; this -> m_requesthandler = requesthandler ; m_currentrequest = nullptr ; m_busy = false ; // execute signals in a new thread m_thread = new QThread (); qDebug ( \"HttpConnectionHandler (%p): thread started\" , static_cast < void *> ( this )); moveToThread ( m_thread ); m_readtimer . moveToThread ( m_thread ); m_readtimer . setSingleShot ( true ); CreateSocket (); m_socket -> moveToThread ( m_thread ); // Connect signals connect ( m_socket , SIGNAL ( readyRead ()), SLOT ( ReadRequestMsg ())); connect ( m_socket , SIGNAL ( disconnected ()), SLOT ( OnDisconnected ())); //========================================================================== connect ( & m_readtimer , SIGNAL ( timeout ()), SLOT ( ReadTimeOut ())); connect ( m_thread , SIGNAL ( finished ()), this , SLOT ( ThreadDone ())); m_thread -> start (); qDebug ( \"HttpConnectionHandler (%p): constructed\" , static_cast < void *> ( this )); } HttpConnectionHandler ::~ HttpConnectionHandler () { m_thread -> quit (); m_thread -> wait (); m_thread -> deleteLater (); qDebug ( \"HttpConnectionHandler (%p): destroyed\" , static_cast < void *> ( this )); } void HttpConnectionHandler :: CreateSocket () { // else create an instance of QTcpSocket m_socket = new QTcpSocket (); } void HttpConnectionHandler :: DisconnectSocket () { while ( m_socket -> bytesToWrite ()) { m_socket -> waitForBytesWritten (); } m_socket -> disconnectFromHost (); } bool HttpConnectionHandler :: IsBusy () { return m_busy ; } void HttpConnectionHandler :: SetBusy () { this -> m_busy = true ; } void HttpConnectionHandler :: ThreadDone () { m_readtimer . stop (); m_socket -> close (); delete m_socket ; qDebug ( \"HttpConnectionHandler (%p): thread stopped\" , static_cast < void *> ( this )); } void HttpConnectionHandler :: ReadTimeOut () { qDebug ( \"HttpConnectionHandler (%p): read timeout occured\" , static_cast < void *> ( this )); //Commented out because QWebView cannot handle this. //socket->write(\"HTTP/1.1 408 request timeout\\r\\nConnection: close\\r\\n\\r\\n408 request timeout\\r\\n\"); DisconnectSocket (); delete m_currentrequest ; m_currentrequest = nullptr ; } void HttpConnectionHandler :: HandleConnection ( tSocketDescriptor socketDescriptor ) { qDebug ( \"HttpConnectionHandler (%p): handle new connection\" , static_cast < void *> ( this )); m_busy = true ; Q_ASSERT ( m_socket -> isOpen () == false ); // if not, then the handler is already busy //UGLY workaround - we need to clear writebuffer before reusing this socket //https://bugreports.qt-project.org/browse/QTBUG-28914 m_socket -> connectToHost ( \"\" , 0 ); m_socket -> abort (); if ( ! m_socket -> setSocketDescriptor ( socketDescriptor )) { qCritical ( \"HttpConnectionHandler (%p): cannot initialize socket: %s\" , static_cast < void *> ( this ), qPrintable ( m_socket -> errorString ())); return ; } // Start timer for read timeout int readtimeout = m_settings -> value ( \"ReadTimeOut\" , 10000 ). toInt (); m_readtimer . start ( readtimeout ); // delete previous request delete m_currentrequest ; m_currentrequest = nullptr ; } void HttpConnectionHandler :: OnDisconnected () { qDebug ( \"HttpConnectionHandler (%p): disconnected\" , static_cast < void *> ( this )); m_socket -> close (); m_readtimer . stop (); m_busy = false ; } void HttpConnectionHandler :: ResponeComplete () { m_readtimer . stop (); qDebug ( \"HttpConnectionHandler (%p): received request\" , static_cast < void *> ( this )); // Copy the Connection:close header to the response HttpResponse response ( m_socket ); bool CloseConnection = QString :: compare ( m_currentrequest -> GetHeader ( \"Connection\" ), \"close\" , Qt :: CaseInsensitive ) == 0 ; if ( CloseConnection ) { response . SetHeader ( \"Connection\" , \"close\" ); } else { bool http1_0 = QString :: compare ( m_currentrequest -> GetVersion (), \"HTTP/1.0\" , Qt :: CaseInsensitive ) == 0 ; if ( http1_0 ) { CloseConnection = true ; response . SetHeader ( \"Connection\" , \"close\" ); } } // Call the request mapper try { m_requesthandler -> Service ( * m_currentrequest , response ); } catch (...) { qCritical ( \"HttpConnectionHandler (%p): An uncatched exception occured in the request handler\" , static_cast < void *> ( this )); } // Finalize sending the response if not already done if ( ! response . HasSentLastPart ()) { response . Write ( QByteArray (), true ); } qDebug ( \"HttpConnectionHandler (%p): finished request\" , static_cast < void *> ( this )); //================================================================= // Find out whether the connection must be closed if ( ! CloseConnection ) { // Maybe the request handler or mapper added a Connection:close header in the meantime bool closeResponse = QString :: compare ( response . GetHeaders (). value ( \"Connection\" ), \"close\" , Qt :: CaseInsensitive ) == 0 ; if ( closeResponse == true ) { CloseConnection = true ; } else { // If we have no Content-Length header and did not use chunked mode, then we have to close the // connection to tell the HTTP client that the end of the response has been reached. bool hasContentLength = response . GetHeaders (). contains ( \"Content-Length\" ); if ( ! hasContentLength ) { bool hasChunkedMode = QString :: compare ( response . GetHeaders (). value ( \"Transfer-Encoding\" ), \"chunked\" , Qt :: CaseInsensitive ) == 0 ; if ( ! hasChunkedMode ) { CloseConnection = true ; } } } } // Close the connection or prepare for the next request on the same connection. if ( CloseConnection ) { DisconnectSocket (); } else { // Start timer for next request int readTimeout = m_settings -> value ( \"ReadTimeOut\" , 10000 ). toInt (); m_readtimer . start ( readTimeout ); } } //========================================================================================= //TCP readyRead() void HttpConnectionHandler :: ReadRequestMsg () { // The loop adds support for HTTP pipelinig while ( m_socket -> bytesAvailable ()) //check the data lenth { #ifdef SUPERVERBOSE qDebug ( \"HttpConnectionHandler (%p): read input\" , static_cast < void *> ( this )); #endif //====================================================== // Create new HttpRequest object if necessary if ( ! m_currentrequest ) { m_currentrequest = new HttpRequest ( m_settings ); } //====================================================== m_currentrequest -> GetStatus (); // Collect data for the request object while ( m_socket -> bytesAvailable () && m_currentrequest -> GetStatus () != HttpRequest :: COMPLETE && m_currentrequest -> GetStatus () != HttpRequest :: ABORT ) { //HttpRequest main function //====================================================== m_currentrequest -> ReadFromSocket ( m_socket ); //============================================= if ( m_currentrequest -> GetStatus () == HttpRequest :: WAITFORBODY ) { // Restart timer for read timeout, otherwise it would // expire during large file uploads. int readTimeout = m_settings -> value ( \"ReadTimeOut\" , 10000 ). toInt (); m_readtimer . start ( readTimeout ); } } //====================================================== // If the request is aborted, return error message and close the connection if ( m_currentrequest -> GetStatus () == HttpRequest :: ABORT ) { //====================================================================================== m_socket -> write ( \"HTTP/1.1 413 entity too large \\r\\n Connection: close \\r\\n\\r\\n 413 Entity too large \\r\\n \" ); //====================================================================================== DisconnectSocket (); delete m_currentrequest ; m_currentrequest = nullptr ; return ; } //=============================================================================== // If the request is complete, let the request mapper dispatch it if ( m_currentrequest -> GetStatus () == HttpRequest :: COMPLETE ) { ResponeComplete (); delete m_currentrequest ; m_currentrequest = nullptr ; } } }","title":"Http connection handler.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_connection_handler.h/","text":"#ifndef HTTPCONNECTIONHANDLER_H #define HTTPCONNECTIONHANDLER_H #include <QTcpSocket> #include <QObject> #include <QTimer> #include <QThread> #include <QSettings> #include \"httprequest.h\" #include \"httprequesthandler.h\" #include \"HttpServer_global.h\" namespace abrobohttpsevers { /* Alias type definition, for compatibility to different Qt versions */ #if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0) typedef qintptr tSocketDescriptor ; #else typedef int tSocketDescriptor ; #endif class HTTPSERVER_EXPORT HttpConnectionHandler : public QObject { Q_OBJECT Q_DISABLE_COPY ( HttpConnectionHandler ) public : HttpConnectionHandler ( const QSettings * settings , HttpRequestHandler * requesthandler ); /* Destructor */ virtual ~ HttpConnectionHandler (); /* Returns true, if this handler is in use. */ bool IsBusy (); /* Mark this handler as busy */ void SetBusy (); private : /* Configuration settings */ const QSettings * m_settings ; /* TCP socket of the current connection */ QTcpSocket * m_socket ; /* The thread that processes events of this connection */ QThread * m_thread ; /* Time for read timeout detection */ QTimer m_readtimer ; /* Storage for the current incoming HTTP request */ HttpRequest * m_currentrequest ; /* Dispatches received requests to services */ HttpRequestHandler * m_requesthandler ; /* This shows the busy-state from a very early time */ bool m_busy ; /* Create SSL or TCP socket */ void CreateSocket (); void DisconnectSocket (); void ResponeComplete (); public slots : /* Received from from the listener, when the handler shall start processing a new connection. @param socketDescriptor references the accepted connection. */ void HandleConnection ( const tSocketDescriptor socketDescriptor ); private slots : /* Received from the socket when a read-timeout occured */ void ReadTimeOut (); /* Received from the socket when incoming data can be read */ void ReadRequestMsg (); /* Received from the socket when a connection has been closed */ void OnDisconnected (); /* Cleanup after the thread is closed */ void ThreadDone (); }; } // end of namespace #endif // HTTPCONNECTIONHANDLER_H","title":"Http connection handler.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_connection_handler_pool.cpp/","text":"#include \"httpconnectionhandlerpool.h\" using namespace abrobohttpsevers ; HttpConnectionHandlerPool :: HttpConnectionHandlerPool ( const QSettings * settings , HttpRequestHandler * requesthandler ) { Q_ASSERT ( nullptr != settings ); this -> m_settings = settings ; this -> m_requesthandler = requesthandler ; m_cleanuptimer . start ( settings -> value ( \"CleanupInterval\" , 1000 ). toInt ()); connect ( & m_cleanuptimer , SIGNAL ( timeout ()), SLOT ( CleanUp ())); } HttpConnectionHandlerPool ::~ HttpConnectionHandlerPool () { // delete all connection handlers and wait until their threads are closed foreach ( HttpConnectionHandler * handler , m_pool ) { delete handler ; } qDebug ( \"HttpConnectionHandlerPool (%p): destroyed\" , this ); } HttpConnectionHandler * HttpConnectionHandlerPool :: GetConnectionHandler () { HttpConnectionHandler * freeHandler = nullptr ; m_mutex . lock (); // find a free handler in pool foreach ( HttpConnectionHandler * handler , m_pool ) { if ( ! handler -> IsBusy ()) { freeHandler = handler ; freeHandler -> SetBusy (); break ; } } // create a new handler, if necessary if ( ! freeHandler ) { int maxconnectionhandlers = m_settings -> value ( \"MaxThreads\" , 100 ). toInt (); if ( m_pool . count () < maxconnectionhandlers ) { freeHandler = new HttpConnectionHandler ( m_settings , m_requesthandler ); freeHandler -> SetBusy (); m_pool . append ( freeHandler ); } } m_mutex . unlock (); return freeHandler ; } void HttpConnectionHandlerPool :: CleanUp () { int maxIdleHandlers = m_settings -> value ( \"MinThreads\" , 1 ). toInt (); int idleCounter = 0 ; m_mutex . lock (); foreach ( HttpConnectionHandler * handler , m_pool ) { if ( ! handler -> IsBusy ()) { if ( ++ idleCounter > maxIdleHandlers ) { delete handler ; m_pool . removeOne ( handler ); long int poolSize = ( long int ) m_pool . size (); qDebug ( \"HttpConnectionHandlerPool: Removed connection handler (%p), pool size is now %li\" , handler , poolSize ); break ; // remove only one handler in each interval } } } m_mutex . unlock (); }","title":"Http connection handler pool.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_connection_handler_pool.h/","text":"#ifndef HTTPCONNECTIONHANDLERPOOL_H #define HTTPCONNECTIONHANDLERPOOL_H #include <QObject> #include <QList> #include <QTimer> #include <QObject> #include <QMutex> #include <QtNetwork> #include \"httpconnectionhandler.h\" #include \"HttpServer_global.h\" namespace abrobohttpsevers { class HTTPSERVER_EXPORT HttpConnectionHandlerPool : public QObject { Q_OBJECT Q_DISABLE_COPY ( HttpConnectionHandlerPool ) public : HttpConnectionHandlerPool ( const QSettings * settings , HttpRequestHandler * requesthandler ); /* Destructor */ virtual ~ HttpConnectionHandlerPool (); /* Get a free connection handler, or 0 if not available. */ HttpConnectionHandler * GetConnectionHandler (); private : /* Settings for this pool */ const QSettings * m_settings ; /* Will be assigned to each Connectionhandler during their creation */ HttpRequestHandler * m_requesthandler ; /* Pool of connection handlers */ QList < HttpConnectionHandler *> m_pool ; /* Timer to clean-up unused connection handler */ QTimer m_cleanuptimer ; /* Used to synchronize threads */ QMutex m_mutex ; private slots : /* Received from the clean-up timer. */ void CleanUp (); }; } // end of namespace #endif // HTTPCONNECTIONHANDLERPOOL_H","title":"Http connection handler pool.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_request.cpp/","text":"#include \"httprequest.h\" using namespace abrobohttpsevers ; HttpRequest :: HttpRequest ( const QSettings * settings ) { m_status = WAITFORREQUEST ; m_currentsize = 0 ; m_expectedbodysize = 0 ; m_maxsize = settings -> value ( \"MaxRequestSize\" , \"16000\" ). toInt (); m_maxmultipartsize = settings -> value ( \"MaxMultiPartSize\" , \"1000000\" ). toInt (); } HttpRequest ::~ HttpRequest () { } void HttpRequest :: ReadRequest ( QTcpSocket * socket ) { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: read request\" ); #endif int toRead = m_maxsize - m_currentsize + 1 ; // allow one byte more to be able to detect overflow QByteArray dataRead = socket -> readLine ( toRead ); m_currentsize += dataRead . size (); m_linebuffer . append ( dataRead ); if ( ! m_linebuffer . contains ( \" \\r\\n \" )) { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: collecting more parts until line break\" ); #endif return ; } QByteArray newdata = m_linebuffer . trimmed (); m_linebuffer . clear (); if ( ! newdata . isEmpty ()) { qDebug ( \"HttpRequest: from %s: %s\" , qPrintable ( socket -> peerAddress (). toString ()), newdata . data ()); QList < QByteArray > list = newdata . split ( ' ' ); if ( list . count () != 3 || ! list . at ( 2 ). contains ( \"HTTP\" )) { qWarning ( \"HttpRequest: received broken HTTP request, invalid first line\" ); m_status = ABORT ; } else { m_method = list . at ( 0 ). trimmed (); m_path = list . at ( 1 ); m_version = list . at ( 2 ); m_peerAddress = socket -> peerAddress (); m_status = WAITFORHEADER ; } } } void HttpRequest :: ReadHeader ( QTcpSocket * socket ) { int toRead = m_maxsize - m_currentsize + 1 ; // allow one byte more to be able to detect overflow QByteArray dataRead = socket -> readLine ( toRead ); m_currentsize += dataRead . size (); m_linebuffer . append ( dataRead ); if ( ! m_linebuffer . contains ( \" \\r\\n \" )) { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: collecting more parts until line break\" ); #endif return ; } QByteArray newdata = m_linebuffer . trimmed (); m_linebuffer . clear (); int colon = newdata . indexOf ( ':' ); if ( colon > 0 ) { // Received a line with a colon - a header m_currentheader = newdata . left ( colon ). toLower (); QByteArray value = newdata . mid ( colon + 1 ). trimmed (); m_headers . insert ( m_currentheader , value ); #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: received header %s: %s\" , currentHeader . data (), value . data ()); #endif } else if ( ! newdata . isEmpty ()) { // received another line - belongs to the previous header #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: read additional line of header\" ); #endif // Received additional line of previous header if ( m_headers . contains ( m_currentheader )) { m_headers . insert ( m_currentheader , m_headers . value ( m_currentheader ) + \" \" + newdata ); } } else { // received an empty line - end of headers reached #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: headers completed\" ); #endif // Empty line received, that means all headers have been received // Check for multipart/form-data QByteArray contentType = m_headers . value ( \"content-type\" ); if ( contentType . startsWith ( \"multipart/form-data\" )) { int posi = contentType . indexOf ( \"boundary=\" ); if ( posi >= 0 ) { m_boundary = contentType . mid ( posi + 9 ); if ( m_boundary . startsWith ( '\"' ) && m_boundary . endsWith ( '\"' )) { m_boundary = m_boundary . mid ( 1 , m_boundary . length () - 2 ); } } } QByteArray contentLength = m_headers . value ( \"content-length\" ); if ( ! contentLength . isEmpty ()) { m_expectedbodysize = contentLength . toInt (); } if ( m_expectedbodysize == 0 ) { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: expect no body\" ); #endif m_status = COMPLETE ; } else if ( m_boundary . isEmpty () && m_expectedbodysize + m_currentsize > m_maxsize ) { qWarning ( \"HttpRequest: expected body is too large\" ); m_status = ABORT ; } else if ( ! m_boundary . isEmpty () && m_expectedbodysize > m_maxmultipartsize ) { qWarning ( \"HttpRequest: expected multipart body is too large\" ); m_status = ABORT ; } else { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: expect %i bytes body\" , expectedbodysize ); #endif m_status = WAITFORBODY ; } } } void HttpRequest :: ReadBody ( QTcpSocket * socket ) { Q_ASSERT ( m_expectedbodysize != 0 ); if ( m_boundary . isEmpty ()) { // normal body, no multipart #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: receive body\" ); #endif int toRead = m_expectedbodysize - m_bodydata . size (); QByteArray newdata = socket -> read ( toRead ); m_currentsize += newdata . size (); m_bodydata . append ( newdata ); if ( m_bodydata . size () >= m_expectedbodysize ) { m_status = COMPLETE ; } } else { // multipart body, store into temp file #ifdef SUPERVERBOSE #endif qDebug ( \"HttpRequest: receiving multipart body\" ); } } void HttpRequest :: DecodeRequestParams () { #ifdef SUPERVERBOSE qDebug ( \"HttpRequest: extract and decode request parameters\" ); #endif // Get URL parameters QByteArray rawParameters ; int questionMark = m_path . indexOf ( '?' ); if ( questionMark >= 0 ) { rawParameters = m_path . mid ( questionMark + 1 ); m_path = m_path . left ( questionMark ); } // Get request body parameters QByteArray contentType = m_headers . value ( \"content-type\" ); if ( ! m_bodydata . isEmpty () && ( contentType . isEmpty () || contentType . startsWith ( \"application/x-www-form-urlencoded\" ))) { if ( ! rawParameters . isEmpty ()) { rawParameters . append ( '&' ); rawParameters . append ( m_bodydata ); } else { rawParameters = m_bodydata ; } } // Split the parameters into pairs of value and name QList < QByteArray > list = rawParameters . split ( '&' ); foreach ( QByteArray part , list ) { int equalsChar = part . indexOf ( '=' ); if ( equalsChar >= 0 ) { QByteArray name = part . left ( equalsChar ). trimmed (); QByteArray value = part . mid ( equalsChar + 1 ). trimmed (); m_parameters . insert ( UrlDecode ( name ), UrlDecode ( value )); } else if ( ! part . isEmpty ()) { // Name without value m_parameters . insert ( UrlDecode ( part ), \"\" ); } } } void HttpRequest :: ReadFromSocket ( QTcpSocket * socket ) { Q_ASSERT ( m_status != COMPLETE ); if ( m_status == WAITFORREQUEST ) { ReadRequest ( socket ); } else if ( m_status == WAITFORHEADER ) { ReadHeader ( socket ); } else if ( m_status == WAITFORBODY ) { ReadBody ( socket ); } if (( m_boundary . isEmpty () && m_currentsize > m_maxsize ) || ( ! m_boundary . isEmpty () && m_currentsize > m_maxmultipartsize )) { qWarning ( \"HttpRequest: received too many bytes\" ); m_status = ABORT ; } if ( m_status == COMPLETE ) { // Extract and decode request parameters from url and body DecodeRequestParams (); } } HttpRequest :: RequestStatus HttpRequest :: GetStatus () const { return m_status ; } QByteArray HttpRequest :: GetMethod () const { return m_method ; } QByteArray HttpRequest :: UrlDecode ( const QByteArray source ) { QByteArray buffer ( source ); buffer . replace ( '+' , ' ' ); int percentChar = buffer . indexOf ( '%' ); while ( percentChar >= 0 ) { bool ok ; int hexCode = buffer . mid ( percentChar + 1 , 2 ). toInt ( & ok , 16 ); if ( ok ) { char c = char ( hexCode ); buffer . replace ( percentChar , 3 , & c , 1 ); } percentChar = buffer . indexOf ( '%' , percentChar + 1 ); } return buffer ; } QByteArray HttpRequest :: GetPath () const { return UrlDecode ( m_path ); } const QByteArray & HttpRequest :: GetRawPath () const { return m_path ; } QByteArray HttpRequest :: GetVersion () const { return m_version ; } QByteArray HttpRequest :: GetHeader ( const QByteArray & name ) const { return m_headers . value ( name . toLower ()); } QList < QByteArray > HttpRequest :: GetHeaders ( const QByteArray & name ) const { return m_headers . values ( name . toLower ()); } QMultiMap < QByteArray , QByteArray > HttpRequest :: GetHeaderMap () const { return m_headers ; } QByteArray HttpRequest :: GetParameter ( const QByteArray & name ) const { return m_parameters . value ( name ); } QList < QByteArray > HttpRequest :: GetParameters ( const QByteArray & name ) const { return m_parameters . values ( name ); } QMultiMap < QByteArray , QByteArray > HttpRequest :: GetParameterMap () const { return m_parameters ; } QByteArray HttpRequest :: GetBody () const { return m_bodydata ; } /* Get the address of the connected client. Note that multiple clients may have the same IP address, if they share an internet connection (which is very common). */ QHostAddress HttpRequest :: GetPeerAddress () const { return m_peerAddress ; }","title":"Http request.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_request.h/","text":"#ifndef HTTPREQUEST_H #define HTTPREQUEST_H #include <QObject> #include <QByteArray> #include <QHostAddress> #include <QTcpSocket> #include <QMap> #include <QMultiMap> #include <QSettings> #include \"HttpServer_global.h\" namespace abrobohttpsevers { class HTTPSERVER_EXPORT HttpRequest { Q_DISABLE_COPY ( HttpRequest ) public : /***************************************************************************** * @brief Values for getStatus() *****************************************************************************/ enum RequestStatus { WAITFORREQUEST , WAITFORHEADER , WAITFORBODY , COMPLETE , ABORT }; /***************************************************************************** * @brief Constructor. * @param [settings] Configuration settings *****************************************************************************/ HttpRequest ( const QSettings * settings ); /***************************************************************************** * @brief Destructor. * @param settings Configuration settings *****************************************************************************/ virtual ~ HttpRequest (); /***************************************************************************** * @brief Read the HTTP request from a socket. * This method is called by the connection handler repeatedly * until the status is RequestStatus::complete or RequestStatus::abort. * @param [socket] Source of the data *****************************************************************************/ void ReadFromSocket ( QTcpSocket * socket ); /***************************************************************************** * @brief Get the status of this reqeust. * @returns status enum type * @see RequestStatus *****************************************************************************/ RequestStatus GetStatus () const ; /***************************************************************************** * @brief Get the method of the HTTP request (e.g. \"GET\"). * @returns method *****************************************************************************/ QByteArray GetMethod () const ; /***************************************************************************** * @brief Get the decoded path of the HTPP request (e.g. \"/index.html\") * @returns path *****************************************************************************/ QByteArray GetPath () const ; /***************************************************************************** * @brief Get the raw path of the HTTP request (e.g. \"/file%20with%20spaces.html\") * @returns raw path *****************************************************************************/ const QByteArray & GetRawPath () const ; /***************************************************************************** * @brief Get the version of the HTPP request (e.g. \"HTTP/1.1\") * @returns version *****************************************************************************/ QByteArray GetVersion () const ; /***************************************************************************** * @brief Get the value of a HTTP request header. * @param [name] Name of the header, not case-senitive. * @returns If the header occurs multiple times, only the last one is returned. *****************************************************************************/ QByteArray GetHeader ( const QByteArray & name ) const ; /***************************************************************************** * @brief Get the values of a HTTP request header. * @returns List of header(s) *****************************************************************************/ QList < QByteArray > GetHeaders ( const QByteArray & name ) const ; /* * Get all HTTP request headers. Note that the header names * are returned in lower-case. */ /***************************************************************************** * @brief Get all HTTP request headers. Note that the header names * are returned in lower-case. * @returns A multimap of headers. *****************************************************************************/ QMultiMap < QByteArray , QByteArray > GetHeaderMap () const ; /***************************************************************************** * @brief Get the value of a HTTP request parameter. * @param [name] Name of the parameter, case-sensitive. * @returns If the parameter occurs multiple times, only the last one is returned. *****************************************************************************/ QByteArray GetParameter ( const QByteArray & name ) const ; /***************************************************************************** * @brief Get the values of a HTTP request parameter. * @param [name] Name of the parameter, case-sensitive. * @returns A list of parameters. *****************************************************************************/ QList < QByteArray > GetParameters ( const QByteArray & name ) const ; /***************************************************************************** * @brief Get all HTTP request parameters. * @returns A multimap of parameters. *****************************************************************************/ QMultiMap < QByteArray , QByteArray > GetParameterMap () const ; /***************************************************************************** * @brief Get the HTTP request body. * @returns HTTP request body. *****************************************************************************/ QByteArray GetBody () const ; /***************************************************************************** * @brief Decode an URL parameter. * E.g. replace \"%23\" by '#' and replace '+' by ' '. * @param [source] The url encoded strings * @returns Decoded url. * @see QUrl::toPercentEncoding for the reverse direction *****************************************************************************/ static QByteArray UrlDecode ( const QByteArray source ); /* Get the address of the connected client. Note that multiple clients may have the same IP address, if they share an internet connection (which is very common). */ /***************************************************************************** * @brief Get the address of the connected client. * Note that multiple clients may have the same IP address, if they * share an internet connection (which is very common). * @returns address *****************************************************************************/ QHostAddress GetPeerAddress () const ; private : /* Request headers */ QMultiMap < QByteArray , QByteArray > m_headers ; /* Parameters of the request */ QMultiMap < QByteArray , QByteArray > m_parameters ; /* Storage for raw body data */ QByteArray m_bodydata ; /* Request method */ QByteArray m_method ; /* Request path (in raw encoded format) */ QByteArray m_path ; /* Request protocol version */ QByteArray m_version ; /* Status of this request. For the state engine. @see RequestStatus */ RequestStatus m_status ; /* Address of the connected peer. */ QHostAddress m_peerAddress ; //=========================================== /* Maximum size of requests in bytes. */ int m_maxsize ; /* Maximum allowed size of multipart forms in bytes. */ int m_maxmultipartsize ; /* Current size */ int m_currentsize ; /* Expected size of body */ int m_expectedbodysize ; //========================================== /* Name of the current header, or empty if no header is being processed */ QByteArray m_currentheader ; /* Boundary of multipart/form-data body. Empty if there is no such header */ QByteArray m_boundary ; /* Buffer for collecting characters of request and header lines */ QByteArray m_linebuffer ; //========================================== /***************************************************************************** * @brief Sub-procedure of ReadFromSocket(), read the first line of a request. * @param [socket] Source of the data *****************************************************************************/ void ReadRequest ( QTcpSocket * socket ); /***************************************************************************** * @brief Sub-procedure of readFromSocket(), read header lines. * @param [socket] Source of the data *****************************************************************************/ void ReadHeader ( QTcpSocket * socket ); /***************************************************************************** * @brief Sub-procedure of readFromSocket(), read the request body. * @param [socket] Source of the data *****************************************************************************/ void ReadBody ( QTcpSocket * socket ); /***************************************************************************** * @brief Sub-procedure of readFromSocket(), extract and decode request parameters. * @param [socket] Source of the data *****************************************************************************/ void DecodeRequestParams (); }; } // end of namespace #endif // HTTPREQUEST_H","title":"Http request.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_request_handler.cpp/","text":"#include \"httprequesthandler.h\" using namespace abrobohttpsevers ; HttpRequestHandler :: HttpRequestHandler ( QObject * parent ) : QObject ( parent ) { } HttpRequestHandler ::~ HttpRequestHandler () { } void HttpRequestHandler :: Service ( HttpRequest & request , HttpResponse & response ) { qCritical ( \"HttpRequestHandler: you need to override the service() function\" ); qDebug ( \"HttpRequestHandler: request=%s %s %s\" , request . GetMethod (). data (), request . GetPath (). data (), request . GetVersion (). data ()); response . SetStatus ( 501 , \"not implemented\" ); response . Write ( \"501 not implemented\" , true ); }","title":"Http request handler.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_request_handler.h/","text":"#ifndef HTTPREQUESTHANDLER_H #define HTTPREQUESTHANDLER_H #include <QObject> #include \"httprequest.h\" #include \"httpresponse.h\" #include \"HttpServer_global.h\" namespace abrobohttpsevers { class HTTPSERVER_EXPORT HttpRequestHandler : public QObject { Q_OBJECT Q_DISABLE_COPY ( HttpRequestHandler ) public : /* * Constructor. * @param parent Parent object. */ HttpRequestHandler ( QObject * parent = nullptr ); /* Destructor */ virtual ~ HttpRequestHandler (); /* Generate a response for an incoming HTTP request. @param request The received HTTP request @param response Must be used to return the response @warning This method must be thread safe */ virtual void Service ( HttpRequest & request , HttpResponse & response ); }; } // end of namespace #endif // HTTPREQUESTHANDLER_H","title":"Http request handler.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_response.cpp/","text":"#include \"httpresponse.h\" using namespace abrobohttpsevers ; HttpResponse :: HttpResponse ( QTcpSocket * socket ) { this -> m_socket = socket ; m_statusCode = 200 ; m_statusText = \"OK\" ; m_sentheaders = false ; m_sentlastpart = false ; } void HttpResponse :: SetHeader ( QByteArray name , QByteArray value ) { Q_ASSERT ( m_sentheaders == false ); m_headers . insert ( name , value ); } void HttpResponse :: SetHeader ( QByteArray name , int value ) { Q_ASSERT ( m_sentheaders == false ); m_headers . insert ( name , QByteArray :: number ( value )); } QMap < QByteArray , QByteArray >& HttpResponse :: GetHeaders () { return m_headers ; } void HttpResponse :: SetStatus ( int statusCode , QByteArray description ) { this -> m_statusCode = statusCode ; m_statusText = description ; } int HttpResponse :: GetStatusCode () const { return this -> m_statusCode ; } void HttpResponse :: WriteHeaders () { Q_ASSERT ( m_sentheaders == false ); QByteArray buffer ; buffer . append ( \"HTTP/1.1 \" ); buffer . append ( QByteArray :: number ( m_statusCode )); buffer . append ( ' ' ); buffer . append ( m_statusText ); buffer . append ( \" \\r\\n \" ); foreach ( QByteArray name , m_headers . keys ()) { buffer . append ( name ); buffer . append ( \": \" ); buffer . append ( m_headers . value ( name )); buffer . append ( \" \\r\\n \" ); } buffer . append ( \" \\r\\n \" ); WriteToSocket ( buffer ); m_socket -> flush (); m_sentheaders = true ; } bool HttpResponse :: WriteToSocket ( QByteArray data ) { int remaining = data . size (); char * ptr = data . data (); while ( m_socket -> isOpen () && remaining > 0 ) { // If the output buffer has become large, then wait until it has been sent. if ( m_socket -> bytesToWrite () > 16384 ) { m_socket -> waitForBytesWritten ( -1 ); } qint64 written = m_socket -> write ( ptr , remaining ); if ( written == -1 ) { return false ; } ptr += written ; remaining -= written ; } return true ; } void HttpResponse :: Write ( QByteArray data , bool lastPart ) { Q_ASSERT ( m_sentlastpart == false ); // Send HTTP headers, if not already done (that happens only on the first call to write()) if ( m_sentheaders == false ) { // If the whole response is generated with a single call to write(), then we know the total // size of the response and therefore can set the Content-Length header automatically. if ( lastPart ) { // Automatically set the Content-Length header m_headers . insert ( \"Content-Length\" , QByteArray :: number ( data . size ())); } // else if we will not close the connection at the end, them we must use the chunked mode. else { } WriteHeaders (); } // Send data if ( data . size () > 0 ) { WriteToSocket ( data ); } if ( lastPart ) { m_socket -> flush (); m_sentlastpart = true ; } } bool HttpResponse :: HasSentLastPart () const { return m_sentlastpart ; } void HttpResponse :: Flush () { m_socket -> flush (); } bool HttpResponse :: IsConnected () const { return m_socket -> isOpen (); }","title":"Http response.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_response.h/","text":"#ifndef HTTPRESPONSE_H #define HTTPRESPONSE_H #include <QMap> #include <QString> #include <QTcpSocket> #include \"HttpServer_global.h\" namespace abrobohttpsevers { class HTTPSERVER_EXPORT HttpResponse { Q_DISABLE_COPY ( HttpResponse ) public : /* Constructor. @param socket used to write the response */ explicit HttpResponse ( QTcpSocket * socket ); /* Set a HTTP response header. You must call this method before the first write(). @param name name of the header @param value value of the header */ void SetHeader ( const QByteArray name , const QByteArray value ); /* Set a HTTP response header. You must call this method before the first write(). @param name name of the header @param value value of the header */ void SetHeader ( const QByteArray name , const int value ); /* Get the map of HTTP response headers */ QMap < QByteArray , QByteArray >& GetHeaders (); /* Set status code and description. The default is 200,OK. You must call this method before the first write(). */ void SetStatus ( const int statusCode , const QByteArray description = QByteArray ()); /* Return the status code. */ int GetStatusCode () const ; /* Write body data to the socket. <p> The HTTP status line, headers and cookies are sent automatically before the body. <p> If the response contains only a single chunk (indicated by lastPart=true), then a Content-Length header is automatically set. <p> Chunked mode is automatically selected if there is no Content-Length header and also no Connection:close header. @param data Data bytes of the body @param lastPart Indicates that this is the last chunk of data and flushes the output buffer. */ void Write ( const QByteArray data , bool lastPart = false ); /* Indicates whether the body has been sent completely (write() has been called with lastPart=true). */ bool HasSentLastPart () const ; /* * Flush the output buffer (of the underlying socket). * You normally don't need to call this method because flush is * automatically called after HttpRequestHandler::service() returns. */ void Flush (); /* * May be used to check whether the connection to the web client has been lost. * This might be useful to cancel the generation of large or slow responses. */ bool IsConnected () const ; private : /* Request headers */ QMap < QByteArray , QByteArray > m_headers ; /* Socket for writing output */ QTcpSocket * m_socket ; /* HTTP status code*/ int m_statusCode ; /* HTTP status code description */ QByteArray m_statusText ; /* Indicator whether headers have been sent */ bool m_sentheaders ; /* Indicator whether the body has been sent completely */ bool m_sentlastpart ; /* Write raw data to the socket. This method blocks until all bytes have been passed to the TCP buffer */ bool WriteToSocket ( QByteArray data ); /* Write the response HTTP status and headers to the socket. Calling this method is optional, because writeBody() calls it automatically when required. */ void WriteHeaders (); }; } // end of namespace #endif // HTTPRESPONSE_H","title":"Http response.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_server.cpp/","text":"#include <QThread> #include \"httpserver.h\" using namespace abrobohttpsevers ; HttpServer :: HttpServer ( const QSettings * settings , HttpRequestHandler * requesthandler , QObject * parent ) : QTcpServer ( parent ) { Q_ASSERT ( settings != nullptr ); Q_ASSERT ( requesthandler != nullptr ); m_pool = nullptr ; this -> m_settings = settings ; this -> m_requesthandler = requesthandler ; // Reqister type of socketDescriptor for signal/slot handling qRegisterMetaType < tSocketDescriptor > ( \"tSocketDescriptor\" ); Listen (); } HttpServer ::~ HttpServer () { close (); qDebug ( \"HttpServer: destroyed\" ); } void HttpServer :: Listen () { if ( ! m_pool ) { m_pool = new HttpConnectionHandlerPool ( m_settings , m_requesthandler ); } QString host = m_settings -> value ( \"Host\" ). toString (); quint16 port = m_settings -> value ( \"Port\" ). toUInt () & 0xFFFF ; QTcpServer :: listen ( host . isEmpty () ? QHostAddress :: Any : QHostAddress ( host ), port ); if ( ! isListening ()) { qCritical ( \"HttpListener: Cannot bind on port %i: %s\" , port , qPrintable ( errorString ())); } else { qDebug ( \"HttpListener: Listening on port %i\" , port ); } } void HttpServer :: incomingConnection ( tSocketDescriptor socketDescriptor ) { qDebug ( \"HttpListener: New connection\" ); HttpConnectionHandler * freeHandler = nullptr ; if ( m_pool ) { freeHandler = m_pool -> GetConnectionHandler (); } // Let the handler process the new connection. if ( freeHandler ) { // The descriptor is passed via event queue because the handler lives in another thread QMetaObject :: invokeMethod ( freeHandler , \"HandleConnection\" , Qt :: QueuedConnection , Q_ARG ( tSocketDescriptor , socketDescriptor )); } else { // Reject the connection qDebug ( \"HttpListener: Too many incoming connections\" ); QTcpSocket * socket = new QTcpSocket ( this ); socket -> setSocketDescriptor ( socketDescriptor ); connect ( socket , SIGNAL ( disconnected ()), socket , SLOT ( deleteLater ())); socket -> write ( \"HTTP/1.1 503 too many connections \\r\\n Connection: close \\r\\n\\r\\n Too many connections \\r\\n \" ); socket -> disconnectFromHost (); } } void HttpServer :: Close () { QTcpServer :: close (); qDebug ( \"HttpServer: closed\" ); if ( m_pool ) { delete m_pool ; m_pool = nullptr ; } }","title":"Http server.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/HTTP%20%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/http_server.h/","text":"#ifndef HTTP_SERVER_H #define HTTP_SERVER_H #include <QtNetwork> #include \"httpconnectionhandlerpool.h\" #include \"httprequesthandler.h\" #include \"HttpServer_global.h\" namespace abrobohttpsevers { class HTTPSERVER_EXPORT HttpServer : public QTcpServer { Q_OBJECT Q_DISABLE_COPY ( HttpServer ) public : HttpServer ( const QSettings * settings , HttpRequestHandler * requesthandler , QObject * parent = nullptr ); ~ HttpServer (); /***************************************************************************** * @brief \u8fd0\u884c\u670d\u52a1\uff0c\u8fdb\u5165\u76d1\u542c\u72b6\u6001 * @returns \u65e0 *****************************************************************************/ void Listen (); /* Closes the listener, waits until all pending requests are processed, then closes the connection pool. */ void Close (); protected : /***************************************************************************** * @brief \u5f53\u6709\u65b0\u7684\u8fde\u63a5\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u91cd\u5199\u4e86\u6b64\u51fd\u6570\u4ee5\u5b9e\u73b0\u5728\u65b0\u7684\u7ebf\u7a0b\u4e2d\u5904\u7406 TCP \u8fde\u63a5 * @param [handle] \u5957\u63a5\u5b57\u63cf\u8ff0\u7b26 * @returns \u65e0 *****************************************************************************/ /* Serves new incoming connection requests */ void incomingConnection ( tSocketDescriptor socketDescriptor ); public slots : private : /* Configuration settings for the HTTP server */ const QSettings * m_settings ; /* Point to the reuqest handler which processes all HTTP requests */ HttpRequestHandler * m_requesthandler ; /* Pool of connection handlers */ HttpConnectionHandlerPool * m_pool ; signals : /* Sent to the connection handler to process a new incoming connection. @param socketDescriptor references the accepted connection. */ void HandleConnection ( tSocketDescriptor socketDescriptor ); }; } // end of namespace #endif // HTTP_SERVER_H","title":"Http server.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/ServerDemo/","text":"\u4e3b\u7a0b\u5e8f\u6846\u67b6 [[ServerDemo.pro]] [[database_controller.h]] [[database_controller.cpp]] [[request_mapper.h]] [[request_mapper.cpp]] [[main.cpp]]","title":"ServerDemo"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/ServerDemo.pro/","text":"QT -= gui QT += network QT += sql CONFIG += c++11 console CONFIG -= app_bundle # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES += QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 HEADERS += \\ databasecontroller.h \\ requestmapper.h SOURCES += \\ databasecontroller.cpp \\ main.cpp \\ requestmapper.cpp # Default rules for deployment. qnx: target.path = /tmp/$${TARGET}/bin else: unix:!android: target.path = /opt/$${TARGET}/bin !isEmpty(target.path): INSTALLS += target win32:CONFIG(release, debug|release): LIBS += -L$$PWD/lib/release/ -lHttpServer else:win32:CONFIG(debug, debug|release): LIBS += -L$$PWD/lib/debug/ -lHttpServer else:unix:!macx: LIBS += -L$$PWD/lib/ -lHttpServer win32:CONFIG(release, debug|release): LIBS += -L$$PWD/lib/release/ -lDataBaseHelper else:win32:CONFIG(debug, debug|release): LIBS += -L$$PWD/lib/debug/ -lDataBaseHelper else:unix:!macx: LIBS += -L$$PWD/lib/ -lDataBaseHelper INCLUDEPATH += $$PWD/includes DEPENDPATH += $$PWD/includes","title":"ServerDemo.pro"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/database_controller.cpp/","text":"#include <QCoreApplication> #include <QDebug> #include <QDir> #include <QFile> #include \"databasecontroller.h\" DataBaseController :: DataBaseController () { QString db_path = QCoreApplication :: applicationDirPath () + \"/db/\" ; QString db_name = \"abrobo.db\" ; CheckDataBase ( db_path , db_name ); m_databasehelper = new DataBaseHelper (); m_databasehelper -> SetDataBasePath ( db_path + db_name ); if ( m_init_database ) { InitDataBase (); } } DataBaseController ::~ DataBaseController () { if ( nullptr != m_databasehelper ) { delete m_databasehelper ; } } bool DataBaseController :: CheckDataBase ( const QString & path , const QString & name ) { if ( QFile :: exists ( path + name )) { return true ; } m_init_database = true ; //\u9700\u8981\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c QDir db_dir ( path ); if ( ! db_dir . exists ()) { if ( ! db_dir . mkdir ( path )) { qDebug () << \"Failed to create database dir\" ; return false ; } } return true ; } bool DataBaseController :: InitDataBase () { if ( ! CreateConsoleDeviceTable ()) { return false ; } if ( ! CreateDeviceBingdingTable ()) { return false ; } return true ; } bool DataBaseController :: CreateDataBaseTable ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ) { DataBaseManager database_ptr ( m_databasehelper ); if ( ! database_ptr -> CreateTable_ID ( table_name , column_names , column_types )) { qDebug () << database_ptr -> GetErrorString (); return false ; } return true ; } bool DataBaseController :: CreateConsoleDeviceTable () { QString table_name = \"console_device\" ; QStringList column_names ; column_names << \"hospital\" << \"platform\" << \"device_name\" << \"device_ip\" << \"device_mac\" << \"is_binded\" ; QStringList column_types ; column_types << \"NVCHAR(128) NOT NULL\" << \"CHAR(64) NOT NULL\" << \"CHAR(64) UNIQUE NOT NULL\" << \"CHAR(16) NOT NULL\" << \"CHAR(16) UNIQUE NOT NULL\" << \"TINYINT DEFAULT(0) NOT NULL\" ; return CreateDataBaseTable ( table_name , column_names , column_types ); } bool DataBaseController :: CreateDeviceBingdingTable () { QString table_name = \"device_binding\" ; QStringList column_names ; column_names << \"console_device_mac\" << \"video_device_id\" << \"is_deleted\" ; QStringList column_types ; column_types << \"CHAR(16) UNIQUE NOT NULL\" << \"CHAR(16) NOT NULL\" << \"TINYINT DEFAULT(0) NOT NULL\" ; return CreateDataBaseTable ( table_name , column_names , column_types ); } DataBaseController & DataBaseController :: GetInstance () { static DataBaseController instance ; return instance ; } QList < QHash < QString , QVariant >> DataBaseController :: QueryConsoleDeviceInfo ( const QString & mac ) { QList < QHash < QString , QVariant >> data ; DataBaseManager database_ptr ( m_databasehelper ); QStringList columns ; columns << \"hospital\" << \"platform\" << \"device_name\" << \"device_ip\" << \"device_mac\" << \"is_binded\" ; QString sql_where = QString ( \"WHERE device_mac = '%1'\" ). arg ( mac ); database_ptr -> QueryData ( \"console_device\" , columns , sql_where , & data ); return data ; } bool DataBaseController :: SaveConsoleDeviceInfo ( const QString & hospital , const QString & platform , const QString & device_name , const QString & video_device_id , const QString & device_ip , const QString & device_mac ) { QString tablename = \"console_device\" ; int is_binded = 0 ; QStringList colnames ; colnames << \"hospital\" << \"platform\" << \"device_name\" << \"device_ip\" << \"device_mac\" << \"is_binded\" ; QStringList values ; values << \"'\" + hospital + \"'\" ; values << \"'\" + platform + \"'\" ; values << \"'\" + device_name + \"'\" ; values << \"'\" + device_ip + \"'\" ; values << \"'\" + device_mac + \"'\" ; values << QString ( \"%1\" ). arg ( is_binded ); QList < QHash < QString , QVariant >> data = QueryConsoleDeviceInfo ( device_mac ); if ( 0 != data . size ()) { //update QString sql_where = QString ( \"WHERE device_mac='%1'\" ). arg ( device_mac ); if ( ! UpdateConsoleDeviceInfo ( colnames , values , sql_where )) { return false ; } } else { //insert if ( ! InsertConsoleDeviceInfo ( colnames , values )) { return false ; } } if ( video_device_id . isNull ()) { return false ; } //Sava binding info if ( ! SaveDeviceBindingInfo ( device_mac , video_device_id )) { return false ; } //updata column is_binded colnames . clear (); colnames << \"is_binded\" ; values . clear (); values << \"1\" ; QString sql_where = QString ( \"WHERE device_mac='%1'\" ). arg ( device_mac ); if ( ! UpdateConsoleDeviceInfo ( colnames , values , sql_where )) { return false ; } return true ; } bool DataBaseController :: InsertConsoleDeviceInfo ( const QStringList & column_names , const QStringList & values ) { DataBaseManager database_ptr ( m_databasehelper ); QString error_info ; if ( ! database_ptr -> InsertData ( \"console_device\" , column_names , values )) { error_info = database_ptr -> GetErrorString (); return false ; } else { qDebug () << \"insert ok\" ; } return true ; } bool DataBaseController :: UpdateConsoleDeviceInfo ( const QStringList & column_names , const QStringList & values , const QString & sql_where ) { DataBaseManager database_ptr ( m_databasehelper ); QString error_info ; if ( ! database_ptr -> UpdateData ( \"console_device\" , column_names , values , sql_where )) { error_info = database_ptr -> GetErrorString (); return false ; } else { qDebug () << \"update ok\" ; } return true ; } QList < QHash < QString , QVariant >> DataBaseController :: QueryDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ) { Q_UNUSED ( video_device_id ); QList < QHash < QString , QVariant >> data ; DataBaseManager database_ptr ( m_databasehelper ); QStringList columns ; columns << \"id\" << \"console_device_mac\" << \"video_device_id\" << \"is_deleted\" ; QString sql_where = QString ( \"WHERE console_device_mac = '%1'\" ). arg ( console_device_mac ); database_ptr -> QueryData ( \"device_binding\" , columns , sql_where , & data ); return data ; } bool DataBaseController :: SaveDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ) { QList < QHash < QString , QVariant >> data = QueryDeviceBindingInfo ( console_device_mac , video_device_id ); if ( data . isEmpty ()) { //insert return InsertDeviceBindingInfo ( console_device_mac , video_device_id ); } else { //update return UpdateDeviceBindingInfo ( console_device_mac , video_device_id ); } return true ; } bool DataBaseController :: InsertDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ) { QStringList column_names ; column_names << \"console_device_mac\" << \"video_device_id\" ; QStringList values ; values << \"'\" + console_device_mac + \"'\" << \"'\" + video_device_id ; DataBaseManager database_ptr ( m_databasehelper ); QString error_info ; if ( ! database_ptr -> InsertData ( \"device_binding\" , column_names , values )) { error_info = database_ptr -> GetErrorString (); return false ; } return true ; } bool DataBaseController :: UpdateDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ) { QStringList column_names ; column_names << \"video_device_id\" << \"is_deleted\" ; QStringList values ; values << \"'\" + video_device_id + \"'\" << \"0\" ; QString sql_where = QString ( \"WHERE console_device_mac = '%1'\" ). arg ( console_device_mac ); DataBaseManager database_ptr ( m_databasehelper ); QString error_info ; if ( ! database_ptr -> UpdateData ( \"device_binding\" , column_names , values , sql_where )) { error_info = database_ptr -> GetErrorString (); return false ; } return true ; }","title":"Database controller.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/database_controller.h/","text":"#ifndef DATABASECONTROLLER_H #define DATABASECONTROLLER_H #include \"databasehelper.h\" class DataBaseController { public : static DataBaseController & GetInstance (); /***************************************************************************** * @brief \u6839\u636emac\u67e5\u8be2\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @param [mac] \u4e3b\u7aef\u8bbe\u5907mac * @returns \u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f\u5217\u8868 *****************************************************************************/ QList < QHash < QString , QVariant >> QueryConsoleDeviceInfo ( const QString & mac ); /***************************************************************************** * @brief \u4fdd\u5b58\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f\uff0c\u8868\u4e2d\u5df2\u6709\u4fe1\u606f\u5219\u66f4\u65b0\u4e4b\uff0c\u65e0\u5219\u63d2\u5165\u4fe1\u606f * @param [hospital] \u8bbe\u5907\u6240\u5728\u533b\u9662 * @param [platform] \u8bbe\u5907\u5e73\u53f0 * @param [device_name] \u8bbe\u5907\u540d\u79f0 * @param [video_device_id] \u89c6\u9891\u8bbe\u5907\u53f7 * @param [device_ip] \u8bbe\u5907IP * @param [device_mac] \u8bbe\u5907MAC * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool SaveConsoleDeviceInfo ( const QString & hospital , const QString & platform , const QString & device_name , const QString & video_device_id , const QString & device_ip , const QString & device_mac ); /***************************************************************************** * @brief \u6839\u636e\u4e3b\u7aefmac\u548c\u89c6\u9891\u8bbe\u5907\u53f7\u67e5\u8be2\u8bbe\u5907\u7ed1\u5b9a\u4fe1\u606f * @param [console_device_mac] \u4e3b\u7aef\u8bbe\u5907mac * @param [video_device_id] \u89c6\u9891\u8bbe\u5907\u53f7 * @returns \u8bbe\u5907\u7ed1\u5b9a\u4fe1\u606f\u5217\u8868 *****************************************************************************/ QList < QHash < QString , QVariant >> QueryDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ); /***************************************************************************** * @brief \u4fdd\u5b58\u8bbe\u5907\u7ed1\u5b9a\u4fe1\u606f\uff0c\u8868\u4e2d\u5df2\u6709\u4fe1\u606f\u5219\u66f4\u65b0\u4e4b\uff0c\u65e0\u5219\u63d2\u5165\u4fe1\u606f * @param [console_device_mac] \u4e3b\u7aef\u8bbe\u5907mac * @param [video_device_id] \u89c6\u9891\u8bbe\u5907\u53f7 * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool SaveDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ); private : DataBaseController (); ~ DataBaseController (); /***************************************************************************** * @brief \u68c0\u67e5\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u6587\u4ef6\u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u4e4b * @param [path] \u6570\u636e\u5e93\u6587\u4ef6\u76ee\u5f55 * @param [name] \u6570\u636e\u5e93\u6587\u4ef6\u540d\u79f0 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CheckDataBase ( const QString & path , const QString & name ); /***************************************************************************** * @brief \u521d\u59cb\u5316\u6570\u636e\u5e93\uff0c\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u8868 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool InitDataBase (); /***************************************************************************** * @brief \u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u8868 * @param [table_name] \u8868\u540d\u79f0 * @param [column_names] \u5217\u540d\u79f0 * @param [column_types] \u5217\u5b9a\u4e49\u5217\u8868 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CreateDataBaseTable ( const QString & table_name , const QStringList & column_names , const QStringList & column_types ); /***************************************************************************** * @brief \u521b\u5efa\u4e3b\u7aef\u4fe1\u606f\u8868 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CreateConsoleDeviceTable (); /***************************************************************************** * @brief \u521b\u5efa\u7ed1\u5b9a\u5173\u7cfb\u8868 * @returns \u6210\u529f\u8fd4\u56de true *****************************************************************************/ bool CreateDeviceBingdingTable (); /***************************************************************************** * @brief \u65b0\u589e\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @param [column_names] \u5b57\u6bb5\u5217\u8868 * @param [values] \u503c\u5217\u8868 * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool InsertConsoleDeviceInfo ( const QStringList & column_names , const QStringList & values ); /***************************************************************************** * @brief \u66f4\u65b0\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @param [column_names] \u5b57\u6bb5\u5217\u8868 * @param [values] \u503c\u5217\u8868 * @param [sql_where] SQL\u6761\u4ef6\u8bed\u53e5 * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool UpdateConsoleDeviceInfo ( const QStringList & column_names , const QStringList & values , const QString & sql_where ); /***************************************************************************** * @brief \u65b0\u589e\u8bbe\u5907\u7ed1\u5b9a\u4fe1\u606f * @param [console_device_mac] \u4e3b\u7aef\u8bbe\u5907mac * @param [video_device_id] \u89c6\u9891\u8bbe\u5907\u53f7 * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool InsertDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ); /***************************************************************************** * @brief \u66f4\u65b0\u8bbe\u5907\u7ed1\u5b9a\u4fe1\u606f * @param [console_device_mac] \u4e3b\u7aef\u8bbe\u5907mac * @param [video_device_id] \u89c6\u9891\u8bbe\u5907\u53f7 * @returns \u6210\u529f\u8fd4\u56detrue *****************************************************************************/ bool UpdateDeviceBindingInfo ( const QString & console_device_mac , const QString & video_device_id ); private : class DataBaseManager { public : explicit DataBaseManager ( DataBaseHelper * database_helper ) : m_ptr ( database_helper ) { if ( nullptr != m_ptr ) { m_ptr -> OpenDataBase (); } } ~ DataBaseManager () { if ( nullptr != m_ptr ) { m_ptr -> CloseDataBase (); } } DataBaseHelper * operator -> () { return m_ptr ; } private : DataBaseHelper * m_ptr { nullptr }; }; DataBaseHelper * m_databasehelper { nullptr }; bool m_init_database { false }; }; #endif // DATABASECONTROLLER_H","title":"Database controller.h"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/main.cpp/","text":"#include <QDebug> #include \"httpserver.h\" #include \"requestmapper.h\" #include \"databasecontroller.h\" using namespace abrobohttpsevers ; int main ( int argc , char * argv []) { QCoreApplication app ( argc , argv ); app . setOrganizationName ( \"Abrobo\" ); app . setApplicationName ( \"HttpDemo\" ); //======================================================== //DataBaseController::GetInstance().CreateDeviceTable(); //DataBaseController::GetInstance().UpdateData(); //DataBaseController::GetInstance().DataBaseTest(); //======================================================== // Collect hardcoded configarion settings QSettings * settings = new QSettings ( & app ); // settings->setValue(\"Host\",\"192.168.3.33\"); settings -> setValue ( \"Port\" , \"8888\" ); settings -> setValue ( \"MinThreads\" , \"4\" ); settings -> setValue ( \"MaxThreads\" , \"100\" ); settings -> setValue ( \"CleanupInterval\" , \"60000\" ); settings -> setValue ( \"ReadTimeOut\" , \"60000\" ); settings -> setValue ( \"MaxRequestSize\" , \"16000\" ); settings -> setValue ( \"MaxMultiPartSize\" , \"10000000\" ); //\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f HttpServer * m_httpderver = new HttpServer ( settings , new RequestMapper ( & app ), & app ); Q_UNUSED ( m_httpderver ); qDebug () << \"Main Thread ID: \" << QThread :: currentThreadId (); return app . exec (); }","title":"Main.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/request_mapper.cpp/","text":"#include <QJsonObject> #include <QJsonDocument> #include <QJsonArray> #include \"requestmapper.h\" #include \"databasecontroller.h\" RequestMapper :: RequestMapper ( QObject * parent ) : HttpRequestHandler ( parent ) { qDebug ( \"RequestMapper: created\" ); } RequestMapper ::~ RequestMapper () { qDebug ( \"RequestMapper: deleted\" ); } void RequestMapper :: Service ( HttpRequest & request , HttpResponse & response ) { QByteArray path = request . GetPath (); qDebug ( \"RequestMapper: path=%s\" , path . data ()); qDebug ( \"HttpRequestHandler: request=%s %s %s\" , request . GetMethod (). data (), request . GetPath (). data (), request . GetVersion (). data ()); if ( path . startsWith ( \"/api/query\" )) { //Query(request, response); QueryConsoleDeviceInfo ( request , response ); } else if ( path . startsWith ( \"/api/save\" )) { // SaveConsoleDeviceInfo ( request , response ); } qDebug ( \"RequestMapper: finished request\" ); } QByteArray RequestMapper :: GenerateResponMsg ( int code , const QString & msg , const QJsonObject & data ) { QJsonObject json ; json . insert ( \"code\" , code ); json . insert ( \"msg\" , msg ); json . insert ( \"data\" , data ); QJsonDocument doc ; doc . setObject ( json ); return doc . toJson ( QJsonDocument :: Compact ); } void RequestMapper :: Query ( HttpRequest & request , HttpResponse & response ) { Q_UNUSED ( request ); QJsonObject json ; QJsonArray data ; response . SetHeader ( \"Connection\" , \"close\" ); json . insert ( \"code\" , 0 ); json . insert ( \"msg\" , \"ok\" ); QList < QHash < QString , QVariant >> info = DataBaseController :: GetInstance (). QueryConsoleDeviceInfo ( \"test mac\" ); if ( info . size () > 0 ) { for ( int i = 0 ; i < info . size (); i ++ ) { auto it = info . at ( i ). constBegin (); QJsonObject row_data ; for (; it != info . at ( i ). constEnd (); ++ it ) { if ( \"id\" == it . key () || \"is_binded\" == it . key ()) { row_data . insert ( it . key (), it . value (). toInt ()); } else { row_data . insert ( it . key (), it . value (). toString ()); } } data . append ( row_data ); } } json . insert ( \"data\" , data ); QJsonDocument document ; document . setObject ( json ); QByteArray byteArray = document . toJson ( QJsonDocument :: Compact ); response . Write ( byteArray , true ); } void RequestMapper :: QueryConsoleDeviceInfo ( HttpRequest & request , HttpResponse & response ) { int status_code = 100 ; QString status_msg = \"query device info ok\" ; QJsonObject data ; response . SetHeader ( \"Connection\" , \"close\" ); QString console_mac = request . GetParameter ( \"mac\" ); QList < QHash < QString , QVariant >> info = DataBaseController :: GetInstance (). QueryConsoleDeviceInfo ( console_mac ); if ( info . size () > 0 ) { //\u5e94\u8be5\u53ea\u6709\u4e00\u6761\u6570\u636e data . insert ( \"hospital\" , info . first (). value ( \"hospital\" ). toString ()); data . insert ( \"device_name\" , info . first (). value ( \"device_name\" ). toString ()); if ( 1 == info . first (). value ( \"is_binded\" ). toInt ()) { data . insert ( \"binded\" , true ); QList < QHash < QString , QVariant >> binding_info = DataBaseController :: GetInstance (). QueryDeviceBindingInfo ( console_mac , \"\" ); data . insert ( \"video_device_id\" , binding_info . first (). value ( \"video_device_id\" ). toString ()); } else { data . insert ( \"binded\" , false ); status_code = 102 ; status_msg = \"device is not binded\" ; } } else { status_code = 101 ; status_msg = \"no device info\" ; } QByteArray byteArray = GenerateResponMsg ( status_code , status_msg , data ); response . Write ( byteArray , true ); } void RequestMapper :: SaveConsoleDeviceInfo ( HttpRequest & request , HttpResponse & response ) { int status_code = 200 ; QString status_msg = \"save device info ok\" ; QJsonObject data ; response . SetHeader ( \"Connection\" , \"close\" ); QString hospital = request . GetParameter ( \"hospital\" ); QString device_name = request . GetParameter ( \"device-name\" ); QString video_device_id = request . GetParameter ( \"video-device-id\" ); QString mac = request . GetParameter ( \"mac\" ); auto address = request . GetPeerAddress (); if ( ! DataBaseController :: GetInstance (). SaveConsoleDeviceInfo ( hospital , \"\" , device_name , video_device_id , request . GetPeerAddress (). toString (), mac )) { status_code = 201 ; status_msg = \"failed to save device info\" ; } QByteArray byteArray = GenerateResponMsg ( status_code , status_msg , data ); response . Write ( byteArray , true ); }","title":"Request mapper.cpp"},{"location":"Programming/03.%20Qt/%E5%9F%BA%E4%BA%8E%20Qt%20%E7%9A%84%20HTTP%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/ServerDemo/request_mapper.h/","text":"#ifndef REQUESTMAPPER_H #define REQUESTMAPPER_H #include \"httprequesthandler.h\" using namespace abrobohttpsevers ; class RequestMapper : public HttpRequestHandler { Q_OBJECT Q_DISABLE_COPY ( RequestMapper ) public : /* Constructor. @param parent Parent object */ RequestMapper ( QObject * parent = 0 ); /* Destructor. */ ~ RequestMapper (); /* Dispatch incoming HTTP requests to different controllers depending on the URL. @param request The received HTTP request @param response Must be used to return the response */ void Service ( HttpRequest & request , HttpResponse & response ); private : QByteArray GenerateResponMsg ( int code , const QString & msg , const QJsonObject & data ); /***************************************************************************** * @brief \u67e5\u8be2\u6240\u6709\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @returns \u65e0 *****************************************************************************/ void Query ( HttpRequest & request , HttpResponse & response ); /***************************************************************************** * @brief \u67e5\u8be2\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @returns \u65e0 *****************************************************************************/ void QueryConsoleDeviceInfo ( HttpRequest & request , HttpResponse & response ); /***************************************************************************** * @brief \u67e5\u8be2\u4e3b\u7aef\u8bbe\u5907\u4fe1\u606f * @returns \u65e0 *****************************************************************************/ void SaveConsoleDeviceInfo ( HttpRequest & request , HttpResponse & response ); }; #endif // REQUESTMAPPER_H","title":"Request mapper.h"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/00.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B/","text":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219 \u603b\u539f\u5219\uff1a\u5f00\u95ed\u539f\u5219\uff08Open Close Principle\uff09 \u5f00\u95ed\u539f\u5219\u5c31\u662f\u8bf4\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\u5728\u7a0b\u5e8f\u9700\u8981\u8fdb\u884c\u62d3\u5c55\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u53bb\u4fee\u6539\u539f\u6709\u7684\u4ee3\u7801\uff0c\u800c\u662f\u8981\u6269\u5c55\u539f\u6709\u4ee3\u7801\uff0c\u5b9e\u73b0\u4e00\u4e2a\u70ed\u63d2\u62d4\u7684\u6548\u679c\u3002\u6240\u4ee5\u4e00\u53e5\u8bdd\u6982\u62ec\u5c31\u662f\uff1a\u4e3a\u4e86\u4f7f\u7a0b\u5e8f\u7684\u6269\u5c55\u6027\u597d\uff0c\u6613\u4e8e\u7ef4\u62a4\u548c\u5347\u7ea7\u3002 \u60f3\u8981\u8fbe\u5230\u8fd9\u6837\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u7b49\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219 \u4e0d\u8981\u5b58\u5728\u591a\u4e8e\u4e00\u4e2a\u5bfc\u81f4\u7c7b\u53d8\u66f4\u7684\u539f\u56e0\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u7c7b\u5e94\u8be5\u5b9e\u73b0\u5355\u4e00\u7684\u804c\u8d23\uff0c\u5982\u82e5\u4e0d\u7136\uff0c\u5c31\u5e94\u8be5\u628a\u7c7b\u62c6\u5206\u3002 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08Liskov Substitution Principle\uff09 \u91cc\u6c0f\u4ee3\u6362\u539f\u5219\uff08Liskov Substitution Principle, LSP\uff09\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u57fa\u672c\u539f\u5219\u4e4b\u4e00\u3002 \u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u4e2d\u8bf4\uff0c\u4efb\u4f55\u57fa\u7c7b\u53ef\u4ee5\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u5b50\u7c7b\u4e00\u5b9a\u53ef\u4ee5\u51fa\u73b0\u3002 LSP \u662f\u7ee7\u627f\u590d\u7528\u7684\u57fa\u77f3\uff0c\u53ea\u6709\u5f53\u884d\u751f\u7c7b\u53ef\u4ee5\u66ff\u6362\u6389\u57fa\u7c7b\uff0c\u8f6f\u4ef6\u5355\u4f4d\u7684\u529f\u80fd\u4e0d\u53d7\u5230\u5f71\u54cd\u65f6\uff0c\u57fa\u7c7b\u624d\u80fd\u771f\u6b63\u88ab\u590d\u7528\uff0c\u800c\u884d\u751f\u7c7b\u4e5f\u80fd\u591f\u5728\u57fa\u7c7b\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u65b0\u7684\u884c\u4e3a\u3002\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u662f\u5bf9\u201c\u5f00-\u95ed\u201d\u539f\u5219\u7684\u8865\u5145\u3002 \u5b9e\u73b0\u201c\u5f00-\u95ed\u201d\u539f\u5219\u7684\u5173\u952e\u6b65\u9aa4\u5c31\u662f\u62bd\u8c61\u5316\u3002 \u800c\u57fa\u7c7b\u4e0e\u5b50\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u5c31\u662f\u62bd\u8c61\u5316\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u6240\u4ee5\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u662f\u5bf9\u5b9e\u73b0\u62bd\u8c61\u5316\u7684\u5177\u4f53\u6b65\u9aa4\u7684\u89c4\u8303\u3002 \u5386\u53f2\u66ff\u6362\u539f\u5219\u4e2d\uff0c\u5b50\u7c7b\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u5c3d\u91cf\u4e0d\u8981\u91cd\u5199\u548c\u91cd\u8f7d\u3002\u56e0\u4e3a\u7236\u7c7b\u4ee3\u8868\u4e86\u5b9a\u4e49\u597d\u7684\u7ed3\u6784\uff0c\u901a\u8fc7\u8fd9\u4e2a\u89c4\u8303\u7684\u63a5\u53e3\u4e0e\u5916\u754c\u4ea4\u4e92\uff0c\u5b50\u7c7b\u4e0d\u5e94\u8be5\u968f\u4fbf\u7834\u574f\u5b83\u3002 \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\uff08Dependence Inversion Principle\uff09 \u8fd9\u4e2a\u662f\u5f00\u95ed\u539f\u5219\u7684\u57fa\u7840\uff0c\u5177\u4f53\u5185\u5bb9\uff1a \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u4f9d\u8d56\u4e8e\u62bd\u8c61\u800c\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53 \u3002\u5199\u4ee3\u7801\u65f6\u7528\u5230\u5177\u4f53\u7c7b\u65f6\uff0c\u4e0d\u4e0e\u5177\u4f53\u7c7b\u4ea4\u4e92\uff0c\u800c\u4e0e\u5177\u4f53\u7c7b\u7684\u4e0a\u5c42\u63a5\u53e3\u4ea4\u4e92\u3002 \u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08Interface Segregation Principle\uff09 \u8fd9\u4e2a\u539f\u5219\u7684\u610f\u601d\u662f\uff1a\u6bcf\u4e2a\u63a5\u53e3\u4e2d\u4e0d\u5b58\u5728\u5b50\u7c7b\u7528\u4e0d\u5230\u5374\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u7136\uff0c\u5c31\u8981\u5c06\u63a5\u53e3\u62c6\u5206\u3002\u4f7f\u7528\u591a\u4e2a\u9694\u79bb\u7684\u63a5\u53e3\uff0c\u6bd4\u4f7f\u7528\u5355\u4e2a\u63a5\u53e3\uff08\u591a\u4e2a\u63a5\u53e3\u65b9\u6cd5\u96c6\u5408\u5230\u4e00\u4e2a\u7684\u63a5\u53e3\uff09\u8981\u597d\u3002 \u8fea\u7c73\u7279\u6cd5\u5219\uff08\u6700\u5c11\u77e5\u9053\u539f\u5219\uff09\uff08Demeter Principle\uff09 \u5c31\u662f\u8bf4\uff1a\u4e00\u4e2a\u7c7b\u5bf9\u81ea\u5df1\u4f9d\u8d56\u7684\u7c7b\u77e5\u9053\u7684\u8d8a\u5c11\u8d8a\u597d\u3002\u4e5f\u5c31\u662f\u8bf4\u65e0\u8bba\u88ab\u4f9d\u8d56\u7684\u7c7b\u591a\u4e48\u590d\u6742\uff0c\u90fd\u5e94\u8be5\u5c06\u903b\u8f91\u5c01\u88c5\u5728\u65b9\u6cd5\u7684\u5185\u90e8\uff0c\u901a\u8fc7 public \u65b9\u6cd5\u63d0\u4f9b\u7ed9\u5916\u90e8\u3002\u8fd9\u6837\u5f53\u88ab\u4f9d\u8d56\u7684\u7c7b\u53d8\u5316\u65f6\uff0c\u624d\u80fd\u6700\u5c0f\u7684\u5f71\u54cd\u8be5\u7c7b\u3002 \u6700\u5c11\u77e5\u9053\u539f\u5219\u7684\u53e6\u4e00\u4e2a\u8868\u8fbe\u65b9\u5f0f\u662f\uff1a\u53ea\u4e0e\u76f4\u63a5\u7684\u670b\u53cb\u901a\u4fe1\u3002\u7c7b\u4e4b\u95f4\u53ea\u8981\u6709\u8026\u5408\u5173\u7cfb\uff0c\u5c31\u53eb\u670b\u53cb\u5173\u7cfb\u3002\u8026\u5408\u5206\u4e3a\u4f9d\u8d56\u3001\u5173\u8054\u3001\u805a\u5408\u3001\u7ec4\u5408\u7b49\u3002\u6211\u4eec\u79f0\u51fa\u73b0\u4e3a\u6210\u5458\u53d8\u91cf\u3001\u65b9\u6cd5\u53c2\u6570\u3001\u65b9\u6cd5\u8fd4\u56de\u503c\u4e2d\u7684\u7c7b\u4e3a\u76f4\u63a5\u670b\u53cb\u3002\u5c40\u90e8\u53d8\u91cf\u3001\u4e34\u65f6\u53d8\u91cf\u5219\u4e0d\u662f\u76f4\u63a5\u7684\u670b\u53cb\u3002\u6211\u4eec\u8981\u6c42\u964c\u751f\u7684\u7c7b\u4e0d\u8981\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u51fa\u73b0\u5728\u7c7b\u4e2d\u3002 \u5408\u6210\u590d\u7528\u539f\u5219\uff08Composite Reuse Principle\uff09 \u539f\u5219\u662f\u5c3d\u91cf\u9996\u5148\u4f7f\u7528\u5408\u6210/\u805a\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7ee7\u627f\u3002 \u603b\u4f53\u6765\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\u5206\u4e3a\u4e09\u5927\u7c7b\uff1a \u521b\u5efa\u578b\u6a21\u5f0f \u5de5\u5382\u6a21\u5f0f\uff08Factory Pattern\uff09\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff08Abstract Factory Pattern\uff09\u3001\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u3001\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\u3001\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09 \u7ed3\u6784\u578b\u6a21\u5f0f \u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\u3001\u6865\u63a5\u6a21\u5f0f\uff08Bridge Pattern\uff09\u3001\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter\u3001Criteria Pattern\uff09\u3001\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\u3001\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u3001\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\u3001\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\u3001\u4ee3\u7406\u6a21\u5f0f\uff08Proxy Pattern\uff09 \u884c\u4e3a\u578b\u6a21\u5f0f \u8d23\u4efb\u94fe\u6a21\u5f0f\uff08Chain of Responsibility Pattern\uff09\u3001\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\u3001\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter Pattern\uff09\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\uff08Iterator Pattern\uff09\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\uff08Memento Pattern\uff09\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\uff08Observer Pattern\uff09\u3001\u72b6\u6001\u6a21\u5f0f\uff08State Pattern\uff09\u3001\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff08Null Object Pattern\uff09\u3001\u7b56\u7565\u6a21\u5f0f\uff08Strategy Pattern\uff09\u3001\u6a21\u677f\u6a21\u5f0f\uff08Template Pattern\uff09\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\uff08Visitor Pattern\uff09 [[01. \u5355\u4f8b\u6a21\u5f0f]] [[02. \u89c2\u5bdf\u8005\u6a21\u5f0f]] [[04. \u88c5\u9970\u5668\u6a21\u5f0f]] [[05. \u5de5\u5382\u6a21\u5f0f]] [[06. \u7b56\u7565\u6a21\u5f0f]] [[07. \u547d\u4ee4\u6a21\u5f0f]] [[08. \u5efa\u9020\u8005\u6a21\u5f0f]] [[09. \u539f\u578b\u6a21\u5f0f]] [[10. \u9002\u914d\u5668\u6a21\u5f0f]] [[11. \u6865\u63a5\u6a21\u5f0f]] [[12. \u8fc7\u6ee4\u5668\u6a21\u5f0f]] [[13. \u7ec4\u5408\u6a21\u5f0f]] [[14. \u5916\u89c2\u6a21\u5f0f]] [[15. \u4eab\u5143\u6a21\u5f0f]] [[16. \u4ee3\u7406\u6a21\u5f0f]] [[17. \u8d23\u4efb\u94fe\u6a21\u5f0f]] [[18. \u89e3\u91ca\u5668\u6a21\u5f0f]] [[19. \u4e2d\u4ecb\u8005\u6a21\u5f0f]] [[20. \u5907\u5fd8\u5f55\u6a21\u5f0f]] [[21. \u72b6\u6001\u6a21\u5f0f]] [[22. \u8bbf\u95ee\u8005\u6a21\u5f0f]]","title":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/00.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AE%80%E4%BB%8B/#_1","text":"\u603b\u539f\u5219\uff1a\u5f00\u95ed\u539f\u5219\uff08Open Close Principle\uff09 \u5f00\u95ed\u539f\u5219\u5c31\u662f\u8bf4\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\u5728\u7a0b\u5e8f\u9700\u8981\u8fdb\u884c\u62d3\u5c55\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u53bb\u4fee\u6539\u539f\u6709\u7684\u4ee3\u7801\uff0c\u800c\u662f\u8981\u6269\u5c55\u539f\u6709\u4ee3\u7801\uff0c\u5b9e\u73b0\u4e00\u4e2a\u70ed\u63d2\u62d4\u7684\u6548\u679c\u3002\u6240\u4ee5\u4e00\u53e5\u8bdd\u6982\u62ec\u5c31\u662f\uff1a\u4e3a\u4e86\u4f7f\u7a0b\u5e8f\u7684\u6269\u5c55\u6027\u597d\uff0c\u6613\u4e8e\u7ef4\u62a4\u548c\u5347\u7ea7\u3002 \u60f3\u8981\u8fbe\u5230\u8fd9\u6837\u7684\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u7b49\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219 \u4e0d\u8981\u5b58\u5728\u591a\u4e8e\u4e00\u4e2a\u5bfc\u81f4\u7c7b\u53d8\u66f4\u7684\u539f\u56e0\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u7c7b\u5e94\u8be5\u5b9e\u73b0\u5355\u4e00\u7684\u804c\u8d23\uff0c\u5982\u82e5\u4e0d\u7136\uff0c\u5c31\u5e94\u8be5\u628a\u7c7b\u62c6\u5206\u3002 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08Liskov Substitution Principle\uff09 \u91cc\u6c0f\u4ee3\u6362\u539f\u5219\uff08Liskov Substitution Principle, LSP\uff09\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u57fa\u672c\u539f\u5219\u4e4b\u4e00\u3002 \u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u4e2d\u8bf4\uff0c\u4efb\u4f55\u57fa\u7c7b\u53ef\u4ee5\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u5b50\u7c7b\u4e00\u5b9a\u53ef\u4ee5\u51fa\u73b0\u3002 LSP \u662f\u7ee7\u627f\u590d\u7528\u7684\u57fa\u77f3\uff0c\u53ea\u6709\u5f53\u884d\u751f\u7c7b\u53ef\u4ee5\u66ff\u6362\u6389\u57fa\u7c7b\uff0c\u8f6f\u4ef6\u5355\u4f4d\u7684\u529f\u80fd\u4e0d\u53d7\u5230\u5f71\u54cd\u65f6\uff0c\u57fa\u7c7b\u624d\u80fd\u771f\u6b63\u88ab\u590d\u7528\uff0c\u800c\u884d\u751f\u7c7b\u4e5f\u80fd\u591f\u5728\u57fa\u7c7b\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u65b0\u7684\u884c\u4e3a\u3002\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u662f\u5bf9\u201c\u5f00-\u95ed\u201d\u539f\u5219\u7684\u8865\u5145\u3002 \u5b9e\u73b0\u201c\u5f00-\u95ed\u201d\u539f\u5219\u7684\u5173\u952e\u6b65\u9aa4\u5c31\u662f\u62bd\u8c61\u5316\u3002 \u800c\u57fa\u7c7b\u4e0e\u5b50\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u5c31\u662f\u62bd\u8c61\u5316\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u6240\u4ee5\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\u662f\u5bf9\u5b9e\u73b0\u62bd\u8c61\u5316\u7684\u5177\u4f53\u6b65\u9aa4\u7684\u89c4\u8303\u3002 \u5386\u53f2\u66ff\u6362\u539f\u5219\u4e2d\uff0c\u5b50\u7c7b\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u5c3d\u91cf\u4e0d\u8981\u91cd\u5199\u548c\u91cd\u8f7d\u3002\u56e0\u4e3a\u7236\u7c7b\u4ee3\u8868\u4e86\u5b9a\u4e49\u597d\u7684\u7ed3\u6784\uff0c\u901a\u8fc7\u8fd9\u4e2a\u89c4\u8303\u7684\u63a5\u53e3\u4e0e\u5916\u754c\u4ea4\u4e92\uff0c\u5b50\u7c7b\u4e0d\u5e94\u8be5\u968f\u4fbf\u7834\u574f\u5b83\u3002 \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\uff08Dependence Inversion Principle\uff09 \u8fd9\u4e2a\u662f\u5f00\u95ed\u539f\u5219\u7684\u57fa\u7840\uff0c\u5177\u4f53\u5185\u5bb9\uff1a \u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u4f9d\u8d56\u4e8e\u62bd\u8c61\u800c\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53 \u3002\u5199\u4ee3\u7801\u65f6\u7528\u5230\u5177\u4f53\u7c7b\u65f6\uff0c\u4e0d\u4e0e\u5177\u4f53\u7c7b\u4ea4\u4e92\uff0c\u800c\u4e0e\u5177\u4f53\u7c7b\u7684\u4e0a\u5c42\u63a5\u53e3\u4ea4\u4e92\u3002 \u63a5\u53e3\u9694\u79bb\u539f\u5219\uff08Interface Segregation Principle\uff09 \u8fd9\u4e2a\u539f\u5219\u7684\u610f\u601d\u662f\uff1a\u6bcf\u4e2a\u63a5\u53e3\u4e2d\u4e0d\u5b58\u5728\u5b50\u7c7b\u7528\u4e0d\u5230\u5374\u5fc5\u987b\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u7136\uff0c\u5c31\u8981\u5c06\u63a5\u53e3\u62c6\u5206\u3002\u4f7f\u7528\u591a\u4e2a\u9694\u79bb\u7684\u63a5\u53e3\uff0c\u6bd4\u4f7f\u7528\u5355\u4e2a\u63a5\u53e3\uff08\u591a\u4e2a\u63a5\u53e3\u65b9\u6cd5\u96c6\u5408\u5230\u4e00\u4e2a\u7684\u63a5\u53e3\uff09\u8981\u597d\u3002 \u8fea\u7c73\u7279\u6cd5\u5219\uff08\u6700\u5c11\u77e5\u9053\u539f\u5219\uff09\uff08Demeter Principle\uff09 \u5c31\u662f\u8bf4\uff1a\u4e00\u4e2a\u7c7b\u5bf9\u81ea\u5df1\u4f9d\u8d56\u7684\u7c7b\u77e5\u9053\u7684\u8d8a\u5c11\u8d8a\u597d\u3002\u4e5f\u5c31\u662f\u8bf4\u65e0\u8bba\u88ab\u4f9d\u8d56\u7684\u7c7b\u591a\u4e48\u590d\u6742\uff0c\u90fd\u5e94\u8be5\u5c06\u903b\u8f91\u5c01\u88c5\u5728\u65b9\u6cd5\u7684\u5185\u90e8\uff0c\u901a\u8fc7 public \u65b9\u6cd5\u63d0\u4f9b\u7ed9\u5916\u90e8\u3002\u8fd9\u6837\u5f53\u88ab\u4f9d\u8d56\u7684\u7c7b\u53d8\u5316\u65f6\uff0c\u624d\u80fd\u6700\u5c0f\u7684\u5f71\u54cd\u8be5\u7c7b\u3002 \u6700\u5c11\u77e5\u9053\u539f\u5219\u7684\u53e6\u4e00\u4e2a\u8868\u8fbe\u65b9\u5f0f\u662f\uff1a\u53ea\u4e0e\u76f4\u63a5\u7684\u670b\u53cb\u901a\u4fe1\u3002\u7c7b\u4e4b\u95f4\u53ea\u8981\u6709\u8026\u5408\u5173\u7cfb\uff0c\u5c31\u53eb\u670b\u53cb\u5173\u7cfb\u3002\u8026\u5408\u5206\u4e3a\u4f9d\u8d56\u3001\u5173\u8054\u3001\u805a\u5408\u3001\u7ec4\u5408\u7b49\u3002\u6211\u4eec\u79f0\u51fa\u73b0\u4e3a\u6210\u5458\u53d8\u91cf\u3001\u65b9\u6cd5\u53c2\u6570\u3001\u65b9\u6cd5\u8fd4\u56de\u503c\u4e2d\u7684\u7c7b\u4e3a\u76f4\u63a5\u670b\u53cb\u3002\u5c40\u90e8\u53d8\u91cf\u3001\u4e34\u65f6\u53d8\u91cf\u5219\u4e0d\u662f\u76f4\u63a5\u7684\u670b\u53cb\u3002\u6211\u4eec\u8981\u6c42\u964c\u751f\u7684\u7c7b\u4e0d\u8981\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u51fa\u73b0\u5728\u7c7b\u4e2d\u3002 \u5408\u6210\u590d\u7528\u539f\u5219\uff08Composite Reuse Principle\uff09 \u539f\u5219\u662f\u5c3d\u91cf\u9996\u5148\u4f7f\u7528\u5408\u6210/\u805a\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7ee7\u627f\u3002 \u603b\u4f53\u6765\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\u5206\u4e3a\u4e09\u5927\u7c7b\uff1a \u521b\u5efa\u578b\u6a21\u5f0f \u5de5\u5382\u6a21\u5f0f\uff08Factory Pattern\uff09\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff08Abstract Factory Pattern\uff09\u3001\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u3001\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\u3001\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09 \u7ed3\u6784\u578b\u6a21\u5f0f \u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\u3001\u6865\u63a5\u6a21\u5f0f\uff08Bridge Pattern\uff09\u3001\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter\u3001Criteria Pattern\uff09\u3001\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\u3001\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u3001\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\u3001\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\u3001\u4ee3\u7406\u6a21\u5f0f\uff08Proxy Pattern\uff09 \u884c\u4e3a\u578b\u6a21\u5f0f \u8d23\u4efb\u94fe\u6a21\u5f0f\uff08Chain of Responsibility Pattern\uff09\u3001\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\u3001\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter Pattern\uff09\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\uff08Iterator Pattern\uff09\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\uff08Memento Pattern\uff09\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\uff08Observer Pattern\uff09\u3001\u72b6\u6001\u6a21\u5f0f\uff08State Pattern\uff09\u3001\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff08Null Object Pattern\uff09\u3001\u7b56\u7565\u6a21\u5f0f\uff08Strategy Pattern\uff09\u3001\u6a21\u677f\u6a21\u5f0f\uff08Template Pattern\uff09\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\uff08Visitor Pattern\uff09 [[01. \u5355\u4f8b\u6a21\u5f0f]] [[02. \u89c2\u5bdf\u8005\u6a21\u5f0f]] [[04. \u88c5\u9970\u5668\u6a21\u5f0f]] [[05. \u5de5\u5382\u6a21\u5f0f]] [[06. \u7b56\u7565\u6a21\u5f0f]] [[07. \u547d\u4ee4\u6a21\u5f0f]] [[08. \u5efa\u9020\u8005\u6a21\u5f0f]] [[09. \u539f\u578b\u6a21\u5f0f]] [[10. \u9002\u914d\u5668\u6a21\u5f0f]] [[11. \u6865\u63a5\u6a21\u5f0f]] [[12. \u8fc7\u6ee4\u5668\u6a21\u5f0f]] [[13. \u7ec4\u5408\u6a21\u5f0f]] [[14. \u5916\u89c2\u6a21\u5f0f]] [[15. \u4eab\u5143\u6a21\u5f0f]] [[16. \u4ee3\u7406\u6a21\u5f0f]] [[17. \u8d23\u4efb\u94fe\u6a21\u5f0f]] [[18. \u89e3\u91ca\u5668\u6a21\u5f0f]] [[19. \u4e2d\u4ecb\u8005\u6a21\u5f0f]] [[20. \u5907\u5fd8\u5f55\u6a21\u5f0f]] [[21. \u72b6\u6001\u6a21\u5f0f]] [[22. \u8bbf\u95ee\u8005\u6a21\u5f0f]]","title":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","text":"C++ \u5355\u4f8b\u6a21\u5f0f\u603b\u7ed3\u4e0e\u5256\u6790 \u5355\u4f8b\u53ef\u80fd\u662f\u6700\u5e38\u7528\u7684\u7b80\u5355\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b9e\u73b0\u65b9\u6cd5\u591a\u6837\uff0c\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u6709\u4e0d\u540c\u7684\u5199\u6cd5; \u540c\u65f6\u5355\u4f8b\u4e5f\u6709\u5176\u5c40\u9650\u6027\uff0c\u56e0\u6b64\u6709\u5f88\u591a\u4eba\u662f\u53cd\u5bf9\u4f7f\u7528\u5355\u4f8b\u7684\u3002\u672c\u6587\u5bf9 C++ \u5355\u4f8b\u7684\u5e38\u89c1\u5199\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e2a\u603b\u7ed3, \u5305\u62ec\u61d2\u6c49\u5f0f\u3001\u7ebf\u7a0b\u5b89\u5168\u3001\u5355\u4f8b\u6a21\u677f\u7b49\uff1b \u6309\u7167\u4ece\u7b80\u5355\u5230\u590d\u6742\uff0c\u6700\u7ec8\u56de\u5f52\u7b80\u5355\u7684\u7684\u65b9\u5f0f\u5faa\u5e8f\u6e10\u8fdb\u5730\u4ecb\u7ecd\uff0c\u5e76\u4e14\u5bf9\u5404\u79cd\u5b9e\u73b0\u65b9\u6cd5\u7684\u5c40\u9650\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u9610\u8ff0\uff0c\u5927\u91cf\u7528\u5230\u4e86 C++ 11 \u7684\u7279\u6027\u5982\u667a\u80fd\u6307\u9488, magic static\uff0c\u7ebf\u7a0b\u9501; \u4ece\u5934\u5230\u5c3e\u7406\u89e3\u4e0b\u6765\uff0c\u5bf9\u4e8e\u5b66\u4e60\u548c\u5de9\u56fa C++ \u8bed\u8a00\u7279\u6027\u8fd8\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002 \u4ec0\u4e48\u662f\u5355\u4f8b \u5355\u4f8b Singleton \u662f\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4e00\u79cd\uff0c\u5176\u7279\u70b9\u662f\u53ea\u63d0\u4f9b\u552f\u4e00\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b,\u5177\u6709\u5168\u5c40\u53d8\u91cf\u7684\u7279\u70b9\uff0c\u5728\u4efb\u4f55\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\u5230\u90a3\u4e2a\u552f\u4e00\u5b9e\u4f8b\u3002 \u5177\u4f53\u8fd0\u7528\u573a\u666f\u5982\uff1a \u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u8bbe\u5907\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u7ba1\u7406\u8bbe\u5907\u9a71\u52a8\uff1b \u6570\u636e\u6c60\uff0c\u7528\u6765\u7f13\u5b58\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u5728\u4e00\u5904\u5199\uff0c\u591a\u5904\u8bfb\u53d6\u6216\u8005\u591a\u5904\u5199\uff0c\u591a\u5904\u8bfb\u53d6\u3002 C++\u5355\u4f8b\u7684\u5b9e\u73b0 \u57fa\u7840\u8981\u70b9 \u5168\u5c40\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff1astatic \u7279\u6027\uff0c\u540c\u65f6\u7981\u6b62\u7528\u6237\u81ea\u5df1\u58f0\u660e\u5e76\u5b9a\u4e49\u5b9e\u4f8b\uff08\u628a\u6784\u9020\u51fd\u6570\u8bbe\u4e3a private\uff09 \u7ebf\u7a0b\u5b89\u5168 \u7981\u6b62\u8d4b\u503c\u548c\u62f7\u8d1d \u7528\u6237\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\u5b9e\u4f8b\uff1a\u4f7f\u7528 static \u7c7b\u6210\u5458\u51fd\u6570 C++ \u5b9e\u73b0\u5355\u4f8b\u7684\u51e0\u79cd\u65b9\u5f0f \u6709\u7f3a\u9677\u7684\u61d2\u6c49\u5f0f \u61d2\u6c49\u5f0f\uff08Lazy-Initialization\uff09\u7684\u65b9\u6cd5\u662f\u76f4\u5230\u4f7f\u7528\u65f6\u624d\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u4e5f\u5c31\u8bf4\u76f4\u5230\u8c03\u7528 get_instance() \u65b9\u6cd5\u7684\u65f6\u5019\u624d new \u4e00\u4e2a\u5355\u4f8b\u7684\u5bf9\u8c61\uff0c \u5982\u679c\u4e0d\u88ab\u8c03\u7528\u5c31\u4e0d\u4f1a\u5360\u7528\u5185\u5b58\u3002 #include <iostream> // version1: // with problems below: // 1. thread is not safe // 2. memory leak class Singleton { private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } Singleton ( Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Singleton * m_instance_ptr ; public : ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } static Singleton * get_instance (){ if ( m_instance_ptr == nullptr ){ m_instance_ptr = new Singleton ; } return m_instance_ptr ; } void use () const { std :: cout << \"in use\" << std :: endl ; } }; Singleton * Singleton :: m_instance_ptr = nullptr ; int main (){ Singleton * instance = Singleton :: get_instance (); Singleton * instance_2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7684\u7ed3\u679c\u662f constructor called ! \u53ef\u4ee5\u770b\u5230\uff0c\u83b7\u53d6\u4e86\u4e24\u6b21\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5374\u53ea\u6709\u4e00\u6b21\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u8868\u660e\u53ea\u751f\u6210\u4e86\u552f\u4e00\u5b9e\u4f8b\uff0c\u8fd9\u662f\u4e2a\u6700\u57fa\u7840\u7248\u672c\u7684\u5355\u4f8b\u5b9e\u73b0\uff0c\u4ed6\u6709\u54ea\u4e9b\u95ee\u9898\u5462\uff1f \u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\uff0c\u5f53\u591a\u7ebf\u7a0b\u83b7\u53d6\u5355\u4f8b\u65f6\u6709\u53ef\u80fd\u5f15\u53d1\u7ade\u6001\u6761\u4ef6\uff1a\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5728 if \u4e2d\u5224\u65ad m_instance_ptr \u662f\u7a7a\u7684\uff0c\u4e8e\u662f\u5f00\u59cb\u5b9e\u4f8b\u5316\u5355\u4f8b\uff1b\u540c\u65f6\u7b2c2\u4e2a\u7ebf\u7a0b\u4e5f\u5c1d\u8bd5\u83b7\u53d6\u5355\u4f8b\uff0c\u8fd9\u4e2a\u65f6\u5019\u5224\u65ad m_instance_ptr \u8fd8\u662f\u7a7a\u7684\uff0c\u4e8e\u662f\u4e5f\u5f00\u59cb\u5b9e\u4f8b\u5316\u5355\u4f8b;\u8fd9\u6837\u5c31\u4f1a\u5b9e\u4f8b\u5316\u51fa\u4e24\u4e2a\u5bf9\u8c61,\u8fd9\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u7684\u7531\u6765\uff1b\u89e3\u51b3\u529e\u6cd5\uff1a\u52a0\u9501\u3002 \u5185\u5b58\u6cc4\u6f0f\u3002\u6ce8\u610f\u5230\u7c7b\u4e2d\u53ea\u8d1f\u8d23 new \u51fa\u5bf9\u8c61\uff0c\u5374\u6ca1\u6709\u8d1f\u8d23 delete \u5bf9\u8c61\uff0c\u56e0\u6b64\u53ea\u6709\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u6790\u6784\u51fd\u6570\u5374\u6ca1\u6709\u88ab\u8c03\u7528;\u56e0\u6b64\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002\u89e3\u51b3\u529e\u6cd5\uff1a \u4f7f\u7528\u5171\u4eab\u6307\u9488\u3002 \u56e0\u6b64\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6539\u8fdb\u7684\uff0c\u7ebf\u7a0b\u5b89\u5168\u7684\u3001\u4f7f\u7528\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u3002 \u7ebf\u7a0b\u5b89\u5168\u3001\u5185\u5b58\u5b89\u5168\u7684\u61d2\u6c49\u5f0f\u5355\u4f8b \uff08\u667a\u80fd\u6307\u9488\uff0c\u9501\uff09 #include <iostream> #include <memory> // shared_ptr #include <mutex> // mutex // version 2: // with problems below fixed: // 1. thread is safe now // 2. memory doesn't leak class Singleton { public : typedef std :: shared_ptr < Singleton > Ptr ; ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } Singleton ( Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Ptr get_instance (){ // \"double checked lock\" if ( m_instance_ptr == nullptr ){ std :: lock_guard < std :: mutex > lk ( m_mutex ); if ( m_instance_ptr == nullptr ){ m_instance_ptr = std :: shared_ptr < Singleton > ( new Singleton ); } } return m_instance_ptr ; } private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } static Ptr m_instance_ptr ; static std :: mutex m_mutex ; }; // initialization static variables out of class Singleton :: Ptr Singleton :: m_instance_ptr = nullptr ; std :: mutex Singleton :: m_mutex ; int main (){ Singleton :: Ptr instance = Singleton :: get_instance (); Singleton :: Ptr instance2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9e\u53ea\u6784\u9020\u4e86\u4e00\u6b21\u5b9e\u4f8b\uff0c\u5e76\u4e14\u53d1\u751f\u4e86\u6790\u6784\u3002 constructor called ! destructor called ! shared_ptr \u548c mutex \u90fd\u662f C++11 \u7684\u6807\u51c6\uff0c\u4ee5\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\uff1a \u57fa\u4e8e shared_ptr \uff0c\u7528\u4e86 C++ \u6bd4\u8f83\u5021\u5bfc\u7684 RAII \u601d\u60f3\uff0c\u7528\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90,\u5f53 shared_ptr \u6790\u6784\u7684\u65f6\u5019\uff0c new \u51fa\u6765\u7684\u5bf9\u8c61\u4e5f\u4f1a\u88ab delete \u6389\u3002\u4ee5\u6b64\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u52a0\u4e86\u9501\uff0c\u4f7f\u7528\u4e92\u65a5\u91cf\u6765\u8fbe\u5230\u7ebf\u7a0b\u5b89\u5168\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e24\u4e2a if \u5224\u65ad\u8bed\u53e5\u7684\u6280\u672f\u79f0\u4e3a\u53cc\u68c0\u9501\uff1b\u597d\u5904\u662f\uff0c\u53ea\u6709\u5224\u65ad\u6307\u9488\u4e3a\u7a7a\u7684\u65f6\u5019\u624d\u52a0\u9501\uff0c\u907f\u514d\u6bcf\u6b21\u8c03\u7528 get_instance \u7684\u65b9\u6cd5\u90fd\u52a0\u9501\uff0c\u9501\u7684\u5f00\u9500\u6bd5\u7adf\u8fd8\u662f\u6709\u70b9\u5927\u7684\u3002 \u4e0d\u8db3\u4e4b\u5904\u5728\u4e8e\uff1a \u4f7f\u7528\u667a\u80fd\u6307\u9488\u4f1a\u8981\u6c42\u7528\u6237\u4e5f\u5f97\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u975e\u5fc5\u8981\u4e0d\u5e94\u8be5\u63d0\u51fa\u8fd9\u79cd\u7ea6\u675f; \u4f7f\u7528\u9501\u4e5f\u6709\u5f00\u9500; \u540c\u65f6\u4ee3\u7801\u91cf\u4e5f\u589e\u591a\u4e86\uff0c\u5b9e\u73b0\u4e0a\u6211\u4eec\u5e0c\u671b\u8d8a\u7b80\u5355\u8d8a\u597d\u3002 \u8fd8\u6709\u66f4\u52a0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5728\u67d0\u4e9b\u5e73\u53f0\uff08\u4e0e\u7f16\u8bd1\u5668\u548c\u6307\u4ee4\u96c6\u67b6\u6784\u6709\u5173\uff09\uff0c \u53cc\u68c0\u9501\u4f1a\u5931\u6548 \uff01 \u56e0\u6b64\u8fd9\u91cc\u8fd8\u6709\u7b2c\u4e09\u79cd\u7684\u57fa\u4e8e Magic Static \u7684\u65b9\u6cd5\u8fbe\u5230\u7ebf\u7a0b\u5b89\u5168\u3002 \u6700\u63a8\u8350\u7684\u61d2\u6c49\u5f0f\u5355\u4f8b\uff08magic static\uff09\u2014\u2014\u5c40\u90e8\u9759\u6001\u53d8\u91cf #include <iostream> class Singleton { public : ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } Singleton ( const Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Singleton & get_instance (){ static Singleton instance ; return instance ; } private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } }; int main ( int argc , char * argv []) { Singleton & instance_1 = Singleton :: get_instance (); Singleton & instance_2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7ed3\u679c constructor called ! destructor called ! \u8fd9\u79cd\u65b9\u6cd5\u53c8\u53eb\u505a Meyers' SingletonMeyer's \u7684\u5355\u4f8b\uff0c \u662f\u8457\u540d\u7684\u5199\u51fa\u300aEffective C++\u300b\u7cfb\u5217\u4e66\u7c4d\u7684\u4f5c\u8005 Meyers \u63d0\u51fa\u7684\u3002\u6240\u7528\u5230\u7684\u7279\u6027\u662f\u5728 C++11 \u6807\u51c6\u4e2d\u7684 Magic Static \u7279\u6027\uff1a If control enters the declaration concurrently while the variable is being initialized, the concurrent execution shall wait for completion of the initialization. \u5982\u679c\u5f53\u53d8\u91cf\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u5e76\u53d1\u540c\u65f6\u8fdb\u5165\u58f0\u660e\u8bed\u53e5\uff0c\u5e76\u53d1\u7ebf\u7a0b\u5c06\u4f1a\u963b\u585e\u7b49\u5f85\u521d\u59cb\u5316\u7ed3\u675f\u3002 \u8fd9\u6837\u4fdd\u8bc1\u4e86\u5e76\u53d1\u7ebf\u7a0b\u5728\u83b7\u53d6\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u521d\u59cb\u5316\u8fc7\u7684\uff0c\u6240\u4ee5\u5177\u6709\u7ebf\u7a0b\u5b89\u5168\u6027\u3002 C++\u9759\u6001\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u4ece\u58f0\u660e\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u61d2\u6c49\u5f0f\u3002 \u8fd9\u662f\u6700\u63a8\u8350\u7684\u4e00\u79cd\u5355\u4f8b\u5b9e\u73b0\u65b9\u5f0f\uff1a \u901a\u8fc7\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u7684\u7279\u6027\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u5b89\u5168 (C++11, GCC > 4.3, VS2015 \u652f\u6301\u8be5\u7279\u6027)\uff1b \u4e0d\u9700\u8981\u4f7f\u7528\u5171\u4eab\u6307\u9488\uff0c\u4ee3\u7801\u7b80\u6d01\uff1b \u6ce8\u610f\u5728\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u58f0\u660e\u5355\u4f8b\u7684\u5f15\u7528 Singleton& \u624d\u80fd\u83b7\u53d6\u5bf9\u8c61\u3002 \u53e6\u5916\u7f51\u4e0a\u6709\u4eba\u7684\u5b9e\u73b0\u8fd4\u56de\u6307\u9488\u800c\u4e0d\u662f\u8fd4\u56de\u5f15\u7528\uff1a static Singleton * get_instance (){ static Singleton instance ; return & instance ; } \u8fd9\u6837\u505a\u5e76\u4e0d\u597d\uff0c\u7406\u7531\u4e3b\u8981\u662f\u65e0\u6cd5\u907f\u514d\u7528\u6237\u4f7f\u7528 delete instance \u5bfc\u81f4\u5bf9\u8c61\u88ab\u63d0\u524d\u9500\u6bc1\u3002\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u8fd4\u56de\u5f15\u7528\u7684\u65b9\u5f0f\u3002 \u51fd\u6570\u8fd4\u56de\u5f15\u7528 \u6709\u4eba\u5728\u7f51\u4e0a\u63d0\u4f9b\u4e86\u8fd9\u6837\u4e00\u79cd\u5355\u4f8b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a include < iostream > class A { public : A () { std :: cout << \"constructor\" << std :: endl ; } ~ A (){ std :: cout << \"destructor\" << std :: endl ; } }; A & ret_singleton (){ static A instance ; return instance ; } int main ( int argc , char * argv []) { A & instance_1 = ret_singleton (); A & instance_2 = ret_singleton (); return 0 ; } \u4e25\u683c\u6765\u8bf4\uff0c\u8fd9\u4e0d\u5c5e\u4e8e\u5355\u4f8b\u4e86\uff0c\u56e0\u4e3a\u7c7bA\u53ea\u662f\u4e2a\u5bfb\u5e38\u7684\u7c7b\uff0c\u53ef\u4ee5\u88ab\u5b9a\u4e49\u51fa\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4f46\u662f\u4eae\u70b9\u5728\u4e8e\u63d0\u4f9b\u4e86 ret_singleton \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5168\u5c40\uff08\u9759\u6001\uff09\u53d8\u91cf\uff0c\u8d77\u5230\u7c7b\u4f3c\u5355\u4f8b\u7684\u6548\u679c\uff0c\u8fd9\u8981\u6c42\u7528\u6237\u5fc5\u987b\u4fdd\u8bc1\u60f3\u8981\u83b7\u53d6\u5168\u5c40\u53d8\u91cfA \uff0c\u53ea\u901a\u8fc7 ret_singleton() \u7684\u65b9\u6cd5\u3002 \u997f\u6c49\u6a21\u5f0f \u5355\u4f8b\u5728\u7a0b\u5e8f\u521d\u671f\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5373\u5982\u8bba\u5982\u4f55\u90fd\u4f1a\u521d\u59cb\u5316\u3002 class Singleton { public : static Singleton * GetInstance () { return singleton ; } static Singleton * singleton ; }; Singleton * Singleton :: singleton = new Singleton (); \u8fd9\u79cd\u5199\u6cd5\u4e5f\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e0d\u8fc7 Singleton \u7684\u6784\u9020\u51fd\u6570\u5728 main \u51fd\u6570\u4e4b\u524d\u6267\u884c\uff0c\u6709\u4e9b\u573a\u666f\u4e0b\u662f\u4e0d\u5141\u8bb8\u8fd9\u4e48\u505a\u7684\u3002\u6539\u8fdb\u4e00\u4e0b\uff1a class Singleton { public : static Singleton * GetInstance () { return singleton ; } int Init (); static Singleton * singleton ; }; Singleton * Singleton :: singleton = new Singleton (); \u5c06\u590d\u6742\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u653e\u5728 Init \u51fd\u6570\u4e2d\uff0c\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8c03\u7528\u3002","title":"C++ \u5355\u4f8b\u6a21\u5f0f\u603b\u7ed3\u4e0e\u5256\u6790"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#c","text":"\u5355\u4f8b\u53ef\u80fd\u662f\u6700\u5e38\u7528\u7684\u7b80\u5355\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b9e\u73b0\u65b9\u6cd5\u591a\u6837\uff0c\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u6709\u4e0d\u540c\u7684\u5199\u6cd5; \u540c\u65f6\u5355\u4f8b\u4e5f\u6709\u5176\u5c40\u9650\u6027\uff0c\u56e0\u6b64\u6709\u5f88\u591a\u4eba\u662f\u53cd\u5bf9\u4f7f\u7528\u5355\u4f8b\u7684\u3002\u672c\u6587\u5bf9 C++ \u5355\u4f8b\u7684\u5e38\u89c1\u5199\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e2a\u603b\u7ed3, \u5305\u62ec\u61d2\u6c49\u5f0f\u3001\u7ebf\u7a0b\u5b89\u5168\u3001\u5355\u4f8b\u6a21\u677f\u7b49\uff1b \u6309\u7167\u4ece\u7b80\u5355\u5230\u590d\u6742\uff0c\u6700\u7ec8\u56de\u5f52\u7b80\u5355\u7684\u7684\u65b9\u5f0f\u5faa\u5e8f\u6e10\u8fdb\u5730\u4ecb\u7ecd\uff0c\u5e76\u4e14\u5bf9\u5404\u79cd\u5b9e\u73b0\u65b9\u6cd5\u7684\u5c40\u9650\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u9610\u8ff0\uff0c\u5927\u91cf\u7528\u5230\u4e86 C++ 11 \u7684\u7279\u6027\u5982\u667a\u80fd\u6307\u9488, magic static\uff0c\u7ebf\u7a0b\u9501; \u4ece\u5934\u5230\u5c3e\u7406\u89e3\u4e0b\u6765\uff0c\u5bf9\u4e8e\u5b66\u4e60\u548c\u5de9\u56fa C++ \u8bed\u8a00\u7279\u6027\u8fd8\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002","title":"C++ \u5355\u4f8b\u6a21\u5f0f\u603b\u7ed3\u4e0e\u5256\u6790"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_1","text":"\u5355\u4f8b Singleton \u662f\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4e00\u79cd\uff0c\u5176\u7279\u70b9\u662f\u53ea\u63d0\u4f9b\u552f\u4e00\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b,\u5177\u6709\u5168\u5c40\u53d8\u91cf\u7684\u7279\u70b9\uff0c\u5728\u4efb\u4f55\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\u5230\u90a3\u4e2a\u552f\u4e00\u5b9e\u4f8b\u3002 \u5177\u4f53\u8fd0\u7528\u573a\u666f\u5982\uff1a \u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u7cfb\u7edf\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u8bbe\u5907\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u8bbe\u5907\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u7ba1\u7406\u8bbe\u5907\u9a71\u52a8\uff1b \u6570\u636e\u6c60\uff0c\u7528\u6765\u7f13\u5b58\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u5728\u4e00\u5904\u5199\uff0c\u591a\u5904\u8bfb\u53d6\u6216\u8005\u591a\u5904\u5199\uff0c\u591a\u5904\u8bfb\u53d6\u3002","title":"\u4ec0\u4e48\u662f\u5355\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#c_1","text":"","title":"C++\u5355\u4f8b\u7684\u5b9e\u73b0"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_2","text":"\u5168\u5c40\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff1astatic \u7279\u6027\uff0c\u540c\u65f6\u7981\u6b62\u7528\u6237\u81ea\u5df1\u58f0\u660e\u5e76\u5b9a\u4e49\u5b9e\u4f8b\uff08\u628a\u6784\u9020\u51fd\u6570\u8bbe\u4e3a private\uff09 \u7ebf\u7a0b\u5b89\u5168 \u7981\u6b62\u8d4b\u503c\u548c\u62f7\u8d1d \u7528\u6237\u901a\u8fc7\u63a5\u53e3\u83b7\u53d6\u5b9e\u4f8b\uff1a\u4f7f\u7528 static \u7c7b\u6210\u5458\u51fd\u6570","title":"\u57fa\u7840\u8981\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#c_2","text":"","title":"C++ \u5b9e\u73b0\u5355\u4f8b\u7684\u51e0\u79cd\u65b9\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_3","text":"\u61d2\u6c49\u5f0f\uff08Lazy-Initialization\uff09\u7684\u65b9\u6cd5\u662f\u76f4\u5230\u4f7f\u7528\u65f6\u624d\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u4e5f\u5c31\u8bf4\u76f4\u5230\u8c03\u7528 get_instance() \u65b9\u6cd5\u7684\u65f6\u5019\u624d new \u4e00\u4e2a\u5355\u4f8b\u7684\u5bf9\u8c61\uff0c \u5982\u679c\u4e0d\u88ab\u8c03\u7528\u5c31\u4e0d\u4f1a\u5360\u7528\u5185\u5b58\u3002 #include <iostream> // version1: // with problems below: // 1. thread is not safe // 2. memory leak class Singleton { private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } Singleton ( Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Singleton * m_instance_ptr ; public : ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } static Singleton * get_instance (){ if ( m_instance_ptr == nullptr ){ m_instance_ptr = new Singleton ; } return m_instance_ptr ; } void use () const { std :: cout << \"in use\" << std :: endl ; } }; Singleton * Singleton :: m_instance_ptr = nullptr ; int main (){ Singleton * instance = Singleton :: get_instance (); Singleton * instance_2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7684\u7ed3\u679c\u662f constructor called ! \u53ef\u4ee5\u770b\u5230\uff0c\u83b7\u53d6\u4e86\u4e24\u6b21\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5374\u53ea\u6709\u4e00\u6b21\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u8868\u660e\u53ea\u751f\u6210\u4e86\u552f\u4e00\u5b9e\u4f8b\uff0c\u8fd9\u662f\u4e2a\u6700\u57fa\u7840\u7248\u672c\u7684\u5355\u4f8b\u5b9e\u73b0\uff0c\u4ed6\u6709\u54ea\u4e9b\u95ee\u9898\u5462\uff1f \u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\uff0c\u5f53\u591a\u7ebf\u7a0b\u83b7\u53d6\u5355\u4f8b\u65f6\u6709\u53ef\u80fd\u5f15\u53d1\u7ade\u6001\u6761\u4ef6\uff1a\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5728 if \u4e2d\u5224\u65ad m_instance_ptr \u662f\u7a7a\u7684\uff0c\u4e8e\u662f\u5f00\u59cb\u5b9e\u4f8b\u5316\u5355\u4f8b\uff1b\u540c\u65f6\u7b2c2\u4e2a\u7ebf\u7a0b\u4e5f\u5c1d\u8bd5\u83b7\u53d6\u5355\u4f8b\uff0c\u8fd9\u4e2a\u65f6\u5019\u5224\u65ad m_instance_ptr \u8fd8\u662f\u7a7a\u7684\uff0c\u4e8e\u662f\u4e5f\u5f00\u59cb\u5b9e\u4f8b\u5316\u5355\u4f8b;\u8fd9\u6837\u5c31\u4f1a\u5b9e\u4f8b\u5316\u51fa\u4e24\u4e2a\u5bf9\u8c61,\u8fd9\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u7684\u7531\u6765\uff1b\u89e3\u51b3\u529e\u6cd5\uff1a\u52a0\u9501\u3002 \u5185\u5b58\u6cc4\u6f0f\u3002\u6ce8\u610f\u5230\u7c7b\u4e2d\u53ea\u8d1f\u8d23 new \u51fa\u5bf9\u8c61\uff0c\u5374\u6ca1\u6709\u8d1f\u8d23 delete \u5bf9\u8c61\uff0c\u56e0\u6b64\u53ea\u6709\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u6790\u6784\u51fd\u6570\u5374\u6ca1\u6709\u88ab\u8c03\u7528;\u56e0\u6b64\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002\u89e3\u51b3\u529e\u6cd5\uff1a \u4f7f\u7528\u5171\u4eab\u6307\u9488\u3002 \u56e0\u6b64\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6539\u8fdb\u7684\uff0c\u7ebf\u7a0b\u5b89\u5168\u7684\u3001\u4f7f\u7528\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u3002","title":"\u6709\u7f3a\u9677\u7684\u61d2\u6c49\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_4","text":"#include <iostream> #include <memory> // shared_ptr #include <mutex> // mutex // version 2: // with problems below fixed: // 1. thread is safe now // 2. memory doesn't leak class Singleton { public : typedef std :: shared_ptr < Singleton > Ptr ; ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } Singleton ( Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Ptr get_instance (){ // \"double checked lock\" if ( m_instance_ptr == nullptr ){ std :: lock_guard < std :: mutex > lk ( m_mutex ); if ( m_instance_ptr == nullptr ){ m_instance_ptr = std :: shared_ptr < Singleton > ( new Singleton ); } } return m_instance_ptr ; } private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } static Ptr m_instance_ptr ; static std :: mutex m_mutex ; }; // initialization static variables out of class Singleton :: Ptr Singleton :: m_instance_ptr = nullptr ; std :: mutex Singleton :: m_mutex ; int main (){ Singleton :: Ptr instance = Singleton :: get_instance (); Singleton :: Ptr instance2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9e\u53ea\u6784\u9020\u4e86\u4e00\u6b21\u5b9e\u4f8b\uff0c\u5e76\u4e14\u53d1\u751f\u4e86\u6790\u6784\u3002 constructor called ! destructor called ! shared_ptr \u548c mutex \u90fd\u662f C++11 \u7684\u6807\u51c6\uff0c\u4ee5\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\uff1a \u57fa\u4e8e shared_ptr \uff0c\u7528\u4e86 C++ \u6bd4\u8f83\u5021\u5bfc\u7684 RAII \u601d\u60f3\uff0c\u7528\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90,\u5f53 shared_ptr \u6790\u6784\u7684\u65f6\u5019\uff0c new \u51fa\u6765\u7684\u5bf9\u8c61\u4e5f\u4f1a\u88ab delete \u6389\u3002\u4ee5\u6b64\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u52a0\u4e86\u9501\uff0c\u4f7f\u7528\u4e92\u65a5\u91cf\u6765\u8fbe\u5230\u7ebf\u7a0b\u5b89\u5168\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e24\u4e2a if \u5224\u65ad\u8bed\u53e5\u7684\u6280\u672f\u79f0\u4e3a\u53cc\u68c0\u9501\uff1b\u597d\u5904\u662f\uff0c\u53ea\u6709\u5224\u65ad\u6307\u9488\u4e3a\u7a7a\u7684\u65f6\u5019\u624d\u52a0\u9501\uff0c\u907f\u514d\u6bcf\u6b21\u8c03\u7528 get_instance \u7684\u65b9\u6cd5\u90fd\u52a0\u9501\uff0c\u9501\u7684\u5f00\u9500\u6bd5\u7adf\u8fd8\u662f\u6709\u70b9\u5927\u7684\u3002 \u4e0d\u8db3\u4e4b\u5904\u5728\u4e8e\uff1a \u4f7f\u7528\u667a\u80fd\u6307\u9488\u4f1a\u8981\u6c42\u7528\u6237\u4e5f\u5f97\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u975e\u5fc5\u8981\u4e0d\u5e94\u8be5\u63d0\u51fa\u8fd9\u79cd\u7ea6\u675f; \u4f7f\u7528\u9501\u4e5f\u6709\u5f00\u9500; \u540c\u65f6\u4ee3\u7801\u91cf\u4e5f\u589e\u591a\u4e86\uff0c\u5b9e\u73b0\u4e0a\u6211\u4eec\u5e0c\u671b\u8d8a\u7b80\u5355\u8d8a\u597d\u3002 \u8fd8\u6709\u66f4\u52a0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5728\u67d0\u4e9b\u5e73\u53f0\uff08\u4e0e\u7f16\u8bd1\u5668\u548c\u6307\u4ee4\u96c6\u67b6\u6784\u6709\u5173\uff09\uff0c \u53cc\u68c0\u9501\u4f1a\u5931\u6548 \uff01 \u56e0\u6b64\u8fd9\u91cc\u8fd8\u6709\u7b2c\u4e09\u79cd\u7684\u57fa\u4e8e Magic Static \u7684\u65b9\u6cd5\u8fbe\u5230\u7ebf\u7a0b\u5b89\u5168\u3002","title":"\u7ebf\u7a0b\u5b89\u5168\u3001\u5185\u5b58\u5b89\u5168\u7684\u61d2\u6c49\u5f0f\u5355\u4f8b \uff08\u667a\u80fd\u6307\u9488\uff0c\u9501\uff09"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#magic-static","text":"#include <iostream> class Singleton { public : ~ Singleton (){ std :: cout << \"destructor called!\" << std :: endl ; } Singleton ( const Singleton & ) = delete ; Singleton & operator = ( const Singleton & ) = delete ; static Singleton & get_instance (){ static Singleton instance ; return instance ; } private : Singleton (){ std :: cout << \"constructor called!\" << std :: endl ; } }; int main ( int argc , char * argv []) { Singleton & instance_1 = Singleton :: get_instance (); Singleton & instance_2 = Singleton :: get_instance (); return 0 ; } \u8fd0\u884c\u7ed3\u679c constructor called ! destructor called ! \u8fd9\u79cd\u65b9\u6cd5\u53c8\u53eb\u505a Meyers' SingletonMeyer's \u7684\u5355\u4f8b\uff0c \u662f\u8457\u540d\u7684\u5199\u51fa\u300aEffective C++\u300b\u7cfb\u5217\u4e66\u7c4d\u7684\u4f5c\u8005 Meyers \u63d0\u51fa\u7684\u3002\u6240\u7528\u5230\u7684\u7279\u6027\u662f\u5728 C++11 \u6807\u51c6\u4e2d\u7684 Magic Static \u7279\u6027\uff1a If control enters the declaration concurrently while the variable is being initialized, the concurrent execution shall wait for completion of the initialization. \u5982\u679c\u5f53\u53d8\u91cf\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u5e76\u53d1\u540c\u65f6\u8fdb\u5165\u58f0\u660e\u8bed\u53e5\uff0c\u5e76\u53d1\u7ebf\u7a0b\u5c06\u4f1a\u963b\u585e\u7b49\u5f85\u521d\u59cb\u5316\u7ed3\u675f\u3002 \u8fd9\u6837\u4fdd\u8bc1\u4e86\u5e76\u53d1\u7ebf\u7a0b\u5728\u83b7\u53d6\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u521d\u59cb\u5316\u8fc7\u7684\uff0c\u6240\u4ee5\u5177\u6709\u7ebf\u7a0b\u5b89\u5168\u6027\u3002 C++\u9759\u6001\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u4ece\u58f0\u660e\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u61d2\u6c49\u5f0f\u3002 \u8fd9\u662f\u6700\u63a8\u8350\u7684\u4e00\u79cd\u5355\u4f8b\u5b9e\u73b0\u65b9\u5f0f\uff1a \u901a\u8fc7\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u7684\u7279\u6027\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u5b89\u5168 (C++11, GCC > 4.3, VS2015 \u652f\u6301\u8be5\u7279\u6027)\uff1b \u4e0d\u9700\u8981\u4f7f\u7528\u5171\u4eab\u6307\u9488\uff0c\u4ee3\u7801\u7b80\u6d01\uff1b \u6ce8\u610f\u5728\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u58f0\u660e\u5355\u4f8b\u7684\u5f15\u7528 Singleton& \u624d\u80fd\u83b7\u53d6\u5bf9\u8c61\u3002 \u53e6\u5916\u7f51\u4e0a\u6709\u4eba\u7684\u5b9e\u73b0\u8fd4\u56de\u6307\u9488\u800c\u4e0d\u662f\u8fd4\u56de\u5f15\u7528\uff1a static Singleton * get_instance (){ static Singleton instance ; return & instance ; } \u8fd9\u6837\u505a\u5e76\u4e0d\u597d\uff0c\u7406\u7531\u4e3b\u8981\u662f\u65e0\u6cd5\u907f\u514d\u7528\u6237\u4f7f\u7528 delete instance \u5bfc\u81f4\u5bf9\u8c61\u88ab\u63d0\u524d\u9500\u6bc1\u3002\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u8fd4\u56de\u5f15\u7528\u7684\u65b9\u5f0f\u3002","title":"\u6700\u63a8\u8350\u7684\u61d2\u6c49\u5f0f\u5355\u4f8b\uff08magic static\uff09\u2014\u2014\u5c40\u90e8\u9759\u6001\u53d8\u91cf"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_5","text":"\u6709\u4eba\u5728\u7f51\u4e0a\u63d0\u4f9b\u4e86\u8fd9\u6837\u4e00\u79cd\u5355\u4f8b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a include < iostream > class A { public : A () { std :: cout << \"constructor\" << std :: endl ; } ~ A (){ std :: cout << \"destructor\" << std :: endl ; } }; A & ret_singleton (){ static A instance ; return instance ; } int main ( int argc , char * argv []) { A & instance_1 = ret_singleton (); A & instance_2 = ret_singleton (); return 0 ; } \u4e25\u683c\u6765\u8bf4\uff0c\u8fd9\u4e0d\u5c5e\u4e8e\u5355\u4f8b\u4e86\uff0c\u56e0\u4e3a\u7c7bA\u53ea\u662f\u4e2a\u5bfb\u5e38\u7684\u7c7b\uff0c\u53ef\u4ee5\u88ab\u5b9a\u4e49\u51fa\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4f46\u662f\u4eae\u70b9\u5728\u4e8e\u63d0\u4f9b\u4e86 ret_singleton \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5168\u5c40\uff08\u9759\u6001\uff09\u53d8\u91cf\uff0c\u8d77\u5230\u7c7b\u4f3c\u5355\u4f8b\u7684\u6548\u679c\uff0c\u8fd9\u8981\u6c42\u7528\u6237\u5fc5\u987b\u4fdd\u8bc1\u60f3\u8981\u83b7\u53d6\u5168\u5c40\u53d8\u91cfA \uff0c\u53ea\u901a\u8fc7 ret_singleton() \u7684\u65b9\u6cd5\u3002","title":"\u51fd\u6570\u8fd4\u56de\u5f15\u7528"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/#_6","text":"\u5355\u4f8b\u5728\u7a0b\u5e8f\u521d\u671f\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5373\u5982\u8bba\u5982\u4f55\u90fd\u4f1a\u521d\u59cb\u5316\u3002 class Singleton { public : static Singleton * GetInstance () { return singleton ; } static Singleton * singleton ; }; Singleton * Singleton :: singleton = new Singleton (); \u8fd9\u79cd\u5199\u6cd5\u4e5f\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e0d\u8fc7 Singleton \u7684\u6784\u9020\u51fd\u6570\u5728 main \u51fd\u6570\u4e4b\u524d\u6267\u884c\uff0c\u6709\u4e9b\u573a\u666f\u4e0b\u662f\u4e0d\u5141\u8bb8\u8fd9\u4e48\u505a\u7684\u3002\u6539\u8fdb\u4e00\u4e0b\uff1a class Singleton { public : static Singleton * GetInstance () { return singleton ; } int Init (); static Singleton * singleton ; }; Singleton * Singleton :: singleton = new Singleton (); \u5c06\u590d\u6742\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u653e\u5728 Init \u51fd\u6570\u4e2d\uff0c\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8c03\u7528\u3002","title":"\u997f\u6c49\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u6a21\u5f0f\u5b9a\u4e49 \u89c2\u5bdf\u8005\u6a21\u5f0f(Observer Pattern)\uff1a\u5b9a\u4e49\u5bf9\u8c61\u95f4\u7684\u4e00\u79cd\u4e00\u5bf9\u591a\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f7f\u5f97\u6bcf\u5f53\u4e00\u4e2a\u5bf9\u8c61\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u5176\u76f8\u5173\u4f9d\u8d56\u5bf9\u8c61\u7686\u5f97\u5230\u901a\u77e5\u5e76\u88ab\u81ea\u52a8\u66f4\u65b0\u3002\u89c2\u5bdf\u8005\u6a21\u5f0f\u53c8\u53eb\u505a\u53d1\u5e03-\u8ba2\u9605\uff08Publish/Subscribe\uff09\u6a21\u5f0f\u3001\u6a21\u578b-\u89c6\u56fe\uff08Model/View\uff09\u6a21\u5f0f\u3001\u6e90-\u76d1\u542c\u5668\uff08Source/Listener\uff09\u6a21\u5f0f\u6216\u4ece\u5c5e\u8005\uff08Dependents\uff09\u6a21\u5f0f\u3002 Observer \u6a21\u5f0f\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e3a\uff1a \u5efa\u7acb\u4e00\u4e2a\u4e00\uff08Subject\uff09\u5bf9\u591a\uff08Observer\uff09 \u7684\u4f9d\u8d56\u5173\u7cfb\uff0c \u5e76\u4e14\u505a\u5230\u5f53\u201c\u4e00\u201d \u53d8\u5316\u7684\u65f6\u5019\uff0c \u4f9d\u8d56\u8fd9\u4e2a\u201c\u4e00\u201d\u7684\u591a\u4e5f\u80fd\u591f\u540c\u6b65\u6539\u53d8\u3002 \u6a21\u5f0f\u7ed3\u6784 \u89c2\u5bdf\u8005\u6a21\u5f0f\u5305\u62ec\u4e00\u4e0b\u89d2\u8272\uff1a Subject\uff08\u76ee\u6807\uff09 \u76ee\u6807\u77e5\u9053\u5b83\u7684\u89c2\u5bdf\u8005\u3002\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a\u89c2\u5bdf\u8005\u89c2\u5bdf\u540c\u4e00\u4e2a\u76ee\u6807\uff1b \u63d0\u4f9b\u6ce8\u518c\u548c\u5220\u9664\u89c2\u5bdf\u8005\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 Observer\uff08\u89c2\u5bdf\u8005\uff09 \u4e3a\u90a3\u4e9b\u5728\u76ee\u6807\u53d1\u751f\u6539\u53d8\u65f6\u9700\u83b7\u5f97\u901a\u77e5\u7684\u5bf9\u8c61\u5b9a\u4e49\u4e00\u4e2a\u66f4\u65b0\u63a5\u53e3\u3002 ConcreteSubject\uff08\u5177\u4f53\u76ee\u6807\uff09 \u5c06\u6709\u5173\u72b6\u6001\u5b58\u5165\u5404ConcreteObserver\u5bf9\u8c61\uff1b \u5f53\u5b83\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u5411\u5b83\u7684\u5404\u4e2a\u89c2\u5bdf\u8005\u53d1\u51fa\u901a\u77e5\u3002 ConcreteObserver\uff08\u5177\u4f53\u89c2\u5bdf\u8005\uff09 \u7ef4\u62a4\u4e00\u4e2a\u6307\u5411ConcreteSubject\u5bf9\u8c61\u7684\u5f15\u7528\uff1b \u5b58\u50a8\u6709\u5173\u72b6\u6001\uff0c\u8fd9\u4e9b\u72b6\u6001\u5e94\u4e0e\u76ee\u6807\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff1b \u5b9e\u73b0Observer\u7684\u66f4\u65b0\u63a5\u53e3\u4ee5\u4f7f\u81ea\u8eab\u72b6\u6001\u4e0e\u76ee\u6807\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u534f\u4f5c\uff1a \u5f53 ConcreteSubject \u53d1\u751f\u4efb\u4f55\u53ef\u80fd\u5bfc\u81f4\u5176\u89c2\u5bdf\u8005\u4e0e\u5176\u672c\u8eab\u72b6\u6001\u4e0d\u4e00\u81f4\u7684\u6539\u53d8\u65f6\uff0c\u5b83\u5c06\u901a\u77e5\u5b83\u7684\u5404\u4e2a\u89c2\u5bdf\u8005\uff1b \u5728\u5f97\u5230\u4e00\u4e2a\u5177\u4f53\u76ee\u6807\u7684\u6539\u53d8\u901a\u77e5\u540e\uff0cConcreteObserver \u5bf9\u8c61\u53ef\u5411\u76ee\u6807\u5bf9\u8c61\u67e5\u8be2\u4fe1\u606f\u3002ConcreteObserver \u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u4f7f\u5b83\u7684\u72b6\u6001\u4e0e\u76ee\u6807\u5bf9\u8c61\u7684\u72b6\u6001\u4e00\u81f4\u3002 \u9002\u7528\u573a\u5408 \u5728\u4ee5\u4e0b\u4efb\u4e00\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\uff1a \u5f53\u4e00\u4e2a\u62bd\u8c61\u6a21\u578b\u6709\u4e24\u4e2a\u65b9\u9762\uff0c\u5176\u4e2d\u4e00\u4e2a\u65b9\u9762\u4f9d\u8d56\u4e8e\u53e6\u4e00\u65b9\u9762\u3002\u5c06\u8fd9\u4e8c\u8005\u5c01\u88c5\u5728\u72ec\u7acb\u7684\u5bf9\u8c61\u4e2d\u4ee5\u4f7f\u5b83\u4eec\u53ef\u4ee5\u5404\u81ea\u72ec\u7acb\u7684\u6539\u53d8\u548c\u590d\u7528\uff1b \u5f53\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u6539\u53d8\u9700\u8981\u540c\u65f6\u6539\u53d8\u5176\u5b83\u5bf9\u8c61\uff0c\u800c\u4e0d\u77e5\u9053\u5177\u4f53\u6709\u591a\u5c11\u5bf9\u8c61\u6709\u5f85\u6539\u53d8\uff1b \u5f53\u4e00\u4e2a\u5bf9\u8c61\u5fc5\u987b\u901a\u77e5\u5176\u5b83\u5bf9\u8c61\uff0c\u800c\u5b83\u53c8\u4e0d\u80fd\u5047\u5b9a\u5176\u5b83\u5bf9\u8c61\u662f\u8c01\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u5e0c\u671b\u8fd9\u4e9b\u5bf9\u8c61\u662f\u7d27\u5bc6\u8026\u5408\u7684\u3002 \u4ee3\u7801\u5b9e\u73b0 Observer.h #pragma once #include <iostream> #include <memory> class Observer { public : Observer () { std :: cout << \"Class Observer constructed!\" << std :: endl ; } virtual ~ Observer () { std :: cout << \"Class Observer destructed!\" << std :: endl ; } virtual bool update () = 0 ; }; typedef std :: shared_ptr < Observer > shared_Observer ; Subject.h #pragma once #include <vector> #include \"Observer.h\" class Subject { public : Subject () { std :: cout << \"Class Subject constructed!\" << std :: endl ; } virtual ~ Subject (); void addObserver ( shared_Observer observer ); void delObserver ( shared_Observer observer ); void notify (); virtual void setStateChanged ( bool bChanged ) = 0 ; virtual bool getState () = 0 ; private : std :: vector < shared_Observer > m_observers ; }; Subject.cpp #include \"Subject.h\" Subject ::~ Subject () { if ( ! m_observers . empty ()) { m_observers . clear (); } std :: cout << \"Class Subject destructed!\" << std :: endl ; } void Subject :: addObserver ( shared_Observer observer ) { m_observers . push_back ( observer ); } void Subject :: delObserver ( shared_Observer observer ) { for ( auto it = m_observers . begin (); it != m_observers . end (); ++ it ) { if ( * it == observer ) { m_observers . erase ( it ); return ; } } } void Subject :: notify () { for ( auto item : m_observers ) { item -> update (); } } ConcreteObserver.h #pragma once #include \"Observer.h\" class Subject ; typedef std :: weak_ptr < Subject > weak_subject ; class ConcreteObserver : public Observer { public : ConcreteObserver ( weak_subjectsubject , std :: string strName ); virtual ~ ConcreteObserver (); virtual bool update (); private : weak_subjectm_subject ; std :: string m_strName ; }; typedef std :: shared_ptr < ConcreteObserver > shared_concreteObserver ; ConcreteObserver.cpp #include <iostream> #include \"ConcreteObserver.h\" #include \"Subject.h\" ConcreteObserver :: ConcreteObserver ( weak_subject subject , std :: string strName ) : m_subject ( subject ), m_strName ( strName ) { std :: cout << \"Class ConcreteObserver constructed!\" << std :: endl ; } ConcreteObserver ::~ ConcreteObserver () { std :: cout << \"Class ConcreteObserver destructed!\" << std :: endl ; } bool ConcreteObserver :: update () { std :: cout << m_strName << \" updated!\" << std :: endl ; return true ; } ConcreteSubject.h #pragma once #include \"Subject.h\" class ConcreteSubject : public Subject { public : ConcreteSubject ( bool bChanged = false ) : m_bChanged ( bChanged ) { std :: cout << \"Class ConcreteSubject constructed!\" << std :: endl ; } virtual ~ ConcreteSubject () { std :: cout << \"Class ConcreteSubject destructed!\" << std :: endl ; } virtual void setStateChanged ( bool bChanged ) { m_bChanged = bChanged ; } virtual bool getState () { return m_bChanged ; } private : bool m_bChanged ; }; typedef std :: shared_ptr < ConcreteSubject > shared_concreteSubject ; main.cpp #include <iostream> #include \"PatternDefine/ConcreteObserver.h\" #include \"PatternDefine/ConcreteSubject.h\" int main () { shared_concreteSubject subject = std :: make_shared < ConcreteSubject > (); shared_concreteObserver obs1 = std :: make_shared < ConcreteObserver > ( subject , \"observer_1\" ); shared_concreteObserver obs2 = std :: make_shared < ConcreteObserver > ( subject , \"observer_2\" ); subject -> addObserver ( obs1 ); subject -> addObserver ( obs2 ); subject -> notify (); shared_concreteObserver obs3 = std :: make_shared < ConcreteObserver > ( subject , \"observer_3\" ); subject -> addObserver ( obs3 ); subject -> notify (); subject -> delObserver ( obs1 ); subject -> delObserver ( obs2 ); subject -> delObserver ( obs3 ); return 0 ; } \u8fd0\u884c\u7ed3\u679c\uff1a Class Subject constructed ! Class ConcreteSubject constructed ! Class Observer constructed ! Class ConcreteObserver constructed ! Class Observer constructed ! Class ConcreteObserver constructed ! observer_1 updated ! observer_2 updated ! Class Observer constructed ! Class ConcreteObserver constructed ! observer_1 updated ! observer_2 updated ! observer_3 updated ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteSubject destructed ! Class Subject destructed ! \u6a21\u5f0f\u4f18\u70b9 \u89c2\u5bdf\u8005\u6a21\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8868\u793a\u5c42\u548c\u6570\u636e\u903b\u8f91\u5c42\u7684\u5206\u79bb\uff0c\u5e76\u5b9a\u4e49\u4e86\u7a33\u5b9a\u7684\u6d88\u606f\u66f4\u65b0\u4f20\u9012\u673a\u5236\uff0c\u62bd\u8c61\u4e86\u66f4\u65b0\u63a5\u53e3\uff0c\u4f7f\u5f97\u53ef\u4ee5\u6709\u5404\u79cd\u5404\u6837\u4e0d\u540c\u7684\u8868\u793a\u5c42\u4f5c\u4e3a\u5177\u4f53\u89c2\u5bdf\u8005\u89d2\u8272\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u5728\u89c2\u5bdf\u76ee\u6807\u548c\u89c2\u5bdf\u8005\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u7684\u8026\u5408\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u652f\u6301\u5e7f\u64ad\u901a\u4fe1\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\u7684\u8981\u6c42\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u5982\u679c\u4e00\u4e2a\u89c2\u5bdf\u76ee\u6807\u5bf9\u8c61\u6709\u5f88\u591a\u76f4\u63a5\u548c\u95f4\u63a5\u7684\u89c2\u5bdf\u8005\u7684\u8bdd\uff0c\u5c06\u6240\u6709\u7684\u89c2\u5bdf\u8005\u90fd\u901a\u77e5\u5230\u4f1a\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u3002 \u5982\u679c\u5728\u89c2\u5bdf\u8005\u548c\u89c2\u5bdf\u76ee\u6807\u4e4b\u95f4\u6709\u5faa\u73af\u4f9d\u8d56\u7684\u8bdd\uff0c\u89c2\u5bdf\u76ee\u6807\u4f1a\u89e6\u53d1\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5faa\u73af\u8c03\u7528\uff0c\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5d29\u6e83\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u6ca1\u6709\u76f8\u5e94\u7684\u673a\u5236\u8ba9\u89c2\u5bdf\u8005\u77e5\u9053\u6240\u89c2\u5bdf\u7684\u76ee\u6807\u5bf9\u8c61\u662f\u600e\u4e48\u53d1\u751f\u53d8\u5316\u7684\uff0c\u800c\u4ec5\u4ec5\u53ea\u662f\u77e5\u9053\u89c2\u5bdf\u76ee\u6807\u53d1\u751f\u4e86\u53d8\u5316\u3002 [[03. Python \u89c2\u5bdf\u8005\u6a21\u5f0f]]","title":"\u6a21\u5f0f\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f(Observer Pattern)\uff1a\u5b9a\u4e49\u5bf9\u8c61\u95f4\u7684\u4e00\u79cd\u4e00\u5bf9\u591a\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f7f\u5f97\u6bcf\u5f53\u4e00\u4e2a\u5bf9\u8c61\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u5176\u76f8\u5173\u4f9d\u8d56\u5bf9\u8c61\u7686\u5f97\u5230\u901a\u77e5\u5e76\u88ab\u81ea\u52a8\u66f4\u65b0\u3002\u89c2\u5bdf\u8005\u6a21\u5f0f\u53c8\u53eb\u505a\u53d1\u5e03-\u8ba2\u9605\uff08Publish/Subscribe\uff09\u6a21\u5f0f\u3001\u6a21\u578b-\u89c6\u56fe\uff08Model/View\uff09\u6a21\u5f0f\u3001\u6e90-\u76d1\u542c\u5668\uff08Source/Listener\uff09\u6a21\u5f0f\u6216\u4ece\u5c5e\u8005\uff08Dependents\uff09\u6a21\u5f0f\u3002 Observer \u6a21\u5f0f\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e3a\uff1a \u5efa\u7acb\u4e00\u4e2a\u4e00\uff08Subject\uff09\u5bf9\u591a\uff08Observer\uff09 \u7684\u4f9d\u8d56\u5173\u7cfb\uff0c \u5e76\u4e14\u505a\u5230\u5f53\u201c\u4e00\u201d \u53d8\u5316\u7684\u65f6\u5019\uff0c \u4f9d\u8d56\u8fd9\u4e2a\u201c\u4e00\u201d\u7684\u591a\u4e5f\u80fd\u591f\u540c\u6b65\u6539\u53d8\u3002","title":"\u6a21\u5f0f\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u5305\u62ec\u4e00\u4e0b\u89d2\u8272\uff1a Subject\uff08\u76ee\u6807\uff09 \u76ee\u6807\u77e5\u9053\u5b83\u7684\u89c2\u5bdf\u8005\u3002\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a\u89c2\u5bdf\u8005\u89c2\u5bdf\u540c\u4e00\u4e2a\u76ee\u6807\uff1b \u63d0\u4f9b\u6ce8\u518c\u548c\u5220\u9664\u89c2\u5bdf\u8005\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 Observer\uff08\u89c2\u5bdf\u8005\uff09 \u4e3a\u90a3\u4e9b\u5728\u76ee\u6807\u53d1\u751f\u6539\u53d8\u65f6\u9700\u83b7\u5f97\u901a\u77e5\u7684\u5bf9\u8c61\u5b9a\u4e49\u4e00\u4e2a\u66f4\u65b0\u63a5\u53e3\u3002 ConcreteSubject\uff08\u5177\u4f53\u76ee\u6807\uff09 \u5c06\u6709\u5173\u72b6\u6001\u5b58\u5165\u5404ConcreteObserver\u5bf9\u8c61\uff1b \u5f53\u5b83\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u5411\u5b83\u7684\u5404\u4e2a\u89c2\u5bdf\u8005\u53d1\u51fa\u901a\u77e5\u3002 ConcreteObserver\uff08\u5177\u4f53\u89c2\u5bdf\u8005\uff09 \u7ef4\u62a4\u4e00\u4e2a\u6307\u5411ConcreteSubject\u5bf9\u8c61\u7684\u5f15\u7528\uff1b \u5b58\u50a8\u6709\u5173\u72b6\u6001\uff0c\u8fd9\u4e9b\u72b6\u6001\u5e94\u4e0e\u76ee\u6807\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff1b \u5b9e\u73b0Observer\u7684\u66f4\u65b0\u63a5\u53e3\u4ee5\u4f7f\u81ea\u8eab\u72b6\u6001\u4e0e\u76ee\u6807\u7684\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u534f\u4f5c\uff1a \u5f53 ConcreteSubject \u53d1\u751f\u4efb\u4f55\u53ef\u80fd\u5bfc\u81f4\u5176\u89c2\u5bdf\u8005\u4e0e\u5176\u672c\u8eab\u72b6\u6001\u4e0d\u4e00\u81f4\u7684\u6539\u53d8\u65f6\uff0c\u5b83\u5c06\u901a\u77e5\u5b83\u7684\u5404\u4e2a\u89c2\u5bdf\u8005\uff1b \u5728\u5f97\u5230\u4e00\u4e2a\u5177\u4f53\u76ee\u6807\u7684\u6539\u53d8\u901a\u77e5\u540e\uff0cConcreteObserver \u5bf9\u8c61\u53ef\u5411\u76ee\u6807\u5bf9\u8c61\u67e5\u8be2\u4fe1\u606f\u3002ConcreteObserver \u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u4f7f\u5b83\u7684\u72b6\u6001\u4e0e\u76ee\u6807\u5bf9\u8c61\u7684\u72b6\u6001\u4e00\u81f4\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_3","text":"\u5728\u4ee5\u4e0b\u4efb\u4e00\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\uff1a \u5f53\u4e00\u4e2a\u62bd\u8c61\u6a21\u578b\u6709\u4e24\u4e2a\u65b9\u9762\uff0c\u5176\u4e2d\u4e00\u4e2a\u65b9\u9762\u4f9d\u8d56\u4e8e\u53e6\u4e00\u65b9\u9762\u3002\u5c06\u8fd9\u4e8c\u8005\u5c01\u88c5\u5728\u72ec\u7acb\u7684\u5bf9\u8c61\u4e2d\u4ee5\u4f7f\u5b83\u4eec\u53ef\u4ee5\u5404\u81ea\u72ec\u7acb\u7684\u6539\u53d8\u548c\u590d\u7528\uff1b \u5f53\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u6539\u53d8\u9700\u8981\u540c\u65f6\u6539\u53d8\u5176\u5b83\u5bf9\u8c61\uff0c\u800c\u4e0d\u77e5\u9053\u5177\u4f53\u6709\u591a\u5c11\u5bf9\u8c61\u6709\u5f85\u6539\u53d8\uff1b \u5f53\u4e00\u4e2a\u5bf9\u8c61\u5fc5\u987b\u901a\u77e5\u5176\u5b83\u5bf9\u8c61\uff0c\u800c\u5b83\u53c8\u4e0d\u80fd\u5047\u5b9a\u5176\u5b83\u5bf9\u8c61\u662f\u8c01\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u5e0c\u671b\u8fd9\u4e9b\u5bf9\u8c61\u662f\u7d27\u5bc6\u8026\u5408\u7684\u3002","title":"\u9002\u7528\u573a\u5408"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_4","text":"Observer.h #pragma once #include <iostream> #include <memory> class Observer { public : Observer () { std :: cout << \"Class Observer constructed!\" << std :: endl ; } virtual ~ Observer () { std :: cout << \"Class Observer destructed!\" << std :: endl ; } virtual bool update () = 0 ; }; typedef std :: shared_ptr < Observer > shared_Observer ; Subject.h #pragma once #include <vector> #include \"Observer.h\" class Subject { public : Subject () { std :: cout << \"Class Subject constructed!\" << std :: endl ; } virtual ~ Subject (); void addObserver ( shared_Observer observer ); void delObserver ( shared_Observer observer ); void notify (); virtual void setStateChanged ( bool bChanged ) = 0 ; virtual bool getState () = 0 ; private : std :: vector < shared_Observer > m_observers ; }; Subject.cpp #include \"Subject.h\" Subject ::~ Subject () { if ( ! m_observers . empty ()) { m_observers . clear (); } std :: cout << \"Class Subject destructed!\" << std :: endl ; } void Subject :: addObserver ( shared_Observer observer ) { m_observers . push_back ( observer ); } void Subject :: delObserver ( shared_Observer observer ) { for ( auto it = m_observers . begin (); it != m_observers . end (); ++ it ) { if ( * it == observer ) { m_observers . erase ( it ); return ; } } } void Subject :: notify () { for ( auto item : m_observers ) { item -> update (); } } ConcreteObserver.h #pragma once #include \"Observer.h\" class Subject ; typedef std :: weak_ptr < Subject > weak_subject ; class ConcreteObserver : public Observer { public : ConcreteObserver ( weak_subjectsubject , std :: string strName ); virtual ~ ConcreteObserver (); virtual bool update (); private : weak_subjectm_subject ; std :: string m_strName ; }; typedef std :: shared_ptr < ConcreteObserver > shared_concreteObserver ; ConcreteObserver.cpp #include <iostream> #include \"ConcreteObserver.h\" #include \"Subject.h\" ConcreteObserver :: ConcreteObserver ( weak_subject subject , std :: string strName ) : m_subject ( subject ), m_strName ( strName ) { std :: cout << \"Class ConcreteObserver constructed!\" << std :: endl ; } ConcreteObserver ::~ ConcreteObserver () { std :: cout << \"Class ConcreteObserver destructed!\" << std :: endl ; } bool ConcreteObserver :: update () { std :: cout << m_strName << \" updated!\" << std :: endl ; return true ; } ConcreteSubject.h #pragma once #include \"Subject.h\" class ConcreteSubject : public Subject { public : ConcreteSubject ( bool bChanged = false ) : m_bChanged ( bChanged ) { std :: cout << \"Class ConcreteSubject constructed!\" << std :: endl ; } virtual ~ ConcreteSubject () { std :: cout << \"Class ConcreteSubject destructed!\" << std :: endl ; } virtual void setStateChanged ( bool bChanged ) { m_bChanged = bChanged ; } virtual bool getState () { return m_bChanged ; } private : bool m_bChanged ; }; typedef std :: shared_ptr < ConcreteSubject > shared_concreteSubject ; main.cpp #include <iostream> #include \"PatternDefine/ConcreteObserver.h\" #include \"PatternDefine/ConcreteSubject.h\" int main () { shared_concreteSubject subject = std :: make_shared < ConcreteSubject > (); shared_concreteObserver obs1 = std :: make_shared < ConcreteObserver > ( subject , \"observer_1\" ); shared_concreteObserver obs2 = std :: make_shared < ConcreteObserver > ( subject , \"observer_2\" ); subject -> addObserver ( obs1 ); subject -> addObserver ( obs2 ); subject -> notify (); shared_concreteObserver obs3 = std :: make_shared < ConcreteObserver > ( subject , \"observer_3\" ); subject -> addObserver ( obs3 ); subject -> notify (); subject -> delObserver ( obs1 ); subject -> delObserver ( obs2 ); subject -> delObserver ( obs3 ); return 0 ; } \u8fd0\u884c\u7ed3\u679c\uff1a Class Subject constructed ! Class ConcreteSubject constructed ! Class Observer constructed ! Class ConcreteObserver constructed ! Class Observer constructed ! Class ConcreteObserver constructed ! observer_1 updated ! observer_2 updated ! Class Observer constructed ! Class ConcreteObserver constructed ! observer_1 updated ! observer_2 updated ! observer_3 updated ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteObserver destructed ! Class Observer destructed ! Class ConcreteSubject destructed ! Class Subject destructed !","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_5","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8868\u793a\u5c42\u548c\u6570\u636e\u903b\u8f91\u5c42\u7684\u5206\u79bb\uff0c\u5e76\u5b9a\u4e49\u4e86\u7a33\u5b9a\u7684\u6d88\u606f\u66f4\u65b0\u4f20\u9012\u673a\u5236\uff0c\u62bd\u8c61\u4e86\u66f4\u65b0\u63a5\u53e3\uff0c\u4f7f\u5f97\u53ef\u4ee5\u6709\u5404\u79cd\u5404\u6837\u4e0d\u540c\u7684\u8868\u793a\u5c42\u4f5c\u4e3a\u5177\u4f53\u89c2\u5bdf\u8005\u89d2\u8272\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u5728\u89c2\u5bdf\u76ee\u6807\u548c\u89c2\u5bdf\u8005\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u7684\u8026\u5408\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u652f\u6301\u5e7f\u64ad\u901a\u4fe1\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\u7684\u8981\u6c42\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/#_6","text":"\u5982\u679c\u4e00\u4e2a\u89c2\u5bdf\u76ee\u6807\u5bf9\u8c61\u6709\u5f88\u591a\u76f4\u63a5\u548c\u95f4\u63a5\u7684\u89c2\u5bdf\u8005\u7684\u8bdd\uff0c\u5c06\u6240\u6709\u7684\u89c2\u5bdf\u8005\u90fd\u901a\u77e5\u5230\u4f1a\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u3002 \u5982\u679c\u5728\u89c2\u5bdf\u8005\u548c\u89c2\u5bdf\u76ee\u6807\u4e4b\u95f4\u6709\u5faa\u73af\u4f9d\u8d56\u7684\u8bdd\uff0c\u89c2\u5bdf\u76ee\u6807\u4f1a\u89e6\u53d1\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5faa\u73af\u8c03\u7528\uff0c\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5d29\u6e83\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u6ca1\u6709\u76f8\u5e94\u7684\u673a\u5236\u8ba9\u89c2\u5bdf\u8005\u77e5\u9053\u6240\u89c2\u5bdf\u7684\u76ee\u6807\u5bf9\u8c61\u662f\u600e\u4e48\u53d1\u751f\u53d8\u5316\u7684\uff0c\u800c\u4ec5\u4ec5\u53ea\u662f\u77e5\u9053\u89c2\u5bdf\u76ee\u6807\u53d1\u751f\u4e86\u53d8\u5316\u3002 [[03. Python \u89c2\u5bdf\u8005\u6a21\u5f0f]]","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/03.%20Python%20%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"observer.py #!/usr/bin/env python class Observer ( object ): def __init__ ( self , name : str ) -> None : super () . __init__ () self . __name = name print ( 'Class Observer constructed!' ) def __del__ ( self ) -> None : print ( 'Class Observer destructed!' ) def update ( self ) -> None : print ( ' {} updated!' . format ( self . __name )) subject.py #!/usr/bin/env python import observer class Subject ( object ): def __init__ ( self ) -> None : super () . __init__ () self . __observers = [] print ( 'Class Subject constructed!' ) def __del__ ( self ) -> None : if self . __observers : self . __observers . clear () print ( 'class Subject destructed!' ) def attach ( self , observer : observer ) -> None : self . __observers . append ( observer ) def detach ( self , observer : observer ) -> None : self . __observers . remove ( observer ) def notify ( self ) -> None : for item in self . __observers : item . update () main.py #!/usr/bin/env python from subject import Subject from observer import Observer sub_test = Subject () obs1 = Observer ( 'observer_1' ) obs2 = Observer ( 'observer_2' ) sub_test . attach ( obs1 ) sub_test . attach ( obs2 ) sub_test . notify () obs3 = Observer ( 'observer_3' ) sub_test . attach ( obs3 ) sub_test . notify () sub_test . detach ( obs1 ) sub_test . notify ()","title":"03. Python \u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/","text":"\u4ecb\u7ecd \u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u5141\u8bb8\u5411\u4e00\u4e2a\u73b0\u6709\u7684\u5bf9\u8c61\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\uff0c\u540c\u65f6\u53c8\u4e0d\u6539\u53d8\u5176\u7ed3\u6784\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u5b83\u662f\u4f5c\u4e3a\u73b0\u6709\u7684\u7c7b\u7684\u4e00\u4e2a\u5305\u88c5\u3002 \u610f\u56fe \u88c5\u9970\u6a21\u5f0f\uff08Decorator Pattern\uff09\uff1a \u52a8\u6001\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23\uff0c\u5c31\u589e\u52a0\u5bf9\u8c61\u529f\u80fd\u6765\u8bf4\uff0c\u88c5\u9970\u6a21\u5f0f\u6bd4\u751f\u6210\u5b50\u7c7b\u5b9e\u73b0\u66f4\u4e3a\u7075\u6d3b\u3002\u88c5\u9970\u6a21\u5f0f\u662f\u4e00\u79cd\u5bf9\u8c61\u7ed3\u6784\u578b\u6a21\u5f0f\u3002 \u89e3\u51b3\u95ee\u9898 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6269\u5c55\u4e00\u4e2a\u7c7b\u7684\u529f\u80fd\u4f1a\u4f7f\u7528\u7ee7\u627f\u65b9\u5f0f\u6765\u5b9e\u73b0\u3002\u4f46\u7ee7\u627f\u5177\u6709\u9759\u6001\u7279\u5f81\uff0c\u8026\u5408\u5ea6\u9ad8\uff0c\u5e76\u4e14\u968f\u7740\u6269\u5c55\u529f\u80fd\u7684\u589e\u591a\uff0c\u5b50\u7c7b\u4f1a\u5f88\u81a8\u80c0\u3002\u5982\u679c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u88c5\u5bf9\u8c61\uff08\u5373\u88c5\u9970\u5bf9\u8c61\uff09\u6765\u5305\u88f9\u771f\u5b9e\u5bf9\u8c61\uff0c\u5e76\u5728\u4fdd\u6301\u771f\u5b9e\u5bf9\u8c61\u7684\u7c7b\u7ed3\u6784\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u8fd9\u5c31\u662f\u88c5\u9970\u6a21\u5f0f\u7684\u76ee\u6807\u3002 \u5b9e\u73b0\u6982\u8ff0 \u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u88c5\u5bf9\u8c61\uff08\u5373\u88c5\u9970\u5bf9\u8c61\uff09\u6765\u5305\u88f9\u771f\u5b9e\u5bf9\u8c61\uff0c\u5e76\u5728\u4fdd\u6301\u771f\u5b9e\u5bf9\u8c61\u7684\u7c7b\u7ed3\u6784\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u7684\u529f\u80fd\u3002 \u8981\u70b9 \u88c5\u9970\u6a21\u5f0f\u7684\u6838\u5fc3\u5728\u4e8e\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u8bbe\u8ba1\uff0c\u62bd\u8c61\u88c5\u9970\u7c7b(\u88c5\u9970\u5668\u7c7b)\u548c\u539f\u59cb\u7c7b\u7ee7\u627f\u540c\u6837\u7684\u7236\u7c7b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bf9\u539f\u59cb\u7c7b\u201c\u5d4c\u5957\u201d\u591a\u4e2a\u88c5\u9970\u5668\u7c7b\u3002\u62bd\u8c61\u88c5\u9970\u7c7b(\u88c5\u9970\u5668\u7c7b)\u662f\u5bf9\u529f\u80fd\u7684\u589e\u5f3a\uff0c\u8fd9\u4e5f\u662f\u88c5\u9970\u5668\u6a21\u5f0f\u5e94\u7528\u573a\u666f\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u3002\u5e76\u4e14\u62bd\u8c61\u88c5\u9970\u7c7b\u7ef4\u6301\u4e00\u4e2a\u5bf9\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528 component\uff0c\u62bd\u8c61\u88c5\u9970\u7c7b\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6216 Setter \u65b9\u6cd5\u6ce8\u5165\u4e00\u4e2a\u62bd\u8c61\u6784\u4ef6\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u5e94\u7528\u573a\u666f \u5728\u4e0d\u5f71\u54cd\u5176\u4ed6\u5bf9\u8c61\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5355\u4e2a\u5bf9\u8c61\u52a8\u6001\u6269\u5c55\u804c\u8d23\uff1b \u4e0d\u9002\u5b9c\u91c7\u7528\u7ee7\u627f\u7684\u65b9\u5f0f\u8fdb\u884c\u6269\u5c55\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u88c5\u9970\u6a21\u5f0f\u3002 \u4f18\u70b9 \u5bf9\u4e8e\u6269\u5c55\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u88c5\u9970\u6a21\u5f0f\u6bd4\u7ee7\u627f\u66f4\u52a0\u7075\u6d3b\u6027\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u7684\u4e2a\u6570\u6025\u5267\u589e\u52a0\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u52a8\u6001\u7684\u65b9\u5f0f\u6765\u6269\u5c55\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\u3002 \u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u591a\u6b21\u88c5\u9970\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\u8fdb\u884c\u591a\u6b21\u88c5\u9970\u3002 \u5177\u4f53\u6784\u4ef6\u7c7b\u4e0e\u5177\u4f53\u88c5\u9970\u7c7b\u53ef\u4ee5\u72ec\u7acb\u53d8\u5316\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\u3002 \u7f3a\u70b9 \u88c5\u9970\u6a21\u5f0f\u4e2d\u4f1a\u589e\u52a0\u5f88\u591a\u5c0f\u7684\u5bf9\u8c61\uff0c\u5bf9\u8c61\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u5404\u79cd\u88c5\u9970\u7684\u8fde\u63a5\u65b9\u5f0f\u4e0d\u540c\uff0c\u800c\u5e76\u4e0d\u662f\u804c\u8d23\u4e0d\u540c\uff0c\u5927\u91cf\u5c0f\u5bf9\u8c61\u7684\u4ea7\u751f\u4f1a\u5360\u7528\u8f83\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff1b \u88c5\u9970\u6a21\u5f0f\u6bd4\u7ee7\u627f\u6a21\u5f0f\u66f4\u7075\u6d3b\uff0c\u4f46\u4e5f\u66f4\u5bb9\u6613\u51fa\u9519\uff0c\u66f4\u96be\u4e8e\u6392\u9519\u3002 \u6a21\u5f0f\u7ed3\u6784 Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a \u5b83\u662f\u5177\u4f53\u6784\u4ef6\u548c\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u5171\u540c\u7236\u7c7b\uff0c\u58f0\u660e\u4e86\u5728\u5177\u4f53\u6784\u4ef6\u4e2d\u5b9e\u73b0\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u4f7f\u5ba2\u6237\u7aef\u80fd\u591f\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u672a\u88ab\u88c5\u9970\u7684\u5bf9\u8c61\u4ee5\u53ca\u88c5\u9970\u4e4b\u540e\u7684\u5bf9\u8c61\u3002 ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a \u5b83\u662f\u62bd\u8c61\u6784\u4ef6\u7c7b\u7684\u5b50\u7c7b\uff0c\u5b9e\u73b0\u4e86\u5728\u62bd\u8c61\u6784\u4ef6\u4e2d\u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u88c5\u9970\u5668\u5c31\u662f\u4e3a\u5b83\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\uff08\u65b9\u6cd5\uff09\u3002 Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1a \u5b83\u4e5f\u662f\u62bd\u8c61\u6784\u4ef6\u7c7b\u7684\u5b50\u7c7b\uff0c\u7528\u4e8e\u7ed9\u5177\u4f53\u6784\u4ef6\u589e\u52a0\u529f\u80fd\uff0c\u4f46\u662f\u5177\u4f53\u529f\u80fd\u5728\u5b83\u7684\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u3002\u5b83\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u901a\u8fc7\u8be5\u5f15\u7528\u53ef\u4ee5\u8c03\u7528\u6784\u4ef6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5e76\u901a\u8fc7\u5176\u5b50\u7c7b(\u5177\u4f53\u88c5\u9970\u7c7b)\u6269\u5c55\u8be5\u65b9\u6cd5\uff0c\u4ee5\u8fbe\u5230\u88c5\u9970\u7684\u76ee\u7684\u3002 ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1a \u5b83\u662f\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u5b50\u7c7b\uff0c\u8d1f\u8d23\u5411\u6784\u4ef6\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002\u6bcf\u4e00\u4e2a\u5177\u4f53\u88c5\u9970\u7c7b\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e9b\u65b0\u7684\u884c\u4e3a\uff0c\u5b83\u53ef\u4ee5\u8c03\u7528\u5728\u62bd\u8c61\u88c5\u9970\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5e76\u53ef\u4ee5\u589e\u52a0\u65b0\u7684\u65b9\u6cd5\u7528\u4ee5\u6269\u5145\u5bf9\u8c61\u7684\u884c\u4e3a\u3002 \u4ee3\u7801\u793a\u4f8b \u8def\u8fb9\u644a\u624b\u6293\u997c\u5546\u5bb6\u4ef7\u683c\uff0c\u57fa\u78403\u5143\u7248\uff0c\u57fa\u78405\u5143\u7248\uff0c\u52a0\u9e21\u86cb1.5\u5143\uff0c\u52a0\u706b\u817f\u80a01\u5143\uff0c\u52a0\u9752\u83dc0.5\u5143 \u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528\u88c5\u9970\u5668\u6a21\u5f0f\u6765\u8868\u793a\u8d2d\u4e70\u4e0d\u540c\u7ec4\u5408\u7684\u624b\u6293\u997c\u3002 Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a HandPancake ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a ConcreteHandPancake Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1aDecorator ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1aaddEgg , addSausage , addVegetable HandPancake.h #pragma once #include <iostream> #include <iomanip> /// Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a HandPancake class HandPancake { public : virtual ~ HandPancake () = default ; virtual std :: string offerHandPancake () = 0 ; // \u5236\u4f5c\u624b\u6293\u997c virtual float calcPrice () = 0 ; // \u8ba1\u7b97\u4ef7\u683c protected : HandPancake () = default ; }; ConcreteHandPancake.h #pragma once #include <sstream> #include \"HandPancake.h\" enum TYPE { Base3 = 3 , Base5 = 5 , }; /// ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a ConcreteHandPancake class ConcreteHandPancake : public HandPancake { public : explicit ConcreteHandPancake ( TYPE price ) { //std::cout << \"ConcreteHandPancake Hello\" << std::endl; basePrice = price ; } ~ ConcreteHandPancake () override { //std::cout << \"ConcreteHandPancake Bye\" << std::endl; } std :: string offerHandPancake () override { std :: stringstream buf ; buf . precision ( 2 ); //\u8986\u76d6\u9ed8\u8ba4\u7cbe\u5ea6 buf . setf ( std :: ios :: fixed ); //\u4fdd\u7559\u5c0f\u6570\u4f4d\u81ea\u52a8\u88650 buf << basePrice ; std :: string str ; str = buf . str (); return \"\u57fa\u7840\" + str + \"\u5143\u624b\u6293\u997c\" ; } float calcPrice () override { return basePrice ; } private : float basePrice ; }; Decorator.h #pragma once #include \"HandPancake.h\" #include <memory> /// Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1aDecorator class Decorator : public HandPancake { public : explicit Decorator ( std :: shared_ptr < HandPancake > handPancake ) { this -> handPancake = handPancake ; } ~ Decorator () override { }; std :: string offerHandPancake () override { return handPancake -> offerHandPancake (); } float calcPrice () override { return handPancake -> calcPrice (); } private : std :: shared_ptr < HandPancake > handPancake ; // \u7ef4\u6301\u4e00\u4e2a\u5bf9\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528 }; ConcreteDecorator.h #pragma once #include \"Decorator.h\" /// ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1aaddEgg , addSausage , addVegetable , class addEgg : public Decorator { public : explicit addEgg ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addEgg () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u9e21\u86cb\" ; } float calcPrice () override { return Decorator :: calcPrice () + float ( 1.5 ); } }; class addSausage : public Decorator { public : explicit addSausage ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addSausage () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u706b\u817f\u80a0\" ; } float calcPrice () override { return Decorator :: calcPrice () + 1 ; } }; class addVegetable : public Decorator { public : explicit addVegetable ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addVegetable () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u9752\u83dc\" ; } float calcPrice () override { return Decorator :: calcPrice () + float ( 0.5 ); } }; Customer.h #pragma once #include \"ConreteDecorator.h\" /// Customer \u987e\u5ba2 class Customer { public : explicit Customer ( const std :: string & name ) { this -> name = name ; std :: cout << \"Customer \" << name << \" Hello\" << std :: endl ; } ~ Customer () { //delete handPancake; std :: cout << \"Customer \" << name << \" Bye\" << std :: endl ; } void buy ( std :: shared_ptr < HandPancake > pancake ) { this -> handPancake = pancake ; // std::setiosflags(std::ios::fixed) << std::setprecision(2) \u63a7\u5236\u6d6e\u70b9\u578b\u5c0f\u6570\u70b9\u540e\u8f93\u51fa\u7684\u4f4d\u6570\u5e76\u81ea\u52a8\u88650 std :: cout << name + \"\u8d2d\u4e70\u4e86:\" << pancake -> offerHandPancake () << \",\u5171\u82b1\u4e86:\" << std :: setiosflags ( std :: ios :: fixed ) << std :: setprecision ( 2 ) << pancake -> calcPrice () << \"\u5143\u94b1\" << std :: endl ; } private : std :: string name ; std :: shared_ptr < HandPancake > handPancake = nullptr ; }; main.cpp #include <iostream> #include \"ConreteDecorator.h\" #include \"ConcreteHandPancake.h\" #include \"Customer.h\" int main () { //\u6709\u4e2a \u5f20\u4e09 \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78403\u5143\u7684\u624b\u6293\u997c { auto customerA = std :: make_shared < Customer > ( \"\u5f20\u4e09\" ); customerA -> buy ( std :: make_shared < ConcreteHandPancake > ( Base3 )); } std :: cout << \"================\" << std :: endl ; //\u6709\u4e2a \u674e\u56db \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78405\u5143\u7684\u624b\u6293\u997c,\u52a0\u9e21\u86cb { auto customerB = std :: make_shared < Customer > ( \"\u674e\u56db\" ); auto handPancake = std :: make_shared < ConcreteHandPancake > ( Base5 ); auto eggCake = std :: make_shared < addEgg > ( handPancake ); customerB -> buy ( eggCake ); } std :: cout << \"================\" << std :: endl ; //\u6709\u4e2a \u738b\u4e94 \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78405\u5143\u7684\u624b\u6293\u997c,\u52a0\u9e21\u86cb,\u52a0\u706b\u817f\uff0c\u52a0\u9752\u83dc\u3002\u4e0d\u6127\u662f \u94bb\u77f3\u738b\u8001\u4e94 { auto customerC = std :: make_shared < Customer > ( \"\u738b\u4e94\" ); auto handPancake = std :: make_shared < ConcreteHandPancake > ( Base5 ); auto eggCake = std :: make_shared < addEgg > ( handPancake ); auto sausageCake = std :: make_shared < addSausage > ( eggCake ); auto vegetableCake = std :: make_shared < addVegetable > ( sausageCake ); customerC -> buy ( vegetableCake ); } return 0 ; } \u8fd0\u884c\u7ed3\u679c Customer \u5f20\u4e09 Hello \u5f20\u4e09\u8d2d\u4e70\u4e86 : \u57fa\u78403 .00 \u5143\u624b\u6293\u997c , \u5171\u82b1\u4e86 : 3.00 \u5143\u94b1 Customer \u5f20\u4e09 Bye ================ Customer \u674e\u56db Hello \u674e\u56db\u8d2d\u4e70\u4e86 : \u57fa\u78405 .00 \u5143\u624b\u6293\u997c , \u52a0\u4e86\u9e21\u86cb , \u5171\u82b1\u4e86 : 6.50 \u5143\u94b1 Customer \u674e\u56db Bye ================ Customer \u738b\u4e94 Hello \u738b\u4e94\u8d2d\u4e70\u4e86 : \u57fa\u78405 .00 \u5143\u624b\u6293\u997c , \u52a0\u4e86\u9e21\u86cb , \u52a0\u4e86\u706b\u817f\u80a0 , \u52a0\u4e86\u9752\u83dc , \u5171\u82b1\u4e86 : 8.00 \u5143\u94b1 Customer \u738b\u4e94 Bye \u4ee3\u7801\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\u554a\uff01","title":"\u4ecb\u7ecd"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_1","text":"\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u5141\u8bb8\u5411\u4e00\u4e2a\u73b0\u6709\u7684\u5bf9\u8c61\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\uff0c\u540c\u65f6\u53c8\u4e0d\u6539\u53d8\u5176\u7ed3\u6784\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u5b83\u662f\u4f5c\u4e3a\u73b0\u6709\u7684\u7c7b\u7684\u4e00\u4e2a\u5305\u88c5\u3002","title":"\u4ecb\u7ecd"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_2","text":"\u88c5\u9970\u6a21\u5f0f\uff08Decorator Pattern\uff09\uff1a \u52a8\u6001\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23\uff0c\u5c31\u589e\u52a0\u5bf9\u8c61\u529f\u80fd\u6765\u8bf4\uff0c\u88c5\u9970\u6a21\u5f0f\u6bd4\u751f\u6210\u5b50\u7c7b\u5b9e\u73b0\u66f4\u4e3a\u7075\u6d3b\u3002\u88c5\u9970\u6a21\u5f0f\u662f\u4e00\u79cd\u5bf9\u8c61\u7ed3\u6784\u578b\u6a21\u5f0f\u3002","title":"\u610f\u56fe"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_3","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6269\u5c55\u4e00\u4e2a\u7c7b\u7684\u529f\u80fd\u4f1a\u4f7f\u7528\u7ee7\u627f\u65b9\u5f0f\u6765\u5b9e\u73b0\u3002\u4f46\u7ee7\u627f\u5177\u6709\u9759\u6001\u7279\u5f81\uff0c\u8026\u5408\u5ea6\u9ad8\uff0c\u5e76\u4e14\u968f\u7740\u6269\u5c55\u529f\u80fd\u7684\u589e\u591a\uff0c\u5b50\u7c7b\u4f1a\u5f88\u81a8\u80c0\u3002\u5982\u679c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u88c5\u5bf9\u8c61\uff08\u5373\u88c5\u9970\u5bf9\u8c61\uff09\u6765\u5305\u88f9\u771f\u5b9e\u5bf9\u8c61\uff0c\u5e76\u5728\u4fdd\u6301\u771f\u5b9e\u5bf9\u8c61\u7684\u7c7b\u7ed3\u6784\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u8fd9\u5c31\u662f\u88c5\u9970\u6a21\u5f0f\u7684\u76ee\u6807\u3002","title":"\u89e3\u51b3\u95ee\u9898"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_4","text":"\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u6765\u521b\u5efa\u4e00\u4e2a\u5305\u88c5\u5bf9\u8c61\uff08\u5373\u88c5\u9970\u5bf9\u8c61\uff09\u6765\u5305\u88f9\u771f\u5b9e\u5bf9\u8c61\uff0c\u5e76\u5728\u4fdd\u6301\u771f\u5b9e\u5bf9\u8c61\u7684\u7c7b\u7ed3\u6784\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u7684\u529f\u80fd\u3002","title":"\u5b9e\u73b0\u6982\u8ff0"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_5","text":"\u88c5\u9970\u6a21\u5f0f\u7684\u6838\u5fc3\u5728\u4e8e\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u8bbe\u8ba1\uff0c\u62bd\u8c61\u88c5\u9970\u7c7b(\u88c5\u9970\u5668\u7c7b)\u548c\u539f\u59cb\u7c7b\u7ee7\u627f\u540c\u6837\u7684\u7236\u7c7b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5bf9\u539f\u59cb\u7c7b\u201c\u5d4c\u5957\u201d\u591a\u4e2a\u88c5\u9970\u5668\u7c7b\u3002\u62bd\u8c61\u88c5\u9970\u7c7b(\u88c5\u9970\u5668\u7c7b)\u662f\u5bf9\u529f\u80fd\u7684\u589e\u5f3a\uff0c\u8fd9\u4e5f\u662f\u88c5\u9970\u5668\u6a21\u5f0f\u5e94\u7528\u573a\u666f\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u3002\u5e76\u4e14\u62bd\u8c61\u88c5\u9970\u7c7b\u7ef4\u6301\u4e00\u4e2a\u5bf9\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528 component\uff0c\u62bd\u8c61\u88c5\u9970\u7c7b\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6216 Setter \u65b9\u6cd5\u6ce8\u5165\u4e00\u4e2a\u62bd\u8c61\u6784\u4ef6\u7c7b\u578b\u7684\u5bf9\u8c61\u3002","title":"\u8981\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_6","text":"\u5728\u4e0d\u5f71\u54cd\u5176\u4ed6\u5bf9\u8c61\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5355\u4e2a\u5bf9\u8c61\u52a8\u6001\u6269\u5c55\u804c\u8d23\uff1b \u4e0d\u9002\u5b9c\u91c7\u7528\u7ee7\u627f\u7684\u65b9\u5f0f\u8fdb\u884c\u6269\u5c55\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u88c5\u9970\u6a21\u5f0f\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_7","text":"\u5bf9\u4e8e\u6269\u5c55\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u88c5\u9970\u6a21\u5f0f\u6bd4\u7ee7\u627f\u66f4\u52a0\u7075\u6d3b\u6027\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u7684\u4e2a\u6570\u6025\u5267\u589e\u52a0\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u52a8\u6001\u7684\u65b9\u5f0f\u6765\u6269\u5c55\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\u3002 \u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u591a\u6b21\u88c5\u9970\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\u8fdb\u884c\u591a\u6b21\u88c5\u9970\u3002 \u5177\u4f53\u6784\u4ef6\u7c7b\u4e0e\u5177\u4f53\u88c5\u9970\u7c7b\u53ef\u4ee5\u72ec\u7acb\u53d8\u5316\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\u3002","title":"\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_8","text":"\u88c5\u9970\u6a21\u5f0f\u4e2d\u4f1a\u589e\u52a0\u5f88\u591a\u5c0f\u7684\u5bf9\u8c61\uff0c\u5bf9\u8c61\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u5404\u79cd\u88c5\u9970\u7684\u8fde\u63a5\u65b9\u5f0f\u4e0d\u540c\uff0c\u800c\u5e76\u4e0d\u662f\u804c\u8d23\u4e0d\u540c\uff0c\u5927\u91cf\u5c0f\u5bf9\u8c61\u7684\u4ea7\u751f\u4f1a\u5360\u7528\u8f83\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff1b \u88c5\u9970\u6a21\u5f0f\u6bd4\u7ee7\u627f\u6a21\u5f0f\u66f4\u7075\u6d3b\uff0c\u4f46\u4e5f\u66f4\u5bb9\u6613\u51fa\u9519\uff0c\u66f4\u96be\u4e8e\u6392\u9519\u3002","title":"\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_9","text":"Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a \u5b83\u662f\u5177\u4f53\u6784\u4ef6\u548c\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u5171\u540c\u7236\u7c7b\uff0c\u58f0\u660e\u4e86\u5728\u5177\u4f53\u6784\u4ef6\u4e2d\u5b9e\u73b0\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u4f7f\u5ba2\u6237\u7aef\u80fd\u591f\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u672a\u88ab\u88c5\u9970\u7684\u5bf9\u8c61\u4ee5\u53ca\u88c5\u9970\u4e4b\u540e\u7684\u5bf9\u8c61\u3002 ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a \u5b83\u662f\u62bd\u8c61\u6784\u4ef6\u7c7b\u7684\u5b50\u7c7b\uff0c\u5b9e\u73b0\u4e86\u5728\u62bd\u8c61\u6784\u4ef6\u4e2d\u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u88c5\u9970\u5668\u5c31\u662f\u4e3a\u5b83\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\uff08\u65b9\u6cd5\uff09\u3002 Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1a \u5b83\u4e5f\u662f\u62bd\u8c61\u6784\u4ef6\u7c7b\u7684\u5b50\u7c7b\uff0c\u7528\u4e8e\u7ed9\u5177\u4f53\u6784\u4ef6\u589e\u52a0\u529f\u80fd\uff0c\u4f46\u662f\u5177\u4f53\u529f\u80fd\u5728\u5b83\u7684\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u3002\u5b83\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u901a\u8fc7\u8be5\u5f15\u7528\u53ef\u4ee5\u8c03\u7528\u6784\u4ef6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5e76\u901a\u8fc7\u5176\u5b50\u7c7b(\u5177\u4f53\u88c5\u9970\u7c7b)\u6269\u5c55\u8be5\u65b9\u6cd5\uff0c\u4ee5\u8fbe\u5230\u88c5\u9970\u7684\u76ee\u7684\u3002 ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1a \u5b83\u662f\u62bd\u8c61\u88c5\u9970\u7c7b\u7684\u5b50\u7c7b\uff0c\u8d1f\u8d23\u5411\u6784\u4ef6\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002\u6bcf\u4e00\u4e2a\u5177\u4f53\u88c5\u9970\u7c7b\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e9b\u65b0\u7684\u884c\u4e3a\uff0c\u5b83\u53ef\u4ee5\u8c03\u7528\u5728\u62bd\u8c61\u88c5\u9970\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5e76\u53ef\u4ee5\u589e\u52a0\u65b0\u7684\u65b9\u6cd5\u7528\u4ee5\u6269\u5145\u5bf9\u8c61\u7684\u884c\u4e3a\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%20%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/#_10","text":"\u8def\u8fb9\u644a\u624b\u6293\u997c\u5546\u5bb6\u4ef7\u683c\uff0c\u57fa\u78403\u5143\u7248\uff0c\u57fa\u78405\u5143\u7248\uff0c\u52a0\u9e21\u86cb1.5\u5143\uff0c\u52a0\u706b\u817f\u80a01\u5143\uff0c\u52a0\u9752\u83dc0.5\u5143 \u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528\u88c5\u9970\u5668\u6a21\u5f0f\u6765\u8868\u793a\u8d2d\u4e70\u4e0d\u540c\u7ec4\u5408\u7684\u624b\u6293\u997c\u3002 Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a HandPancake ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a ConcreteHandPancake Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1aDecorator ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1aaddEgg , addSausage , addVegetable HandPancake.h #pragma once #include <iostream> #include <iomanip> /// Component\uff08\u62bd\u8c61\u6784\u4ef6\uff09\uff1a HandPancake class HandPancake { public : virtual ~ HandPancake () = default ; virtual std :: string offerHandPancake () = 0 ; // \u5236\u4f5c\u624b\u6293\u997c virtual float calcPrice () = 0 ; // \u8ba1\u7b97\u4ef7\u683c protected : HandPancake () = default ; }; ConcreteHandPancake.h #pragma once #include <sstream> #include \"HandPancake.h\" enum TYPE { Base3 = 3 , Base5 = 5 , }; /// ConcreteComponent\uff08\u5177\u4f53\u6784\u4ef6\uff09\uff1a ConcreteHandPancake class ConcreteHandPancake : public HandPancake { public : explicit ConcreteHandPancake ( TYPE price ) { //std::cout << \"ConcreteHandPancake Hello\" << std::endl; basePrice = price ; } ~ ConcreteHandPancake () override { //std::cout << \"ConcreteHandPancake Bye\" << std::endl; } std :: string offerHandPancake () override { std :: stringstream buf ; buf . precision ( 2 ); //\u8986\u76d6\u9ed8\u8ba4\u7cbe\u5ea6 buf . setf ( std :: ios :: fixed ); //\u4fdd\u7559\u5c0f\u6570\u4f4d\u81ea\u52a8\u88650 buf << basePrice ; std :: string str ; str = buf . str (); return \"\u57fa\u7840\" + str + \"\u5143\u624b\u6293\u997c\" ; } float calcPrice () override { return basePrice ; } private : float basePrice ; }; Decorator.h #pragma once #include \"HandPancake.h\" #include <memory> /// Decorator\uff08\u62bd\u8c61\u88c5\u9970\u7c7b\uff09\uff1aDecorator class Decorator : public HandPancake { public : explicit Decorator ( std :: shared_ptr < HandPancake > handPancake ) { this -> handPancake = handPancake ; } ~ Decorator () override { }; std :: string offerHandPancake () override { return handPancake -> offerHandPancake (); } float calcPrice () override { return handPancake -> calcPrice (); } private : std :: shared_ptr < HandPancake > handPancake ; // \u7ef4\u6301\u4e00\u4e2a\u5bf9\u62bd\u8c61\u6784\u4ef6\u5bf9\u8c61\u7684\u5f15\u7528 }; ConcreteDecorator.h #pragma once #include \"Decorator.h\" /// ConcreteDecorator\uff08\u5177\u4f53\u88c5\u9970\u7c7b\uff09\uff1aaddEgg , addSausage , addVegetable , class addEgg : public Decorator { public : explicit addEgg ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addEgg () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u9e21\u86cb\" ; } float calcPrice () override { return Decorator :: calcPrice () + float ( 1.5 ); } }; class addSausage : public Decorator { public : explicit addSausage ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addSausage () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u706b\u817f\u80a0\" ; } float calcPrice () override { return Decorator :: calcPrice () + 1 ; } }; class addVegetable : public Decorator { public : explicit addVegetable ( std :: shared_ptr < HandPancake > handPancake ) : Decorator ( handPancake ) { }; ~ addVegetable () override { } std :: string offerHandPancake () override { return Decorator :: offerHandPancake () + \",\u52a0\u4e86\u9752\u83dc\" ; } float calcPrice () override { return Decorator :: calcPrice () + float ( 0.5 ); } }; Customer.h #pragma once #include \"ConreteDecorator.h\" /// Customer \u987e\u5ba2 class Customer { public : explicit Customer ( const std :: string & name ) { this -> name = name ; std :: cout << \"Customer \" << name << \" Hello\" << std :: endl ; } ~ Customer () { //delete handPancake; std :: cout << \"Customer \" << name << \" Bye\" << std :: endl ; } void buy ( std :: shared_ptr < HandPancake > pancake ) { this -> handPancake = pancake ; // std::setiosflags(std::ios::fixed) << std::setprecision(2) \u63a7\u5236\u6d6e\u70b9\u578b\u5c0f\u6570\u70b9\u540e\u8f93\u51fa\u7684\u4f4d\u6570\u5e76\u81ea\u52a8\u88650 std :: cout << name + \"\u8d2d\u4e70\u4e86:\" << pancake -> offerHandPancake () << \",\u5171\u82b1\u4e86:\" << std :: setiosflags ( std :: ios :: fixed ) << std :: setprecision ( 2 ) << pancake -> calcPrice () << \"\u5143\u94b1\" << std :: endl ; } private : std :: string name ; std :: shared_ptr < HandPancake > handPancake = nullptr ; }; main.cpp #include <iostream> #include \"ConreteDecorator.h\" #include \"ConcreteHandPancake.h\" #include \"Customer.h\" int main () { //\u6709\u4e2a \u5f20\u4e09 \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78403\u5143\u7684\u624b\u6293\u997c { auto customerA = std :: make_shared < Customer > ( \"\u5f20\u4e09\" ); customerA -> buy ( std :: make_shared < ConcreteHandPancake > ( Base3 )); } std :: cout << \"================\" << std :: endl ; //\u6709\u4e2a \u674e\u56db \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78405\u5143\u7684\u624b\u6293\u997c,\u52a0\u9e21\u86cb { auto customerB = std :: make_shared < Customer > ( \"\u674e\u56db\" ); auto handPancake = std :: make_shared < ConcreteHandPancake > ( Base5 ); auto eggCake = std :: make_shared < addEgg > ( handPancake ); customerB -> buy ( eggCake ); } std :: cout << \"================\" << std :: endl ; //\u6709\u4e2a \u738b\u4e94 \u7684\u987e\u5ba2,\u4ed6\u8981\u4e86\u4e00\u4e2a\u57fa\u78405\u5143\u7684\u624b\u6293\u997c,\u52a0\u9e21\u86cb,\u52a0\u706b\u817f\uff0c\u52a0\u9752\u83dc\u3002\u4e0d\u6127\u662f \u94bb\u77f3\u738b\u8001\u4e94 { auto customerC = std :: make_shared < Customer > ( \"\u738b\u4e94\" ); auto handPancake = std :: make_shared < ConcreteHandPancake > ( Base5 ); auto eggCake = std :: make_shared < addEgg > ( handPancake ); auto sausageCake = std :: make_shared < addSausage > ( eggCake ); auto vegetableCake = std :: make_shared < addVegetable > ( sausageCake ); customerC -> buy ( vegetableCake ); } return 0 ; } \u8fd0\u884c\u7ed3\u679c Customer \u5f20\u4e09 Hello \u5f20\u4e09\u8d2d\u4e70\u4e86 : \u57fa\u78403 .00 \u5143\u624b\u6293\u997c , \u5171\u82b1\u4e86 : 3.00 \u5143\u94b1 Customer \u5f20\u4e09 Bye ================ Customer \u674e\u56db Hello \u674e\u56db\u8d2d\u4e70\u4e86 : \u57fa\u78405 .00 \u5143\u624b\u6293\u997c , \u52a0\u4e86\u9e21\u86cb , \u5171\u82b1\u4e86 : 6.50 \u5143\u94b1 Customer \u674e\u56db Bye ================ Customer \u738b\u4e94 Hello \u738b\u4e94\u8d2d\u4e70\u4e86 : \u57fa\u78405 .00 \u5143\u624b\u6293\u997c , \u52a0\u4e86\u9e21\u86cb , \u52a0\u4e86\u706b\u817f\u80a0 , \u52a0\u4e86\u9752\u83dc , \u5171\u82b1\u4e86 : 8.00 \u5143\u94b1 Customer \u738b\u4e94 Bye \u4ee3\u7801\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\u554a\uff01","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","text":"\u5de5\u5382\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff0c\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u3001\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\u3002 \u5728\u5de5\u5382\u6a21\u5f0f\u4e2d\uff0c\u6211\u4eec\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u4e0d\u4f1a\u5bf9\u5ba2\u6237\u7aef\u66b4\u9732\u521b\u5efa\u903b\u8f91\uff0c\u5e76\u4e14\u662f\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u5171\u540c\u7684\u63a5\u53e3\u6765\u6307\u5411\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u4f7f\u7528\u4e86 C++ \u591a\u6001\u7684\u7279\u6027\uff0c\u5c06\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\uff0c\u901a\u8fc7\u4e00\u4e2a\u5de5\u5382\u7c7b\u521b\u5efa\u5bf9\u5e94\u7684\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\uff09\u5bf9\u8c61\u3002\u5728\u9879\u76ee\u590d\u6742\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4fbf\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u7684\u521b\u5efa\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u6784\u6210 \u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u6307\u5b9a\u7684\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u662f\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7ee7\u627f\u7684\u7236\u7c7b\u6216\u5b9e\u73b0\u7684\u63a5\u53e3\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5de5\u5382\u7c7b\u6240\u521b\u5efa\u7684\u5bf9\u8c61\u5c31\u662f\u6b64\u5177\u4f53\u4ea7\u54c1\u5b9e\u4f8b\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u7279\u70b9 \u5de5\u5382\u7c7b\u5c01\u88c5\u4e86\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u51fd\u6570\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u7f3a\u70b9 \u6269\u5c55\u6027\u975e\u5e38\u5dee\uff0c\u65b0\u589e\u4ea7\u54c1\u7684\u65f6\u5019\uff0c\u9700\u8981\u53bb\u4fee\u6539\u5de5\u5382\u7c7b\u3002 \u4ee3\u7801\u793a\u4f8b \u6709\u4e00\u5bb6\u751f\u4ea7\u5904\u7406\u5668\u6838\u7684\u5382\u5bb6\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5de5\u5382\uff0c\u80fd\u591f\u751f\u4ea7\u4e24\u79cd\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\u3002\u5ba2\u6237\u9700\u8981\u4ec0\u4e48\u6837\u7684\u5904\u7406\u5668\u6838\uff0c\u4e00\u5b9a\u8981\u663e\u5f0f\u5730\u544a\u8bc9\u751f\u4ea7\u5de5\u5382\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u5b9e\u73b0\u65b9\u6848\u3002 SimpleFactory.h #pragma once #include <iostream> #include <memory> enum class CTYPE { CORE_A , CORE_B }; class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; //\u5355\u6838A class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"SingleCore A\" << std :: endl ; } }; //\u5355\u6838B class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"SingleCore B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > shared_CPU ; //\u552f\u4e00\u7684\u5de5\u5382\uff0c\u53ef\u4ee5\u751f\u4ea7\u4e24\u79cd\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\uff0c\u5728\u5185\u90e8\u5224\u65ad class Factory { public : Factory () = default ; ~ Factory () = default ; shared_CPU CreateSingleCore ( enum CTYPE ctype ) { if ( ctype == CTYPE :: CORE_A ) //\u5de5\u5382\u5185\u90e8\u5224\u65ad return std :: make_shared < SingleCoreA > (); //\u751f\u4ea7\u6838A else if ( ctype == CTYPE :: CORE_B ) return std :: make_shared < SingleCoreB > (); //\u751f\u4ea7\u6838B else return nullptr ; } }; main.cpp #include <iostream> #include \"SimpleFactory.h\" int main () { auto factoryA = std :: make_shared < Factory > (); auto cpu_A = factoryA -> CreateSingleCore ( CTYPE :: CORE_A ); auto cpu_B = factoryA -> CreateSingleCore ( CTYPE :: CORE_B ); cpu_A -> Show (); cpu_B -> Show (); return 0 ; } \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u6784\u6210 \u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u7531\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u4e8e\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5bf9\u5e94\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5b83\u662f\u5177\u4f53\u4ea7\u54c1\u7ee7\u627f\u7684\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u6240\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u6b64\u7c7b\u3002 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u7279\u70b9 \u5382\u65b9\u6cd5\u6a21\u5f0f\u62bd\u8c61\u51fa\u4e86\u5de5\u5382\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u4ea4\u7531\u5b50\u7c7b\u53bb\u5b9e\u73b0\u3002 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u5e94\u7528\u5e76\u4e0d\u53ea\u662f\u4e3a\u4e86\u5c01\u88c5\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u800c\u662f\u8981\u628a\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u521b\u5efa\u653e\u5230\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u7f3a\u70b9 \u6bcf\u65b0\u589e\u4e00\u4e2a\u4ea7\u54c1\uff0c\u5c31\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002\u76f8\u6bd4\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u800c\u8a00\uff0c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u9700\u8981\u66f4\u591a\u7684\u7c7b\u5b9a\u4e49\u3002 \u4e00\u6761\u751f\u4ea7\u7ebf\u53ea\u80fd\u4e00\u79cd\u4ea7\u54c1\u3002 \u4ee3\u7801\u793a\u4f8b \u8fd8\u662f\u4ee5\u521a\u624d\u7684\u4f8b\u5b50\u89e3\u91ca\u3002\u8fd9\u5bb6\u751f\u4ea7\u5904\u7406\u5668\u6838\u7684\u4ea7\u5bb6\u8d5a\u4e86\u4e0d\u5c11\u94b1\uff0c\u4e8e\u662f\u51b3\u5b9a\u518d\u5f00\u8bbe\u4e00\u4e2a\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 B \u578b\u53f7\u7684\u5355\u6838\uff0c\u800c\u539f\u6765\u7684\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 A \u578b\u53f7\u7684\u5355\u6838\u3002\u8fd9\u65f6\uff0c\u5ba2\u6237\u8981\u505a\u7684\u662f\u627e\u597d\u5de5\u5382\uff0c\u6bd4\u5982\u8981 A \u578b\u53f7\u7684\u6838\uff0c\u5c31\u627e A \u5de5\u5382\u8981\uff1b\u5426\u5219\u627e B \u5de5\u5382\u8981\uff0c\u4e0d\u518d\u9700\u8981\u544a\u8bc9\u5de5\u5382\u5177\u4f53\u8981\u4ec0\u4e48\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\u4e86\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5b9e\u73b0\u65b9\u6848\u3002 FactoryMethod.h #pragma once #include <iostream> #include <memory> class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; //\u5355\u6838A class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"SingleCore A\" << std :: endl ; } }; //\u5355\u6838B class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"SingleCore B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > shared_CPU ; class Factory { public : Factory () = default ; virtual ~ Factory () = default ; virtual shared_CPU CreateSingleCore () = 0 ; }; //\u751f\u4ea7A\u6838\u7684\u5de5\u5382 class FactoryA : public Factory { public : FactoryA () = default ; virtual ~ FactoryA () = default ; virtual shared_CPU CreateSingleCore () { return std :: make_shared < SingleCoreA > (); } }; //\u751f\u4ea7B\u6838\u7684\u5de5\u5382 class FactoryB : public Factory { public : FactoryB () = default ; virtual ~ FactoryB () = default ; virtual shared_CPU CreateSingleCore () { return std :: make_shared < SingleCoreB > (); } }; main.cpp #include <iostream> #include \"FactoryMethod.h\" int main () { auto factoryA = std :: make_shared < FactoryA > (); auto factoryB = std :: make_shared < FactoryB > (); auto cpu_a = factoryA -> CreateSingleCore (); auto cpu_b = factoryB -> CreateSingleCore (); cpu_a -> Show (); cpu_b -> Show (); return 0 ; } \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u6784\u6210\uff08\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u6837\uff09 \u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u7531\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u4e8e\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5bf9\u5e94\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5b83\u662f\u5177\u4f53\u4ea7\u54c1\u7ee7\u627f\u7684\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u6240\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u6b64\u7c7b\u3002 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u7279\u70b9 \u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u4ea7\u54c1\u65cf\u4e2d\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002\u5982\u521b\u5efa\u8010\u514b\u5de5\u5382\uff0c\u5219\u53ef\u4ee5\u521b\u5efa\u8010\u514b\u978b\u5b50\u4ea7\u54c1\u3001\u8863\u670d\u4ea7\u54c1\u3001\u88e4\u5b50\u4ea7\u54c1\u7b49\u3002 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u7f3a\u70b9 \u540c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u6837\uff0c\u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002 \u4ee3\u7801\u793a\u4f8b \u8fd8\u662f\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u5bb6\u516c\u53f8\u7684\u6280\u672f\u4e0d\u65ad\u8fdb\u6b65\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u751f\u4ea7\u5355\u6838\u5904\u7406\u5668\uff0c\u4e5f\u80fd\u751f\u4ea7\u591a\u6838\u5904\u7406\u5668\u3002\u73b0\u5728\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u90fd\u97ad\u957f\u83ab\u53ca\u3002\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u767b\u573a\u4e86\u3002\u5b83\u7684\u5b9a\u4e49\u4e3a\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u6216\u76f8\u4e92\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u800c\u65e0\u9700\u6307\u5b9a\u5b83\u4eec\u5177\u4f53\u7684\u7c7b\u3002\u5177\u4f53\u8fd9\u6837\u5e94\u7528\uff0c\u8fd9\u5bb6\u516c\u53f8\u8fd8\u662f\u5f00\u8bbe\u4e24\u4e2a\u5de5\u5382\uff0c\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u751f\u4ea7 A \u578b\u53f7\u7684\u5355\u6838\u591a\u6838\u5904\u7406\u5668\uff0c\u800c\u53e6\u4e00\u4e2a\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 B \u578b\u53f7\u7684\u5355\u6838\u591a\u6838\u5904\u7406\u5668\uff0c\u4e0b\u9762\u7ed9\u51fa\u5b9e\u73b0\u7684\u4ee3\u7801\u3002 AbstractFactory.h #pragma once #include <iostream> #include <memory> //\u5355\u6838 class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"Single Core A\" << std :: endl ; } }; class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"Single Core B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > sharedSingleCore ; //\u591a\u6838 class MultiCore { public : MultiCore () = default ; virtual ~ MultiCore () = default ; virtual void Show () = 0 ; }; class MultiCoreA : public MultiCore { public : MultiCoreA () = default ; virtual ~ MultiCoreA () = default ; virtual void Show () { std :: cout << \"Multi Core A\" << std :: endl ; } }; class MultiCoreB : public MultiCore { public : MultiCoreB () = default ; virtual ~ MultiCoreB () = default ; virtual void Show () { std :: cout << \"Multi Core B\" << std :: endl ; } }; typedef std :: shared_ptr < MultiCore > sharedMultiCore ; //\u5de5\u5382 class CoreFactory { public : CoreFactory () = default ; virtual ~ CoreFactory () = default ; virtual sharedSingleCore CreateSingleCore () = 0 ; virtual sharedMultiCore CreateMultiCore () = 0 ; }; //\u5de5\u5382A\uff0c\u4e13\u95e8\u7528\u6765\u751f\u4ea7A\u578b\u53f7\u7684\u5904\u7406\u5668 class FactoryA : public CoreFactory { public : FactoryA () = default ; virtual ~ FactoryA () = default ; virtual sharedSingleCore CreateSingleCore () { return std :: make_shared < SingleCoreA > (); } virtual sharedMultiCore CreateMultiCore () { return std :: make_shared < MultiCoreA > (); } }; //\u5de5\u5382B\uff0c\u4e13\u95e8\u7528\u6765\u751f\u4ea7B\u578b\u53f7\u7684\u5904\u7406\u5668 class FactoryB : public CoreFactory { public : FactoryB () = default ; virtual ~ FactoryB () = default ; virtual sharedSingleCore CreateSingleCore () { return std :: make_shared < SingleCoreB > (); } virtual sharedMultiCore CreateMultiCore () { return std :: make_shared < MultiCoreB > (); } }; main.cpp #include <iostream> #include \"AbstractFactory.h\" int main () { auto factoryA = std :: make_shared < FactoryA > (); auto factoryB = std :: make_shared < FactoryB > (); auto singleCoreA = factoryA -> CreateSingleCore (); auto multiCoreA = factoryA -> CreateMultiCore (); singleCoreA -> Show (); multiCoreA -> Show (); auto singleCoreB = factoryB -> CreateSingleCore (); auto multiCoreB = factoryB -> CreateMultiCore (); singleCoreB -> Show (); multiCoreB -> Show (); return 0 ; } \u603b\u7ed3 \u4ee5\u4e0a\u4e09\u79cd\u5de5\u5382\u6a21\u5f0f\uff0c\u5728\u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u90fd\u5b58\u5728\u4e00\u5b9a\u7684\u7f3a\u9677\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\uff0c\u9700\u8981\u53bb\u4fee\u6539\u5de5\u5382\u7c7b\uff0c\u8fd9\u8fdd\u80cc\u4e86\u5f00\u95ed\u6cd5\u5219\u3002 \u5de5\u5382\u65b9\u5f0f\u6a21\u5f0f\u548c\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u8fd9\u5c31\u4f1a\u589e\u5927\u4ee3\u7801\u7684\u7f16\u5199\u91cf\u3002","title":"05. \u5de5\u5382\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_1","text":"","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_2","text":"\u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u6307\u5b9a\u7684\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u662f\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7ee7\u627f\u7684\u7236\u7c7b\u6216\u5b9e\u73b0\u7684\u63a5\u53e3\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5de5\u5382\u7c7b\u6240\u521b\u5efa\u7684\u5bf9\u8c61\u5c31\u662f\u6b64\u5177\u4f53\u4ea7\u54c1\u5b9e\u4f8b\u3002","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_3","text":"\u5de5\u5382\u7c7b\u5c01\u88c5\u4e86\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u51fd\u6570\u3002","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u7279\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_4","text":"\u6269\u5c55\u6027\u975e\u5e38\u5dee\uff0c\u65b0\u589e\u4ea7\u54c1\u7684\u65f6\u5019\uff0c\u9700\u8981\u53bb\u4fee\u6539\u5de5\u5382\u7c7b\u3002","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_5","text":"\u6709\u4e00\u5bb6\u751f\u4ea7\u5904\u7406\u5668\u6838\u7684\u5382\u5bb6\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u5de5\u5382\uff0c\u80fd\u591f\u751f\u4ea7\u4e24\u79cd\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\u3002\u5ba2\u6237\u9700\u8981\u4ec0\u4e48\u6837\u7684\u5904\u7406\u5668\u6838\uff0c\u4e00\u5b9a\u8981\u663e\u5f0f\u5730\u544a\u8bc9\u751f\u4ea7\u5de5\u5382\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u5b9e\u73b0\u65b9\u6848\u3002 SimpleFactory.h #pragma once #include <iostream> #include <memory> enum class CTYPE { CORE_A , CORE_B }; class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; //\u5355\u6838A class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"SingleCore A\" << std :: endl ; } }; //\u5355\u6838B class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"SingleCore B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > shared_CPU ; //\u552f\u4e00\u7684\u5de5\u5382\uff0c\u53ef\u4ee5\u751f\u4ea7\u4e24\u79cd\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\uff0c\u5728\u5185\u90e8\u5224\u65ad class Factory { public : Factory () = default ; ~ Factory () = default ; shared_CPU CreateSingleCore ( enum CTYPE ctype ) { if ( ctype == CTYPE :: CORE_A ) //\u5de5\u5382\u5185\u90e8\u5224\u65ad return std :: make_shared < SingleCoreA > (); //\u751f\u4ea7\u6838A else if ( ctype == CTYPE :: CORE_B ) return std :: make_shared < SingleCoreB > (); //\u751f\u4ea7\u6838B else return nullptr ; } }; main.cpp #include <iostream> #include \"SimpleFactory.h\" int main () { auto factoryA = std :: make_shared < Factory > (); auto cpu_A = factoryA -> CreateSingleCore ( CTYPE :: CORE_A ); auto cpu_B = factoryA -> CreateSingleCore ( CTYPE :: CORE_B ); cpu_A -> Show (); cpu_B -> Show (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_6","text":"","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_7","text":"\u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u7531\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u4e8e\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5bf9\u5e94\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5b83\u662f\u5177\u4f53\u4ea7\u54c1\u7ee7\u627f\u7684\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u6240\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u6b64\u7c7b\u3002","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_8","text":"\u5382\u65b9\u6cd5\u6a21\u5f0f\u62bd\u8c61\u51fa\u4e86\u5de5\u5382\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u4ea4\u7531\u5b50\u7c7b\u53bb\u5b9e\u73b0\u3002 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u5e94\u7528\u5e76\u4e0d\u53ea\u662f\u4e3a\u4e86\u5c01\u88c5\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u800c\u662f\u8981\u628a\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u521b\u5efa\u653e\u5230\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u7279\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_9","text":"\u6bcf\u65b0\u589e\u4e00\u4e2a\u4ea7\u54c1\uff0c\u5c31\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002\u76f8\u6bd4\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u800c\u8a00\uff0c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u9700\u8981\u66f4\u591a\u7684\u7c7b\u5b9a\u4e49\u3002 \u4e00\u6761\u751f\u4ea7\u7ebf\u53ea\u80fd\u4e00\u79cd\u4ea7\u54c1\u3002","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_10","text":"\u8fd8\u662f\u4ee5\u521a\u624d\u7684\u4f8b\u5b50\u89e3\u91ca\u3002\u8fd9\u5bb6\u751f\u4ea7\u5904\u7406\u5668\u6838\u7684\u4ea7\u5bb6\u8d5a\u4e86\u4e0d\u5c11\u94b1\uff0c\u4e8e\u662f\u51b3\u5b9a\u518d\u5f00\u8bbe\u4e00\u4e2a\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 B \u578b\u53f7\u7684\u5355\u6838\uff0c\u800c\u539f\u6765\u7684\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 A \u578b\u53f7\u7684\u5355\u6838\u3002\u8fd9\u65f6\uff0c\u5ba2\u6237\u8981\u505a\u7684\u662f\u627e\u597d\u5de5\u5382\uff0c\u6bd4\u5982\u8981 A \u578b\u53f7\u7684\u6838\uff0c\u5c31\u627e A \u5de5\u5382\u8981\uff1b\u5426\u5219\u627e B \u5de5\u5382\u8981\uff0c\u4e0d\u518d\u9700\u8981\u544a\u8bc9\u5de5\u5382\u5177\u4f53\u8981\u4ec0\u4e48\u578b\u53f7\u7684\u5904\u7406\u5668\u6838\u4e86\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5b9e\u73b0\u65b9\u6848\u3002 FactoryMethod.h #pragma once #include <iostream> #include <memory> class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; //\u5355\u6838A class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"SingleCore A\" << std :: endl ; } }; //\u5355\u6838B class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"SingleCore B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > shared_CPU ; class Factory { public : Factory () = default ; virtual ~ Factory () = default ; virtual shared_CPU CreateSingleCore () = 0 ; }; //\u751f\u4ea7A\u6838\u7684\u5de5\u5382 class FactoryA : public Factory { public : FactoryA () = default ; virtual ~ FactoryA () = default ; virtual shared_CPU CreateSingleCore () { return std :: make_shared < SingleCoreA > (); } }; //\u751f\u4ea7B\u6838\u7684\u5de5\u5382 class FactoryB : public Factory { public : FactoryB () = default ; virtual ~ FactoryB () = default ; virtual shared_CPU CreateSingleCore () { return std :: make_shared < SingleCoreB > (); } }; main.cpp #include <iostream> #include \"FactoryMethod.h\" int main () { auto factoryA = std :: make_shared < FactoryA > (); auto factoryB = std :: make_shared < FactoryB > (); auto cpu_a = factoryA -> CreateSingleCore (); auto cpu_b = factoryB -> CreateSingleCore (); cpu_a -> Show (); cpu_b -> Show (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_11","text":"","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_12","text":"\u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u6838\u5fc3\u7c7b\uff0c\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u7531\u5177\u4f53\u5de5\u5382\u7c7b\u5b9e\u73b0\u3002 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u4e8e\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5bf9\u5e94\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5b83\u662f\u5177\u4f53\u4ea7\u54c1\u7ee7\u627f\u7684\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\u3002 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u6240\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u6b64\u7c7b\u3002","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u6784\u6210\uff08\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u6837\uff09"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_13","text":"\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u4ea7\u54c1\u65cf\u4e2d\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002\u5982\u521b\u5efa\u8010\u514b\u5de5\u5382\uff0c\u5219\u53ef\u4ee5\u521b\u5efa\u8010\u514b\u978b\u5b50\u4ea7\u54c1\u3001\u8863\u670d\u4ea7\u54c1\u3001\u88e4\u5b50\u4ea7\u54c1\u7b49\u3002","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u7279\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_14","text":"\u540c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u6837\uff0c\u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_15","text":"\u8fd8\u662f\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u5bb6\u516c\u53f8\u7684\u6280\u672f\u4e0d\u65ad\u8fdb\u6b65\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u751f\u4ea7\u5355\u6838\u5904\u7406\u5668\uff0c\u4e5f\u80fd\u751f\u4ea7\u591a\u6838\u5904\u7406\u5668\u3002\u73b0\u5728\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u90fd\u97ad\u957f\u83ab\u53ca\u3002\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u767b\u573a\u4e86\u3002\u5b83\u7684\u5b9a\u4e49\u4e3a\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u6216\u76f8\u4e92\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u800c\u65e0\u9700\u6307\u5b9a\u5b83\u4eec\u5177\u4f53\u7684\u7c7b\u3002\u5177\u4f53\u8fd9\u6837\u5e94\u7528\uff0c\u8fd9\u5bb6\u516c\u53f8\u8fd8\u662f\u5f00\u8bbe\u4e24\u4e2a\u5de5\u5382\uff0c\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u751f\u4ea7 A \u578b\u53f7\u7684\u5355\u6838\u591a\u6838\u5904\u7406\u5668\uff0c\u800c\u53e6\u4e00\u4e2a\u5de5\u5382\u4e13\u95e8\u7528\u6765\u751f\u4ea7 B \u578b\u53f7\u7684\u5355\u6838\u591a\u6838\u5904\u7406\u5668\uff0c\u4e0b\u9762\u7ed9\u51fa\u5b9e\u73b0\u7684\u4ee3\u7801\u3002 AbstractFactory.h #pragma once #include <iostream> #include <memory> //\u5355\u6838 class SingleCore { public : SingleCore () = default ; virtual ~ SingleCore () = default ; virtual void Show () = 0 ; }; class SingleCoreA : public SingleCore { public : SingleCoreA () = default ; virtual ~ SingleCoreA () = default ; virtual void Show () { std :: cout << \"Single Core A\" << std :: endl ; } }; class SingleCoreB : public SingleCore { public : SingleCoreB () = default ; virtual ~ SingleCoreB () = default ; virtual void Show () { std :: cout << \"Single Core B\" << std :: endl ; } }; typedef std :: shared_ptr < SingleCore > sharedSingleCore ; //\u591a\u6838 class MultiCore { public : MultiCore () = default ; virtual ~ MultiCore () = default ; virtual void Show () = 0 ; }; class MultiCoreA : public MultiCore { public : MultiCoreA () = default ; virtual ~ MultiCoreA () = default ; virtual void Show () { std :: cout << \"Multi Core A\" << std :: endl ; } }; class MultiCoreB : public MultiCore { public : MultiCoreB () = default ; virtual ~ MultiCoreB () = default ; virtual void Show () { std :: cout << \"Multi Core B\" << std :: endl ; } }; typedef std :: shared_ptr < MultiCore > sharedMultiCore ; //\u5de5\u5382 class CoreFactory { public : CoreFactory () = default ; virtual ~ CoreFactory () = default ; virtual sharedSingleCore CreateSingleCore () = 0 ; virtual sharedMultiCore CreateMultiCore () = 0 ; }; //\u5de5\u5382A\uff0c\u4e13\u95e8\u7528\u6765\u751f\u4ea7A\u578b\u53f7\u7684\u5904\u7406\u5668 class FactoryA : public CoreFactory { public : FactoryA () = default ; virtual ~ FactoryA () = default ; virtual sharedSingleCore CreateSingleCore () { return std :: make_shared < SingleCoreA > (); } virtual sharedMultiCore CreateMultiCore () { return std :: make_shared < MultiCoreA > (); } }; //\u5de5\u5382B\uff0c\u4e13\u95e8\u7528\u6765\u751f\u4ea7B\u578b\u53f7\u7684\u5904\u7406\u5668 class FactoryB : public CoreFactory { public : FactoryB () = default ; virtual ~ FactoryB () = default ; virtual sharedSingleCore CreateSingleCore () { return std :: make_shared < SingleCoreB > (); } virtual sharedMultiCore CreateMultiCore () { return std :: make_shared < MultiCoreB > (); } }; main.cpp #include <iostream> #include \"AbstractFactory.h\" int main () { auto factoryA = std :: make_shared < FactoryA > (); auto factoryB = std :: make_shared < FactoryB > (); auto singleCoreA = factoryA -> CreateSingleCore (); auto multiCoreA = factoryA -> CreateMultiCore (); singleCoreA -> Show (); multiCoreA -> Show (); auto singleCoreB = factoryB -> CreateSingleCore (); auto multiCoreB = factoryB -> CreateMultiCore (); singleCoreB -> Show (); multiCoreB -> Show (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%20%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/#_16","text":"\u4ee5\u4e0a\u4e09\u79cd\u5de5\u5382\u6a21\u5f0f\uff0c\u5728\u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u90fd\u5b58\u5728\u4e00\u5b9a\u7684\u7f3a\u9677\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\uff0c\u9700\u8981\u53bb\u4fee\u6539\u5de5\u5382\u7c7b\uff0c\u8fd9\u8fdd\u80cc\u4e86\u5f00\u95ed\u6cd5\u5219\u3002 \u5de5\u5382\u65b9\u5f0f\u6a21\u5f0f\u548c\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5bf9\u5e94\u7684\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u8fd9\u5c31\u4f1a\u589e\u5927\u4ee3\u7801\u7684\u7f16\u5199\u91cf\u3002","title":"\u603b\u7ed3"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/","text":"\u6a21\u5f0f\u5b9a\u4e49 \u7b56\u7565\u6a21\u5f0f\u5b9a\u4e49\u4e86\u7b97\u6cd5\u65cf\uff0c\u5206\u522b\u5c01\u88c5\u8d77\u6765\uff0c\u8ba9\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff0c\u6b64\u6a21\u5f0f\u8ba9\u7b97\u6cd5\u7684\u53d8\u5316\u72ec\u7acb\u4e8e\u4f7f\u7528\u7b97\u6cd5\u7684\u5ba2\u6237\u3002 \u9002\u7528\u573a\u5408 \u5f53\u5b58\u5728\u4ee5\u4e0b\u60c5\u51b5\u65f6\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\uff1a \u8bb8\u591a\u76f8\u5173\u7684\u7c7b\u4ec5\u4ec5\u662f\u884c\u4e3a\u6709\u5f02\u3002\u201c\u7b56\u7565\u201d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u591a\u4e2a\u884c\u4e3a\u4e2d\u7684\u4e00\u4e2a\u884c\u4e3a\u6765\u914d\u7f6e\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\uff1b \u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7b97\u6cd5\u7684\u4e0d\u540c\u53d8\u4f53\uff1b \u7b97\u6cd5\u4f7f\u7528\u5ba2\u6237\u4e0d\u5e94\u8be5\u77e5\u9053\u7684\u6570\u636e\u3002\u53ef\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u4ee5\u907f\u514d\u66b4\u9732\u590d\u6742\u7684\u3001\u4e0e\u7b97\u6cd5\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff1b \u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u591a\u79cd\u884c\u4e3a\uff0c\u5e76\u4e14\u8fd9\u4e9b\u884c\u4e3a\u5728\u8fd9\u4e2a\u7c7b\u7684\u64cd\u4f5c\u4e2d\u4ee5\u591a\u4e2a\u6761\u4ef6\u8bed\u53e5\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u5c06\u76f8\u5173\u7684\u6761\u4ef6\u5206\u652f\u79fb\u5165\u5b83\u4eec\u5404\u81ea\u7684 Strategy \u7c7b\u4e2d\u4ee5\u66ff\u4ee3\u8fd9\u4e9b\u6761\u4ef6\u8bed\u53e5\u3002 \u793a\u4f8b\u4ee3\u7801 \u6e38\u6cf3\u6c60\u4e2d\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u9e2d\u5b50\uff0c\u6709\u7eff\u5934\u9e2d\uff0c\u7ea2\u5934\u9e2d\uff0c\u6a61\u76ae\u9e2d\uff0c\u6728\u5934\u9e2d\u7b49\u3002\u4e0d\u540c\u9e2d\u5b50\u7684\u7279\u5f81\u6216\u884c\u4e3a\u4e0d\u540c\u3002\u7eff\u5934\u9e2d\uff08MallardDuck\uff09\u53ef\u4ee5\u53eb\u58f0\u662f\u201cquack\u201d\uff0c\u4f1a\u98de\uff1b\u6a61\u76ae\u9e2d\u53eb\u58f0\u662f\u201cqueak\u201d\uff0c\u4e0d\u4f1a\u98de\uff1b\u6728\u5934\u9e2d\u4e0d\u4f1a\u53eb\uff0c\u4e5f\u4e0d\u4f1a\u98de\u3002\u5229\u7528\u9762\u5411\u5bf9\u8c61\u539f\u7406\u6765\u8bbe\u8ba1\u6765\u6cf3\u6c60\u4e2d\u7684\u5404\u79cd\u9e2d\u3002 \u8981\u6c42\uff1a \u53ef\u6269\u5c55\u6027\u597d\uff0c\u5f53\u6709\u65b0\u9e2d\u52a0\u5165\u65f6\u6216\u9e2d\u7684\u884c\u4e3a\u6709\u53d8\u52a8\u65f6\uff0c\u4e0d\u7528\u5927\u91cf\u6539\u52a8\u4ee3\u7801\uff1b \u590d\u7528\u6027\u5f3a\u3002 Strategy.h #pragma once #include <iostream> //\u98de\u884c\u884c\u4e3a\uff0c\u7528\u62bd\u8c61\u7c7b\u8868\u793a class FlyBehavior { public : FlyBehavior () = default ; virtual ~ FlyBehavior () = default ; virtual void fly () = 0 ; }; //\u53eb\u58f0\u884c\u4e3a\uff0c\u7528\u62bd\u8c61\u7c7b\u8868\u793a class QuackBehavior { public : QuackBehavior () = default ; virtual ~ QuackBehavior () = default ; virtual void quack () = 0 ; }; using sharedFly = std :: shared_ptr < FlyBehavior > ; using sharedQuack = std :: shared_ptr < QuackBehavior > ; //\u9e2d\u5b50\u57fa\u7c7b\uff0c\u6709display\uff0cperformFly\uff0c performQuack\uff0cswim\u7b49\u65b9\u6cd5\u3002 class Duck { public : Duck ( sharedFly p_FlyBehavior , sharedQuack p_QuackBehavior ) { pFlyBehavior = p_FlyBehavior ; pQuackBehavior = p_QuackBehavior ; } virtual ~ Duck () = default ; virtual void display () = 0 ; void performFly () { pFlyBehavior -> fly (); } void performQuack () { pQuackBehavior -> quack (); } void swim () { std :: cout << ( \"All ducks float, even decoys!\" ) << std :: endl ; } private : sharedFly pFlyBehavior ; sharedQuack pQuackBehavior ; }; //\u5b9e\u73b0\u98de\u884c\u884c\u4e3a\u7684\u65b9\u6cd5\u7c7b class FlyWithWings : public FlyBehavior { public : FlyWithWings () = default ; virtual ~ FlyWithWings () = default ; virtual void fly () override { std :: cout << ( \"I'm flying!!\" ) << std :: endl ; } }; class FlyNoWay : public FlyBehavior { public : FlyNoWay () = default ; virtual ~ FlyNoWay () = default ; virtual void fly () override { std :: cout << ( \"I can't fly\" ) << std :: endl ; } }; //\u5b9e\u73b0\u53eb\u58f0\u884c\u4e3a\u7684\u7c7b class Quack : public QuackBehavior { public : Quack () = default ; virtual ~ Quack () = default ; virtual void quack () override { std :: cout << ( \"Quack\" ) << std :: endl ; } }; class MuteQuack : public QuackBehavior { public : MuteQuack () = default ; virtual ~ MuteQuack () = default ; virtual void quack () override { std :: cout << ( \"<< Slience >>\" ) << std :: endl ; } }; class Squeak : public QuackBehavior { public : Squeak () = default ; virtual ~ Squeak () = default ; virtual void quack () override { std :: cout << \"Squeak\" << std :: endl ; } }; main.cpp #include <iostream> #include \"Strategy.h\" //\u7eff\u5934\u9e2d\u7c7b class MallardDuck : public Duck { public : MallardDuck ( sharedFly fly_behavior = std :: make_shared < FlyWithWings > (), sharedQuack quack_behavior = std :: make_shared < Quack > ()) : Duck ( fly_behavior , quack_behavior ) { } virtual ~ MallardDuck () = default ; virtual void display () override { std :: cout << \"I'm a real Mallard duck\" << std :: endl ; } }; //\u73a9\u5177\u9e2d\u7c7b class ToyDuck : public Duck { public : ToyDuck ( sharedFly fly_behavior = std :: make_shared < FlyNoWay > (), sharedQuack quack_behavior = std :: make_shared < MuteQuack > ()) : Duck ( fly_behavior , quack_behavior ) { } virtual ~ ToyDuck () = default ; virtual void display () override { std :: cout << \"I'm a toy duck\" << std :: endl ; } }; int main () { auto mallard = std :: make_shared < MallardDuck > (); mallard -> display (); mallard -> performFly (); mallard -> performQuack (); std :: cout << \"================================\" << std :: endl ; auto toyDuck = std :: make_shared < ToyDuck > (); toyDuck -> display (); toyDuck -> performFly (); toyDuck -> performQuack (); return 0 ; } \u53ef\u6269\u5c55\u6027\uff1a\u5f53\u6709\u65b0\u7c7b\u578b\u9e2d\u5b50\u52a0\u5165\u65f6\uff0c\u53ea\u8981\u8ba9\u5176\u7ee7\u627f Duck \u7c7b\uff0c\u5e76\u6dfb\u52a0\u76f8\u5e94\u7684\u884c\u4e3a\u65b9\u6cd5\u7c7b\uff0c\u521d\u59cb\u5316\u5f0f\u7528\u9700\u8981\u7684\u884c\u4e3a\u65b9\u6cd5\u7c7b\u6765\u521d\u59cb\u5316\u5373\u53ef\u3002 \u590d\u7528\u6027\uff1a\u5982\u4f1a\u98de\u7684\u9e2d\u90fd\u53ef\u4ee5\u7528 FlyWithWings \u3002 \u8bbe\u8ba1\u539f\u5219 \u627e\u51fa\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u53d8\u5316\u4e4b\u5904\uff0c\u628a\u4ed6\u4eec\u72ec\u7acb\u51fa\u6765\uff0c\u4e0d\u8981\u548c\u90a3\u4e9b\u4e0d\u9700\u8981\u53d8\u5316\u7684\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002 \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f\u3002","title":"\u6a21\u5f0f\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_1","text":"\u7b56\u7565\u6a21\u5f0f\u5b9a\u4e49\u4e86\u7b97\u6cd5\u65cf\uff0c\u5206\u522b\u5c01\u88c5\u8d77\u6765\uff0c\u8ba9\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\uff0c\u6b64\u6a21\u5f0f\u8ba9\u7b97\u6cd5\u7684\u53d8\u5316\u72ec\u7acb\u4e8e\u4f7f\u7528\u7b97\u6cd5\u7684\u5ba2\u6237\u3002","title":"\u6a21\u5f0f\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_2","text":"\u5f53\u5b58\u5728\u4ee5\u4e0b\u60c5\u51b5\u65f6\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\uff1a \u8bb8\u591a\u76f8\u5173\u7684\u7c7b\u4ec5\u4ec5\u662f\u884c\u4e3a\u6709\u5f02\u3002\u201c\u7b56\u7565\u201d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u591a\u4e2a\u884c\u4e3a\u4e2d\u7684\u4e00\u4e2a\u884c\u4e3a\u6765\u914d\u7f6e\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\uff1b \u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7b97\u6cd5\u7684\u4e0d\u540c\u53d8\u4f53\uff1b \u7b97\u6cd5\u4f7f\u7528\u5ba2\u6237\u4e0d\u5e94\u8be5\u77e5\u9053\u7684\u6570\u636e\u3002\u53ef\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u4ee5\u907f\u514d\u66b4\u9732\u590d\u6742\u7684\u3001\u4e0e\u7b97\u6cd5\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff1b \u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u591a\u79cd\u884c\u4e3a\uff0c\u5e76\u4e14\u8fd9\u4e9b\u884c\u4e3a\u5728\u8fd9\u4e2a\u7c7b\u7684\u64cd\u4f5c\u4e2d\u4ee5\u591a\u4e2a\u6761\u4ef6\u8bed\u53e5\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\u5c06\u76f8\u5173\u7684\u6761\u4ef6\u5206\u652f\u79fb\u5165\u5b83\u4eec\u5404\u81ea\u7684 Strategy \u7c7b\u4e2d\u4ee5\u66ff\u4ee3\u8fd9\u4e9b\u6761\u4ef6\u8bed\u53e5\u3002","title":"\u9002\u7528\u573a\u5408"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_3","text":"\u6e38\u6cf3\u6c60\u4e2d\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u9e2d\u5b50\uff0c\u6709\u7eff\u5934\u9e2d\uff0c\u7ea2\u5934\u9e2d\uff0c\u6a61\u76ae\u9e2d\uff0c\u6728\u5934\u9e2d\u7b49\u3002\u4e0d\u540c\u9e2d\u5b50\u7684\u7279\u5f81\u6216\u884c\u4e3a\u4e0d\u540c\u3002\u7eff\u5934\u9e2d\uff08MallardDuck\uff09\u53ef\u4ee5\u53eb\u58f0\u662f\u201cquack\u201d\uff0c\u4f1a\u98de\uff1b\u6a61\u76ae\u9e2d\u53eb\u58f0\u662f\u201cqueak\u201d\uff0c\u4e0d\u4f1a\u98de\uff1b\u6728\u5934\u9e2d\u4e0d\u4f1a\u53eb\uff0c\u4e5f\u4e0d\u4f1a\u98de\u3002\u5229\u7528\u9762\u5411\u5bf9\u8c61\u539f\u7406\u6765\u8bbe\u8ba1\u6765\u6cf3\u6c60\u4e2d\u7684\u5404\u79cd\u9e2d\u3002 \u8981\u6c42\uff1a \u53ef\u6269\u5c55\u6027\u597d\uff0c\u5f53\u6709\u65b0\u9e2d\u52a0\u5165\u65f6\u6216\u9e2d\u7684\u884c\u4e3a\u6709\u53d8\u52a8\u65f6\uff0c\u4e0d\u7528\u5927\u91cf\u6539\u52a8\u4ee3\u7801\uff1b \u590d\u7528\u6027\u5f3a\u3002 Strategy.h #pragma once #include <iostream> //\u98de\u884c\u884c\u4e3a\uff0c\u7528\u62bd\u8c61\u7c7b\u8868\u793a class FlyBehavior { public : FlyBehavior () = default ; virtual ~ FlyBehavior () = default ; virtual void fly () = 0 ; }; //\u53eb\u58f0\u884c\u4e3a\uff0c\u7528\u62bd\u8c61\u7c7b\u8868\u793a class QuackBehavior { public : QuackBehavior () = default ; virtual ~ QuackBehavior () = default ; virtual void quack () = 0 ; }; using sharedFly = std :: shared_ptr < FlyBehavior > ; using sharedQuack = std :: shared_ptr < QuackBehavior > ; //\u9e2d\u5b50\u57fa\u7c7b\uff0c\u6709display\uff0cperformFly\uff0c performQuack\uff0cswim\u7b49\u65b9\u6cd5\u3002 class Duck { public : Duck ( sharedFly p_FlyBehavior , sharedQuack p_QuackBehavior ) { pFlyBehavior = p_FlyBehavior ; pQuackBehavior = p_QuackBehavior ; } virtual ~ Duck () = default ; virtual void display () = 0 ; void performFly () { pFlyBehavior -> fly (); } void performQuack () { pQuackBehavior -> quack (); } void swim () { std :: cout << ( \"All ducks float, even decoys!\" ) << std :: endl ; } private : sharedFly pFlyBehavior ; sharedQuack pQuackBehavior ; }; //\u5b9e\u73b0\u98de\u884c\u884c\u4e3a\u7684\u65b9\u6cd5\u7c7b class FlyWithWings : public FlyBehavior { public : FlyWithWings () = default ; virtual ~ FlyWithWings () = default ; virtual void fly () override { std :: cout << ( \"I'm flying!!\" ) << std :: endl ; } }; class FlyNoWay : public FlyBehavior { public : FlyNoWay () = default ; virtual ~ FlyNoWay () = default ; virtual void fly () override { std :: cout << ( \"I can't fly\" ) << std :: endl ; } }; //\u5b9e\u73b0\u53eb\u58f0\u884c\u4e3a\u7684\u7c7b class Quack : public QuackBehavior { public : Quack () = default ; virtual ~ Quack () = default ; virtual void quack () override { std :: cout << ( \"Quack\" ) << std :: endl ; } }; class MuteQuack : public QuackBehavior { public : MuteQuack () = default ; virtual ~ MuteQuack () = default ; virtual void quack () override { std :: cout << ( \"<< Slience >>\" ) << std :: endl ; } }; class Squeak : public QuackBehavior { public : Squeak () = default ; virtual ~ Squeak () = default ; virtual void quack () override { std :: cout << \"Squeak\" << std :: endl ; } }; main.cpp #include <iostream> #include \"Strategy.h\" //\u7eff\u5934\u9e2d\u7c7b class MallardDuck : public Duck { public : MallardDuck ( sharedFly fly_behavior = std :: make_shared < FlyWithWings > (), sharedQuack quack_behavior = std :: make_shared < Quack > ()) : Duck ( fly_behavior , quack_behavior ) { } virtual ~ MallardDuck () = default ; virtual void display () override { std :: cout << \"I'm a real Mallard duck\" << std :: endl ; } }; //\u73a9\u5177\u9e2d\u7c7b class ToyDuck : public Duck { public : ToyDuck ( sharedFly fly_behavior = std :: make_shared < FlyNoWay > (), sharedQuack quack_behavior = std :: make_shared < MuteQuack > ()) : Duck ( fly_behavior , quack_behavior ) { } virtual ~ ToyDuck () = default ; virtual void display () override { std :: cout << \"I'm a toy duck\" << std :: endl ; } }; int main () { auto mallard = std :: make_shared < MallardDuck > (); mallard -> display (); mallard -> performFly (); mallard -> performQuack (); std :: cout << \"================================\" << std :: endl ; auto toyDuck = std :: make_shared < ToyDuck > (); toyDuck -> display (); toyDuck -> performFly (); toyDuck -> performQuack (); return 0 ; } \u53ef\u6269\u5c55\u6027\uff1a\u5f53\u6709\u65b0\u7c7b\u578b\u9e2d\u5b50\u52a0\u5165\u65f6\uff0c\u53ea\u8981\u8ba9\u5176\u7ee7\u627f Duck \u7c7b\uff0c\u5e76\u6dfb\u52a0\u76f8\u5e94\u7684\u884c\u4e3a\u65b9\u6cd5\u7c7b\uff0c\u521d\u59cb\u5316\u5f0f\u7528\u9700\u8981\u7684\u884c\u4e3a\u65b9\u6cd5\u7c7b\u6765\u521d\u59cb\u5316\u5373\u53ef\u3002 \u590d\u7528\u6027\uff1a\u5982\u4f1a\u98de\u7684\u9e2d\u90fd\u53ef\u4ee5\u7528 FlyWithWings \u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%20%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/#_4","text":"\u627e\u51fa\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u53d8\u5316\u4e4b\u5904\uff0c\u628a\u4ed6\u4eec\u72ec\u7acb\u51fa\u6765\uff0c\u4e0d\u8981\u548c\u90a3\u4e9b\u4e0d\u9700\u8981\u53d8\u5316\u7684\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002 \u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u591a\u7528\u7ec4\u5408\uff0c\u5c11\u7528\u7ee7\u627f\u3002","title":"\u8bbe\u8ba1\u539f\u5219"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/","text":"\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u5411\u67d0\u4e9b\u5bf9\u8c61\u53d1\u9001\u8bf7\u6c42\uff0c\u4f46\u662f\u5e76\u4e0d\u77e5\u9053\u8bf7\u6c42\u7684\u63a5\u6536\u8005\u662f\u8c01\uff0c\u4e5f\u4e0d\u77e5\u9053\u88ab\u8bf7\u6c42\u7684\u64cd\u4f5c\u662f\u54ea\u4e2a\uff0c\u6211\u4eec\u53ea\u9700\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6307\u5b9a\u5177\u4f53\u7684\u8bf7\u6c42\u63a5\u6536\u8005\u5373\u53ef\uff0c\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u6765\u8fdb\u884c\u8bbe\u8ba1\uff0c\u4f7f\u5f97\u8bf7\u6c42\u53d1\u9001\u8005\u4e0e\u8bf7\u6c42\u63a5\u6536\u8005\u6d88\u9664\u5f7c\u6b64\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u8ba9\u5bf9\u8c61\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u66f4\u52a0\u7075\u6d3b\u3002 \u547d\u4ee4\u6a21\u5f0f\u53ef\u4ee5\u5bf9\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u5b8c\u5168\u89e3\u8026\uff0c\u53d1\u9001\u8005\u4e0e\u63a5\u6536\u8005\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u5f15\u7528\u5173\u7cfb\uff0c\u53d1\u9001\u8bf7\u6c42\u7684\u5bf9\u8c61\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u53d1\u9001\u8bf7\u6c42\uff0c\u800c\u4e0d\u5fc5\u77e5\u9053\u5982\u4f55\u5b8c\u6210\u8bf7\u6c42\u3002\u8fd9\u5c31\u662f\u547d\u4ee4\u6a21\u5f0f\u7684\u6a21\u5f0f\u52a8\u673a\u3002 \u6a21\u5f0f\u5b9a\u4e49 \u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\uff1a\u5c06\u4e00\u4e2a\u8bf7\u6c42\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u53ef\u7528\u4e0d\u540c\u7684\u8bf7\u6c42\u5bf9\u5ba2\u6237\u8fdb\u884c\u53c2\u6570\u5316\uff1b\u5bf9\u8bf7\u6c42\u6392\u961f\u6216\u8005\u8bb0\u5f55\u8bf7\u6c42\u65e5\u5fd7\uff0c\u4ee5\u53ca\u652f\u6301\u53ef\u64a4\u9500\u7684\u64cd\u4f5c\u3002\u547d\u4ee4\u6a21\u5f0f\u662f\u4e00\u79cd\u5bf9\u8c61\u884c\u4e3a\u578b\u6a21\u5f0f\uff0c\u5176\u522b\u540d\u4e3a\u52a8\u4f5c\uff08Action\uff09\u6a21\u5f0f\u6216\u4e8b\u52a1\uff08Transaction\uff09\u6a21\u5f0f\u3002 \u6a21\u5f0f\u6784\u6210 \u547d\u4ee4\u6a21\u5f0f\u5305\u542b\u5982\u4e0b\u89d2\u8272\uff1a Command: \u62bd\u8c61\u547d\u4ee4\u7c7b ConcreteCommand: \u5177\u4f53\u547d\u4ee4\u7c7b Invoker: \u8c03\u7528\u8005 Receiver: \u63a5\u6536\u8005 Client:\u5ba2\u6237\u7c7b \u4ee3\u7801\u793a\u4f8b Command.h #pragma once #include <iostream> #include \"Receiver.h\" class Command { public : Command () { std :: cout << \"Class Command constructed!\" << std :: endl ; } virtual ~ Command () { std :: cout << \"Class Command destructed!\" << std :: endl ; } virtual void execute () = 0 ; }; using sharedCommand = std :: shared_ptr < Command > ; class addUICommand : public Command { public : addUICommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class addUICommand constructed!\" << std :: endl ; } virtual ~ addUICommand () { std :: cout << \"Class addUICommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; class backGroundCommand : public Command { public : backGroundCommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class backGroundCommand constructed!\" << std :: endl ; } virtual ~ backGroundCommand () { std :: cout << \"Class backGroundCommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; class foreGroundCommand : public Command { public : foreGroundCommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class foreGroundCommand constructed!\" << std :: endl ; } virtual ~ foreGroundCommand () { std :: cout << \"Class foreGroundCommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; Receiver.h #pragma once #include <iostream> class Reciever { public : Reciever () { std :: cout << \"Class Reciver constructed!\" << std :: endl ; } virtual ~ Reciever () { std :: cout << \"Class Reciver destructed!\" << std :: endl ; } virtual void work () = 0 ; }; using sharedReciever = std :: shared_ptr < Reciever > ; class UIworker : public Reciever { public : UIworker () { std :: cout << \"Class UIworker constructed!\" << std :: endl ; } virtual ~ UIworker () { std :: cout << \"Class UIworker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"UIwoker working\" << std :: endl ; } }; class backGroundWorker : public Reciever { public : backGroundWorker () { std :: cout << \"Class backGroundWorker constructed!\" << std :: endl ; } virtual ~ backGroundWorker () { std :: cout << \"Class backGroundWorker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"backGroundWorker working\" << std :: endl ; } }; class foreGroundWorker : public Reciever { public : foreGroundWorker () { std :: cout << \"Class foreGroundWorker constructed!\" << std :: endl ; } virtual ~ foreGroundWorker () { std :: cout << \"Class foreGroundWorker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"foreGroundWorker working\" << std :: endl ; } }; ProgramManager.h #pragma once #include <iostream> #include <vector> #include \"Command.h\" class ProgramManager { public : ProgramManager () { std :: cout << \"Class ProgramManager constructed!\" << std :: endl ; } ~ ProgramManager () { if ( ! m_commands . empty ()) { m_commands . clear (); } std :: cout << \"Class ProgramManager constructed!\" << std :: endl ; } void setCommand ( sharedCommand command ) { m_commands . push_back ( command ); } void notify () { for ( const auto & item : m_commands ) { item -> execute (); } } private : std :: vector < sharedCommand > m_commands ; }; main.cpp #include <iostream> #include \"ProgramManager.h\" int main () { auto pm = std :: make_shared < ProgramManager > (); auto uiWorker = std :: make_shared < UIworker > (); auto bgWorker = std :: make_shared < backGroundWorker > (); auto fgWorker = std :: make_shared < foreGroundWorker > (); auto uiCmd1 = std :: make_shared < addUICommand > ( uiWorker ); auto bgCmd1 = std :: make_shared < backGroundCommand > ( bgWorker ); auto fgCmd1 = std :: make_shared < foreGroundCommand > ( fgWorker ); pm -> setCommand ( uiCmd1 ); pm -> setCommand ( bgCmd1 ); pm -> setCommand ( fgCmd1 ); pm -> notify (); return 0 ; } \u6a21\u5f0f\u4f18\u70b9 \u964d\u4f4e\u7cfb\u7edf\u7684\u8026\u5408\u5ea6\u3002 \u65b0\u7684\u547d\u4ee4\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u52a0\u5165\u5230\u7cfb\u7edf\u4e2d\u3002 \u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u8bbe\u8ba1\u4e00\u4e2a\u547d\u4ee4\u961f\u5217\u548c\u5b8f\u547d\u4ee4\uff08\u7ec4\u5408\u547d\u4ee4\uff09\u3002 \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684Undo\u548cRedo\u529f\u80fd\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u7cfb\u7edf\u6709\u8fc7\u591a\u7684\u5177\u4f53\u547d\u4ee4\u7c7b\u3002\u56e0\u4e3a\u9488\u5bf9\u6bcf\u4e00\u4e2a\u547d\u4ee4\u90fd\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5177\u4f53\u547d\u4ee4\u7c7b\uff0c\u56e0\u6b64\u67d0\u4e9b\u7cfb\u7edf\u53ef\u80fd\u9700\u8981\u5927\u91cf\u5177\u4f53\u547d\u4ee4\u7c7b\uff0c\u8fd9\u5c06\u5f71\u54cd\u547d\u4ee4\u6a21\u5f0f\u7684\u4f7f\u7528\u3002","title":"07. \u547d\u4ee4\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_1","text":"\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\uff1a\u5c06\u4e00\u4e2a\u8bf7\u6c42\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u53ef\u7528\u4e0d\u540c\u7684\u8bf7\u6c42\u5bf9\u5ba2\u6237\u8fdb\u884c\u53c2\u6570\u5316\uff1b\u5bf9\u8bf7\u6c42\u6392\u961f\u6216\u8005\u8bb0\u5f55\u8bf7\u6c42\u65e5\u5fd7\uff0c\u4ee5\u53ca\u652f\u6301\u53ef\u64a4\u9500\u7684\u64cd\u4f5c\u3002\u547d\u4ee4\u6a21\u5f0f\u662f\u4e00\u79cd\u5bf9\u8c61\u884c\u4e3a\u578b\u6a21\u5f0f\uff0c\u5176\u522b\u540d\u4e3a\u52a8\u4f5c\uff08Action\uff09\u6a21\u5f0f\u6216\u4e8b\u52a1\uff08Transaction\uff09\u6a21\u5f0f\u3002","title":"\u6a21\u5f0f\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_2","text":"\u547d\u4ee4\u6a21\u5f0f\u5305\u542b\u5982\u4e0b\u89d2\u8272\uff1a Command: \u62bd\u8c61\u547d\u4ee4\u7c7b ConcreteCommand: \u5177\u4f53\u547d\u4ee4\u7c7b Invoker: \u8c03\u7528\u8005 Receiver: \u63a5\u6536\u8005 Client:\u5ba2\u6237\u7c7b","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_3","text":"Command.h #pragma once #include <iostream> #include \"Receiver.h\" class Command { public : Command () { std :: cout << \"Class Command constructed!\" << std :: endl ; } virtual ~ Command () { std :: cout << \"Class Command destructed!\" << std :: endl ; } virtual void execute () = 0 ; }; using sharedCommand = std :: shared_ptr < Command > ; class addUICommand : public Command { public : addUICommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class addUICommand constructed!\" << std :: endl ; } virtual ~ addUICommand () { std :: cout << \"Class addUICommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; class backGroundCommand : public Command { public : backGroundCommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class backGroundCommand constructed!\" << std :: endl ; } virtual ~ backGroundCommand () { std :: cout << \"Class backGroundCommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; class foreGroundCommand : public Command { public : foreGroundCommand ( sharedReciever reciever ) : m_reciever ( reciever ) { std :: cout << \"Class foreGroundCommand constructed!\" << std :: endl ; } virtual ~ foreGroundCommand () { std :: cout << \"Class foreGroundCommand destructed!\" << std :: endl ; } virtual void execute () { m_reciever -> work (); } private : sharedReciever m_reciever ; }; Receiver.h #pragma once #include <iostream> class Reciever { public : Reciever () { std :: cout << \"Class Reciver constructed!\" << std :: endl ; } virtual ~ Reciever () { std :: cout << \"Class Reciver destructed!\" << std :: endl ; } virtual void work () = 0 ; }; using sharedReciever = std :: shared_ptr < Reciever > ; class UIworker : public Reciever { public : UIworker () { std :: cout << \"Class UIworker constructed!\" << std :: endl ; } virtual ~ UIworker () { std :: cout << \"Class UIworker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"UIwoker working\" << std :: endl ; } }; class backGroundWorker : public Reciever { public : backGroundWorker () { std :: cout << \"Class backGroundWorker constructed!\" << std :: endl ; } virtual ~ backGroundWorker () { std :: cout << \"Class backGroundWorker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"backGroundWorker working\" << std :: endl ; } }; class foreGroundWorker : public Reciever { public : foreGroundWorker () { std :: cout << \"Class foreGroundWorker constructed!\" << std :: endl ; } virtual ~ foreGroundWorker () { std :: cout << \"Class foreGroundWorker destructed!\" << std :: endl ; } virtual void work () { std :: cout << \"foreGroundWorker working\" << std :: endl ; } }; ProgramManager.h #pragma once #include <iostream> #include <vector> #include \"Command.h\" class ProgramManager { public : ProgramManager () { std :: cout << \"Class ProgramManager constructed!\" << std :: endl ; } ~ ProgramManager () { if ( ! m_commands . empty ()) { m_commands . clear (); } std :: cout << \"Class ProgramManager constructed!\" << std :: endl ; } void setCommand ( sharedCommand command ) { m_commands . push_back ( command ); } void notify () { for ( const auto & item : m_commands ) { item -> execute (); } } private : std :: vector < sharedCommand > m_commands ; }; main.cpp #include <iostream> #include \"ProgramManager.h\" int main () { auto pm = std :: make_shared < ProgramManager > (); auto uiWorker = std :: make_shared < UIworker > (); auto bgWorker = std :: make_shared < backGroundWorker > (); auto fgWorker = std :: make_shared < foreGroundWorker > (); auto uiCmd1 = std :: make_shared < addUICommand > ( uiWorker ); auto bgCmd1 = std :: make_shared < backGroundCommand > ( bgWorker ); auto fgCmd1 = std :: make_shared < foreGroundCommand > ( fgWorker ); pm -> setCommand ( uiCmd1 ); pm -> setCommand ( bgCmd1 ); pm -> setCommand ( fgCmd1 ); pm -> notify (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_4","text":"\u964d\u4f4e\u7cfb\u7edf\u7684\u8026\u5408\u5ea6\u3002 \u65b0\u7684\u547d\u4ee4\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u52a0\u5165\u5230\u7cfb\u7edf\u4e2d\u3002 \u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5730\u8bbe\u8ba1\u4e00\u4e2a\u547d\u4ee4\u961f\u5217\u548c\u5b8f\u547d\u4ee4\uff08\u7ec4\u5408\u547d\u4ee4\uff09\u3002 \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684Undo\u548cRedo\u529f\u80fd\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%20%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/#_5","text":"\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u7cfb\u7edf\u6709\u8fc7\u591a\u7684\u5177\u4f53\u547d\u4ee4\u7c7b\u3002\u56e0\u4e3a\u9488\u5bf9\u6bcf\u4e00\u4e2a\u547d\u4ee4\u90fd\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5177\u4f53\u547d\u4ee4\u7c7b\uff0c\u56e0\u6b64\u67d0\u4e9b\u7cfb\u7edf\u53ef\u80fd\u9700\u8981\u5927\u91cf\u5177\u4f53\u547d\u4ee4\u7c7b\uff0c\u8fd9\u5c06\u5f71\u54cd\u547d\u4ee4\u6a21\u5f0f\u7684\u4f7f\u7528\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\u5c06\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u5206\u89e3\u6210\u591a\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u90e8\u5206\uff0c\u7136\u540e\u6839\u636e\u4e0d\u540c\u9700\u8981\u5206\u522b\u521b\u5efa\u5b83\u4eec\uff0c\u6700\u540e\u6784\u5efa\u6210\u8be5\u590d\u6742\u5bf9\u8c61\u3002\u901a\u8fc7\u5c06\u590d\u6742\u5bf9\u8c61\u7684\u6784\u5efa\u548c\u5176\u8868\u793a\u5206\u79bb\uff0c\u4f7f\u5f97\u76f8\u540c\u7684\u6784\u5efa\u8fc7\u7a0b\u53ef\u4ee5\u4ea7\u751f\u4e0d\u540c\u7684\u8868\u793a\u3002 \u9002\u7528\u573a\u666f \u4ee5\u4e0b\u60c5\u5f62\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\uff1a \u5bf9\u8c61\u7684\u521b\u5efa\u590d\u6742\uff0c\u4f46\u662f\u5176\u5404\u4e2a\u90e8\u5206\u7684\u5b50\u5bf9\u8c61\u521b\u5efa\u7b97\u6cd5\u7c7b\u4f3c\u3002 \u9700\u6c42\u53d8\u5316\u5927\uff0c\u6784\u9020\u590d\u6742\u5bf9\u8c61\u7684\u5b50\u5bf9\u8c61\u7ecf\u5e38\u53d8\u5316\uff0c\u4f46\u5c06\u5176\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u7b97\u6cd5\u76f8\u5bf9\u7a33\u5b9a\u3002 \u5f53\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u8d85\u8fc7 4 \u4e2a\uff0c\u800c\u4e14\u8fd9\u4e9b\u53c2\u6570\u6709\u4e9b\u662f\u53ef\u9009\u7684\uff0c\u8003\u8651\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\u3002 \u6a21\u5f0f\u4f18\u70b9 \u5c06\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u8868\u793a\u5206\u79bb\uff0c\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4e86\u89e3\u5177\u4f53\u7684\u6784\u5efa\u7ec6\u8282\u3002 \u589e\u52a0\u65b0\u7684\u4ea7\u54c1\u5bf9\u8c61\u65f6\uff0c\u53ea\u9700\u8981\u589e\u52a0\u5177\u4f53\u7684\u5efa\u9020\u7c7b\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u4ee3\u7801\uff0c\u6269\u5c55\u65b9\u4fbf\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4ea7\u54c1\u7684\u7ec4\u6210\u90e8\u5206\u5fc5\u987b\u76f8\u540c\uff0c\u8fd9\u9650\u5236\u4e86\u5176\u4f7f\u7528\u8303\u56f4\u3002 \u5982\u679c\u4ea7\u54c1\u7684\u5185\u90e8\u53d8\u5316\u590d\u6742\uff0c\u4ea7\u54c1\u5185\u90e8\u53d1\u751f\u53d8\u5316\uff0c\u5219\u5efa\u9020\u8005\u4e5f\u8981\u540c\u6b65\u4fee\u6539\uff0c\u540e\u671f\u7ef4\u62a4\u6210\u672c\u8f83\u5927\u3002 \u6a21\u5f0f\u6784\u6210 \u4ea7\u54c1\u89d2\u8272\uff08Product\uff09\uff1a\u5b83\u662f\u5305\u542b\u591a\u4e2a\u7ec4\u6210\u90e8\u4ef6\u7684\u590d\u6742\u5bf9\u8c61\uff0c\u7531\u5177\u4f53\u5efa\u9020\u8005\u6765\u521b\u5efa\u5176\u5404\u4e2a\u96f6\u90e8\u4ef6\u3002 \u62bd\u8c61\u5efa\u9020\u8005\uff08Builder\uff09\uff1a\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u521b\u5efa\u4ea7\u54c1\u5404\u4e2a\u5b50\u90e8\u4ef6\u7684\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff0c\u901a\u5e38\u8fd8\u5305\u542b\u4e00\u4e2a\u8fd4\u56de\u590d\u6742\u4ea7\u54c1\u7684\u65b9\u6cd5\u3002 \u5177\u4f53\u5efa\u9020\u8005\uff08Concrete Builder\uff09\uff1a\u5b9e\u73b0 Builder \u63a5\u53e3\uff0c\u5b8c\u6210\u590d\u6742\u4ea7\u54c1\u7684\u5404\u4e2a\u90e8\u4ef6\u7684\u5177\u4f53\u521b\u5efa\u65b9\u6cd5\u3002 \u6307\u6325\u8005\uff08Director\uff09\uff1a\u5b83\u8c03\u7528\u5efa\u9020\u8005\u5bf9\u8c61\u4e2d\u7684\u90e8\u4ef6\u6784\u9020\u4e0e\u88c5\u914d\u65b9\u6cd5\u5b8c\u6210\u590d\u6742\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5728\u6307\u6325\u8005\u4e2d\u4e0d\u6d89\u53ca\u5177\u4f53\u4ea7\u54c1\u7684\u4fe1\u606f\u3002 Builder.h #pragma once #include <iostream> #include <vector> //\u590d\u6742\u4ea7\u54c1\u7c7b class Product { public : Product () = default ; ~ Product () = default ; void Add ( std :: string strPartName ) { m_parts_ . push_back ( strPartName ); } void Show () { std :: cout << \"Product building ... \\n \" ; for ( auto const & it : m_parts_ ) { std :: cout << it << std :: endl ; } } private : std :: vector < std :: string > m_parts_ ; }; using sharedProduct = std :: shared_ptr < Product > ; //\u62bd\u8c61\u5efa\u9020\u8005 class Builder { public : Builder () = default ; ~ Builder () = default ; virtual void CreatePartA () = 0 ; virtual void CreatePartB () = 0 ; virtual sharedProduct GetResult () = 0 ; }; //\u5177\u4f53\u5efa\u9020\u8005 class ConcreteBuilder1 : public Builder { public : ConcreteBuilder1 () { m_product_ = std :: make_shared < Product > (); } ~ ConcreteBuilder1 () = default ; virtual void CreatePartA () override { m_product_ -> Add ( \"part A\" ); } virtual void CreatePartB () override { m_product_ -> Add ( \"part B\" ); } virtual sharedProduct GetResult () override { return m_product_ ; } private : sharedProduct m_product_ ; }; class ConcreteBuilder2 : public Builder { public : ConcreteBuilder2 () { m_product_ = std :: make_shared < Product > (); } ~ ConcreteBuilder2 () = default ; virtual void CreatePartA () override { m_product_ -> Add ( \"part X\" ); } virtual void CreatePartB () override { m_product_ -> Add ( \"part Y\" ); } virtual sharedProduct GetResult () override { return m_product_ ; } private : sharedProduct m_product_ ; }; //\u6307\u6325\u8005\u7c7b class Director { public : Director () = default ; ~ Director () = default ; void Construct ( std :: shared_ptr < Builder > builder ) { builder -> CreatePartA (); builder -> CreatePartB (); } }; main.cpp #include <iostream> #include \"Builder.h\" int main () { std :: shared_ptr < Director > director = std :: make_shared < Director > (); std :: shared_ptr < ConcreteBuilder1 > builder1 = std :: make_shared < ConcreteBuilder1 > (); std :: shared_ptr < ConcreteBuilder2 > builder2 = std :: make_shared < ConcreteBuilder2 > (); director -> Construct ( builder1 ); sharedProduct product1 = builder1 -> GetResult (); product1 -> Show (); director -> Construct ( builder2 ); sharedProduct product2 = builder2 -> GetResult (); product2 -> Show (); return 0 ; }","title":"08. \u5efa\u9020\u8005\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u4ee5\u4e0b\u60c5\u5f62\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\uff1a \u5bf9\u8c61\u7684\u521b\u5efa\u590d\u6742\uff0c\u4f46\u662f\u5176\u5404\u4e2a\u90e8\u5206\u7684\u5b50\u5bf9\u8c61\u521b\u5efa\u7b97\u6cd5\u7c7b\u4f3c\u3002 \u9700\u6c42\u53d8\u5316\u5927\uff0c\u6784\u9020\u590d\u6742\u5bf9\u8c61\u7684\u5b50\u5bf9\u8c61\u7ecf\u5e38\u53d8\u5316\uff0c\u4f46\u5c06\u5176\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u7b97\u6cd5\u76f8\u5bf9\u7a33\u5b9a\u3002 \u5f53\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u8d85\u8fc7 4 \u4e2a\uff0c\u800c\u4e14\u8fd9\u4e9b\u53c2\u6570\u6709\u4e9b\u662f\u53ef\u9009\u7684\uff0c\u8003\u8651\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"\u5c06\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u8868\u793a\u5206\u79bb\uff0c\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4e86\u89e3\u5177\u4f53\u7684\u6784\u5efa\u7ec6\u8282\u3002 \u589e\u52a0\u65b0\u7684\u4ea7\u54c1\u5bf9\u8c61\u65f6\uff0c\u53ea\u9700\u8981\u589e\u52a0\u5177\u4f53\u7684\u5efa\u9020\u7c7b\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u7684\u4ee3\u7801\uff0c\u6269\u5c55\u65b9\u4fbf\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/#_3","text":"\u4ea7\u54c1\u7684\u7ec4\u6210\u90e8\u5206\u5fc5\u987b\u76f8\u540c\uff0c\u8fd9\u9650\u5236\u4e86\u5176\u4f7f\u7528\u8303\u56f4\u3002 \u5982\u679c\u4ea7\u54c1\u7684\u5185\u90e8\u53d8\u5316\u590d\u6742\uff0c\u4ea7\u54c1\u5185\u90e8\u53d1\u751f\u53d8\u5316\uff0c\u5219\u5efa\u9020\u8005\u4e5f\u8981\u540c\u6b65\u4fee\u6539\uff0c\u540e\u671f\u7ef4\u62a4\u6210\u672c\u8f83\u5927\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%20%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/#_4","text":"\u4ea7\u54c1\u89d2\u8272\uff08Product\uff09\uff1a\u5b83\u662f\u5305\u542b\u591a\u4e2a\u7ec4\u6210\u90e8\u4ef6\u7684\u590d\u6742\u5bf9\u8c61\uff0c\u7531\u5177\u4f53\u5efa\u9020\u8005\u6765\u521b\u5efa\u5176\u5404\u4e2a\u96f6\u90e8\u4ef6\u3002 \u62bd\u8c61\u5efa\u9020\u8005\uff08Builder\uff09\uff1a\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u521b\u5efa\u4ea7\u54c1\u5404\u4e2a\u5b50\u90e8\u4ef6\u7684\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff0c\u901a\u5e38\u8fd8\u5305\u542b\u4e00\u4e2a\u8fd4\u56de\u590d\u6742\u4ea7\u54c1\u7684\u65b9\u6cd5\u3002 \u5177\u4f53\u5efa\u9020\u8005\uff08Concrete Builder\uff09\uff1a\u5b9e\u73b0 Builder \u63a5\u53e3\uff0c\u5b8c\u6210\u590d\u6742\u4ea7\u54c1\u7684\u5404\u4e2a\u90e8\u4ef6\u7684\u5177\u4f53\u521b\u5efa\u65b9\u6cd5\u3002 \u6307\u6325\u8005\uff08Director\uff09\uff1a\u5b83\u8c03\u7528\u5efa\u9020\u8005\u5bf9\u8c61\u4e2d\u7684\u90e8\u4ef6\u6784\u9020\u4e0e\u88c5\u914d\u65b9\u6cd5\u5b8c\u6210\u590d\u6742\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5728\u6307\u6325\u8005\u4e2d\u4e0d\u6d89\u53ca\u5177\u4f53\u4ea7\u54c1\u7684\u4fe1\u606f\u3002 Builder.h #pragma once #include <iostream> #include <vector> //\u590d\u6742\u4ea7\u54c1\u7c7b class Product { public : Product () = default ; ~ Product () = default ; void Add ( std :: string strPartName ) { m_parts_ . push_back ( strPartName ); } void Show () { std :: cout << \"Product building ... \\n \" ; for ( auto const & it : m_parts_ ) { std :: cout << it << std :: endl ; } } private : std :: vector < std :: string > m_parts_ ; }; using sharedProduct = std :: shared_ptr < Product > ; //\u62bd\u8c61\u5efa\u9020\u8005 class Builder { public : Builder () = default ; ~ Builder () = default ; virtual void CreatePartA () = 0 ; virtual void CreatePartB () = 0 ; virtual sharedProduct GetResult () = 0 ; }; //\u5177\u4f53\u5efa\u9020\u8005 class ConcreteBuilder1 : public Builder { public : ConcreteBuilder1 () { m_product_ = std :: make_shared < Product > (); } ~ ConcreteBuilder1 () = default ; virtual void CreatePartA () override { m_product_ -> Add ( \"part A\" ); } virtual void CreatePartB () override { m_product_ -> Add ( \"part B\" ); } virtual sharedProduct GetResult () override { return m_product_ ; } private : sharedProduct m_product_ ; }; class ConcreteBuilder2 : public Builder { public : ConcreteBuilder2 () { m_product_ = std :: make_shared < Product > (); } ~ ConcreteBuilder2 () = default ; virtual void CreatePartA () override { m_product_ -> Add ( \"part X\" ); } virtual void CreatePartB () override { m_product_ -> Add ( \"part Y\" ); } virtual sharedProduct GetResult () override { return m_product_ ; } private : sharedProduct m_product_ ; }; //\u6307\u6325\u8005\u7c7b class Director { public : Director () = default ; ~ Director () = default ; void Construct ( std :: shared_ptr < Builder > builder ) { builder -> CreatePartA (); builder -> CreatePartB (); } }; main.cpp #include <iostream> #include \"Builder.h\" int main () { std :: shared_ptr < Director > director = std :: make_shared < Director > (); std :: shared_ptr < ConcreteBuilder1 > builder1 = std :: make_shared < ConcreteBuilder1 > (); std :: shared_ptr < ConcreteBuilder2 > builder2 = std :: make_shared < ConcreteBuilder2 > (); director -> Construct ( builder1 ); sharedProduct product1 = builder1 -> GetResult (); product1 -> Show (); director -> Construct ( builder2 ); sharedProduct product2 = builder2 -> GetResult (); product2 -> Show (); return 0 ; }","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/","text":"\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u518d\u521b\u5efa\u53e6\u5916\u4e00\u4e2a\u53ef\u5b9a\u5236\u7684\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u77e5\u9053\u4efb\u4f55\u521b\u5efa\u7684\u7ec6\u8282\u3002 \u6a21\u5f0f\u7ed3\u6784 \u62bd\u8c61\u539f\u578b\uff08Prototype\uff09\uff1a\u5b9a\u4e49\u4e86\u514b\u9686\u81ea\u8eab\u7684\u63a5\u53e3\u3002 \u5177\u4f53\u539f\u578b\uff08ConcretePrototype\uff09\uff1a\u88ab\u590d\u5236\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u5b9e\u73b0 Prototype \u5b9a\u4e49\u7684\u63a5\u53e3\u3002 \u6a21\u5f0f\u4f18\u70b9 \u5982\u679c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u5229\u7528\u539f\u578b\u6a21\u5f0f\u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u63d0\u9ad8\u6548\u7387\u3002 \u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u65e0\u9700\u7406\u4f1a\u521b\u5efa\u8fc7\u7a0b\u3002 \u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff08\u5bf9\u8c61\u5c5e\u6027\u53d1\u751f\u4e86\u53d8\u5316\uff09\u83b7\u5f97\u4e00\u4efd\u5185\u5bb9\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u5728\u5b9e\u73b0\u6df1\u62f7\u8d1d\u65f6\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801\u3002 \u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u914d\u5907\u4e00\u4e2a\u514b\u9686\u65b9\u6cd5\uff0c\u800c\u4e14\u8be5\u514b\u9686\u65b9\u6cd5\u9700\u8981\u5bf9\u7c7b\u7684\u529f\u80fd\u8fdb\u884c\u901a\u76d8\u8003\u8651\uff0c\u8fd9\u5bf9\u5168\u65b0\u7684\u7c7b\u6765\u8bf4\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u5bf9\u5df2\u6709\u7684\u7c7b\u8fdb\u884c\u6539\u9020\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u5fc5\u987b\u4fee\u6539\u5176\u6e90\u4ee3\u7801\uff0c\u8fdd\u80cc\u4e86\u201c\u5f00\u95ed\u539f\u5219\u201d\u3002 \u9002\u7528\u573a\u666f \u5982\u679c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6210\u672c\u8f83\u5927\uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u6709\u7684\u5bf9\u8c61\u8fdb\u884c\u590d\u5236\u6765\u83b7\u5f97\u3002 \u5982\u679c\u7cfb\u7edf\u8981\u4fdd\u5b58\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u800c\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316\u5f88\u5c0f\uff0c\u6216\u8005\u5bf9\u8c61\u672c\u8eab\u5360\u5185\u5b58\u4e0d\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u914d\u5408\u5907\u5fd8\u5f55\u6a21\u5f0f\u6765\u5e94\u7528\u3002\u76f8\u53cd\uff0c\u5982\u679c\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316\u5f88\u5927\uff0c\u6216\u8005\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u5f88\u5927\uff0c\u90a3\u4e48\u91c7\u7528\u72b6\u6001\u6a21\u5f0f\u4f1a\u6bd4\u539f\u578b\u6a21\u5f0f\u66f4\u597d\u3002 \u9700\u8981\u907f\u514d\u4f7f\u7528\u5206\u5c42\u6b21\u7684\u5de5\u5382\u7c7b\u6765\u521b\u5efa\u5206\u5c42\u6b21\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u53ea\u6709\u4e00\u4e2a\u6216\u5f88\u5c11\u7684\u51e0\u4e2a\u7ec4\u5408\u72b6\u6001\uff0c\u901a\u8fc7\u590d\u5236\u539f\u578b\u5bf9\u8c61\u5f97\u5230\u65b0\u5b9e\u4f8b\u53ef\u80fd\u6bd4\u4f7f\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u66f4\u52a0\u65b9\u4fbf\u3002 Prototype.h /* * \u539f\u578b\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61\u539f\u578b class Prototype { public : Prototype () = default ; virtual ~ Prototype () = default ; virtual std :: shared_ptr < Prototype > Clone () = 0 ; virtual void ShowInfo () = 0 ; }; class Machine : public Prototype { public : Machine ( int id , std :: string partNumber , std :: string producer ) : id_ ( id ), partNumber_ ( partNumber ), producer_ ( producer ) { } virtual ~ Machine () { } //\u62f7\u8d1d\u6784\u9020 Machine ( const Machine & other ) { id_ = other . id_ ; partNumber_ = other . partNumber_ ; producer_ = other . producer_ ; } virtual std :: shared_ptr < Prototype > Clone () override { std :: shared_ptr < Prototype > p = std :: make_shared < Machine > ( * this ); return p ; } virtual void ShowInfo () override { std :: cout << \"id: \" << id_ << std :: endl ; std :: cout << \"part_number: \" << partNumber_ << std :: endl ; std :: cout << \"producer: \" << producer_ << std :: endl ; } private : int id_ ; std :: string partNumber_ ; std :: string producer_ ; }; main.cpp #include <iostream> #include \"Prototype.h\" int main () { std :: shared_ptr < Prototype > mach1 = std :: make_shared < Machine > ( 1 , \"11\" , \"Samsung\" ); std :: shared_ptr < Prototype > mach2 = mach1 -> Clone (); mach1 -> ShowInfo (); mach2 -> ShowInfo (); return 0 ; }","title":"09. \u539f\u578b\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/#_1","text":"\u62bd\u8c61\u539f\u578b\uff08Prototype\uff09\uff1a\u5b9a\u4e49\u4e86\u514b\u9686\u81ea\u8eab\u7684\u63a5\u53e3\u3002 \u5177\u4f53\u539f\u578b\uff08ConcretePrototype\uff09\uff1a\u88ab\u590d\u5236\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u5b9e\u73b0 Prototype \u5b9a\u4e49\u7684\u63a5\u53e3\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/#_2","text":"\u5982\u679c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u5229\u7528\u539f\u578b\u6a21\u5f0f\u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u63d0\u9ad8\u6548\u7387\u3002 \u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u65e0\u9700\u7406\u4f1a\u521b\u5efa\u8fc7\u7a0b\u3002 \u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff08\u5bf9\u8c61\u5c5e\u6027\u53d1\u751f\u4e86\u53d8\u5316\uff09\u83b7\u5f97\u4e00\u4efd\u5185\u5bb9\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u5b83\u4eec\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/#_3","text":"\u5728\u5b9e\u73b0\u6df1\u62f7\u8d1d\u65f6\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801\u3002 \u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u914d\u5907\u4e00\u4e2a\u514b\u9686\u65b9\u6cd5\uff0c\u800c\u4e14\u8be5\u514b\u9686\u65b9\u6cd5\u9700\u8981\u5bf9\u7c7b\u7684\u529f\u80fd\u8fdb\u884c\u901a\u76d8\u8003\u8651\uff0c\u8fd9\u5bf9\u5168\u65b0\u7684\u7c7b\u6765\u8bf4\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u5bf9\u5df2\u6709\u7684\u7c7b\u8fdb\u884c\u6539\u9020\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u5fc5\u987b\u4fee\u6539\u5176\u6e90\u4ee3\u7801\uff0c\u8fdd\u80cc\u4e86\u201c\u5f00\u95ed\u539f\u5219\u201d\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%20%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/#_4","text":"\u5982\u679c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6210\u672c\u8f83\u5927\uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u6709\u7684\u5bf9\u8c61\u8fdb\u884c\u590d\u5236\u6765\u83b7\u5f97\u3002 \u5982\u679c\u7cfb\u7edf\u8981\u4fdd\u5b58\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u800c\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316\u5f88\u5c0f\uff0c\u6216\u8005\u5bf9\u8c61\u672c\u8eab\u5360\u5185\u5b58\u4e0d\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u914d\u5408\u5907\u5fd8\u5f55\u6a21\u5f0f\u6765\u5e94\u7528\u3002\u76f8\u53cd\uff0c\u5982\u679c\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316\u5f88\u5927\uff0c\u6216\u8005\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u5f88\u5927\uff0c\u90a3\u4e48\u91c7\u7528\u72b6\u6001\u6a21\u5f0f\u4f1a\u6bd4\u539f\u578b\u6a21\u5f0f\u66f4\u597d\u3002 \u9700\u8981\u907f\u514d\u4f7f\u7528\u5206\u5c42\u6b21\u7684\u5de5\u5382\u7c7b\u6765\u521b\u5efa\u5206\u5c42\u6b21\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u53ea\u6709\u4e00\u4e2a\u6216\u5f88\u5c11\u7684\u51e0\u4e2a\u7ec4\u5408\u72b6\u6001\uff0c\u901a\u8fc7\u590d\u5236\u539f\u578b\u5bf9\u8c61\u5f97\u5230\u65b0\u5b9e\u4f8b\u53ef\u80fd\u6bd4\u4f7f\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u66f4\u52a0\u65b9\u4fbf\u3002 Prototype.h /* * \u539f\u578b\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61\u539f\u578b class Prototype { public : Prototype () = default ; virtual ~ Prototype () = default ; virtual std :: shared_ptr < Prototype > Clone () = 0 ; virtual void ShowInfo () = 0 ; }; class Machine : public Prototype { public : Machine ( int id , std :: string partNumber , std :: string producer ) : id_ ( id ), partNumber_ ( partNumber ), producer_ ( producer ) { } virtual ~ Machine () { } //\u62f7\u8d1d\u6784\u9020 Machine ( const Machine & other ) { id_ = other . id_ ; partNumber_ = other . partNumber_ ; producer_ = other . producer_ ; } virtual std :: shared_ptr < Prototype > Clone () override { std :: shared_ptr < Prototype > p = std :: make_shared < Machine > ( * this ); return p ; } virtual void ShowInfo () override { std :: cout << \"id: \" << id_ << std :: endl ; std :: cout << \"part_number: \" << partNumber_ << std :: endl ; std :: cout << \"producer: \" << producer_ << std :: endl ; } private : int id_ ; std :: string partNumber_ ; std :: string producer_ ; }; main.cpp #include <iostream> #include \"Prototype.h\" int main () { std :: shared_ptr < Prototype > mach1 = std :: make_shared < Machine > ( 1 , \"11\" , \"Samsung\" ); std :: shared_ptr < Prototype > mach2 = mach1 -> Clone (); mach1 -> ShowInfo (); mach2 -> ShowInfo (); return 0 ; }","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","text":"\u9002\u914d\u5668\u6a21\u5f0f\u662f\u4e00\u79cd\u8865\u6551\u6a21\u5f0f\u3002 \u610f\u56fe\uff1a\u5c06\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\u3002Adapter \u6a21\u5f0f\u4f7f\u5f97\u539f\u672c\u7531\u4e8e\u63a5\u53e3\u4e0d\u517c\u5bb9\u800c\u4e0d\u80fd\u4e00\u8d77\u5de5\u4f5c\u7684\u90a3\u4e9b\u7c7b\u53ef\u4ee5\u4e00\u8d77\u5de5\u4f5c\u3002 \u6a21\u5f0f\u6784\u6210 Target\uff1a\u5b9a\u4e49 Client \u4f7f\u7528\u7684\u4e0e\u7279\u5b9a\u9886\u57df\u76f8\u5173\u7684\u63a5\u53e3\u3002 Client\uff1a\u4e0e\u7b26\u5408 Target \u63a5\u53e3\u7684\u5bf9\u8c61\u534f\u540c\u3002\u5373\u662f Target \u7684\u4f7f\u7528\u573a\u666f\u3002 Adaptee\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u9700\u8981\u9002\u914d\u3002 Adapter\uff1a\u5bf9 Adaptee \u7684\u63a5\u53e3\u4e0e Target \u63a5\u53e3\u8fdb\u884c\u9002\u914d\u3002 \u4ee3\u7801\u793a\u4f8b \u5047\u8bbe\u4f60\u4eec\u516c\u53f8\u6709\u6700\u8fd1\u6536\u8d2d\u4e86\u4e00\u5bb6\u516c\u53f8\uff0c\u4e24\u5bb6\u516c\u53f8\u90fd\u6709\u5404\u81ea\u7684\u4eba\u5458\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e24\u4e2a\u7cfb\u7edf\u90fd\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e00\u4e2a\u5458\u5de5\u7684\u59d3\u540d\u3002 \u4f60\u4eec\u516c\u53f8\u7cfb\u7edf\u4e2d\u63a5\u53e3\u662f\uff1a getName() \uff1b \u88ab\u6536\u8d2d\u516c\u53f8\u7cfb\u7edf\u4e2d\u63a5\u53e3\u662f\uff1a getPeopleName() \uff1b #include <iostream> /*****\u539f\u7cfb\u7edfA\uff1aTarget*****/ class MangeSystemA { public : virtual void getName () { std :: cout << \"\u83b7\u53d6\u7cfb\u7edfA\u4e2d\u5458\u5de5\u7684\u540d\u79f0\" << std :: endl ; } }; /*****\u8981\u96c6\u6210\u7684\u7cfb\u7edfB\uff1aAdaptee*****/ class MangeSystemB { public : virtual void getPeopleName () { std :: cout << \"\u83b7\u53d6\u7cfb\u7edfB\u4e2d\u5458\u5de5\u7684\u540d\u79f0\" << std :: endl ; } }; /***\u9002\u914d\u5668\uff1aAdapter***/ class AdapterSystem : public MangeSystemA { public : AdapterSystem ( std :: shared_ptr < MangeSystemB > pSysB ) : m_pSysB ( pSysB ) {} virtual void getName () { m_pSysB -> getPeopleName (); } private : std :: shared_ptr < MangeSystemB > m_pSysB ; }; int main () { std :: shared_ptr < MangeSystemB > sysB = std :: make_shared < MangeSystemB > (); //\u521b\u5efa\u9002\u914d\u5668 std :: shared_ptr < MangeSystemA > sysA = std :: make_shared < AdapterSystem > ( sysB ); sysA -> getName (); return 0 ; } \u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a\u53ef\u4ee5\u5c06\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u63a5\u53e3\u8f6c\u6362\u4e3a\u9700\u8981\u7684\u63a5\u53e3\u3002 \u7f3a\u70b9\uff1a\u51ed\u7a7a\u591a\u4e86\u4e00\u4e2a\u9002\u914d\u7c7b\u3002 \u9002\u7528\u573a\u666f \u60f3\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\uff0c\u4f46\u63a5\u53e3\u4e0d\u7b26\u5408\u4f60\u7684\u8981\u6c42\u3002 \u603b\u7ed3 \u9002\u914d\u5668\u6a21\u5f0f\u8f83\u4e3a\u7b80\u5355\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u63a5\u53e3\u8fdb\u884c\u4e00\u4e0b\u5c01\u88c5\u3002\u4e0a\u9762\u8bb2\u7684\u662f\u5bf9\u8c61\u9002\u914d\u5668\uff0c\u5176\u5b9e\u8fd8\u6709\u7c7b\u9002\u914d\u5668\uff0c\u4f7f\u7528\u591a\u7ee7\u627f\u5b9e\u73b0\uff0c\u4f46\u80fd\u7528\u7ec4\u5408\u5b9e\u73b0\u7684\u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528\u7ee7\u627f\u3002\u6240\u4ee5\u4f7f\u7528\u8f83\u5c11\u3002 \u7c7b\u9002\u914d\u5668\u91c7\u7528\u201c\u591a\u7ee7\u627f\u201d\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\uff0c \u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528 \u3002\u5bf9\u8c61\u9002\u914d\u5668\u4f7f\u7528\u201c\u5bf9\u8c61\u7ec4\u5408\u201d\u7684\u65b9\u5f0f\uff0c\u66f4\u7b26\u5408\u677e\u8026\u5408\u7cbe\u795e\u3002","title":"10. \u9002\u914d\u5668\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_1","text":"Target\uff1a\u5b9a\u4e49 Client \u4f7f\u7528\u7684\u4e0e\u7279\u5b9a\u9886\u57df\u76f8\u5173\u7684\u63a5\u53e3\u3002 Client\uff1a\u4e0e\u7b26\u5408 Target \u63a5\u53e3\u7684\u5bf9\u8c61\u534f\u540c\u3002\u5373\u662f Target \u7684\u4f7f\u7528\u573a\u666f\u3002 Adaptee\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u9700\u8981\u9002\u914d\u3002 Adapter\uff1a\u5bf9 Adaptee \u7684\u63a5\u53e3\u4e0e Target \u63a5\u53e3\u8fdb\u884c\u9002\u914d\u3002","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_2","text":"\u5047\u8bbe\u4f60\u4eec\u516c\u53f8\u6709\u6700\u8fd1\u6536\u8d2d\u4e86\u4e00\u5bb6\u516c\u53f8\uff0c\u4e24\u5bb6\u516c\u53f8\u90fd\u6709\u5404\u81ea\u7684\u4eba\u5458\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e24\u4e2a\u7cfb\u7edf\u90fd\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e00\u4e2a\u5458\u5de5\u7684\u59d3\u540d\u3002 \u4f60\u4eec\u516c\u53f8\u7cfb\u7edf\u4e2d\u63a5\u53e3\u662f\uff1a getName() \uff1b \u88ab\u6536\u8d2d\u516c\u53f8\u7cfb\u7edf\u4e2d\u63a5\u53e3\u662f\uff1a getPeopleName() \uff1b #include <iostream> /*****\u539f\u7cfb\u7edfA\uff1aTarget*****/ class MangeSystemA { public : virtual void getName () { std :: cout << \"\u83b7\u53d6\u7cfb\u7edfA\u4e2d\u5458\u5de5\u7684\u540d\u79f0\" << std :: endl ; } }; /*****\u8981\u96c6\u6210\u7684\u7cfb\u7edfB\uff1aAdaptee*****/ class MangeSystemB { public : virtual void getPeopleName () { std :: cout << \"\u83b7\u53d6\u7cfb\u7edfB\u4e2d\u5458\u5de5\u7684\u540d\u79f0\" << std :: endl ; } }; /***\u9002\u914d\u5668\uff1aAdapter***/ class AdapterSystem : public MangeSystemA { public : AdapterSystem ( std :: shared_ptr < MangeSystemB > pSysB ) : m_pSysB ( pSysB ) {} virtual void getName () { m_pSysB -> getPeopleName (); } private : std :: shared_ptr < MangeSystemB > m_pSysB ; }; int main () { std :: shared_ptr < MangeSystemB > sysB = std :: make_shared < MangeSystemB > (); //\u521b\u5efa\u9002\u914d\u5668 std :: shared_ptr < MangeSystemA > sysA = std :: make_shared < AdapterSystem > ( sysB ); sysA -> getName (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_3","text":"\u4f18\u70b9\uff1a\u53ef\u4ee5\u5c06\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u63a5\u53e3\u8f6c\u6362\u4e3a\u9700\u8981\u7684\u63a5\u53e3\u3002 \u7f3a\u70b9\uff1a\u51ed\u7a7a\u591a\u4e86\u4e00\u4e2a\u9002\u914d\u7c7b\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_4","text":"\u60f3\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\uff0c\u4f46\u63a5\u53e3\u4e0d\u7b26\u5408\u4f60\u7684\u8981\u6c42\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%20%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/#_5","text":"\u9002\u914d\u5668\u6a21\u5f0f\u8f83\u4e3a\u7b80\u5355\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u63a5\u53e3\u8fdb\u884c\u4e00\u4e0b\u5c01\u88c5\u3002\u4e0a\u9762\u8bb2\u7684\u662f\u5bf9\u8c61\u9002\u914d\u5668\uff0c\u5176\u5b9e\u8fd8\u6709\u7c7b\u9002\u914d\u5668\uff0c\u4f7f\u7528\u591a\u7ee7\u627f\u5b9e\u73b0\uff0c\u4f46\u80fd\u7528\u7ec4\u5408\u5b9e\u73b0\u7684\u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528\u7ee7\u627f\u3002\u6240\u4ee5\u4f7f\u7528\u8f83\u5c11\u3002 \u7c7b\u9002\u914d\u5668\u91c7\u7528\u201c\u591a\u7ee7\u627f\u201d\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\uff0c \u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528 \u3002\u5bf9\u8c61\u9002\u914d\u5668\u4f7f\u7528\u201c\u5bf9\u8c61\u7ec4\u5408\u201d\u7684\u65b9\u5f0f\uff0c\u66f4\u7b26\u5408\u677e\u8026\u5408\u7cbe\u795e\u3002","title":"\u603b\u7ed3"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","text":"\u6865\u63a5\u6a21\u5f0f\u5373\u5c06\u62bd\u8c61\u90e8\u5206\u4e0e\u5b9e\u73b0\u90e8\u5206\u5206\u79bb\uff0c\u4f7f\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u53d8\u5316\uff08\u62bd\u8c61\u90e8\u5206\u662f\u6307\u63a5\u53e3\uff0c\u5b9e\u73b0\u90e8\u5206\u662f\u6307\u7ee7\u627f\u63a5\u53e3\u7684\u5b9e\u4f53\u7c7b\uff09\u3002 \u6865\u63a5\u6a21\u5f0f\u53ef\u4f5c\u4e3a\u66ff\u4ee3\u591a\u91cd\u7ee7\u627f\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u5176\u4e3b\u8981\u5e94\u7528\u573a\u666f\u4e3a\uff1a\u4e00\u4e2a\u7c7b\u5b58\u5728\u4e24\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u72ec\u7acb\u53d8\u5316\u7684\u7ef4\u5ea6\uff0c\u4e14\u8fd9\u4e9b\u7ef4\u5ea6\u90fd\u9700\u8981\u72ec\u7acb\u8fdb\u884c\u6269\u5c55\u65f6\u3002 \u9002\u7528\u573a\u666f \u4ee5\u4e0b\u60c5\u5f62\u8003\u8651\u4f7f\u7528\u6865\u63a5\u6a21\u5f0f\uff1a \u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u7684\u65f6\u5019\uff0c\u8003\u8651\u4f9d\u8d56\u4e8e\u62bd\u8c61\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u3002 \u5f53\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u518d\u591a\u4e2a\u5bf9\u8c61\u95f4\u5171\u4eab\u65f6\uff0c\u8003\u8651\u5c06\u53d8\u5316\u7684\u90e8\u5206\u62bd\u8c61\u51fa\u6765\u518d\u805a\u5408\u3002 \u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\u7684\u65f6\u5019\u3002 \u6a21\u5f0f\u4f18\u70b9 \u5c06\u5b9e\u73b0\u62bd\u79bb\u51fa\u6765\uff0c\u518d\u5b9e\u73b0\u62bd\u8c61\uff0c\u4f7f\u5f97\u5bf9\u8c61\u7684\u5177\u4f53\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u62bd\u8c61\uff0c\u6ee1\u8db3\u4e86\u4f9d\u8d56\u5012\u7f6e\u7684\u539f\u5219\u3002 \u66f4\u597d\u7684\u6269\u5c55\u6027\u3002 \u53ef\u52a8\u6001\u7684\u5207\u6362\u5b9e\u73b0\u3002\u6865\u63a5\u6a21\u5f0f\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u5b9e\u73b0\u7684\u5206\u79bb\uff0c\u5728\u5b9e\u73b0\u6865\u63a5\u6a21\u5f0f\u65f6\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u7684\u9009\u62e9\u5177\u4f53\u7684\u5b9e\u73b0\u3002 Brige.h /* * \u6865\u63a5\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61APP\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class IApp { public : IApp () = default ; virtual ~ IApp () = default ; virtual void Run () = 0 ; }; //\u62bd\u8c61\u624b\u673a\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class ICellPhone { public : ICellPhone () = default ; virtual ~ ICellPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) = 0 ; //\u5b9e\u73b0\u624b\u673a\u4e0eAPP\u7684\u6865\u63a5 }; //\u5177\u4f53APP\u7c7b class CGameApp : public IApp { public : CGameApp () { std :: cout << \"Game App Initializing ... \\n \" ; } ~ CGameApp () { std :: cout << \"Game App quit \\n \" ; } virtual void Run () override { std :: cout << \"Game App running ... \\n \" ; } }; class CTranslateApp : public IApp { public : CTranslateApp () { std :: cout << \"Translate App Initializing ... \\n \" ; } ~ CTranslateApp () { std :: cout << \"Translate App quit \\n \" ; } virtual void Run () override { std :: cout << \"Translate App running ... \\n \" ; } }; //\u5177\u4f53\u624b\u673a\u7c7b class CXiaomiPhone : public ICellPhone { public : CXiaomiPhone () = default ; ~ CXiaomiPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using Xiaomi phone ... \\n \" ; app -> Run (); } }; class CHuaWeiPhone : public ICellPhone { public : CHuaWeiPhone () = default ; ~ CHuaWeiPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using Huawei phone ... \\n \" ; app -> Run (); } }; class CIPhone : public ICellPhone { public : CIPhone () = default ; ~ CIPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using IPhone ... \\n \" ; app -> Run (); } }; main.cpp #include <iostream> #include \"Brige.h\" int main () { std :: shared_ptr < CXiaomiPhone > xiaomi = std :: make_shared < CXiaomiPhone > (); std :: shared_ptr < CHuaWeiPhone > huawei = std :: make_shared < CHuaWeiPhone > (); std :: shared_ptr < CIPhone > iphone = std :: make_shared < CIPhone > (); std :: shared_ptr < CGameApp > game = std :: make_shared < CGameApp > (); std :: shared_ptr < CTranslateApp > trans = std :: make_shared < CTranslateApp > (); xiaomi -> RunApp ( game ); xiaomi -> RunApp ( trans ); std :: cout << \"=========================== \\n \" ; huawei -> RunApp ( game ); huawei -> RunApp ( trans ); std :: cout << \"=========================== \\n \" ; iphone -> RunApp ( game ); iphone -> RunApp ( trans ); return 0 ; }","title":"11. \u6865\u63a5\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/#_1","text":"\u4ee5\u4e0b\u60c5\u5f62\u8003\u8651\u4f7f\u7528\u6865\u63a5\u6a21\u5f0f\uff1a \u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u7684\u65f6\u5019\uff0c\u8003\u8651\u4f9d\u8d56\u4e8e\u62bd\u8c61\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u3002 \u5f53\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u518d\u591a\u4e2a\u5bf9\u8c61\u95f4\u5171\u4eab\u65f6\uff0c\u8003\u8651\u5c06\u53d8\u5316\u7684\u90e8\u5206\u62bd\u8c61\u51fa\u6765\u518d\u805a\u5408\u3002 \u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u591a\u4e2a\u53d8\u5316\u56e0\u7d20\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\u7684\u65f6\u5019\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%20%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/#_2","text":"\u5c06\u5b9e\u73b0\u62bd\u79bb\u51fa\u6765\uff0c\u518d\u5b9e\u73b0\u62bd\u8c61\uff0c\u4f7f\u5f97\u5bf9\u8c61\u7684\u5177\u4f53\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u62bd\u8c61\uff0c\u6ee1\u8db3\u4e86\u4f9d\u8d56\u5012\u7f6e\u7684\u539f\u5219\u3002 \u66f4\u597d\u7684\u6269\u5c55\u6027\u3002 \u53ef\u52a8\u6001\u7684\u5207\u6362\u5b9e\u73b0\u3002\u6865\u63a5\u6a21\u5f0f\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u5b9e\u73b0\u7684\u5206\u79bb\uff0c\u5728\u5b9e\u73b0\u6865\u63a5\u6a21\u5f0f\u65f6\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u7684\u9009\u62e9\u5177\u4f53\u7684\u5b9e\u73b0\u3002 Brige.h /* * \u6865\u63a5\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61APP\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class IApp { public : IApp () = default ; virtual ~ IApp () = default ; virtual void Run () = 0 ; }; //\u62bd\u8c61\u624b\u673a\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class ICellPhone { public : ICellPhone () = default ; virtual ~ ICellPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) = 0 ; //\u5b9e\u73b0\u624b\u673a\u4e0eAPP\u7684\u6865\u63a5 }; //\u5177\u4f53APP\u7c7b class CGameApp : public IApp { public : CGameApp () { std :: cout << \"Game App Initializing ... \\n \" ; } ~ CGameApp () { std :: cout << \"Game App quit \\n \" ; } virtual void Run () override { std :: cout << \"Game App running ... \\n \" ; } }; class CTranslateApp : public IApp { public : CTranslateApp () { std :: cout << \"Translate App Initializing ... \\n \" ; } ~ CTranslateApp () { std :: cout << \"Translate App quit \\n \" ; } virtual void Run () override { std :: cout << \"Translate App running ... \\n \" ; } }; //\u5177\u4f53\u624b\u673a\u7c7b class CXiaomiPhone : public ICellPhone { public : CXiaomiPhone () = default ; ~ CXiaomiPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using Xiaomi phone ... \\n \" ; app -> Run (); } }; class CHuaWeiPhone : public ICellPhone { public : CHuaWeiPhone () = default ; ~ CHuaWeiPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using Huawei phone ... \\n \" ; app -> Run (); } }; class CIPhone : public ICellPhone { public : CIPhone () = default ; ~ CIPhone () = default ; virtual void RunApp ( std :: shared_ptr < IApp > app ) { std :: cout << \"using IPhone ... \\n \" ; app -> Run (); } }; main.cpp #include <iostream> #include \"Brige.h\" int main () { std :: shared_ptr < CXiaomiPhone > xiaomi = std :: make_shared < CXiaomiPhone > (); std :: shared_ptr < CHuaWeiPhone > huawei = std :: make_shared < CHuaWeiPhone > (); std :: shared_ptr < CIPhone > iphone = std :: make_shared < CIPhone > (); std :: shared_ptr < CGameApp > game = std :: make_shared < CGameApp > (); std :: shared_ptr < CTranslateApp > trans = std :: make_shared < CTranslateApp > (); xiaomi -> RunApp ( game ); xiaomi -> RunApp ( trans ); std :: cout << \"=========================== \\n \" ; huawei -> RunApp ( game ); huawei -> RunApp ( trans ); std :: cout << \"=========================== \\n \" ; iphone -> RunApp ( game ); iphone -> RunApp ( trans ); return 0 ; }","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/12.%20%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A8%A1%E5%BC%8F/","text":"\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter Pattern\uff09\u6216\u6807\u51c6\u6a21\u5f0f\uff08Criteria Pattern\uff09\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u4e0d\u540c\u7684\u6807\u51c6\u6765\u8fc7\u6ee4\u4e00\u7ec4\u5bf9\u8c61\uff0c\u901a\u8fc7\u903b\u8f91\u8fd0\u7b97\u4ee5\u89e3\u8026\u7684\u65b9\u5f0f\u628a\u5b83\u4eec\u8fde\u63a5\u8d77\u6765\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u5b83\u7ed3\u5408\u591a\u4e2a\u6807\u51c6\u6765\u83b7\u5f97\u5355\u4e00\u6807\u51c6\u3002 Filter.h /* * \u8fc7\u6ee4\u5668\u6a21\u5f0f * * \u7edf\u8ba1\u5e02\u6c11\u5c31\u4e1a\u60c5\u51b5\uff0c\u8fc7\u6ee4\u51fa\u65e0\u4e1a\u4eba\u5458\u5e2e\u52a9\u5c31\u4e1a\u3002 */ #pragma once #include <iostream> #include <vector> class Person { public : Person ( std :: string name , int age , std :: string gender , std :: string work ) : name_ ( name ), age_ ( age ), gender_ ( gender ), work_ ( work ) { } ~ Person () = default ; void ShowInfo () { std :: cout << \"***************\u6863\u6848\u8bb0\u5f55******************* \\n \" ; std :: cout << \"\u59d3\u540d\uff1a\" << name_ << std :: endl ; std :: cout << \"\u5e74\u9f84\uff1a\" << age_ << std :: endl ; std :: cout << \"\u6027\u522b\uff1a\" << gender_ << std :: endl ; std :: cout << \"\u5de5\u4f5c\uff1a\" << work_ << std :: endl ; } std :: string GetName () const { return name_ ; } int GetAge () const { return age_ ; } std :: string GetGender () const { return gender_ ; } std :: string GetWork () const { return work_ ; } private : std :: string name_ ; //\u59d3\u540d int age_ ; //\u5e74\u9f84 std :: string gender_ ; //\u6027\u522b std :: string work_ ; //\u5de5\u4f5c }; using vecPerson = std :: vector < std :: shared_ptr < Person >> ; //\u62bd\u8c61\u6807\u51c6\u7c7b\uff0c\u5b9a\u4e49\u8fc7\u6ee4\u63a5\u53e3 class Criteria { public : Criteria () = default ; virtual ~ Criteria () = default ; //\u5b9a\u4e49\u8fc7\u6ee4\u5668\u63a5\u53e3\uff0c\u6309\u7167\u67d0\u4e00\u6807\u51c6\u8fc7\u6ee4\u51fa\u5bf9\u8c61\u6307\u9488\u5217\u8868\uff0c\u8fd9\u4e00\u6807\u51c6\u7531\u7ee7\u627f\u4e86 Criteria \u7c7b\u7684\u5177\u4f53\u7c7b\u5b9e\u73b0 virtual vecPerson MeetCriteria ( vecPerson all ) = 0 ; }; //\u5973\u6027\u8fc7\u6ee4\u5668 class CriteriaFemale : public Criteria { public : CriteriaFemale () = default ; virtual ~ CriteriaFemale () = default ; virtual vecPerson MeetCriteria ( vecPerson all ) override { vecPerson ret ; for ( const auto it : all ) { if ( \"\u5973\" == it -> GetGender ()) { ret . push_back ( it ); } } return ret ; } }; //\u7537\u6027\u8fc7\u6ee4\u5668 class CriteriaMale : public Criteria { public : CriteriaMale () = default ; virtual ~ CriteriaMale () = default ; virtual vecPerson MeetCriteria ( vecPerson all ) override { vecPerson ret ; for ( const auto it : all ) { if ( \"\u7537\" == it -> GetGender ()) { ret . push_back ( it ); } } return ret ; } }; //\u65e0\u4e1a\u8005\u8fc7\u6ee4\u5668 class CriteriaUnemployed : public Criteria { public : CriteriaUnemployed () = default ; virtual ~ CriteriaUnemployed () = default ; virtual vecPerson MeetCriteria ( vecPerson all ) override { vecPerson ret ; for ( const auto it : all ) { if ( \"\" == it -> GetWork ()) { ret . push_back ( it ); } } return ret ; } }; //\u903b\u8f91\u5173\u7cfb \u4e0e \u7684\u8fc7\u6ee4\u5668 class AndCriteria : public Criteria { public : AndCriteria ( std :: shared_ptr < Criteria > c1 , std :: shared_ptr < Criteria > c2 ) : m_criteria1_ ( c1 ), m_criteria2_ ( c2 ) { } virtual ~ AndCriteria () = default ; virtual vecPerson MeetCriteria ( vecPerson all ) override { vecPerson ret ; //\u5148\u4ee5\u6807\u51c6\u4e00\u8fc7\u6ee4\uff0c\u518d\u7528\u6807\u51c6\u4e8c\u8fc7\u6ee4\u4e00\u7684\u7ed3\u679c ret = m_criteria1_ -> MeetCriteria ( all ); ret = m_criteria2_ -> MeetCriteria ( ret ); return ret ; } private : std :: shared_ptr < Criteria > m_criteria1_ ; std :: shared_ptr < Criteria > m_criteria2_ ; }; //\u903b\u8f91\u5173\u7cfb \u6216 \u7684\u8fc7\u6ee4\u5668 class OrCriteria : public Criteria { public : OrCriteria ( std :: shared_ptr < Criteria > c1 , std :: shared_ptr < Criteria > c2 ) : m_criteria1_ ( c1 ), m_criteria2_ ( c2 ) { } virtual ~ OrCriteria () = default ; virtual vecPerson MeetCriteria ( vecPerson all ) override { vecPerson ret ; ret = m_criteria1_ -> MeetCriteria ( all ); vecPerson ret2 ; ret2 = m_criteria2_ -> MeetCriteria ( all ); for ( const auto & it : ret2 ) { ret . push_back ( it ); } return ret ; } private : std :: shared_ptr < Criteria > m_criteria1_ ; std :: shared_ptr < Criteria > m_criteria2_ ; }; main.cpp #include <iostream> #include \"Filter.h\" int main () { std :: shared_ptr < Person > person1 = std :: make_shared < Person > ( \"\u5f20\u4e09\" , 28 , \"\u7537\" , \"\" ); std :: shared_ptr < Person > person2 = std :: make_shared < Person > ( \"\u674e\u56db\" , 25 , \"\u7537\" , \"\u53a8\u5e08\" ); std :: shared_ptr < Person > person3 = std :: make_shared < Person > ( \"\u738b\u4e94\" , 29 , \"\u7537\" , \"\" ); std :: shared_ptr < Person > person4 = std :: make_shared < Person > ( \"\u7fe0\u82b1\" , 27 , \"\u5973\" , \"\u670d\u52a1\u5458\" ); std :: shared_ptr < Person > person5 = std :: make_shared < Person > ( \"\u6842\u82ac\" , 28 , \"\u5973\" , \"\" ); std :: shared_ptr < Person > person6 = std :: make_shared < Person > ( \"\u94b1\u516d\" , 30 , \"\u7537\" , \"\u5feb\u9012\u5458\" ); std :: shared_ptr < Person > person7 = std :: make_shared < Person > ( \"\u60e0\u82f1\" , 23 , \"\u5973\" , \"\" ); std :: shared_ptr < Person > person8 = std :: make_shared < Person > ( \"\u738b\u4e8c\" , 35 , \"\u7537\" , \"\u6728\u5de5\" ); vecPerson all ; all . push_back ( person1 ); all . push_back ( person2 ); all . push_back ( person3 ); all . push_back ( person4 ); all . push_back ( person5 ); all . push_back ( person6 ); all . push_back ( person7 ); all . push_back ( person8 ); std :: cout << \"\u5973\u6027\u7b5b\u9009\u7ed3\u679c\uff1a \\n \" ; vecPerson ret ; std :: shared_ptr < CriteriaFemale > f = std :: make_shared < CriteriaFemale > (); ret = f -> MeetCriteria ( all ); for ( const auto & it : ret ) { it -> ShowInfo (); } system ( \"pause\" ); std :: cout << \"\u7537\u6027\u7b5b\u9009\u7ed3\u679c\uff1a \\n \" ; std :: shared_ptr < CriteriaMale > m = std :: make_shared < CriteriaMale > (); ret = m -> MeetCriteria ( all ); for ( const auto & it : ret ) { it -> ShowInfo (); } system ( \"pause\" ); std :: cout << \"\u5973\u6027\u65e0\u4e1a\u8005\uff1a \\n \" ; std :: shared_ptr < CriteriaUnemployed > u = std :: make_shared < CriteriaUnemployed > (); std :: shared_ptr < AndCriteria > FandU = std :: make_shared < AndCriteria > ( f , u ); ret = FandU -> MeetCriteria ( all ); for ( const auto & it : ret ) { it -> ShowInfo (); } system ( \"pause\" ); std :: cout << \"\u7537\u6027\u65e0\u4e1a\u8005\uff1a \\n \" ; std :: shared_ptr < AndCriteria > MandU = std :: make_shared < AndCriteria > ( m , u ); ret = MandU -> MeetCriteria ( all ); for ( const auto & it : ret ) { it -> ShowInfo (); } return 0 ; }","title":"12. \u8fc7\u6ee4\u5668\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","text":"\u610f\u56fe \u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u4ee5\u8868\u793a\u201c\u90e8\u5206-\u6574\u4f53\u201d\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u8be5\u6a21\u5f0f\u4f7f\u5f97\u7528\u6237\u5bf9\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u4f7f\u7528\u5177\u6709\u4e00\u81f4\u6027\u3002 \u9002\u7528\u573a\u666f \u4f60\u60f3\u8868\u793a\u5bf9\u8c61\u7684\u201c\u90e8\u5206-\u6574\u4f53\u201d\u5c42\u6b21\u7ed3\u6784\u3002 \u4f60\u5e0c\u671b\u7528\u6237\u5ffd\u7565\u7ec4\u5408\u5bf9\u8c61\u4e0e\u5355\u4e2a\u5bf9\u8c61\u7684\u4e0d\u540c\uff0c\u7528\u6237\u5c06\u7edf\u4e00\u5730\u9002\u7528\u7ec4\u5408\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002 \u6a21\u5f0f\u7ed3\u6784 \u62bd\u8c61\u6784\u4ef6\uff08Component\uff09\u89d2\u8272\uff1a\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4e3a\u6811\u53f6\u6784\u4ef6\u548c\u6811\u679d\u6784\u4ef6\u58f0\u660e\u516c\u5171\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u5b83\u4eec\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002 \u6811\u679d\u6784\u4ef6\uff08Composite\uff09\u89d2\u8272/\u4e2d\u95f4\u6784\u4ef6\uff1a\u662f\u7ec4\u5408\u4e2d\u7684\u5206\u652f\u8282\u70b9\u5bf9\u8c61\uff0c\u5b83\u6709\u5b50\u8282\u70b9\uff0c\u7528\u4e8e\u7ee7\u627f\u548c\u5b9e\u73b0\u62bd\u8c61\u6784\u4ef6\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b58\u50a8\u548c\u7ba1\u7406\u5b50\u90e8\u4ef6\uff0c\u901a\u5e38\u5305\u542b Add() \u3001 Remove() \u3001 GetChild() \u7b49\u65b9\u6cd5\u3002 \u6811\u53f6\u6784\u4ef6\uff08Leaf\uff09\u89d2\u8272\uff1a\u662f\u7ec4\u5408\u4e2d\u7684\u53f6\u8282\u70b9\u5bf9\u8c61\uff0c\u5b83\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u7528\u4e8e\u7ee7\u627f\u6216\u5b9e\u73b0\u62bd\u8c61\u6784\u4ef6\u3002 Composite.h /* * \u7ec4\u5408\u6a21\u5f0f */ #pragma once #include <iostream> #include <vector> //\u62bd\u8c61\u6784\u4ef6\uff0c\u8ba1\u6570\u5668 class Counter { public : Counter () = default ; virtual ~ Counter () = default ; virtual int Count () = 0 ; }; using vecCounter = std :: vector < std :: shared_ptr < Counter >> ; //\u6811\u53f6\u6784\u4ef6 class City : public Counter { public : explicit City ( int p ) : population_ ( p ) { } ~ City () = default ; virtual int Count () override { return population_ ; } private : int population_ = 0 ; }; //\u6811\u679d\u6784\u4ef6 class Composite : public Counter { public : Composite () = default ; ~ Composite () = default ; void Add ( std :: shared_ptr < Counter > counter ) { m_counters_ . push_back ( counter ); } void Remove ( std :: shared_ptr < Counter > counter ) { auto it = std :: find ( m_counters_ . begin (), m_counters_ . end (), counter ); if ( m_counters_ . end () != it ) { m_counters_ . erase ( it ); } } virtual int Count () override { int nPopulation = 0 ; for ( const auto & it : m_counters_ ) { nPopulation += it -> Count (); } return nPopulation ; } private : vecCounter m_counters_ ; }; main.cpp #include <iostream> #include \"Composite.h\" int main () { //\u7edf\u8ba1\u4eba\u53e3\u6570\u91cf std :: shared_ptr < Composite > Guanxi = std :: make_shared < Composite > (); std :: shared_ptr < City > Yizhou = std :: make_shared < City > ( 600000 ); std :: shared_ptr < City > Liuzhou = std :: make_shared < City > ( 1000000 ); Guanxi -> Add ( Yizhou ); Guanxi -> Add ( Liuzhou ); std :: cout << \"\u4eba\u53e3\u603b\u6570\uff1a\" << Guanxi -> Count () << std :: endl ; return 0 ; }","title":"13. \u7ec4\u5408\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/#_1","text":"\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u4ee5\u8868\u793a\u201c\u90e8\u5206-\u6574\u4f53\u201d\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u8be5\u6a21\u5f0f\u4f7f\u5f97\u7528\u6237\u5bf9\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u4f7f\u7528\u5177\u6709\u4e00\u81f4\u6027\u3002","title":"\u610f\u56fe"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/#_2","text":"\u4f60\u60f3\u8868\u793a\u5bf9\u8c61\u7684\u201c\u90e8\u5206-\u6574\u4f53\u201d\u5c42\u6b21\u7ed3\u6784\u3002 \u4f60\u5e0c\u671b\u7528\u6237\u5ffd\u7565\u7ec4\u5408\u5bf9\u8c61\u4e0e\u5355\u4e2a\u5bf9\u8c61\u7684\u4e0d\u540c\uff0c\u7528\u6237\u5c06\u7edf\u4e00\u5730\u9002\u7528\u7ec4\u5408\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%20%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/#_3","text":"\u62bd\u8c61\u6784\u4ef6\uff08Component\uff09\u89d2\u8272\uff1a\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4e3a\u6811\u53f6\u6784\u4ef6\u548c\u6811\u679d\u6784\u4ef6\u58f0\u660e\u516c\u5171\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u5b83\u4eec\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002 \u6811\u679d\u6784\u4ef6\uff08Composite\uff09\u89d2\u8272/\u4e2d\u95f4\u6784\u4ef6\uff1a\u662f\u7ec4\u5408\u4e2d\u7684\u5206\u652f\u8282\u70b9\u5bf9\u8c61\uff0c\u5b83\u6709\u5b50\u8282\u70b9\uff0c\u7528\u4e8e\u7ee7\u627f\u548c\u5b9e\u73b0\u62bd\u8c61\u6784\u4ef6\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b58\u50a8\u548c\u7ba1\u7406\u5b50\u90e8\u4ef6\uff0c\u901a\u5e38\u5305\u542b Add() \u3001 Remove() \u3001 GetChild() \u7b49\u65b9\u6cd5\u3002 \u6811\u53f6\u6784\u4ef6\uff08Leaf\uff09\u89d2\u8272\uff1a\u662f\u7ec4\u5408\u4e2d\u7684\u53f6\u8282\u70b9\u5bf9\u8c61\uff0c\u5b83\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u7528\u4e8e\u7ee7\u627f\u6216\u5b9e\u73b0\u62bd\u8c61\u6784\u4ef6\u3002 Composite.h /* * \u7ec4\u5408\u6a21\u5f0f */ #pragma once #include <iostream> #include <vector> //\u62bd\u8c61\u6784\u4ef6\uff0c\u8ba1\u6570\u5668 class Counter { public : Counter () = default ; virtual ~ Counter () = default ; virtual int Count () = 0 ; }; using vecCounter = std :: vector < std :: shared_ptr < Counter >> ; //\u6811\u53f6\u6784\u4ef6 class City : public Counter { public : explicit City ( int p ) : population_ ( p ) { } ~ City () = default ; virtual int Count () override { return population_ ; } private : int population_ = 0 ; }; //\u6811\u679d\u6784\u4ef6 class Composite : public Counter { public : Composite () = default ; ~ Composite () = default ; void Add ( std :: shared_ptr < Counter > counter ) { m_counters_ . push_back ( counter ); } void Remove ( std :: shared_ptr < Counter > counter ) { auto it = std :: find ( m_counters_ . begin (), m_counters_ . end (), counter ); if ( m_counters_ . end () != it ) { m_counters_ . erase ( it ); } } virtual int Count () override { int nPopulation = 0 ; for ( const auto & it : m_counters_ ) { nPopulation += it -> Count (); } return nPopulation ; } private : vecCounter m_counters_ ; }; main.cpp #include <iostream> #include \"Composite.h\" int main () { //\u7edf\u8ba1\u4eba\u53e3\u6570\u91cf std :: shared_ptr < Composite > Guanxi = std :: make_shared < Composite > (); std :: shared_ptr < City > Yizhou = std :: make_shared < City > ( 600000 ); std :: shared_ptr < City > Liuzhou = std :: make_shared < City > ( 1000000 ); Guanxi -> Add ( Yizhou ); Guanxi -> Add ( Liuzhou ); std :: cout << \"\u4eba\u53e3\u603b\u6570\uff1a\" << Guanxi -> Count () << std :: endl ; return 0 ; }","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/","text":"\u610f\u56fe \u4e3a\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3\uff0c\u6b64\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u9690\u85cf\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u6027\uff0c\u4f7f\u5f97\u5b50\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\u3002 \u89e3\u51b3\u7684\u95ee\u9898 \u964d\u4f4e\u8bbf\u95ee\u590d\u6742\u7cfb\u7edf\u7684\u5185\u90e8\u5b50\u7cfb\u7edf\u65f6\u7684\u590d\u6742\u5ea6\uff0c\u7b80\u5316\u8c03\u7528\u63a5\u53e3\u3002 \u9002\u7528\u573a\u666f \u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u77e5\u9053\u7cfb\u7edf\u5185\u90e8\u7684\u590d\u6742\u8054\u7cfb\uff0c\u6574\u4e2a\u7cfb\u7edf\u53ea\u9700\u63d0\u4f9b\u4e00\u4e2a\u201c\u63a5\u5f85\u5458\u201d\u5373\u53ef\u3002 \u5b9a\u4e49\u7cfb\u7edf\u7684\u5165\u53e3\u3002 \u5173\u952e\u4ee3\u7801 \u518d\u5ba2\u6237\u7aef\u548c\u590d\u6742\u7cfb\u7edf\u76f4\u63a5\u518d\u52a0\u4e00\u5c42\uff0c\u8fd9\u4e00\u5c42\u5c06\u8c03\u7528\u987a\u5e8f\u3001\u4f9d\u8d56\u5173\u7cfb\u7b49\u5904\u7406\u597d\u3002 \u6a21\u5f0f\u4f18\u70b9 \u51cf\u5c11\u7cfb\u7edf\u76f8\u4e92\u4f9d\u8d56\u3002 \u63d0\u9ad8\u7075\u6d3b\u6027\u3002 \u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\uff0c\u5982\u679c\u8981\u6539\u4e1c\u897f\u5f88\u9ebb\u70e6\uff0c\u7ee7\u627f\u91cd\u5199\u90fd\u4e0d\u5408\u9002\u3002 Facade.h /* * \u5916\u89c2\u6a21\u5f0f */ #pragma once #include <iostream> //\u5b50\u7cfb\u7edf\u4e00 class Television { public : Television () = default ; ~ Television () = default ; void TvTurnOn () { std :: cout << \"Television turn on \\n \" ; } void TvTurnOff () { std :: cout << \"Television turn off \\n \" ; } }; //\u5b50\u7cfb\u7edf\u4e8c class Conditioner { public : Conditioner () = default ; ~ Conditioner () = default ; void ConditionerTurnOn () { std :: cout << \"Conditioner turn on \\n \" ; } void ConditionerTurnOff () { std :: cout << \"Conditioner turn off \\n \" ; } }; //\u5916\u89c2\u7c7b\uff0c\u5c06\u5916\u90e8\u8bf7\u6c42\u4ea4\u7ed9\u5408\u9002\u7684\u5b50\u7cfb\u7edf\u5904\u7406 class ElectricSwitch { public : ElectricSwitch () { m_tv_ = std :: make_shared < Television > (); m_conditioner_ = std :: make_shared < Conditioner > (); } void ElectricTurnOn () { if ( m_tv_ ) { m_tv_ -> TvTurnOn (); } if ( m_conditioner_ ) { m_conditioner_ -> ConditionerTurnOn (); } } void ElectricTurnOff () { if ( m_tv_ ) { m_tv_ -> TvTurnOff (); } if ( m_conditioner_ ) { m_conditioner_ -> ConditionerTurnOff (); } } private : std :: shared_ptr < Television > m_tv_ ; std :: shared_ptr < Conditioner > m_conditioner_ ; }; main.cpp #include <iostream> #include \"Facade.h\" int main () { std :: shared_ptr < ElectricSwitch > es = std :: make_shared < ElectricSwitch > (); es -> ElectricTurnOn (); es -> ElectricTurnOff (); return 0 ; } \u7ecf\u9a8c\u603b\u7ed3 \u5728\u8bbe\u8ba1\u521d\u671f\uff0c\u5e94\u8be5\u6709\u610f\u8bc6\u5730\u5c06\u4e0d\u540c\u5c42\u5206\u79bb\uff0c\u6bd4\u5982\u5e38\u7528\u7684\u4e09\u5c42\u67b6\u6784\uff0c\u5c31\u662f\u8003\u8651\u5728\u6570\u636e\u8bbf\u95ee\u5c42\u4e0e\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u8868\u793a\u5c42\u4e4b\u95f4\u5efa\u7acb Facade\uff0c\u4f7f\u590d\u6742\u7684\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u964d\u4f4e\u8026\u5408\u6027\u3002 \u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u5b50\u7cfb\u7edf\u5f80\u5f80\u56e0\u4e3a\u4e0d\u65ad\u7684\u91cd\u6784\u800c\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u589e\u52a0\u5916\u89c2\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u51cf\u5c11\u5b83\u4eec\u4e4b\u95f4\u7684\u4f9d\u8d56\u3002 \u5728\u7ef4\u62a4\u9636\u6bb5\u53ef\u80fd\u8fd9\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u975e\u5e38\u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55\u4e86\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e3a\u65b0\u7cfb\u7edf\u5f00\u53d1\u4e00\u4e2a\u5916\u89c2\u7c7b\uff0c\u6765\u63d0\u4f9b\u8bbe\u8ba1\u7c97\u7cd9\u6216\u9ad8\u5ea6\u590d\u6742\u7684\u9057\u7559\u4ee3\u7801\u7684\u6bd4\u8f83\u6e05\u6670\u7684\u7b80\u5355\u63a5\u53e3\uff0c\u8ba9\u65b0\u7cfb\u7edf\u4e0e\u5916\u89c2\u5bf9\u8c61\u4ea4\u4e92\uff0c\u5916\u89c2\u5bf9\u8c61\u4e0e\u4e00\u516d\u4ee3\u7801\u4ea4\u4e92\u6240\u6709\u590d\u6742\u7684\u5de5\u4f5c\u3002","title":"14. \u5916\u89c2\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_1","text":"\u4e3a\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3\uff0c\u6b64\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u9690\u85cf\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u6027\uff0c\u4f7f\u5f97\u5b50\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\u3002","title":"\u610f\u56fe"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_2","text":"\u964d\u4f4e\u8bbf\u95ee\u590d\u6742\u7cfb\u7edf\u7684\u5185\u90e8\u5b50\u7cfb\u7edf\u65f6\u7684\u590d\u6742\u5ea6\uff0c\u7b80\u5316\u8c03\u7528\u63a5\u53e3\u3002","title":"\u89e3\u51b3\u7684\u95ee\u9898"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_3","text":"\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u77e5\u9053\u7cfb\u7edf\u5185\u90e8\u7684\u590d\u6742\u8054\u7cfb\uff0c\u6574\u4e2a\u7cfb\u7edf\u53ea\u9700\u63d0\u4f9b\u4e00\u4e2a\u201c\u63a5\u5f85\u5458\u201d\u5373\u53ef\u3002 \u5b9a\u4e49\u7cfb\u7edf\u7684\u5165\u53e3\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_4","text":"\u518d\u5ba2\u6237\u7aef\u548c\u590d\u6742\u7cfb\u7edf\u76f4\u63a5\u518d\u52a0\u4e00\u5c42\uff0c\u8fd9\u4e00\u5c42\u5c06\u8c03\u7528\u987a\u5e8f\u3001\u4f9d\u8d56\u5173\u7cfb\u7b49\u5904\u7406\u597d\u3002","title":"\u5173\u952e\u4ee3\u7801"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_5","text":"\u51cf\u5c11\u7cfb\u7edf\u76f8\u4e92\u4f9d\u8d56\u3002 \u63d0\u9ad8\u7075\u6d3b\u6027\u3002 \u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_6","text":"\u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\uff0c\u5982\u679c\u8981\u6539\u4e1c\u897f\u5f88\u9ebb\u70e6\uff0c\u7ee7\u627f\u91cd\u5199\u90fd\u4e0d\u5408\u9002\u3002 Facade.h /* * \u5916\u89c2\u6a21\u5f0f */ #pragma once #include <iostream> //\u5b50\u7cfb\u7edf\u4e00 class Television { public : Television () = default ; ~ Television () = default ; void TvTurnOn () { std :: cout << \"Television turn on \\n \" ; } void TvTurnOff () { std :: cout << \"Television turn off \\n \" ; } }; //\u5b50\u7cfb\u7edf\u4e8c class Conditioner { public : Conditioner () = default ; ~ Conditioner () = default ; void ConditionerTurnOn () { std :: cout << \"Conditioner turn on \\n \" ; } void ConditionerTurnOff () { std :: cout << \"Conditioner turn off \\n \" ; } }; //\u5916\u89c2\u7c7b\uff0c\u5c06\u5916\u90e8\u8bf7\u6c42\u4ea4\u7ed9\u5408\u9002\u7684\u5b50\u7cfb\u7edf\u5904\u7406 class ElectricSwitch { public : ElectricSwitch () { m_tv_ = std :: make_shared < Television > (); m_conditioner_ = std :: make_shared < Conditioner > (); } void ElectricTurnOn () { if ( m_tv_ ) { m_tv_ -> TvTurnOn (); } if ( m_conditioner_ ) { m_conditioner_ -> ConditionerTurnOn (); } } void ElectricTurnOff () { if ( m_tv_ ) { m_tv_ -> TvTurnOff (); } if ( m_conditioner_ ) { m_conditioner_ -> ConditionerTurnOff (); } } private : std :: shared_ptr < Television > m_tv_ ; std :: shared_ptr < Conditioner > m_conditioner_ ; }; main.cpp #include <iostream> #include \"Facade.h\" int main () { std :: shared_ptr < ElectricSwitch > es = std :: make_shared < ElectricSwitch > (); es -> ElectricTurnOn (); es -> ElectricTurnOff (); return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%20%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/#_7","text":"\u5728\u8bbe\u8ba1\u521d\u671f\uff0c\u5e94\u8be5\u6709\u610f\u8bc6\u5730\u5c06\u4e0d\u540c\u5c42\u5206\u79bb\uff0c\u6bd4\u5982\u5e38\u7528\u7684\u4e09\u5c42\u67b6\u6784\uff0c\u5c31\u662f\u8003\u8651\u5728\u6570\u636e\u8bbf\u95ee\u5c42\u4e0e\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u8868\u793a\u5c42\u4e4b\u95f4\u5efa\u7acb Facade\uff0c\u4f7f\u590d\u6742\u7684\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u964d\u4f4e\u8026\u5408\u6027\u3002 \u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u5b50\u7cfb\u7edf\u5f80\u5f80\u56e0\u4e3a\u4e0d\u65ad\u7684\u91cd\u6784\u800c\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u589e\u52a0\u5916\u89c2\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u51cf\u5c11\u5b83\u4eec\u4e4b\u95f4\u7684\u4f9d\u8d56\u3002 \u5728\u7ef4\u62a4\u9636\u6bb5\u53ef\u80fd\u8fd9\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u975e\u5e38\u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55\u4e86\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e3a\u65b0\u7cfb\u7edf\u5f00\u53d1\u4e00\u4e2a\u5916\u89c2\u7c7b\uff0c\u6765\u63d0\u4f9b\u8bbe\u8ba1\u7c97\u7cd9\u6216\u9ad8\u5ea6\u590d\u6742\u7684\u9057\u7559\u4ee3\u7801\u7684\u6bd4\u8f83\u6e05\u6670\u7684\u7b80\u5355\u63a5\u53e3\uff0c\u8ba9\u65b0\u7cfb\u7edf\u4e0e\u5916\u89c2\u5bf9\u8c61\u4ea4\u4e92\uff0c\u5916\u89c2\u5bf9\u8c61\u4e0e\u4e00\u516d\u4ee3\u7801\u4ea4\u4e92\u6240\u6709\u590d\u6742\u7684\u5de5\u4f5c\u3002","title":"\u7ecf\u9a8c\u603b\u7ed3"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/","text":"\u4e3b\u8981\u7528\u4e8e\u5171\u4eab\u901a\u7528\u5bf9\u8c61\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u8bbf\u95ee\u6548\u7387\u3002\u800c\u8fd9\u90e8\u5206\u5171\u4eab\u5bf9\u8c61\u901a\u5e38\u6bd4\u8f83\u8017\u8d39\u5185\u5b58\u6216\u8005\u9700\u8981\u67e5\u8be2\u5927\u91cf\u63a5\u53e3\u6216\u8005\u4f7f\u7528\u6570\u636e\u5e93\u8d44\u6e90\uff0c\u56e0\u6b64\u7edf\u4e00\u62bd\u79bb\u4f5c\u4e3a\u5171\u4eab\u5bf9\u8c61\u4f7f\u7528\u3002 \u5728\u4eab\u5143\u6a21\u5f0f\u7684\u5b9e\u73b0\u4e2d\u9700\u8981\u4f7f\u7528\u5230\u4eab\u5143\u5de5\u5382\u6765\u8fdb\u884c\u7ba1\u7406\u8fd9\u90e8\u5206\u72ec\u7acb\u7684\u5bf9\u8c61\u548c\u5171\u4eab\u7684\u5bf9\u8c61\uff0c\u907f\u514d\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\u3002 \u610f\u56fe \u8fd0\u7528\u5171\u4eab\u6280\u672f\u6709\u6548\u5730\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\u3002 \u9002\u7528\u573a\u666f \u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5bf9\u8c61\u3002 \u5b8c\u5168\u7531\u4e8e\u9002\u7528\u5927\u91cf\u7684\u5bf9\u8c61\uff0c\u9020\u6210\u5f88\u5927\u7684\u5b58\u50a8\u5f00\u9500\u3002 \u5bf9\u8c61\u7684\u5927\u591a\u6570\u72b6\u6001\u90fd\u53ef\u53d8\u4e3a\u5916\u90e8\u72b6\u6001\u3002 \u5982\u679c\u5220\u9664\u5bf9\u8c61\u7684\u5916\u90e8\u72b6\u6001\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u76f8\u5bf9\u8f83\u5c11\u7684\u5171\u4eab\u5bf9\u8c61\u53d6\u4ee3\u5f88\u591a\u7ec4\u5bf9\u8c61\u3002 \u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u6807\u8bc6\u3002\u7531\u4e8e Flyweight \u5bf9\u8c61\u53ef\u4ee5\u88ab\u5171\u4eab\uff0c\u5bf9\u4e8e\u6982\u5ff5\u4e0a\u660e\u663e\u6709\u522b\u7684\u5bf9\u8c61\uff0c\u6807\u8bc6\u6d4b\u8bd5\u5c06\u8fd4\u56de\u771f\u503c\u3002 \u6a21\u5f0f\u6784\u6210 \u62bd\u8c61\u4eab\u5143\u89d2\u8272\uff08Flyweight\uff09\uff1a\u5b9a\u4e49\u5bf9\u8c61\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u53ca\u5176\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002 \u5177\u4f53\u4eab\u5143\u89d2\u8272\uff08ConcreteFlyweight\uff09\uff1a\u5b9e\u73b0\u62bd\u8c61\u4eab\u5143\u89d2\u8272\u7684\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u7684\u89d2\u8272\u4e2d\uff0c\u5b9e\u73b0\u5177\u4f53\u65b9\u6cd5\u65f6\u9700\u8981\u6ce8\u610f\u5c06\u5185\u90e8\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u533a\u5206\u5f00\uff0c\u4e0d\u5e94\u51fa\u73b0\u4e8c\u8005\u540c\u65f6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\u3002 \u4e0d\u53ef\u5171\u4eab\u7684\u4eab\u5143\u89d2\u8272\uff08unsharedConcreteFlyweight\uff09\uff1a\u8be5\u89d2\u8272\u65f6\u4e0d\u80fd\u9002\u7528\u5171\u4eab\u6280\u672f\u7684\u5bf9\u8c61\uff0c\u4e00\u822c\u5728\u8ba8\u8bba\u7ebf\u7a0b\u5b89\u5168\u65f6\u4f7f\u7528\u3002 \u4eab\u5143\u5de5\u5382\uff08FlayweightFactory\uff09\uff1a\u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4eab\u5143\u89d2\u8272\u3002\u5f53\u5ba2\u6237\u5bf9\u8c61\u8bf7\u6c42\u4e00\u4e2a\u4eab\u5143\u5bf9\u8c61\u65f6\uff0c\u4eab\u5143\u5de5\u5382\u68c0\u67e5\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u4eab\u5143\u5bf9\u8c61\uff0c\u5982\u679c\u5b58\u5728\u5219\u63d0\u4f9b\u7ed9\u5ba2\u6237\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4eab\u5143\u5bf9\u8c61\u3002 \u5185\u90e8\u72b6\u6001\uff0c\u5c31\u662f\u5404\u4e2a\u5bf9\u8c61\u4e0d\u4f1a\u968f\u7740\u73af\u5883\u7684\u6539\u53d8\u800c\u6539\u53d8\u7684\u53ef\u5171\u4eab\u90e8\u5206\uff1b\u5916\u90e8\u72b6\u6001\uff0c\u6307\u5bf9\u8c61\u968f\u73af\u5883\u6539\u53d8\u800c\u6539\u53d8\u7684\u4e0d\u53ef\u4ee5\u5171\u4eab\u7684\u90e8\u5206\u3002\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u5f7c\u6b64\u4e92\u4e0d\u5f71\u54cd\uff0c\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u5e76\u4e0d\u4f1a\u6539\u53d8\u53e6\u4e00\u4e2a\u7684\u884c\u4e3a\u3002 \u6a21\u5f0f\u4f18\u70b9 \u4eab\u5143\u6a21\u5f0f\u53ef\u4ee5\u8fd0\u7528\u5171\u4eab\u6280\u672f\u6709\u6548\u5730\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\uff0c\u5927\u5927\u51cf\u5c11\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u5185\u5b58\uff0c\u4f7f\u6548\u7387\u63d0\u9ad8\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4eab\u5143\u6a21\u5f0f\u4f7f\u5f97\u7cfb\u7edf\u66f4\u52a0\u590d\u6742\u3002\u4e3a\u4e86\u4f7f\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\uff0c\u9700\u8981\u5c06\u4e00\u4e9b\u72b6\u6001\u5916\u90e8\u5316\uff0c\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u7684\u903b\u8f91\u590d\u6742\u5316\u3002\u4eab\u5143\u6a21\u5f0f\u5c06\u4eab\u5143\u5bf9\u8c61\u7684\u72b6\u6001\u5916\u90e8\u5316\uff0c\u800c\u8bfb\u53d6\u5916\u90e8\u72b6\u6001\u4f7f\u5f97\u8fd0\u884c\u65f6\u95f4\u7a0d\u5fae\u53d8\u957f\u3002 Flyweight.h /* * \u4eab\u5143\u6a21\u5f0f */ #pragma once #include <iostream> #include <unordered_map> //\u7528\u6237\u7c7b \u7528\u6237\u7f51\u7ad9\u7684\u5ba2\u6237\u8d26\u53f7\uff0c\u662f\"\u7f51\u7ad9\"\u7c7b\u7684\u5916\u90e8\u72b6\u6001 class User { public : User ( std :: string name ) : name_ ( name ) { } ~ User () = default ; std :: string GetName () const { return name_ ; } private : std :: string name_ ; }; //\u62bd\u8c61\u7f51\u7ad9\u7c7b \u5b9a\u4e49\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u53ca\u5176\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002 class WebSite { public : WebSite () = default ; virtual ~ WebSite () = default ; virtual void Use ( std :: shared_ptr < User > user ) = 0 ; }; //\u6b64\u5904\u4e3a\u5177\u4f53\u7f51\u7ad9\u7c7b \u5b9e\u73b0\u62bd\u8c61\u4eab\u5143\u89d2\u8272\u7684\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u7684\u89d2\u8272\u4e2d\uff0c\u5b9e\u73b0\u5177\u4f53\u65b9\u6cd5\u65f6\u9700\u8981\u6ce8\u610f\u5c06\u5185\u90e8\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u533a\u5206\u5f00\uff0c\u4e0d\u5e94\u51fa\u73b0\u4e8c\u8005\u540c\u65f6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\u3002 class ConcreteWebSite : public WebSite { public : ConcreteWebSite ( std :: string name ) : name_ ( name ) { } ~ ConcreteWebSite () = default ; virtual void Use ( std :: shared_ptr < User > user ) override { std :: cout << \"\u7f51\u7ad9\u5206\u7c7b\uff1a\" << name_ << \" \u7528\u6237\uff1a\" + user -> GetName () << std :: endl ; } private : std :: string name_ ; }; //\u6b64\u5904\u4e3a\u7f51\u7ad9\u5de5\u5382\u7c7b \u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4eab\u5143\u89d2\u8272\u3002\u5f53\u5ba2\u6237\u5bf9\u8c61\u8bf7\u6c42\u4e00\u4e2a\u4eab\u5143\u5bf9\u8c61\u65f6\uff0c\u4eab\u5143\u5de5\u5382\u68c0\u67fb\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u4eab\u5143\u5bf9\u8c61\uff0c //\u5982\u679c\u5b58\u5728\u5219\u63d0\u4f9b\u7ed9\u5ba2\u6237\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4eab\u5143\u5bf9\u8c61\u3002 class WebSiteFactory { public : WebSiteFactory () = default ; ~ WebSiteFactory () = default ; std :: shared_ptr < WebSite > GetWebSiteCategory ( std :: string key ) { for ( auto it = flyweights . begin (); it != flyweights . end (); ++ it ) { if ( it -> first == key ) return it -> second ; } std :: shared_ptr < WebSite > website = std :: make_shared < ConcreteWebSite > ( key ); flyweights . insert ( std :: pair < std :: string , std :: shared_ptr < WebSite >> ( key , website )); return website ; } int GetWebSiteCount () { return flyweights . size (); } private : std :: unordered_map < std :: string , std :: shared_ptr < WebSite >> flyweights ; }; main.cpp #include <iostream> #include \"Flyweight.h\" int main () { WebSiteFactory factory {}; std :: shared_ptr < WebSite > web1 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web1 -> Use ( std :: make_shared < User > ( \"\u5c0f\u83dc\" )); std :: shared_ptr < WebSite > web2 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web2 -> Use ( std :: make_shared < User > ( \"\u5927\u9e1f\" )); std :: shared_ptr < WebSite > web3 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web3 -> Use ( std :: make_shared < User > ( \"\u5a07\u5a07\" )); std :: shared_ptr < WebSite > web4 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web4 -> Use ( std :: make_shared < User > ( \"\u9cb7\u54e5\" )); std :: shared_ptr < WebSite > web5 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web5 -> Use ( std :: make_shared < User > ( \"\u5de8\u9f99\" )); std :: shared_ptr < WebSite > web6 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web6 -> Use ( std :: make_shared < User > ( \"\u5cf0\u54e5\" )); std :: cout << \"\u5f97\u5230\u7f51\u7ad9\u5206\u7c7b\u603b\u6570\uff1a\" << factory . GetWebSiteCount () << std :: endl ; return 0 ; }","title":"15. \u4eab\u5143\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/#_1","text":"\u8fd0\u7528\u5171\u4eab\u6280\u672f\u6709\u6548\u5730\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\u3002","title":"\u610f\u56fe"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/#_2","text":"\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5bf9\u8c61\u3002 \u5b8c\u5168\u7531\u4e8e\u9002\u7528\u5927\u91cf\u7684\u5bf9\u8c61\uff0c\u9020\u6210\u5f88\u5927\u7684\u5b58\u50a8\u5f00\u9500\u3002 \u5bf9\u8c61\u7684\u5927\u591a\u6570\u72b6\u6001\u90fd\u53ef\u53d8\u4e3a\u5916\u90e8\u72b6\u6001\u3002 \u5982\u679c\u5220\u9664\u5bf9\u8c61\u7684\u5916\u90e8\u72b6\u6001\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u76f8\u5bf9\u8f83\u5c11\u7684\u5171\u4eab\u5bf9\u8c61\u53d6\u4ee3\u5f88\u591a\u7ec4\u5bf9\u8c61\u3002 \u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u6807\u8bc6\u3002\u7531\u4e8e Flyweight \u5bf9\u8c61\u53ef\u4ee5\u88ab\u5171\u4eab\uff0c\u5bf9\u4e8e\u6982\u5ff5\u4e0a\u660e\u663e\u6709\u522b\u7684\u5bf9\u8c61\uff0c\u6807\u8bc6\u6d4b\u8bd5\u5c06\u8fd4\u56de\u771f\u503c\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/#_3","text":"\u62bd\u8c61\u4eab\u5143\u89d2\u8272\uff08Flyweight\uff09\uff1a\u5b9a\u4e49\u5bf9\u8c61\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u53ca\u5176\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002 \u5177\u4f53\u4eab\u5143\u89d2\u8272\uff08ConcreteFlyweight\uff09\uff1a\u5b9e\u73b0\u62bd\u8c61\u4eab\u5143\u89d2\u8272\u7684\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u7684\u89d2\u8272\u4e2d\uff0c\u5b9e\u73b0\u5177\u4f53\u65b9\u6cd5\u65f6\u9700\u8981\u6ce8\u610f\u5c06\u5185\u90e8\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u533a\u5206\u5f00\uff0c\u4e0d\u5e94\u51fa\u73b0\u4e8c\u8005\u540c\u65f6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\u3002 \u4e0d\u53ef\u5171\u4eab\u7684\u4eab\u5143\u89d2\u8272\uff08unsharedConcreteFlyweight\uff09\uff1a\u8be5\u89d2\u8272\u65f6\u4e0d\u80fd\u9002\u7528\u5171\u4eab\u6280\u672f\u7684\u5bf9\u8c61\uff0c\u4e00\u822c\u5728\u8ba8\u8bba\u7ebf\u7a0b\u5b89\u5168\u65f6\u4f7f\u7528\u3002 \u4eab\u5143\u5de5\u5382\uff08FlayweightFactory\uff09\uff1a\u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4eab\u5143\u89d2\u8272\u3002\u5f53\u5ba2\u6237\u5bf9\u8c61\u8bf7\u6c42\u4e00\u4e2a\u4eab\u5143\u5bf9\u8c61\u65f6\uff0c\u4eab\u5143\u5de5\u5382\u68c0\u67e5\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u4eab\u5143\u5bf9\u8c61\uff0c\u5982\u679c\u5b58\u5728\u5219\u63d0\u4f9b\u7ed9\u5ba2\u6237\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4eab\u5143\u5bf9\u8c61\u3002 \u5185\u90e8\u72b6\u6001\uff0c\u5c31\u662f\u5404\u4e2a\u5bf9\u8c61\u4e0d\u4f1a\u968f\u7740\u73af\u5883\u7684\u6539\u53d8\u800c\u6539\u53d8\u7684\u53ef\u5171\u4eab\u90e8\u5206\uff1b\u5916\u90e8\u72b6\u6001\uff0c\u6307\u5bf9\u8c61\u968f\u73af\u5883\u6539\u53d8\u800c\u6539\u53d8\u7684\u4e0d\u53ef\u4ee5\u5171\u4eab\u7684\u90e8\u5206\u3002\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u5f7c\u6b64\u4e92\u4e0d\u5f71\u54cd\uff0c\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u5e76\u4e0d\u4f1a\u6539\u53d8\u53e6\u4e00\u4e2a\u7684\u884c\u4e3a\u3002","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/#_4","text":"\u4eab\u5143\u6a21\u5f0f\u53ef\u4ee5\u8fd0\u7528\u5171\u4eab\u6280\u672f\u6709\u6548\u5730\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\uff0c\u5927\u5927\u51cf\u5c11\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u5185\u5b58\uff0c\u4f7f\u6548\u7387\u63d0\u9ad8\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%20%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/#_5","text":"\u4eab\u5143\u6a21\u5f0f\u4f7f\u5f97\u7cfb\u7edf\u66f4\u52a0\u590d\u6742\u3002\u4e3a\u4e86\u4f7f\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\uff0c\u9700\u8981\u5c06\u4e00\u4e9b\u72b6\u6001\u5916\u90e8\u5316\uff0c\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u7684\u903b\u8f91\u590d\u6742\u5316\u3002\u4eab\u5143\u6a21\u5f0f\u5c06\u4eab\u5143\u5bf9\u8c61\u7684\u72b6\u6001\u5916\u90e8\u5316\uff0c\u800c\u8bfb\u53d6\u5916\u90e8\u72b6\u6001\u4f7f\u5f97\u8fd0\u884c\u65f6\u95f4\u7a0d\u5fae\u53d8\u957f\u3002 Flyweight.h /* * \u4eab\u5143\u6a21\u5f0f */ #pragma once #include <iostream> #include <unordered_map> //\u7528\u6237\u7c7b \u7528\u6237\u7f51\u7ad9\u7684\u5ba2\u6237\u8d26\u53f7\uff0c\u662f\"\u7f51\u7ad9\"\u7c7b\u7684\u5916\u90e8\u72b6\u6001 class User { public : User ( std :: string name ) : name_ ( name ) { } ~ User () = default ; std :: string GetName () const { return name_ ; } private : std :: string name_ ; }; //\u62bd\u8c61\u7f51\u7ad9\u7c7b \u5b9a\u4e49\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u548c\u5916\u90e8\u72b6\u6001\u53ca\u5176\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002 class WebSite { public : WebSite () = default ; virtual ~ WebSite () = default ; virtual void Use ( std :: shared_ptr < User > user ) = 0 ; }; //\u6b64\u5904\u4e3a\u5177\u4f53\u7f51\u7ad9\u7c7b \u5b9e\u73b0\u62bd\u8c61\u4eab\u5143\u89d2\u8272\u7684\u65b9\u6cd5\uff0c\u5728\u5177\u4f53\u7684\u89d2\u8272\u4e2d\uff0c\u5b9e\u73b0\u5177\u4f53\u65b9\u6cd5\u65f6\u9700\u8981\u6ce8\u610f\u5c06\u5185\u90e8\u72b6\u6001\u4e0e\u5916\u90e8\u72b6\u6001\u533a\u5206\u5f00\uff0c\u4e0d\u5e94\u51fa\u73b0\u4e8c\u8005\u540c\u65f6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\u3002 class ConcreteWebSite : public WebSite { public : ConcreteWebSite ( std :: string name ) : name_ ( name ) { } ~ ConcreteWebSite () = default ; virtual void Use ( std :: shared_ptr < User > user ) override { std :: cout << \"\u7f51\u7ad9\u5206\u7c7b\uff1a\" << name_ << \" \u7528\u6237\uff1a\" + user -> GetName () << std :: endl ; } private : std :: string name_ ; }; //\u6b64\u5904\u4e3a\u7f51\u7ad9\u5de5\u5382\u7c7b \u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4eab\u5143\u89d2\u8272\u3002\u5f53\u5ba2\u6237\u5bf9\u8c61\u8bf7\u6c42\u4e00\u4e2a\u4eab\u5143\u5bf9\u8c61\u65f6\uff0c\u4eab\u5143\u5de5\u5382\u68c0\u67fb\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u4eab\u5143\u5bf9\u8c61\uff0c //\u5982\u679c\u5b58\u5728\u5219\u63d0\u4f9b\u7ed9\u5ba2\u6237\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4eab\u5143\u5bf9\u8c61\u3002 class WebSiteFactory { public : WebSiteFactory () = default ; ~ WebSiteFactory () = default ; std :: shared_ptr < WebSite > GetWebSiteCategory ( std :: string key ) { for ( auto it = flyweights . begin (); it != flyweights . end (); ++ it ) { if ( it -> first == key ) return it -> second ; } std :: shared_ptr < WebSite > website = std :: make_shared < ConcreteWebSite > ( key ); flyweights . insert ( std :: pair < std :: string , std :: shared_ptr < WebSite >> ( key , website )); return website ; } int GetWebSiteCount () { return flyweights . size (); } private : std :: unordered_map < std :: string , std :: shared_ptr < WebSite >> flyweights ; }; main.cpp #include <iostream> #include \"Flyweight.h\" int main () { WebSiteFactory factory {}; std :: shared_ptr < WebSite > web1 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web1 -> Use ( std :: make_shared < User > ( \"\u5c0f\u83dc\" )); std :: shared_ptr < WebSite > web2 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web2 -> Use ( std :: make_shared < User > ( \"\u5927\u9e1f\" )); std :: shared_ptr < WebSite > web3 = factory . GetWebSiteCategory ( \"\u4ea7\u54c1\u5c55\u793a\" ); web3 -> Use ( std :: make_shared < User > ( \"\u5a07\u5a07\" )); std :: shared_ptr < WebSite > web4 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web4 -> Use ( std :: make_shared < User > ( \"\u9cb7\u54e5\" )); std :: shared_ptr < WebSite > web5 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web5 -> Use ( std :: make_shared < User > ( \"\u5de8\u9f99\" )); std :: shared_ptr < WebSite > web6 = factory . GetWebSiteCategory ( \"\u535a\u5ba2\" ); web6 -> Use ( std :: make_shared < User > ( \"\u5cf0\u54e5\" )); std :: cout << \"\u5f97\u5230\u7f51\u7ad9\u5206\u7c7b\u603b\u6570\uff1a\" << factory . GetWebSiteCount () << std :: endl ; return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","text":"\u5b9a\u4e49 \u4ee3\u7406\u6a21\u5f0f\u662f\u4e00\u79cd\u7ed3\u6784\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8ba9\u4f60\u80fd\u591f\u63d0\u4f9b\u5bf9\u8c61\u7684\u66ff\u4ee3\u54c1\u6216\u5176\u5360\u4f4d\u7b26\u3002\u4ee3\u7406\u63a7\u5236\u5728\u5bf9\u4e8e\u539f\u5bf9\u8c61\u7684\u8bbf\u95ee\uff0c\u5e76\u5141\u8bb8\u5728\u5c06\u8bf7\u6c42\u63d0\u4ea4\u7ed9\u5bf9\u8c61\u524d\u540e\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\u3002 \u4ee3\u7406\u6a21\u5f0f\u5efa\u8bae\u65b0\u5efa\u4e00\u4e2a\u4e0e\u539f\u670d\u52a1\u5bf9\u8c61\u63a5\u53e3\u76f8\u540c\u7684\u4ee3\u7406\u7c7b\uff0c\u7136\u540e\u66f4\u65b0\u5e94\u7528\u4ee5\u5c06\u4ee3\u7406\u5bf9\u8c61\u4f20\u9012\u7ed9\u6240\u6709\u539f\u59cb\u5bf9\u8c61\u5ba2\u6237\u7aef\u3002\u4ee3\u7406\u7c7b\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\u4f1a\u521b\u5efa\u5b9e\u9645\u7684\u670d\u52a1\u5bf9\u8c61\uff0c\u5e76\u5c06\u6240\u6709\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u5b83\u3002 \u6a21\u5f0f\u7ed3\u6784 \u670d\u52a1\u63a5\u53e3\uff08Service Interface\uff09\uff1a\u58f0\u660e\u4e86\u670d\u52a1\u63a5\u53e3\uff0c\u4ee3\u7406\u5fc5\u987b\u9075\u5faa\u8be5\u63a5\u53e3\u624d\u80fd\u4f2a\u88c5\u6210\u670d\u52a1\u5bf9\u8c61\u3002 \u670d\u52a1\u7c7b\uff08Service\uff09\uff1a\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u7528\u7684\u4e1a\u52a1\u903b\u8f91\u3002 \u4ee3\u7406\u7c7b\uff08Proxy\uff09\uff1a\u5305\u542b\u4e00\u4e2a\u6307\u5411\u670d\u52a1\u5bf9\u8c61\u7684\u5f15\u7528\u6210\u5458\u53d8\u91cf\u3002\u4ee3\u7406\u5b8c\u6210\u5176\u4efb\u52a1\uff08\u4f8b\u5982\u5ef6\u8fdf\u521d\u59cb\u5316\u3001\u8bb0\u5f55\u65e5\u5fd7\u3001\u8bbf\u95ee\u63a7\u5236\u548c\u7f13\u5b58\u7b49\uff09\u540e\u4f1a\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u4f1a\u5bf9\u5176\u670d\u52a1\u5bf9\u8c61\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u901a\u8fc7\u540c\u4e00\u63a5\u53e3\u4e0e\u670d\u52a1\u6216\u4ee3\u7406\u8fdb\u884c\u4ea4\u4e92\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e00\u5207\u9700\u8981\u670d\u52a1\u5bf9\u8c61\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4ee3\u7406\u3002 \u9002\u7528\u573a\u666f \u5ef6\u8fdf\u521d\u59cb\u5316\uff08\u865a\u62df\u4ee3\u7406\uff09\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5076\u5c14\u9002\u7528\u7684\u91cd\u91cf\u7ea7\u670d\u52a1\u5bf9\u8c61\uff0c\u4e00\u76f4\u4fdd\u6301\u8be5\u5bf9\u8c61\u8fd0\u884c\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\u65f6\uff0c\u53ef\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u3002\u4f60\u65e0\u9700\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u5c31\u521b\u5efa\u8be5\u5bf9\u8c61\uff0c\u53ef\u5c06\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5ef6\u8fdf\u5230\u771f\u6b63\u6709\u9700\u8981\u7684\u65f6\u5019\u3002 \u8bbf\u95ee\u63a7\u5236\uff08\u4fdd\u62a4\u4ee3\u7406\uff09\u3002\u5982\u679c\u4f60\u53ea\u5e0c\u671b\u7279\u5b9a\u5ba2\u6237\u7aef\u4f7f\u7528\u670d\u52a1\u5bf9\u8c61\uff0c\u8fd9\u91cc\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\uff0c\u800c\u5ba2\u6237\u7aef\u5219\u662f\u5404\u79cd\u5df2\u542f\u52a8\u7684\u7a0b\u5e8f\uff08\u5305\u62ec\u6076\u610f\u7a0b\u5e8f\uff09\uff0c\u6b64\u65f6\u53ef\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u3002\u4ee3\u7406\u53ef\u4ec5\u5728\u5ba2\u6237\u7aef\u51ed\u636e\u6ee1\u8db3\u8981\u6c42\u65f6\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002 \u672c\u5730\u6267\u884c\u8fdc\u7a0b\u670d\u52a1\uff08\u8fdc\u7a0b\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u670d\u52a1\u5bf9\u8c61\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u7684\u60c5\u5f62\u3002\u5728\u8fd9\u79cd\u60c5\u5f62\u4e2d\uff0c\u4ee3\u7406\u901a\u8fc7\u7f51\u7edc\u4f20\u9012\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u8d1f\u8d23\u5904\u7406\u6240\u6709\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u590d\u6742\u7ec6\u8282\u3002 \u8bb0\u5f55\u65e5\u5fd7\u8bf7\u6c42\uff08\u65e5\u5fd7\u8bb0\u5f55\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u5f53\u4f60\u9700\u8981\u4fdd\u5b58\u5bf9\u4e8e\u670d\u52a1\u5bf9\u8c61\u7684\u8bf7\u6c42\u5386\u53f2\u8bb0\u5f55\u65f6\u3002\u4ee3\u7406\u53ef\u4ee5\u5728\u5411\u670d\u52a1\u5bf9\u8c61\u4f20\u9012\u8bf7\u6c42\u94b1\u8fdb\u884c\u8bb0\u5f55\u3002 \u7f13\u5b58\u8bf7\u6c42\u7ed3\u679c\uff08\u7f13\u5b58\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u9700\u8981\u7f13\u5b58\u5ba2\u6237\u8bf7\u6c42\u7ed3\u679c\u5e76\u5bf9\u7f13\u5b58\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u65f6\uff0c\u7279\u522b\u662f\u5f53\u8fd4\u56de\u7ed3\u679c\u7684\u4f53\u79ef\u975e\u5e38\u5927\u65f6\u3002\u4ee3\u7406\u53ef\u5bf9\u91cd\u590d\u8bf7\u6c42\u6240\u9700\u7684\u76f8\u540c\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58\uff0c\u8fd8\u53ef\u4f7f\u7528\u8bf7\u6c42\u53c2\u6570\u4f5c\u4e3a\u7d22\u5f15\u7f13\u5b58\u7684\u952e\u503c\u3002 \u667a\u80fd\u6307\u5f15\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f15\u7528\u65f6\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5c06\u5bf9\u8c61\u88ab\u8c03\u7528\u7684\u6b21\u6570\u8bb0\u5f55\u4e0b\u6765\u7b49\u3002\u53ef\u5728\u6ca1\u6709\u5ba2\u6237\u7aef\u4f7f\u7528\u67d0\u4e2a\u91cd\u91cf\u7ea7\u5bf9\u8c61\u65f6\u7acb\u5373\u9500\u6bc1\u8be5\u5bf9\u8c61\u3002\u4ee3\u7406\u4f1a\u5c06\u6240\u6709\u83b7\u53d6\u4e86\u6307\u5411\u670d\u52a1\u5bf9\u8c61\u6216\u5176\u7ed3\u679c\u7684\u5ba2\u6237\u7aef\u8bb0\u5f55\u5728\u6848\u3002\u4ee3\u7406\u4f1a\u65f6\u4e0d\u65f6\u5730\u904d\u5386\u5404\u4e2a\u5ba2\u6237\u7aef\uff0c\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002\u5982\u679c\u76f8\u5e94\u7684\u5ba2\u6237\u7aef\u5217\u8868\u4e3a\u7a7a\uff0c\u4ee3\u7406\u5c31\u4f1a\u9500\u6bc1\u8be5\u670d\u52a1\u5bf9\u8c61\uff0c\u91ca\u653e\u5e95\u5c42\u7cfb\u7edf\u8d44\u6e90\u3002\u4ee3\u7406\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u5ba2\u6237\u7aef\u662f\u5426\u4fee\u6539\u4e86\u670d\u52a1\u5bf9\u8c61\u3002\u5176\u4ed6\u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u590d\u7528\u672a\u4fee\u6539\u7684\u5bf9\u8c61\u3002 \u5b9e\u73b0\u65b9\u5f0f \u5982\u679c\u6ca1\u6709\u73b0\u6210\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u4f60\u5c31\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u6765\u5b9e\u73b0\u4ee3\u7406\u548c\u670d\u52a1\u5bf9\u8c61\u7684\u53ef\u4ea4\u6362\u6027\u3002\u4ece\u670d\u52a1\u7c7b\u4e2d\u62bd\u53d6\u63a5\u53e3\u5e76\u975e\u603b\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u5bf9\u670d\u52a1\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8fdb\u884c\u4fee\u6539\uff0c\u8ba9\u5b83\u4eec\u4f7f\u7528\u63a5\u53e3\u3002\u5907\u9009\u8ba1\u5212\u662f\u5c06\u4ee3\u7406\u4f5c\u4e3a\u670d\u52a1\u7c7b\u7684\u5b50\u7c7b\uff0c\u8fd9\u6837\u4ee3\u7406\u5c31\u80fd\u7ee7\u627f\u670d\u52a1\u7684\u6240\u6709\u63a5\u53e3\u4e86\u3002 \u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u5176\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u5b58\u50a8\u6307\u5411\u670d\u52a1\u7684\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u8d1f\u8d23\u521b\u5efa\u670d\u52a1\u5e76\u5bf9\u5176\u6574\u4e2a\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002\u5728\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5c06\u670d\u52a1\u4f20\u9012\u7ed9\u4ee3\u7406\u3002 \u6839\u636e\u9700\u6c42\u5b9e\u73b0\u4ee3\u7406\u65b9\u6cd5\u3002\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u5728\u5b8c\u6210\u4e00\u4e9b\u4efb\u52a1\u540e\u5e94\u5c06\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002 \u53ef\u4ee5\u8003\u8651\u65b0\u5efa\u4e00\u4e2a\u6784\u5efa\u65b9\u6cd5\u6765\u5224\u65ad\u5ba2\u6237\u7aef\u53ef\u83b7\u53d6\u7684\u662f\u4ee3\u7406\u8fd8\u662f\u5b9e\u9645\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u5728\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5de5\u5382\u65b9\u6cd5\u3002 \u53ef\u4ee5\u8003\u8651\u4e3a\u670d\u52a1\u5bf9\u8c61\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u3002 \u6a21\u5f0f\u4f18\u70b9 \u4f60\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u6beb\u65e0\u5bdf\u89c9\u7684\u60c5\u51b5\u4e0b\u63a7\u5236\u670d\u52a1\u5bf9\u8c61\u3002 \u5982\u679c\u5ba2\u6237\u7aef\u5bf9\u670d\u52a1\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u6ca1\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u4f60\u53ef\u4ee5\u5bf9\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u5373\u4f7f\u670d\u52a1\u5bf9\u8c61\u8fd8\u672a\u51c6\u5907\u597d\u6216\u4e0d\u5b58\u5728\uff0c\u4ee3\u7406\u4e5f\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u5bf9\u670d\u52a1\u6216\u5ba2\u6237\u7aef\u505a\u51fa\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u65b0\u4ee3\u7406\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4ee3\u7801\u53ef\u80fd\u4f1a\u53d8\u5f97\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u65b0\u5efa\u8bb8\u591a\u7c7b\u3002 \u670d\u52a1\u54cd\u5e94\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u3002 \u4e0e\u5176\u4ed6\u6a21\u5f0f\u7684\u5173\u7cfb \u9002\u914d\u5668\u6a21\u5f0f\u80fd\u4e3a\u88ab\u5c01\u88c5\u5bf9\u8c61\u63d0\u4f9b\u4e0d\u540c\u7684\u63a5\u53e3\uff0c\u4ee3\u7406\u6a21\u5f0f\u80fd\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u88c5\u9970\u5668\u6a21\u5f0f\u5219\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u52a0\u5f3a\u7684\u63a5\u53e3\u3002 \u5916\u89c2\u6a21\u5f0f\u4e0e\u4ee3\u7406\u6a21\u5f0f\u7684\u76f8\u4f3c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u90fd\u7f13\u5b58\u4e86\u4e00\u4e2a\u590d\u6742\u5b9e\u4f53\u5e76\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4ee3\u7406\u4e0e\u5176\u670d\u52a1\u5bf9\u8c61\u9075\u5faa\u540c\u4e00\u63a5\u53e3\uff0c\u4f7f\u5f97\u81ea\u5df1\u548c\u670d\u52a1\u5bf9\u8c61\u53ef\u4ee5\u4e92\u6362\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u5b83\u4e0e\u5916\u89c2\u6a21\u5f0f\u4e0d\u540c\u3002 \u88c5\u9970\u5668\u6a21\u5f0f\u548c\u4ee3\u7406\u6a21\u5f0f\u6709\u7740\u76f8\u4f3c\u7684\u7ed3\u6784\uff0c\u4f46\u662f\u5176\u610f\u56fe\u5374\u975e\u5e38\u4e0d\u540c\u3002\u8fd9\u4e24\u4e2a\u6a21\u5f0f\u7684\u6784\u5efa\u90fd\u57fa\u4e8e\u7ec4\u5408\u539f\u5219\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u5bf9\u8c61\u5e94\u8be5\u5c06\u90e8\u5206\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4ee3\u7406\u901a\u5e38\u81ea\u884c\u7ba1\u7406\u5176\u670d\u52a1\u7684\u5bf9\u8c61\u7684\u58f0\u660e\u5468\u671f\uff0c\u800c\u88c5\u9970\u5668\u7684\u751f\u6210\u5219\u603b\u662f\u7531\u5ba2\u6237\u7aef\u8fdb\u884c\u63a7\u5236\u3002 Proxy.h /* * \u4ee3\u7406\u6a21\u5f0f */ #pragma once #include <iostream> //\u670d\u52a1\u63a5\u53e3\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class ServiceInterface { public : ServiceInterface () = default ; virtual ~ ServiceInterface () = default ; virtual void DoSomething () = 0 ; }; //\u5b9e\u9645\u5de5\u4f5c\u7c7b class Worker : public ServiceInterface { public : Worker () = default ; ~ Worker () = default ; virtual void DoSomething () override { std :: cout << \"Worker is working ... \\n \" ; } }; //\u4ee3\u7406\u7c7b\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u4e4b\u540e\u518d\u628a\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u5de5\u4f5c\u7c7b class WorkerProxy : public ServiceInterface { public : WorkerProxy ( std :: shared_ptr < Worker > worker ) : worker_ ( worker ) { } ~ WorkerProxy () = default ; virtual void DoSomething () override { std :: cout << \"Proxy log: Received request! \\n \" ; worker_ -> DoSomething (); std :: cout << \"Proxy log: Work finished! \\n \" ; } private : std :: shared_ptr < Worker > worker_ ; }; main.cpp #include <iostream> #include \"Proxy.h\" int main () { std :: shared_ptr < Worker > worker = std :: make_shared < Worker > (); std :: shared_ptr < ServiceInterface > service = std :: make_shared < WorkerProxy > ( worker ); service -> DoSomething (); return 0 ; }","title":"16. \u4ee3\u7406\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_1","text":"\u4ee3\u7406\u6a21\u5f0f\u662f\u4e00\u79cd\u7ed3\u6784\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8ba9\u4f60\u80fd\u591f\u63d0\u4f9b\u5bf9\u8c61\u7684\u66ff\u4ee3\u54c1\u6216\u5176\u5360\u4f4d\u7b26\u3002\u4ee3\u7406\u63a7\u5236\u5728\u5bf9\u4e8e\u539f\u5bf9\u8c61\u7684\u8bbf\u95ee\uff0c\u5e76\u5141\u8bb8\u5728\u5c06\u8bf7\u6c42\u63d0\u4ea4\u7ed9\u5bf9\u8c61\u524d\u540e\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\u3002 \u4ee3\u7406\u6a21\u5f0f\u5efa\u8bae\u65b0\u5efa\u4e00\u4e2a\u4e0e\u539f\u670d\u52a1\u5bf9\u8c61\u63a5\u53e3\u76f8\u540c\u7684\u4ee3\u7406\u7c7b\uff0c\u7136\u540e\u66f4\u65b0\u5e94\u7528\u4ee5\u5c06\u4ee3\u7406\u5bf9\u8c61\u4f20\u9012\u7ed9\u6240\u6709\u539f\u59cb\u5bf9\u8c61\u5ba2\u6237\u7aef\u3002\u4ee3\u7406\u7c7b\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\u4f1a\u521b\u5efa\u5b9e\u9645\u7684\u670d\u52a1\u5bf9\u8c61\uff0c\u5e76\u5c06\u6240\u6709\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u5b83\u3002","title":"\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_2","text":"\u670d\u52a1\u63a5\u53e3\uff08Service Interface\uff09\uff1a\u58f0\u660e\u4e86\u670d\u52a1\u63a5\u53e3\uff0c\u4ee3\u7406\u5fc5\u987b\u9075\u5faa\u8be5\u63a5\u53e3\u624d\u80fd\u4f2a\u88c5\u6210\u670d\u52a1\u5bf9\u8c61\u3002 \u670d\u52a1\u7c7b\uff08Service\uff09\uff1a\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5b9e\u7528\u7684\u4e1a\u52a1\u903b\u8f91\u3002 \u4ee3\u7406\u7c7b\uff08Proxy\uff09\uff1a\u5305\u542b\u4e00\u4e2a\u6307\u5411\u670d\u52a1\u5bf9\u8c61\u7684\u5f15\u7528\u6210\u5458\u53d8\u91cf\u3002\u4ee3\u7406\u5b8c\u6210\u5176\u4efb\u52a1\uff08\u4f8b\u5982\u5ef6\u8fdf\u521d\u59cb\u5316\u3001\u8bb0\u5f55\u65e5\u5fd7\u3001\u8bbf\u95ee\u63a7\u5236\u548c\u7f13\u5b58\u7b49\uff09\u540e\u4f1a\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u4f1a\u5bf9\u5176\u670d\u52a1\u5bf9\u8c61\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u901a\u8fc7\u540c\u4e00\u63a5\u53e3\u4e0e\u670d\u52a1\u6216\u4ee3\u7406\u8fdb\u884c\u4ea4\u4e92\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e00\u5207\u9700\u8981\u670d\u52a1\u5bf9\u8c61\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4ee3\u7406\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_3","text":"\u5ef6\u8fdf\u521d\u59cb\u5316\uff08\u865a\u62df\u4ee3\u7406\uff09\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5076\u5c14\u9002\u7528\u7684\u91cd\u91cf\u7ea7\u670d\u52a1\u5bf9\u8c61\uff0c\u4e00\u76f4\u4fdd\u6301\u8be5\u5bf9\u8c61\u8fd0\u884c\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\u65f6\uff0c\u53ef\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u3002\u4f60\u65e0\u9700\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u5c31\u521b\u5efa\u8be5\u5bf9\u8c61\uff0c\u53ef\u5c06\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5ef6\u8fdf\u5230\u771f\u6b63\u6709\u9700\u8981\u7684\u65f6\u5019\u3002 \u8bbf\u95ee\u63a7\u5236\uff08\u4fdd\u62a4\u4ee3\u7406\uff09\u3002\u5982\u679c\u4f60\u53ea\u5e0c\u671b\u7279\u5b9a\u5ba2\u6237\u7aef\u4f7f\u7528\u670d\u52a1\u5bf9\u8c61\uff0c\u8fd9\u91cc\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\uff0c\u800c\u5ba2\u6237\u7aef\u5219\u662f\u5404\u79cd\u5df2\u542f\u52a8\u7684\u7a0b\u5e8f\uff08\u5305\u62ec\u6076\u610f\u7a0b\u5e8f\uff09\uff0c\u6b64\u65f6\u53ef\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u3002\u4ee3\u7406\u53ef\u4ec5\u5728\u5ba2\u6237\u7aef\u51ed\u636e\u6ee1\u8db3\u8981\u6c42\u65f6\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002 \u672c\u5730\u6267\u884c\u8fdc\u7a0b\u670d\u52a1\uff08\u8fdc\u7a0b\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u670d\u52a1\u5bf9\u8c61\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u7684\u60c5\u5f62\u3002\u5728\u8fd9\u79cd\u60c5\u5f62\u4e2d\uff0c\u4ee3\u7406\u901a\u8fc7\u7f51\u7edc\u4f20\u9012\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u8d1f\u8d23\u5904\u7406\u6240\u6709\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u590d\u6742\u7ec6\u8282\u3002 \u8bb0\u5f55\u65e5\u5fd7\u8bf7\u6c42\uff08\u65e5\u5fd7\u8bb0\u5f55\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u5f53\u4f60\u9700\u8981\u4fdd\u5b58\u5bf9\u4e8e\u670d\u52a1\u5bf9\u8c61\u7684\u8bf7\u6c42\u5386\u53f2\u8bb0\u5f55\u65f6\u3002\u4ee3\u7406\u53ef\u4ee5\u5728\u5411\u670d\u52a1\u5bf9\u8c61\u4f20\u9012\u8bf7\u6c42\u94b1\u8fdb\u884c\u8bb0\u5f55\u3002 \u7f13\u5b58\u8bf7\u6c42\u7ed3\u679c\uff08\u7f13\u5b58\u4ee3\u7406\uff09\u3002\u9002\u7528\u4e8e\u9700\u8981\u7f13\u5b58\u5ba2\u6237\u8bf7\u6c42\u7ed3\u679c\u5e76\u5bf9\u7f13\u5b58\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u65f6\uff0c\u7279\u522b\u662f\u5f53\u8fd4\u56de\u7ed3\u679c\u7684\u4f53\u79ef\u975e\u5e38\u5927\u65f6\u3002\u4ee3\u7406\u53ef\u5bf9\u91cd\u590d\u8bf7\u6c42\u6240\u9700\u7684\u76f8\u540c\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58\uff0c\u8fd8\u53ef\u4f7f\u7528\u8bf7\u6c42\u53c2\u6570\u4f5c\u4e3a\u7d22\u5f15\u7f13\u5b58\u7684\u952e\u503c\u3002 \u667a\u80fd\u6307\u5f15\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f15\u7528\u65f6\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5c06\u5bf9\u8c61\u88ab\u8c03\u7528\u7684\u6b21\u6570\u8bb0\u5f55\u4e0b\u6765\u7b49\u3002\u53ef\u5728\u6ca1\u6709\u5ba2\u6237\u7aef\u4f7f\u7528\u67d0\u4e2a\u91cd\u91cf\u7ea7\u5bf9\u8c61\u65f6\u7acb\u5373\u9500\u6bc1\u8be5\u5bf9\u8c61\u3002\u4ee3\u7406\u4f1a\u5c06\u6240\u6709\u83b7\u53d6\u4e86\u6307\u5411\u670d\u52a1\u5bf9\u8c61\u6216\u5176\u7ed3\u679c\u7684\u5ba2\u6237\u7aef\u8bb0\u5f55\u5728\u6848\u3002\u4ee3\u7406\u4f1a\u65f6\u4e0d\u65f6\u5730\u904d\u5386\u5404\u4e2a\u5ba2\u6237\u7aef\uff0c\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u4ecd\u5728\u8fd0\u884c\u3002\u5982\u679c\u76f8\u5e94\u7684\u5ba2\u6237\u7aef\u5217\u8868\u4e3a\u7a7a\uff0c\u4ee3\u7406\u5c31\u4f1a\u9500\u6bc1\u8be5\u670d\u52a1\u5bf9\u8c61\uff0c\u91ca\u653e\u5e95\u5c42\u7cfb\u7edf\u8d44\u6e90\u3002\u4ee3\u7406\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u5ba2\u6237\u7aef\u662f\u5426\u4fee\u6539\u4e86\u670d\u52a1\u5bf9\u8c61\u3002\u5176\u4ed6\u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u590d\u7528\u672a\u4fee\u6539\u7684\u5bf9\u8c61\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_4","text":"\u5982\u679c\u6ca1\u6709\u73b0\u6210\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u4f60\u5c31\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u6765\u5b9e\u73b0\u4ee3\u7406\u548c\u670d\u52a1\u5bf9\u8c61\u7684\u53ef\u4ea4\u6362\u6027\u3002\u4ece\u670d\u52a1\u7c7b\u4e2d\u62bd\u53d6\u63a5\u53e3\u5e76\u975e\u603b\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u5bf9\u670d\u52a1\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8fdb\u884c\u4fee\u6539\uff0c\u8ba9\u5b83\u4eec\u4f7f\u7528\u63a5\u53e3\u3002\u5907\u9009\u8ba1\u5212\u662f\u5c06\u4ee3\u7406\u4f5c\u4e3a\u670d\u52a1\u7c7b\u7684\u5b50\u7c7b\uff0c\u8fd9\u6837\u4ee3\u7406\u5c31\u80fd\u7ee7\u627f\u670d\u52a1\u7684\u6240\u6709\u63a5\u53e3\u4e86\u3002 \u521b\u5efa\u4ee3\u7406\u7c7b\uff0c\u5176\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u5b58\u50a8\u6307\u5411\u670d\u52a1\u7684\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u8d1f\u8d23\u521b\u5efa\u670d\u52a1\u5e76\u5bf9\u5176\u6574\u4e2a\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002\u5728\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5c06\u670d\u52a1\u4f20\u9012\u7ed9\u4ee3\u7406\u3002 \u6839\u636e\u9700\u6c42\u5b9e\u73b0\u4ee3\u7406\u65b9\u6cd5\u3002\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u5728\u5b8c\u6210\u4e00\u4e9b\u4efb\u52a1\u540e\u5e94\u5c06\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u670d\u52a1\u5bf9\u8c61\u3002 \u53ef\u4ee5\u8003\u8651\u65b0\u5efa\u4e00\u4e2a\u6784\u5efa\u65b9\u6cd5\u6765\u5224\u65ad\u5ba2\u6237\u7aef\u53ef\u83b7\u53d6\u7684\u662f\u4ee3\u7406\u8fd8\u662f\u5b9e\u9645\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u5728\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5de5\u5382\u65b9\u6cd5\u3002 \u53ef\u4ee5\u8003\u8651\u4e3a\u670d\u52a1\u5bf9\u8c61\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u3002","title":"\u5b9e\u73b0\u65b9\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_5","text":"\u4f60\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u6beb\u65e0\u5bdf\u89c9\u7684\u60c5\u51b5\u4e0b\u63a7\u5236\u670d\u52a1\u5bf9\u8c61\u3002 \u5982\u679c\u5ba2\u6237\u7aef\u5bf9\u670d\u52a1\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u6ca1\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u4f60\u53ef\u4ee5\u5bf9\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u5373\u4f7f\u670d\u52a1\u5bf9\u8c61\u8fd8\u672a\u51c6\u5907\u597d\u6216\u4e0d\u5b58\u5728\uff0c\u4ee3\u7406\u4e5f\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u5bf9\u670d\u52a1\u6216\u5ba2\u6237\u7aef\u505a\u51fa\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u65b0\u4ee3\u7406\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_6","text":"\u4ee3\u7801\u53ef\u80fd\u4f1a\u53d8\u5f97\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u65b0\u5efa\u8bb8\u591a\u7c7b\u3002 \u670d\u52a1\u54cd\u5e94\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%20%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#_7","text":"\u9002\u914d\u5668\u6a21\u5f0f\u80fd\u4e3a\u88ab\u5c01\u88c5\u5bf9\u8c61\u63d0\u4f9b\u4e0d\u540c\u7684\u63a5\u53e3\uff0c\u4ee3\u7406\u6a21\u5f0f\u80fd\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u88c5\u9970\u5668\u6a21\u5f0f\u5219\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u52a0\u5f3a\u7684\u63a5\u53e3\u3002 \u5916\u89c2\u6a21\u5f0f\u4e0e\u4ee3\u7406\u6a21\u5f0f\u7684\u76f8\u4f3c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u90fd\u7f13\u5b58\u4e86\u4e00\u4e2a\u590d\u6742\u5b9e\u4f53\u5e76\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4ee3\u7406\u4e0e\u5176\u670d\u52a1\u5bf9\u8c61\u9075\u5faa\u540c\u4e00\u63a5\u53e3\uff0c\u4f7f\u5f97\u81ea\u5df1\u548c\u670d\u52a1\u5bf9\u8c61\u53ef\u4ee5\u4e92\u6362\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u5b83\u4e0e\u5916\u89c2\u6a21\u5f0f\u4e0d\u540c\u3002 \u88c5\u9970\u5668\u6a21\u5f0f\u548c\u4ee3\u7406\u6a21\u5f0f\u6709\u7740\u76f8\u4f3c\u7684\u7ed3\u6784\uff0c\u4f46\u662f\u5176\u610f\u56fe\u5374\u975e\u5e38\u4e0d\u540c\u3002\u8fd9\u4e24\u4e2a\u6a21\u5f0f\u7684\u6784\u5efa\u90fd\u57fa\u4e8e\u7ec4\u5408\u539f\u5219\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u5bf9\u8c61\u5e94\u8be5\u5c06\u90e8\u5206\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4ee3\u7406\u901a\u5e38\u81ea\u884c\u7ba1\u7406\u5176\u670d\u52a1\u7684\u5bf9\u8c61\u7684\u58f0\u660e\u5468\u671f\uff0c\u800c\u88c5\u9970\u5668\u7684\u751f\u6210\u5219\u603b\u662f\u7531\u5ba2\u6237\u7aef\u8fdb\u884c\u63a7\u5236\u3002 Proxy.h /* * \u4ee3\u7406\u6a21\u5f0f */ #pragma once #include <iostream> //\u670d\u52a1\u63a5\u53e3\u7c7b\uff0c\u63d0\u4f9b\u63a5\u53e3 class ServiceInterface { public : ServiceInterface () = default ; virtual ~ ServiceInterface () = default ; virtual void DoSomething () = 0 ; }; //\u5b9e\u9645\u5de5\u4f5c\u7c7b class Worker : public ServiceInterface { public : Worker () = default ; ~ Worker () = default ; virtual void DoSomething () override { std :: cout << \"Worker is working ... \\n \" ; } }; //\u4ee3\u7406\u7c7b\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u4e4b\u540e\u518d\u628a\u5de5\u4f5c\u59d4\u6d3e\u7ed9\u5de5\u4f5c\u7c7b class WorkerProxy : public ServiceInterface { public : WorkerProxy ( std :: shared_ptr < Worker > worker ) : worker_ ( worker ) { } ~ WorkerProxy () = default ; virtual void DoSomething () override { std :: cout << \"Proxy log: Received request! \\n \" ; worker_ -> DoSomething (); std :: cout << \"Proxy log: Work finished! \\n \" ; } private : std :: shared_ptr < Worker > worker_ ; }; main.cpp #include <iostream> #include \"Proxy.h\" int main () { std :: shared_ptr < Worker > worker = std :: make_shared < Worker > (); std :: shared_ptr < ServiceInterface > service = std :: make_shared < WorkerProxy > ( worker ); service -> DoSomething (); return 0 ; }","title":"\u4e0e\u5176\u4ed6\u6a21\u5f0f\u7684\u5173\u7cfb"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","text":"\u5b9a\u4e49 \u8d23\u4efb\u94fe\u6a21\u5f0f\u5141\u8bb8\u5c06\u8bf7\u6c42\u6cbf\u7740\u5904\u7406\u8005\u94fe\u8fdb\u884c\u53d1\u9001\uff0c\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u6bcf\u4e2a\u5904\u7406\u8005\u5747\u53ef\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u6216\u5c06\u5176\u4f20\u9012\u7ed9\u94fe\u4e0a\u7684\u4e0b\u4e2a\u5904\u7406\u8005\u3002 \u6a21\u5f0f\u7ed3\u6784 \u5904\u7406\u8005\uff08Handler\uff09\uff1a\u58f0\u660e\u4e86\u6240\u6709\u5177\u4f53\u5904\u7406\u8005\u7684\u901a\u7528\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u901a\u5e38\u4ec5\u5305\u542b\u5355\u4e2a\u65b9\u6cd5\u7528\u4e8e\u8bf7\u6c42\u5904\u7406\uff0c\u4f46\u6709\u65f6\u8fd8\u4f1a\u5305\u542b\u4e00\u4e2a\u8bbe\u7f6e\u94fe\u4e0a\u4e0b\u4e2a\u5904\u7406\u8005\u7684\u65b9\u6cd5\u3002 \u57fa\u7840\u5904\u7406\u8005\uff08Base Handler\uff09\uff1a\u53ef\u9009\u7c7b\uff0c\u4f60\u53ef\u4ee5\u5c06\u6240\u6709\u5904\u7406\u8005\u5171\u7528\u7684\u6837\u672c\u4ee3\u7801\u653e\u7f6e\u5728\u5176\u4e2d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8be5\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4fdd\u5b58\u5bf9\u4e8e\u4e0b\u4e2a\u5904\u7406\u8005\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u3002\u5ba2\u6237\u7aef\u53ef\u901a\u8fc7\u5c06\u5904\u7406\u8005\u4f20\u9012\u7ed9\u4e0a\u4e2a\u5904\u7406\u8005\u7684\u6784\u9020\u51fd\u6570\u6216\u8bbe\u5b9a\u65b9\u6cd5\u6765\u521b\u5efa\u94fe\u3002\u8be5\u7c7b\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u9ed8\u8ba4\u7684\u5904\u7406\u884c\u4e3a\uff0c\u786e\u5b9a\u4e0b\u4e2a\u5904\u7406\u8005\u5b58\u5728\u540e\u518d\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u5b83\u3002 \u5177\u4f53\u5904\u7406\u8005\uff08Concrete Handler\uff09\uff1a\u5305\u542b\u5904\u7406\u8bf7\u6c42\u7684\u5b9e\u9645\u4ee3\u7801\u3002\u6bcf\u4e2a\u5904\u7406\u8005\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u90fd\u5fc5\u987b\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u53ca\u662f\u5426\u6cbf\u7740\u94fe\u4f20\u9012\u8bf7\u6c42\u3002\u5904\u7406\u8005\u901a\u5e38\u662f\u72ec\u7acb\u4e14\u4e0d\u53ef\u53d8\u7684\uff0c\u9700\u8981\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e00\u6b21\u6027\u5730\u83b7\u5f97\u6240\u6709\u5fc5\u8981\u7684\u6570\u636e\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u53ef\u6839\u636e\u7a0b\u5e8f\u903b\u8f91\u4e00\u6b21\u6027\u6216\u8005\u52a8\u6001\u5730\u751f\u6210\u94fe\u3002\u8bf7\u6c42\u53ef\u53d1\u9001\u7ed9\u94fe\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u5904\u7406\u8005\uff0c\u800c\u975e\u5fc5\u987b\u662f\u7b2c\u4e00\u4e2a\u5904\u7406\u8005\u3002 \u9002\u7528\u573a\u666f \u5f53\u7a0b\u5e8f\u9700\u8981\u9002\u7528\u4e0d\u540c\u65b9\u5f0f\u5904\u7406\u4e0d\u540c\u79cd\u7c7b\u8bf7\u6c42\uff0c\u800c\u4e14\u8bf7\u6c42\u7c7b\u578b\u548c\u987a\u5e8f\u9884\u5148\u672a\u77e5\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d23\u4efb\u94fe\u6a21\u5f0f\u3002\u8be5\u6a21\u5f0f\u80fd\u5c06\u591a\u4e2a\u5904\u7406\u8005\u8fde\u63a5\u6210\u4e00\u6761\u94fe\u3002\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5b83\u4f1a\u201c\u8be2\u95ee\u201d\u6bcf\u4e2a\u5904\u7406\u8005\u662f\u5426\u80fd\u591f\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u6837\u6240\u6709\u7684\u5904\u7406\u8005\u90fd\u6709\u673a\u4f1a\u6765\u5904\u7406\u8bf7\u6c42\u3002 \u5f53\u5fc5\u987b\u6309\u987a\u5e8f\u6267\u884c\u591a\u4e2a\u5904\u7406\u8005\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u65e0\u8bba\u4f60\u4ee5\u4f55\u79cd\u987a\u5e8f\u5c06\u5904\u7406\u8005\u8fde\u63a5\u6210\u4e00\u6761\u94fe\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u4f1a\u4e25\u683c\u6309\u7167\u987a\u5e8f\u901a\u8fc7\u94fe\u4e0a\u7684\u5904\u7406\u8005\u3002 \u5982\u679c\u6240\u9700\u5904\u7406\u8005\u53ca\u5176\u987a\u5e8f\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d23\u4efb\u94fe\u6a21\u5f0f\u3002\u8be5\u7c7b\u9700\u8981\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u6765\u5b58\u50a8\u6307\u5411\u94fe\u4e0a\u4e0b\u4e2a\u5904\u7406\u8005\u7684\u5f15\u7528\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e0d\u53ef\u53d8\u7c7b\u3002\u4f46\u5982\u679c\u4f60\u6253\u7b97\u5728\u8fd0\u884c\u65f6\u5bf9\u94fe\u8fdb\u884c\u6539\u53d8\uff0c\u5219\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u8bbe\u5b9a\u65b9\u6cd5\u6765\u4fee\u6539\u5f15\u7528\u6210\u5458\u53d8\u91cf\u7684\u503c\u3002 \u6a21\u5f0f\u4f18\u70b9 \u4f60\u53ef\u4ee5\u63a7\u5236\u8bf7\u6c42\u5904\u7406\u7684\u987a\u5e8f\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219\u3002\u4f60\u53ef\u5bf9\u53d1\u8d77\u64cd\u4f5c\u548c\u6267\u884c\u64cd\u4f5c\u7684\u7c7b\u8fdb\u884c\u89e3\u8026\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u73b0\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u5728\u7a0b\u5e8f\u4e2d\u65b0\u589e\u5904\u7406\u8005\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u90e8\u5206\u8bf7\u6c42\u53ef\u80fd\u672a\u88ab\u5904\u7406\u3002 \u4e0e\u5176\u4ed6\u6a21\u5f0f\u7684\u5173\u7cfb \u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u548c\u89c2\u5bdf\u8005\u6a21\u5f0f\u7528\u4e8e\u5904\u7406\u8bf7\u6c42\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u4e0d\u540c\u8fde\u63a5\u65b9\u5f0f\uff1a \u8d23\u4efb\u94fe\u6a21\u5f0f\u6309\u7167\u987a\u5e8f\u5c06\u8bf7\u6c42\u52a8\u6001\u5730\u4f20\u9012\u7ed9\u4e00\u7cfb\u5217\u7684\u6f5c\u5728\u63a5\u6536\u8005\uff0c\u76f4\u81f3\u5176\u4e2d\u4e00\u540d\u63a5\u6536\u8005\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u3002 \u547d\u4ee4\u6a21\u5f0f\u5728\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u5efa\u7acb\u5355\u5411\u8fde\u63a5\u3002 \u4e2d\u4ecb\u8005\u6a21\u5f0f\u6e05\u9664\u4e86\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u76f4\u63a5\u8fde\u63a5\uff0c\u5f3a\u5236\u5b83\u4eec\u901a\u8fc7\u4e00\u4e2a\u4e2d\u4ecb\u5bf9\u8c61\u8fdb\u884c\u95f4\u63a5\u6c9f\u901a\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u5141\u8bb8\u63a5\u6536\u8005\u52a8\u6001\u5730\u8ba2\u9605\u6216\u53d6\u6d88\u63a5\u6536\u8bf7\u6c42\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\u901a\u5e38\u548c\u7ec4\u5408\u6a21\u5f0f\u7ed3\u5408\u4f7f\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53f6\u7ec4\u4ef6\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u53ef\u4ee5\u5c06\u8bf7\u6c42\u6cbf\u7740\u5305\u542b\u5168\u4f53\u7236\u7ec4\u4ef6\u7684\u94fe\u4e00\u76f4\u4f20\u9012\u81f3\u5bf9\u8c61\u6811\u7684\u5e95\u90e8\u3002 \u8d23\u4efb\u94fe\u7684\u7ba1\u7406\u8005\u53ef\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u5b9e\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7531\u8bf7\u6c42\u4ee3\u8868\u7684\u540c\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u6267\u884c\u8bb8\u591a\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u90a3\u5c31\u662f\u8bf7\u6c42\u81ea\u8eab\u5c31\u662f\u4e00\u4e2a\u547d\u4ee4\u5bf9\u8c61\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7531\u4e00\u7cfb\u5217\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fde\u63a5\u800c\u6210\u7684\u94fe\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u7c7b\u7ed3\u6784\u975e\u5e38\u76f8\u4f3c\u3002\u4e24\u8005\u90fd\u4f9d\u8d56\u9012\u5f52\u7ec4\u5408\u5c06\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u4f20\u9012\u7ed9\u4e00\u7cfb\u5217\u5bf9\u8c61\u3002\u4f46\u662f\uff0c\u4e24\u8005\u6709\u51e0\u70b9\u91cd\u8981\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u8d23\u4efb\u94fe\u7684\u7ba1\u7406\u8005\u53ef\u4ee5\u76f8\u4e92\u72ec\u7acb\u5730\u6267\u884c\u4e00\u5207\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u968f\u65f6\u505c\u6b62\u4f20\u9012\u8bf7\u6c42\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5404\u79cd\u88c5\u9970\u5668\u53ef\u4ee5\u5728\u9075\u5faa\u57fa\u672c\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u6269\u5c55\u5bf9\u8c61\u7684\u884c\u4e3a\u3002\u6b64\u5916\uff0c\u88c5\u9970\u5668\u65e0\u6cd5\u4e2d\u65ad\u8bf7\u6c42\u7684\u4f20\u9012\u3002 Responsibility.h /* * \u8d23\u4efb\u94fe\u6a21\u5f0f */ #pragma once #include <iostream> //\u9886\u5bfc\u7c7b\uff0c\u62bd\u8c61\u5904\u7406\u8005 class Leader { public : Leader ( std :: shared_ptr < Leader > next = nullptr ) : next_ ( next ) { } virtual ~ Leader () = default ; void SetNext ( std :: shared_ptr < Leader > next ) { next_ = next ; } std :: shared_ptr < Leader > GetNext () { return next_ ; } //\u5904\u7406\u8bf7\u6c42 virtual void HandlerRequest ( int leave_days ) = 0 ; private : std :: shared_ptr < Leader > next_ ; }; //\u5177\u4f53\u5904\u7406\u80051\uff0c\u7ec4\u957f class TeamLeader : public Leader { public : TeamLeader () = default ; ~ TeamLeader () = default ; virtual void HandlerRequest ( int leave_days ) override { if ( leave_days <= 3 ) { std :: cout << \"\u7ec4\u957f\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; return ; } std :: shared_ptr < Leader > next = Leader :: GetNext (); if ( next ) { next -> HandlerRequest ( leave_days ); } } }; //\u5177\u4f53\u5904\u7406\u80052\uff0c\u7ecf\u7406 class Manager : public Leader { public : Manager () = default ; ~ Manager () = default ; virtual void HandlerRequest ( int leave_days ) override { if ( leave_days <= 5 ) { std :: cout << \"\u7ecf\u7406\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; return ; } std :: shared_ptr < Leader > next = Leader :: GetNext (); if ( next ) { next -> HandlerRequest ( leave_days ); } } }; //\u5177\u4f53\u5904\u7406\u80053\uff0c\u8001\u677f class Boss : public Leader { public : Boss () = default ; ~ Boss () = default ; virtual void HandlerRequest ( int leave_days ) override { std :: cout << \"\u8001\u677f\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; } }; main.cpp #include <iostream> #include \"Responsibility.h\" int main () { //\u6784\u5efa\u8d23\u4efb\u94fe std :: shared_ptr < Boss > boss = std :: make_shared < Boss > (); std :: shared_ptr < Manager > manager = std :: make_shared < Manager > (); std :: shared_ptr < TeamLeader > team_leader = std :: make_shared < TeamLeader > (); team_leader -> SetNext ( manager ); manager -> SetNext ( boss ); team_leader -> HandlerRequest ( 6 ); return 0 ; }","title":"17. \u8d23\u4efb\u94fe\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_1","text":"\u8d23\u4efb\u94fe\u6a21\u5f0f\u5141\u8bb8\u5c06\u8bf7\u6c42\u6cbf\u7740\u5904\u7406\u8005\u94fe\u8fdb\u884c\u53d1\u9001\uff0c\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u6bcf\u4e2a\u5904\u7406\u8005\u5747\u53ef\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u6216\u5c06\u5176\u4f20\u9012\u7ed9\u94fe\u4e0a\u7684\u4e0b\u4e2a\u5904\u7406\u8005\u3002","title":"\u5b9a\u4e49"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_2","text":"\u5904\u7406\u8005\uff08Handler\uff09\uff1a\u58f0\u660e\u4e86\u6240\u6709\u5177\u4f53\u5904\u7406\u8005\u7684\u901a\u7528\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u901a\u5e38\u4ec5\u5305\u542b\u5355\u4e2a\u65b9\u6cd5\u7528\u4e8e\u8bf7\u6c42\u5904\u7406\uff0c\u4f46\u6709\u65f6\u8fd8\u4f1a\u5305\u542b\u4e00\u4e2a\u8bbe\u7f6e\u94fe\u4e0a\u4e0b\u4e2a\u5904\u7406\u8005\u7684\u65b9\u6cd5\u3002 \u57fa\u7840\u5904\u7406\u8005\uff08Base Handler\uff09\uff1a\u53ef\u9009\u7c7b\uff0c\u4f60\u53ef\u4ee5\u5c06\u6240\u6709\u5904\u7406\u8005\u5171\u7528\u7684\u6837\u672c\u4ee3\u7801\u653e\u7f6e\u5728\u5176\u4e2d\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8be5\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4fdd\u5b58\u5bf9\u4e8e\u4e0b\u4e2a\u5904\u7406\u8005\u5f15\u7528\u7684\u6210\u5458\u53d8\u91cf\u3002\u5ba2\u6237\u7aef\u53ef\u901a\u8fc7\u5c06\u5904\u7406\u8005\u4f20\u9012\u7ed9\u4e0a\u4e2a\u5904\u7406\u8005\u7684\u6784\u9020\u51fd\u6570\u6216\u8bbe\u5b9a\u65b9\u6cd5\u6765\u521b\u5efa\u94fe\u3002\u8be5\u7c7b\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u9ed8\u8ba4\u7684\u5904\u7406\u884c\u4e3a\uff0c\u786e\u5b9a\u4e0b\u4e2a\u5904\u7406\u8005\u5b58\u5728\u540e\u518d\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u5b83\u3002 \u5177\u4f53\u5904\u7406\u8005\uff08Concrete Handler\uff09\uff1a\u5305\u542b\u5904\u7406\u8bf7\u6c42\u7684\u5b9e\u9645\u4ee3\u7801\u3002\u6bcf\u4e2a\u5904\u7406\u8005\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u90fd\u5fc5\u987b\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u53ca\u662f\u5426\u6cbf\u7740\u94fe\u4f20\u9012\u8bf7\u6c42\u3002\u5904\u7406\u8005\u901a\u5e38\u662f\u72ec\u7acb\u4e14\u4e0d\u53ef\u53d8\u7684\uff0c\u9700\u8981\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e00\u6b21\u6027\u5730\u83b7\u5f97\u6240\u6709\u5fc5\u8981\u7684\u6570\u636e\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u53ef\u6839\u636e\u7a0b\u5e8f\u903b\u8f91\u4e00\u6b21\u6027\u6216\u8005\u52a8\u6001\u5730\u751f\u6210\u94fe\u3002\u8bf7\u6c42\u53ef\u53d1\u9001\u7ed9\u94fe\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u5904\u7406\u8005\uff0c\u800c\u975e\u5fc5\u987b\u662f\u7b2c\u4e00\u4e2a\u5904\u7406\u8005\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_3","text":"\u5f53\u7a0b\u5e8f\u9700\u8981\u9002\u7528\u4e0d\u540c\u65b9\u5f0f\u5904\u7406\u4e0d\u540c\u79cd\u7c7b\u8bf7\u6c42\uff0c\u800c\u4e14\u8bf7\u6c42\u7c7b\u578b\u548c\u987a\u5e8f\u9884\u5148\u672a\u77e5\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d23\u4efb\u94fe\u6a21\u5f0f\u3002\u8be5\u6a21\u5f0f\u80fd\u5c06\u591a\u4e2a\u5904\u7406\u8005\u8fde\u63a5\u6210\u4e00\u6761\u94fe\u3002\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5b83\u4f1a\u201c\u8be2\u95ee\u201d\u6bcf\u4e2a\u5904\u7406\u8005\u662f\u5426\u80fd\u591f\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u6837\u6240\u6709\u7684\u5904\u7406\u8005\u90fd\u6709\u673a\u4f1a\u6765\u5904\u7406\u8bf7\u6c42\u3002 \u5f53\u5fc5\u987b\u6309\u987a\u5e8f\u6267\u884c\u591a\u4e2a\u5904\u7406\u8005\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u65e0\u8bba\u4f60\u4ee5\u4f55\u79cd\u987a\u5e8f\u5c06\u5904\u7406\u8005\u8fde\u63a5\u6210\u4e00\u6761\u94fe\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u4f1a\u4e25\u683c\u6309\u7167\u987a\u5e8f\u901a\u8fc7\u94fe\u4e0a\u7684\u5904\u7406\u8005\u3002 \u5982\u679c\u6240\u9700\u5904\u7406\u8005\u53ca\u5176\u987a\u5e8f\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528\u8d23\u4efb\u94fe\u6a21\u5f0f\u3002\u8be5\u7c7b\u9700\u8981\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u6765\u5b58\u50a8\u6307\u5411\u94fe\u4e0a\u4e0b\u4e2a\u5904\u7406\u8005\u7684\u5f15\u7528\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e0d\u53ef\u53d8\u7c7b\u3002\u4f46\u5982\u679c\u4f60\u6253\u7b97\u5728\u8fd0\u884c\u65f6\u5bf9\u94fe\u8fdb\u884c\u6539\u53d8\uff0c\u5219\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u8bbe\u5b9a\u65b9\u6cd5\u6765\u4fee\u6539\u5f15\u7528\u6210\u5458\u53d8\u91cf\u7684\u503c\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_4","text":"\u4f60\u53ef\u4ee5\u63a7\u5236\u8bf7\u6c42\u5904\u7406\u7684\u987a\u5e8f\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219\u3002\u4f60\u53ef\u5bf9\u53d1\u8d77\u64cd\u4f5c\u548c\u6267\u884c\u64cd\u4f5c\u7684\u7c7b\u8fdb\u884c\u89e3\u8026\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u73b0\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u5728\u7a0b\u5e8f\u4e2d\u65b0\u589e\u5904\u7406\u8005\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_5","text":"\u90e8\u5206\u8bf7\u6c42\u53ef\u80fd\u672a\u88ab\u5904\u7406\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%20%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/#_6","text":"\u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u548c\u89c2\u5bdf\u8005\u6a21\u5f0f\u7528\u4e8e\u5904\u7406\u8bf7\u6c42\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u4e0d\u540c\u8fde\u63a5\u65b9\u5f0f\uff1a \u8d23\u4efb\u94fe\u6a21\u5f0f\u6309\u7167\u987a\u5e8f\u5c06\u8bf7\u6c42\u52a8\u6001\u5730\u4f20\u9012\u7ed9\u4e00\u7cfb\u5217\u7684\u6f5c\u5728\u63a5\u6536\u8005\uff0c\u76f4\u81f3\u5176\u4e2d\u4e00\u540d\u63a5\u6536\u8005\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u3002 \u547d\u4ee4\u6a21\u5f0f\u5728\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u5efa\u7acb\u5355\u5411\u8fde\u63a5\u3002 \u4e2d\u4ecb\u8005\u6a21\u5f0f\u6e05\u9664\u4e86\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u4e4b\u95f4\u7684\u76f4\u63a5\u8fde\u63a5\uff0c\u5f3a\u5236\u5b83\u4eec\u901a\u8fc7\u4e00\u4e2a\u4e2d\u4ecb\u5bf9\u8c61\u8fdb\u884c\u95f4\u63a5\u6c9f\u901a\u3002 \u89c2\u5bdf\u8005\u6a21\u5f0f\u5141\u8bb8\u63a5\u6536\u8005\u52a8\u6001\u5730\u8ba2\u9605\u6216\u53d6\u6d88\u63a5\u6536\u8bf7\u6c42\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\u901a\u5e38\u548c\u7ec4\u5408\u6a21\u5f0f\u7ed3\u5408\u4f7f\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53f6\u7ec4\u4ef6\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u53ef\u4ee5\u5c06\u8bf7\u6c42\u6cbf\u7740\u5305\u542b\u5168\u4f53\u7236\u7ec4\u4ef6\u7684\u94fe\u4e00\u76f4\u4f20\u9012\u81f3\u5bf9\u8c61\u6811\u7684\u5e95\u90e8\u3002 \u8d23\u4efb\u94fe\u7684\u7ba1\u7406\u8005\u53ef\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u5b9e\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7531\u8bf7\u6c42\u4ee3\u8868\u7684\u540c\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u6267\u884c\u8bb8\u591a\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u90a3\u5c31\u662f\u8bf7\u6c42\u81ea\u8eab\u5c31\u662f\u4e00\u4e2a\u547d\u4ee4\u5bf9\u8c61\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u5bf9\u7531\u4e00\u7cfb\u5217\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fde\u63a5\u800c\u6210\u7684\u94fe\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u7c7b\u7ed3\u6784\u975e\u5e38\u76f8\u4f3c\u3002\u4e24\u8005\u90fd\u4f9d\u8d56\u9012\u5f52\u7ec4\u5408\u5c06\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u4f20\u9012\u7ed9\u4e00\u7cfb\u5217\u5bf9\u8c61\u3002\u4f46\u662f\uff0c\u4e24\u8005\u6709\u51e0\u70b9\u91cd\u8981\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u8d23\u4efb\u94fe\u7684\u7ba1\u7406\u8005\u53ef\u4ee5\u76f8\u4e92\u72ec\u7acb\u5730\u6267\u884c\u4e00\u5207\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u968f\u65f6\u505c\u6b62\u4f20\u9012\u8bf7\u6c42\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5404\u79cd\u88c5\u9970\u5668\u53ef\u4ee5\u5728\u9075\u5faa\u57fa\u672c\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u6269\u5c55\u5bf9\u8c61\u7684\u884c\u4e3a\u3002\u6b64\u5916\uff0c\u88c5\u9970\u5668\u65e0\u6cd5\u4e2d\u65ad\u8bf7\u6c42\u7684\u4f20\u9012\u3002 Responsibility.h /* * \u8d23\u4efb\u94fe\u6a21\u5f0f */ #pragma once #include <iostream> //\u9886\u5bfc\u7c7b\uff0c\u62bd\u8c61\u5904\u7406\u8005 class Leader { public : Leader ( std :: shared_ptr < Leader > next = nullptr ) : next_ ( next ) { } virtual ~ Leader () = default ; void SetNext ( std :: shared_ptr < Leader > next ) { next_ = next ; } std :: shared_ptr < Leader > GetNext () { return next_ ; } //\u5904\u7406\u8bf7\u6c42 virtual void HandlerRequest ( int leave_days ) = 0 ; private : std :: shared_ptr < Leader > next_ ; }; //\u5177\u4f53\u5904\u7406\u80051\uff0c\u7ec4\u957f class TeamLeader : public Leader { public : TeamLeader () = default ; ~ TeamLeader () = default ; virtual void HandlerRequest ( int leave_days ) override { if ( leave_days <= 3 ) { std :: cout << \"\u7ec4\u957f\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; return ; } std :: shared_ptr < Leader > next = Leader :: GetNext (); if ( next ) { next -> HandlerRequest ( leave_days ); } } }; //\u5177\u4f53\u5904\u7406\u80052\uff0c\u7ecf\u7406 class Manager : public Leader { public : Manager () = default ; ~ Manager () = default ; virtual void HandlerRequest ( int leave_days ) override { if ( leave_days <= 5 ) { std :: cout << \"\u7ecf\u7406\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; return ; } std :: shared_ptr < Leader > next = Leader :: GetNext (); if ( next ) { next -> HandlerRequest ( leave_days ); } } }; //\u5177\u4f53\u5904\u7406\u80053\uff0c\u8001\u677f class Boss : public Leader { public : Boss () = default ; ~ Boss () = default ; virtual void HandlerRequest ( int leave_days ) override { std :: cout << \"\u8001\u677f\u6279\u51c6\u8bf7\u5047\u7533\u8bf7\uff01 \\n \" ; } }; main.cpp #include <iostream> #include \"Responsibility.h\" int main () { //\u6784\u5efa\u8d23\u4efb\u94fe std :: shared_ptr < Boss > boss = std :: make_shared < Boss > (); std :: shared_ptr < Manager > manager = std :: make_shared < Manager > (); std :: shared_ptr < TeamLeader > team_leader = std :: make_shared < TeamLeader > (); team_leader -> SetNext ( manager ); manager -> SetNext ( boss ); team_leader -> HandlerRequest ( 6 ); return 0 ; }","title":"\u4e0e\u5176\u4ed6\u6a21\u5f0f\u7684\u5173\u7cfb"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/","text":"\u7ed9\u5b9a\u4e00\u4e2a\u8bed\u8a00\uff0c\u5b9a\u4e49\u5b83\u7684\u6587\u6cd5\u7684\u4e00\u79cd\u8868\u793a\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u89e3\u91ca\u5668\uff0c\u8fd9\u4e2a\u89e3\u91ca\u5668\u4f7f\u7528\u8be5\u8868\u793a\u6765\u89e3\u91ca\u8bed\u8a00\u4e2d\u7684\u53e5\u5b50\u3002\u8fd9\u79cd\u6a21\u5f0f\u88ab\u7528\u5728 SQL \u89e3\u6790\u3001\u7b26\u53f7\u5904\u7406\u5f15\u64ce\u7b49\u3002 \u6a21\u5f0f\u4f18\u70b9 \u901a\u5e38\u5f53\u6709\u4e00\u4e2a\u8bed\u8a00\u9700\u8981\u89e3\u91ca\u6267\u884c\uff0c\u5e76\u4e14\u4f60\u53ef\u5c06\u8be5\u8bed\u8a00\u4e2d\u7684\u53e5\u5b50\u8868\u793a\u4e3a\u4e00\u4e2a\u62bd\u8c61\u8bed\u6cd5\u6811\u65f6\uff0c\u53ef\u4f7f\u7528\u89e3\u91ca\u5668\u6a21\u5f0f\u3002 \u7528\u4e86\u89e3\u91ca\u5668\u6a21\u5f0f\uff0c\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6539\u53d8\u548c\u6269\u5c55\u6587\u6cd5\uff0c\u56e0\u4e3a\u8be5\u6a21\u5f0f\u4f7f\u7528\u7c7b\u6765\u8868\u793a\u6587\u6cd5\u89c4\u5219\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ee7\u627f\u6765\u6539\u53d8\u6216\u6269\u5c55\u8be5\u6587\u6cd5\uff0c\u56e0\u4e3a\u5b9a\u4e49\u62bd\u8c61\u8bed\u6cd5\u6811\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u7c7b\u7684\u5b9e\u73b0\u5927\u4f53\u7c7b\u4f3c\uff0c\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u76f4\u63a5\u7f16\u5199\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u89e3\u91ca\u5668\u6a21\u5f0f\u4e3a\u6587\u6cd5\u4e2d\u7684\u6bcf\u4e00\u6761\u89c4\u5219\u81f3\u5c11\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\uff0c\u56e0\u6b64\u5305\u542b\u8bb8\u591a\u89c4\u5219\u7684\u6587\u6cd5\u53ef\u80fd\u96be\u4ee5\u7ba1\u7406\u548c\u7ef4\u62a4\u3002\u5efa\u8bae\u5f53\u6587\u6cd5\u975e\u5e38\u590d\u6742\u65f6\uff0c\u4f7f\u7528\u5176\u4ed6\u7684\u6280\u672f\u5982\u8bed\u6cd5\u5206\u6790\u7a0b\u5e8f\u6216\u7f16\u8bd1\u751f\u6210\u5668\u6765\u5904\u7406\u3002 \u6a21\u5f0f\u7ed3\u6784 \u62bd\u8c61\u8868\u8fbe\u5f0f\uff08Abstract Expression\uff09\uff1a\u5b9a\u4e49\u89e3\u91ca\u5668\u7684\u63a5\u53e3\uff0c\u7ea6\u5b9a\u89e3\u91ca\u5668\u7684\u89e3\u91ca\u64cd\u4f5c\uff0c\u4e3b\u8981\u5305\u542b\u89e3\u91ca\u65b9\u6cd5 interpret() \u3002 \u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\uff08Terminal Expression\uff09\uff1a\u662f\u62bd\u8c61\u8868\u8fbe\u5f0f\u7684\u5b50\u7c7b\uff0c\u7528\u6765\u5b9e\u73b0\u6587\u6cd5\u4e2d\u4e0e\u7ec8\u7ed3\u7b26\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u6587\u6cd5\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u90fd\u6709\u4e00\u4e2a\u5177\u4f53\u7ec8\u7ed3\u8868\u8fbe\u5f0f\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u3002 \u975e\u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\uff08Nonterminal Expression\uff09\uff1a\u4e5f\u662f\u62bd\u8c61\u8868\u8fbe\u5f0f\u7684\u5b50\u7c7b\uff0c\u7528\u6765\u5b9e\u73b0\u6587\u6cd5\u4e2d\u4e0e\u975e\u7ec8\u7ed3\u7b26\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u6587\u6cd5\u4e2d\u7684\u6bcf\u6761\u89c4\u5219\u90fd\u5bf9\u5e94\u4e0e\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\u3002 \u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u901a\u5e38\u5305\u542b\u5404\u4e2a\u89e3\u91ca\u5668\u9700\u8981\u7684\u6570\u636e\u6216\u662f\u516c\u5171\u7684\u529f\u80fd\uff0c\u4e00\u822c\u7528\u6765\u4f20\u9012\u88ab\u6240\u6709\u89e3\u91ca\u5668\u5171\u4eab\u7684\u6570\u636e\uff0c\u540e\u9762\u7684\u89e3\u91ca\u5668\u53ef\u4ee5\u4ece\u8fd9\u91cc\u83b7\u53d6\u8fd9\u4e9b\u503c\u3002 Interpreter.h /* * \u89e3\u91ca\u5668\u6a21\u5f0f */ #pragma once #include <iostream> #include <unordered_map> #include <vector> #include <stack> // \u62bd\u8c61\u8868\u8fbe\u5f0f\u7c7b class Expression { public : Expression () = default ; virtual ~ Expression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > var ) = 0 ; }; // \u53d8\u91cf\u89e3\u6790\u5668 class VarExpression : public Expression { public : VarExpression ( std :: string key ) : key_ ( key ) { } virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return var [ key_ ]; } private : std :: string key_ ; }; // \u62bd\u8c61\u8fd0\u7b97\u7b26\u53f7\u89e3\u6790\u5668 class SymbolExpression : public Expression { public : SymbolExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : left_ ( left ), right_ ( right ) { } virtual ~ SymbolExpression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > ) = 0 ; protected : std :: shared_ptr < Expression > left_ ; std :: shared_ptr < Expression > right_ ; }; // \u52a0\u6cd5\u89e3\u6790\u5668 class AddExpression : public SymbolExpression { public : AddExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : SymbolExpression ( left , right ) { } virtual ~ AddExpression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return left_ -> interpreter ( var ) + right_ -> interpreter ( var ); } }; // \u51cf\u6cd5\u89e3\u6790\u5668 class SubExpression : public SymbolExpression { public : SubExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : SymbolExpression ( left , right ) { } virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return left_ -> interpreter ( var ) - right_ -> interpreter ( var ); } }; // \u89e3\u6790\u5668\u5c01\u88c5\u7c7b class Calculator { public : Calculator ( std :: vector < std :: string > expStr ) { std :: stack < std :: shared_ptr < Expression >> stack ; std :: shared_ptr < Expression > left ; std :: shared_ptr < Expression > right ; for ( size_t i = 0 ; i < expStr . size (); ++ i ) { if ( expStr [ i ] == \"+\" ) { // \u52a0\u6cd5 left = stack . top (); stack . pop (); right = std :: make_shared < VarExpression > ( expStr [ ++ i ]); stack . push ( std :: make_shared < AddExpression > ( left , right )); } else if ( expStr [ i ] == \"-\" ) { // \u51cf\u6cd5 left = stack . top (); stack . pop (); right = std :: make_shared < VarExpression > ( expStr [ ++ i ]); stack . push ( std :: make_shared < SubExpression > ( left , right )); } else { // \u53d8\u91cf stack . push ( std :: make_shared < VarExpression > ( expStr [ i ])); } } expression_ = stack . top (); } virtual ~ Calculator () = default ; double run ( std :: unordered_map < std :: string , double > var ) { return expression_ -> interpreter ( var ); } private : // \u5b9a\u4e49\u8868\u8fbe\u5f0f std :: shared_ptr < Expression > expression_ ; }; main.cpp #include <iostream> #include <string> #include \"Interpreter.h\" // \u83b7\u5f97\u8868\u8fbe\u5f0f void getExpStr ( std :: vector < std :: string >& expStr ) { std :: cout << \"\u8bf7\u8f93\u5165\u8868\u8fbe\u5f0f\uff1a\" << std :: endl ; std :: string str = \"\" ; int currentIndex = 0 ; getline ( std :: cin , str ); std :: string temp = \"\" ; int len = 0 ; for ( size_t i = 0 ; i < str . size (); ++ i ) { switch ( str [ i ]) { case '+' : len = i - currentIndex ; temp = str . substr ( currentIndex , len ); // \u6e05\u695a\u591a\u4f59\u7684\u7a7a\u683c temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); expStr . push_back ( \"+\" ); currentIndex = i + 1 ; break ; case '-' : len = i - currentIndex ; temp = str . substr ( currentIndex , len ); temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); expStr . push_back ( \"-\" ); currentIndex = i + 1 ; break ; } } temp = str . substr ( currentIndex ); temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); } void getValue ( std :: unordered_map < std :: string , double >& var , std :: vector < std :: string >& expStr ) { for ( const auto & key : expStr ) { if ( key != \"+\" && key != \"-\" ) { if ( var . find ( key ) == var . end ()) { std :: cout << \"\u8bf7\u8f93\u5165 \" << key << \" \u7684\u503c\uff1a\" << std :: endl ; std :: cin >> var [ key ]; } } } } std :: string vector_to_string ( std :: vector < std :: string >& expStr ) { std :: string str = \"\" ; for ( const auto & expstr : expStr ) { str . append ( expstr ); str . append ( \" \" ); } str . pop_back (); return str ; } int main () { std :: vector < std :: string > expStr ; std :: unordered_map < std :: string , double > var ; getExpStr ( expStr ); getValue ( var , expStr ); std :: shared_ptr < Calculator > calcutor = std :: make_shared < Calculator > ( expStr ); std :: cout << \"\u8fd0\u7b97\u7ed3\u679c\uff1a\" << vector_to_string ( expStr ) << \" = \" << calcutor -> run ( var ) << std :: endl ; return 0 ; }","title":"18. \u89e3\u91ca\u5668\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/#_1","text":"\u901a\u5e38\u5f53\u6709\u4e00\u4e2a\u8bed\u8a00\u9700\u8981\u89e3\u91ca\u6267\u884c\uff0c\u5e76\u4e14\u4f60\u53ef\u5c06\u8be5\u8bed\u8a00\u4e2d\u7684\u53e5\u5b50\u8868\u793a\u4e3a\u4e00\u4e2a\u62bd\u8c61\u8bed\u6cd5\u6811\u65f6\uff0c\u53ef\u4f7f\u7528\u89e3\u91ca\u5668\u6a21\u5f0f\u3002 \u7528\u4e86\u89e3\u91ca\u5668\u6a21\u5f0f\uff0c\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6539\u53d8\u548c\u6269\u5c55\u6587\u6cd5\uff0c\u56e0\u4e3a\u8be5\u6a21\u5f0f\u4f7f\u7528\u7c7b\u6765\u8868\u793a\u6587\u6cd5\u89c4\u5219\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ee7\u627f\u6765\u6539\u53d8\u6216\u6269\u5c55\u8be5\u6587\u6cd5\uff0c\u56e0\u4e3a\u5b9a\u4e49\u62bd\u8c61\u8bed\u6cd5\u6811\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u7c7b\u7684\u5b9e\u73b0\u5927\u4f53\u7c7b\u4f3c\uff0c\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u76f4\u63a5\u7f16\u5199\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/#_2","text":"\u89e3\u91ca\u5668\u6a21\u5f0f\u4e3a\u6587\u6cd5\u4e2d\u7684\u6bcf\u4e00\u6761\u89c4\u5219\u81f3\u5c11\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\uff0c\u56e0\u6b64\u5305\u542b\u8bb8\u591a\u89c4\u5219\u7684\u6587\u6cd5\u53ef\u80fd\u96be\u4ee5\u7ba1\u7406\u548c\u7ef4\u62a4\u3002\u5efa\u8bae\u5f53\u6587\u6cd5\u975e\u5e38\u590d\u6742\u65f6\uff0c\u4f7f\u7528\u5176\u4ed6\u7684\u6280\u672f\u5982\u8bed\u6cd5\u5206\u6790\u7a0b\u5e8f\u6216\u7f16\u8bd1\u751f\u6210\u5668\u6765\u5904\u7406\u3002","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%20%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/#_3","text":"\u62bd\u8c61\u8868\u8fbe\u5f0f\uff08Abstract Expression\uff09\uff1a\u5b9a\u4e49\u89e3\u91ca\u5668\u7684\u63a5\u53e3\uff0c\u7ea6\u5b9a\u89e3\u91ca\u5668\u7684\u89e3\u91ca\u64cd\u4f5c\uff0c\u4e3b\u8981\u5305\u542b\u89e3\u91ca\u65b9\u6cd5 interpret() \u3002 \u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\uff08Terminal Expression\uff09\uff1a\u662f\u62bd\u8c61\u8868\u8fbe\u5f0f\u7684\u5b50\u7c7b\uff0c\u7528\u6765\u5b9e\u73b0\u6587\u6cd5\u4e2d\u4e0e\u7ec8\u7ed3\u7b26\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u6587\u6cd5\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u90fd\u6709\u4e00\u4e2a\u5177\u4f53\u7ec8\u7ed3\u8868\u8fbe\u5f0f\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u3002 \u975e\u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\uff08Nonterminal Expression\uff09\uff1a\u4e5f\u662f\u62bd\u8c61\u8868\u8fbe\u5f0f\u7684\u5b50\u7c7b\uff0c\u7528\u6765\u5b9e\u73b0\u6587\u6cd5\u4e2d\u4e0e\u975e\u7ec8\u7ed3\u7b26\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u6587\u6cd5\u4e2d\u7684\u6bcf\u6761\u89c4\u5219\u90fd\u5bf9\u5e94\u4e0e\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8868\u8fbe\u5f0f\u3002 \u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u901a\u5e38\u5305\u542b\u5404\u4e2a\u89e3\u91ca\u5668\u9700\u8981\u7684\u6570\u636e\u6216\u662f\u516c\u5171\u7684\u529f\u80fd\uff0c\u4e00\u822c\u7528\u6765\u4f20\u9012\u88ab\u6240\u6709\u89e3\u91ca\u5668\u5171\u4eab\u7684\u6570\u636e\uff0c\u540e\u9762\u7684\u89e3\u91ca\u5668\u53ef\u4ee5\u4ece\u8fd9\u91cc\u83b7\u53d6\u8fd9\u4e9b\u503c\u3002 Interpreter.h /* * \u89e3\u91ca\u5668\u6a21\u5f0f */ #pragma once #include <iostream> #include <unordered_map> #include <vector> #include <stack> // \u62bd\u8c61\u8868\u8fbe\u5f0f\u7c7b class Expression { public : Expression () = default ; virtual ~ Expression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > var ) = 0 ; }; // \u53d8\u91cf\u89e3\u6790\u5668 class VarExpression : public Expression { public : VarExpression ( std :: string key ) : key_ ( key ) { } virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return var [ key_ ]; } private : std :: string key_ ; }; // \u62bd\u8c61\u8fd0\u7b97\u7b26\u53f7\u89e3\u6790\u5668 class SymbolExpression : public Expression { public : SymbolExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : left_ ( left ), right_ ( right ) { } virtual ~ SymbolExpression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > ) = 0 ; protected : std :: shared_ptr < Expression > left_ ; std :: shared_ptr < Expression > right_ ; }; // \u52a0\u6cd5\u89e3\u6790\u5668 class AddExpression : public SymbolExpression { public : AddExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : SymbolExpression ( left , right ) { } virtual ~ AddExpression () = default ; virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return left_ -> interpreter ( var ) + right_ -> interpreter ( var ); } }; // \u51cf\u6cd5\u89e3\u6790\u5668 class SubExpression : public SymbolExpression { public : SubExpression ( std :: shared_ptr < Expression > left , std :: shared_ptr < Expression > right ) : SymbolExpression ( left , right ) { } virtual double interpreter ( std :: unordered_map < std :: string , double > var ) override { return left_ -> interpreter ( var ) - right_ -> interpreter ( var ); } }; // \u89e3\u6790\u5668\u5c01\u88c5\u7c7b class Calculator { public : Calculator ( std :: vector < std :: string > expStr ) { std :: stack < std :: shared_ptr < Expression >> stack ; std :: shared_ptr < Expression > left ; std :: shared_ptr < Expression > right ; for ( size_t i = 0 ; i < expStr . size (); ++ i ) { if ( expStr [ i ] == \"+\" ) { // \u52a0\u6cd5 left = stack . top (); stack . pop (); right = std :: make_shared < VarExpression > ( expStr [ ++ i ]); stack . push ( std :: make_shared < AddExpression > ( left , right )); } else if ( expStr [ i ] == \"-\" ) { // \u51cf\u6cd5 left = stack . top (); stack . pop (); right = std :: make_shared < VarExpression > ( expStr [ ++ i ]); stack . push ( std :: make_shared < SubExpression > ( left , right )); } else { // \u53d8\u91cf stack . push ( std :: make_shared < VarExpression > ( expStr [ i ])); } } expression_ = stack . top (); } virtual ~ Calculator () = default ; double run ( std :: unordered_map < std :: string , double > var ) { return expression_ -> interpreter ( var ); } private : // \u5b9a\u4e49\u8868\u8fbe\u5f0f std :: shared_ptr < Expression > expression_ ; }; main.cpp #include <iostream> #include <string> #include \"Interpreter.h\" // \u83b7\u5f97\u8868\u8fbe\u5f0f void getExpStr ( std :: vector < std :: string >& expStr ) { std :: cout << \"\u8bf7\u8f93\u5165\u8868\u8fbe\u5f0f\uff1a\" << std :: endl ; std :: string str = \"\" ; int currentIndex = 0 ; getline ( std :: cin , str ); std :: string temp = \"\" ; int len = 0 ; for ( size_t i = 0 ; i < str . size (); ++ i ) { switch ( str [ i ]) { case '+' : len = i - currentIndex ; temp = str . substr ( currentIndex , len ); // \u6e05\u695a\u591a\u4f59\u7684\u7a7a\u683c temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); expStr . push_back ( \"+\" ); currentIndex = i + 1 ; break ; case '-' : len = i - currentIndex ; temp = str . substr ( currentIndex , len ); temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); expStr . push_back ( \"-\" ); currentIndex = i + 1 ; break ; } } temp = str . substr ( currentIndex ); temp . erase ( remove ( temp . begin (), temp . end (), ' ' ), temp . end ()); expStr . push_back ( temp ); } void getValue ( std :: unordered_map < std :: string , double >& var , std :: vector < std :: string >& expStr ) { for ( const auto & key : expStr ) { if ( key != \"+\" && key != \"-\" ) { if ( var . find ( key ) == var . end ()) { std :: cout << \"\u8bf7\u8f93\u5165 \" << key << \" \u7684\u503c\uff1a\" << std :: endl ; std :: cin >> var [ key ]; } } } } std :: string vector_to_string ( std :: vector < std :: string >& expStr ) { std :: string str = \"\" ; for ( const auto & expstr : expStr ) { str . append ( expstr ); str . append ( \" \" ); } str . pop_back (); return str ; } int main () { std :: vector < std :: string > expStr ; std :: unordered_map < std :: string , double > var ; getExpStr ( expStr ); getValue ( var , expStr ); std :: shared_ptr < Calculator > calcutor = std :: make_shared < Calculator > ( expStr ); std :: cout << \"\u8fd0\u7b97\u7ed3\u679c\uff1a\" << vector_to_string ( expStr ) << \" = \" << calcutor -> run ( var ) << std :: endl ; return 0 ; }","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/19.%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u4e2d\u4ecb\u8005\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u80fd\u8ba9\u4f60\u51cf\u5c11\u5bf9\u8c61\u4e4b\u95f4\u6df7\u4e71\u65e0\u5e8f\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u8be5\u6a21\u5f0f\u4f1a\u9650\u5236\u5bf9\u8c61\u4e4b\u95f4\u7684\u76f4\u63a5\u4ea4\u4e92\uff0c\u8feb\u4f7f\u5b83\u4eec\u901a\u8fc7\u4e00\u4e2a\u4e2d\u4ecb\u8005\u5bf9\u8c61\u8fdb\u884c\u5408\u4f5c\u3002 \u6a21\u5f0f\u7ed3\u6784 \u7ec4\u4ef6\uff08Component\uff09\uff1a\u5404\u79cd\u5305\u542b\u4e1a\u52a1\u903b\u8f91\u7684\u7c7b\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u4e00\u4e2a\u6307\u5411\u4e2d\u4ecb\u8005\u7684\u5f15\u7528\uff0c\u8be5\u5f15\u7528\u88ab\u58f0\u660e\u4e3a\u4e2d\u4ecb\u8005\u63a5\u53e3\u7c7b\u578b\u3002\u7ec4\u4ef6\u4e0d\u77e5\u9053\u4e2d\u4ecb\u8005\u5b9e\u9645\u6240\u5c5e\u7684\u7c7b\uff0c\u56e0\u6b64\u4f60\u53ef\u901a\u8fc7\u5c06\u5176\u8fde\u63a5\u5230\u4e0d\u540c\u7684\u4e2d\u4ecb\u8005\u4ee5\u4f7f\u5176\u80fd\u5728\u5176\u4ed6\u7a0b\u5e8f\u4e2d\u590d\u7528\u3002 \u4e2d\u4ecb\u8005\uff08Mediator\uff09\uff1a\u58f0\u660e\u4e86\u4e0e\u7ec4\u4ef6\u4ea4\u6d41\u7684\u63a5\u53e3\uff0c\u4f46\u901a\u5e38\u4ec5\u5305\u62ec\u4e00\u4e2a\u901a\u77e5\u65b9\u6cd5\u3002\u7ec4\u4ef6\u53ef\u5c06\u4efb\u610f\u4e0a\u4e0b\u6587\uff08\u5305\u62ec\u81ea\u5df1\u7684\u5bf9\u8c61\uff09\u4f5c\u4e3a\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u53ea\u6709\u8fd9\u6837\u63a5\u6536\u7ec4\u4ef6\u548c\u53d1\u9001\u8005\u7c7b\u4e4b\u95f4\u624d\u4e0d\u4f1a\u8026\u5408\u3002 \u5177\u4f53\u4e2d\u4ecb\u8005\uff08Concrete Mediator\uff09\uff1a\u5c01\u88c5\u4e86\u591a\u79cd\u7ec4\u4ef6\u95f4\u7684\u5173\u7cfb\u3002\u5177\u4f53\u4e2d\u4ecb\u8005\u901a\u5e38\u4f1a\u4fdd\u5b58\u6240\u6709\u7ec4\u4ef6\u7684\u5f15\u7528\u5e76\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\uff0c\u751a\u81f3\u6709\u65f6\u5019\u4f1a\u5bf9\u5176\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u7ec4\u4ef6\u5e76\u4e0d\u77e5\u9053\u5176\u4ed6\u7ec4\u4ef6\u7684\u60c5\u51b5\u3002\u5982\u679c\u7ec4\u4ef6\u5185\u53d1\u751f\u4e86\u91cd\u8981\u4e8b\u4ef6\uff0c\u5b83\u53ea\u80fd\u901a\u77e5\u4e2d\u4ecb\u8005\u3002\u4e2d\u4ecb\u8005\u6536\u5230\u901a\u77e5\u540e\u80fd\u8f7b\u6613\u5730\u786e\u5b9a\u53d1\u9001\u8005\uff0c\u8fd9\u6216\u8bb8\u5df2\u8db3\u4ee5\u5224\u65ad\u63a5\u4e0b\u6765\u9700\u8981\u51fa\u53d1\u7684\u7ec4\u4ef6\u4e86\u3002\u5bf9\u4e8e\u7ec4\u4ef6\u6765\u8bf4\uff0c\u4e2d\u4ecb\u8005\u770b\u4e0a\u53bb\u5b8c\u5168\u4f7f\u4e00\u4e2a\u9ed1\u7bb1\u3002\u53d1\u9001\u8005\u4e0d\u77e5\u9053\u6700\u7ec8\u4f1a\u7531\u8c01\u6765\u5904\u7406\u81ea\u5df1\u7684\u8bf7\u6c42\uff0c\u63a5\u6536\u8005\u4e5f\u4e0d\u77e5\u9053\u6700\u521d\u662f\u8c01\u53d1\u51fa\u6765\u8bf7\u6c42\u3002 \u9002\u7528\u573a\u666f \u5f53\u4e00\u4e9b\u5bf9\u8c61\u548c\u5176\u4ed6\u5bf9\u8c61\u7d27\u5bc6\u8026\u5408\u4ee5\u81f4\u96be\u4ee5\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u53ef\u9002\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u8be5\u6a21\u5f0f\u8ba9\u4f60\u5c06\u5bf9\u8c61\u95f4\u7684\u6240\u6709\u5173\u7cfb\u62bd\u53d6\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\uff0c\u5df2\u4f7f\u5bf9\u4e8e\u7279\u5b9a\u7ec4\u4ef6\u7684\u4fee\u6539\u5de5\u4f5c\u72ec\u7acb\u4e8e\u5176\u4ed6\u7ec4\u4ef6\u3002 \u5f53\u7ec4\u4ef6\u56e0\u8fc7\u4e8e\u4f9d\u8d56\u5176\u4ed6\u7ec4\u4ef6\u800c\u65e0\u6cd5\u5728\u4e0d\u540c\u5e94\u7528\u4e2d\u590d\u7528\u65f6\uff0c\u53ef\u4f7f\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u5e94\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u540e\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u4e0d\u518d\u77e5\u6653\u5176\u4ed6\u7ec4\u4ef6\u7684\u60c5\u51b5\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u7ec4\u4ef6\u65e0\u6cd5\u76f4\u63a5\u4ea4\u6d41\uff0c\u4f46\u5b83\u4eec\u4ecd\u53ef\u901a\u8fc7\u4e2d\u4ecb\u8005\u5bf9\u8c61\u8fdb\u884c\u95f4\u63a5\u4ea4\u6d41\u3002\u5982\u679c\u4f60\u5e0c\u671b\u5728\u4e0d\u540c\u5e94\u7528\u4e2d\u590d\u7528\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5219\u9700\u8981\u4e3a\u5176\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u4e2d\u4ecb\u8005\u7c7b\u3002 \u5982\u679c\u4e3a\u4e86\u80fd\u5728\u4e0d\u540c\u60c5\u666f\u4e0b\u590d\u7528\u4e00\u4e9b\u57fa\u672c\u884c\u4e3a\uff0c\u5bfc\u81f4\u4f60\u9700\u8981\u88ab\u8feb\u521b\u5efa\u5927\u91cf\u7ec4\u4ef6\u5b50\u7c7b\u65f6\uff0c\u53ef\u4f7f\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u7531\u4e8e\u6240\u6709\u7ec4\u4ef6\u95f4\u5173\u7cfb\u90fd\u88ab\u5305\u542b\u5728\u4e2d\u4ecb\u8005\u4e2d\uff0c\u56e0\u6b64\u4f60\u65e0\u9700\u4fee\u6539\u7ec4\u4ef6\u5c31\u80fd\u65b9\u4fbf\u5730\u65b0\u5efa\u4e2d\u4ecb\u8005\u7c7b\u4ee5\u5b9a\u4e49\u65b0\u7684\u7ec4\u4ef6\u5408\u4f5c\u65b9\u5f0f\u3002 \u6a21\u5f0f\u4f18\u70b9 \u5355\u4e00\u804c\u8d23\u3002\u4f60\u53ef\u4ee5\u5c06\u591a\u4e2a\u7ec4\u4ef6\u95f4\u7684\u4ea4\u6d41\u62bd\u53d6\u5230\u540c\u4e00\u4f4d\u7f6e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u65e0\u9700\u4fee\u6539\u5b9e\u9645\u7ec4\u4ef6\u5c31\u80fd\u589e\u52a0\u65b0\u7684\u4e2d\u4ecb\u8005\u3002 \u4f60\u53ef\u4ee5\u51cf\u8f7b\u5e94\u7528\u4e2d\u591a\u4e2a\u7ec4\u4ef6\u95f4\u7684\u8026\u5408\u60c5\u51b5\u3002 \u4f60\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u590d\u7528\u5404\u4e2a\u7ec4\u4ef6\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4e2d\u4ecb\u8005\u53ef\u80fd\u4f1a\u6f14\u5316\u6210\u4e3a\u4e0a\u5e1d\u5bf9\u8c61\u3002 Mediator.h /* * \u4e2d\u4ecb\u8005\u6a21\u5f0f */ #pragma once #include <iostream> class Colleague ; //\u62bd\u8c61\u4e2d\u4ecb\u8005 class Mediator { public : Mediator () { std :: cout << \"Mediator constructed! \\n \" ; } virtual ~ Mediator () { std :: cout << \"Mediator destructed! \\n \" ; } virtual void Notify ( std :: shared_ptr < Colleague > colleage ) = 0 ; }; //\u540c\u4e8b\u7c7b class Colleague : public std :: enable_shared_from_this < Colleague > { public : Colleague ( std :: string name ) : name_ ( name ) { std :: cout << \"Colleague constructed! \\n \" ; } ~ Colleague () { std :: cout << \"Colleague constructed! \\n \" ; } void SetMediator ( std :: shared_ptr < Mediator > mediator ) { mediator_ = mediator ; } void Change () { if ( ! mediator_ . expired ()) { mediator_ . lock () -> Notify ( shared_from_this ()); } } void Update () { std :: cout << name_ << \" Copy notify message from mediator \\n \" ; } private : std :: string name_ ; std :: weak_ptr < Mediator > mediator_ ; }; //\u5177\u4f53\u4e2d\u4ecb\u8005 class ConcreteMediator : public Mediator { public : ConcreteMediator ( std :: shared_ptr < Colleague > colleague1 , std :: shared_ptr < Colleague > colleague2 ) : colleague1_ ( colleague1 ), colleague2_ ( colleague2 ) { std :: cout << \"ConcreteMediator constructed! \\n \" ; } ~ ConcreteMediator () { std :: cout << \"ConcreteMediator destructed! \\n \" ; } virtual void Notify ( std :: shared_ptr < Colleague > colleage ) override { if ( colleage == colleague1_ ) { if ( colleague2_ ) { colleague2_ -> Update (); } } if ( colleage == colleague2_ ) { if ( colleague1_ ) { colleague1_ -> Update (); } } } private : std :: shared_ptr < Colleague > colleague1_ ; std :: shared_ptr < Colleague > colleague2_ ; }; main.cpp #include <iostream> #include \"Mediator.h\" int main () { std :: shared_ptr < Colleague > colleague1 = std :: make_shared < Colleague > ( \"John\" ); std :: shared_ptr < Colleague > colleague2 = std :: make_shared < Colleague > ( \"Tim\" ); std :: shared_ptr < Mediator > mediator = std :: make_shared < ConcreteMediator > ( colleague1 , colleague2 ); colleague1 -> SetMediator ( mediator ); colleague2 -> SetMediator ( mediator ); colleague1 -> Change (); colleague2 -> Change (); return 0 ; }","title":"19. \u4e2d\u4ecb\u8005\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/19.%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u7ec4\u4ef6\uff08Component\uff09\uff1a\u5404\u79cd\u5305\u542b\u4e1a\u52a1\u903b\u8f91\u7684\u7c7b\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u4e00\u4e2a\u6307\u5411\u4e2d\u4ecb\u8005\u7684\u5f15\u7528\uff0c\u8be5\u5f15\u7528\u88ab\u58f0\u660e\u4e3a\u4e2d\u4ecb\u8005\u63a5\u53e3\u7c7b\u578b\u3002\u7ec4\u4ef6\u4e0d\u77e5\u9053\u4e2d\u4ecb\u8005\u5b9e\u9645\u6240\u5c5e\u7684\u7c7b\uff0c\u56e0\u6b64\u4f60\u53ef\u901a\u8fc7\u5c06\u5176\u8fde\u63a5\u5230\u4e0d\u540c\u7684\u4e2d\u4ecb\u8005\u4ee5\u4f7f\u5176\u80fd\u5728\u5176\u4ed6\u7a0b\u5e8f\u4e2d\u590d\u7528\u3002 \u4e2d\u4ecb\u8005\uff08Mediator\uff09\uff1a\u58f0\u660e\u4e86\u4e0e\u7ec4\u4ef6\u4ea4\u6d41\u7684\u63a5\u53e3\uff0c\u4f46\u901a\u5e38\u4ec5\u5305\u62ec\u4e00\u4e2a\u901a\u77e5\u65b9\u6cd5\u3002\u7ec4\u4ef6\u53ef\u5c06\u4efb\u610f\u4e0a\u4e0b\u6587\uff08\u5305\u62ec\u81ea\u5df1\u7684\u5bf9\u8c61\uff09\u4f5c\u4e3a\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u53ea\u6709\u8fd9\u6837\u63a5\u6536\u7ec4\u4ef6\u548c\u53d1\u9001\u8005\u7c7b\u4e4b\u95f4\u624d\u4e0d\u4f1a\u8026\u5408\u3002 \u5177\u4f53\u4e2d\u4ecb\u8005\uff08Concrete Mediator\uff09\uff1a\u5c01\u88c5\u4e86\u591a\u79cd\u7ec4\u4ef6\u95f4\u7684\u5173\u7cfb\u3002\u5177\u4f53\u4e2d\u4ecb\u8005\u901a\u5e38\u4f1a\u4fdd\u5b58\u6240\u6709\u7ec4\u4ef6\u7684\u5f15\u7528\u5e76\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\uff0c\u751a\u81f3\u6709\u65f6\u5019\u4f1a\u5bf9\u5176\u751f\u547d\u5468\u671f\u8fdb\u884c\u7ba1\u7406\u3002 \u7ec4\u4ef6\u5e76\u4e0d\u77e5\u9053\u5176\u4ed6\u7ec4\u4ef6\u7684\u60c5\u51b5\u3002\u5982\u679c\u7ec4\u4ef6\u5185\u53d1\u751f\u4e86\u91cd\u8981\u4e8b\u4ef6\uff0c\u5b83\u53ea\u80fd\u901a\u77e5\u4e2d\u4ecb\u8005\u3002\u4e2d\u4ecb\u8005\u6536\u5230\u901a\u77e5\u540e\u80fd\u8f7b\u6613\u5730\u786e\u5b9a\u53d1\u9001\u8005\uff0c\u8fd9\u6216\u8bb8\u5df2\u8db3\u4ee5\u5224\u65ad\u63a5\u4e0b\u6765\u9700\u8981\u51fa\u53d1\u7684\u7ec4\u4ef6\u4e86\u3002\u5bf9\u4e8e\u7ec4\u4ef6\u6765\u8bf4\uff0c\u4e2d\u4ecb\u8005\u770b\u4e0a\u53bb\u5b8c\u5168\u4f7f\u4e00\u4e2a\u9ed1\u7bb1\u3002\u53d1\u9001\u8005\u4e0d\u77e5\u9053\u6700\u7ec8\u4f1a\u7531\u8c01\u6765\u5904\u7406\u81ea\u5df1\u7684\u8bf7\u6c42\uff0c\u63a5\u6536\u8005\u4e5f\u4e0d\u77e5\u9053\u6700\u521d\u662f\u8c01\u53d1\u51fa\u6765\u8bf7\u6c42\u3002","title":"\u6a21\u5f0f\u7ed3\u6784"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/19.%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"\u5f53\u4e00\u4e9b\u5bf9\u8c61\u548c\u5176\u4ed6\u5bf9\u8c61\u7d27\u5bc6\u8026\u5408\u4ee5\u81f4\u96be\u4ee5\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u53ef\u9002\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u8be5\u6a21\u5f0f\u8ba9\u4f60\u5c06\u5bf9\u8c61\u95f4\u7684\u6240\u6709\u5173\u7cfb\u62bd\u53d6\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\uff0c\u5df2\u4f7f\u5bf9\u4e8e\u7279\u5b9a\u7ec4\u4ef6\u7684\u4fee\u6539\u5de5\u4f5c\u72ec\u7acb\u4e8e\u5176\u4ed6\u7ec4\u4ef6\u3002 \u5f53\u7ec4\u4ef6\u56e0\u8fc7\u4e8e\u4f9d\u8d56\u5176\u4ed6\u7ec4\u4ef6\u800c\u65e0\u6cd5\u5728\u4e0d\u540c\u5e94\u7528\u4e2d\u590d\u7528\u65f6\uff0c\u53ef\u4f7f\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u5e94\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u540e\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u4e0d\u518d\u77e5\u6653\u5176\u4ed6\u7ec4\u4ef6\u7684\u60c5\u51b5\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u7ec4\u4ef6\u65e0\u6cd5\u76f4\u63a5\u4ea4\u6d41\uff0c\u4f46\u5b83\u4eec\u4ecd\u53ef\u901a\u8fc7\u4e2d\u4ecb\u8005\u5bf9\u8c61\u8fdb\u884c\u95f4\u63a5\u4ea4\u6d41\u3002\u5982\u679c\u4f60\u5e0c\u671b\u5728\u4e0d\u540c\u5e94\u7528\u4e2d\u590d\u7528\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5219\u9700\u8981\u4e3a\u5176\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u4e2d\u4ecb\u8005\u7c7b\u3002 \u5982\u679c\u4e3a\u4e86\u80fd\u5728\u4e0d\u540c\u60c5\u666f\u4e0b\u590d\u7528\u4e00\u4e9b\u57fa\u672c\u884c\u4e3a\uff0c\u5bfc\u81f4\u4f60\u9700\u8981\u88ab\u8feb\u521b\u5efa\u5927\u91cf\u7ec4\u4ef6\u5b50\u7c7b\u65f6\uff0c\u53ef\u4f7f\u7528\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3002\u7531\u4e8e\u6240\u6709\u7ec4\u4ef6\u95f4\u5173\u7cfb\u90fd\u88ab\u5305\u542b\u5728\u4e2d\u4ecb\u8005\u4e2d\uff0c\u56e0\u6b64\u4f60\u65e0\u9700\u4fee\u6539\u7ec4\u4ef6\u5c31\u80fd\u65b9\u4fbf\u5730\u65b0\u5efa\u4e2d\u4ecb\u8005\u7c7b\u4ee5\u5b9a\u4e49\u65b0\u7684\u7ec4\u4ef6\u5408\u4f5c\u65b9\u5f0f\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/19.%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/#_3","text":"\u5355\u4e00\u804c\u8d23\u3002\u4f60\u53ef\u4ee5\u5c06\u591a\u4e2a\u7ec4\u4ef6\u95f4\u7684\u4ea4\u6d41\u62bd\u53d6\u5230\u540c\u4e00\u4f4d\u7f6e\uff0c\u4f7f\u5176\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002 \u5f00\u95ed\u539f\u5219\u3002\u4f60\u65e0\u9700\u4fee\u6539\u5b9e\u9645\u7ec4\u4ef6\u5c31\u80fd\u589e\u52a0\u65b0\u7684\u4e2d\u4ecb\u8005\u3002 \u4f60\u53ef\u4ee5\u51cf\u8f7b\u5e94\u7528\u4e2d\u591a\u4e2a\u7ec4\u4ef6\u95f4\u7684\u8026\u5408\u60c5\u51b5\u3002 \u4f60\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u590d\u7528\u5404\u4e2a\u7ec4\u4ef6\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/19.%20%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/#_4","text":"\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4e2d\u4ecb\u8005\u53ef\u80fd\u4f1a\u6f14\u5316\u6210\u4e3a\u4e0a\u5e1d\u5bf9\u8c61\u3002 Mediator.h /* * \u4e2d\u4ecb\u8005\u6a21\u5f0f */ #pragma once #include <iostream> class Colleague ; //\u62bd\u8c61\u4e2d\u4ecb\u8005 class Mediator { public : Mediator () { std :: cout << \"Mediator constructed! \\n \" ; } virtual ~ Mediator () { std :: cout << \"Mediator destructed! \\n \" ; } virtual void Notify ( std :: shared_ptr < Colleague > colleage ) = 0 ; }; //\u540c\u4e8b\u7c7b class Colleague : public std :: enable_shared_from_this < Colleague > { public : Colleague ( std :: string name ) : name_ ( name ) { std :: cout << \"Colleague constructed! \\n \" ; } ~ Colleague () { std :: cout << \"Colleague constructed! \\n \" ; } void SetMediator ( std :: shared_ptr < Mediator > mediator ) { mediator_ = mediator ; } void Change () { if ( ! mediator_ . expired ()) { mediator_ . lock () -> Notify ( shared_from_this ()); } } void Update () { std :: cout << name_ << \" Copy notify message from mediator \\n \" ; } private : std :: string name_ ; std :: weak_ptr < Mediator > mediator_ ; }; //\u5177\u4f53\u4e2d\u4ecb\u8005 class ConcreteMediator : public Mediator { public : ConcreteMediator ( std :: shared_ptr < Colleague > colleague1 , std :: shared_ptr < Colleague > colleague2 ) : colleague1_ ( colleague1 ), colleague2_ ( colleague2 ) { std :: cout << \"ConcreteMediator constructed! \\n \" ; } ~ ConcreteMediator () { std :: cout << \"ConcreteMediator destructed! \\n \" ; } virtual void Notify ( std :: shared_ptr < Colleague > colleage ) override { if ( colleage == colleague1_ ) { if ( colleague2_ ) { colleague2_ -> Update (); } } if ( colleage == colleague2_ ) { if ( colleague1_ ) { colleague1_ -> Update (); } } } private : std :: shared_ptr < Colleague > colleague1_ ; std :: shared_ptr < Colleague > colleague2_ ; }; main.cpp #include <iostream> #include \"Mediator.h\" int main () { std :: shared_ptr < Colleague > colleague1 = std :: make_shared < Colleague > ( \"John\" ); std :: shared_ptr < Colleague > colleague2 = std :: make_shared < Colleague > ( \"Tim\" ); std :: shared_ptr < Mediator > mediator = std :: make_shared < ConcreteMediator > ( colleague1 , colleague2 ); colleague1 -> SetMediator ( mediator ); colleague2 -> SetMediator ( mediator ); colleague1 -> Change (); colleague2 -> Change (); return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/","text":"\u5728\u4e0d\u7834\u574f\u5c01\u95ed\u7684\u524d\u63d0\u4e0b\uff0c\u6355\u83b7\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u5e76\u5728\u8be5\u5bf9\u8c61\u4e4b\u5916\u4fdd\u5b58\u8fd9\u4e2a\u72b6\u6001\u3002\u8fd9\u6837\u4ee5\u540e\u5c31\u53ef\u4ee5\u5c06\u8be5\u5bf9\u8c61\u6062\u590d\u5230\u539f\u5148\u4fdd\u5b58\u7684\u72b6\u6001\u3002 \u6a21\u5f0f\u6784\u6210 \u539f\u53d1\u5668\uff08Originator\uff09\uff1a\u53ef\u4ee5\u751f\u6210\u81ea\u8eab\u72b6\u6001\u7684\u5feb\u7167\uff0c\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u901a\u8fc7\u5feb\u7167\u6062\u590d\u81ea\u8eab\u72b6\u6001\u3002 \u5907\u5fd8\u5f55\uff08Memento\uff09\uff1a\u539f\u53d1\u5668\u72b6\u6001\u5feb\u7167\u7684\u503c\u5bf9\u8c61\uff08Value Object\uff09\u3002\u901a\u5e38\u505a\u6cd5\u662f\u5c06\u5907\u5fd8\u5f55\u8bbe\u4e3a\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e00\u6b21\u6027\u4f20\u9012\u6570\u636e\u3002 \u7ba1\u7406\u8005\uff08Caretaker\uff09\uff1a\u8d1f\u8d23\u5b58\u50a8\u5907\u5fd8\u5f55\uff0c\u4e0d\u80fd\u5bf9\u5907\u5fd8\u5f55\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u6216\u68c0\u67e5\uff0c\u53ea\u80fd\u591f\u5c06\u5907\u5fd8\u5f55\u4f20\u9012\u7ed9\u5176\u4ed6\u5bf9\u8c61\u3002 \u9002\u7528\u573a\u666f \u5f53\u4f60\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u72b6\u6001\u5feb\u7167\u6765\u6062\u590d\u5176\u4e4b\u524d\u7684\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u9002\u7528\u5907\u5fd8\u5f55\u6a21\u5f0f\u3002\u5907\u5fd8\u5f55\u6a21\u5f0f\u5141\u8bb8\u4f60\u590d\u5236\u5bf9\u8c61\u4e2d\u7684\u5168\u90e8\u72b6\u6001\uff08\u5305\u62ec\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff09\uff0c\u5e76\u5c06\u5176\u72ec\u7acb\u4e8e\u5bf9\u8c61\u8fdb\u884c\u4fdd\u5b58\u3002\u5c3d\u7ba1\u5927\u90e8\u5206\u4eba\u56e0\u4e3a\u201c\u64a4\u9500\u201d\u8fd9\u4e2a\u7528\u4f8b\u624d\u8bb0\u5f97\u8be5\u6a21\u5f0f\uff0c\u4f46\u5176\u5b9e\u5b83\u5728\u5904\u7406\u4e8b\u52a1\uff08\u6bd4\u5982\u9700\u8981\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u56de\u6eda\u4e00\u4e2a\u64cd\u4f5c\uff09\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u5fc5\u4e0d\u53ef\u5c11\u3002 \u5f53\u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3001\u83b7\u53d6\u5668\u6216\u8bbe\u7f6e\u5668\u5c06\u5bfc\u81f4\u5c01\u88c5\u88ab\u7a81\u7834\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u5907\u5fd8\u5f55\u8ba9\u5bf9\u8c61\u81ea\u884c\u590d\u5236\u521b\u5efa\u5176\u72b6\u6001\u7684\u5feb\u7167\u3002\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u90fd\u4e0d\u80fd\u8bfb\u53d6\u5feb\u7167\uff0c\u8fd9\u6709\u6548\u5730\u4fdd\u969c\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002 \u6a21\u5f0f\u4f18\u70b9 \u4f60\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u5bf9\u8c61\u5c01\u88c5\u7684\u524d\u63d0\u4e0b\u521b\u5efa\u5bf9\u8c61\u72b6\u6001\u5feb\u7167\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8ba9\u7ba1\u7406\u8005\u7ef4\u62a4\u539f\u53d1\u5668\u72b6\u6001\u5386\u53f2\u8bb0\u5f55\u6765\u7b80\u5316\u539f\u53d1\u5668\u4ee3\u7801\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u5982\u679c\u5ba2\u6237\u7aef\u8fc7\u4e8e\u9891\u7e41\u5730\u521b\u5efa\u5907\u5fd8\u5f55\uff0c\u7a0b\u5e8f\u5c06\u6d88\u8017\u5927\u91cf\u5185\u5b58\u3002 \u7ba1\u7406\u8005\u5fc5\u987b\u5b8c\u6574\u8ddf\u8e2a\u539f\u53d1\u5668\u7684\u751f\u547d\u5468\u671f\uff0c\u8fd9\u6837\u624d\u80fd\u9500\u6bc1\u5f03\u7528\u7684\u5907\u5fd8\u5f55\u3002 Memento.h /* * \u5907\u5fd8\u5f55\u6a21\u5f0f */ #pragma once #include <iostream> //\u5907\u5fd8\u5f55\u7c7b class RoleSnapshot { public : RoleSnapshot ( int vit , int atk , int def ) : vit_ ( vit ), atk_ ( atk ), def_ ( def ) { } ~ RoleSnapshot () = default ; int GetVit () const { return vit_ ; } int GetAtk () const { return atk_ ; } int GetDef () const { return def_ ; } private : int vit_ ; int atk_ ; int def_ ; }; //\u539f\u53d1\u5668\u7c7b class GameRole { public : GameRole ( int vit = 100 , int atk = 100 , int def = 100 ) : vit_ ( vit ), atk_ ( atk ), def_ ( def ) { } ~ GameRole () = default ; void GetHurt ( int harm ) { std :: cout << \"\u53d7\u5230\" << harm << \"\u4f24\u5bb3\" << std :: endl ; vit_ -= harm ; } std :: shared_ptr < RoleSnapshot > SaveState () { return std :: make_shared < RoleSnapshot > ( vit_ , atk_ , def_ ); } void RecoveryState ( std :: shared_ptr < RoleSnapshot > snapshot ) { vit_ = snapshot -> GetVit (); atk_ = snapshot -> GetAtk (); def_ = snapshot -> GetDef (); } void DisplayState () { std :: cout << \"\u89d2\u8272\u5f53\u524d\u72b6\u6001\uff1a \\n \" ; std :: cout << \"\u751f\u547d\uff1a\" << vit_ << std :: endl ; std :: cout << \"\u653b\u51fb\uff1a\" << atk_ << std :: endl ; std :: cout << \"\u9632\u5fa1\uff1a\" << def_ << std :: endl ; } private : int vit_ ; int atk_ ; int def_ ; }; //\u7ba1\u7406\u8005\u7c7b class RoleStateCaretaker { public : RoleStateCaretaker () = default ; ~ RoleStateCaretaker () = default ; void SetSnapshot ( std :: shared_ptr < RoleSnapshot > snapshot ) { snapshot_ = snapshot ; } std :: shared_ptr < RoleSnapshot > GetSnapshot () const { return snapshot_ ; } private : std :: shared_ptr < RoleSnapshot > snapshot_ ; }; main.cpp #include <iostream> #include \"Memento.h\" int main () { std :: shared_ptr < RoleStateCaretaker > caretaker = std :: make_shared < RoleStateCaretaker > (); std :: shared_ptr < GameRole > role = std :: make_shared < GameRole > (); role -> DisplayState (); //\u4fdd\u5b58\u72b6\u6001 caretaker -> SetSnapshot ( role -> SaveState ()); //\u6218\u6597 role -> GetHurt ( 47 ); role -> DisplayState (); //\u6062\u590d\u72b6\u6001 role -> RecoveryState ( caretaker -> GetSnapshot ()); role -> DisplayState (); return 0 ; }","title":"20. \u5907\u5fd8\u5f55\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/#_1","text":"\u539f\u53d1\u5668\uff08Originator\uff09\uff1a\u53ef\u4ee5\u751f\u6210\u81ea\u8eab\u72b6\u6001\u7684\u5feb\u7167\uff0c\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u901a\u8fc7\u5feb\u7167\u6062\u590d\u81ea\u8eab\u72b6\u6001\u3002 \u5907\u5fd8\u5f55\uff08Memento\uff09\uff1a\u539f\u53d1\u5668\u72b6\u6001\u5feb\u7167\u7684\u503c\u5bf9\u8c61\uff08Value Object\uff09\u3002\u901a\u5e38\u505a\u6cd5\u662f\u5c06\u5907\u5fd8\u5f55\u8bbe\u4e3a\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e00\u6b21\u6027\u4f20\u9012\u6570\u636e\u3002 \u7ba1\u7406\u8005\uff08Caretaker\uff09\uff1a\u8d1f\u8d23\u5b58\u50a8\u5907\u5fd8\u5f55\uff0c\u4e0d\u80fd\u5bf9\u5907\u5fd8\u5f55\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u6216\u68c0\u67e5\uff0c\u53ea\u80fd\u591f\u5c06\u5907\u5fd8\u5f55\u4f20\u9012\u7ed9\u5176\u4ed6\u5bf9\u8c61\u3002","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/#_2","text":"\u5f53\u4f60\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u72b6\u6001\u5feb\u7167\u6765\u6062\u590d\u5176\u4e4b\u524d\u7684\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u9002\u7528\u5907\u5fd8\u5f55\u6a21\u5f0f\u3002\u5907\u5fd8\u5f55\u6a21\u5f0f\u5141\u8bb8\u4f60\u590d\u5236\u5bf9\u8c61\u4e2d\u7684\u5168\u90e8\u72b6\u6001\uff08\u5305\u62ec\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff09\uff0c\u5e76\u5c06\u5176\u72ec\u7acb\u4e8e\u5bf9\u8c61\u8fdb\u884c\u4fdd\u5b58\u3002\u5c3d\u7ba1\u5927\u90e8\u5206\u4eba\u56e0\u4e3a\u201c\u64a4\u9500\u201d\u8fd9\u4e2a\u7528\u4f8b\u624d\u8bb0\u5f97\u8be5\u6a21\u5f0f\uff0c\u4f46\u5176\u5b9e\u5b83\u5728\u5904\u7406\u4e8b\u52a1\uff08\u6bd4\u5982\u9700\u8981\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u56de\u6eda\u4e00\u4e2a\u64cd\u4f5c\uff09\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u5fc5\u4e0d\u53ef\u5c11\u3002 \u5f53\u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3001\u83b7\u53d6\u5668\u6216\u8bbe\u7f6e\u5668\u5c06\u5bfc\u81f4\u5c01\u88c5\u88ab\u7a81\u7834\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u5907\u5fd8\u5f55\u8ba9\u5bf9\u8c61\u81ea\u884c\u590d\u5236\u521b\u5efa\u5176\u72b6\u6001\u7684\u5feb\u7167\u3002\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u90fd\u4e0d\u80fd\u8bfb\u53d6\u5feb\u7167\uff0c\u8fd9\u6709\u6548\u5730\u4fdd\u969c\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/#_3","text":"\u4f60\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u5bf9\u8c61\u5c01\u88c5\u7684\u524d\u63d0\u4e0b\u521b\u5efa\u5bf9\u8c61\u72b6\u6001\u5feb\u7167\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8ba9\u7ba1\u7406\u8005\u7ef4\u62a4\u539f\u53d1\u5668\u72b6\u6001\u5386\u53f2\u8bb0\u5f55\u6765\u7b80\u5316\u539f\u53d1\u5668\u4ee3\u7801\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%20%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/#_4","text":"\u5982\u679c\u5ba2\u6237\u7aef\u8fc7\u4e8e\u9891\u7e41\u5730\u521b\u5efa\u5907\u5fd8\u5f55\uff0c\u7a0b\u5e8f\u5c06\u6d88\u8017\u5927\u91cf\u5185\u5b58\u3002 \u7ba1\u7406\u8005\u5fc5\u987b\u5b8c\u6574\u8ddf\u8e2a\u539f\u53d1\u5668\u7684\u751f\u547d\u5468\u671f\uff0c\u8fd9\u6837\u624d\u80fd\u9500\u6bc1\u5f03\u7528\u7684\u5907\u5fd8\u5f55\u3002 Memento.h /* * \u5907\u5fd8\u5f55\u6a21\u5f0f */ #pragma once #include <iostream> //\u5907\u5fd8\u5f55\u7c7b class RoleSnapshot { public : RoleSnapshot ( int vit , int atk , int def ) : vit_ ( vit ), atk_ ( atk ), def_ ( def ) { } ~ RoleSnapshot () = default ; int GetVit () const { return vit_ ; } int GetAtk () const { return atk_ ; } int GetDef () const { return def_ ; } private : int vit_ ; int atk_ ; int def_ ; }; //\u539f\u53d1\u5668\u7c7b class GameRole { public : GameRole ( int vit = 100 , int atk = 100 , int def = 100 ) : vit_ ( vit ), atk_ ( atk ), def_ ( def ) { } ~ GameRole () = default ; void GetHurt ( int harm ) { std :: cout << \"\u53d7\u5230\" << harm << \"\u4f24\u5bb3\" << std :: endl ; vit_ -= harm ; } std :: shared_ptr < RoleSnapshot > SaveState () { return std :: make_shared < RoleSnapshot > ( vit_ , atk_ , def_ ); } void RecoveryState ( std :: shared_ptr < RoleSnapshot > snapshot ) { vit_ = snapshot -> GetVit (); atk_ = snapshot -> GetAtk (); def_ = snapshot -> GetDef (); } void DisplayState () { std :: cout << \"\u89d2\u8272\u5f53\u524d\u72b6\u6001\uff1a \\n \" ; std :: cout << \"\u751f\u547d\uff1a\" << vit_ << std :: endl ; std :: cout << \"\u653b\u51fb\uff1a\" << atk_ << std :: endl ; std :: cout << \"\u9632\u5fa1\uff1a\" << def_ << std :: endl ; } private : int vit_ ; int atk_ ; int def_ ; }; //\u7ba1\u7406\u8005\u7c7b class RoleStateCaretaker { public : RoleStateCaretaker () = default ; ~ RoleStateCaretaker () = default ; void SetSnapshot ( std :: shared_ptr < RoleSnapshot > snapshot ) { snapshot_ = snapshot ; } std :: shared_ptr < RoleSnapshot > GetSnapshot () const { return snapshot_ ; } private : std :: shared_ptr < RoleSnapshot > snapshot_ ; }; main.cpp #include <iostream> #include \"Memento.h\" int main () { std :: shared_ptr < RoleStateCaretaker > caretaker = std :: make_shared < RoleStateCaretaker > (); std :: shared_ptr < GameRole > role = std :: make_shared < GameRole > (); role -> DisplayState (); //\u4fdd\u5b58\u72b6\u6001 caretaker -> SetSnapshot ( role -> SaveState ()); //\u6218\u6597 role -> GetHurt ( 47 ); role -> DisplayState (); //\u6062\u590d\u72b6\u6001 role -> RecoveryState ( caretaker -> GetSnapshot ()); role -> DisplayState (); return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/","text":"\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u5728\u72b6\u6001\u6539\u53d8\u65f6\u5141\u8bb8\u6539\u53d8\u5176\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u770b\u8d77\u6765\u50cf\u662f\u6539\u53d8\u4e86\u5176\u7c7b\u3002 \u72b6\u6001\u6a21\u5f0f\u4e3b\u8981\u89e3\u51b3\u7684\u662f\u5f53\u63a7\u5236\u4e00\u4e2a\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u8fc7\u4e8e\u590d\u6742\u65f6\u7684\u60c5\u51b5\uff0c\u628a\u72b6\u6001\u7684\u5224\u65ad\u903b\u8f91\u8f6c\u79fb\u5230\u8868\u8fbe\u4e0d\u540c\u72b6\u6001\u7684\u4e00\u7cfb\u5217\u7c7b\u5f53\u4e2d\uff0c\u53ef\u4ee5\u628a\u590d\u6742\u7684\u5224\u65ad\u903b\u8f91\u7b80\u5316\u3002 \u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u5b83\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u5b83\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u6839\u636e\u72b6\u6001\u6539\u53d8\u5b83\u7684\u884c\u4e3a\u65f6\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u72b6\u6001\u6a21\u5f0f\u4e86\u3002 \u6a21\u5f0f\u6784\u6210 \u62bd\u8c61\u72b6\u6001\u7c7b\uff08State\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u4ee5\u5c01\u88c5\u4e0e\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002 \u5177\u4f53\u72b6\u6001\u7c7b\uff08Concrete State\uff09\uff1a\u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5b9e\u73b0\u4e00\u4e2a\u4e0e\u4e0a\u4e0b\u6587\u4e00\u4e2a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002 \u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5177\u4f53\u72b6\u6001\u7c7b\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u5b9a\u4e49\u5f53\u524d\u7684\u72b6\u6001\u3002 \u6a21\u5f0f\u4f18\u70b9 \u5c06\u4e8e\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u5c40\u90e8\u5316\uff0c\u5e76\u4e14\u5c06\u4e0d\u540c\u72b6\u6001\u7684\u884c\u4e3a\u5206\u5272\u5f00\u6765\uff0c\u901a\u8fc7\u5b9a\u4e49\u65b0\u7684\u5b50\u7c7b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u589e\u52a0\u65b0\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u6d88\u9664\u5e9e\u5927\u7684\u6761\u4ef6\u5206\u652f\u8bed\u53e5\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u6bcf\u4e2a\u5b50\u72b6\u6001\u8df3\u8f6c\u5230\u53e6\u5916\u4e00\u4e2a\u5b50\u72b6\u6001\u65f6\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u591f\u7075\u6d3b\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e4b\u95f4\u8f6c\u6362\u6700\u597d\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u5426\u5219\u5c31\u53c8\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5e9e\u5927\u7684\u5206\u652f\u8bed\u53e5\u3002 State.h /* * \u72b6\u6001\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61\u72b6\u6001 class State { public : State () = default ; virtual ~ State () = default ; virtual void Show () = 0 ; }; //\u5177\u4f53\u72b6\u6001 class WorkState : public State { public : WorkState () = default ; ~ WorkState () = default ; virtual void Show () override { std :: cout << \"Working ... \\n \" ; } }; class EatState : public State { public : EatState () = default ; ~ EatState () = default ; virtual void Show () override { std :: cout << \"Eating ... \\n \" ; } }; class SleepState : public State { public : SleepState () = default ; ~ SleepState () = default ; virtual void Show () override { std :: cout << \"Sleeping ... \\n \" ; } }; //\u4e0a\u4e0b\u6587\u7c7b class Person { public : Person () = default ; ~ Person () = default ; void SetState ( std :: shared_ptr < State > state ) { state_ = state ; } void ShowState () { if ( state_ ) { state_ -> Show (); } } private : std :: shared_ptr < State > state_ ; }; main.cpp #include <iostream> #include \"State.h\" int main () { std :: shared_ptr < Person > person = std :: make_shared < Person > (); person -> SetState ( std :: make_shared < WorkState > ()); person -> ShowState (); person -> SetState ( std :: make_shared < EatState > ()); person -> ShowState (); person -> SetState ( std :: make_shared < SleepState > ()); person -> ShowState (); return 0 ; }","title":"21. \u72b6\u6001\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/#_1","text":"\u62bd\u8c61\u72b6\u6001\u7c7b\uff08State\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u4ee5\u5c01\u88c5\u4e0e\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002 \u5177\u4f53\u72b6\u6001\u7c7b\uff08Concrete State\uff09\uff1a\u6bcf\u4e00\u4e2a\u5b50\u7c7b\u5b9e\u73b0\u4e00\u4e2a\u4e0e\u4e0a\u4e0b\u6587\u4e00\u4e2a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002 \u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5177\u4f53\u72b6\u6001\u7c7b\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u5b9a\u4e49\u5f53\u524d\u7684\u72b6\u6001\u3002","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/#_2","text":"\u5c06\u4e8e\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u5c40\u90e8\u5316\uff0c\u5e76\u4e14\u5c06\u4e0d\u540c\u72b6\u6001\u7684\u884c\u4e3a\u5206\u5272\u5f00\u6765\uff0c\u901a\u8fc7\u5b9a\u4e49\u65b0\u7684\u5b50\u7c7b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u589e\u52a0\u65b0\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u6d88\u9664\u5e9e\u5927\u7684\u6761\u4ef6\u5206\u652f\u8bed\u53e5\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%20%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/#_3","text":"\u6bcf\u4e2a\u5b50\u72b6\u6001\u8df3\u8f6c\u5230\u53e6\u5916\u4e00\u4e2a\u5b50\u72b6\u6001\u65f6\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u591f\u7075\u6d3b\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e4b\u95f4\u8f6c\u6362\u6700\u597d\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u5426\u5219\u5c31\u53c8\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5e9e\u5927\u7684\u5206\u652f\u8bed\u53e5\u3002 State.h /* * \u72b6\u6001\u6a21\u5f0f */ #pragma once #include <iostream> //\u62bd\u8c61\u72b6\u6001 class State { public : State () = default ; virtual ~ State () = default ; virtual void Show () = 0 ; }; //\u5177\u4f53\u72b6\u6001 class WorkState : public State { public : WorkState () = default ; ~ WorkState () = default ; virtual void Show () override { std :: cout << \"Working ... \\n \" ; } }; class EatState : public State { public : EatState () = default ; ~ EatState () = default ; virtual void Show () override { std :: cout << \"Eating ... \\n \" ; } }; class SleepState : public State { public : SleepState () = default ; ~ SleepState () = default ; virtual void Show () override { std :: cout << \"Sleeping ... \\n \" ; } }; //\u4e0a\u4e0b\u6587\u7c7b class Person { public : Person () = default ; ~ Person () = default ; void SetState ( std :: shared_ptr < State > state ) { state_ = state ; } void ShowState () { if ( state_ ) { state_ -> Show (); } } private : std :: shared_ptr < State > state_ ; }; main.cpp #include <iostream> #include \"State.h\" int main () { std :: shared_ptr < Person > person = std :: make_shared < Person > (); person -> SetState ( std :: make_shared < WorkState > ()); person -> ShowState (); person -> SetState ( std :: make_shared < EatState > ()); person -> ShowState (); person -> SetState ( std :: make_shared < SleepState > ()); person -> ShowState (); return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/","text":"\u8bbf\u95ee\u8005\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u80fd\u5c06\u7b97\u6cd5\u4e0e\u5176\u6240\u4f5c\u7528\u7684\u5bf9\u8c61\u9694\u79bb\u5f00\u6765\u3002 \u6a21\u5f0f\u6784\u6210 \u8bbf\u95ee\u8005\uff08Visitor\uff09\uff1a\u58f0\u660e\u4e86\u4e00\u7cfb\u5217\u4ee5\u5bf9\u8c61\u7ed3\u6784\u7684\u5177\u4f53\u5143\u7d20\u4e3a\u53c2\u6570\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u3002\u5982\u679c\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u91cd\u8f7d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u3002 \u5177\u4f53\u8bbf\u95ee\u8005\uff08Concrete Visitor\uff09\uff1a\u4e3a\u4e0d\u540c\u7684\u5177\u4f53\u5143\u7d20\u7c7b\u5b9e\u73b0\u76f8\u540c\u884c\u4e3a\u7684\u51e0\u4e2a\u4e0d\u540c\u7248\u672c\u3002 \u5143\u7d20\uff08Element\uff09\uff1a\u58f0\u660e\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u201c\u63a5\u6536\u201d\u8bbf\u95ee\u8005\u3002\u8be5\u65b9\u6cd5\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570\u88ab\u58f0\u660e\u4e3a\u8bbf\u95ee\u8005\u63a5\u53e3\u7c7b\u578b\u3002 \u5177\u4f53\u5143\u7d20\uff08Concrete Element\uff09\uff1a\u5fc5\u987b\u5b9e\u73b0\u63a5\u6536\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u7684\u76ee\u7684\u662f\u6839\u636e\u5f53\u524d\u5143\u7d20\u7c7b\u5c06\u5176\u8c03\u7528\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u3002 \u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u5143\u7d20\u57fa\u7c7b\u5b9e\u73b0\u4e86\u8be5\u65b9\u6cd5\uff0c\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u91cd\u5199\u5e76\u8c03\u7528\u8bbf\u95ee\u8005\u5bf9\u8c61\u4e2d\u7684\u5408\u9002\u65b9\u6cd5\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u901a\u5e38\u4f1a\u4f5c\u4e3a\u96c6\u5408\u6216\u5176\u4ed6\u590d\u6742\u5bf9\u8c61\uff08\u4f8b\u5982\u4e00\u4e2a\u7ec4\u5408\u6811\uff09\u7684\u4ee3\u8868\u3002\u5ba2\u6237\u7aef\u901a\u5e38\u4e0d\u77e5\u9053\u6240\u6709\u7684\u5177\u4f53\u5143\u7d20\u7c7b\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u4e0e\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002 \u9002\u7528\u573a\u666f \u5982\u679c\u4f60\u9700\u8981\u5bf9\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u7ed3\u6784\uff08\u4f8b\u5982\u5bf9\u8c61\u6811\uff09\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u53ef\u4f7f\u7528\u8bbf\u95ee\u8005\u6a21\u5f0f\u3002\u8bbf\u95ee\u8005\u6a21\u5f0f\u901a\u8fc7\u5728\u8bbf\u95ee\u8005\u5bf9\u8c61\u4e2d\u4e3a\u591a\u4e2a\u76ee\u6807\u7c7b\u63d0\u4f9b\u76f8\u540c\u64cd\u4f5c\u7684\u53d8\u4f53\uff0c\u8ba9\u4f60\u80fd\u5728\u5c5e\u4e8e\u4e0d\u540c\u7c7b\u7684\u4e00\u7ec4\u5bf9\u8c61\u4e0a\u6267\u884c\u540c\u4e00\u64cd\u4f5c\u3002 \u53ef\u4f7f\u7528\u8bbf\u95ee\u8005\u6a21\u5f0f\u6765\u6e05\u7406\u8f85\u52a9\u884c\u4e3a\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u8be5\u6a21\u5f0f\u4f1a\u5c06\u6240\u6709\u975e\u4e3b\u8981\u884c\u4e3a\u62bd\u53d6\u5230\u4e00\u7ec4\u8bbf\u95ee\u8005\u7c7b\u4e2d\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u7684\u4e3b\u8981\u7c7b\u80fd\u66f4\u4e13\u6ce8\u4e8e\u4e3b\u8981\u7684\u5de5\u4f5c\u3002 \u5f53\u67d0\u4e2a\u884c\u4e3a\u4ec5\u5728\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u4e00\u4e9b\u7c7b\u4e2d\u6709\u610f\u4e49\uff0c\u800c\u5728\u5176\u4ed6\u7c7b\u4e2d\u6ca1\u6709\u610f\u4e49\u65f6\uff0c\u53ef\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u53ef\u5c06\u8be5\u884c\u4e3a\u62bd\u53d6\u5230\u5355\u72ec\u7684\u8bbf\u95ee\u8005\u7c7b\u4e2d\uff0c\u53ea\u9700\u5b9e\u73b0\u63a5\u6536\u76f8\u5173\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u5e76\u5c06\u5176\u4ed6\u65b9\u6cd5\u7559\u7a7a\u5373\u53ef\u3002 \u8bbf\u95ee\u8005\u6a21\u5f0f\u9002\u7528\u4e8e\u6570\u636e\u7ed3\u6784\u76f8\u5bf9\u7a33\u5b9a\u7684\u7cfb\u7edf\u3002 \u6a21\u5f0f\u4f18\u70b9 \u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5f15\u5165\u5728\u4e0d\u540c\u7c7b\u5bf9\u8c61\u4e0a\u6267\u884c\u7684\u65b0\u884c\u4e3a\uff0c\u4e14\u65e0\u9700\u5bf9\u8fd9\u4e9b\u7c7b\u505a\u51fa\u4fee\u6539\u3002 \u7b26\u5408\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002\u53ef\u5c06\u540c\u4e00\u884c\u4e3a\u7684\u4e0d\u540c\u7248\u672c\u79fb\u5230\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002 \u8bbf\u95ee\u8005\u5bf9\u8c61\u53ef\u4ee5\u5728\u4e0e\u5404\u79cd\u5bf9\u8c61\u4ea4\u4e92\u65f6\u6536\u96c6\u4e00\u4e9b\u6709\u7528\u7684\u4fe1\u606f\u3002\u5f53\u4f60\u60f3\u8981\u904d\u5386\u4e00\u4e9b\u590d\u6742\u7684\u5bf9\u8c61\u7ed3\u6784\uff08\u4f8b\u5982\u5bf9\u8c61\u6811\uff09\uff0c\u5e76\u5728\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u5e94\u7528\u8bbf\u95ee\u8005\u65f6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 \u589e\u52a0\u65b0\u7684\u64cd\u4f5c\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8bbf\u95ee\u8005\u5373\u53ef\u3002 \u6a21\u5f0f\u7f3a\u70b9 \u5728\u8bbf\u95ee\u8005\u4e0e\u67d0\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u6ca1\u6709\u8bbf\u95ee\u5143\u7d20\u79c1\u6709\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5\u7684\u5fc5\u8981\u6743\u9650\u3002 \u6539\u53d8\u6570\u636e\u7ed3\u6784\u53d8\u5f97\u56f0\u96be\uff0c\u8981\u6539\u53d8\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u66f4\u65b0\u6240\u6709\u7684\u8bbf\u95ee\u8005\u3002 Visitor.h /* * \u8bbf\u95ee\u8005\u6a21\u5f0f */ #pragma once #include <iostream> #include <memory> #include <list> class Visitor ; //\u7ec4\u6210Computer\u7684\u5404\u7ec4\u4ef6\u57fa\u7c7b class Element { public : Element ( std :: string name ) : name_ ( name ) { } virtual ~ Element () = default ; std :: string GetName () const { return name_ ; } //\u7ec4\u4ef6\u63a5\u53d7\u8bbf\u95ee\u8005\u8bbf\u95ee\u7684\u63a5\u53e3 virtual void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) = 0 ; private : //\u7ec4\u4ef6\u7684\u6807\u8bc6\u540d\u79f0 std :: string name_ ; }; //\u8bbf\u95ee\u8005\u57fa\u7c7b\uff0c\u9488\u5bf9\u4e0d\u540c\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e0d\u540c\u7684\u8bbf\u95ee\u63a5\u53e3 class Visitor { public : Visitor () = default ; virtual ~ Visitor () = default ; virtual void VisitCPU ( std :: shared_ptr < Element > pEle ) = 0 ; virtual void VisitGPU ( std :: shared_ptr < Element > pEle ) = 0 ; virtual void VisitDISK ( std :: shared_ptr < Element > pEle ) = 0 ; }; //Computer\u7c7b\uff0c\u7531\u5404\u7ec4\u4ef6\u7ec4\u6210\uff0c\u8bbf\u95ee\u8005\u8bbf\u95eeComputer\u65f6\u5c06\u4f9d\u6b21\u8bbf\u95ee\u5404\u7ec4\u4ef6 class Computer { public : Computer () = default ; virtual ~ Computer () = default ; void AddElement ( std :: shared_ptr < Element > pEle ) { list_ele_ . push_back ( pEle ); } void DelElement ( std :: shared_ptr < Element > pEle ) { list_ele_ . remove ( pEle ); } //\u8bbf\u95ee\u8005\u8bbf\u95eeComputer\u65f6\u5c06\u4f9d\u6b21\u8bbf\u95ee\u5404\u7ec4\u4ef6 void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { for ( auto pElement : list_ele_ ) { pElement -> AcceptVisitor ( pVisitor ); } } private : std :: list < std :: shared_ptr < Element >> list_ele_ ; }; //\u8bbf\u95ee\u8005\u5b9e\u73b0\u7c7b\uff0c\u5b9e\u73b0\u5404\u81ea\u7684\u8bbf\u95ee\u65b9\u6cd5 class VisitorA : public Visitor { public : VisitorA () = default ; ~ VisitorA () = default ; virtual void VisitCPU ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A record CPU's name:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitGPU ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A do nothing to GPU:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitDISK ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A change DISK:%s \\n \" , pEle -> GetName (). c_str ()); } }; class VisitorB : public Visitor { public : VisitorB () = default ; ~ VisitorB () = default ; void VisitCPU ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B do nothing to CPU:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitGPU ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B record GPU's name:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitDISK ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B do nothing to DISK:%s \\n \" , pEle -> GetName (). c_str ()); } }; //\u7ec4\u4ef6\u7684\u5b9e\u73b0\u7c7b\uff0c\u8c03\u7528\u8bbf\u95ee\u8005\u76f8\u5e94\u7684\u8bbf\u95ee\u65b9\u6cd5 class CPU : public Element , public std :: enable_shared_from_this < CPU > { public : CPU ( std :: string strName ) : Element ( strName ) {} ~ CPU () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitCPU ( shared_from_this ()); } }; class GPU : public Element , public std :: enable_shared_from_this < GPU > { public : GPU ( std :: string strName ) : Element ( strName ) {} ~ GPU () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitGPU ( shared_from_this ()); } }; class Disk : public Element , public std :: enable_shared_from_this < Disk > { public : Disk ( std :: string strName ) : Element ( strName ) {} ~ Disk () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitDISK ( shared_from_this ()); } }; main.cpp #include <iostream> #include \"Visitor.h\" int main () { Computer computer ; computer . AddElement ( std :: make_shared < CPU > ( \"i9-10980XE\" )); computer . AddElement ( std :: make_shared < GPU > ( \"Titan RTX\" )); computer . AddElement ( std :: make_shared < Disk > ( \"HOF PRO M.2\" )); std :: shared_ptr < VisitorA > visitorA = std :: make_shared < VisitorA > (); std :: shared_ptr < VisitorB > visitorB = std :: make_shared < VisitorB > (); computer . AcceptVisitor ( visitorA ); computer . AcceptVisitor ( visitorB ); return 0 ; }","title":"22. \u8bbf\u95ee\u8005\u6a21\u5f0f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/#_1","text":"\u8bbf\u95ee\u8005\uff08Visitor\uff09\uff1a\u58f0\u660e\u4e86\u4e00\u7cfb\u5217\u4ee5\u5bf9\u8c61\u7ed3\u6784\u7684\u5177\u4f53\u5143\u7d20\u4e3a\u53c2\u6570\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u3002\u5982\u679c\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u91cd\u8f7d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u3002 \u5177\u4f53\u8bbf\u95ee\u8005\uff08Concrete Visitor\uff09\uff1a\u4e3a\u4e0d\u540c\u7684\u5177\u4f53\u5143\u7d20\u7c7b\u5b9e\u73b0\u76f8\u540c\u884c\u4e3a\u7684\u51e0\u4e2a\u4e0d\u540c\u7248\u672c\u3002 \u5143\u7d20\uff08Element\uff09\uff1a\u58f0\u660e\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u201c\u63a5\u6536\u201d\u8bbf\u95ee\u8005\u3002\u8be5\u65b9\u6cd5\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570\u88ab\u58f0\u660e\u4e3a\u8bbf\u95ee\u8005\u63a5\u53e3\u7c7b\u578b\u3002 \u5177\u4f53\u5143\u7d20\uff08Concrete Element\uff09\uff1a\u5fc5\u987b\u5b9e\u73b0\u63a5\u6536\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u7684\u76ee\u7684\u662f\u6839\u636e\u5f53\u524d\u5143\u7d20\u7c7b\u5c06\u5176\u8c03\u7528\u91cd\u5b9a\u5411\u5230\u76f8\u5e94\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u3002 \u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u5143\u7d20\u57fa\u7c7b\u5b9e\u73b0\u4e86\u8be5\u65b9\u6cd5\uff0c\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u91cd\u5199\u5e76\u8c03\u7528\u8bbf\u95ee\u8005\u5bf9\u8c61\u4e2d\u7684\u5408\u9002\u65b9\u6cd5\u3002 \u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u901a\u5e38\u4f1a\u4f5c\u4e3a\u96c6\u5408\u6216\u5176\u4ed6\u590d\u6742\u5bf9\u8c61\uff08\u4f8b\u5982\u4e00\u4e2a\u7ec4\u5408\u6811\uff09\u7684\u4ee3\u8868\u3002\u5ba2\u6237\u7aef\u901a\u5e38\u4e0d\u77e5\u9053\u6240\u6709\u7684\u5177\u4f53\u5143\u7d20\u7c7b\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u4e0e\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002","title":"\u6a21\u5f0f\u6784\u6210"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/#_2","text":"\u5982\u679c\u4f60\u9700\u8981\u5bf9\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u7ed3\u6784\uff08\u4f8b\u5982\u5bf9\u8c61\u6811\uff09\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u53ef\u4f7f\u7528\u8bbf\u95ee\u8005\u6a21\u5f0f\u3002\u8bbf\u95ee\u8005\u6a21\u5f0f\u901a\u8fc7\u5728\u8bbf\u95ee\u8005\u5bf9\u8c61\u4e2d\u4e3a\u591a\u4e2a\u76ee\u6807\u7c7b\u63d0\u4f9b\u76f8\u540c\u64cd\u4f5c\u7684\u53d8\u4f53\uff0c\u8ba9\u4f60\u80fd\u5728\u5c5e\u4e8e\u4e0d\u540c\u7c7b\u7684\u4e00\u7ec4\u5bf9\u8c61\u4e0a\u6267\u884c\u540c\u4e00\u64cd\u4f5c\u3002 \u53ef\u4f7f\u7528\u8bbf\u95ee\u8005\u6a21\u5f0f\u6765\u6e05\u7406\u8f85\u52a9\u884c\u4e3a\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u8be5\u6a21\u5f0f\u4f1a\u5c06\u6240\u6709\u975e\u4e3b\u8981\u884c\u4e3a\u62bd\u53d6\u5230\u4e00\u7ec4\u8bbf\u95ee\u8005\u7c7b\u4e2d\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u7684\u4e3b\u8981\u7c7b\u80fd\u66f4\u4e13\u6ce8\u4e8e\u4e3b\u8981\u7684\u5de5\u4f5c\u3002 \u5f53\u67d0\u4e2a\u884c\u4e3a\u4ec5\u5728\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u7684\u4e00\u4e9b\u7c7b\u4e2d\u6709\u610f\u4e49\uff0c\u800c\u5728\u5176\u4ed6\u7c7b\u4e2d\u6ca1\u6709\u610f\u4e49\u65f6\uff0c\u53ef\u4f7f\u7528\u8be5\u6a21\u5f0f\u3002\u53ef\u5c06\u8be5\u884c\u4e3a\u62bd\u53d6\u5230\u5355\u72ec\u7684\u8bbf\u95ee\u8005\u7c7b\u4e2d\uff0c\u53ea\u9700\u5b9e\u73b0\u63a5\u6536\u76f8\u5173\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u7684\u8bbf\u95ee\u8005\u65b9\u6cd5\u5e76\u5c06\u5176\u4ed6\u65b9\u6cd5\u7559\u7a7a\u5373\u53ef\u3002 \u8bbf\u95ee\u8005\u6a21\u5f0f\u9002\u7528\u4e8e\u6570\u636e\u7ed3\u6784\u76f8\u5bf9\u7a33\u5b9a\u7684\u7cfb\u7edf\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/#_3","text":"\u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002\u4f60\u53ef\u4ee5\u5f15\u5165\u5728\u4e0d\u540c\u7c7b\u5bf9\u8c61\u4e0a\u6267\u884c\u7684\u65b0\u884c\u4e3a\uff0c\u4e14\u65e0\u9700\u5bf9\u8fd9\u4e9b\u7c7b\u505a\u51fa\u4fee\u6539\u3002 \u7b26\u5408\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002\u53ef\u5c06\u540c\u4e00\u884c\u4e3a\u7684\u4e0d\u540c\u7248\u672c\u79fb\u5230\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002 \u8bbf\u95ee\u8005\u5bf9\u8c61\u53ef\u4ee5\u5728\u4e0e\u5404\u79cd\u5bf9\u8c61\u4ea4\u4e92\u65f6\u6536\u96c6\u4e00\u4e9b\u6709\u7528\u7684\u4fe1\u606f\u3002\u5f53\u4f60\u60f3\u8981\u904d\u5386\u4e00\u4e9b\u590d\u6742\u7684\u5bf9\u8c61\u7ed3\u6784\uff08\u4f8b\u5982\u5bf9\u8c61\u6811\uff09\uff0c\u5e76\u5728\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u5e94\u7528\u8bbf\u95ee\u8005\u65f6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002 \u589e\u52a0\u65b0\u7684\u64cd\u4f5c\u5f88\u5bb9\u6613\uff0c\u53ea\u9700\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8bbf\u95ee\u8005\u5373\u53ef\u3002","title":"\u6a21\u5f0f\u4f18\u70b9"},{"location":"Programming/04.%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%20%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/#_4","text":"\u5728\u8bbf\u95ee\u8005\u4e0e\u67d0\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u6ca1\u6709\u8bbf\u95ee\u5143\u7d20\u79c1\u6709\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5\u7684\u5fc5\u8981\u6743\u9650\u3002 \u6539\u53d8\u6570\u636e\u7ed3\u6784\u53d8\u5f97\u56f0\u96be\uff0c\u8981\u6539\u53d8\u6570\u636e\u7ed3\u6784\u5fc5\u987b\u66f4\u65b0\u6240\u6709\u7684\u8bbf\u95ee\u8005\u3002 Visitor.h /* * \u8bbf\u95ee\u8005\u6a21\u5f0f */ #pragma once #include <iostream> #include <memory> #include <list> class Visitor ; //\u7ec4\u6210Computer\u7684\u5404\u7ec4\u4ef6\u57fa\u7c7b class Element { public : Element ( std :: string name ) : name_ ( name ) { } virtual ~ Element () = default ; std :: string GetName () const { return name_ ; } //\u7ec4\u4ef6\u63a5\u53d7\u8bbf\u95ee\u8005\u8bbf\u95ee\u7684\u63a5\u53e3 virtual void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) = 0 ; private : //\u7ec4\u4ef6\u7684\u6807\u8bc6\u540d\u79f0 std :: string name_ ; }; //\u8bbf\u95ee\u8005\u57fa\u7c7b\uff0c\u9488\u5bf9\u4e0d\u540c\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e0d\u540c\u7684\u8bbf\u95ee\u63a5\u53e3 class Visitor { public : Visitor () = default ; virtual ~ Visitor () = default ; virtual void VisitCPU ( std :: shared_ptr < Element > pEle ) = 0 ; virtual void VisitGPU ( std :: shared_ptr < Element > pEle ) = 0 ; virtual void VisitDISK ( std :: shared_ptr < Element > pEle ) = 0 ; }; //Computer\u7c7b\uff0c\u7531\u5404\u7ec4\u4ef6\u7ec4\u6210\uff0c\u8bbf\u95ee\u8005\u8bbf\u95eeComputer\u65f6\u5c06\u4f9d\u6b21\u8bbf\u95ee\u5404\u7ec4\u4ef6 class Computer { public : Computer () = default ; virtual ~ Computer () = default ; void AddElement ( std :: shared_ptr < Element > pEle ) { list_ele_ . push_back ( pEle ); } void DelElement ( std :: shared_ptr < Element > pEle ) { list_ele_ . remove ( pEle ); } //\u8bbf\u95ee\u8005\u8bbf\u95eeComputer\u65f6\u5c06\u4f9d\u6b21\u8bbf\u95ee\u5404\u7ec4\u4ef6 void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { for ( auto pElement : list_ele_ ) { pElement -> AcceptVisitor ( pVisitor ); } } private : std :: list < std :: shared_ptr < Element >> list_ele_ ; }; //\u8bbf\u95ee\u8005\u5b9e\u73b0\u7c7b\uff0c\u5b9e\u73b0\u5404\u81ea\u7684\u8bbf\u95ee\u65b9\u6cd5 class VisitorA : public Visitor { public : VisitorA () = default ; ~ VisitorA () = default ; virtual void VisitCPU ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A record CPU's name:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitGPU ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A do nothing to GPU:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitDISK ( std :: shared_ptr < Element > pEle ) override { printf ( \"Visitor A change DISK:%s \\n \" , pEle -> GetName (). c_str ()); } }; class VisitorB : public Visitor { public : VisitorB () = default ; ~ VisitorB () = default ; void VisitCPU ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B do nothing to CPU:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitGPU ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B record GPU's name:%s \\n \" , pEle -> GetName (). c_str ()); } void VisitDISK ( std :: shared_ptr < Element > pEle ) { printf ( \"Visitor B do nothing to DISK:%s \\n \" , pEle -> GetName (). c_str ()); } }; //\u7ec4\u4ef6\u7684\u5b9e\u73b0\u7c7b\uff0c\u8c03\u7528\u8bbf\u95ee\u8005\u76f8\u5e94\u7684\u8bbf\u95ee\u65b9\u6cd5 class CPU : public Element , public std :: enable_shared_from_this < CPU > { public : CPU ( std :: string strName ) : Element ( strName ) {} ~ CPU () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitCPU ( shared_from_this ()); } }; class GPU : public Element , public std :: enable_shared_from_this < GPU > { public : GPU ( std :: string strName ) : Element ( strName ) {} ~ GPU () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitGPU ( shared_from_this ()); } }; class Disk : public Element , public std :: enable_shared_from_this < Disk > { public : Disk ( std :: string strName ) : Element ( strName ) {} ~ Disk () = default ; void AcceptVisitor ( std :: shared_ptr < Visitor > pVisitor ) { pVisitor -> VisitDISK ( shared_from_this ()); } }; main.cpp #include <iostream> #include \"Visitor.h\" int main () { Computer computer ; computer . AddElement ( std :: make_shared < CPU > ( \"i9-10980XE\" )); computer . AddElement ( std :: make_shared < GPU > ( \"Titan RTX\" )); computer . AddElement ( std :: make_shared < Disk > ( \"HOF PRO M.2\" )); std :: shared_ptr < VisitorA > visitorA = std :: make_shared < VisitorA > (); std :: shared_ptr < VisitorB > visitorB = std :: make_shared < VisitorB > (); computer . AcceptVisitor ( visitorA ); computer . AcceptVisitor ( visitorB ); return 0 ; }","title":"\u6a21\u5f0f\u7f3a\u70b9"},{"location":"Programming/05.%20Windows/MFC%20%E5%86%99%E6%96%87%E4%BB%B6/","text":"CString info = _T ( \"\" ); m_editOutput . GetWindowText ( info ); CFile fileObject ( strFilePath , CFile :: modeReadWrite | CFile :: modeCreate ); BYTE UH [] = { 0xff , 0xfe }; //UNICODE\u6807\u8bb0\uff0c\u5426\u5219\u4e2d\u6587\u4f1a\u4e71\u7801 fileObject . Write ( UH , 2 ); fileObject . Write ( info . GetBuffer ( 0 ), info . GetLength () * 2 ); //Unicode\u957f\u5ea6\u5e94 \u00d72 fileObject . Close ();","title":"MFC \u5199\u6587\u4ef6"},{"location":"Programming/05.%20Windows/MFC%20%E8%AF%BB%E5%8F%96%20Excel/","text":"\u53c2\u8003\u94fe\u63a5\uff1a https://blog.csdn.net/cai_niaocainiao/article/details/81806928 \u9664Excel\u76f8\u5173\u5934\u6587\u4ef6\u5916\uff0c\u5fc5\u987b\u5305\u542b\u81ea\u52a8\u5316\u7c7b\u5934\u6587\u4ef6\uff1a #include <afxdisp.h> // MFC \u81ea\u52a8\u5316\u7c7b \u5728\u6253\u5f00Excel\u4e4b\u524d\u5e94\u521d\u59cb\u5316COM\u7ec4\u4ef6\uff1a HRESULT hr = CoInitialize ( NULL ); //\u521d\u59cb\u5316COM\u7ec4\u4ef6\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8Excel\u7a0b\u5e8f if ( FAILED ( hr )) AfxMessageBox ( _T ( \"Failed to call Coinitialize()\" )); \u9000\u51fa\u65f6\u5e94\u91ca\u653eExcel\u76f8\u5173\u8d44\u6e90\uff1a // \u91ca\u653e\u5bf9\u8c61 m_ExcelBooks . ReleaseDispatch (); m_ExcelBook . ReleaseDispatch (); m_ExcelSheets . ReleaseDispatch (); m_ExcelSheet . ReleaseDispatch (); m_ExcelRange . ReleaseDispatch (); m_UsedRange . ReleaseDispatch (); m_ExcelApp . Quit (); // \u9000\u51fa Excel \u7a0b\u5e8f\uff0c\u6ce8\u610f\u8fd9\u91cc\u8981\u5148\u9000\u51fa\uff0c\u540e\u91ca\u653e m_ExcelApp . ReleaseDispatch (); \u6700\u540e\u6e05\u7406COM\u7ec4\u4ef6\uff1a CoUninitialize (); //\u5fc5\u987b\u4e0eCoInitialize\u6210\u5bf9\u4f7f\u7528 Excel\u6253\u5f00\u6587\u4ef6\uff1a bool ExcelParser::open ( const CString & strFilePath ) { if ( ! m_ExcelApp . CreateDispatch ( _T ( \"Excel.Application\" ), nullptr )) { AfxMessageBox ( _T ( \"\u65e0\u6cd5\u542f\u52a8Excel\u670d\u52a1\u5668!\" )); return false ; } LPDISPATCH lpDisp ; COleVariant covOptional ( static_cast < long > ( DISP_E_PARAMNOTFOUND ), VT_ERROR ); m_ExcelBooks . AttachDispatch ( m_ExcelApp . get_Workbooks ()); lpDisp = m_ExcelBooks . Open ( strFilePath , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional ); //\u5f97\u5230Workbook m_ExcelBook . AttachDispatch ( lpDisp ); //\u5f97\u5230Worksheets m_ExcelSheets . AttachDispatch ( m_ExcelBook . get_Worksheets ()); m_lSheetsCount = m_ExcelSheets . get_Count (); //lpDisp = m_ExcelBook.get_ActiveSheet(); //\u9ed8\u8ba4\u9009\u62e9\u7b2c\u4e00\u4e2asheet lpDisp = m_ExcelSheets . get_Item ( COleVariant ( long ( 1 ))); m_ExcelSheet . AttachDispatch ( lpDisp ); //\u83b7\u53d6\u884c\u6570\u3001\u5217\u6570 lpDisp = m_ExcelSheet . get_UsedRange (); m_UsedRange . AttachDispatch ( lpDisp ); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Rows ()); m_lRowsCount = m_ExcelRange . get_Count (); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Columns ()); m_lColsCount = m_ExcelRange . get_Count (); return true ; } Excel\u5217\u53f7\u8f6c\u4e3a\u5b57\u7b26\u8868\u793a\uff1a CString ExcelParser::get_col_index_string ( long lColIndex ) { CString strCol = _T ( \"\" ); long index = lColIndex - 1 ; do { CString strTmp = _T ( \"\" ); if ( ! strCol . IsEmpty ()) { index -- ; } strTmp . Format ( _T ( \"%c\" ), index % 26 + 'A' ); strCol = strTmp + strCol ; index /= 26 ; } while ( index > 0 ); return strCol ; } Excel\u63d2\u5165Sheet\uff1a //add execl sheet COleVariant after ; after . vt = VT_DISPATCH ; after . pdispVal = sheets . GetItem ( COleVariant (( short )( iSheetNum -1 ))); //\u5728\u6700\u540e\u4e00\u4e2asheet\u4e4b\u540e\u6dfb\u52a0sheet\u9875 lpDisp = sheets . Add ( covOptional , after , covOptional , covOptional ); \u4e00\u4e2a\u57fa\u7840\u7684Excel\u89e3\u6790\u7c7b\uff1a #pragma once /************************************************************************************** * Excel\u6587\u4ef6\u89e3\u6790\u7c7b\u5b9a\u4e49 * * \u7c7b\u540d\uff1aExcelParser * * \u7528\u9014\uff1a\u63d0\u4f9b\u89e3\u6790Excel\u6587\u4ef6\u9700\u8981\u7684\u529f\u80fd\u63a5\u53e3 * * \u7528\u6cd5\uff1a\u672c\u7c7b\u9664\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u5916\uff0c\u53ea\u6709\u4e00\u4e2a\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3 \u2014\u2014 start_check\uff0c\u5728\u5916\u90e8\u53ea\u9700\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b * \u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528 start_check \u63a5\u53e3\u5373\u53ef\uff0c\u6240\u6709\u68c0\u6d4b\u7684\u903b\u8f91\u5728\u672c\u7c7b\u5185\u5b8c\u6210 **************************************************************************************/ #include \"ExcelHeader/CApplication.h\" #include \"ExcelHeader/CRange.h\" #include \"ExcelHeader/CWorkbook.h\" #include \"ExcelHeader/CWorkbooks.h\" #include \"ExcelHeader/CWorksheet.h\" #include \"ExcelHeader/CWorksheets.h\" class ExcelParser final { public : ExcelParser (); ~ ExcelParser (); ExcelParser ( const ExcelParser & ) = delete ; bool operator = ( const ExcelParser & ) = delete ; bool open ( const CString & strFilePath ); //\u6253\u5f00Excel\u6587\u4ef6\uff0c\u83b7\u53d6\u8868\u683c\u884c\u6570\u3001\u5217\u6570 void release (); //\u91ca\u653e\u8d44\u6e90\uff0c\u7ed3\u675fExcel\u7a0b\u5e8f long get_row_count () const { return m_lRowsCount ; } //\u83b7\u53d6\u884c\u6570 long get_col_count () const { return m_lColsCount ; } //\u83b7\u53d6\u5217\u6570 CString get_cell_str_data ( long lRowIndex , long lColIndex ); //\u83b7\u53d6\u76ee\u6807\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32\u6570\u636e bool put_str_data_to_cell ( long lRowIndex , long lColIndex , CString strData ); //\u5c06\u5b57\u7b26\u4e32\u6570\u636e\u5199\u5165\u76ee\u6807\u5355\u5143\u683c bool is_valid_cell ( long lRowIndex , long lColIndex ); //\u68c0\u6d4b\u76ee\u6807\u5355\u5143\u683c\u662f\u5426\u6709\u6548 static CString get_col_index_string ( long lColIndex ); //\u5c06Excel\u5217\u53f7\u8f6c\u4e3a\u5b57\u7b26\u5f62\u5f0f void select_sheet_by_index ( long lSheetIndex ); //\u6839\u636e\u7d22\u5f15\u8bbe\u7f6e\u5f53\u524d\u64cd\u4f5c\u7684Sheet void copy_sheet ( long lSrcIndex ); //\u590d\u5236sheet\u5185\u5bb9 private : CApplication m_ExcelApp ; // Excel \u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3 CWorkbook m_ExcelBook ; // \u5de5\u4f5c\u7c3f CWorkbooks m_ExcelBooks ; // \u5de5\u4f5c\u7c3f\u96c6\u5408 CWorksheet m_ExcelSheet ; // \u5de5\u4f5c\u8868 CWorksheets m_ExcelSheets ; // \u5de5\u4f5c\u8868\u96c6\u5408 CRange m_ExcelRange ; // \u7528\u4e8e\u5bf9\u5355\u5143\u683c\u8fdb\u884c\u64cd\u4f5c CRange m_UsedRange ; long m_lRowsCount ; //\u8868\u683c\u603b\u884c\u6570 long m_lColsCount ; //\u8868\u683c\u603b\u5217\u6570 long m_lSheetsCount ; //Sheet\u603b\u6570 }; \u5b9a\u4e49\u6587\u4ef6\uff1a #include \"pch.h\" #include \"ExcelParser.h\" ExcelParser :: ExcelParser () : m_lRowsCount ( 0 ), m_lColsCount ( 0 ), m_lSheetsCount ( 0 ) { CoInitialize ( nullptr ); //\u521d\u59cb\u5316COM\u7ec4\u4ef6\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8Excel\u7a0b\u5e8f } ExcelParser ::~ ExcelParser () { release (); CoUninitialize (); //\u5fc5\u987b\u4e0eCoInitialize\u6210\u5bf9\u4f7f\u7528 } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::open * * \u4f5c\u7528\uff1a\u6253\u5f00Excel\u6587\u4ef6\uff0c\u83b7\u53d6\u8868\u683c\u884c\u6570\u3001\u5217\u6570 * * \u53c2\u6570\uff1a1.strFilePath ---- Excel\u6587\u4ef6\u8def\u5f84 * * \u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56detrue\uff1b\u5426\u5219\u8fd4\u56defalse * **************************************************************************************/ bool ExcelParser :: open ( const CString & strFilePath ) { if ( ! m_ExcelApp . CreateDispatch ( _T ( \"Excel.Application\" ), nullptr )) { AfxMessageBox ( _T ( \"\u65e0\u6cd5\u542f\u52a8Excel\u670d\u52a1\u5668!\" )); return false ; } LPDISPATCH lpDisp ; COleVariant covOptional ( static_cast < long > ( DISP_E_PARAMNOTFOUND ), VT_ERROR ); m_ExcelBooks . AttachDispatch ( m_ExcelApp . get_Workbooks ()); lpDisp = m_ExcelBooks . Open ( strFilePath , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional , covOptional ); //\u5f97\u5230Workbook m_ExcelBook . AttachDispatch ( lpDisp ); //\u5f97\u5230Worksheets m_ExcelSheets . AttachDispatch ( m_ExcelBook . get_Worksheets ()); m_lSheetsCount = m_ExcelSheets . get_Count (); //lpDisp = m_ExcelBook.get_ActiveSheet(); //\u9ed8\u8ba4\u9009\u62e9\u7b2c\u4e00\u4e2asheet lpDisp = m_ExcelSheets . get_Item ( COleVariant ( long ( 1 ))); m_ExcelSheet . AttachDispatch ( lpDisp ); //\u83b7\u53d6\u884c\u6570\u3001\u5217\u6570 lpDisp = m_ExcelSheet . get_UsedRange (); m_UsedRange . AttachDispatch ( lpDisp ); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Rows ()); m_lRowsCount = m_ExcelRange . get_Count (); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Columns ()); m_lColsCount = m_ExcelRange . get_Count (); return true ; } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::release * * \u4f5c\u7528\uff1a\u91ca\u653e\u8d44\u6e90\uff0c\u7ed3\u675fExcel\u7a0b\u5e8f * * \u53c2\u6570\uff1a\u65e0 * * \u8fd4\u56de\u503c\uff1a\u65e0 * **************************************************************************************/ void ExcelParser :: release () { // \u91ca\u653e\u5bf9\u8c61 m_ExcelBooks . ReleaseDispatch (); m_ExcelBook . ReleaseDispatch (); m_ExcelSheets . ReleaseDispatch (); m_ExcelSheet . ReleaseDispatch (); m_ExcelRange . ReleaseDispatch (); m_UsedRange . ReleaseDispatch (); m_ExcelApp . Quit (); // \u9000\u51fa Excel \u7a0b\u5e8f\uff0c\u6ce8\u610f\u8fd9\u91cc\u8981\u5148\u9000\u51fa\uff0c\u540e\u91ca\u653e m_ExcelApp . ReleaseDispatch (); } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::get_cell_str_data * * \u4f5c\u7528\uff1a\u83b7\u53d6\u76ee\u6807\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32\u6570\u636e\uff0c\u82e5\u5355\u5143\u683c\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 * * \u53c2\u6570\uff1a1.lRowIndex ---- \u76ee\u6807\u5355\u5143\u683c\u884c\u53f7 * 2.lColIndex ---- \u76ee\u6807\u5355\u5143\u683c\u5217\u53f7 * * \u8fd4\u56de\u503c\uff1a\u5355\u5143\u683c\u4e2d\u7684\u5b57\u7b26\u4e32 * **************************************************************************************/ CString ExcelParser :: get_cell_str_data ( long lRowIndex , long lColIndex ) { CString strData = _T ( \"\" ); if ( lRowIndex < 1 || lRowIndex > m_lRowsCount || lColIndex < 1 || lColIndex > m_lColsCount ) { return strData ; } COleVariant vResult ; //COleVariant\u7c7b\u662f\u5bf9VARIANT\u7ed3\u6784\u7684\u5c01\u88c5 CRange cellRange ; cellRange . AttachDispatch ( m_ExcelSheet . get_Cells ()); cellRange . AttachDispatch ( cellRange . get_Item ( COleVariant ( lRowIndex ), COleVariant ( lColIndex )). pdispVal ); vResult = cellRange . get_Value2 (); if ( VT_BSTR != vResult . vt ) { cellRange . ReleaseDispatch (); return strData ; } strData = static_cast < CString > ( vResult . bstrVal ); cellRange . ReleaseDispatch (); return strData ; } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::put_str_data_to_cell * * \u4f5c\u7528\uff1a\u5c06\u5b57\u7b26\u4e32\u6570\u636e\u5199\u5165\u76ee\u6807\u5355\u5143\u683c * * \u53c2\u6570\uff1a1.lRowIndex ---- \u76ee\u6807\u5355\u5143\u683c\u884c\u53f7 * 2.lColIndex ---- \u76ee\u6807\u5355\u5143\u683c\u5217\u53f7 * 3.strData ---- \u8981\u5199\u5165\u7684\u5b57\u7b26\u4e32 * * \u8fd4\u56de\u503c\uff1a\u5355\u5143\u683c\u4e3a\u7a7a\u8fd4\u56defalse\uff0c\u5426\u5219\u8fd4\u56detrue * **************************************************************************************/ bool ExcelParser :: put_str_data_to_cell ( long lRowIndex , long lColIndex , CString strData ) { if ( lRowIndex < 1 || lRowIndex > m_lRowsCount || lColIndex < 1 || lColIndex > m_lColsCount ) { return false ; } CRange cellRange ; cellRange . AttachDispatch ( m_UsedRange . get_Item ( COleVariant ( lRowIndex ), COleVariant ( lColIndex )). pdispVal ); //COleVariant vResult = cellRange.get_Value2(); cellRange . put_Value2 ( COleVariant ( strData )); cellRange . ReleaseDispatch (); m_ExcelBook . Save (); return true ; } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::is_valid_cell * * \u4f5c\u7528\uff1a\u68c0\u6d4b\u76ee\u6807\u5355\u5143\u683c\u662f\u5426\u6709\u6548\uff08\u5355\u5143\u683c\u4e3a\u7a7a\u89c6\u4e3a\u65e0\u6548\uff09 * * \u53c2\u6570\uff1a1.lRowIndex ---- \u76ee\u6807\u5355\u5143\u683c\u884c\u53f7 * 2.lColIndex ---- \u76ee\u6807\u5355\u5143\u683c\u5217\u53f7 * * \u8fd4\u56de\u503c\uff1a\u5355\u5143\u683c\u4e3a\u7a7a\u8fd4\u56defalse\uff0c\u5426\u5219\u8fd4\u56detrue * **************************************************************************************/ bool ExcelParser :: is_valid_cell ( long lRowIndex , long lColIndex ) { if ( lRowIndex < 1 || lRowIndex > m_lRowsCount || lColIndex < 1 || lColIndex > m_lColsCount ) { return false ; } COleVariant vResult ; //COleVariant\u7c7b\u662f\u5bf9VARIANT\u7ed3\u6784\u7684\u5c01\u88c5 CRange cellRange ; cellRange . AttachDispatch ( m_ExcelSheet . get_Cells ()); cellRange . AttachDispatch ( cellRange . get_Item ( COleVariant ( lRowIndex ), COleVariant ( lColIndex )). pdispVal ); vResult = cellRange . get_Value2 (); cellRange . ReleaseDispatch (); if ( VT_EMPTY == vResult . vt ) { return false ; } return true ; } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::get_col_index_string * * \u4f5c\u7528\uff1a\u5c06Excel\u5217\u53f7\u8f6c\u4e3a\u5b57\u7b26\u5f62\u5f0f * * \u53c2\u6570\uff1a1.lColIndex ---- \u5217\u53f7 * * \u8fd4\u56de\u503c\uff1a\u5217\u53f7\u7684\u5b57\u7b26\u5f62\u5f0f\uff0c\u5982\uff1a1\u8f6c\u4e3aA\uff0c2\u8f6c\u4e3aB\uff0c27\u8f6c\u4e3aAA * * \u6ce8\u610f\uff1a\u6b64\u51fd\u6570\u4e3a\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 * **************************************************************************************/ CString ExcelParser :: get_col_index_string ( long lColIndex ) { CString strCol = _T ( \"\" ); long index = lColIndex - 1 ; do { CString strTmp = _T ( \"\" ); if ( ! strCol . IsEmpty ()) { index -- ; } strTmp . Format ( _T ( \"%c\" ), index % 26 + 'A' ); strCol = strTmp + strCol ; index /= 26 ; } while ( index > 0 ); return strCol ; } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::select_sheet_by_index * * \u4f5c\u7528\uff1a\u6839\u636e\u7d22\u5f15\u8bbe\u7f6e\u5f53\u524d\u64cd\u4f5c\u7684Sheet * * \u53c2\u6570\uff1a1.lSheetIndex ---- \u7d22\u5f15\u53f7\uff0c\u4ece1\u5f00\u59cb * * \u8fd4\u56de\u503c\uff1a\u65e0 * **************************************************************************************/ void ExcelParser :: select_sheet_by_index ( long lSheetIndex ) { //\u5f97\u5230Worksheets m_ExcelSheets . ReleaseDispatch (); m_ExcelSheets . AttachDispatch ( m_ExcelBook . get_Worksheets ()); m_lSheetsCount = m_ExcelSheets . get_Count (); m_ExcelSheet . ReleaseDispatch (); LPDISPATCH lpDisp ; lpDisp = m_ExcelSheets . get_Item ( COleVariant ( lSheetIndex )); m_ExcelSheet . AttachDispatch ( lpDisp ); //\u83b7\u53d6\u884c\u6570\u3001\u5217\u6570 m_UsedRange . ReleaseDispatch (); lpDisp = m_ExcelSheet . get_UsedRange (); m_UsedRange . AttachDispatch ( lpDisp ); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Rows ()); m_lRowsCount = m_ExcelRange . get_Count (); m_ExcelRange . ReleaseDispatch (); m_ExcelRange . AttachDispatch ( m_UsedRange . get_Columns ()); m_lColsCount = m_ExcelRange . get_Count (); } /************************************************************************************** * \u51fd\u6570\u540d\uff1aExcelParser::copy_sheet * * \u4f5c\u7528\uff1a\u6839\u636e\u7d22\u5f15\u6307\u5b9a\u7684Sheet\u590d\u5236\u4e00\u4efd\uff0c\u65b0\u7684 Worksheet \u7d27\u8ddf\u5728\u539f\u6709\u7684 Worksheet \u4e4b\u540e * * \u53c2\u6570\uff1a1.lSrcIndex ---- \u7d22\u5f15\u53f7\uff0c\u4ece1\u5f00\u59cb * * \u8fd4\u56de\u503c\uff1a\u65e0 * **************************************************************************************/ void ExcelParser :: copy_sheet ( long lSrcIndex ) { LPDISPATCH lpDisp ; CWorksheet sheetSrc ; lpDisp = m_ExcelSheets . get_Item ( COleVariant ( lSrcIndex )); sheetSrc . AttachDispatch ( lpDisp ); COleVariant temp ; temp . pdispVal = sheetSrc . m_lpDispatch ; temp . vt = VT_DISPATCH ; //Worksheet \u7684 copy \u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u662f\u79fb\u52a8\u7684\u4f4d\u7f6e\uff0c\u5728\u54ea\u4e2a Worksheet \u524d\uff0c\u5728\u54ea\u4e2a Worksheet \u540e\u3002 //\u5982\u679c\u4e24\u4e2a\u53c2\u6570\u90fd\u4e0d\u6307\u5b9a\uff0c\u5219\u662f\u590d\u5236\u5230\u65b0\u7684 Worksheet \u4e2d\uff0c\u8fd9\u4e2a\u65b0\u7684 Worksheet \u662f\u6240\u6709 Worksheet \u7684\u6700\u540e\u4e00\u4e2a //sheetSrc.Copy(vtMissing, temp); sheetSrc . Copy ( vtMissing , _variant_t ( sheetSrc )); sheetSrc . ReleaseDispatch (); m_ExcelBook . Save (); }","title":"MFC \u8bfb\u53d6 Excel"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/","text":"\u65b9\u6cd5\u540d\u79f0\uff1a \u4f4d\u7f6e\uff1aKernel32.dll OpenProcess \u51fd\u6570\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u8fdb\u7a0b\u7684\u53e5\u67c4\u3002 \u51fd\u6570\u539f\u578b HANDLE OpenProcess ( DWORD dwDesiredAccess , BOOL bInheritHandle , DWORD dwProcessId ); \u53c2\u6570 dwDesiredAccess \uff1a\u60f3\u62e5\u6709\u7684\u8be5\u8fdb\u7a0b\u8bbf\u95ee\u6743\u9650 PROCESS_ALL_ACCESS //\u6240\u6709\u80fd\u83b7\u5f97\u7684\u6743\u9650 PROCESS_CREATE_PROCESS //\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b PROCESS_CREATE_THREAD //\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b PROCESS_DUP_HANDLE //\u91cd\u590d\u4f7f\u7528DuplicateHandle\u53e5\u67c4 PROCESS_QUERY_INFORMATION //\u83b7\u5f97\u8fdb\u7a0b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u5b83\u7684\u9000\u51fa\u4ee3\u7801\u3001\u4f18\u5148\u7ea7 PROCESS_QUERY_LIMITED_INFORMATION /*\u83b7\u5f97\u67d0\u4e9b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u679c\u83b7\u5f97\u4e86PROCESS_QUERY_INFORMATION\uff0c\u4e5f\u62e5\u6709PROCESS_QUERY_LIMITED_INFORMATION\u6743\u9650*/ PROCESS_SET_INFORMATION //\u8bbe\u7f6e\u67d0\u4e9b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u8fdb\u7a0b\u4f18\u5148\u7ea7 PROCESS_SET_QUOTA //\u8bbe\u7f6e\u5185\u5b58\u9650\u5236\u7684\u6743\u9650\uff0c\u4f7f\u7528SetProcessWorkingSetSize PROCESS_SUSPEND_RESUME //\u6682\u505c\u6216\u6062\u590d\u8fdb\u7a0b\u7684\u6743\u9650 PROCESS_TERMINATE //\u7ec8\u6b62\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6743\u9650\uff0c\u4f7f\u7528TerminateProcess PROCESS_VM_OPERATION //\u64cd\u4f5c\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650(\u53ef\u7528VirtualProtectEx\u548cWriteProcessMemory) PROCESS_VM_READ //\u8bfb\u53d6\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650\uff0c\u53ef\u4f7f\u7528ReadProcessMemory PROCESS_VM_WRITE //\u8bfb\u53d6\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650\uff0c\u53ef\u4f7f\u7528WriteProcessMemory SYNCHRONIZE //\u7b49\u5f85\u8fdb\u7a0b\u7ec8\u6b62 bInheritHandle \uff1a\u8868\u793a\u6240\u5f97\u5230\u7684\u8fdb\u7a0b\u53e5\u67c4\u662f\u5426\u53ef\u4ee5\u88ab\u7ee7\u627f dwProcessId \uff1a\u88ab\u6253\u5f00\u8fdb\u7a0b\u7684PID \u8fd4\u56de\u7c7b\u578b \u5982\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u6307\u5b9a\u8fdb\u7a0b\u7684\u53e5\u67c4\u3002 \u5982\u5931\u8d25\uff0c\u8fd4\u56de\u503c\u4e3a NULL \uff0c\u53ef\u8c03\u7528 GetLastError() \u83b7\u5f97\u9519\u8bef\u4ee3\u7801\u3002 \u901a\u8fc7\u4e00\u4e2a\u8fdb\u7a0b\u5173\u95ed\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u4e00\u822c\u7684\u505a\u6cd5\u5c31\u662f\u679a\u4e3e\u7cfb\u7edf\u6253\u5f00\u7684\u6240\u7528\u8fdb\u7a0b\u7684\u6807\u8bc6\u7b26\uff08PID\uff09\uff0c\u4f7f\u7528 OpenProcess \u51fd\u6570\u83b7\u5f97\u8fdb\u7a0b\u7684\u53e5\u67c4\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u6765\u8bbe\u7f6e\u53e5\u67c4\u7684\u65b0\u7684\u8bbf\u95ee\u6743\u9650\uff08\u4e0d\u6e05\u695a\u53e5\u67c4\u662f\u4e0d\u662f\u548c\u539f\u6765\u7684\u4e00\u6a21\u4e00\u6837\uff1f\u6709\u5f85\u8bc1\u660e\u548c\u5b66\u4e60\uff09\uff0c\u6bd4\u5982\u5982\u679c\u6253\u5f00\u7684\u53e5\u67c4\u4e0d\u5177\u5907\u7ec8\u6b62\u53e5\u67c4\u7684\u6743\u9650\uff0c\u76f4\u7ebf\u7ec8\u6b62\u8fdb\u7a0b\u64cd\u4f5c\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de\u7684\u9519\u8bef\u4ee3\u7801\u4e3a5\uff08\u610f\u601d\u4e3a\u62d2\u7edd\u8bbf\u95ee\uff09\u3002\u901a\u8fc7\u83b7\u5f97\u7684\u53e5\u67c4\u5c31\u53ef\u4ee5\u83b7\u5f97\u8fdb\u7a0b\u540d\u5b57\uff08\u901a\u8fc7 GetModuleBaseName \u51fd\u6570\uff09\uff0c\u901a\u8fc7\u6bd4\u5bf9\u8fdb\u7a0b\u540d\u5b57\u5c31\u53ef\u4ee5\u83b7\u5f97\u6211\u4eec\u6307\u5b9a\u8981\u5173\u95ed\u7684\u8fdb\u7a0b\u3002\u6ce8\uff1a\u8981\u4f7f\u7528 closeHandle \u51fd\u6570\u6765\u524a\u51cf\u8fdb\u7a0b\u8ba1\u6570\u5668\u3002 win8 \u548c win10 \u7cfb\u7edf\u4e0b\u8981\u901a\u8fc7 OpenProcess \u51fd\u6570\u83b7\u53d6\u8fdb\u7a0b\u53e5\u67c4\u6765\u7ed3\u675f\u8fdb\u7a0b\u53ef\u80fd\u5931\u8d25\uff0c GetLastError \u83b7\u53d6\u5230\u7684\u9519\u8bef\u7801\u4e3a 5\uff08\u62d2\u7edd\u8bbf\u95ee\uff09\uff0c\u6743\u9650\u95ee\u9898\u3002 \u5c06\u53c2\u6570 PROCESS_ALL_ACCESS \u6539\u4e3a PROCESS_TERMINATE \u3002","title":"OpenProcess() \u51fd\u6570"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#_1","text":"HANDLE OpenProcess ( DWORD dwDesiredAccess , BOOL bInheritHandle , DWORD dwProcessId );","title":"\u51fd\u6570\u539f\u578b"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#_2","text":"","title":"\u53c2\u6570"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#dwdesiredaccess","text":"PROCESS_ALL_ACCESS //\u6240\u6709\u80fd\u83b7\u5f97\u7684\u6743\u9650 PROCESS_CREATE_PROCESS //\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b PROCESS_CREATE_THREAD //\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b PROCESS_DUP_HANDLE //\u91cd\u590d\u4f7f\u7528DuplicateHandle\u53e5\u67c4 PROCESS_QUERY_INFORMATION //\u83b7\u5f97\u8fdb\u7a0b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u5b83\u7684\u9000\u51fa\u4ee3\u7801\u3001\u4f18\u5148\u7ea7 PROCESS_QUERY_LIMITED_INFORMATION /*\u83b7\u5f97\u67d0\u4e9b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u679c\u83b7\u5f97\u4e86PROCESS_QUERY_INFORMATION\uff0c\u4e5f\u62e5\u6709PROCESS_QUERY_LIMITED_INFORMATION\u6743\u9650*/ PROCESS_SET_INFORMATION //\u8bbe\u7f6e\u67d0\u4e9b\u4fe1\u606f\u7684\u6743\u9650\uff0c\u5982\u8fdb\u7a0b\u4f18\u5148\u7ea7 PROCESS_SET_QUOTA //\u8bbe\u7f6e\u5185\u5b58\u9650\u5236\u7684\u6743\u9650\uff0c\u4f7f\u7528SetProcessWorkingSetSize PROCESS_SUSPEND_RESUME //\u6682\u505c\u6216\u6062\u590d\u8fdb\u7a0b\u7684\u6743\u9650 PROCESS_TERMINATE //\u7ec8\u6b62\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6743\u9650\uff0c\u4f7f\u7528TerminateProcess PROCESS_VM_OPERATION //\u64cd\u4f5c\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650(\u53ef\u7528VirtualProtectEx\u548cWriteProcessMemory) PROCESS_VM_READ //\u8bfb\u53d6\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650\uff0c\u53ef\u4f7f\u7528ReadProcessMemory PROCESS_VM_WRITE //\u8bfb\u53d6\u8fdb\u7a0b\u5185\u5b58\u7a7a\u95f4\u7684\u6743\u9650\uff0c\u53ef\u4f7f\u7528WriteProcessMemory SYNCHRONIZE //\u7b49\u5f85\u8fdb\u7a0b\u7ec8\u6b62","title":"dwDesiredAccess\uff1a\u60f3\u62e5\u6709\u7684\u8be5\u8fdb\u7a0b\u8bbf\u95ee\u6743\u9650"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#binherithandle","text":"","title":"bInheritHandle\uff1a\u8868\u793a\u6240\u5f97\u5230\u7684\u8fdb\u7a0b\u53e5\u67c4\u662f\u5426\u53ef\u4ee5\u88ab\u7ee7\u627f"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#dwprocessidpid","text":"","title":"dwProcessId\uff1a\u88ab\u6253\u5f00\u8fdb\u7a0b\u7684PID"},{"location":"Programming/05.%20Windows/OpenProcess%28%29%20%E5%87%BD%E6%95%B0/#_3","text":"\u5982\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a\u6307\u5b9a\u8fdb\u7a0b\u7684\u53e5\u67c4\u3002 \u5982\u5931\u8d25\uff0c\u8fd4\u56de\u503c\u4e3a NULL \uff0c\u53ef\u8c03\u7528 GetLastError() \u83b7\u5f97\u9519\u8bef\u4ee3\u7801\u3002 \u901a\u8fc7\u4e00\u4e2a\u8fdb\u7a0b\u5173\u95ed\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u4e00\u822c\u7684\u505a\u6cd5\u5c31\u662f\u679a\u4e3e\u7cfb\u7edf\u6253\u5f00\u7684\u6240\u7528\u8fdb\u7a0b\u7684\u6807\u8bc6\u7b26\uff08PID\uff09\uff0c\u4f7f\u7528 OpenProcess \u51fd\u6570\u83b7\u5f97\u8fdb\u7a0b\u7684\u53e5\u67c4\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u6765\u8bbe\u7f6e\u53e5\u67c4\u7684\u65b0\u7684\u8bbf\u95ee\u6743\u9650\uff08\u4e0d\u6e05\u695a\u53e5\u67c4\u662f\u4e0d\u662f\u548c\u539f\u6765\u7684\u4e00\u6a21\u4e00\u6837\uff1f\u6709\u5f85\u8bc1\u660e\u548c\u5b66\u4e60\uff09\uff0c\u6bd4\u5982\u5982\u679c\u6253\u5f00\u7684\u53e5\u67c4\u4e0d\u5177\u5907\u7ec8\u6b62\u53e5\u67c4\u7684\u6743\u9650\uff0c\u76f4\u7ebf\u7ec8\u6b62\u8fdb\u7a0b\u64cd\u4f5c\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de\u7684\u9519\u8bef\u4ee3\u7801\u4e3a5\uff08\u610f\u601d\u4e3a\u62d2\u7edd\u8bbf\u95ee\uff09\u3002\u901a\u8fc7\u83b7\u5f97\u7684\u53e5\u67c4\u5c31\u53ef\u4ee5\u83b7\u5f97\u8fdb\u7a0b\u540d\u5b57\uff08\u901a\u8fc7 GetModuleBaseName \u51fd\u6570\uff09\uff0c\u901a\u8fc7\u6bd4\u5bf9\u8fdb\u7a0b\u540d\u5b57\u5c31\u53ef\u4ee5\u83b7\u5f97\u6211\u4eec\u6307\u5b9a\u8981\u5173\u95ed\u7684\u8fdb\u7a0b\u3002\u6ce8\uff1a\u8981\u4f7f\u7528 closeHandle \u51fd\u6570\u6765\u524a\u51cf\u8fdb\u7a0b\u8ba1\u6570\u5668\u3002 win8 \u548c win10 \u7cfb\u7edf\u4e0b\u8981\u901a\u8fc7 OpenProcess \u51fd\u6570\u83b7\u53d6\u8fdb\u7a0b\u53e5\u67c4\u6765\u7ed3\u675f\u8fdb\u7a0b\u53ef\u80fd\u5931\u8d25\uff0c GetLastError \u83b7\u53d6\u5230\u7684\u9519\u8bef\u7801\u4e3a 5\uff08\u62d2\u7edd\u8bbf\u95ee\uff09\uff0c\u6743\u9650\u95ee\u9898\u3002 \u5c06\u53c2\u6570 PROCESS_ALL_ACCESS \u6539\u4e3a PROCESS_TERMINATE \u3002","title":"\u8fd4\u56de\u7c7b\u578b"},{"location":"Programming/05.%20Windows/VS2019%20%E7%BC%96%E8%AF%91%E5%99%A8%E9%94%99%E8%AF%AF%E4%B8%8E%E8%AD%A6%E5%91%8A/","text":"https://docs.microsoft.com/zh-cn/cpp/error-messages/compiler-errors-1/compiler-error-c2440?f1url=https%3A%2F%2Fmsdn.microsoft.com%2Fquery%2Fdev15.query%3FappId%3DDev15IDEF1%26l%3DZH-CN%26k%3Dk(C2440)%26rd%3Dtrue&view=msvc-160&viewFallbackFrom=vs-2019","title":"VS2019 \u7f16\u8bd1\u5668\u9519\u8bef\u4e0e\u8b66\u544a"},{"location":"Programming/05.%20Windows/%E5%A4%9A%E7%BA%BF%E7%A8%8B%20CreateThread%20%E5%87%BD%E6%95%B0%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/","text":"\u5f53\u4f7f\u7528 CreateProcess \u8c03\u7528\u65f6\uff0c\u7cfb\u7edf\u5c06\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u548c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002 CreateThread \u5c06\u5728\u4e3b\u7ebf\u7a0b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5927\u81f4\u505a\u5982\u4e0b\u6b65\u9aa4\uff1a 1. \u5728\u5185\u6838\u5bf9\u8c61\u4e2d\u5206\u914d\u4e00\u4e2a\u7ebf\u7a0b\u6807\u8bc6/\u53e5\u67c4\uff0c\u53ef\u4f9b\u7ba1\u7406\uff0c\u7531 CreateThread \u8fd4\u56de 2. \u628a\u7ebf\u7a0b\u9000\u51fa\u7801\u7f6e\u4e3a STILL_ACTIVE \uff0c\u628a\u7ebf\u7a0b\u6302\u8d77\u8ba1\u6570\u7f6e1 3. \u5206\u914d context \u7ed3\u6784 4. \u5206\u914d\u4e24\u9875\u7684\u7269\u7406\u5b58\u50a8\u4ee5\u51c6\u5907\u6808\uff0c\u4fdd\u62a4\u9875\u8bbe\u7f6e\u4e3a PAGE_READWRITE \uff0c\u7b2c2\u9875\u8bbe\u4e3a PAGE_GUARD 5. lpStartAddr \u548c lpvThread \u503c\u88ab\u653e\u5728\u6808\u9876\uff0c\u4f7f\u5b83\u4eec\u6210\u4e3a\u4f20\u9001\u7ed9 StartOfThread \u7684\u53c2\u6570 6. \u628a context \u7ed3\u6784\u7684\u6808\u6307\u9488\u6307\u5411\u6808\u9876\uff08\u7b2c5\u6b65\uff09\u6307\u4ee4\u6307\u9488\u6307\u5411 startOfThread \u51fd\u6570 \u8bed\u6cd5\uff1a hThread = CreateThread(&security_attributes, dwStackSize, ThreadProc,pParam, dwFlags, &idThread) ; HANDLE CreateThread ( LPSECURITY_ATTRIBUTES lpThreadAttributes , \u3000\u3000\u3000\u3000\u3000 // pointer to security attributes DWORD dwStackSize , \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 // initial thread stack size LPTHREAD_START_ROUTINE lpStartAddress , \u3000\u3000\u3000\u3000\u3000\u3000 // pointer to thread function LPVOID lpParameter , \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 // argument for new thread DWORD dwCreationFlags , \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 // creation flags LPDWORD lpThreadId \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 // pointer to receive thread ID ); \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6307\u5411 SECURITY_ATTRIBUTES \u578b\u6001\u7684\u7ed3\u6784\u7684\u6307\u9488\u3002\u5728 Windows 98\u4e2d \u5ffd\u7565\u8be5\u53c2\u6570\u3002\u5728Windows NT \u4e2d\uff0c\u5b83\u88ab\u8bbe\u4e3a NULL \u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7528\u4e8e\u65b0\u7ebf\u7a0b\u7684\u521d\u59cb\u5806\u6808\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0cWindows \u6839\u636e\u9700\u8981\u52a8\u6001\u5ef6\u957f\u5806\u6808\u7684\u5927\u5c0f\u3002 \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6307\u5411\u7ebf\u7a0b\u51fd\u6570\u7684\u6307\u6807\u3002\u51fd\u6570\u540d\u79f0\u6ca1\u6709\u9650\u5236\uff0c\u4f46\u662f\u5fc5\u987b\u4ee5\u4e0b\u5217\u5f62\u5f0f\u58f0\u660e\uff1a DWORD WINAPI ThreadProc (PVOID pParam) ; \u7b2c\u56db\u4e2a\u53c2\u6570\u4e3a\u4f20\u9012\u7ed9 ThreadProc \u7684\u53c2\u6570\u3002\u8fd9\u6837\u4e3b\u7ebf\u7a0b\u548c\u4ece\u5c5e\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u5171\u4eab\u6570\u636e\u3002 \u7b2c\u4e94\u4e2a\u53c2\u6570\u901a\u5e38\u4e3a0\uff0c\u4f46\u5f53\u5efa\u7acb\u7684\u7ebf\u7a0b\u4e0d\u9a6c\u4e0a\u6267\u884c\u65f6\u4e3a\u65d7\u6807 CREATE_SUSPENDED \u3002\u7ebf\u7a0b\u5c06\u6682\u505c\u76f4\u5230\u547c\u53eb ResumeThread \u6765\u6062\u590d\u7ebf\u7a0b\u7684\u6267\u884c\u4e3a\u6b62\u3002 \u7b2c\u516d\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u6807\uff0c\u6307\u5411\u63a5\u53d7\u6267\u884c\u7eeaID\u503c\u7684\u53d8\u91cf\u3002","title":"\u591a\u7ebf\u7a0b CreateThread \u51fd\u6570\u7684\u7528\u6cd5\u53ca\u6ce8\u610f\u4e8b\u9879"},{"location":"Programming/05.%20Windows/%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/","text":"\u5220\u9664\u3001\u590d\u5236\u3001\u91cd\u547d\u540d\u3001\u79fb\u52a8\u6587\u4ef6 Windows \u7cfb\u7edf\u4e3a\u6587\u4ef6\u7684\u5220\u9664\u3001\u590d\u5236\u3001\u91cd\u547d\u540d\u6216\u79fb\u52a8\u6587\u4ef6\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684 API \u51fd\u6570\u3002\u5220\u9664\u6587\u4ef6\u4f7f\u7528 DeleteFile \u51fd\u6570\uff1b\u590d\u5236\u6587\u4ef6\u4f7f\u7528 CopyFile \u51fd\u6570\uff1b\u91cd\u547d\u540d\u6587\u4ef6\u548c\u79fb\u52a8\u6587\u4ef6\u5b9e\u9645\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528 MoveFile \u51fd\u6570\u3002\u8fd9\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u3002 \u5173\u952e API DeleteFile DeleteFile \u7684\u529f\u80fd\u662f\u5220\u9664\u6587\u4ef6\u3002\u4ee5\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u8f93\u5165\uff0c\u6307\u5411\u9700\u8981\u5220\u9664\u7684\u6587\u4ef6\u3002\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4e8e\u201cc\uff1a\\files\\delete.txt\u201d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4e8e\u201c.\\delete.txt\u201d\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u76f8\u5bf9\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\u3002 BOOL DeleteFile(LPCTSTR lpFileName); lpFileName :\u8f93\u5165\u53c2\u6570\uff0c\u6240\u8981\u5220\u9664\u7684\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\u3002 \u8fd4\u56de BOOL \u503c\uff0c\u8868\u793a\u6587\u4ef6\u5220\u9664\u662f\u5426\u6210\u529f\u3002 \u5982\u679c\u7a0b\u5e8f\u8fd4\u56de\u5931\u8d25\uff0c\u53ef\u4ee5\u4f7f\u7528 GetLastError \u51fd\u6570\u83b7\u53d6\u9519\u8bef\u4fe1\u606f\u3002","title":"\u5220\u9664\u3001\u590d\u5236\u3001\u91cd\u547d\u540d\u3001\u79fb\u52a8\u6587\u4ef6"},{"location":"Programming/05.%20Windows/%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#_1","text":"Windows \u7cfb\u7edf\u4e3a\u6587\u4ef6\u7684\u5220\u9664\u3001\u590d\u5236\u3001\u91cd\u547d\u540d\u6216\u79fb\u52a8\u6587\u4ef6\u63d0\u4f9b\u4e86\u76f8\u5e94\u7684 API \u51fd\u6570\u3002\u5220\u9664\u6587\u4ef6\u4f7f\u7528 DeleteFile \u51fd\u6570\uff1b\u590d\u5236\u6587\u4ef6\u4f7f\u7528 CopyFile \u51fd\u6570\uff1b\u91cd\u547d\u540d\u6587\u4ef6\u548c\u79fb\u52a8\u6587\u4ef6\u5b9e\u9645\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528 MoveFile \u51fd\u6570\u3002\u8fd9\u51e0\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u3002","title":"\u5220\u9664\u3001\u590d\u5236\u3001\u91cd\u547d\u540d\u3001\u79fb\u52a8\u6587\u4ef6"},{"location":"Programming/05.%20Windows/%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#api","text":"","title":"\u5173\u952e API"},{"location":"Programming/05.%20Windows/%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/#deletefile","text":"DeleteFile \u7684\u529f\u80fd\u662f\u5220\u9664\u6587\u4ef6\u3002\u4ee5\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u8f93\u5165\uff0c\u6307\u5411\u9700\u8981\u5220\u9664\u7684\u6587\u4ef6\u3002\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4e8e\u201cc\uff1a\\files\\delete.txt\u201d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4e8e\u201c.\\delete.txt\u201d\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u76f8\u5bf9\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\u3002 BOOL DeleteFile(LPCTSTR lpFileName); lpFileName :\u8f93\u5165\u53c2\u6570\uff0c\u6240\u8981\u5220\u9664\u7684\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\u3002 \u8fd4\u56de BOOL \u503c\uff0c\u8868\u793a\u6587\u4ef6\u5220\u9664\u662f\u5426\u6210\u529f\u3002 \u5982\u679c\u7a0b\u5e8f\u8fd4\u56de\u5931\u8d25\uff0c\u53ef\u4ee5\u4f7f\u7528 GetLastError \u51fd\u6570\u83b7\u53d6\u9519\u8bef\u4fe1\u606f\u3002","title":"DeleteFile"},{"location":"Programming/05.%20Windows/%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5%E7%BD%91%E9%A1%B5/","text":"CEF CEF \u5168\u79f0 Chromium Embedded Framework\uff0c\u662f\u4e00\u4e2a\u57fa\u4e8e Google Chromium \u7684\u5f00\u6e90\u9879\u76ee\u3002Google Chromium \u9879\u76ee\u4e3b\u8981\u662f\u4e3a Google Chrome \u5e94\u7528\u5f00\u53d1\u7684\uff0c\u800c CEF \u7684\u76ee\u6807\u5219\u662f\u4e3a\u7b2c\u4e09\u65b9\u5e94\u7528\u63d0\u4f9b\u53ef\u5d4c\u5165\u6d4f\u89c8\u5668\u652f\u6301\u3002CEF \u9694\u79bb\u5e95\u5c42 Chromium \u548c Blink \u7684\u590d\u6742\u4ee3\u7801\uff0c\u5e76\u63d0\u4f9b\u4e00\u5957\u4ea7\u54c1\u7ea7\u7a33\u5b9a\u7684 API\uff0c\u53d1\u5e03\u8ddf\u8e2a\u5177\u4f53 Chromium \u7248\u672c\u7684\u5206\u652f\uff0c\u4ee5\u53ca\u4e8c\u8fdb\u5236\u5305\u3002CEF \u7684\u5927\u90e8\u5206\u7279\u6027\u90fd\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u8ba9\u4f7f\u7528\u8005\u505a\u5c3d\u91cf\u5c11\u7684\u5b9a\u5236\u5373\u53ef\u6ee1\u8db3\u9700\u6c42\u3002CEF \u7684\u5178\u578b\u5e94\u7528\u573a\u666f\u5305\u62ec\uff1a - \u5d4c\u5165\u4e00\u4e2a\u517c\u5bb9 HTML5 \u7684\u6d4f\u89c8\u5668\u63a7\u4ef6\u5230\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u672c\u5730\u5e94\u7528\u3002 - \u521b\u5efa\u4e00\u4e2a\u8f7b\u91cf\u5316\u7684\u58f3\u6d4f\u89c8\u5668\uff0c\u7528\u4ee5\u6258\u7ba1\u4e3b\u8981\u7528 Web \u6280\u672f\u5f00\u53d1\u7684\u5e94\u7528\u3002 - \u6709\u4e9b\u5e94\u7528\u6709\u72ec\u7acb\u7684\u7ed8\u5236\u6846\u67b6\uff0c\u4f7f\u7528 CEF \u5bf9 Web \u5185\u5bb9\u505a\u79bb\u7ebf\u6e32\u67d3\u3002 - \u4f7f\u7528 CEF \u505a\u81ea\u52a8\u5316 Web \u6d4b\u8bd5\u3002 CEF3 \u662f\u57fa\u4e8e Chomuim Content API \u591a\u8fdb\u7a0b\u6784\u67b6\u7684\u4e0b\u4e00\u4ee3 CEF\uff0c\u62e5\u6709\u4e0b\u5217\u4f18\u52bf\uff1a - \u6539\u8fdb\u7684\u6027\u80fd\u548c\u7a33\u5b9a\u6027\uff08JavaScript \u548c\u63d2\u4ef6\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u5185\u6267\u884c\uff09\u3002 - \u652f\u6301 Retina \u663e\u793a\u5668\u3002 - \u652f\u6301 WebGL \u548c 3D CSS \u7684 GPU \u52a0\u901f\u3002 - \u7c7b\u4f3c WebRTC \u548c\u8bed\u97f3\u8f93\u5165\u8fd9\u6837\u7684\u524d\u536b\u7279\u6027\u3002 - \u901a\u8fc7 DevTools \u8fdc\u7a0b\u8c03\u8bd5\u534f\u8bae\u4ee5\u53ca ChromeDriver2 \u63d0\u4f9b\u66f4\u597d\u7684\u81ea\u52a8\u5316 UI \u6d4b\u8bd5\u3002 - \u66f4\u5feb\u83b7\u5f97\u5f53\u524d\u4ee5\u53ca\u672a\u6765\u7684 Web \u7279\u6027\u548c\u6807\u51c6\u7684\u80fd\u529b\u3002 CEF3 \u7684\u4e00\u4e9b\u52a3\u52bf\uff1a - \u5728\u7a0b\u5e8f\u4e2d\u96c6\u6210\u6bd4\u8f83\u590d\u6742\u3002 - \u8981\u5f15\u5165\u7684\u6587\u4ef6\u8f83\u5927\uff08100M+\uff09\u3002 - \u4f4e\u7248\u672c\u6e32\u67d3\u6548\u679c\u8f83\u5dee\uff0c\u6587\u5b57\u4e0d\u6e05\u6670\u3002 CEF3 \u4f7f\u7528\u6307\u5357 Miniblink Miniblink \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u5355\u6587\u4ef6\u3001\u4e14\u76ee\u524d\u5df2\u77e5\u7684\u6700\u5c0f\u7684\u57fa\u4e8e chromium \u7684\uff0c\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002 \u901a\u8fc7\u5176\u5bfc\u51fa\u7684\u7eaf C \u63a5\u53e3\uff0c\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002\u5b83\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a - \u6781\u81f4\u5c0f\u5de7\u7684\u4f53\u79ef \uff08small size\uff09\u3002 - C++\uff0cC#\uff0cDelphi \u7b49\u8bed\u8a00\u8c03\u7528 \uff08support C++\uff0cC#\uff0cDelphi language to call\uff09\u3002 - \u5185\u5d4c Nodejs\uff0c\u652f\u6301 electron \uff08with Nodejs, can run electron\uff09\u3002 - \u968f\u5fc3\u6240\u6b32\u7684\u5b9a\u5236\u529f\u80fd\u3001\u6a21\u62df\u73af\u5883 \uff08simulate other browser environment\uff09\u3002 - \u652f\u6301 Windows xp\u3001npapi \uff08support windows xp and npapi\uff09\u3002 - \u5b8c\u5584\u7684HTML5\u652f\u6301\uff0c\u5bf9\u5404\u79cd\u524d\u7aef\u5e93\u53cb\u597d \uff08support HTML5, and friendly to front framework\uff09\u3002 - \u5173\u95ed\u8de8\u57df\u5f00\u5173\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8de8\u57df\u529f\u80fd \uff08support cross domain\uff09\u3002 - \u7f51\u7edc\u8d44\u6e90\u62e6\u622a\uff0c\u66ff\u6362\u4efb\u610f\u7f51\u7ad9\u4efb\u610f js \u4e3a\u672c\u5730\u6587\u4ef6 \uff08network intercept, you can replace any resource to local file\uff09\u3002 - headless \u6a21\u5f0f\uff0c\u6781\u5927\u8282\u7701\u8d44\u6e90\uff0c\u9002\u7528\u4e8e\u722c\u866b \uff08headless mode, be suitable for Web Crawler\uff09\u3002 \u5982\u679c\u53ea\u662f\u60f3\u5728\u684c\u9762\u7a0b\u5e8f\u4e2d\u505a\u4e00\u4e2a\u7f51\u9875\u5c55\u793a\u7684\u529f\u80fd\uff0cMiniblink \u662f\u4e2a\u5f88\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a https://miniblink.net/ API \u6587\u6863\u94fe\u63a5\uff1a https://weolar.github.io/miniblink/doc-main.html \u4e0b\u8f7d\u5730\u5740\uff1a https://gitee.com/mirrors/miniblink#http://miniblink.net","title":"CEF"},{"location":"Programming/05.%20Windows/%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5%E7%BD%91%E9%A1%B5/#cef","text":"CEF \u5168\u79f0 Chromium Embedded Framework\uff0c\u662f\u4e00\u4e2a\u57fa\u4e8e Google Chromium \u7684\u5f00\u6e90\u9879\u76ee\u3002Google Chromium \u9879\u76ee\u4e3b\u8981\u662f\u4e3a Google Chrome \u5e94\u7528\u5f00\u53d1\u7684\uff0c\u800c CEF \u7684\u76ee\u6807\u5219\u662f\u4e3a\u7b2c\u4e09\u65b9\u5e94\u7528\u63d0\u4f9b\u53ef\u5d4c\u5165\u6d4f\u89c8\u5668\u652f\u6301\u3002CEF \u9694\u79bb\u5e95\u5c42 Chromium \u548c Blink \u7684\u590d\u6742\u4ee3\u7801\uff0c\u5e76\u63d0\u4f9b\u4e00\u5957\u4ea7\u54c1\u7ea7\u7a33\u5b9a\u7684 API\uff0c\u53d1\u5e03\u8ddf\u8e2a\u5177\u4f53 Chromium \u7248\u672c\u7684\u5206\u652f\uff0c\u4ee5\u53ca\u4e8c\u8fdb\u5236\u5305\u3002CEF \u7684\u5927\u90e8\u5206\u7279\u6027\u90fd\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u8ba9\u4f7f\u7528\u8005\u505a\u5c3d\u91cf\u5c11\u7684\u5b9a\u5236\u5373\u53ef\u6ee1\u8db3\u9700\u6c42\u3002CEF \u7684\u5178\u578b\u5e94\u7528\u573a\u666f\u5305\u62ec\uff1a - \u5d4c\u5165\u4e00\u4e2a\u517c\u5bb9 HTML5 \u7684\u6d4f\u89c8\u5668\u63a7\u4ef6\u5230\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u672c\u5730\u5e94\u7528\u3002 - \u521b\u5efa\u4e00\u4e2a\u8f7b\u91cf\u5316\u7684\u58f3\u6d4f\u89c8\u5668\uff0c\u7528\u4ee5\u6258\u7ba1\u4e3b\u8981\u7528 Web \u6280\u672f\u5f00\u53d1\u7684\u5e94\u7528\u3002 - \u6709\u4e9b\u5e94\u7528\u6709\u72ec\u7acb\u7684\u7ed8\u5236\u6846\u67b6\uff0c\u4f7f\u7528 CEF \u5bf9 Web \u5185\u5bb9\u505a\u79bb\u7ebf\u6e32\u67d3\u3002 - \u4f7f\u7528 CEF \u505a\u81ea\u52a8\u5316 Web \u6d4b\u8bd5\u3002 CEF3 \u662f\u57fa\u4e8e Chomuim Content API \u591a\u8fdb\u7a0b\u6784\u67b6\u7684\u4e0b\u4e00\u4ee3 CEF\uff0c\u62e5\u6709\u4e0b\u5217\u4f18\u52bf\uff1a - \u6539\u8fdb\u7684\u6027\u80fd\u548c\u7a33\u5b9a\u6027\uff08JavaScript \u548c\u63d2\u4ef6\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u5185\u6267\u884c\uff09\u3002 - \u652f\u6301 Retina \u663e\u793a\u5668\u3002 - \u652f\u6301 WebGL \u548c 3D CSS \u7684 GPU \u52a0\u901f\u3002 - \u7c7b\u4f3c WebRTC \u548c\u8bed\u97f3\u8f93\u5165\u8fd9\u6837\u7684\u524d\u536b\u7279\u6027\u3002 - \u901a\u8fc7 DevTools \u8fdc\u7a0b\u8c03\u8bd5\u534f\u8bae\u4ee5\u53ca ChromeDriver2 \u63d0\u4f9b\u66f4\u597d\u7684\u81ea\u52a8\u5316 UI \u6d4b\u8bd5\u3002 - \u66f4\u5feb\u83b7\u5f97\u5f53\u524d\u4ee5\u53ca\u672a\u6765\u7684 Web \u7279\u6027\u548c\u6807\u51c6\u7684\u80fd\u529b\u3002 CEF3 \u7684\u4e00\u4e9b\u52a3\u52bf\uff1a - \u5728\u7a0b\u5e8f\u4e2d\u96c6\u6210\u6bd4\u8f83\u590d\u6742\u3002 - \u8981\u5f15\u5165\u7684\u6587\u4ef6\u8f83\u5927\uff08100M+\uff09\u3002 - \u4f4e\u7248\u672c\u6e32\u67d3\u6548\u679c\u8f83\u5dee\uff0c\u6587\u5b57\u4e0d\u6e05\u6670\u3002 CEF3 \u4f7f\u7528\u6307\u5357","title":"CEF"},{"location":"Programming/05.%20Windows/%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5%E7%BD%91%E9%A1%B5/#miniblink","text":"Miniblink \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u5355\u6587\u4ef6\u3001\u4e14\u76ee\u524d\u5df2\u77e5\u7684\u6700\u5c0f\u7684\u57fa\u4e8e chromium \u7684\uff0c\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002 \u901a\u8fc7\u5176\u5bfc\u51fa\u7684\u7eaf C \u63a5\u53e3\uff0c\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002\u5b83\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a - \u6781\u81f4\u5c0f\u5de7\u7684\u4f53\u79ef \uff08small size\uff09\u3002 - C++\uff0cC#\uff0cDelphi \u7b49\u8bed\u8a00\u8c03\u7528 \uff08support C++\uff0cC#\uff0cDelphi language to call\uff09\u3002 - \u5185\u5d4c Nodejs\uff0c\u652f\u6301 electron \uff08with Nodejs, can run electron\uff09\u3002 - \u968f\u5fc3\u6240\u6b32\u7684\u5b9a\u5236\u529f\u80fd\u3001\u6a21\u62df\u73af\u5883 \uff08simulate other browser environment\uff09\u3002 - \u652f\u6301 Windows xp\u3001npapi \uff08support windows xp and npapi\uff09\u3002 - \u5b8c\u5584\u7684HTML5\u652f\u6301\uff0c\u5bf9\u5404\u79cd\u524d\u7aef\u5e93\u53cb\u597d \uff08support HTML5, and friendly to front framework\uff09\u3002 - \u5173\u95ed\u8de8\u57df\u5f00\u5173\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8de8\u57df\u529f\u80fd \uff08support cross domain\uff09\u3002 - \u7f51\u7edc\u8d44\u6e90\u62e6\u622a\uff0c\u66ff\u6362\u4efb\u610f\u7f51\u7ad9\u4efb\u610f js \u4e3a\u672c\u5730\u6587\u4ef6 \uff08network intercept, you can replace any resource to local file\uff09\u3002 - headless \u6a21\u5f0f\uff0c\u6781\u5927\u8282\u7701\u8d44\u6e90\uff0c\u9002\u7528\u4e8e\u722c\u866b \uff08headless mode, be suitable for Web Crawler\uff09\u3002 \u5982\u679c\u53ea\u662f\u60f3\u5728\u684c\u9762\u7a0b\u5e8f\u4e2d\u505a\u4e00\u4e2a\u7f51\u9875\u5c55\u793a\u7684\u529f\u80fd\uff0cMiniblink \u662f\u4e2a\u5f88\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a https://miniblink.net/ API \u6587\u6863\u94fe\u63a5\uff1a https://weolar.github.io/miniblink/doc-main.html \u4e0b\u8f7d\u5730\u5740\uff1a https://gitee.com/mirrors/miniblink#http://miniblink.net","title":"Miniblink"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/00.%20SQL/00.%20%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/","text":"SQLZOO SQLBolt - Learn SQL - Introduction to SQL \u81ea\u5b66SQL\u7f51(\u6559\u7a0b \u89c6\u9891 \u7ec3\u4e60\u5168\u5957) (xuesql.cn)","title":"00. \u5b66\u4e60\u7f51\u7ad9"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/","text":"\u6570\u636e\u5e93 \u4ec0\u4e48\u662f\u6570\u636e\u5e93 \u6570\u636e\u5e93\uff08datebase\uff09\u662f\u4fdd\u5b58\u6709\u7ec4\u7ec7\u7684\u6570\u636e\u7684\u5bb9\u5668\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u6587\u4ef6\u6216\u4e00\u7ec4\u6587\u4ef6\uff09\u3002 \u4eba\u4eec\u901a\u5e38\u7528\u6570\u636e\u5e93\u8fd9\u4e2a\u672f\u8bed\u6765\u4ee3\u8868\u4ed6\u4eec\u4f7f\u7528\u7684\u7684\u6570\u636e\u5e93\u8f6f\u4ef6\u3002\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u5b83\u662f\u4e00\u6c7d\u6df7\u6dc6\u7684\u6839\u6e90\u3002\u786e\u5207\u5730\u8bf4\uff0c\u6570\u636e\u5e93\u8f6f\u4ef6\u5e94\u79f0\u4e3a DBMS\uff08\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff09\u3002\u6570\u636e\u5e93\u662f\u901a\u8fc7 DBMS \u521b\u5efa\u548c\u64cd\u7eb5\u7684\u5bb9\u5668\u3002\u6570\u636e\u5e93\u53ef\u4ee5\u8bf4\u662f\u4fdd\u5b58\u5728\u786c\u8bbe\u5907\u4e0a\u7684\u6587\u4ef6\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u662f\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u6570\u636e\u5e93\u7a76\u7adf\u662f\u6587\u4ef6\u8fd8\u662f\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u4f60\u5e76\u4e0d\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\uff1b\u4f60\u4f7f\u7528\u7684\u662f DBMS\uff0c\u5b83\u66ff\u4f60\u8bbf\u95ee\u6570\u636e\u5e93\u3002 \u8868 \u8868\uff08table\uff09\u662f\u67d0\u79cd\u7279\u5b9a\u7c7b\u578b\u6570\u636e\u7684\u7ed3\u6784\u5316\u6e05\u5355\u3002 \u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u8868\u90fd\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u7528\u6765\u6807\u8bc6\u81ea\u5df1\u3002\u6b64\u540d\u5b57\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u8868\u793a\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5176\u4ed6\u8868\u5177\u6709\u76f8\u540c\u7684\u540d\u5b57\u3002 \u8868\u540d\u7684\u552f\u4e00\u6027\u53d6\u51b3\u4e8e\u591a\u4e2a\u56e0\u7d20\uff0c\u5982\u6570\u636e\u5e93\u540d\u548c\u8868\u540d\u7b49\u7684\u7ed3\u5408\u3002\u8fd9\u8868\u793a\uff0c\u867d\u7136\u5728\u76f8\u540c\u6570\u636e\u5e93\u4e2d\u4e0d\u80fd\u4e24\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u8868\u540d\uff0c\u4f46\u5728\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e2d\u5374\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u8868\u540d\u3002 \u8868\u5177\u6709\u4e00\u4e9b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u5728\u8868\u4e2d\u5982\u4f55\u5b58\u50a8\uff0c\u5982\u53ef\u4ee5\u5b58\u50a8\u4ec0\u4e48\u6837\u7684\u6570\u636e\uff0c\u6570\u636e\u5982\u4f55\u5206\u89e3\uff0c\u5404\u90e8\u5206\u4fe1\u606f\u5982\u4f55\u547d\u540d\uff0c\u7b49\u7b49\u3002\u63cf\u8ff0\u8868\u7684\u8fd9\u7ec4\u4fe1\u606f\u5c31\u662f\u6240\u8c13\u7684\u6a21\u5f0f\uff0c\u6a21\u5f0f\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u6570\u636e\u5e93\u4e2d\u7279\u5b9a\u7684\u8868\u4ee5\u53ca\u8fd9\u4e2a\u6570\u636e\u5e93\u3002 \u5217\u548c\u6570\u636e\u7c7b\u578b \u8868\u7531\u5217\u7ec4\u6210\u3002\u5217\u4e2d\u5b58\u50a8\u7740\u8868\u4e2d\u67d0\u90e8\u5206\u7684\u4fe1\u606f\u3002 \u5217\uff08column\uff09\u662f\u8868\u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\u3002\u6240\u6709\u8868\u90fd\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7ec4\u6210\u7684\u3002 \u6570\u636e\u7c7b\u578b\uff08datatype\uff09\u662f\u5217\u6240\u5bb9\u8bb8\u7684\u6570\u636e\u7684\u7c7b\u578b\u3002\u6570\u636e\u5e93\u4e2d\u6bcf\u4e2a\u5217\u90fd\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u9650\u5236\uff08\u6216\u5bb9\u8bb8\uff09\u8be5\u5217\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u3002 \u884c \u8868\u4e2d\u7684\u6570\u636e\u662f\u6309\u884c\u5b58\u50a8\u7684\uff0c\u6240\u4fdd\u5b58\u7684\u6bcf\u4e2a\u8bb0\u5f55\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u884c\u5185\u3002 \u884c\uff08row\uff09\u662f\u8868\u4e2d\u7684\u4e00\u4e2a\u8bb0\u5f55\u3002 \u6211\u4eec\u53ef\u80fd\u542c\u5230\u7528\u6237\u5728\u63d0\u5230\u884c\u65f6\u79f0\u5176\u4e3a\u6570\u636e\u5e93\u8bb0\u5f55\uff08record\uff09\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u4e24\u4e2a\u672f\u8bed\u662f\u53ef\u4ee5\u4e92\u76f8\u66ff\u4ee3\u7684\uff0c\u4f46\u4ece\u6280\u672f\u4e0a\u8bf4\uff0c\u884c\u624d\u662f\u6b63\u786e\u672f\u8bed\u3002 \u4e3b\u952e \u4e3b\u952e\uff08primary key\uff09\u662f\u4e00\u5217\uff08\u6216\u4e00\u7ec4\u5217\uff09\uff0c\u5176\u503c\u80fd\u591f\u552f\u4e00\u533a\u5206\u8868\u4e2d\u7684\u6bcf\u4e2a\u884c\u3002 \u4e3b\u952e\u7528\u6765\u8868\u793a\u4e00\u4e2a\u7279\u5b9a\u7684\u884c\u3002\u6ca1\u6709\u4e3b\u952e\uff0c\u66f4\u65b0\u6216\u5220\u9664\u8868\u4e2d\u7279\u5b9a\u884c\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b89\u5168\u7684\u65b9\u6cd5\u4fdd\u8bc1\u53ea\u6d89\u53ca\u76f8\u5173\u7684\u884c\u3002 \u867d\u7136\u5e76\u4e0d\u662f\u90fd\u9700\u8981\u4e3b\u952e\uff0c\u4f46\u5927\u591a\u6570\u6570\u636e\u5e93\u8bbe\u8ba1\u4eba\u5458\u90fd\u5e94\u4fdd\u8bc1\u4ed6\u4eec\u521b\u5efa\u7684\u6bcf\u4e2a\u8868\u5177\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4ee5\u4fbf\u4e8e\u4ee5\u540e\u7684\u6570\u636e\u64cd\u7eb5\u548c\u7ba1\u7406\u3002 \u8868\u4e2d\u7684\u4efb\u4f55\u5217\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u952e\uff0c\u53ea\u8981\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u4efb\u610f\u4e24\u884c\u90fd\u4e0d\u5177\u6709\u76f8\u540c\u7684\u4e3b\u952e\u503c\uff1b \u6bcf\u4e2a\u884c\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u4e3b\u952e\u503c\uff08\u4e3b\u952e\u5217\u4e0d\u5141\u8bb8 NULL \u503c\uff09\u3002 SQL SQL \u662f\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff08Structured Query Language\uff09\u7684\u7f29\u5199\u3002SQL \u662f\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u7684\u8bed\u8a00\u3002 SQL\u5177\u6709\u5982\u4e0b\u4f18\u70b9\uff1a SQL \u4e0d\u662f\u67d0\u4e2a\u7279\u5b9a\u6570\u636e\u5e93\u4f9b\u5e94\u5546\u4e13\u6709\u7684\u8bed\u8a00\u3002\u51e0\u4e4e\u6240\u6709\u91cd\u8981\u7684 DBMS \u90fd\u652f\u6301 SQL\uff0c\u6240\u4ee5\uff0c\u5b66\u4e60\u6b64\u8bed\u8a00\u4f7f\u6211\u4eec\u51e0\u4e4e\u80fd\u4e0e\u6240\u6709\u6570\u636e\u5e93\u6253\u4ea4\u9053\u3002 SQL \u7b80\u5355\u6613\u5b66\u3002\u5b83\u7684\u8bed\u53e5\u5168\u90e8\u90fd\u662f\u7531\u63cf\u8ff0\u6027\u5f88\u5f3a\u7684\u82f1\u8bed\u5355\u8bcd\u7ec4\u6210\uff0c\u800c\u4e14\u8fd9\u4e9b\u5355\u8bcd\u7684\u6570\u76ee\u4e0d\u591a\u3002 SQL \u5c3d\u7ba1\u770b\u4e0a\u53bb\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u5f3a\u6709\u529b\u7684\u8bed\u8a00\uff0c\u7075\u6d3b\u4f7f\u7528\u5176\u8bed\u8a00\u5143\u7d20\uff0c\u53ef\u4ee5\u8fdb\u884c\u975e\u5e38\u590d\u6742\u548c\u9ad8\u7ea7\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002","title":"\u6570\u636e\u5e93"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_1","text":"","title":"\u6570\u636e\u5e93"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_2","text":"\u6570\u636e\u5e93\uff08datebase\uff09\u662f\u4fdd\u5b58\u6709\u7ec4\u7ec7\u7684\u6570\u636e\u7684\u5bb9\u5668\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u6587\u4ef6\u6216\u4e00\u7ec4\u6587\u4ef6\uff09\u3002 \u4eba\u4eec\u901a\u5e38\u7528\u6570\u636e\u5e93\u8fd9\u4e2a\u672f\u8bed\u6765\u4ee3\u8868\u4ed6\u4eec\u4f7f\u7528\u7684\u7684\u6570\u636e\u5e93\u8f6f\u4ef6\u3002\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u5b83\u662f\u4e00\u6c7d\u6df7\u6dc6\u7684\u6839\u6e90\u3002\u786e\u5207\u5730\u8bf4\uff0c\u6570\u636e\u5e93\u8f6f\u4ef6\u5e94\u79f0\u4e3a DBMS\uff08\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff09\u3002\u6570\u636e\u5e93\u662f\u901a\u8fc7 DBMS \u521b\u5efa\u548c\u64cd\u7eb5\u7684\u5bb9\u5668\u3002\u6570\u636e\u5e93\u53ef\u4ee5\u8bf4\u662f\u4fdd\u5b58\u5728\u786c\u8bbe\u5907\u4e0a\u7684\u6587\u4ef6\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u662f\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8bf4\uff0c\u6570\u636e\u5e93\u7a76\u7adf\u662f\u6587\u4ef6\u8fd8\u662f\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u4f60\u5e76\u4e0d\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\uff1b\u4f60\u4f7f\u7528\u7684\u662f DBMS\uff0c\u5b83\u66ff\u4f60\u8bbf\u95ee\u6570\u636e\u5e93\u3002","title":"\u4ec0\u4e48\u662f\u6570\u636e\u5e93"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_3","text":"\u8868\uff08table\uff09\u662f\u67d0\u79cd\u7279\u5b9a\u7c7b\u578b\u6570\u636e\u7684\u7ed3\u6784\u5316\u6e05\u5355\u3002 \u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u8868\u90fd\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u7528\u6765\u6807\u8bc6\u81ea\u5df1\u3002\u6b64\u540d\u5b57\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u8868\u793a\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5176\u4ed6\u8868\u5177\u6709\u76f8\u540c\u7684\u540d\u5b57\u3002 \u8868\u540d\u7684\u552f\u4e00\u6027\u53d6\u51b3\u4e8e\u591a\u4e2a\u56e0\u7d20\uff0c\u5982\u6570\u636e\u5e93\u540d\u548c\u8868\u540d\u7b49\u7684\u7ed3\u5408\u3002\u8fd9\u8868\u793a\uff0c\u867d\u7136\u5728\u76f8\u540c\u6570\u636e\u5e93\u4e2d\u4e0d\u80fd\u4e24\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u8868\u540d\uff0c\u4f46\u5728\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e2d\u5374\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u8868\u540d\u3002 \u8868\u5177\u6709\u4e00\u4e9b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u5728\u8868\u4e2d\u5982\u4f55\u5b58\u50a8\uff0c\u5982\u53ef\u4ee5\u5b58\u50a8\u4ec0\u4e48\u6837\u7684\u6570\u636e\uff0c\u6570\u636e\u5982\u4f55\u5206\u89e3\uff0c\u5404\u90e8\u5206\u4fe1\u606f\u5982\u4f55\u547d\u540d\uff0c\u7b49\u7b49\u3002\u63cf\u8ff0\u8868\u7684\u8fd9\u7ec4\u4fe1\u606f\u5c31\u662f\u6240\u8c13\u7684\u6a21\u5f0f\uff0c\u6a21\u5f0f\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u6570\u636e\u5e93\u4e2d\u7279\u5b9a\u7684\u8868\u4ee5\u53ca\u8fd9\u4e2a\u6570\u636e\u5e93\u3002","title":"\u8868"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_4","text":"\u8868\u7531\u5217\u7ec4\u6210\u3002\u5217\u4e2d\u5b58\u50a8\u7740\u8868\u4e2d\u67d0\u90e8\u5206\u7684\u4fe1\u606f\u3002 \u5217\uff08column\uff09\u662f\u8868\u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\u3002\u6240\u6709\u8868\u90fd\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7ec4\u6210\u7684\u3002 \u6570\u636e\u7c7b\u578b\uff08datatype\uff09\u662f\u5217\u6240\u5bb9\u8bb8\u7684\u6570\u636e\u7684\u7c7b\u578b\u3002\u6570\u636e\u5e93\u4e2d\u6bcf\u4e2a\u5217\u90fd\u6709\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u9650\u5236\uff08\u6216\u5bb9\u8bb8\uff09\u8be5\u5217\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u3002","title":"\u5217\u548c\u6570\u636e\u7c7b\u578b"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_5","text":"\u8868\u4e2d\u7684\u6570\u636e\u662f\u6309\u884c\u5b58\u50a8\u7684\uff0c\u6240\u4fdd\u5b58\u7684\u6bcf\u4e2a\u8bb0\u5f55\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u884c\u5185\u3002 \u884c\uff08row\uff09\u662f\u8868\u4e2d\u7684\u4e00\u4e2a\u8bb0\u5f55\u3002 \u6211\u4eec\u53ef\u80fd\u542c\u5230\u7528\u6237\u5728\u63d0\u5230\u884c\u65f6\u79f0\u5176\u4e3a\u6570\u636e\u5e93\u8bb0\u5f55\uff08record\uff09\u3002\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u4e24\u4e2a\u672f\u8bed\u662f\u53ef\u4ee5\u4e92\u76f8\u66ff\u4ee3\u7684\uff0c\u4f46\u4ece\u6280\u672f\u4e0a\u8bf4\uff0c\u884c\u624d\u662f\u6b63\u786e\u672f\u8bed\u3002","title":"\u884c"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#_6","text":"\u4e3b\u952e\uff08primary key\uff09\u662f\u4e00\u5217\uff08\u6216\u4e00\u7ec4\u5217\uff09\uff0c\u5176\u503c\u80fd\u591f\u552f\u4e00\u533a\u5206\u8868\u4e2d\u7684\u6bcf\u4e2a\u884c\u3002 \u4e3b\u952e\u7528\u6765\u8868\u793a\u4e00\u4e2a\u7279\u5b9a\u7684\u884c\u3002\u6ca1\u6709\u4e3b\u952e\uff0c\u66f4\u65b0\u6216\u5220\u9664\u8868\u4e2d\u7279\u5b9a\u884c\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b89\u5168\u7684\u65b9\u6cd5\u4fdd\u8bc1\u53ea\u6d89\u53ca\u76f8\u5173\u7684\u884c\u3002 \u867d\u7136\u5e76\u4e0d\u662f\u90fd\u9700\u8981\u4e3b\u952e\uff0c\u4f46\u5927\u591a\u6570\u6570\u636e\u5e93\u8bbe\u8ba1\u4eba\u5458\u90fd\u5e94\u4fdd\u8bc1\u4ed6\u4eec\u521b\u5efa\u7684\u6bcf\u4e2a\u8868\u5177\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4ee5\u4fbf\u4e8e\u4ee5\u540e\u7684\u6570\u636e\u64cd\u7eb5\u548c\u7ba1\u7406\u3002 \u8868\u4e2d\u7684\u4efb\u4f55\u5217\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u952e\uff0c\u53ea\u8981\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u4efb\u610f\u4e24\u884c\u90fd\u4e0d\u5177\u6709\u76f8\u540c\u7684\u4e3b\u952e\u503c\uff1b \u6bcf\u4e2a\u884c\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u4e3b\u952e\u503c\uff08\u4e3b\u952e\u5217\u4e0d\u5141\u8bb8 NULL \u503c\uff09\u3002","title":"\u4e3b\u952e"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/00.%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/#sql","text":"SQL \u662f\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff08Structured Query Language\uff09\u7684\u7f29\u5199\u3002SQL \u662f\u4e00\u79cd\u4e13\u95e8\u7528\u6765\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u7684\u8bed\u8a00\u3002 SQL\u5177\u6709\u5982\u4e0b\u4f18\u70b9\uff1a SQL \u4e0d\u662f\u67d0\u4e2a\u7279\u5b9a\u6570\u636e\u5e93\u4f9b\u5e94\u5546\u4e13\u6709\u7684\u8bed\u8a00\u3002\u51e0\u4e4e\u6240\u6709\u91cd\u8981\u7684 DBMS \u90fd\u652f\u6301 SQL\uff0c\u6240\u4ee5\uff0c\u5b66\u4e60\u6b64\u8bed\u8a00\u4f7f\u6211\u4eec\u51e0\u4e4e\u80fd\u4e0e\u6240\u6709\u6570\u636e\u5e93\u6253\u4ea4\u9053\u3002 SQL \u7b80\u5355\u6613\u5b66\u3002\u5b83\u7684\u8bed\u53e5\u5168\u90e8\u90fd\u662f\u7531\u63cf\u8ff0\u6027\u5f88\u5f3a\u7684\u82f1\u8bed\u5355\u8bcd\u7ec4\u6210\uff0c\u800c\u4e14\u8fd9\u4e9b\u5355\u8bcd\u7684\u6570\u76ee\u4e0d\u591a\u3002 SQL \u5c3d\u7ba1\u770b\u4e0a\u53bb\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u5f3a\u6709\u529b\u7684\u8bed\u8a00\uff0c\u7075\u6d3b\u4f7f\u7528\u5176\u8bed\u8a00\u5143\u7d20\uff0c\u53ef\u4ee5\u8fdb\u884c\u975e\u5e38\u590d\u6742\u548c\u9ad8\u7ea7\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002","title":"SQL"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/","text":"SELECT \u8bed\u53e5 SELECT \u8bed\u53e5\uff0c\u901a\u5e38\u53c8\u79f0\u4e3a\u67e5\u8be2\uff08query\uff09\uff0c\u6b63\u5982\u5176\u540d\uff0c SELECT \u53ef\u4ee5\u7528\u6765\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u51fa\u6570\u636e\u3002\u4e00\u6761 SELECT \u8bed\u53e5\u6216\u8005\u53eb\u4e00\u4e2a\u67e5\u8be2\uff0c\u53ef\u4ee5\u63cf\u8ff0\u6211\u4eec\u8981\u4ece\u4ec0\u4e48\u8868\u53d6\u6570\u636e\uff0c\u8981\u53d6\u54ea\u4e9b\u6570\u636e\uff0c\u5728\u8fd4\u56de\u4e4b\u524d\u600e\u4e48\u5bf9\u7ed3\u679c\u505a\u4e00\u4e9b\u8f6c\u5316\u8ba1\u7b97\u7b49\u7b49\u3002 SELECT \u8bed\u6cd5\uff1a SELECT column \uff08\u5217\u540d\uff09 , another column \uff08\u5217\u540d\uff09 , ... FROM mytable \uff08\u8868\u540d\uff09 ; \u591a\u6570 DBMS \u4e0d\u8981\u6c42\u5728\u5355\u6761 SQL \u8bed\u53e5\u540e\u52a0\u5206\u53f7\uff0c\u5c11\u6570\u7279\u5b9a\u7684 DBMS \u5fc5\u987b\u5728\u5355\u6761 SQL \u8bed\u53e5\u540e\u52a0\u4e0a\u5206\u53f7\uff0c\u603b\u662f\u52a0\u4e0a\u5206\u53f7\u80af\u5b9a\u662f\u6ca1\u6709\u574f\u5904\u7684\u3002\u591a\u6761 SQL \u8bed\u53e5\u5fc5\u987b\u4ee5\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 SQL \u8bed\u53e5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6309\u7167\u60ef\u4f8b\uff0c\u6240\u6709 SQL \u5173\u952e\u5b57\u4f7f\u7528\u5927\u5199\uff0c\u6240\u6709\u5217\u548c\u8868\u540d\u4f7f\u7528\u5c0f\u5199\uff0c\u8fd9\u6837\u80fd\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\u548c\u8c03\u8bd5\u3002 \u5728\u5904\u7406 SQL \u8bed\u53e5\u65f6\uff0c\u5176\u4e2d\u6240\u6709\u7684\u7a7a\u683c\u90fd\u88ab\u5ffd\u7565\u3002 SQL \u8bed\u53e5\u53ef\u4ee5\u5728\u4e00\u884c\u4e0a\u7ed9\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5206\u6210\u8bb8\u591a\u884c\u3002\u591a\u5c11 SQL \u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a\u5c06 SQL \u8bed\u53e5\u5206\u6210\u591a\u884c\u66f4\u5bb9\u6613\u9605\u8bfb\u548c\u8c03\u8bd5\u3002 \u5728\u9009\u62e9\u591a\u4e2a\u5217\u65f6\uff0c\u4e00\u5b9a\u8981\u5728\u5217\u540d\u4e4b\u95f4\u52a0\u4e0a\u9017\u53f7\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u5217\u540d\u540e\u4e0d\u52a0\u3002\u5982\u679c\u5728\u6700\u540e\u4e00\u4e2a\u5217\u540d\u540e\u52a0\u4e86\u9017\u53f7\uff0c\u5c06\u51fa\u73b0\u9519\u8bef\u3002 SELECT * FROM table ; \u8fd9\u6761\u8bed\u53e5\u53ef\u4ee5\u68c0\u7d22\u6240\u6709\u7684\u5217\u800c\u4e0d\u5fc5\u9010\u4e2a\u5217\u51fa\u5b83\u4eec\u3002 \u4e00\u822c\uff0c\u9664\u975e\u786e\u5b9e\u9700\u8981\u8868\u4e2d\u7684\u6bcf\u4e2a\u5217\uff0c\u5426\u5219\u6700\u597d\u4e0d\u8981\u4f7f\u7528 * \u901a\u914d\u7b26\u3002\u867d\u7136\u4f7f\u7528\u901a\u914d\u7b26\u53ef\u80fd\u4f1a\u6bd4\u8f83\u7701\u4e8b\uff0c\u4e0d\u7528\u660e\u786e\u5217\u51fa\u6240\u9700\u5217\uff0c\u4f46\u68c0\u7d22\u4e0d\u9700\u8981\u7684\u5217\u901a\u5e38\u4f1a\u964d\u4f4e\u68c0\u7d22\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u3002 \u6392\u5e8f\u6570\u636e SQL \u8bed\u53e5\u7531\u5b50\u53e5\u6784\u6210\uff0c\u6709\u4e9b\u5b50\u53e5\u662f\u5fc5\u9700\u7684\uff0c\u800c\u6709\u7684\u662f\u53ef\u9009\u7684\u3002\u4e00\u4e2a\u5b50\u53e5\u901a\u5e38\u7531\u4e00\u4e2a\u5173\u952e\u5b57\u548c\u6240\u63d0\u4f9b\u7684\u6570\u636e\u7ec4\u6210\u3002 \u4e3a\u4e86\u660e\u786e\u5730\u6392\u5e8f\u7528 SELECT \u8bed\u53e5\u68c0\u7d22\u51fa\u7684\u6570\u636e\uff0c\u53ef\u4f7f\u7528 ORDER BY \u5b50\u53e5\u3002ORDER BY \u5b50\u53e5\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u540d\u5b57\uff0c\u636e\u6b64\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\u3002 ORDER BY \u8bed\u6cd5\uff1a SELECT column_name FROM table ORDER BY column_name ; \u901a\u5e38\uff0cORDER BY \u5b50\u53e5\u4e2d\u4f7f\u7528\u7684\u5217\u5c06\u4f7f\u4e3a\u663e\u793a\u6240\u9009\u62e9\u7684\u5217\u3002\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4e00\u5b9a\u8981\u8fd9\u6837\uff0c\u7528\u975e\u68c0\u7d22\u7684\u5217\u6392\u5e8f\u6570\u636e\u662f\u5b8c\u5168\u5408\u6cd5\u7684\u3002 \u60f3\u8981\u6309\u591a\u4e2a\u5217\u6392\u5e8f\uff0c\u53ea\u8981\u6307\u5b9a\u5217\u540d\uff0c\u5217\u540d\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u5f00\u5373\u53ef\u3002 SELECT column_name FROM table ORDER BY column_name1 , column_name2 ; \u6570\u636e\u6392\u5e8f\u4e0d\u9650\u4e8e\u5347\u5e8f\u6392\u5e8f\uff08\u4ece A \u5230 Z\uff09\uff0c\u8fd9\u53ea\u662f\u9ed8\u8ba4\u7684\u6392\u5e8f\u987a\u5e8f\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 ORDER BY \u5b50\u53e5\u4ee5\u964d\u5e8f\uff08\u4ece Z \u5230 A\uff09\u987a\u5e8f\u6392\u5e8f\u3002\u964d\u5e8f\u6392\u5e8f\u5fc5\u987b\u6307\u5b9a DESC \u5173\u952e\u5b57\uff08\u5347\u5e8f\u6392\u5e8f\u4e3a ASC\uff09\u3002 SELECT column_name FROM table ORDER BY column_name DESC ; SELECT column_name FROM table ORDER BY column_name1 DESC , column_name2 ; DESC \u5173\u952e\u5b57\u53ea\u5e94\u7528\u5230\u76f4\u63a5\u4f4d\u4e8e\u5176\u524d\u9762\u7684\u5217\uff0c\u5982\u679c\u60f3\u5728\u591a\u4e2a\u5217\u4e0a\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u5217\u6307\u5b9a DESC \u5173\u952e\u5b57\u3002 \u533a\u5206\u6570\u636e \u5982\u679c SELECT \u8fd4\u56de\u7684\u7ed3\u679c\u4e2d\u6709\u591a\u4e2a\u76f8\u540c\u7684\u884c\uff0c\u53c8\u4e0d\u60f3\u8981\u6bcf\u4e2a\u503c\u6bcf\u6b21\u90fd\u51fa\u73b0\uff0c\u600e\u4e48\u529e\uff1f\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528 DISTINCT \u5173\u952e\u5b57\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6b64\u5173\u952e\u5b57\u6307\u793a DBMS \u53ea\u8fd4\u56de\u4e0d\u540c\u7684\u503c\u3002 SELECT DISTINCT column_name FROM table ; \u4e0d\u80fd\u90e8\u5206\u4f7f\u7528 DISTINCT\uff0c\u8be5\u5173\u952e\u5b57\u5e94\u7528\u4e0e\u6240\u6709\u5217\u800c\u4e0d\u4ec5\u662f\u524d\u7f6e\u5b83\u7684\u5217\u3002 \u9650\u5236\u7ed3\u679c SELECT \u8bed\u53e5\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u884c\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\u6307\u5b9a\u8868\u4e2d\u7684\u6bcf\u4e2a\u884c\u3002\u4e3a\u4e86\u8fd4\u56de\u7b2c\u4e00\u884c\u6216\u524d\u51e0\u884c\uff0c\u53ef\u4f7f\u7528 LIMIT \u5b50\u53e5\u3002 SELECT column_name FROM table LIMIT 5 ; SELECT column_name FROM table LIMIT 5 , 5 ; \u5e26\u4e00\u4e2a\u503c\u7684 LIMIT \u603b\u662f\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u7ed9\u51fa\u7684\u6570\u4e3a\u8fd4\u56de\u7684\u884c\u6570\u3002\u5e26\u4e24\u4e2a\u503c\u7684 LIMIT \u53ef\u4ee5\u6307\u5b9a\u4ece\u884c\u53f7\u4e3a\u7b2c\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\u5f00\u59cb\u3002 \u68c0\u7d22\u51fa\u6765\u7684\u7b2c\u4e00\u884c\u4e3a\u884c 0 \u800c\u4e0d\u662f\u884c 1\u3002\u56e0\u6b64\uff0c LIMIT 1, 1 \u5c06\u68c0\u7d22\u51fa\u7b2c\u4e8c\u884c\u800c\u4e0d\u662f\u7b2c\u4e00\u884c\u3002 \u4f7f\u7528 ORDR BY \u548c LIMIT \u7684\u7ec4\u5408\uff0c\u80fd\u591f\u627e\u51fa\u4e00\u4e2a\u5217\u4e2d\u6700\u9ad8\u6216\u6700\u4f4e\u7684\u503c\u3002 SELECT column_name FROM table ORDER BY column_name LIMIT 1 ; \u5728\u7ed9\u51fa ORDER BY \u5b50\u53e5\u65f6\uff0c\u5e94\u8be5\u4fdd\u8bc1\u5b83\u4f4d\u4e8e FROM \u5b50\u53e5\u4e4b\u540e\u3002\u5982\u679c\u4f7f\u7528 LIMIT\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e ORDER BY \u4e4b\u540e\u3002\u4f7f\u7528\u5b50\u53e5\u7684\u6b21\u5e8f\u4e0d\u5bf9\u5c06\u4ea7\u751f\u9519\u8bef\u6d88\u606f\u3002 \u8fc7\u6ee4\u6570\u636e \u6570\u636e\u5e93\u8868\u4e00\u822c\u5305\u542b\u5927\u91cf\u7684\u6570\u636e\uff0c\u5f88\u5c11\u9700\u8981\u68c0\u7d22\u8868\u4e2d\u6240\u6709\u884c\uff0c\u901a\u5e38\u53ea\u4f1a\u6839\u636e\u7279\u5b9a\u64cd\u4f5c\u6216\u62a5\u544a\u7684\u9700\u8981\u63d0\u53d6\u8868\u6570\u636e\u7684\u5b50\u96c6\u3002\u5728 SELECT \u8bed\u53e5\u4e2d\uff0c\u6570\u636e\u6839\u636e WHERE \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u641c\u7d22\u6761\u4ef6\u8fdb\u884c\u8fc7\u6ee4\u3002 SELECT column_name FROM table WHERE id = 1 ; \u5728\u540c\u65f6\u4f7f\u7528 ORDER BY \u548c WHERE \u5b50\u53e5\u65f6\uff0c\u5e94\u8be5\u8ba9 ORDER BY \u4f4d\u4e8e WHERE \u4e4b\u540e\uff0c\u5426\u5219\u5c06\u4f1a\u4ea7\u751f\u9519\u8bef\u3002 \u7ec4\u5408 WHERE \u5b50\u53e5 \u4e3a\u4e86\u8fdb\u884c\u66f4\u5f3a\u7684\u8fc7\u6ee4\u63a7\u5236\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a WHERE \u5b50\u53e5\uff1a\u4ee5 AND \u6216 OR \u5b50\u53e5\u7684\u65b9\u5f0f\u4f7f\u7528\u3002 \u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528 AND \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u6307\u793a\u68c0\u7d22\u6ee1\u8db3\u6240\u6709\u7ed9\u5b9a\u6761\u4ef6\u7684\u884c\uff0c\u6bcf\u589e\u52a0\u4e00\u4e2a\u6761\u4ef6\u5c31\u8981\u4f7f\u7528\u4e00\u4e2a AND \u5173\u952e\u5b57\u3002 SELECT column_name FROM table WHERE id = 1 AND name = \"tom\" ; OR \u5173\u952e\u5b57\u6307\u793a\u68c0\u7d22\u5339\u914d\u4efb\u4e00\u6761\u4ef6\u7684\u884c\u3002 SELECT column_name FROM table WHERE id = 1 OR name = \"tom\" ; \u4efb\u4f55\u65f6\u5019\u4f7f\u7528\u5177\u6709 AND \u548c OR \u64cd\u4f5c\u7b26\u7684 WHERE \u5b50\u53e5\uff0c\u90fd\u5e94\u8be5\u4f7f\u7528\u5706\u62ec\u53f7\u660e\u786e\u5730\u5206\u7ec4\u64cd\u4f5c\u7b26\u3002\u4e0d\u8981\u8fc7\u5206\u4f9d\u8d56\u9ed8\u8ba4\u8ba1\u7b97\u6b21\u5e8f\uff0c\u5373\u4f7f\u4ed6\u786e\u5b9e\u662f\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u4e5f\u662f\u5982\u6b64\u3002\u4f7f\u7528\u5706\u62ec\u53f7\u6ca1\u6709\u4ec0\u4e48\u574f\u5904\uff0c\u5b83\u80fd\u6d88\u9664\u6b67\u4e49\u3002 IN \u64cd\u4f5c\u7b26 \u5706\u62ec\u53f7\u5728 WHERE \u5b50\u53e5\u4e2d\u8fd8\u6709\u53e6\u4e00\u79cd\u7528\u6cd5\u3002IN \u64cd\u4f5c\u7b26\u7528\u6765\u6307\u5b9a\u6761\u4ef6\u8303\u56f4\uff0c\u8303\u56f4\u4e2d\u7684\u6bcf\u4e2a\u6761\u4ef6\u90fd\u53ef\u4ee5\u8fdb\u884c\u5339\u914d\u3002IN \u53d6\u5408\u6cd5\u503c\u7684\u7531\u9017\u53f7\u5206\u9694\u7684\u6e05\u5355\uff0c\u5168\u90fd\u62ec\u5728\u5706\u62ec\u53f7\u4e2d\u3002 SELECT column_name FROM table WHERE id IN ( 1 , 3 , 4 ); IN \u64cd\u4f5c\u7b26\u7684\u529f\u80fd\u4e0e OR \u64cd\u4f5c\u7b26\u76f8\u5f53\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a \u5728\u4f7f\u7528\u957f\u7684\u5408\u6cd5\u9009\u9879\u6e05\u5355\u65f6\uff0cIN \u64cd\u4f5c\u7b26\u7684\u8bed\u6cd5\u66f4\u6e05\u695a\u4e14\u66f4\u76f4\u89c2\u3002 \u5728\u4f7f\u7528 IN \u65f6\uff0c\u8ba1\u7b97\u7684\u6b21\u5e8f\u66f4\u5bb9\u6613\u7ba1\u7406\uff08\u56e0\u4e3a\u4f7f\u7528\u7684\u64cd\u4f5c\u7b26\u66f4\u5c11\uff09\u3002 IN \u64cd\u4f5c\u7b26\u4e00\u822c\u6bd4 OR \u64cd\u4f5c\u7b26\u6e05\u5355\u6267\u884c\u66f4\u5feb\u3002 IN \u7684\u6700\u5927\u6709\u70b9\u662f\u53ef\u4ee5\u5305\u542b\u5176\u4ed6 SELECT \u8bed\u53e5\uff0c\u4f7f\u5f97\u80fd\u591f\u66f4\u52a8\u6001\u5730\u5efa\u7acb WHERE \u5b50\u53e5\u3002 NOT \u64cd\u4f5c\u7b26 WHERE \u5b50\u53e5\u4e2d\u7684 NOT \u64cd\u4f5c\u7b26\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u529f\u80fd\uff0c\u90a3\u5c31\u662f\u5426\u5b9a\u5b83\u4e4b\u540e\u6240\u8ddf\u7684\u4efb\u4f55\u6761\u4ef6\u3002 SELECT column_name FROM table WHERE id NOT IN ( 1 , 3 , 4 ); \u7528\u901a\u914d\u7b26\u8fc7\u6ee4 \u767e\u5206\u53f7\uff08%\uff09\u901a\u914d\u7b26 \u6700\u5e38\u4f7f\u7528\u7684\u901a\u914d\u7b26\u662f\u767e\u5206\u53f7\uff08%\uff09\u3002\u5728\u641c\u7d22\u4e32\u4e2d\uff0c% \u8868\u793a\u4efb\u4f55\u5b57\u7b26\u51fa\u73b0\u4efb\u610f\u6b21\u6570\u3002 \u867d\u7136\u4f3c\u4e4e % \u901a\u914d\u7b26\u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u5373 NULL \u3002\u5373\u4f7f\u662f WHERE prod_name LIKE '%' \u4e5f\u4e0d\u80fd\u5339\u914d\u7528\u503c NULL \u4f5c\u4e3a\u4ea7\u54c1\u540d\u7684\u884c\u3002 \u4e0b\u5212\u7ebf\uff08 _ \uff09\u901a\u914d\u7b26 \u53e6\u4e00\u4e2a\u6709\u7528\u7684\u901a\u914d\u7b26\u662f\u4e0b\u5212\u7ebf\uff08 _ \uff09\u3002\u4e0b\u5212\u7ebf\u7684\u7528\u9014\u4e0e % \u4e00\u6837\uff0c\u4f46\u4e0b\u5212\u7ebf\u53ea\u5339\u914d\u5355\u4e2a\u5b57\u7b26\u800c\u4e0d\u662f\u591a\u4e2a\u5b57\u7b26\u3002 \u4e0e % \u80fd\u5339\u914d 0 \u4e2a\u5b57\u7b26\u4e0d\u4e00\u6837\uff0c_ \u603b\u662f\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u591a\u4e5f\u4e0d\u80fd\u5c11\u3002 \u4f7f\u7528\u901a\u914d\u7b26\u529f\u80fd\u662f\u6709\u4ee3\u4ef7\u7684\uff1a\u901a\u914d\u7b26\u641c\u7d22\u7684\u5904\u7406\u4e00\u822c\u8981\u6bd4\u5176\u4ed6\u641c\u7d22\u6240\u82b1\u7684\u65f6\u95f4\u66f4\u957f\u3002\u6240\u4ee5\u8981\u6ce8\u610f\uff1a \u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u901a\u914d\u7b26\u3002\u5982\u679c\u5176\u4ed6\u64cd\u4f5c\u7b26\u80fd\u8fbe\u5230\u76f8\u540c\u7684\u76ee\u7684\uff0c\u5e94\u8be5\u4f7f\u7528\u5176\u4ed6\u64cd\u4f5c\u7b26\u3002 \u5728\u786e\u5b9e\u9700\u8981\u4f7f\u7528\u901a\u914d\u7b26\u65f6\uff0c\u9664\u975e\u7edd\u5bf9\u6709\u5fc5\u8981\uff0c\u5426\u5219\u4e0d\u8981\u628a\u5b83\u4eec\u7528\u5728\u641c\u7d22\u6a21\u5f0f\u7684\u5f00\u59cb\u5904\u3002\u628a\u901a\u914d\u7b26\u7f6e\u4e8e\u641c\u7d22\u6a21\u5f0f\u7684\u5f00\u59cb\u5904\uff0c\u641c\u7d22\u8d77\u6765\u662f\u6700\u6162\u7684\u3002 \u6ce8\u610f\u901a\u914d\u7b26\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u653e\u9519\u5730\u65b9\uff0c\u53ef\u80fd\u4e0d\u4f1a\u8fd4\u56de\u60f3\u8981\u7684\u6570\u636e\u3002","title":"SELECT \u8bed\u53e5"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#select","text":"SELECT \u8bed\u53e5\uff0c\u901a\u5e38\u53c8\u79f0\u4e3a\u67e5\u8be2\uff08query\uff09\uff0c\u6b63\u5982\u5176\u540d\uff0c SELECT \u53ef\u4ee5\u7528\u6765\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u51fa\u6570\u636e\u3002\u4e00\u6761 SELECT \u8bed\u53e5\u6216\u8005\u53eb\u4e00\u4e2a\u67e5\u8be2\uff0c\u53ef\u4ee5\u63cf\u8ff0\u6211\u4eec\u8981\u4ece\u4ec0\u4e48\u8868\u53d6\u6570\u636e\uff0c\u8981\u53d6\u54ea\u4e9b\u6570\u636e\uff0c\u5728\u8fd4\u56de\u4e4b\u524d\u600e\u4e48\u5bf9\u7ed3\u679c\u505a\u4e00\u4e9b\u8f6c\u5316\u8ba1\u7b97\u7b49\u7b49\u3002 SELECT \u8bed\u6cd5\uff1a SELECT column \uff08\u5217\u540d\uff09 , another column \uff08\u5217\u540d\uff09 , ... FROM mytable \uff08\u8868\u540d\uff09 ; \u591a\u6570 DBMS \u4e0d\u8981\u6c42\u5728\u5355\u6761 SQL \u8bed\u53e5\u540e\u52a0\u5206\u53f7\uff0c\u5c11\u6570\u7279\u5b9a\u7684 DBMS \u5fc5\u987b\u5728\u5355\u6761 SQL \u8bed\u53e5\u540e\u52a0\u4e0a\u5206\u53f7\uff0c\u603b\u662f\u52a0\u4e0a\u5206\u53f7\u80af\u5b9a\u662f\u6ca1\u6709\u574f\u5904\u7684\u3002\u591a\u6761 SQL \u8bed\u53e5\u5fc5\u987b\u4ee5\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 SQL \u8bed\u53e5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u6309\u7167\u60ef\u4f8b\uff0c\u6240\u6709 SQL \u5173\u952e\u5b57\u4f7f\u7528\u5927\u5199\uff0c\u6240\u6709\u5217\u548c\u8868\u540d\u4f7f\u7528\u5c0f\u5199\uff0c\u8fd9\u6837\u80fd\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\u548c\u8c03\u8bd5\u3002 \u5728\u5904\u7406 SQL \u8bed\u53e5\u65f6\uff0c\u5176\u4e2d\u6240\u6709\u7684\u7a7a\u683c\u90fd\u88ab\u5ffd\u7565\u3002 SQL \u8bed\u53e5\u53ef\u4ee5\u5728\u4e00\u884c\u4e0a\u7ed9\u51fa\uff0c\u4e5f\u53ef\u4ee5\u5206\u6210\u8bb8\u591a\u884c\u3002\u591a\u5c11 SQL \u5f00\u53d1\u4eba\u5458\u8ba4\u4e3a\u5c06 SQL \u8bed\u53e5\u5206\u6210\u591a\u884c\u66f4\u5bb9\u6613\u9605\u8bfb\u548c\u8c03\u8bd5\u3002 \u5728\u9009\u62e9\u591a\u4e2a\u5217\u65f6\uff0c\u4e00\u5b9a\u8981\u5728\u5217\u540d\u4e4b\u95f4\u52a0\u4e0a\u9017\u53f7\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u5217\u540d\u540e\u4e0d\u52a0\u3002\u5982\u679c\u5728\u6700\u540e\u4e00\u4e2a\u5217\u540d\u540e\u52a0\u4e86\u9017\u53f7\uff0c\u5c06\u51fa\u73b0\u9519\u8bef\u3002 SELECT * FROM table ; \u8fd9\u6761\u8bed\u53e5\u53ef\u4ee5\u68c0\u7d22\u6240\u6709\u7684\u5217\u800c\u4e0d\u5fc5\u9010\u4e2a\u5217\u51fa\u5b83\u4eec\u3002 \u4e00\u822c\uff0c\u9664\u975e\u786e\u5b9e\u9700\u8981\u8868\u4e2d\u7684\u6bcf\u4e2a\u5217\uff0c\u5426\u5219\u6700\u597d\u4e0d\u8981\u4f7f\u7528 * \u901a\u914d\u7b26\u3002\u867d\u7136\u4f7f\u7528\u901a\u914d\u7b26\u53ef\u80fd\u4f1a\u6bd4\u8f83\u7701\u4e8b\uff0c\u4e0d\u7528\u660e\u786e\u5217\u51fa\u6240\u9700\u5217\uff0c\u4f46\u68c0\u7d22\u4e0d\u9700\u8981\u7684\u5217\u901a\u5e38\u4f1a\u964d\u4f4e\u68c0\u7d22\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u3002","title":"SELECT \u8bed\u53e5"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_1","text":"SQL \u8bed\u53e5\u7531\u5b50\u53e5\u6784\u6210\uff0c\u6709\u4e9b\u5b50\u53e5\u662f\u5fc5\u9700\u7684\uff0c\u800c\u6709\u7684\u662f\u53ef\u9009\u7684\u3002\u4e00\u4e2a\u5b50\u53e5\u901a\u5e38\u7531\u4e00\u4e2a\u5173\u952e\u5b57\u548c\u6240\u63d0\u4f9b\u7684\u6570\u636e\u7ec4\u6210\u3002 \u4e3a\u4e86\u660e\u786e\u5730\u6392\u5e8f\u7528 SELECT \u8bed\u53e5\u68c0\u7d22\u51fa\u7684\u6570\u636e\uff0c\u53ef\u4f7f\u7528 ORDER BY \u5b50\u53e5\u3002ORDER BY \u5b50\u53e5\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u540d\u5b57\uff0c\u636e\u6b64\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\u3002 ORDER BY \u8bed\u6cd5\uff1a SELECT column_name FROM table ORDER BY column_name ; \u901a\u5e38\uff0cORDER BY \u5b50\u53e5\u4e2d\u4f7f\u7528\u7684\u5217\u5c06\u4f7f\u4e3a\u663e\u793a\u6240\u9009\u62e9\u7684\u5217\u3002\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4e00\u5b9a\u8981\u8fd9\u6837\uff0c\u7528\u975e\u68c0\u7d22\u7684\u5217\u6392\u5e8f\u6570\u636e\u662f\u5b8c\u5168\u5408\u6cd5\u7684\u3002 \u60f3\u8981\u6309\u591a\u4e2a\u5217\u6392\u5e8f\uff0c\u53ea\u8981\u6307\u5b9a\u5217\u540d\uff0c\u5217\u540d\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u5f00\u5373\u53ef\u3002 SELECT column_name FROM table ORDER BY column_name1 , column_name2 ; \u6570\u636e\u6392\u5e8f\u4e0d\u9650\u4e8e\u5347\u5e8f\u6392\u5e8f\uff08\u4ece A \u5230 Z\uff09\uff0c\u8fd9\u53ea\u662f\u9ed8\u8ba4\u7684\u6392\u5e8f\u987a\u5e8f\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 ORDER BY \u5b50\u53e5\u4ee5\u964d\u5e8f\uff08\u4ece Z \u5230 A\uff09\u987a\u5e8f\u6392\u5e8f\u3002\u964d\u5e8f\u6392\u5e8f\u5fc5\u987b\u6307\u5b9a DESC \u5173\u952e\u5b57\uff08\u5347\u5e8f\u6392\u5e8f\u4e3a ASC\uff09\u3002 SELECT column_name FROM table ORDER BY column_name DESC ; SELECT column_name FROM table ORDER BY column_name1 DESC , column_name2 ; DESC \u5173\u952e\u5b57\u53ea\u5e94\u7528\u5230\u76f4\u63a5\u4f4d\u4e8e\u5176\u524d\u9762\u7684\u5217\uff0c\u5982\u679c\u60f3\u5728\u591a\u4e2a\u5217\u4e0a\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u5217\u6307\u5b9a DESC \u5173\u952e\u5b57\u3002","title":"\u6392\u5e8f\u6570\u636e"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_2","text":"\u5982\u679c SELECT \u8fd4\u56de\u7684\u7ed3\u679c\u4e2d\u6709\u591a\u4e2a\u76f8\u540c\u7684\u884c\uff0c\u53c8\u4e0d\u60f3\u8981\u6bcf\u4e2a\u503c\u6bcf\u6b21\u90fd\u51fa\u73b0\uff0c\u600e\u4e48\u529e\uff1f\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528 DISTINCT \u5173\u952e\u5b57\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6b64\u5173\u952e\u5b57\u6307\u793a DBMS \u53ea\u8fd4\u56de\u4e0d\u540c\u7684\u503c\u3002 SELECT DISTINCT column_name FROM table ; \u4e0d\u80fd\u90e8\u5206\u4f7f\u7528 DISTINCT\uff0c\u8be5\u5173\u952e\u5b57\u5e94\u7528\u4e0e\u6240\u6709\u5217\u800c\u4e0d\u4ec5\u662f\u524d\u7f6e\u5b83\u7684\u5217\u3002","title":"\u533a\u5206\u6570\u636e"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_3","text":"SELECT \u8bed\u53e5\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u884c\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\u6307\u5b9a\u8868\u4e2d\u7684\u6bcf\u4e2a\u884c\u3002\u4e3a\u4e86\u8fd4\u56de\u7b2c\u4e00\u884c\u6216\u524d\u51e0\u884c\uff0c\u53ef\u4f7f\u7528 LIMIT \u5b50\u53e5\u3002 SELECT column_name FROM table LIMIT 5 ; SELECT column_name FROM table LIMIT 5 , 5 ; \u5e26\u4e00\u4e2a\u503c\u7684 LIMIT \u603b\u662f\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u7ed9\u51fa\u7684\u6570\u4e3a\u8fd4\u56de\u7684\u884c\u6570\u3002\u5e26\u4e24\u4e2a\u503c\u7684 LIMIT \u53ef\u4ee5\u6307\u5b9a\u4ece\u884c\u53f7\u4e3a\u7b2c\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\u5f00\u59cb\u3002 \u68c0\u7d22\u51fa\u6765\u7684\u7b2c\u4e00\u884c\u4e3a\u884c 0 \u800c\u4e0d\u662f\u884c 1\u3002\u56e0\u6b64\uff0c LIMIT 1, 1 \u5c06\u68c0\u7d22\u51fa\u7b2c\u4e8c\u884c\u800c\u4e0d\u662f\u7b2c\u4e00\u884c\u3002 \u4f7f\u7528 ORDR BY \u548c LIMIT \u7684\u7ec4\u5408\uff0c\u80fd\u591f\u627e\u51fa\u4e00\u4e2a\u5217\u4e2d\u6700\u9ad8\u6216\u6700\u4f4e\u7684\u503c\u3002 SELECT column_name FROM table ORDER BY column_name LIMIT 1 ; \u5728\u7ed9\u51fa ORDER BY \u5b50\u53e5\u65f6\uff0c\u5e94\u8be5\u4fdd\u8bc1\u5b83\u4f4d\u4e8e FROM \u5b50\u53e5\u4e4b\u540e\u3002\u5982\u679c\u4f7f\u7528 LIMIT\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e ORDER BY \u4e4b\u540e\u3002\u4f7f\u7528\u5b50\u53e5\u7684\u6b21\u5e8f\u4e0d\u5bf9\u5c06\u4ea7\u751f\u9519\u8bef\u6d88\u606f\u3002","title":"\u9650\u5236\u7ed3\u679c"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_4","text":"\u6570\u636e\u5e93\u8868\u4e00\u822c\u5305\u542b\u5927\u91cf\u7684\u6570\u636e\uff0c\u5f88\u5c11\u9700\u8981\u68c0\u7d22\u8868\u4e2d\u6240\u6709\u884c\uff0c\u901a\u5e38\u53ea\u4f1a\u6839\u636e\u7279\u5b9a\u64cd\u4f5c\u6216\u62a5\u544a\u7684\u9700\u8981\u63d0\u53d6\u8868\u6570\u636e\u7684\u5b50\u96c6\u3002\u5728 SELECT \u8bed\u53e5\u4e2d\uff0c\u6570\u636e\u6839\u636e WHERE \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u641c\u7d22\u6761\u4ef6\u8fdb\u884c\u8fc7\u6ee4\u3002 SELECT column_name FROM table WHERE id = 1 ; \u5728\u540c\u65f6\u4f7f\u7528 ORDER BY \u548c WHERE \u5b50\u53e5\u65f6\uff0c\u5e94\u8be5\u8ba9 ORDER BY \u4f4d\u4e8e WHERE \u4e4b\u540e\uff0c\u5426\u5219\u5c06\u4f1a\u4ea7\u751f\u9519\u8bef\u3002","title":"\u8fc7\u6ee4\u6570\u636e"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#where","text":"\u4e3a\u4e86\u8fdb\u884c\u66f4\u5f3a\u7684\u8fc7\u6ee4\u63a7\u5236\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a WHERE \u5b50\u53e5\uff1a\u4ee5 AND \u6216 OR \u5b50\u53e5\u7684\u65b9\u5f0f\u4f7f\u7528\u3002 \u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528 AND \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u6307\u793a\u68c0\u7d22\u6ee1\u8db3\u6240\u6709\u7ed9\u5b9a\u6761\u4ef6\u7684\u884c\uff0c\u6bcf\u589e\u52a0\u4e00\u4e2a\u6761\u4ef6\u5c31\u8981\u4f7f\u7528\u4e00\u4e2a AND \u5173\u952e\u5b57\u3002 SELECT column_name FROM table WHERE id = 1 AND name = \"tom\" ; OR \u5173\u952e\u5b57\u6307\u793a\u68c0\u7d22\u5339\u914d\u4efb\u4e00\u6761\u4ef6\u7684\u884c\u3002 SELECT column_name FROM table WHERE id = 1 OR name = \"tom\" ; \u4efb\u4f55\u65f6\u5019\u4f7f\u7528\u5177\u6709 AND \u548c OR \u64cd\u4f5c\u7b26\u7684 WHERE \u5b50\u53e5\uff0c\u90fd\u5e94\u8be5\u4f7f\u7528\u5706\u62ec\u53f7\u660e\u786e\u5730\u5206\u7ec4\u64cd\u4f5c\u7b26\u3002\u4e0d\u8981\u8fc7\u5206\u4f9d\u8d56\u9ed8\u8ba4\u8ba1\u7b97\u6b21\u5e8f\uff0c\u5373\u4f7f\u4ed6\u786e\u5b9e\u662f\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u4e5f\u662f\u5982\u6b64\u3002\u4f7f\u7528\u5706\u62ec\u53f7\u6ca1\u6709\u4ec0\u4e48\u574f\u5904\uff0c\u5b83\u80fd\u6d88\u9664\u6b67\u4e49\u3002","title":"\u7ec4\u5408 WHERE \u5b50\u53e5"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#in","text":"\u5706\u62ec\u53f7\u5728 WHERE \u5b50\u53e5\u4e2d\u8fd8\u6709\u53e6\u4e00\u79cd\u7528\u6cd5\u3002IN \u64cd\u4f5c\u7b26\u7528\u6765\u6307\u5b9a\u6761\u4ef6\u8303\u56f4\uff0c\u8303\u56f4\u4e2d\u7684\u6bcf\u4e2a\u6761\u4ef6\u90fd\u53ef\u4ee5\u8fdb\u884c\u5339\u914d\u3002IN \u53d6\u5408\u6cd5\u503c\u7684\u7531\u9017\u53f7\u5206\u9694\u7684\u6e05\u5355\uff0c\u5168\u90fd\u62ec\u5728\u5706\u62ec\u53f7\u4e2d\u3002 SELECT column_name FROM table WHERE id IN ( 1 , 3 , 4 ); IN \u64cd\u4f5c\u7b26\u7684\u529f\u80fd\u4e0e OR \u64cd\u4f5c\u7b26\u76f8\u5f53\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a \u5728\u4f7f\u7528\u957f\u7684\u5408\u6cd5\u9009\u9879\u6e05\u5355\u65f6\uff0cIN \u64cd\u4f5c\u7b26\u7684\u8bed\u6cd5\u66f4\u6e05\u695a\u4e14\u66f4\u76f4\u89c2\u3002 \u5728\u4f7f\u7528 IN \u65f6\uff0c\u8ba1\u7b97\u7684\u6b21\u5e8f\u66f4\u5bb9\u6613\u7ba1\u7406\uff08\u56e0\u4e3a\u4f7f\u7528\u7684\u64cd\u4f5c\u7b26\u66f4\u5c11\uff09\u3002 IN \u64cd\u4f5c\u7b26\u4e00\u822c\u6bd4 OR \u64cd\u4f5c\u7b26\u6e05\u5355\u6267\u884c\u66f4\u5feb\u3002 IN \u7684\u6700\u5927\u6709\u70b9\u662f\u53ef\u4ee5\u5305\u542b\u5176\u4ed6 SELECT \u8bed\u53e5\uff0c\u4f7f\u5f97\u80fd\u591f\u66f4\u52a8\u6001\u5730\u5efa\u7acb WHERE \u5b50\u53e5\u3002","title":"IN \u64cd\u4f5c\u7b26"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#not","text":"WHERE \u5b50\u53e5\u4e2d\u7684 NOT \u64cd\u4f5c\u7b26\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u529f\u80fd\uff0c\u90a3\u5c31\u662f\u5426\u5b9a\u5b83\u4e4b\u540e\u6240\u8ddf\u7684\u4efb\u4f55\u6761\u4ef6\u3002 SELECT column_name FROM table WHERE id NOT IN ( 1 , 3 , 4 );","title":"NOT \u64cd\u4f5c\u7b26"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_5","text":"","title":"\u7528\u901a\u914d\u7b26\u8fc7\u6ee4"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_6","text":"\u6700\u5e38\u4f7f\u7528\u7684\u901a\u914d\u7b26\u662f\u767e\u5206\u53f7\uff08%\uff09\u3002\u5728\u641c\u7d22\u4e32\u4e2d\uff0c% \u8868\u793a\u4efb\u4f55\u5b57\u7b26\u51fa\u73b0\u4efb\u610f\u6b21\u6570\u3002 \u867d\u7136\u4f3c\u4e4e % \u901a\u914d\u7b26\u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u5373 NULL \u3002\u5373\u4f7f\u662f WHERE prod_name LIKE '%' \u4e5f\u4e0d\u80fd\u5339\u914d\u7528\u503c NULL \u4f5c\u4e3a\u4ea7\u54c1\u540d\u7684\u884c\u3002","title":"\u767e\u5206\u53f7\uff08%\uff09\u901a\u914d\u7b26"},{"location":"Programming/06.%20%E6%95%B0%E6%8D%AE%E5%BA%93/01.%20SQL%20%E5%85%A5%E9%97%A8/01.%20%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/#_","text":"\u53e6\u4e00\u4e2a\u6709\u7528\u7684\u901a\u914d\u7b26\u662f\u4e0b\u5212\u7ebf\uff08 _ \uff09\u3002\u4e0b\u5212\u7ebf\u7684\u7528\u9014\u4e0e % \u4e00\u6837\uff0c\u4f46\u4e0b\u5212\u7ebf\u53ea\u5339\u914d\u5355\u4e2a\u5b57\u7b26\u800c\u4e0d\u662f\u591a\u4e2a\u5b57\u7b26\u3002 \u4e0e % \u80fd\u5339\u914d 0 \u4e2a\u5b57\u7b26\u4e0d\u4e00\u6837\uff0c_ \u603b\u662f\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u591a\u4e5f\u4e0d\u80fd\u5c11\u3002 \u4f7f\u7528\u901a\u914d\u7b26\u529f\u80fd\u662f\u6709\u4ee3\u4ef7\u7684\uff1a\u901a\u914d\u7b26\u641c\u7d22\u7684\u5904\u7406\u4e00\u822c\u8981\u6bd4\u5176\u4ed6\u641c\u7d22\u6240\u82b1\u7684\u65f6\u95f4\u66f4\u957f\u3002\u6240\u4ee5\u8981\u6ce8\u610f\uff1a \u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u901a\u914d\u7b26\u3002\u5982\u679c\u5176\u4ed6\u64cd\u4f5c\u7b26\u80fd\u8fbe\u5230\u76f8\u540c\u7684\u76ee\u7684\uff0c\u5e94\u8be5\u4f7f\u7528\u5176\u4ed6\u64cd\u4f5c\u7b26\u3002 \u5728\u786e\u5b9e\u9700\u8981\u4f7f\u7528\u901a\u914d\u7b26\u65f6\uff0c\u9664\u975e\u7edd\u5bf9\u6709\u5fc5\u8981\uff0c\u5426\u5219\u4e0d\u8981\u628a\u5b83\u4eec\u7528\u5728\u641c\u7d22\u6a21\u5f0f\u7684\u5f00\u59cb\u5904\u3002\u628a\u901a\u914d\u7b26\u7f6e\u4e8e\u641c\u7d22\u6a21\u5f0f\u7684\u5f00\u59cb\u5904\uff0c\u641c\u7d22\u8d77\u6765\u662f\u6700\u6162\u7684\u3002 \u6ce8\u610f\u901a\u914d\u7b26\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u653e\u9519\u5730\u65b9\uff0c\u53ef\u80fd\u4e0d\u4f1a\u8fd4\u56de\u60f3\u8981\u7684\u6570\u636e\u3002","title":"\u4e0b\u5212\u7ebf\uff08_\uff09\u901a\u914d\u7b26"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/Windows%20%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E5%AE%9A%E4%BD%8D/","text":"Windows \u7a0b\u5e8f\u53d1\u5e03\u540e\uff0c\u7528\u6237\u53cd\u9988\u9047\u5230\u7a0b\u5e8f\u5d29\u6e83\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u751f\u6210 minidump \u6587\u4ef6\u529f\u80fd\u6765\u8f85\u52a9\u5b9a\u4f4d\u95ee\u9898\u7684\u6839\u6e90\u3002 \u6e90\u7801 /* CrashHandler.h */ #pragma once #include <DbgHelp.h> LONG WINAPI ExceptionFilter ( LPEXCEPTION_POINTERS lpExceptionInfo ); int GenerateMiniDump ( HANDLE hFile , PEXCEPTION_POINTERS pExceptionPointers , PWCHAR pwAppName ); /* CrashHandler.cpp */ #include \"pch.h\" #include \"CrashHandler.h\" #include <string> #include <strsafe.h> LONG WINAPI ExceptionFilter ( LPEXCEPTION_POINTERS lpExceptionInfo ) { :: MessageBox ( NULL , _T ( \"*\uff01\u7a0b\u5e8f\u5d29\u6e83\u4e86\uff01\" ), _T ( \"Crash\" ), MB_OK ); if ( IsDebuggerPresent ()) { return EXCEPTION_CONTINUE_SEARCH ; } return GenerateMiniDump ( NULL , lpExceptionInfo , _T ( \"test\" )); } //\u751f\u6210DUMP\u6587\u4ef6 int GenerateMiniDump ( HANDLE hFile , PEXCEPTION_POINTERS pExceptionPointers , PWCHAR pwAppName ) { BOOL bOwnDumpFile = FALSE ; HANDLE hDumpFile = hFile ; MINIDUMP_EXCEPTION_INFORMATION ExpParam ; typedef BOOL ( WINAPI * MiniDumpWriteDumpT )( HANDLE , DWORD , HANDLE , MINIDUMP_TYPE , PMINIDUMP_EXCEPTION_INFORMATION , PMINIDUMP_USER_STREAM_INFORMATION , PMINIDUMP_CALLBACK_INFORMATION ); MiniDumpWriteDumpT pfnMiniDumpWriteDump = NULL ; HMODULE hDbgHelp = LoadLibrary ( _T ( \"DbgHelp.dll\" )); if ( hDbgHelp ) pfnMiniDumpWriteDump = ( MiniDumpWriteDumpT ) GetProcAddress ( hDbgHelp , \"MiniDumpWriteDump\" ); if ( pfnMiniDumpWriteDump ) { if ( hDumpFile == NULL || hDumpFile == INVALID_HANDLE_VALUE ) { TCHAR szPath [ MAX_PATH ] = { 0 }; TCHAR szFileName [ MAX_PATH ] = { 0 }; TCHAR * szAppName = pwAppName ; TCHAR * szVersion = _T ( \"v1.0\" ); DWORD dwBufferSize = MAX_PATH ; SYSTEMTIME stLocalTime ; GetLocalTime ( & stLocalTime ); GetModuleFileName ( NULL , szPath , dwBufferSize ); TCHAR * tp = StrRChr ( szPath , szPath + MAX_PATH , L '\\\\' ); * tp = 0 ; StringCchPrintf ( szFileName , MAX_PATH , _T ( \"%s \\\\ dump\" ), szPath ); CreateDirectory ( szFileName , NULL ); StringCchPrintf ( szFileName , MAX_PATH , _T ( \"%s \\\\ dump \\\\ SVN_%s-%04d%02d%02d-%02d%02d%02d-%ld-%ld.dmp\" ), szPath , szVersion , stLocalTime . wYear , stLocalTime . wMonth , stLocalTime . wDay , stLocalTime . wHour , stLocalTime . wMinute , stLocalTime . wSecond , GetCurrentProcessId (), GetCurrentThreadId ()); hDumpFile = CreateFile ( szFileName , GENERIC_READ | GENERIC_WRITE , FILE_SHARE_WRITE | FILE_SHARE_READ , 0 , CREATE_ALWAYS , 0 , 0 ); bOwnDumpFile = TRUE ; OutputDebugString ( szFileName ); } if ( hDumpFile != INVALID_HANDLE_VALUE ) { ExpParam . ThreadId = GetCurrentThreadId (); ExpParam . ExceptionPointers = pExceptionPointers ; ExpParam . ClientPointers = FALSE ; pfnMiniDumpWriteDump ( GetCurrentProcess (), GetCurrentProcessId (), hDumpFile , MiniDumpWithDataSegs , ( pExceptionPointers ? & ExpParam : NULL ), NULL , NULL ); if ( bOwnDumpFile ) CloseHandle ( hDumpFile ); } } if ( hDbgHelp != NULL ) FreeLibrary ( hDbgHelp ); return EXCEPTION_EXECUTE_HANDLER ; } \u5728\u4e3b\u7a0b\u5e8f\u5165\u53e3\u5904\u6dfb\u52a0\u4ee3\u7801\uff1a SetUnhandledExceptionFilter(ExceptionFilter); dump \u6587\u4ef6\u5982\u4f55\u4f7f\u7528 \u4f7f\u7528 dump \u6587\u4ef6\u9700\u8981\u7f16\u8bd1\u53d1\u5e03\u7a0b\u5e8f\u65f6\u751f\u6210\u7684 pdb \u6587\u4ef6\u3002 \u6ce8\u610f\uff1a\u5373\u4f7f\u672a\u6539\u52a8\u4efb\u4f55\u4ee3\u7801\uff0c\u91cd\u65b0\u7f16\u8bd1\u751f\u6210\u7684 pdb \u6587\u4ef6\u4e5f\u65e0\u6cd5\u4f7f\u7528\uff0c\u5fc5\u987b\u662f\u53d1\u5e03\u65f6\u7f16\u8bd1\u751f\u6210\u7684 pdb \u624d\u884c\u3002 \u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u4f7f\u7528VS\u6253\u5f00 \u76f4\u63a5\u4f7f\u7528 VS \u6253\u5f00 dump \u6587\u4ef6 \u70b9\u51fb\u201c\u4f7f\u7528\u4ec5\u9650\u672c\u673a\u8fdb\u884c\u8c03\u8bd5\u201d \u82e5 pdb \u6587\u4ef6\u76ee\u5f55\u6709\u6539\u52a8\uff0c\u5219\u9700\u8bbe\u7f6e\u7b26\u53f7\u8def\u5f84\u3002 \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 windbg \u8c03\u8bd5 \u6253\u5f00 windbg \u7a0b\u5e8f \u9009\u62e9\u83dc\u5355 File -> Symbol file path\uff0c\u8bbe\u7f6e pdb \u7b26\u53f7\u6587\u4ef6\u8def\u5f84 \u9009\u62e9\u83dc\u5355 File -> Source file paht\uff0c\u8bbe\u7f6e\u6e90\u4ee3\u7801\u8def\u5f84 \u9009\u62e9\u83dc\u5355 File -> Open Crash Dump\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u8c03\u8bd5\u4fe1\u606f\u7a97\u53e3 \u5728\u5f39\u51fa\u7a97\u53e3\u6700\u4e0b\u65b9\u7684\u547d\u4ee4\u884c\u91cc\u8f93\u5165 !analyze -v \uff0c\u56de\u8f66\u5373\u53ef\u770b\u5230\u5d29\u6e83\u5806\u6808\u76f8\u5173\u4fe1\u606f\uff08\u6d4b\u8bd5\u65f6\u76f4\u63a5\u6307\u660e\u4e86\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u4ee3\u7801\u6240\u5728\u6587\u4ef6\u548c\u884c\u53f7\uff09","title":"Windows \u7a0b\u5e8f\u5d29\u6e83\u5b9a\u4f4d"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/Windows%20%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E5%AE%9A%E4%BD%8D/#_1","text":"/* CrashHandler.h */ #pragma once #include <DbgHelp.h> LONG WINAPI ExceptionFilter ( LPEXCEPTION_POINTERS lpExceptionInfo ); int GenerateMiniDump ( HANDLE hFile , PEXCEPTION_POINTERS pExceptionPointers , PWCHAR pwAppName ); /* CrashHandler.cpp */ #include \"pch.h\" #include \"CrashHandler.h\" #include <string> #include <strsafe.h> LONG WINAPI ExceptionFilter ( LPEXCEPTION_POINTERS lpExceptionInfo ) { :: MessageBox ( NULL , _T ( \"*\uff01\u7a0b\u5e8f\u5d29\u6e83\u4e86\uff01\" ), _T ( \"Crash\" ), MB_OK ); if ( IsDebuggerPresent ()) { return EXCEPTION_CONTINUE_SEARCH ; } return GenerateMiniDump ( NULL , lpExceptionInfo , _T ( \"test\" )); } //\u751f\u6210DUMP\u6587\u4ef6 int GenerateMiniDump ( HANDLE hFile , PEXCEPTION_POINTERS pExceptionPointers , PWCHAR pwAppName ) { BOOL bOwnDumpFile = FALSE ; HANDLE hDumpFile = hFile ; MINIDUMP_EXCEPTION_INFORMATION ExpParam ; typedef BOOL ( WINAPI * MiniDumpWriteDumpT )( HANDLE , DWORD , HANDLE , MINIDUMP_TYPE , PMINIDUMP_EXCEPTION_INFORMATION , PMINIDUMP_USER_STREAM_INFORMATION , PMINIDUMP_CALLBACK_INFORMATION ); MiniDumpWriteDumpT pfnMiniDumpWriteDump = NULL ; HMODULE hDbgHelp = LoadLibrary ( _T ( \"DbgHelp.dll\" )); if ( hDbgHelp ) pfnMiniDumpWriteDump = ( MiniDumpWriteDumpT ) GetProcAddress ( hDbgHelp , \"MiniDumpWriteDump\" ); if ( pfnMiniDumpWriteDump ) { if ( hDumpFile == NULL || hDumpFile == INVALID_HANDLE_VALUE ) { TCHAR szPath [ MAX_PATH ] = { 0 }; TCHAR szFileName [ MAX_PATH ] = { 0 }; TCHAR * szAppName = pwAppName ; TCHAR * szVersion = _T ( \"v1.0\" ); DWORD dwBufferSize = MAX_PATH ; SYSTEMTIME stLocalTime ; GetLocalTime ( & stLocalTime ); GetModuleFileName ( NULL , szPath , dwBufferSize ); TCHAR * tp = StrRChr ( szPath , szPath + MAX_PATH , L '\\\\' ); * tp = 0 ; StringCchPrintf ( szFileName , MAX_PATH , _T ( \"%s \\\\ dump\" ), szPath ); CreateDirectory ( szFileName , NULL ); StringCchPrintf ( szFileName , MAX_PATH , _T ( \"%s \\\\ dump \\\\ SVN_%s-%04d%02d%02d-%02d%02d%02d-%ld-%ld.dmp\" ), szPath , szVersion , stLocalTime . wYear , stLocalTime . wMonth , stLocalTime . wDay , stLocalTime . wHour , stLocalTime . wMinute , stLocalTime . wSecond , GetCurrentProcessId (), GetCurrentThreadId ()); hDumpFile = CreateFile ( szFileName , GENERIC_READ | GENERIC_WRITE , FILE_SHARE_WRITE | FILE_SHARE_READ , 0 , CREATE_ALWAYS , 0 , 0 ); bOwnDumpFile = TRUE ; OutputDebugString ( szFileName ); } if ( hDumpFile != INVALID_HANDLE_VALUE ) { ExpParam . ThreadId = GetCurrentThreadId (); ExpParam . ExceptionPointers = pExceptionPointers ; ExpParam . ClientPointers = FALSE ; pfnMiniDumpWriteDump ( GetCurrentProcess (), GetCurrentProcessId (), hDumpFile , MiniDumpWithDataSegs , ( pExceptionPointers ? & ExpParam : NULL ), NULL , NULL ); if ( bOwnDumpFile ) CloseHandle ( hDumpFile ); } } if ( hDbgHelp != NULL ) FreeLibrary ( hDbgHelp ); return EXCEPTION_EXECUTE_HANDLER ; } \u5728\u4e3b\u7a0b\u5e8f\u5165\u53e3\u5904\u6dfb\u52a0\u4ee3\u7801\uff1a SetUnhandledExceptionFilter(ExceptionFilter);","title":"\u6e90\u7801"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/Windows%20%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E5%AE%9A%E4%BD%8D/#dump","text":"\u4f7f\u7528 dump \u6587\u4ef6\u9700\u8981\u7f16\u8bd1\u53d1\u5e03\u7a0b\u5e8f\u65f6\u751f\u6210\u7684 pdb \u6587\u4ef6\u3002 \u6ce8\u610f\uff1a\u5373\u4f7f\u672a\u6539\u52a8\u4efb\u4f55\u4ee3\u7801\uff0c\u91cd\u65b0\u7f16\u8bd1\u751f\u6210\u7684 pdb \u6587\u4ef6\u4e5f\u65e0\u6cd5\u4f7f\u7528\uff0c\u5fc5\u987b\u662f\u53d1\u5e03\u65f6\u7f16\u8bd1\u751f\u6210\u7684 pdb \u624d\u884c\u3002","title":"dump \u6587\u4ef6\u5982\u4f55\u4f7f\u7528"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/Windows%20%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E5%AE%9A%E4%BD%8D/#vs","text":"\u76f4\u63a5\u4f7f\u7528 VS \u6253\u5f00 dump \u6587\u4ef6 \u70b9\u51fb\u201c\u4f7f\u7528\u4ec5\u9650\u672c\u673a\u8fdb\u884c\u8c03\u8bd5\u201d \u82e5 pdb \u6587\u4ef6\u76ee\u5f55\u6709\u6539\u52a8\uff0c\u5219\u9700\u8bbe\u7f6e\u7b26\u53f7\u8def\u5f84\u3002","title":"\u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u4f7f\u7528VS\u6253\u5f00"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/Windows%20%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E5%AE%9A%E4%BD%8D/#windbg","text":"\u6253\u5f00 windbg \u7a0b\u5e8f \u9009\u62e9\u83dc\u5355 File -> Symbol file path\uff0c\u8bbe\u7f6e pdb \u7b26\u53f7\u6587\u4ef6\u8def\u5f84 \u9009\u62e9\u83dc\u5355 File -> Source file paht\uff0c\u8bbe\u7f6e\u6e90\u4ee3\u7801\u8def\u5f84 \u9009\u62e9\u83dc\u5355 File -> Open Crash Dump\uff0c\u4f1a\u5f39\u51fa\u4e00\u4e2a\u8c03\u8bd5\u4fe1\u606f\u7a97\u53e3 \u5728\u5f39\u51fa\u7a97\u53e3\u6700\u4e0b\u65b9\u7684\u547d\u4ee4\u884c\u91cc\u8f93\u5165 !analyze -v \uff0c\u56de\u8f66\u5373\u53ef\u770b\u5230\u5d29\u6e83\u5806\u6808\u76f8\u5173\u4fe1\u606f\uff08\u6d4b\u8bd5\u65f6\u76f4\u63a5\u6307\u660e\u4e86\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u4ee3\u7801\u6240\u5728\u6587\u4ef6\u548c\u884c\u53f7\uff09","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 windbg \u8c03\u8bd5"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/","text":"\u4e00\u4e2a\u597d\u7684\u547d\u540d\u5e94\u8be5\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u7ea6\u675f\uff1a \u51c6\u786e\u63cf\u8ff0\u6240\u505a\u7684\u4e8b\u60c5 \u683c\u5f0f\u7b26\u5408\u901a\u7528\u7684\u60ef\u4f8b \u5982\u679c\u4f60\u89c9\u5f97\u4e00\u4e2a\u7c7b\u6216\u65b9\u6cd5\u96be\u4ee5\u547d\u540d\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u662f\u5176\u627f\u8f7d\u7684\u529f\u80fd\u592a\u591a\u4e86\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u62c6\u5206\u3002 \u7ea6\u5b9a\u4fd7\u6210\u7684\u60ef\u4f8b \u573a\u666f \u7ea6\u675f \u793a\u4f8b \u9879\u76ee\u540d \u5168\u90e8\u5c0f\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e2d\u5212\u7ebf - \u5206\u9694 spring-cloud \u5305\u540d \u5168\u90e8\u5c0f\u5199 com.alibaba.fastjson \u7c7b\u540d/\u63a5\u53e3\u540d \u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 ParserConfig DefaultFieldDeserializer \u53d8\u91cf\u540d \u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\u65f6\uff0c\u9664\u9996\u4e2a\u5355\u8bcd\uff0c\u5176\u4ed6\u5355\u8bcd\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199 password \uff0c userName \u5e38\u91cf\u540d \u5168\u90e8\u5927\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\uff0c\u7528 \u4e0b\u5212\u7ebf _ \u5206\u9694 CACHE_EXPIRED_TIME \u65b9\u6cd5 \u540c\u53d8\u91cf read() readObject() getById() Python\u4e2d\u53d8\u91cf\u540d\u5927\u591a\u4e3a\u5c0f\u5199\uff0c\u5355\u8bcd\u7528 _ \u5206\u9694\u3002 \u7c7b\u547d\u540d \u7c7b\u540d\u4f7f\u7528\u5927\u9a7c\u5cf0\u547d\u540d\u5f62\u5f0f\uff0c\u7c7b\u547d\u901a\u5e38\u4f7f\u7528\u540d\u8bcd\u6216\u540d\u8bcd\u77ed\u8bed\u3002\u63a5\u53e3\u540d\u9664\u4e86\u7528\u540d\u8bcd\u548c\u540d\u8bcd\u77ed\u8bed\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5f62\u5bb9\u8bcd\u6216\u5f62\u5bb9\u8bcd\u77ed\u8bed\uff0c\u5982 Cloneable \uff0c Callable \u7b49\uff0c\u8868\u793a\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\u6709\u67d0\u79cd\u529f\u80fd\u6216\u80fd\u529b\u3002 \u573a\u666f \u7ea6\u675f \u793a\u4f8b \u62bd\u8c61\u7c7b Abstract \u6216\u8005 Base \u5f00\u5934 BaseUserService \u679a\u4e3e\u7c7b Enum \u4f5c\u4e3a\u540e\u7f00 GenderEnum \u5de5\u5177\u7c7b Utils \u4f5c\u4e3a\u540e\u7f00 StringUtils \u5f02\u5e38\u7c7b Exception \u7ed3\u5c3e RuntimeException \u63a5\u53e3\u5b9e\u73b0\u7c7b \u63a5\u53e3\u540d + Impl UserServiceImpl \u8bbe\u8ba1\u6a21\u5f0f\u76f8\u5173\u7c7b Builder \uff0c Factory \u7b49 \u5f53\u4f7f\u7528\u5230\u8bbe\u8ba1\u6a21\u5f0f\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4f5c\u4e3a\u540e\u7f00\uff0c\u5982 ThreadFactory \u5904\u7406\u7279\u5b9a\u529f\u80fd\u7684\u7c7b Handler \uff0c Predicate , Validator \u8868\u793a\u5904\u7406\u5668\uff0c\u6821\u9a8c\u5668\uff0c\u65ad\u8a00\uff0c\u8fd9\u4e9b\u7c7b\u5de5\u5382\u8fd8\u6709\u914d\u5957\u7684\u65b9\u6cd5\u540d\u5982 handle \uff0c predicate \uff0c validate \u7279\u5b9a\u5c42\u7ea7\u7684\u7c7b Controller \uff0c Service \uff0c ServiceImpl \uff0c Dao \u540e\u7f00 UserController \uff0c UserServiceImpl \uff0c UserDao \u7279\u5b9a\u5c42\u7ea7\u7684\u503c\u5bf9\u8c61 Ao \uff0c Param \uff0c Vo \uff0c Config \uff0c Message Param \u8c03\u7528\u5165\u53c2\uff1b Ao \u4e3a thrift \u8fd4\u56de\u7ed3\u679c\uff1b Vo \u901a\u7528\u503c\u5bf9\u8c61\uff1b Config \u914d\u7f6e\u7c7b\uff1b Message \u4e3a MQ \u6d88\u606f \u6d4b\u8bd5\u7c7b Test \u7ed3\u5c3e UserServiceTest \uff0c\u8868\u793a\u7528\u6765\u6d4b\u8bd5 UserService \u7c7b\u7684 \u65b9\u6cd5\u547d\u540d \u65b9\u6cd5\u547d\u540d\u91c7\u7528\u5c0f\u9a7c\u5cf0\u7684\u5f62\u5f0f\uff0c\u9996\u5b57\u5c0f\u5199\uff0c\u5f80\u540e\u7684\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199\u3002\u548c\u7c7b\u540d\u4e0d\u540c\u7684\u662f\uff0c\u65b9\u6cd5\u547d\u540d\u4e00\u822c\u4e3a\u52a8\u8bcd\u6216\u52a8\u8bcd\u77ed\u8bed\uff0c\u4e0e\u53c2\u6570\u6216\u53c2\u6570\u540d\u5171\u540c\u7ec4\u6210\u52a8\u5bbe\u77ed\u8bed\uff0c\u5373\u52a8\u8bcd + \u540d\u8bcd\u3002\u4e00\u4e2a\u597d\u7684\u51fd\u6570\u540d\u4e00\u822c\u80fd\u901a\u8fc7\u540d\u5b57\u76f4\u63a5\u83b7\u77e5\u8be5\u51fd\u6570\u5b9e\u73b0\u4ec0\u4e48\u6837\u7684\u529f\u80fd\u3002 \u573a\u666f \u7ea6\u675f \u793a\u4f8b \u8fd4\u56de\u771f\u4f2a\u503c is / can / has / needs / should isValid / canRemove \u7528\u4e8e\u68c0\u67e5 ensure / validate ensureCapacity / validateInputs \u6309\u9700\u6267\u884c IfNeeded / try / OrDefault / OrElse drawIfNeeded / tryCreate / getOrDefault \u6570\u636e\u76f8\u5173 get / search / save / update / batchSave / batchUpdate / saveOrUpdateselect / insert / update / delete getUserById / searchUsersByCreateTime \u751f\u547d\u5468\u671f initialize / pause / stop / destroy initialize / pause / onPause / stop / onStop \u5e38\u7528\u52a8\u8bcd\u5bf9 split / join \u3001 inject / extract \u3001 bind / seperate \u3001 increase / decrease \u3001 launch / run \u3001 observe / listen \u3001 build / publish \u3001 encode / decode \u3001 submit / commit \u3001 push / pull \u3001 enter / exit \u3001 expand / collapse","title":"\u547d\u540d\u89c4\u8303"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/#_1","text":"\u573a\u666f \u7ea6\u675f \u793a\u4f8b \u9879\u76ee\u540d \u5168\u90e8\u5c0f\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e2d\u5212\u7ebf - \u5206\u9694 spring-cloud \u5305\u540d \u5168\u90e8\u5c0f\u5199 com.alibaba.fastjson \u7c7b\u540d/\u63a5\u53e3\u540d \u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 ParserConfig DefaultFieldDeserializer \u53d8\u91cf\u540d \u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\u65f6\uff0c\u9664\u9996\u4e2a\u5355\u8bcd\uff0c\u5176\u4ed6\u5355\u8bcd\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199 password \uff0c userName \u5e38\u91cf\u540d \u5168\u90e8\u5927\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\uff0c\u7528 \u4e0b\u5212\u7ebf _ \u5206\u9694 CACHE_EXPIRED_TIME \u65b9\u6cd5 \u540c\u53d8\u91cf read() readObject() getById() Python\u4e2d\u53d8\u91cf\u540d\u5927\u591a\u4e3a\u5c0f\u5199\uff0c\u5355\u8bcd\u7528 _ \u5206\u9694\u3002","title":"\u7ea6\u5b9a\u4fd7\u6210\u7684\u60ef\u4f8b"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/#_2","text":"\u7c7b\u540d\u4f7f\u7528\u5927\u9a7c\u5cf0\u547d\u540d\u5f62\u5f0f\uff0c\u7c7b\u547d\u901a\u5e38\u4f7f\u7528\u540d\u8bcd\u6216\u540d\u8bcd\u77ed\u8bed\u3002\u63a5\u53e3\u540d\u9664\u4e86\u7528\u540d\u8bcd\u548c\u540d\u8bcd\u77ed\u8bed\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5f62\u5bb9\u8bcd\u6216\u5f62\u5bb9\u8bcd\u77ed\u8bed\uff0c\u5982 Cloneable \uff0c Callable \u7b49\uff0c\u8868\u793a\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\u6709\u67d0\u79cd\u529f\u80fd\u6216\u80fd\u529b\u3002 \u573a\u666f \u7ea6\u675f \u793a\u4f8b \u62bd\u8c61\u7c7b Abstract \u6216\u8005 Base \u5f00\u5934 BaseUserService \u679a\u4e3e\u7c7b Enum \u4f5c\u4e3a\u540e\u7f00 GenderEnum \u5de5\u5177\u7c7b Utils \u4f5c\u4e3a\u540e\u7f00 StringUtils \u5f02\u5e38\u7c7b Exception \u7ed3\u5c3e RuntimeException \u63a5\u53e3\u5b9e\u73b0\u7c7b \u63a5\u53e3\u540d + Impl UserServiceImpl \u8bbe\u8ba1\u6a21\u5f0f\u76f8\u5173\u7c7b Builder \uff0c Factory \u7b49 \u5f53\u4f7f\u7528\u5230\u8bbe\u8ba1\u6a21\u5f0f\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4f5c\u4e3a\u540e\u7f00\uff0c\u5982 ThreadFactory \u5904\u7406\u7279\u5b9a\u529f\u80fd\u7684\u7c7b Handler \uff0c Predicate , Validator \u8868\u793a\u5904\u7406\u5668\uff0c\u6821\u9a8c\u5668\uff0c\u65ad\u8a00\uff0c\u8fd9\u4e9b\u7c7b\u5de5\u5382\u8fd8\u6709\u914d\u5957\u7684\u65b9\u6cd5\u540d\u5982 handle \uff0c predicate \uff0c validate \u7279\u5b9a\u5c42\u7ea7\u7684\u7c7b Controller \uff0c Service \uff0c ServiceImpl \uff0c Dao \u540e\u7f00 UserController \uff0c UserServiceImpl \uff0c UserDao \u7279\u5b9a\u5c42\u7ea7\u7684\u503c\u5bf9\u8c61 Ao \uff0c Param \uff0c Vo \uff0c Config \uff0c Message Param \u8c03\u7528\u5165\u53c2\uff1b Ao \u4e3a thrift \u8fd4\u56de\u7ed3\u679c\uff1b Vo \u901a\u7528\u503c\u5bf9\u8c61\uff1b Config \u914d\u7f6e\u7c7b\uff1b Message \u4e3a MQ \u6d88\u606f \u6d4b\u8bd5\u7c7b Test \u7ed3\u5c3e UserServiceTest \uff0c\u8868\u793a\u7528\u6765\u6d4b\u8bd5 UserService \u7c7b\u7684","title":"\u7c7b\u547d\u540d"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/#_3","text":"\u65b9\u6cd5\u547d\u540d\u91c7\u7528\u5c0f\u9a7c\u5cf0\u7684\u5f62\u5f0f\uff0c\u9996\u5b57\u5c0f\u5199\uff0c\u5f80\u540e\u7684\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u90fd\u8981\u5927\u5199\u3002\u548c\u7c7b\u540d\u4e0d\u540c\u7684\u662f\uff0c\u65b9\u6cd5\u547d\u540d\u4e00\u822c\u4e3a\u52a8\u8bcd\u6216\u52a8\u8bcd\u77ed\u8bed\uff0c\u4e0e\u53c2\u6570\u6216\u53c2\u6570\u540d\u5171\u540c\u7ec4\u6210\u52a8\u5bbe\u77ed\u8bed\uff0c\u5373\u52a8\u8bcd + \u540d\u8bcd\u3002\u4e00\u4e2a\u597d\u7684\u51fd\u6570\u540d\u4e00\u822c\u80fd\u901a\u8fc7\u540d\u5b57\u76f4\u63a5\u83b7\u77e5\u8be5\u51fd\u6570\u5b9e\u73b0\u4ec0\u4e48\u6837\u7684\u529f\u80fd\u3002 \u573a\u666f \u7ea6\u675f \u793a\u4f8b \u8fd4\u56de\u771f\u4f2a\u503c is / can / has / needs / should isValid / canRemove \u7528\u4e8e\u68c0\u67e5 ensure / validate ensureCapacity / validateInputs \u6309\u9700\u6267\u884c IfNeeded / try / OrDefault / OrElse drawIfNeeded / tryCreate / getOrDefault \u6570\u636e\u76f8\u5173 get / search / save / update / batchSave / batchUpdate / saveOrUpdateselect / insert / update / delete getUserById / searchUsersByCreateTime \u751f\u547d\u5468\u671f initialize / pause / stop / destroy initialize / pause / onPause / stop / onStop \u5e38\u7528\u52a8\u8bcd\u5bf9 split / join \u3001 inject / extract \u3001 bind / seperate \u3001 increase / decrease \u3001 launch / run \u3001 observe / listen \u3001 build / publish \u3001 encode / decode \u3001 submit / commit \u3001 push / pull \u3001 enter / exit \u3001 expand / collapse","title":"\u65b9\u6cd5\u547d\u540d"},{"location":"Programming/99.%20%E5%85%B6%E4%BB%96/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/","text":"https://github.com/521xueweihan/HelloGitHub","title":"\u5b66\u4e60\u7f51\u7ad9"},{"location":"%E6%97%A5%E8%AE%B0/2022-10-29/","text":"\u8c46\u8c46\u53bb\u91d1\u57ce\u6c5f\u53c2\u52a0\u5c0f\u5b66\u6559\u5e08\u8d44\u683c\u8bc1\u8003\u8bd5\u3002","title":"2022 10 29"},{"location":"%E6%9D%82%E8%B4%A7/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80/","text":"\u5965\u5361\u59c6\u5243\u5200\u539f\u7406 \u5965\u5361\u59c6\u5243\u5200\u539f\u7406\uff08Occam's Razor, Ockham's Razor\uff09\u53c8\u79f0\u201c\u5965\u5eb7\u7684\u5243\u5200\u201c\uff0c\u5b83\u662f\u7531\u5341\u56db\u4e16\u7eaa\u903b\u8f91\u5b66\u5bb6\uff0c\u51fa\u751f\u4e8e\u82f1\u56fd\u5965\u5361\u59c6\u7684\u57fa\u7763\u6559\u6559\u58eb\u5a01\u5ec9\uff08William of Occam\uff09\u63d0\u51fa\u7684\u3002\u8fd9\u4e2a\u539f\u7406\u8ba4\u4e3a\u201c\u5982\u65e0\u5fc5\u8981\uff0c\u52ff\u589e\u5b9e\u4f53\u201d\uff0c\u5373\u51e1\u4e8b\u90fd\u8981\u9075\u4ece\u201c\u7b80\u5355\u6709\u6548\u201d\u7684\u539f\u5219\u3002\u6b63\u5982\u5a01\u5ec9\u6559\u58eb\u5728\u300a\u7bb4\u8a00\u4e66\u6ce8\u300b\u4e2d\u6240\u8bf4\uff0c\u201c\u5207\u52ff\u6d6a\u8d39\u8f83\u591a\u4e1c\u897f\u53bb\u505a\u90a3\u4e9b\u7528\u8f83\u5c11\u7684\u4e1c\u897f\u540c\u6837\u53ef\u4ee5\u505a\u597d\u7684\u4e8b\u60c5\u201d\u3002\u8fd9\u4e2a\u539f\u7406\u8981\u6c42\u6211\u4eec\u5728\u5904\u7406\u4e8b\u60c5\u65f6\uff0c\u628a\u63e1\u4e8b\u60c5\u7684\u672c\u8d28\uff0c\u89e3\u51b3\u6700\u6839\u672c\u7684\u95ee\u9898\uff0c\u5c24\u5176\u8981\u987a\u5e94\u81ea\u7136\uff0c\u9075\u5faa\u81ea\u7136\u89c4\u5f8b\uff0c\u4e0d\u8981\u628a\u4e8b\u60c5\u4eba\u4e3a\u5730\u590d\u6742\u5316\uff0c\u8fd9\u6837\u624d\u80fd\u66f4\u5feb\u3001\u66f4\u6709\u6548\u7387\u5730\u628a\u4e8b\u60c5\u5904\u7406\u597d\u3002 \u53ef\u53c2\u8003\uff1a \u5965\u5361\u59c6\u5243\u5200\u5b9a\u5f8b - MBA \u667a\u5e93\u767e\u79d1 (mbalib.com)","title":"\u5965\u5361\u59c6\u5243\u5200\u539f\u7406"},{"location":"%E6%9D%82%E8%B4%A7/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80/#_1","text":"\u5965\u5361\u59c6\u5243\u5200\u539f\u7406\uff08Occam's Razor, Ockham's Razor\uff09\u53c8\u79f0\u201c\u5965\u5eb7\u7684\u5243\u5200\u201c\uff0c\u5b83\u662f\u7531\u5341\u56db\u4e16\u7eaa\u903b\u8f91\u5b66\u5bb6\uff0c\u51fa\u751f\u4e8e\u82f1\u56fd\u5965\u5361\u59c6\u7684\u57fa\u7763\u6559\u6559\u58eb\u5a01\u5ec9\uff08William of Occam\uff09\u63d0\u51fa\u7684\u3002\u8fd9\u4e2a\u539f\u7406\u8ba4\u4e3a\u201c\u5982\u65e0\u5fc5\u8981\uff0c\u52ff\u589e\u5b9e\u4f53\u201d\uff0c\u5373\u51e1\u4e8b\u90fd\u8981\u9075\u4ece\u201c\u7b80\u5355\u6709\u6548\u201d\u7684\u539f\u5219\u3002\u6b63\u5982\u5a01\u5ec9\u6559\u58eb\u5728\u300a\u7bb4\u8a00\u4e66\u6ce8\u300b\u4e2d\u6240\u8bf4\uff0c\u201c\u5207\u52ff\u6d6a\u8d39\u8f83\u591a\u4e1c\u897f\u53bb\u505a\u90a3\u4e9b\u7528\u8f83\u5c11\u7684\u4e1c\u897f\u540c\u6837\u53ef\u4ee5\u505a\u597d\u7684\u4e8b\u60c5\u201d\u3002\u8fd9\u4e2a\u539f\u7406\u8981\u6c42\u6211\u4eec\u5728\u5904\u7406\u4e8b\u60c5\u65f6\uff0c\u628a\u63e1\u4e8b\u60c5\u7684\u672c\u8d28\uff0c\u89e3\u51b3\u6700\u6839\u672c\u7684\u95ee\u9898\uff0c\u5c24\u5176\u8981\u987a\u5e94\u81ea\u7136\uff0c\u9075\u5faa\u81ea\u7136\u89c4\u5f8b\uff0c\u4e0d\u8981\u628a\u4e8b\u60c5\u4eba\u4e3a\u5730\u590d\u6742\u5316\uff0c\u8fd9\u6837\u624d\u80fd\u66f4\u5feb\u3001\u66f4\u6709\u6548\u7387\u5730\u628a\u4e8b\u60c5\u5904\u7406\u597d\u3002 \u53ef\u53c2\u8003\uff1a \u5965\u5361\u59c6\u5243\u5200\u5b9a\u5f8b - MBA \u667a\u5e93\u767e\u79d1 (mbalib.com)","title":"\u5965\u5361\u59c6\u5243\u5200\u539f\u7406"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E8%9C%A1%E7%83%9B%E7%BA%BF%E5%9F%BA%E7%A1%80/","text":"\u8721\u70db\u7ebf\uff0c\u5373 K \u7ebf\u3002 \u5728\u6bcf\u4e00\u6839\u8721\u70db\u7ebf\u4e2d\uff0c\u77e9\u5f62\u7684\u90e8\u5206\u79f0\u4e3a \u5b9e\u4f53 \u3002\u5b83\u8868\u793a\u4e86\u76f8\u5e94\u4ea4\u6613\u65e5\u7684\u5f00\u5e02\u4ef7\u4e0e\u6536\u5e02\u4ef7\u4e4b\u95f4\u7684\u4ef7\u683c\u8303\u56f4\u3002\u5982\u679c\u5b9e\u4f53\u662f\u7eff\u8272\u7684\uff0c\u5219\u4ee3\u8868\u5f53\u65e5\u7684\u6536\u5e02\u4ef7\u4f4e\u4e8e\u5f00\u5e02\u4ef7\u3002\u5982\u679c\u5b9e\u4f53\u662f\u7ea2\u8272\u7684\uff0c\u5219\u8868\u793a\u5f53\u65e5\u7684\u6536\u5e02\u4ef7\u9ad8\u4e8e\u5f00\u5e02\u4ef7\u3002 \u5728\u5b9e\u4f53\u7684\u4e0a\u65b9\u548c\u4e0b\u65b9\uff0c\u5404\u6709\u4e00\u6761\u7ec6\u7ec6\u7684\u7ad6\u76f4\u7ebf\u6bb5\uff0c\u79f0\u4e3a \u5f71\u7ebf \u3002\u8fd9\u4e24\u6761\u5f71\u7ebf\u5206\u522b\u8868\u793a\u5f53\u65e5\u5e02\u573a\u66fe\u7ecf\u5411\u4e0a\u548c\u5411\u4e0b\u8fd0\u52a8\u7684\u6781\u7aef\u4ef7\u683c\u3002\u5b9e\u4f53\u4e0a\u65b9\u7684\u5f71\u7ebf\u79f0\u4e3a \u4e0a\u5f71\u7ebf \uff0c\u5b9e\u4f53\u4e0b\u65b9\u7684\u5f71\u7ebf\u79f0\u4e3a \u4e0b\u5f71\u7ebf \u3002\u76f8\u5e94\u5730\uff0c\u4e0a\u5f71\u7ebf\u7684\u9876\u7aef\u4ee3\u8868\u4e86\u5f53\u65e5\u7684\u6700\u9ad8\u4ef7\uff0c\u4e0b\u5f71\u7ebf\u7684\u5730\u6bb5\u4ee3\u8868\u4e86\u5f53\u65e5\u7684\u6700\u4f4e\u4ef7\u3002 ^55588a \u5982\u679c\u67d0\u6839\u8721\u70db\u56fe\u7ebf\u6ca1\u6709\u4e0a\u5f71\u7ebf\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6240\u8c13\u7684 \u5149\u5934\u8721\u70db\u7ebf \u3002\u5982\u679c\u67d0\u6839\u8721\u70db\u56fe\u7ebf\u6ca1\u6709\u4e0b\u5f71\u7ebf\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6240\u8c13\u7684 \u5149\u811a\u8721\u70db\u56fe\u7ebf \u3002 \u8721\u70db\u7ebf\u5b9e\u4f53\u7684\u90e8\u5206\u4ee3\u8868\u4e86\u201c\u5b9e\u8d28\u6027\u7684\u4ef7\u683c\u8fd0\u52a8\u201d\uff0c\u8fd9\u53cd\u6620\u4e86\u5173\u4e8e\u5b9e\u4f53\u7684\u6838\u5fc3\u6982\u5ff5\uff1a\u901a\u8fc7\u5b9e\u4f53\u957f\u5ea6\u548c\u989c\u8272\uff0c\u4e00\u773c\u4fbf\u80fd\u770b\u51fa\u5f53\u524d\u884c\u60c5\u7684\u56fe\u5f62\u7ebf\u7d22\uff0c\u5230\u5e95\u591a\u5934\u5360\u4e0a\u98ce\u8fd8\u662f\u7a7a\u5934\u5360\u4e0a\u98ce\u3002 \u7ed8\u5236\u8721\u70db\u7ebf\u7684\u65f6\u95f4\u5355\u4f4d\u53ef\u4ee5\u4efb\u9009\u2014\u2014\u4ece\u65e5\u5185\u5355\u4f4d\uff0c\u5230\u65e5\uff0c\u518d\u5230\u5468\u7b49\u3002 \u5bf9\u77ed\u5b9e\u4f53\uff08\u989c\u8272\u65e0\u6240\u8c13\uff09\uff0c\u79f0\u4e4b\u4e3a \u7eba\u9524\u7ebf \u3002\u7eba\u9524\u8721\u70db\u7ebf\u7684\u4e0a\u4e0b\u5f71\u7ebf\u5230\u5e95\u662f\u957f\u662f\u77ed\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002 ^aa35bb \u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u5b9e\u9645\u4e0a\u7f29\u5c0f\u4e3a\u4e00\u6839\u6c34\u5e73\u6a2a\u7ebf\u4e86\uff0c\u8fd9\u79cd\u8721\u70db\u7ebf\u79f0\u4e3a \u5341\u5b57\u7ebf \u3002\u5f53\u67d0\u4e2a\u4ea4\u6613\u65e5\u7684\u5f00\u5e02\u4ef7\u548c\u6536\u5e02\u4ef7\u5904\u4e8e\u540c\u4e00\u6c34\u5e73\uff0c\u6216\u8005\u5f53\u5f00\u5e02\u4ef7\u548c\u6536\u5e02\u4ef7\u7684\u6c34\u5e73\u6781\u4e3a\u76f8\u8fd1\u65f6\uff0c\u5f53\u65e5\u7684\u8721\u70db\u7ebf\u5c31\u53d8\u6210\u4e86\u4e00\u6839\u5341\u5b57\u7ebf\u3002 \u5341\u5b57\u7ebf\u5e26\u6709\u53cd\u8f6c\u4fe1\u53f7\u7684\u610f\u5473\u3002 ^7e8f22","title":"00. \u8721\u70db\u7ebf\u57fa\u7840"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E6%98%9F%E7%BA%BF/","text":"\u661f\u8721\u70db\u7ebf \uff08\u7b80\u79f0 \u661f\u7ebf \uff09\u7684\u5b9e\u4f53\u8f83\u5c0f\uff08\u53ef\u4ee5\u662f\u7ea2\u8272\uff0c\u4e5f\u53ef\u4ee5\u662f\u7eff\u8272\uff09\uff0c\u5e76\u4e14\u5728\u5b83\u7684\u5b9e\u4f53\u4e0e\u5b83\u524d\u9762\u8f83\u5927\u7684\u8721\u70db\u7ebf\u5b9e\u4f53\u4e4b\u95f4\u5f62\u6210\u4e86\u4ef7\u683c\u8df3\u7a7a\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u661f\u7ebf\u7684\u5b9e\u4f53\u53ef\u4ee5\u5904\u5728\u524d\u4e00\u4e2a\u65f6\u6bb5\u7684\u4e0a\u5f71\u7ebf\u8303\u56f4\u5185\uff1b\u53ea\u8981\u661f\u7ebf\u7684\u5b9e\u4f53\u4e0e\u524d\u4e00\u4e2a\u5b9e\u4f53\u6ca1\u6709\u4efb\u4f55\u91cd\u53e0\uff08\u6709\u4e00\u4e9b\u4f8b\u5916\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u661f\u8721\u70db\u7ebf\u5c31\u662f\u6210\u7acb\u7684\u3002\u5982\u679c\u661f\u7ebf\u7684\u5b9e\u4f53\u5df2\u7ecf\u7f29\u5c0f\u4e3a\u5341\u5b57\u7ebf\uff0c\u5219\u79f0\u4e4b\u4e3a \u5341\u5b57\u661f\u7ebf \u3002\u5f53\u661f\u7ebf\uff0c\u5c24\u5176\u662f\u5341\u5b57\u661f\u7ebf\u51fa\u73b0\u65f6\uff0c\u5c31\u662f\u4e00\u4e2a\u8b66\u544a\u4fe1\u53f7\uff0c\u8868\u660e\u5f53\u524d\u7684\u8d8b\u52bf\u6216\u8bb8\u597d\u666f\u4e0d\u957f\u4e86\u3002 \u661f\u7ebf\u8f83\u5c0f\u7684\u5b9e\u4f53\u663e\u793a\uff0c\u7a7a\u5934\u548c\u591a\u5934\u7684\u62d4\u6cb3\u5df2\u7ecf\u8f6c\u5165\u50f5\u6301\u72b6\u6001\u3002\u5728\u5f3a\u52b2\u7684\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u591a\u5934\u4e00\u76f4\u638c\u63e1\u4e3b\u52a8\u5730\u4f4d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u6839\u661f\u7ebf\uff0c\u5219\u6784\u6210\u8b66\u544a\u4fe1\u53f7\uff1a\u5e02\u573a\u539f\u672c\u53d7\u4e70\u65b9\u7684\u63a7\u5236\uff0c\u73b0\u5728\u8f6c\u53d8\u4e3a\u4e70\u65b9\u4e0e\u5356\u65b9\u52bf\u5747\u529b\u654c\u7684\u50f5\u6301\u72b6\u6001\u3002\u8fd9\u4e00\u50f5\u5c40\u7684\u53d1\u751f\uff0c\u65e2\u53ef\u80fd\u662f\u7531\u4e70\u65b9\u529b\u91cf\u7684\u8870\u51cf\u6240\u9020\u6210\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u7531\u5356\u65b9\u529b\u91cf\u7684\u589e\u957f\u6240\u9020\u6210\u7684\u3002\u4f46\u4e0d\u8bba\u51fa\u4e8e\u54ea\u4e00\u79cd\u539f\u56e0\uff0c\u661f\u7ebf\u90fd\u80fd\u544a\u8bc9\u6211\u4eec\uff0c\u5f53\u524d\u4e0a\u5347\u8d8b\u52bf\u7684\u9a71\u52a8\u529b\u5df2\u7ecf\u74e6\u89e3\uff0c\u5e02\u573a\u5bb9\u6613\u906d\u5230\u5356\u65b9\u7684\u653b\u51fb\u800c\u5411\u4e0b\u56de\u843d\u3002\u5982\u679c\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\u51fa\u73b0\u4e86\u661f\u7ebf\uff0c\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\uff0c\u53ea\u662f\u65b9\u5411\u76f8\u53cd\uff08\u6709\u65f6\uff0c\u4eba\u4eec\u628a\u4e0b\u964d\u8d8b\u52bf\u4e2d\u51fa\u73b0\u7684\u661f\u7ebf\u79f0\u4e3a \u96e8\u6ef4 \uff09\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\uff0c\u4e00\u6839\u957f\u957f\u7684\u7eff\u8272\u8721\u70db\u7ebf\u9c9c\u660e\u5730\u663e\u793a\u51fa\u7a7a\u5934\u5360\u4e3b\u52a8\u5730\u4f4d\u3002\u4e4b\u540e\u51fa\u73b0\u4e86\u661f\u7ebf\uff0c\u53cd\u6620\u51fa\u5e02\u573a\u6c1b\u56f4\u7684\u6539\u53d8\u3002\u6b64\u65f6\u725b\u3001\u718a\u53cc\u65b9\u7684\u529b\u91cf\u5bf9\u6bd4\u5df2\u7ecf\u53d8\u5f97\u8f83\u4e3a\u5e73\u8861\u4e86\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5e02\u573a\u5411\u4e0b\u7684\u80fd\u91cf\u4e5f\u5c31\u51cf\u9000\u4e86\u3002\u8fd9\u79cd\u5c40\u9762\u5f53\u7136\u662f\u4e0d\u5229\u4e8e\u718a\u5e02\u7ee7\u7eed\u53d1\u5c55\u7684\u3002 \u5728\u4e0b\u5217\u56db\u79cd\u53cd\u8f6c\u5f62\u6001\u4e2d\uff0c\u661f\u7ebf\u90fd\u662f\u5176\u4e2d\u4e00\u9879\u91cd\u8981\u7ec4\u6210\u6210\u5206\u3002\u8fd9\u56db\u79cd\u53cd\u8f6c\u5f62\u6001\u5206\u522b\u662f\uff1a 1. \u542f\u660e\u661f\u5f62\u6001 2. \u9ec4\u660f\u661f\u5f62\u6001 3. \u5341\u5b57\u661f\u5f62\u6001 4. \u6d41\u661f\u5f62\u6001","title":"01. \u661f\u7ebf"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/00.%20%E4%BC%9E%E5%BD%A2%E7%BA%BF/","text":"\u4f1e\u5f62\u7ebf\u8f6e\u5ed3\u5448\u4f1e\u72b6\uff0c\u957f\u957f\u7684\u4e0b\u5f71\u7ebf\u5982\u4f1e\u67c4\uff0c\u5c0f\u5b9e\u4f53\u5982\u4f1e\u9762\u3002\u4f1e\u5f62\u7ebf\u4e0b\u5f71\u7ebf\u8f83\u957f\uff0c\u800c\u5b9e\u4f53\u8f83\u5c0f\u3002\u5e76\u4e14\u5728\u5176\u5168\u5929\u4ef7\u683c\u533a\u95f4\u91cc\uff0c\u5b9e\u4f53\u6240\u5904\u7684\u4f4d\u7f6e\u63a5\u8fd1\u9876\u7aef\u3002\u4f1e\u5f62\u7ebf\u65e0\u8bba\u6da8\u8dcc\uff0c\u90fd\u65e2\u53ef\u80fd\u662f\u770b\u6da8\u7684\uff0c\u4e5f\u53ef\u80fd\u90fd\u662f\u770b\u8dcc\u7684\uff0c\u5177\u4f53\u60c5\u51b5\u8981\u7531\u5b83\u4eec\u5728\u8d8b\u52bf\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\u6765\u51b3\u5b9a\u3002 \u4f1e\u5f62\u7ebf\uff0c\u4e0d\u7ba1\u662f\u54ea\u4e00\u79cd\uff0c\u53ea\u8981\u5b83\u51fa\u73b0\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e0b\u964d\u8d8b\u52bf\u5373\u5c06\u7ed3\u675f\u7684\u4fe1\u53f7\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u79f0\u4e4b\u4e3a \u9524\u5b50\u7ebf \uff0c\u610f\u601d\u662f\u8bf4\u201c\u5e02\u573a\u6b63\u7528\u9524\u5b50\u592f\u5b9e\u5e95\u90e8\u201d\u3002 \u4f1e\u5f62\u7ebf\u5982\u679c\u51fa\u73b0\u5728\u4e0a\u51b2\u884c\u60c5\u4e4b\u540e\uff0c\u90a3\u4e48\u5b83\u8868\u660e\u4e4b\u524d\u7684\u5e02\u573a\u8fd0\u52a8\u4e5f\u8bb8\u5df2\u7ecf\u7ed3\u675f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u79f0\u4e4b\u4e3a \u4e0a\u540a\u7ebf \u3002 \u4e00\u822c\u6839\u636e\u4e09\u4e2a\u65b9\u9762\u7684\u6807\u51c6\u6765\u8bc6\u522b\u9524\u5b50\u7ebf\u548c\u4e0a\u540a\u7ebf\u3002 1. \u5b9e\u4f53\u5904\u4e8e\u6574\u4e2a\u4ef7\u683c\u533a\u95f4\u7684\u4e0a\u7aef\uff08\u65e0\u4e0a\u5f71\u7ebf\uff1f\uff09\uff0c\u4f46\u5b9e\u4f53\u672c\u8eab\u7684\u989c\u8272\u65e0\u6240\u8c13\u3002 2. \u5e26\u6709\u957f\u957f\u7684\u4e0b\u5f71\u7ebf\uff0c\u4e14\u4e0b\u5f71\u7ebf\u7684\u957f\u5ea6\u81f3\u5c11\u8fbe\u5230\u5b9e\u4f53\u9ad8\u5ea6\u7684\u4e24\u500d\u3002 3. \u5728\u8fd9\u91cc\u8721\u70db\u7ebf\u4e2d\uff0c\u5e94\u5f53\u6ca1\u6709\u4e0a\u5f71\u7ebf\uff1b\u5373\u4f7f\u6709\u4e0a\u5f71\u7ebf\uff0c\u957f\u5ea6\u4e5f\u662f\u6781\u77ed\u7684\u3002 \u53ef\u4ee5\u4ece\u4e09\u4e2a\u65b9\u9762\u6765\u533a\u5206\u4e0a\u540a\u7ebf\u548c\u9524\u5b50\u7ebf\u2014\u2014\u8d8b\u52bf\u3001\u8be5\u8721\u70db\u7ebf\u51fa\u73b0\u4e4b\u524d\u884c\u60c5\u8fd0\u52a8\u7684\u533a\u95f4\u3001\u9a8c\u8bc1\u4fe1\u53f7\u3002\u5177\u4f53\u8bf4\u660e\u5982\u4e0b\uff1a * \u8d8b\u52bf\uff1a\u9524\u5b50\u7ebf\u53ea\u80fd\u7d27\u63a5\u5728\u4e0b\u8dcc\u884c\u60c5\u4e4b\u540e\u51fa\u73b0\uff1b\u4e0a\u540a\u7ebf\u5fc5\u987b\u7d27\u63a5\u5728\u4e0a\u6da8\u884c\u60c5\u4e4b\u540e\u51fa\u73b0\u3002 * \u8721\u70db\u7ebf\u51fa\u73b0\u4e4b\u524d\u884c\u60c5\u8fd0\u52a8\u7684\u533a\u95f4\uff1a\u9524\u5b50\u7ebf\u4e4b\u524d\u5373\u4fbf\u53ea\u6709\u77ed\u7ebf\u4e0b\u8dcc\u4e5f\u662f\u6709\u6548\u7684\uff1b\u4f46\u662f\uff0c\u4e0a\u540a\u7ebf\u4e4b\u524d\u5fc5\u987b\u5177\u5907\u957f\u8db3\u7684\u4e0a\u51b2\u884c\u60c5\uff0c\u6700\u597d\u662f\u521b\u4e0b\u884c\u60c5\u5168\u5386\u53f2\u65b0\u9ad8\u540e\uff0c\u65b9\u4e3a\u6709\u6548\u3002 * \u9a8c\u8bc1\u4fe1\u53f7\uff1a\u4e0a\u540a\u7ebf\u51fa\u73b0\u540e\u5f97\u5230\u9a8c\u8bc1\u65b9\u4e3a\u6709\u6548\uff1b\u5bf9\u9524\u5b50\u7ebf\u5219\u65e0\u6b64\u8981\u6c42\u3002 \u5728\u770b\u6da8\u7684\u9524\u5b50\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u5728\u770b\u8dcc\u7684\u4e0a\u540a\u7ebf\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u4e0b\u5f71\u7ebf\u8d8a\u957f\u3001\u4e0a\u5f71\u7ebf\u8d8a\u77ed\u3001\u5b9e\u4f53\u8d8a\u5c0f\uff0c\u8fd9\u7c7b\u8721\u70db\u7ebf\u5c31\u8d8a\u6709\u610f\u4e49\u3002 \u9524\u5b50\u7ebf \u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u65e2\u53ef\u4ee5\u662f\u7ea2\u8272\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7eff\u8272\u7684\u3002\u5982\u679c\u9524\u5b50\u7ebf\u662f\u7ea2\u8272\u7684\uff0c\u5176\u770b\u6da8\u7684\u610f\u4e49\u5219\u66f4\u575a\u633a\u51e0\u5206\uff08\u56e0\u4e3a\u5176\u6536\u5e02\u4e8e\u6700\u9ad8\u4ef7\uff09\u3002 \u9524\u5b50\u7ebf\u7684\u6210\u529f\u7387\u4e0d\u4f9d\u8d56\u5176\u5b9e\u4f53\u7684\u989c\u8272\u3002 \u9524\u5b50\u7ebf\u5e26\u6709\u957f\u957f\u7684\u4e0b\u5f71\u7ebf\uff0c\u5176\u6536\u5e02\u4e8e\u672c\u65f6\u6bb5\u6700\u9ad8\u4ef7\uff0c\u6216\u63a5\u8fd1\u6700\u9ad8\u4ef7\uff0c\u610f\u5473\u7740\u5728\u5f53\u5929\u7684\u4ea4\u6613\u8fc7\u7a0b\u4e2d\uff0c\u5e02\u573a\u8d77\u5148\u66fe\u6025\u5267\u4e0b\u632b\uff0c\u540e\u6765\u5374\u5b8c\u5168\u53cd\u5f39\u4e0a\u6765\uff0c\u6536\u5e02\u5728\u5f53\u65e5\u7684\u6700\u9ad8\u4ef7\u5904\uff0c\u6216\u8005\u6536\u5e02\u5728\u63a5\u8fd1\u6700\u9ad8\u4ef7\u7684\u6c34\u5e73\u4e0a\u3002\u8fd9\u4e00\u70b9\u672c\u8eab\u5c31\u5177\u6709\u770b\u6da8\u7684\u5473\u9053\u3002\u9524\u5b50\u7ebf\u6536\u5e02\u4ef7\u4f4d\u4e8e\u6700\u9ad8\u4ef7\u6216\u63a5\u8fd1\u6700\u9ad8\u4ef7\uff0c\u6b63\u662f\u5176\u6ca1\u6709\u4e0a\u5f71\u7ebf\uff0c\u6216\u8005\u4e0a\u5f71\u7ebf\u5f88\u77ed\u7684\u539f\u56e0\u3002\u8fd9\u4e00\u70b9\u662f\u9524\u5b50\u7ebf\u7684\u5224\u636e\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u8721\u70db\u7ebf\u5e26\u6709\u957f\u957f\u7684\u4e0a\u5f71\u7ebf\uff0c\u5219\u610f\u5473\u7740\u6536\u5e02\u4ef7\u663e\u8457\u4f4e\u4e8e\u672c\u65f6\u6bb5\u6700\u9ad8\u4ef7\u3002 \u65e2\u7136\u9524\u5b50\u7ebf\u5c5e\u4e8e\u5e95\u90e8\u53cd\u8f6c\u4fe1\u53f7\uff0c\u5c31\u9700\u8981\u4e4b\u524d\u5b58\u5728\u4e0b\u964d\u8d8b\u52bf\u624d\u8c08\u5f97\u4e0a\u53cd\u8f6c\u3002 \u4e0a\u540a\u7ebf \u4e0a\u540a\u7ebf\u7684\u5f62\u72b6\u548c\u9524\u5b50\u7ebf\u5b8c\u5168\u76f8\u540c\uff0c\u552f\u4e00\u533a\u522b\u662f\uff0c\u4e0a\u540a\u7ebf\u51fa\u73b0\u5728\u4e0a\u6da8\u884c\u60c5\u4e4b\u540e\u3002\u56e0\u4e3a\u957f\u4e0b\u5f71\u7ebf\u5177\u6709\u589e\u5f3a\u529f\u6548\u7684\u4f5c\u7528\uff0c\u800c\u4e0a\u540a\u7ebf\u6709\u8fd9\u6837\u7684\u957f\u4e0b\u5f71\u7ebf\u3002 \u4e0a\u540a\u7ebf\u51fa\u73b0\u540e\uff0c\u4e00\u5b9a\u8981\u7b49\u5f85\u5176\u4ed6\u770b\u8dcc\u4fe1\u53f7\u7684\u8bc1\u5b9e\uff0c\u8fd9\u4e00\u70b9\u7279\u522b\u91cd\u8981\u3002\u6700\u4f4e\u9650\u5ea6\u7684\u9a8c\u8bc1\u4fe1\u53f7\u662f\uff0c\u4e4b\u540e\u65f6\u6bb5\u7684\u5f00\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u4ee5\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u4e3a\u9a8c\u8bc1\u4fe1\u53f7\u3002 \u4e3a\u4ec0\u4e48\u8981\u7b49\u5f85\u4e4b\u540e\u65f6\u6bb5\u7684\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u6b21\u65e5\u5e02\u573a\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u5b9e\u4f53\u7684\u6c34\u5e73\uff0c\u90a3\u4e48\u51e1\u662f\u5728\u4e0a\u540a\u7ebf\u5f53\u65e5\u7684\u5f00\u5e02\u3001\u6536\u5e02\u65f6\u4e70\u8fdb\u7684\u4ea4\u6613\u5546\uff08\u5927\u91cf\u7684\u4ea4\u6613\u6d3b\u52a8\u53d1\u751f\u5728\u8fd9\u4e24\u4e2a\u65f6\u6bb5\uff09\uff0c\u4f1a\u901a\u901a\u80cc\u4e0a\u4e8f\u635f\u7684\u5934\u5bf8\uff0c\u88ab\u201c\u540a\u201d\u5728\u4e0a\u9762\u3002\u540c\u6837\u9053\u7406\uff0c\u82e5\u4e0a\u540a\u7ebf\u4f4d\u4e8e\u5e02\u573a\u5168\u5386\u53f2\u6700\u9ad8\u4ef7\uff0c\u6216\u8005\u81f3\u5c11\u5904\u4e8e\u4e00\u8f6e\u91cd\u5927\u884c\u60c5\u7684\u6700\u9ad8\u4f4d\uff0c\u591a\u5934\u5728\u4e0a\u540a\u7ebf\u4e4b\u65e5\u7684\u5165\u5e02\u70b9\u5904\u5728\u5386\u53f2\u65b0\u9ad8\u51fa\uff0c\u4f1a\u8feb\u4f7f\u4ed6\u4eec\u66f4\u52a0\u7d27\u5f20\u3002\u7ed3\u679c\uff0c\u8fd9\u6279\u591a\u5934\u6216\u8bb8\u51b3\u5b9a\u64a4\u51fa\u4ed6\u4eec\u65b0\u5f00\u7684\u591a\u5934\u5934\u5bf8\u3002\u4ed6\u4eec\u7684\u5934\u5bf8\u503e\u6cfb\u800c\u81f3\uff0c\u52a0\u91cd\u4e86\u5356\u51fa\u7684\u538b\u529b\u3002","title":"00. \u4f1e\u5f62\u7ebf"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/00.%20%E4%BC%9E%E5%BD%A2%E7%BA%BF/#_1","text":"\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u65e2\u53ef\u4ee5\u662f\u7ea2\u8272\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7eff\u8272\u7684\u3002\u5982\u679c\u9524\u5b50\u7ebf\u662f\u7ea2\u8272\u7684\uff0c\u5176\u770b\u6da8\u7684\u610f\u4e49\u5219\u66f4\u575a\u633a\u51e0\u5206\uff08\u56e0\u4e3a\u5176\u6536\u5e02\u4e8e\u6700\u9ad8\u4ef7\uff09\u3002 \u9524\u5b50\u7ebf\u7684\u6210\u529f\u7387\u4e0d\u4f9d\u8d56\u5176\u5b9e\u4f53\u7684\u989c\u8272\u3002 \u9524\u5b50\u7ebf\u5e26\u6709\u957f\u957f\u7684\u4e0b\u5f71\u7ebf\uff0c\u5176\u6536\u5e02\u4e8e\u672c\u65f6\u6bb5\u6700\u9ad8\u4ef7\uff0c\u6216\u63a5\u8fd1\u6700\u9ad8\u4ef7\uff0c\u610f\u5473\u7740\u5728\u5f53\u5929\u7684\u4ea4\u6613\u8fc7\u7a0b\u4e2d\uff0c\u5e02\u573a\u8d77\u5148\u66fe\u6025\u5267\u4e0b\u632b\uff0c\u540e\u6765\u5374\u5b8c\u5168\u53cd\u5f39\u4e0a\u6765\uff0c\u6536\u5e02\u5728\u5f53\u65e5\u7684\u6700\u9ad8\u4ef7\u5904\uff0c\u6216\u8005\u6536\u5e02\u5728\u63a5\u8fd1\u6700\u9ad8\u4ef7\u7684\u6c34\u5e73\u4e0a\u3002\u8fd9\u4e00\u70b9\u672c\u8eab\u5c31\u5177\u6709\u770b\u6da8\u7684\u5473\u9053\u3002\u9524\u5b50\u7ebf\u6536\u5e02\u4ef7\u4f4d\u4e8e\u6700\u9ad8\u4ef7\u6216\u63a5\u8fd1\u6700\u9ad8\u4ef7\uff0c\u6b63\u662f\u5176\u6ca1\u6709\u4e0a\u5f71\u7ebf\uff0c\u6216\u8005\u4e0a\u5f71\u7ebf\u5f88\u77ed\u7684\u539f\u56e0\u3002\u8fd9\u4e00\u70b9\u662f\u9524\u5b50\u7ebf\u7684\u5224\u636e\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u8721\u70db\u7ebf\u5e26\u6709\u957f\u957f\u7684\u4e0a\u5f71\u7ebf\uff0c\u5219\u610f\u5473\u7740\u6536\u5e02\u4ef7\u663e\u8457\u4f4e\u4e8e\u672c\u65f6\u6bb5\u6700\u9ad8\u4ef7\u3002 \u65e2\u7136\u9524\u5b50\u7ebf\u5c5e\u4e8e\u5e95\u90e8\u53cd\u8f6c\u4fe1\u53f7\uff0c\u5c31\u9700\u8981\u4e4b\u524d\u5b58\u5728\u4e0b\u964d\u8d8b\u52bf\u624d\u8c08\u5f97\u4e0a\u53cd\u8f6c\u3002","title":"\u9524\u5b50\u7ebf"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/00.%20%E4%BC%9E%E5%BD%A2%E7%BA%BF/#_2","text":"\u4e0a\u540a\u7ebf\u7684\u5f62\u72b6\u548c\u9524\u5b50\u7ebf\u5b8c\u5168\u76f8\u540c\uff0c\u552f\u4e00\u533a\u522b\u662f\uff0c\u4e0a\u540a\u7ebf\u51fa\u73b0\u5728\u4e0a\u6da8\u884c\u60c5\u4e4b\u540e\u3002\u56e0\u4e3a\u957f\u4e0b\u5f71\u7ebf\u5177\u6709\u589e\u5f3a\u529f\u6548\u7684\u4f5c\u7528\uff0c\u800c\u4e0a\u540a\u7ebf\u6709\u8fd9\u6837\u7684\u957f\u4e0b\u5f71\u7ebf\u3002 \u4e0a\u540a\u7ebf\u51fa\u73b0\u540e\uff0c\u4e00\u5b9a\u8981\u7b49\u5f85\u5176\u4ed6\u770b\u8dcc\u4fe1\u53f7\u7684\u8bc1\u5b9e\uff0c\u8fd9\u4e00\u70b9\u7279\u522b\u91cd\u8981\u3002\u6700\u4f4e\u9650\u5ea6\u7684\u9a8c\u8bc1\u4fe1\u53f7\u662f\uff0c\u4e4b\u540e\u65f6\u6bb5\u7684\u5f00\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u4ee5\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u4e3a\u9a8c\u8bc1\u4fe1\u53f7\u3002 \u4e3a\u4ec0\u4e48\u8981\u7b49\u5f85\u4e4b\u540e\u65f6\u6bb5\u7684\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u7684\u5b9e\u4f53\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u6b21\u65e5\u5e02\u573a\u6536\u5e02\u4ef7\u4f4e\u4e8e\u4e0a\u540a\u7ebf\u5b9e\u4f53\u7684\u6c34\u5e73\uff0c\u90a3\u4e48\u51e1\u662f\u5728\u4e0a\u540a\u7ebf\u5f53\u65e5\u7684\u5f00\u5e02\u3001\u6536\u5e02\u65f6\u4e70\u8fdb\u7684\u4ea4\u6613\u5546\uff08\u5927\u91cf\u7684\u4ea4\u6613\u6d3b\u52a8\u53d1\u751f\u5728\u8fd9\u4e24\u4e2a\u65f6\u6bb5\uff09\uff0c\u4f1a\u901a\u901a\u80cc\u4e0a\u4e8f\u635f\u7684\u5934\u5bf8\uff0c\u88ab\u201c\u540a\u201d\u5728\u4e0a\u9762\u3002\u540c\u6837\u9053\u7406\uff0c\u82e5\u4e0a\u540a\u7ebf\u4f4d\u4e8e\u5e02\u573a\u5168\u5386\u53f2\u6700\u9ad8\u4ef7\uff0c\u6216\u8005\u81f3\u5c11\u5904\u4e8e\u4e00\u8f6e\u91cd\u5927\u884c\u60c5\u7684\u6700\u9ad8\u4f4d\uff0c\u591a\u5934\u5728\u4e0a\u540a\u7ebf\u4e4b\u65e5\u7684\u5165\u5e02\u70b9\u5904\u5728\u5386\u53f2\u65b0\u9ad8\u51fa\uff0c\u4f1a\u8feb\u4f7f\u4ed6\u4eec\u66f4\u52a0\u7d27\u5f20\u3002\u7ed3\u679c\uff0c\u8fd9\u6279\u591a\u5934\u6216\u8bb8\u51b3\u5b9a\u64a4\u51fa\u4ed6\u4eec\u65b0\u5f00\u7684\u591a\u5934\u5934\u5bf8\u3002\u4ed6\u4eec\u7684\u5934\u5bf8\u503e\u6cfb\u800c\u81f3\uff0c\u52a0\u91cd\u4e86\u5356\u51fa\u7684\u538b\u529b\u3002","title":"\u4e0a\u540a\u7ebf"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/01.%20%E5%90%9E%E6%B2%A1%E5%BD%A2%E6%80%81%EF%BC%88%E6%8A%B1%E7%BA%BF%E5%BD%A2%E6%80%81%EF%BC%89/","text":"\u541e\u6ca1\u5f62\u6001\u5c5e\u4e8e\u4e3b\u8981\u7684\u53cd\u8f6c\u5f62\u6001\uff0c\u7531\u4e24\u6839\u989c\u8272\u76f8\u53cd\u7684\u8721\u70db\u7ebf\u5b9e\u4f53\u6784\u6210\u3002 ![[\u541e\u6ca1\u5f62\u6001.png]] \u5173\u4e8e\u541e\u6ca1\u5f62\u6001\uff0c\u6709\u4e09\u6761\u5224\u522b\u6807\u51c6\uff1a 1. \u5728\u541e\u6ca1\u5f62\u6001\u4e4b\u524d\uff0c\u5e02\u573a\u5fc5\u987b\u5904\u5728\u660e\u786e\u7684\u4e0a\u5347\u8d8b\u52bf\uff08\u770b\u6da8\u541e\u6ca1\u5f62\u6001\uff09\u6216\u4e0b\u964d\u8d8b\u52bf\uff08\u770b\u8dcc\u541e\u6ca1\u5f62\u6001\uff09\u4e2d\uff0c\u54ea\u6015\u8fd9\u4e2a\u8d8b\u52bf\u53ea\u662f\u77ed\u671f\u7684\u3002 2. \u541e\u6ca1\u5f62\u6001\u7531\u4e24\u6761\u8721\u70db\u7ebf\u7ec4\u6210\u3002\u5176\u4e2d\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u5fc5\u987b\u8986\u76d6\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\uff08\u4f46\u662f\u4e0d\u4e00\u5b9a\u9700\u8981\u541e\u6ca1\u524d\u8005\u7684\u4e0a\u4e0b\u5f71\u7ebf\uff09\u3002 3. \u541e\u6ca1\u5f62\u6001\u7684\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\u5e94\u4e0e\u7b2c\u4e00\u4e2a\u5b9e\u4f53\u7684\u989c\u8272\u76f8\u53cd\u3002\uff08\u8fd9\u4e00\u6807\u51c6\u6709\u4f8b\u5916\u7684\u60c5\u51b5\uff0c\u6761\u4ef6\u662f\uff0c\u541e\u6ca1\u5f62\u6001\u7684\u7b2c\u4e00\u6761\u8721\u70db\u7ebf\u662f\u4e00\u6839[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\u3002\u5982\u6b64\u4e00\u6765\uff0c\u5982\u679c\u5728\u957f\u65f6\u95f4\u7684\u4e0b\u964d\u8d8b\u52bf\u4e4b\u540e\uff0c\u4e00\u6839\u5c0f\u5c0f\u7684\u5341\u5b57\u7ebf\u88ab\u4e00\u4e2a\u5de8\u5927\u7684\u7ea2\u8272\u5b9e\u4f53\u6240\u541e\u6ca1\uff0c\u5c31\u53ef\u80fd\u6784\u6210\u5e95\u90e8\u53cd\u8f6c\u5f62\u6001\u3002\u53cd\u4e4b\uff0c\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u5341\u5b57\u7ebf\u88ab\u4e00\u4e2a\u5de8\u5927\u7684\u7eff\u8272\u5b9e\u4f53\u6240\u541e\u6ca1\uff0c\u5c31\u53ef\u80fd\u6784\u6210\u9876\u90e8\u53cd\u8f6c\u5f62\u6001\uff09\u3002 \u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u53c2\u8003\u8981\u7d20\uff0c\u5982\u679c\u541e\u6ca1\u5f62\u6001\u5177\u6709\u8fd9\u6837\u7684\u7279\u5f81\uff0c\u90a3\u4e48\u5b83\u6784\u6210\u91cd\u8981\u53cd\u8f6c\u4fe1\u53f7\u7684\u53ef\u80fd\u6027\u5c06\u5927\u5927\u589e\u5f3a\uff1a 1. \u5982\u679c\u5728\u541e\u6ca1\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e00\u5929\u7684\u5b9e\u4f53\u975e\u5e38\u5c0f\uff08\u5373[[00. \u8721\u70db\u7ebf\u57fa\u7840#^aa35bb|\u7eba\u9524\u7ebf]]\uff09\uff0c\u800c\u7b2c\u4e8c\u5929\u7684\u5b9e\u4f53\u975e\u5e38\u5927\u3002\u7b2c\u4e00\u5929\u8721\u70db\u7ebf\u7684\u5c0f\u5b9e\u4f53\u53cd\u6620\u51fa\u539f\u6709\u8d8b\u52bf\u7684\u9a71\u52a8\u529b\u6b63\u5728\u6d88\u9000\uff0c\u800c\u7b2c\u4e8c\u5929\u8721\u70db\u7ebf\u7684\u957f\u5b9e\u4f53\u8bc1\u660e\u65b0\u8d8b\u52bf\u7684\u6f5c\u5728\u529b\u91cf\u6b63\u5728\u58ee\u5927\u3002 2. \u5982\u679c\u541e\u6ca1\u5f62\u6001\u51fa\u73b0\u5728\u8d85\u957f\u5ef6\u4f38\u7684\u6216\u975e\u5e38\u5feb\u901f\u7684\u5e02\u573a\u8fd0\u52a8\u4e4b\u540e\u3002\u5982\u679c\u5b58\u5728\u975e\u5e38\u5feb\u901f\u7684\u6216\u8d85\u957f\u7a0b\u7684\u884c\u60c5\u8fd0\u52a8\uff0c\u5219\u5bfc\u81f4\u5e02\u573a\u671d\u4e00\u4e2a\u65b9\u5411\u8d70\u5f97\u592a\u8fdc\uff08\u8981\u4e48\u8d85\u4e70\uff0c\u8981\u4e48\u8d85\u5356\uff09\uff0c\u5bb9\u6613\u906d\u53d7\u83b7\u5229\u5e73\u4ed3\u5934\u5bf8\u7684\u6253\u51fb\u3002 3. \u5982\u679c\u5728\u541e\u6ca1\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\u4f34\u6709\u8d85\u989d\u7684\u4ea4\u6613\u91cf\u3002 \u541e\u6ca1\u5f62\u6001\u7684\u4e00\u79cd\u4e3b\u8981\u4f5c\u7528\u662f\u6784\u6210\u652f\u6491\u6c34\u5e73\u6216\u963b\u6321\u6c34\u5e73\u3002 \u5728\u7ec4\u6210\u770b\u8dcc\u5f62\u6001\u7684\u4e24\u4e2a\u8721\u70db\u7ebf\u4e2d\uff0c\u9009\u533a\u5176\u6700\u9ad8\u70b9\uff08\u4e0a\u5f71\u7ebf\u7684\u7aef\u70b9\uff09\u3002\u8be5\u9ad8\u70b9\u6784\u6210\u4e86\u963b\u6321\u6c34\u5e73\uff08\u4ee5\u6536\u5e02\u4ef7\u6765\u89c2\u5bdf\u7a81\u7834\u4e0e\u5426\uff09\u3002 \u628a\u540c\u6837\u7684\u6982\u5ff5\u8fd0\u7528\u5230\u770b\u6da8\u541e\u6ca1\u5f62\u6001\uff0c\u8be5\u5f62\u6001\u7684\u6700\u4f4e\u70b9\u6784\u6210\u4e86\u652f\u6491\u6c34\u5e73\u3002 \u5c06\u541e\u6ca1\u5f62\u6001\u770b\u505a\u963b\u6321\u6c34\u5e73\u548c\u652f\u6491\u6c34\u5e73\uff0c\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6280\u5de7\uff0c\u5c24\u5176\u5f53\u5e02\u573a\u79bb\u5f00\u4f4e\u70b9\u8fc7\u8fdc\u65f6\uff08\u770b\u6da8\u541e\u6ca1\u5f62\u6001\uff09\u6216\u79bb\u5f00\u9ad8\u70b9\u8fc7\u8fdc\u65f6\uff08\u770b\u8dcc\u541e\u6ca1\u5f62\u6001\uff09\uff0c\u53ef\u4ee5\u501f\u4e4b\u9009\u62e9\u66f4\u8212\u9002\u7684\u5356\u51fa\u6216\u4e70\u8fdb\u70b9\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u7b49\u5230\u770b\u6da8\u541e\u6ca1\u5f62\u6001\u5b8c\u6210\u65f6\uff08\u9700\u8981\u4e00\u76f4\u7b49\u5230\u672c\u65f6\u6bb5\u6536\u5e02\u65f6\u624d\u80fd\u786e\u8ba4\u5f53\u524d\u8721\u70db\u7ebf\u7ec4\u5408\u5c5e\u4e8e\u770b\u6da8\u541e\u6ca1\u5f62\u6001\uff09\uff0c\u5e02\u573a\u53ef\u80fd\u5df2\u7ecf\u8fdc\u79bb\u4e4b\u524d\u7684\u4f4e\u70b9\u4e86\u3002\u56e0\u6b64\uff0c\u5e94\u5f53\u8ba4\u4e3a\u884c\u60c5\u5df2\u7ecf\u79bb\u5f00\u4e86\u6709\u5438\u5f15\u529b\u7684\u4e70\u8fdb\u533a\u57df\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7b49\u5f85\u5e02\u573a\u8c03\u6574\uff0c\u5b83\u53ef\u80fd\u518d\u6b21\u8fdb\u5165\u770b\u6da8\u541e\u6ca1\u5f62\u6001\u4f4e\u70b9\u9644\u8fd1\u7684\u652f\u6491\u533a\u57df\uff0c\u7136\u540e\uff0c\u518d\u8003\u8651\u5165\u5e02\u505a\u591a\u3002\u5728\u770b\u8dcc\u541e\u6ca1\u5f62\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u540c\u6837\u7684\u9053\u7406\uff0c\u800c\u65b9\u5411\u76f8\u53cd\u3002","title":"01. \u541e\u6ca1\u5f62\u6001\uff08\u62b1\u7ebf\u5f62\u6001\uff09"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/02.%20%E4%B9%8C%E4%BA%91%E7%9B%96%E9%A1%B6%E5%BD%A2%E6%80%81/","text":"\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u7531\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\uff0c\u5c5e\u4e8e\u9876\u90e8\u53cd\u8f6c\u5f62\u6001\u3002\u5b83\u4e00\u822c\u51fa\u73b0\u5728\u4e0a\u5347\u8d8b\u52bf\u4e4b\u540e\uff0c\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728\u6c34\u5e73\u8c03\u6574\u533a\u95f4\u7684\u9876\u90e8\u3002\u5728\u8fd9\u4e00\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e00\u5929\u662f\u4e00\u6839\u575a\u633a\u7684\u7ea2\u8272\u5b9e\u4f53\uff1b\u7b2c\u4e8c\u5929\u7684\u5f00\u5e02\u4ef7\u8d85\u8fc7\u4e86\u7b2c\u4e00\u5929\u7684\u6700\u9ad8\u4ef7\uff08\u5c31\u662f\u8bf4\u8d85\u8fc7\u4e86\u7b2c\u4e00\u5929\u4e0a\u5f71\u7ebf\u7684\u9876\u7aef\uff09\uff0c\u4f46\u662f\u5230\u4e86\u7b2c\u4e8c\u5929\u6536\u5e02\u7684\u65f6\u5019\uff0c\u5e02\u573a\u5374\u6536\u5e02\u5728\u63a5\u8fd1\u5f53\u65e5\u6700\u4f4e\u4ef7\u7684\u6c34\u5e73\uff0c\u5e76\u4e14\u660e\u663e\u5730\u5411\u4e0b\u624e\u5165\u7b2c\u4e00\u5929\u7ea2\u8272\u5b9e\u4f53\u7684\u5185\u90e8\uff0c\u7b2c\u4e8c\u5929\u7684\u7eff\u8272\u5b9e\u4f53\u5411\u4e0b\u7a7f\u8fdb\u7b2c\u4e00\u5929\u7684\u7ea2\u8272\u5b9e\u4f53\u7684\u7a0b\u5ea6\u8d8a\u6df1\uff0c\u5219\u8be5\u5f62\u6001\u6784\u6210\u9876\u90e8\u53cd\u8f6c\u5f62\u6001\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002\u6709\u4e9b\u65e5\u672c\u6280\u672f\u5206\u6790\u5e08\u8981\u6c42\uff0c\u7b2c\u4e8c\u5929\u7eff\u8272\u5b9e\u4f53\u7684\u6536\u5e02\u4ef7\u5fc5\u987b\u5411\u4e0b\u7a7f\u8fc7\u524d\u4e00\u5929\u7ea2\u8272\u5b9e\u4f53\u768450%\u3002 \u5982\u679c\u7eff\u8272\u5b9e\u4f53\u7684\u6536\u5e02\u4ef7\u6ca1\u6709\u5411\u4e0b\u7a7f\u8fc7\u7ea2\u8272\u5b9e\u4f53\u7684\u4e2d\u70b9\uff0c\u90a3\u4e48\u6700\u597d\u7b49\u4e00\u7b49\uff0c\u770b\u770b\u662f\u5426\u8fd8\u6709\u8fdb\u4e00\u6b65\u7684\u770b\u8dcc\u9a8c\u8bc1\u4fe1\u53f7\u3002 ![[\u4e4c\u4e91\u76d6\u9876\u5f62\u6001.png]] \u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u53c2\u8003\u56e0\u7d20\uff0c\u5982\u679c\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u5177\u6709\u8fd9\u6837\u7684\u7279\u5f81\uff0c\u5219\u6709\u52a9\u4e8e\u589e\u5f3a\u5176\u6280\u672f\u5206\u91cf\uff1a 1. \u5728\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u4e2d\uff0c\u7eff\u8272\u5b9e\u4f53\u7684\u6536\u5e02\u4ef7\u5411\u4e0b\u7a7f\u5165\u524d\u4e00\u4e2a\u7ea2\u8272\u5b9e\u4f53\u7684\u7a0b\u5ea6\u8d8a\u6df1\uff0c\u5219\u8be5\u5f62\u6001\u6784\u6210\u5e02\u573a\u9876\u90e8\u7684\u673a\u4f1a\u8d8a\u5927\uff08\u5982\u679c\u7eff\u8272\u5b9e\u4f53\u8986\u76d6\u4e86\u524d\u4e00\u5929\u7684\u6574\u4e2a\u7ea2\u8272\u5b9e\u4f53\uff0c\u90a3\u5c31\u5f62\u6210\u4e86[[01. \u541e\u6ca1\u5f62\u6001\uff08\u62b1\u7ebf\u5f62\u6001\uff09|\u770b\u8dcc\u541e\u6ca1\u5f62\u6001]]\uff0c\u800c\u4e0d\u662f\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\uff09\u3002 \u5982\u679c\u5728\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u4e4b\u540e\uff0c\u6216\u8005\u5728\u770b\u8dcc\u541e\u6ca1\u5f62\u6001\u4e4b\u540e\uff0c\u51fa\u73b0\u4e86\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\uff0c\u800c\u4e14\u5176\u6536\u5e02\u4ef7\u8d85\u8fc7\u4e86\u8fd9\u4e24\u79cd\u5f62\u6001\u7684\u6700\u9ad8\u4ef7\uff08\u5411\u4e0a\u7a81\u7834\u4e86\u963b\u6321\uff09\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u9884\u793a\u7740\u65b0\u4e00\u8f6e\u4e0a\u51b2\u884c\u60c5\u7684\u5230\u6765\u3002 2. \u5982\u679c\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u53d1\u751f\u5728\u4e00\u4e2a\u8d85\u957f\u7a0b\u7684\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5b83\u7684\u7b2c\u4e00\u5929\u662f\u4e00\u6839\u575a\u633a\u7684\u7ea2\u8272\u5b9e\u4f53\uff0c\u5176\u5f00\u5e02\u4ef7\u5c31\u662f\u6700\u4f4e\u4ef7\uff08\u5c31\u662f\u8bf4\uff0c\u662f\u5149\u811a\u7684\uff09\uff0c\u800c\u4e14\u5176\u6536\u5e02\u4ef7\u5c31\u662f\u6700\u9ad8\u4ef7\uff08\u5c31\u662f\u6240\uff0c\u662f\u5149\u5934\u7684\uff09\uff1b\u5b83\u7684\u7b2c\u4e8c\u5929\u662f\u4e00\u6839\u957f\u957f\u7684\u7eff\u8272\u5b9e\u4f53\uff0c\u5176\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u6700\u9ad8\u4ef7\uff0c\u800c\u4e14\u6536\u5e02\u4ef7\u4f4d\u4e8e\u6700\u4f4e\u4ef7\uff08\u8fd9\u662f\u4e00\u6839\u5149\u5934\u5149\u811a\u7684\u7eff\u8272\u8721\u70db\u7ebf\uff09\u3002 3. \u5728\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u4e2d\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\uff08\u5373\u7eff\u8272\u5b9e\u4f53\uff09\u7684\u5f00\u5e02\u4ef7\u9ad8\u4e8e\u67d0\u4e2a\u4e3b\u8981\u7684\u963b\u6321\u6c34\u5e73\uff0c\u4f46\u662f\u5e02\u573a\u672a\u80fd\u6210\u529f\u5730\u575a\u5b88\u4f4f\uff0c\u90a3\u4e48\u53ef\u80fd\u8bc1\u660e\u591a\u5934\u5df2\u7ecf\u65e0\u529b\u63a7\u5236\u5e02\u573a\u4e86\u3002 4. \u5982\u679c\u5728\u7b2c\u4e8c\u5929\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4ea4\u6613\u91cf\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u8fd9\u91cc\u53ef\u80fd\u53d1\u751f\u201c\u80c0\u7206\u201d\u73b0\u8c61\u3002\u5177\u4f53\u8bf4\u6765\uff0c\u5f53\u65e5\u5f00\u5e02\u4ef7\u521b\u51fa\u4e86\u65b0\u9ad8\uff0c\u4e8c\u671f\u5f00\u59cb\u65f6\u7684\u6210\u4ea4\u91cf\u6781\u5927\uff0c\u53ef\u80fd\u610f\u5473\u7740\u5f88\u591a\u65b0\u4e70\u5bb6\u7ec8\u4e8e\u4e0b\u51b3\u5fc3\u5165\u5e02\uff0c\u8df3\u4e0a\u4e86\u725b\u5e02\u7684\u201c\u8239\u201d\u3002\u968f\u540e\uff0c\u5e02\u573a\u5374\u53d1\u751f\u4e86\u629b\u552e\u884c\u60c5\u3002\u90a3\u4e48\uff0c\u5f88\u53ef\u80fd\u7528\u4e0d\u4e86\u592a\u4e45\uff0c\u8fd9\u7fa4\u4eba\u6570\u4f17\u591a\u7684\u65b0\u591a\u5934\uff08\u8fd8\u6709\u90a3\u4e9b\u65e9\u5df2\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\u5750\u4e86\u8f7f\u5b50\u7684\u8001\u591a\u5934\uff09\u5c31\u4f1a\u8ba4\u8bc6\u5230\uff0c\u4ed6\u4eec\u4e0a\u7684\u8fd9\u6761\u8239\u539f\u6765\u662f\u201c\u6cf0\u5766\u5c3c\u514b\u53f7\u201d\u3002\u5bf9\u671f\u8d27\u4ea4\u6613\u5546\u6765\u8bf4\uff0c\u6781\u9ad8\u7684\u6301\u4ed3\u91cf\u4e5f\u662f\u4e00\u79cd\u8b66\u544a\u4fe1\u53f7\u3002 \u6b63\u5982[[01. \u541e\u6ca1\u5f62\u6001\uff08\u62b1\u7ebf\u5f62\u6001\uff09|\u770b\u8dcc\u541e\u6ca1\u5f62\u6001]]\u53ef\u4ee5\u88ab\u89c6\u4e3a\u963b\u6321\u6c34\u5e73\uff0c\u7ec4\u6210\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u7684\u4e24\u4e2a\u65f6\u6bb5\u91cc\u7684\u6700\u9ad8\u70b9\u4e5f\u6784\u6210\u4e86\u963b\u6321\u6c34\u5e73\u3002","title":"02. \u4e4c\u4e91\u76d6\u9876\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/03.%20%E5%88%BA%E9%80%8F%E5%BD%A2%E6%80%81/","text":"\u5bf9\u5927\u591a\u6570\u8721\u70db\u56fe\u5f62\u6001\u6765\u8bf4\uff0c\u6709\u4e00\u4e2a\u770b\u8dcc\u5f62\u6001\uff0c\u5c31\u6709\u4e00\u4e2a\u76f8\u53cd\u7684\u770b\u6da8\u5f62\u6001\u3002[[02. \u4e4c\u4e91\u76d6\u9876\u5f62\u6001]]\u4fbf\u662f\u8fd9\u6837\u7684\u3002\u6709\u4e00\u4e2a\u4e0e\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u76f8\u53cd\u7684\u5f62\u6001\uff0c\u79f0\u4e3a \u523a\u900f\u5f62\u6001 \u3002\u523a\u900f\u5f62\u6001\u51fa\u73b0\u5728\u4e0b\u8dcc\u7684\u5e02\u573a\u4e0a\uff0c\u4e5f\u662f\u7531\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\u7684\u3002\u5176\u4e2d\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u5177\u6709\u7eff\u8272\u5b9e\u4f53\uff0c\u800c\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u5219\u5177\u6709\u7ea2\u8272\u5b9e\u4f53\u3002\u5728\u7ea2\u8272\u8721\u70db\u7ebf\u8fd9\u4e00\u5929\uff0c\u5e02\u573a\u7684\u5f00\u5e02\u4ef7\u589e\u8dcc\u5230\u4f4e\u4f4d\uff0c\u6700\u597d\u4e0b\u8dcc\u81f3\u524d\u4e00\u4e2a\u7eff\u8272\u8721\u70db\u7ebf\u7684\u6700\u4f4e\u4ef7\u4e4b\u4e0b\uff0c\u4f46\u662f\u540e\u6765\u5e02\u573a\u53c8\u5c06\u4ef7\u683c\u63a8\u5347\u56de\u6765\uff0c\u6df1\u6df1\u523a\u5165\u7eff\u8272\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u5185\u90e8\u3002 ![[\u523a\u900f\u5f62\u6001.png]] \u5173\u4e8e\u523a\u900f\u5f62\u6001\uff0c\u4e5f\u6709\u56db\u9879\u53c2\u8003\u56e0\u7d20\uff0c\u5982\u679c\u523a\u900f\u5f62\u6001\u517c\u5177\u8fd9\u4e9b\u7279\u5f81\uff0c\u90a3\u4e48\u5b83\u7684\u6280\u672f\u5206\u91cf\u5c06\u5927\u4e3a\u589e\u5f3a\u3002\u8fd9\u56db\u9879\u53c2\u8003\u56e0\u7d20\u4e0e[[02. \u4e4c\u4e91\u76d6\u9876\u5f62\u6001]]\u7684\u56db\u9879\u53c2\u8003\u56e0\u7d20\u5185\u5bb9\u76f8\u540c\uff0c\u800c\u65b9\u5411\u76f8\u53cd\u3002","title":"03. \u523a\u900f\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/04.%20%E5%90%AF%E6%98%8E%E6%98%9F%E5%BD%A2%E6%80%81/","text":"\u542f\u660e\u661f\u5f62\u6001\u5c5e\u4e8e\u5e95\u90e8\u53cd\u8f6c\u5f62\u6001\u3002\u5b83\u7684\u540d\u79f0\u7531\u6765\u662f\uff0c\u5c31\u60f3\u542f\u660e\u661f\uff08\u91d1\u661f\uff09\u9884\u793a\u7740\u592a\u9633\u7684\u5347\u8d77\u4e00\u6837\uff0c\u8fd9\u4e2a\u5f62\u6001\u9884\u793a\u7740\u4ef7\u683c\u7684\u4e0a\u6da8\u3002\u672c\u5f62\u6001\u7531\u4e09\u6839\u8721\u70db\u7ebf\u7ec4\u6210\uff1a * \u8721\u70db\u7ebf 1\u3002\u4e00\u6839\u957f\u957f\u7684\u7eff\u8272\u5b9e\u4f53\uff0c\u5f62\u8c61\u5730\u8868\u660e\u7a7a\u5934\u5360\u636e\u4e3b\u5bb0\u5730\u4f4d\u3002 * \u8721\u70db\u7ebf 2\u3002\u4e00\u6839\u5c0f\u5c0f\u7684\u5b9e\u4f53\uff0c\u5e76\u4e14\u5b83\u4e0e\u524d\u4e00\u6839\u5b9e\u4f53\u4e4b\u95f4\u4e0d\u76f8\u63a5\u89e6\uff08\u8fd9\u4e24\u6761\u8721\u70db\u7ebf\u7ec4\u6210\u4e86\u57fa\u672c\u7684\u661f\u7ebf\u5f62\u6001\uff09\u3002\u5c0f\u5b9e\u4f53\u610f\u5473\u7740\u5356\u65b9\u4e27\u5931\u4e86\u9a71\u52a8\u5e02\u573a\u8d70\u4f4e\u7684\u80fd\u529b\u3002 * \u8721\u70db\u7ebf 3\u3002\u4e00\u6839\u7ea2\u8272\u5b9e\u4f53\uff0c\u5b83\u660e\u663e\u5730\u5411\u4e0a\u63a8\u8fdb\u5230\u4e86\u7b2c\u4e00\u4e2a\u65f6\u6bb5\u7684\u7eff\u8272\u5b9e\u4f53\u4e4b\u5185\uff0c\u6807\u5fd7\u7740\u542f\u660e\u661f\u5f62\u6001\u7684\u5b8c\u6210\u3002\u8fd9\u8868\u660e\u591a\u5934\u5df2\u7ecf\u593a\u56de\u4e86\u4e3b\u5bfc\u6743\u3002 ![[\u542f\u660e\u661f\u5f62\u6001.png]] \u5728\u7406\u60f3\u7684\u542f\u660e\u661f\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\uff08\u5373\u661f\u7ebf\uff09\u7684\u5b9e\u4f53\uff0c\u4e0e\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u4e4b\u95f4\u6709\u4ef7\u683c\u8df3\u7a7a\u3002\u5373\u4f7f\u6ca1\u6709\u8fd9\u4e2a\u4ef7\u683c\u8df3\u7a7a\uff0c\u4f3c\u4e4e\u4e5f\u4e0d\u4f1a\u524a\u51cf\u542f\u660e\u661f\u5f62\u6001\u7684\u6280\u672f\u6548\u529b\u3002\u5176\u51b3\u5b9a\u6027\u56e0\u7d20\u662f\uff0c\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u5e94\u4e3a[[00. \u8721\u70db\u7ebf\u57fa\u7840#^aa35bb|\u7eba\u9524\u7ebf]]\uff0c\u540c\u65f6\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u5e94\u663e\u8457\u6df1\u5165\u5230\u7b2c\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u5185\u90e8\u3002 \u542f\u660e\u661f\u5f62\u6001\u7684\u4e0d\u8db3\u4e4b\u5904\u662f\uff0c\u65e2\u7136\u5f62\u6001\u7531\u4e09\u6839\u8721\u70db\u7ebf\u7ec4\u6210\uff0c\u5c31\u5f97\u7b49\u5230\u5176\u4e2d\u7b2c\u4e09\u4e2a\u65f6\u6bb5\u6536\u5e02\u65f6\uff0c\u5f62\u6001\u624d\u7b97\u5b8c\u6210\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u662f\u957f\u957f\u7684\u7ea2\u8272\u7ebf\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5f97\u5230\u4fe1\u53f7\u7684\u65f6\u5019\uff0c\u5e02\u573a\u5df2\u7ecf\u8d70\u8fc7\u4e00\u6bb5\u6025\u901f\u53cd\u5f39\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u542f\u660e\u661f\u5f62\u6001\u5b8c\u6210\u65f6\uff0c\u6216\u8bb8\u5e76\u4e0d\u80fd\u63d0\u4f9b\u98ce\u9669\u62a5\u507f\u6bd4\u5177\u6709\u5438\u5f15\u529b\u7684\u4ea4\u6613\u673a\u4f1a\u3002\u9488\u5bf9\u8fd9\u4e00\u70b9\uff0c\u4e00\u79cd\u9009\u62e9\u662f\u7b49\u5f85\u884c\u60c5\u56de\u843d\u5230\u542f\u660e\u661f\u5f62\u6001\u6784\u6210\u7684\u652f\u6491\u533a\u57df\u65f6\uff0c\u518d\u5c0f\u53e3\u5c0f\u53e3\u5730\u5403\u8fdb\u505a\u591a\u3002 \u5728\u7406\u60f3\u7684\u542f\u660e\u661f\u5f62\u6001\u548c[[05. \u9ec4\u660f\u661f\u5f62\u6001]]\u4e2d\uff0c\u8721\u70db\u7ebf1\u4e0e2\uff0c2\u4e0e3\u7684\u5b9e\u4f53\u4e4b\u95f4\u90fd\u4e0d\u5e94\u8be5\u76f8\u4e92\u89e6\u53ca\u3002\u4e0d\u8fc7\u5728\u6709\u4e9b\u5e02\u573a\u4e0a\uff0c\u4e0a\u4e00\u65e5\u6536\u5e02\u548c\u4e0b\u4e00\u65e5\u5f00\u5e02\u8981\u4e48\u662f\u540c\u4e00\u4e2a\u65f6\u70b9\uff0c\u8981\u4e48\u4e24\u8005\u65f6\u95f4\u63a5\u8fd1\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u542f\u660e\u661f\u5f62\u6001\u548c\u9ec4\u660f\u661f\u5f62\u6001\u8981\u6c42\u7684\u5b9a\u4e49\u6761\u4ef6\u4fbf\u53ef\u4ee5\u66f4\u7075\u6d3b\u4e00\u4e9b\u3002\u4e3e\u4f8b\u5982\u4e0b\uff1a 1. \u5916\u6c47\u5e02\u573a\uff0c\u4e0d\u5b58\u5728\u6b63\u5f0f\u7684\u5f00\u5e02\u6216\u6536\u5e02\u65f6\u95f4\u3002 2. \u5f88\u591a\u6307\u6570\u5e02\u573a\uff0c\u4f8b\u5982\u534a\u5bfc\u4f53\u6307\u6570\u6216\u836f\u54c1\u6307\u6570\u7b49\u3002 3. \u65e5\u5185\u56fe\u8868\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u572815\u5206\u949f\u7684\u7ebf\u56fe\u4e0a\uff0c\u67d0\u4e00\u4e2a15\u5206\u949f\u65f6\u6bb5\u7684\u5f00\u5e02\u4ef7\u4e0e\u76f8\u90bb\u7684\u524d\u4e00\u4e2a15\u5206\u949f\u65f6\u6bb5\u7684\u6536\u5e02\u4ef7\u901a\u5e38\u6ca1\u4ec0\u4e48\u5dee\u5f02\u3002","title":"04. \u542f\u660e\u661f\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/05.%20%E9%BB%84%E6%98%8F%E6%98%9F%E5%BD%A2%E6%80%81/","text":"\u9ec4\u660f\u661f\u5f62\u6001\u662f[[04. \u542f\u660e\u661f\u5f62\u6001]]\u7684\u53cd\u9762\u5bf9\u7b49\u5f62\u6001\uff0c\u5728\u9876\u90e8\uff0c\u662f\u770b\u8dcc\u7684\u3002\u5b83\u7684\u540d\u79f0\u7531\u6765\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u56e0\u4e3a\u9ec4\u660f\u661f\uff08\u592a\u767d\u661f\uff09\u6070\u597d\u51fa\u73b0\u5728\u591c\u5e55\u5373\u5c06\u964d\u4e34\u4e4b\u9645\u3002\u65e2\u7136\u9ec4\u660f\u661f\u662f\u9876\u90e8\u53cd\u8f6c\u5f62\u6001\uff0c\u90a3\u4e48\u5c31\u5e94\u5f53\u51fa\u73b0\u5728\u4e0a\u5347\u8d8b\u52bf\u4e4b\u540e\uff0c\u624d\u80fd\u53d1\u6325\u5176\u6280\u672f\u6548\u529b\u3002\u9ec4\u660f\u661f\u5f62\u6001\u662f\u7531\u4e09\u6839\u8721\u70db\u7ebf\u7ec4\u6210\u7684\uff0c\u5728\u524d\u4e24\u6839\u8721\u70db\u7ebf\u4e2d\uff0c\u524d\u4e00\u6839\u662f\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\uff0c\u540e\u4e00\u6839\u662f[[01. \u661f\u7ebf]]\u3002\u661f\u7ebf\u7684\u51fa\u73b0\uff0c\u662f\u9876\u90e8\u5f62\u6001\u7684\u7b2c\u4e00\u4e2a\u5f81\u5146\u3002\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u8bc1\u5b9e\u4e86\u9876\u90e8\u8fc7\u7a0b\u7684\u53d1\u751f\uff0c\u5b8c\u6210\u4e86\u5c5e\u4e8e\u4e09\u7ebf\u5f62\u6001\u7684\u9ec4\u660f\u661f\u5f62\u6001\u3002\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u5177\u6709\u7eff\u8272\u5b9e\u4f53\uff0c\u4ed6\u5267\u70c8\u5730\u5411\u4e0b\u624e\u5165\u7b2c\u4e00\u5929\u7684\u7ea2\u8272\u5b9e\u4f53\u5185\u90e8\u3002 ![[\u9ec4\u660f\u661f\u5f62\u6001.png]] \u539f\u5219\u4e0a\u8bf4\uff0c\u5728\u9ec4\u660f\u661f\u5f62\u6001\u4e2d\uff0c\u9996\u5148\u5728\u7b2c\u4e00\u6839\u5b9e\u4f53\u4e0e\u7b2c\u4e8c\u6839\u5b9e\u4f53\u4e4b\u95f4\uff0c\u5e94\u5f53\u5f62\u6210\u4ef7\u683c\u8df3\u7a7a\uff1b\u7136\u540e\u5728\u7b2c\u4e8c\u6839\u5b9e\u4f53\u4e0e\u7b2c\u4e09\u6839\u5b9e\u4f53\u4e4b\u95f4\uff0c\u518d\u5f62\u6210\u53e6\u4e00\u4e2a\u4ef7\u683c\u8df3\u7a7a\u3002\u4f46\u662f\uff0c\u7b2c\u4e8c\u4e2a\u4ef7\u683c\u8df3\u7a7a\u5e76\u4e0d\u5e38\u89c1\uff0c\u800c\u4e14\u5bf9\u672c\u5f62\u6001\u7684\u6210\u529f\u6765\u8bf4\u53ef\u6709\u53ef\u65e0\uff0c\u4e0d\u662f\u5fc5\u8981\u6761\u4ef6\u3002\u672c\u5f62\u6001\u7684\u5173\u952e\u4e4b\u5904\u5728\u4e8e\u7b2c\u4e09\u5929\u7684\u7eff\u8272\u5b9e\u4f53\u5411\u4e0b\u7a7f\u5165\u7b2c\u4e00\u5929\u7ea2\u8272\u5b9e\u4f53\u7684\u6df1\u6d45\u7a0b\u5ea6\u3002 \u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u53c2\u8003\u56e0\u7d20\uff0c\u5982\u679c\u9ec4\u660f\u661f\u5f62\u6001\u517c\u5177\u8fd9\u6837\u7684\u7279\u5f81\uff0c\u5219\u6709\u52a9\u4e8e\u589e\u52a0\u5b83\u6784\u6210\u53cd\u8f6c\u4fe1\u53f7\u7684\u673a\u4f1a\u3002\u8fd9\u4e9b\u56e0\u7d20\u5305\u62ec\uff1a 1. \u5982\u679c\u7b2c\u4e00\u6839\u4e0e\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\uff0c\u7b2c\u4e8c\u6839\u4e0e\u7b2c\u4e09\u4e2a\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u4e4b\u95f4\u4e0d\u5b58\u5728\u91cd\u53e0\u3002 2. \u5982\u679c\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u7684\u6536\u5e02\u4ef7\u5411\u4e0b\u6df1\u6df1\u624e\u5165\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u5185\u90e8\u3002 3. \u5982\u679c\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u7684\u4ea4\u6613\u91cf\u8f83\u5c0f\uff0c\u800c\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u7684\u4ea4\u6613\u91cf\u8f83\u5927\u3002\u8fd9\u8868\u660e\u4e4b\u524d\u8d8b\u52bf\u7684\u9a71\u52a8\u529b\u6b63\u5728\u51cf\u5f31\uff0c\u65b0\u8d8b\u52bf\u65b9\u5411\u7684\u9a71\u52a8\u529b\u6b63\u5728\u52a0\u5f3a\u3002 \u9ec4\u660f\u661f\u5f62\u6001\u7684\u6700\u9ad8\u70b9\u6784\u6210\u963b\u6321\u6c34\u5e73\u3002","title":"05. \u9ec4\u660f\u661f\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/06.%20%E5%8D%81%E5%AD%97%E5%90%AF%E6%98%8E%E6%98%9F%E5%BD%A2%E6%80%81%E5%92%8C%E5%8D%81%E5%AD%97%E9%BB%84%E6%98%8F%E6%98%9F%E5%BD%A2%E6%80%81/","text":"\u5728[[04. \u542f\u660e\u661f\u5f62\u6001]]\u4e2d\uff0c\u5982\u679c\u5176[[01. \u661f\u7ebf]]\uff08\u5373\u4e09\u6839\u8721\u70db\u7ebf\u4e2d\u7684\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\uff09\u662f\u4e00\u4e2a\u5341\u5b57\u7ebf\uff0c\u5219\u79f0\u4e3a \u5341\u5b57\u7ebf\u542f\u660e\u661f\u5f62\u6001 \u3002\u8fd9\u4e00\u7c7b\u542f\u660e\u661f\u5f62\u6001\u80fd\u6784\u6210\u6709\u610f\u4e49\u7684\u5e02\u573a\u5e95\u90e8\u8fc7\u7a0b\u3002 \u5728\u5e38\u89c4\u7684[[05. \u9ec4\u660f\u661f\u5f62\u6001]]\u4e2d\uff0c\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u5177\u6709\u8f83\u5c0f\u7684\u5b9e\u4f53\uff0c\u5982\u679c\u4e0d\u662f\u8f83\u5c0f\u7684\u5b9e\u4f53\uff0c\u800c\u662f\u4e00\u4e2a[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\uff0c\u5219\u79f0\u4e3a \u5341\u5b57\u9ec4\u660f\u661f\u5f62\u6001 \u3002\u5341\u5b57\u9ec4\u660f\u661f\u5f62\u6001\u662f\u5e38\u89c4\u9ec4\u660f\u661f\u5f62\u6001\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u3002 ![[\u5341\u5b57\u542f\u660e\u661f\u548c\u5341\u5b57\u9ec4\u660f\u661f\u5f62\u6001.png]] \u5728\u5341\u5b57\u9ec4\u660f\u661f\u5f62\u6001\u4e2d\uff0c\u5982\u679c\u5341\u5b57\u7ebf\u7684\u4e0b\u5f71\u7ebf\u65e2\u4e0d\u4e0e\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u7684\u4e0a\u5f71\u7ebf\u91cd\u53e0\uff0c\u4e5f\u4e0d\u4e0e\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u7684\u4e0a\u5f71\u7ebf\u91cd\u53e0\uff08\u5373\u5f71\u7ebf\u4e4b\u95f4\u4e0d\u76f8\u63a5\u89e6\uff09\uff0c\u8fd9\u6761\u5341\u5b57\u7ebf\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u4e3b\u8981\u9876\u90e8\u53cd\u8f6c\u4fe1\u53f7\uff0c\u79f0\u4e3a \u5f03\u5a74\u9876\u90e8\u5f62\u6001 \u3002\u8fd9\u79cd\u5f62\u6001\u975e\u5e38\u7f55\u89c1\u3002 \u5728\u4e0e\u4e0a\u8ff0\u5f62\u6001\u5bf9\u7b49\u7684\u5e95\u90e8\u53cd\u8f6c\u5f62\u6001\u4e2d\uff0c\u9053\u7406\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u65b9\u5411\u76f8\u53cd\u800c\u5df2\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5341\u5b57\u661f\u7ebf\u7684\u524d\u540e\u5747\u53d1\u751f\u4e86\u4ef7\u683c\u8df3\u7a7a\uff08\u76f8\u5173\u8721\u70db\u7ebf\u7684\u4e0a\u4e0b\u5f71\u7ebf\u4e92\u4e0d\u76f8\u63a5\u89e6\uff09\uff0c\u90a3\u4e48\u8fd9\u6761\u5341\u5b57\u661f\u7ebf\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u4e3b\u8981\u5e95\u90e8\u5f62\u6001\u3002\u4eba\u4eec\u5c06\u8fd9\u79cd\u5f62\u6001\u79f0\u4e3a \u5f03\u5a74\u5e95\u90e8\u5f62\u6001 \u3002\u8fd9\u79cd\u5f62\u6001\u4e5f\u662f\u6781\u4e3a\u5c11\u89c1\u7684\u3002","title":"06. \u5341\u5b57\u542f\u660e\u661f\u5f62\u6001\u548c\u5341\u5b57\u9ec4\u660f\u661f\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/07.%20%E6%B5%81%E6%98%9F%E5%BD%A2%E6%80%81%E4%B8%8E%E5%80%92%E9%94%A4%E5%AD%90%E5%BD%A2%E6%80%81/","text":"\u5728\u6d41\u661f\u5f62\u6001\u4e2d\uff0c\u6d41\u661f\u7ebf\u5177\u6709\u8f83\u5c0f\u7684\u5b9e\u4f53\uff0c\u800c\u4e14\u5b9e\u4f53\u5904\u4e8e\u5176\u4ef7\u683c\u533a\u95f4\u7684\u4e0b\u7aef\uff0c\u540c\u65f6\uff0c\u6d41\u661f\u7ebf\u7684\u4e0a\u5f71\u7ebf\u8f83\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5176\u540d\u79f0\u7684\u7531\u6765\uff0c\u5b83\u7684\u5916\u89c2\u6070\u5982\u5176\u540d\u79f0\uff0c\u50cf\u4e00\u9897\u6d41\u661f\uff0c\u5e26\u7740\u718a\u718a\u71c3\u70e7\u7684\u957f\u5c3e\u5df4\u5212\u8fc7\u5929\u9645\u3002\u65e2\u7136\u5b83\u53ea\u662f\u4e00\u4e2a\u65f6\u6bb5\uff0c\u901a\u5e38\u4e0d\u50cf[[01. \u541e\u6ca1\u5f62\u6001\uff08\u62b1\u7ebf\u5f62\u6001\uff09|\u770b\u8dcc\u541e\u6ca1\u5f62\u6001]]\u6216[[05. \u9ec4\u660f\u661f\u5f62\u6001]]\u90a3\u6837\u6784\u6210\u4e3b\u8981\u53cd\u8f6c\u4fe1\u53f7\uff0c\u4e5f\u4e0d\u6784\u6210\u5173\u952e\u963b\u6321\u6c34\u5e73\u3002 \u4e0e\u6240\u6709\u7684[[01. \u661f\u7ebf]]\u4e00\u6837\uff0c\u6d41\u661f\u7ebf\u5b9e\u4f53\u7684\u989c\u8272\u5e76\u4e0d\u91cd\u8981\u3002\u6d41\u661f\u7ebf\u7684\u5f62\u72b6\u5f62\u8c61\u5730\u663e\u793a\uff0c\u5f53\u65e5\u5e02\u573a\u5f00\u5e02\u4e8e\u5b83\u7684\u6700\u4f4e\u70b9\u9644\u8fd1\uff0c\u540e\u6765\u5f3a\u70c8\u5730\u4e0a\u51b2\uff0c\u4f46\u6700\u540e\u5374\u5411\u4e0b\u56de\u843d\uff0c\u6536\u5e02\u4e8e\u5f00\u5e02\u4ef7\u9644\u8fd1\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u4ea4\u6613\u65f6\u6bb5\u5185\u7684\u4e0a\u51b2\u884c\u60c5\u4e0d\u80fd\u7ef4\u6301\u4e0b\u53bb\u3002 \u56e0\u4e3a\u6d41\u661f\u7ebf\u5c5e\u4e8e\u770b\u8dcc\u53cd\u8f6c\u4fe1\u53f7\uff0c\u5b83\u5fc5\u987b\u51fa\u73b0\u5728\u4e00\u6bb5\u4e0a\u51b2\u884c\u60c5\u4e4b\u540e\u3002\u5728\u7406\u60f3\u7684\u6d41\u661f\u5f62\u6001\u4e2d\uff0c\u6d41\u661f\u7ebf\u7684\u5b9e\u4f53\u4e0e\u524d\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u4e4b\u95f4\u5b58\u5728\u4ef7\u683c\u8df3\u7a7a\uff08\u8fd9\u6837\u7684\u4ef7\u683c\u8df3\u7a7a\u5e76\u975e\u603b\u662f\u5fc5\u987b\u7684\uff09\u3002 \u5728\u4e0b\u964d\u8d8b\u52bf\u540e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e0e\u6d41\u661f\u7ebf\u5916\u89c2\u4e00\u81f4\u7684\u8721\u70db\u7ebf\uff0c\u5219\u53ef\u80fd\u6784\u6210\u770b\u6da8\u4fe1\u53f7\u3002\u8fd9\u6837\u7684\u8721\u70db\u7ebf\u79f0\u4e3a \u5012\u9524\u5b50\u7ebf \u3002 ![[\u6d41\u661f\u5f62\u6001\u4e0e\u5012\u9524\u5b50\u5f62\u6001.png]] \u5012\u9524\u5b50\u5f62\u6001\uff08\u5012\u9524\u5b50\u7ebf\uff09 \u5012\u9524\u5b50\u7ebf\u770b\u4e0a\u53bb\u4e0e\u6d41\u661f\u7ebf\u9887\u4e3a\u76f8\u50cf\uff0c\u5b83\u4e5f\u6709\u8f83\u957f\u7684\u4e0a\u5f71\u7ebf\u548c\u8f83\u5c0f\u7684\u5b9e\u4f53\uff0c\u5e76\u4e14\u5b9e\u4f53\u5c45\u4e8e\u6574\u4e2a\u4ef7\u683c\u8303\u56f4\u7684\u4e0b\u7aef\u3002\u4e24\u8005\u4e4b\u95f4\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5012\u9524\u5b50\u7ebf\u51fa\u73b0\u5728\u4e0b\u964d\u884c\u60c5\u4e4b\u540e\u3002\u7ed3\u679c\uff0c\u6d41\u661f\u7ebf\u662f\u4e00\u6839\u9876\u90e8\u53cd\u8f6c\u8721\u70db\u7ebf\uff0c\u800c\u5012\u9524\u5b50\u7ebf\u5374\u662f\u4e00\u6839\u5e95\u90e8\u53cd\u8f6c\u8721\u70db\u7ebf\u3002\u5012\u9524\u5b50\u7ebf\u5b9e\u4f53\u7684\u989c\u8272\u65e0\u5173\u7d27\u8981\u3002\u540c\u4e00\u79cd\u5f62\u72b6\u7684\u8721\u70db\u7ebf\u65e2\u53ef\u4ee5\u662f\u770b\u6da8\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u770b\u8dcc\u7684\uff0c\u53d6\u51b3\u4e8e\u5728\u5176\u51fa\u73b0\u4e4b\u524d\u7684\u8d8b\u52bf\u65b9\u5411\uff0c\u5728\u8fd9\u4e2a\u6982\u5ff5\u4e0a\uff0c\u5012\u9524\u5b50\u7ebf\u548c\u6d41\u661f\u7ebf\u662f\u4e00\u5bf9\uff0c[[00. \u4f1e\u5f62\u7ebf#\u9524\u5b50\u7ebf|\u9524\u5b50\u7ebf]]\u548c[[00. \u4f1e\u5f62\u7ebf#\u4e0a\u540a\u7ebf|\u4e0a\u540a\u7ebf]]\u662f\u4e00\u5bf9\u3002 \u6b63\u5982\u4e0a\u540a\u7ebf\u9700\u8981\u5176\u4ed6\u770b\u8dcc\u4fe1\u53f7\u7684\u9a8c\u8bc1\uff0c\u5012\u9524\u5b50\u7ebf\u4e5f\u9700\u8981\u5176\u4ed6\u770b\u6da8\u4fe1\u53f7\u7684\u9a8c\u8bc1\u3002\u9a8c\u8bc1\u4fe1\u53f7\u65e2\u53ef\u4ee5\u662f\u6b21\u65e5\u5f00\u5e02\u4ef7\u9ad8\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\uff0c\u4e5f\u53ef\u4ee5\u662f\u6b21\u65e5\u6536\u5e02\u4ef7\u9ad8\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\uff0c\u5c24\u5176\u662f\u540e\u8005\u66f4\u4e3a\u6709\u529b\u3002 \u4e4b\u6240\u4ee5\u5012\u9524\u5b50\u7ebf\u9700\u8981\u770b\u6da8\u4fe1\u53f7\u7684\u9a8c\u8bc1\uff0c\u662f\u56e0\u4e3a\u5b83\u7684\u957f\u4e0a\u5f71\u7ebf\u7ed9\u5012\u9524\u5b50\u7ebf\u6d82\u4e0a\u4e86\u4e00\u5c42\u75b2\u8f6f\u7684\u8272\u5f69\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5012\u9524\u5b50\u8721\u70db\u7ebf\u5f53\u65e5\uff0c\u5e02\u573a\u7684\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u5f53\u65e5\u6700\u4f4e\u4ef7\u5904\uff0c\u6216\u8005\u63a5\u8fd1\u6700\u4f4e\u4ef7\u3002\u540e\u6765\u5e02\u573a\u4e0a\u6da8\u4e86\uff0c\u4f46\u662f\u591a\u5934\u65e0\u529b\u5c06\u4e0a\u6da8\u884c\u60c5\u7ef4\u6301\u4e0b\u53bb\u3002\u6700\u540e\uff0c\u5e02\u573a\u6536\u5e02\u4e8e\u5f53\u65e5\u6700\u4f4e\u4ef7\uff0c\u6216\u8005\u5728\u6700\u4f4e\u4ef7\u7684\u9644\u8fd1\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\u8721\u70db\u7ebf\u7adf\u7136\u662f\u6f5c\u5728\u7684\u770b\u6da8\u53cd\u8f6c\u4fe1\u53f7\u5462\uff1f\u5176\u89e3\u7b54\u5fc5\u987b\u4ece\u540e\u4e00\u5929\u7684\u884c\u60c5\u4e2d\u5bfb\u627e\u3002\u5982\u679c\u540e\u4e00\u5929\u5e02\u573a\u5f00\u5e02\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u4e4b\u4e0a\uff0c\u7279\u522b\u662f\u6536\u5e02\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u4e4b\u4e0a\uff0c\u5219\u610f\u5473\u7740\u51e1\u662f\u5728\u5012\u9524\u5b50\u7ebf\u5f53\u65e5\u5f00\u5e02\u548c\u6536\u5e02\u65f6\u5356\u51fa\u505a\u7a7a\u7684\u4eba\u73b0\u5728\u901a\u901a\u5904\u4e8e\u4e8f\u635f\u72b6\u6001\u3002\u5e02\u573a\u7ef4\u6301\u5728\u5012\u9524\u5b50\u7ebf\u5b9e\u4f53\u4e4b\u4e0a\u7684\u65f6\u95f4\u8d8a\u4e45\uff0c\u5219\u4e0a\u8ff0\u7a7a\u5934\u6b62\u635f\u51fa\u5e02\u7684\u53ef\u80fd\u6027\u8d8a\u5927\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9996\u5148\u53ef\u80fd\u5f15\u53d1\u7a7a\u5934\u5e73\u4ed3\u4e0a\u6da8\u884c\u60c5\uff0c\u7a7a\u5934\u5e73\u4ed3\u4e0a\u6da8\u884c\u60c5\u8fdb\u800c\u53ef\u80fd\u4fc3\u4f7f\u4f01\u56fe\u6284\u5e95\u505a\u591a\u7684\u4eba\u8ddf\u98ce\u4e70\u5165\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u81ea\u6211\u5faa\u73af\uff0c\u87ba\u65cb\u4e0a\u5347\uff0c\u7ed3\u679c\u5c31\u53ef\u80fd\u5f62\u6210\u4e00\u6bb5\u4e0a\u51b2\u884c\u60c5\u3002","title":"07. \u6d41\u661f\u5f62\u6001\u4e0e\u5012\u9524\u5b50\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/00.%20%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/07.%20%E6%B5%81%E6%98%9F%E5%BD%A2%E6%80%81%E4%B8%8E%E5%80%92%E9%94%A4%E5%AD%90%E5%BD%A2%E6%80%81/#_1","text":"\u5012\u9524\u5b50\u7ebf\u770b\u4e0a\u53bb\u4e0e\u6d41\u661f\u7ebf\u9887\u4e3a\u76f8\u50cf\uff0c\u5b83\u4e5f\u6709\u8f83\u957f\u7684\u4e0a\u5f71\u7ebf\u548c\u8f83\u5c0f\u7684\u5b9e\u4f53\uff0c\u5e76\u4e14\u5b9e\u4f53\u5c45\u4e8e\u6574\u4e2a\u4ef7\u683c\u8303\u56f4\u7684\u4e0b\u7aef\u3002\u4e24\u8005\u4e4b\u95f4\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5012\u9524\u5b50\u7ebf\u51fa\u73b0\u5728\u4e0b\u964d\u884c\u60c5\u4e4b\u540e\u3002\u7ed3\u679c\uff0c\u6d41\u661f\u7ebf\u662f\u4e00\u6839\u9876\u90e8\u53cd\u8f6c\u8721\u70db\u7ebf\uff0c\u800c\u5012\u9524\u5b50\u7ebf\u5374\u662f\u4e00\u6839\u5e95\u90e8\u53cd\u8f6c\u8721\u70db\u7ebf\u3002\u5012\u9524\u5b50\u7ebf\u5b9e\u4f53\u7684\u989c\u8272\u65e0\u5173\u7d27\u8981\u3002\u540c\u4e00\u79cd\u5f62\u72b6\u7684\u8721\u70db\u7ebf\u65e2\u53ef\u4ee5\u662f\u770b\u6da8\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u770b\u8dcc\u7684\uff0c\u53d6\u51b3\u4e8e\u5728\u5176\u51fa\u73b0\u4e4b\u524d\u7684\u8d8b\u52bf\u65b9\u5411\uff0c\u5728\u8fd9\u4e2a\u6982\u5ff5\u4e0a\uff0c\u5012\u9524\u5b50\u7ebf\u548c\u6d41\u661f\u7ebf\u662f\u4e00\u5bf9\uff0c[[00. \u4f1e\u5f62\u7ebf#\u9524\u5b50\u7ebf|\u9524\u5b50\u7ebf]]\u548c[[00. \u4f1e\u5f62\u7ebf#\u4e0a\u540a\u7ebf|\u4e0a\u540a\u7ebf]]\u662f\u4e00\u5bf9\u3002 \u6b63\u5982\u4e0a\u540a\u7ebf\u9700\u8981\u5176\u4ed6\u770b\u8dcc\u4fe1\u53f7\u7684\u9a8c\u8bc1\uff0c\u5012\u9524\u5b50\u7ebf\u4e5f\u9700\u8981\u5176\u4ed6\u770b\u6da8\u4fe1\u53f7\u7684\u9a8c\u8bc1\u3002\u9a8c\u8bc1\u4fe1\u53f7\u65e2\u53ef\u4ee5\u662f\u6b21\u65e5\u5f00\u5e02\u4ef7\u9ad8\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\uff0c\u4e5f\u53ef\u4ee5\u662f\u6b21\u65e5\u6536\u5e02\u4ef7\u9ad8\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\uff0c\u5c24\u5176\u662f\u540e\u8005\u66f4\u4e3a\u6709\u529b\u3002 \u4e4b\u6240\u4ee5\u5012\u9524\u5b50\u7ebf\u9700\u8981\u770b\u6da8\u4fe1\u53f7\u7684\u9a8c\u8bc1\uff0c\u662f\u56e0\u4e3a\u5b83\u7684\u957f\u4e0a\u5f71\u7ebf\u7ed9\u5012\u9524\u5b50\u7ebf\u6d82\u4e0a\u4e86\u4e00\u5c42\u75b2\u8f6f\u7684\u8272\u5f69\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5012\u9524\u5b50\u8721\u70db\u7ebf\u5f53\u65e5\uff0c\u5e02\u573a\u7684\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u5f53\u65e5\u6700\u4f4e\u4ef7\u5904\uff0c\u6216\u8005\u63a5\u8fd1\u6700\u4f4e\u4ef7\u3002\u540e\u6765\u5e02\u573a\u4e0a\u6da8\u4e86\uff0c\u4f46\u662f\u591a\u5934\u65e0\u529b\u5c06\u4e0a\u6da8\u884c\u60c5\u7ef4\u6301\u4e0b\u53bb\u3002\u6700\u540e\uff0c\u5e02\u573a\u6536\u5e02\u4e8e\u5f53\u65e5\u6700\u4f4e\u4ef7\uff0c\u6216\u8005\u5728\u6700\u4f4e\u4ef7\u7684\u9644\u8fd1\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\u8721\u70db\u7ebf\u7adf\u7136\u662f\u6f5c\u5728\u7684\u770b\u6da8\u53cd\u8f6c\u4fe1\u53f7\u5462\uff1f\u5176\u89e3\u7b54\u5fc5\u987b\u4ece\u540e\u4e00\u5929\u7684\u884c\u60c5\u4e2d\u5bfb\u627e\u3002\u5982\u679c\u540e\u4e00\u5929\u5e02\u573a\u5f00\u5e02\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u4e4b\u4e0a\uff0c\u7279\u522b\u662f\u6536\u5e02\u4e8e\u5012\u9524\u5b50\u7ebf\u7684\u5b9e\u4f53\u4e4b\u4e0a\uff0c\u5219\u610f\u5473\u7740\u51e1\u662f\u5728\u5012\u9524\u5b50\u7ebf\u5f53\u65e5\u5f00\u5e02\u548c\u6536\u5e02\u65f6\u5356\u51fa\u505a\u7a7a\u7684\u4eba\u73b0\u5728\u901a\u901a\u5904\u4e8e\u4e8f\u635f\u72b6\u6001\u3002\u5e02\u573a\u7ef4\u6301\u5728\u5012\u9524\u5b50\u7ebf\u5b9e\u4f53\u4e4b\u4e0a\u7684\u65f6\u95f4\u8d8a\u4e45\uff0c\u5219\u4e0a\u8ff0\u7a7a\u5934\u6b62\u635f\u51fa\u5e02\u7684\u53ef\u80fd\u6027\u8d8a\u5927\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9996\u5148\u53ef\u80fd\u5f15\u53d1\u7a7a\u5934\u5e73\u4ed3\u4e0a\u6da8\u884c\u60c5\uff0c\u7a7a\u5934\u5e73\u4ed3\u4e0a\u6da8\u884c\u60c5\u8fdb\u800c\u53ef\u80fd\u4fc3\u4f7f\u4f01\u56fe\u6284\u5e95\u505a\u591a\u7684\u4eba\u8ddf\u98ce\u4e70\u5165\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u81ea\u6211\u5faa\u73af\uff0c\u87ba\u65cb\u4e0a\u5347\uff0c\u7ed3\u679c\u5c31\u53ef\u80fd\u5f62\u6210\u4e00\u6bb5\u4e0a\u51b2\u884c\u60c5\u3002","title":"\u5012\u9524\u5b50\u5f62\u6001\uff08\u5012\u9524\u5b50\u7ebf\uff09"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E4%B8%89%E5%85%B5%E6%8C%BA%E8%BF%9B%E5%BD%A2%E6%80%81/","text":"\u4e0e[[\u4e09\u53ea\u4e4c\u9e26]]\u5f62\u6001\u76f8\u5bf9\u7684\u5f62\u6001\u79f0\u4e3a \u4e09\u5175\u633a\u8fdb\u5f62\u6001 \uff0c\u672c\u5f62\u6001\u662f\u7531\u63a5\u8fde\u51fa\u73b0\u7684\u4e09\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u7ec4\u6210\u7684\uff0c\u5b83\u4eec\u7684\u6536\u5e02\u4ef7\u4e00\u6b21\u4e0a\u5347\u3002\u5f53\u5e02\u573a\u5728\u67d0\u4e2a\u4f4e\u4ef7\u4f4d\u7a33\u5b9a\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8fd9\u6837\u7684\u5f62\u6001\uff0c\u5c31\u6807\u5fd7\u7740\u5e02\u573a\u5373\u5c06\u8f6c\u5f3a\u3002 \u4e09\u5175\u633a\u8fdb\u5f62\u6001\u8868\u73b0\u4e3a\u4e00\u4e2a\u9010\u6e10\u800c\u7a33\u5b9a\u7684\u4e0a\u5347\u8fc7\u7a0b\uff0c\u5176\u4e2d\u6bcf\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u90fd\u5904\u4e8e\u524d\u4e00\u5929\u7684\u7ea2\u8272\u5b9e\u4f53\u4e4b\u5185\uff0c\u6216\u8005\u5904\u5728\u5176\u9644\u8fd1\u7684\u4f4d\u7f6e\u4e0a\u3002\u6bcf\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u7684\u6536\u5e02\u4ef7\u90fd\u5e94\u5f53\u4f4d\u4e8e\u5f53\u65e5\u7684\u6700\u9ad8\u70b9\u6216\u63a5\u8fd1\u5f53\u65e5\u7684\u6700\u9ad8\u70b9\u3002\u8fd9\u662f\u5e02\u573a\u7684\u4e00\u79cd\u5f88\u7a33\u5065\u7684\u6500\u5347\u65b9\u5f0f\uff08\u4e0d\u8fc7\uff0c\u5982\u679c\u8fd9\u4e9b\u7ea2\u8272\u8721\u70db\u7ebf\u4f38\u5c55\u5f97\u8fc7\u957f\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u5e94\u5f53\u5bf9\u5e02\u573a\u7684\u8d85\u4e70\u72b6\u6001\u6709\u6240\u6212\u5907\uff09\u3002 \u5982\u679c\u5176\u4e2d\u7684\u7b2c\u4e8c\u6839\u548c\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\uff0c\u8868\u73b0\u51fa\u4e0a\u6da8\u52bf\u5934\u51cf\u5f31\u7684\u8ff9\u8c61\uff0c\u90a3\u5c31\u6784\u6210\u4e86\u4e00\u4e2a \u524d\u65b9\u53d7\u963b\u5f62\u6001 \u3002\u8fd9\u5c31\u610f\u5473\u7740\u8fd9\u8f6e\u4e0a\u6da8\u884c\u60c5\u78b0\u5230\u4e86\u9ebb\u70e6\uff0c\u6301\u6709\u591a\u5934\u5934\u5bf8\u8005\u5e94\u5f53\u91c7\u53d6\u4e00\u4e9b\u4fdd\u62a4\u6027\u63aa\u65bd\u3002\u7279\u522b\u662f\u5728\u4e0a\u5347\u8d8b\u52bf\u5df2\u7ecf\u5904\u4e8e\u665a\u671f\u9636\u6bb5\u65f6\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u524d\u65b9\u53d7\u963b\u5f62\u6001\uff0c\u5219\u66f4\u5f97\u591a\u52a0\u5c0f\u5fc3\u3002 \u5728\u524d\u65b9\u53d7\u963b\u5f62\u6001\u4e2d\uff0c\u4f5c\u4e3a\u4e0a\u6da8\u52bf\u5934\u51cf\u5f31\u7684\u5177\u4f53\u8868\u73b0\uff0c\u65e2\u53ef\u80fd\u662f\u5176\u4e2d\u7684\u7ea2\u8272\u5b9e\u4f53\u4e00\u4e2a\u6bd4\u4e00\u4e2a\u5c0f\uff0c\u4e5f\u53ef\u80fd\u662f\u540e\u4e24\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u5177\u6709\u76f8\u5bf9\u8f83\u957f\u7684\u4e0a\u5f71\u7ebf\u3002\u5982\u679c\u5728\u540e\u4e24\u6839\u8721\u70db\u7ebf\u4e2d\uff0c\u524d\u4e00\u6839\u4e3a\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\uff0c\u5e76\u4e14\u5411\u4e0a\u521b\u51fa\u4e86\u65b0\u9ad8\uff0c\u540e\u4e00\u6839\u53ea\u662f\u4e00\u4e2a\u5c0f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u90a3\u4e48\u5c31\u6784\u6210\u4e86\u4e00\u4e2a \u505c\u987f\u5f62\u6001 \uff08\u4e5f\u79f0\u4e3a \u6df1\u601d\u5f62\u6001 \uff09\u3002\u5f53\u8fd9\u4e00\u5f62\u6001\u51fa\u73b0\u65f6\uff0c\u8bf4\u660e\u725b\u65b9\u7684\u529b\u91cf\u81f3\u5c11\u6682\u65f6\u5df2\u7ecf\u6d88\u8017\u5c3d\u4e86\u3002\u5728\u672c\u5f62\u6001\u4e2d\uff0c\u6700\u540e\u4e00\u6839\u5c0f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u65e2\u53ef\u80fd\u4ece\u524d\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u5411\u4e0a\u8df3\u7a7a\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u8721\u70db\u7ebf\u5c31\u53d8\u6210\u4e86\u4e00\u6839[[01. \u661f\u7ebf]]\uff09\uff0c\u6216\u8005\u9a91\u5728\u90a3\u6839\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\u80a9\u4e0a\uff08\u5c31\u662f\u8bf4\uff0c\u4f4d\u4e8e\u524d\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\u7684\u4e0a\u7aef\uff09\u3002\u8fd9\u6839\u5c0f\u5c0f\u7684\u5b9e\u4f53\u66b4\u9732\u4e86\u725b\u65b9\u80fd\u91cf\u7684\u8870\u9000\u3002\u5f53\u505c\u987f\u5f62\u6001\u53d1\u751f\u65f6\uff0c\u4fbf\u6784\u6210\u4e86\u591a\u5934\u5934\u5bf8\u5e73\u4ed3\u83b7\u5229\u7684\u7d27\u8981\u65f6\u673a\u3002 \u867d\u7136\u524d\u65b9\u53d7\u963b\u5f62\u6001\u4e0e\u505c\u987f\u5f62\u6001\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u4e0d\u5c5e\u4e8e\u9876\u90e8\u53cd\u8f6c\u5f62\u6001\uff0c\u4f46\u662f\u6709\u65f6\u5019\u5b83\u4eec\u4e5f\u80fd\u5f15\u5bfc\u51fa\u4e0d\u5bb9\u5ffd\u89c6\u7684\u4e0b\u8dcc\u884c\u60c5\u3002\u6211\u4eec\u5e94\u5f53\u5229\u7528\u524d\u65b9\u53d7\u963b\u5f62\u6001\u548c\u505c\u987f\u5f62\u6001\u6765\u5e73\u4ed3\u4e86\u7ed3\u5df2\u6709\u7684\u591a\u5934\u5934\u5bf8\uff0c\u6216\u8005\u4e3a\u591a\u5934\u5934\u5bf8\u91c7\u53d6\u4fdd\u62a4\u63aa\u65bd\uff0c\u4f46\u662f\u4e0d\u53ef\u636e\u4e4b\u5f00\u7acb\u7a7a\u5934\u5934\u5bf8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u8fd9\u4e24\u7c7b\u5f62\u6001\u51fa\u73b0\u5728\u8f83\u9ad8\u7684\u4ef7\u683c\u6c34\u5e73\u4e0a\uff0c\u5219\u66f4\u6709\u9884\u6d4b\u610f\u4e49\u3002 \u524d\u65b9\u53d7\u963b\u5f62\u6001\u4e0e\u505c\u987f\u5f62\u6001\u4e4b\u95f4\u5e76\u6ca1\u6709\u592a\u5927\u5dee\u5f02\uff0c\u5173\u4e8e\u4e09\u5175\u633a\u8fdb\u5f62\u6001\uff0c\u9700\u8981\u8003\u8651\u7684\u4e3b\u8981\u56e0\u7d20\u662f\uff0c \u5982\u679c\u4e09\u6839\u8721\u70db\u7ebf\u7684\u6bcf\u4e00\u6839\u7684\u6536\u5e02\u4ef7\u90fd\u4f4d\u4e8e\u6216\u63a5\u8fd1\u672c\u65f6\u6bb5\u7684\u6700\u9ad8\u4ef7\uff08\u5373\u4e0a\u5f71\u7ebf\u8f83\u77ed\uff09\uff0c\u5219\u6700\u5177\u6709\u5efa\u8bbe\u6027 \u3002\u5982\u679c\u540e\u4e24\u6839\u8721\u70db\u7ebf\u8868\u73b0\u51fa\u72b9\u8c6b\u7684\u8ff9\u8c61\uff0c\u662f\u5c0f\u5b9e\u4f53\uff0c\u6216\u8005\u662f\u957f\u4e0a\u5f71\u7ebf\uff0c\u90a3\u4e48\u8fd9\u4e9b\u7ebf\u7d22\u8868\u660e\uff0c\u4e0a\u51b2\u884c\u60c5\u6b63\u53d8\u5f97\u8870\u5f31\u3002 \u5728\u4e09\u5175\u633a\u8fdb\u5f62\u6001\u51fa\u73b0\u540e\uff0c\u4e00\u65e6\u884c\u60c5\u8c03\u6574\uff0c\u5219\u5176\u4e2d\u7684\u7b2c\u4e00\u6839\u6216\u7b2c\u4e8c\u6839\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u5373\u4e09\u5175\u7684\u8d77\u70b9\u5904\uff0c\u7ecf\u5e38\u6784\u6210\u652f\u6491\u6c34\u5e73\u3002","title":"\u4e09\u5175\u633a\u8fdb\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E4%B8%89%E5%8F%AA%E4%B9%8C%E9%B8%A6/","text":"\u5728[[\u5411\u4e0a\u8df3\u7a7a\u4e24\u53ea\u4e4c\u9e26]]\u5f62\u6001\u4e2d\uff0c\u5305\u542b\u4e86\u4e24\u6839\u7eff\u8272\u8721\u70db\u7ebf\u3002\u5982\u679c\u8fde\u7eed\u51fa\u73b0\u4e86\u4e09\u6839\u4e00\u6b21\u4e0b\u964d\u7684\u7eff\u8272\u8721\u70db\u7ebf\uff0c\u5219\u6784\u6210\u4e86\u6240\u8c13\u7684 \u4e09\u53ea\u4e4c\u9e26\u5f62\u6001 \u3002\u5982\u679c\u4e09\u53ea\u4e4c\u9e26\u5f62\u6001\u51fa\u73b0\u5728\u9ad8\u4ef7\u683c\u6c34\u5e73\u4e0a\uff0c\u6216\u8005\u51fa\u73b0\u5728\u7ecf\u5386\u4e86\u5145\u5206\u5ef6\u4f38\u7684\u4e0a\u6da8\u884c\u60c5\u4e2d\uff0c\u5c31\u9884\u793a\u7740\u4ef7\u683c\u5373\u5c06\u4e0b\u8dcc\u3002\u4ece\u5916\u5f62\u4e0a\u8bf4\uff0c\u8fd9\u4e09\u6839\u7eff\u8272\u8721\u70db\u7ebf\u7684\u6536\u5e02\u4ef7\u90fd\u5e94\u5f53\u5904\u4e8e\u5176\u6700\u4f4e\u70b9\uff0c\u6216\u8005\u63a5\u8fd1\u5176\u6700\u4f4e\u70b9\u3002\u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6839\u7eff\u8272\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u4e5f\u90fd\u5e94\u8be5\u5904\u4e8e\u524d\u4e00\u4e2a\u5b9e\u4f53\u7684\u8303\u56f4\u4e4b\u5185\u3002 \u4e09\u53ea\u4e4c\u9e26\u5f62\u6001\u53ef\u80fd\u5bf9\u957f\u7ebf\u4ea4\u6613\u8005\u66f4\u6709\u7528\u5904\u3002\u8fd9\u662f\u56e0\u4e3a\u672c\u5f62\u6001\u5728\u7b2c\u4e09\u6839\u8721\u70db\u7ebf\u624d\u80fd\u5b8c\u6210\u3002\u663e\u7136\uff0c\u5230\u4e86\u8fd9\u4e2a\u65f6\u5019\u5e02\u573a\u5df2\u7ecf\u56de\u843d\u4e86\u76f8\u5f53\u5927\u7684\u5e45\u5ea6\u3002","title":"\u4e09\u53ea\u4e4c\u9e26"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E4%B8%89%E5%B1%B1%E5%BD%A2%E6%80%81%E5%92%8C%E4%B8%89%E5%B7%9D%E5%BD%A2%E6%80%81/","text":"\u4e09\u5c71\u9876\u90e8\u5f62\u6001 \uff0c\u4e5f\u79f0\u4e3a \u4e09\u91cd\u9876\u5f62\u6001 \u3002\u4e00\u822c\u8ba4\u4e3a\uff0c\u672c\u5f62\u6001\u6784\u6210\u4e86\u4e00\u79cd\u4e3b\u8981\u9876\u90e8\u53cd\u8f6c\u8fc7\u7a0b\u3002\u5982\u679c\u5e02\u573a\u5148\u540e\u4e09\u6b21\u5747\u4ece\u67d0\u4e00\u4e2a\u9ad8\u4ef7\u4f4d\u4e0a\u56de\u843d\u4e0b\u6765\uff0c\u6216\u8005\u5e02\u573a\u5bf9\u67d0\u4e00\u4e2a\u9ad8\u4ef7\u4f4d\u5411\u4e0a\u8fdb\u884c\u4e86\u4e09\u6b21\u5c1d\u8bd5\uff0c\u4f46\u90fd\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u4e00\u4e2a\u4e09\u5c71\u9876\u90e8\u5f62\u6001\u5c31\u5f62\u6210\u4e86\u3002\u5728\u4e09\u5c71\u9876\u90e8\u5f62\u6001\u7684\u6700\u540e\u4e00\u5ea7\u5c71\u7684\u6700\u9ad8\u70b9\uff0c\u8fd8\u5e94\u5f53\u51fa\u73b0\u4e00\u79cd\u770b\u8dcc\u7684\u8721\u70db\u56fe\u6307\u6807\uff08\u6bd4\u5982\u8bf4\uff0c\u4e00\u6839[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\uff0c\u6216\u8005\u4e00\u4e2a[[02. \u4e4c\u4e91\u76d6\u9876\u5f62\u6001]]\u7b49\uff09\uff0c\u5bf9\u4e09\u5c71\u9876\u90e8\u5f62\u6001\u505a\u51fa\u786e\u8ba4\u3002 \u5728\u4e09\u5c71\u9876\u90e8\u5f62\u6001\u4e2d\uff0c\u5982\u679c\u4e2d\u95f4\u7684\u5c71\u5cf0\u9ad8\u4e8e\u4e24\u4fa7\u7684\u5c71\u5cf0\uff0c\u5219\u6784\u6210\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u4e09\u5c71\u5f62\u6001\uff0c\u79f0\u4e3a \u4e09\u5c0a\u9876\u90e8\u5f62\u6001 \uff0c\u4e5f\u79f0\u4e3a \u5934\u80a9\u9876\u5f62\u6001 \u3002 \u4e09\u5ddd\u5e95\u90e8\u5f62\u6001 \u6070\u5de7\u662f\u4e09\u5c71\u9876\u90e8\u5f62\u6001\u7684\u53cd\u9762\u3002\u5728\u5e02\u573a\u5148\u540e\u4e09\u5ea6\u5411\u4e0b\u8bd5\u63a2\u67d0\u4e2a\u5e95\u90e8\u6c34\u5e73\u540e\uff0c\u5c31\u5f62\u6210\u4e86\u8fd9\u7c7b\u5f62\u6001\u3002 \u5e02\u573a\u5fc5\u987b\u5411\u4e0a\u7a81\u7834\u8fd9\u4e2a\u5e95\u90e8\u5f62\u6001\u7684\u6700\u9ad8\u6c34\u5e73\uff0c\u624d\u80fd\u8bc1\u5b9e\u5e95\u90e8\u8fc7\u7a0b\u5df2\u7ecf\u5b8c\u6210\u3002","title":"\u4e09\u5c71\u5f62\u6001\u548c\u4e09\u5ddd\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%8F%8D%E5%87%BB%E7%BA%BF%E5%BD%A2%E6%80%81/","text":"\u5f53\u4e24\u6839\u989c\u8272\u76f8\u53cd\u7684\u8721\u70db\u7ebf\u5177\u6709\u76f8\u540c\u7684\u6536\u5e02\u4ef7\u65f6\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a \u53cd\u51fb\u7ebf\u5f62\u6001 \uff08\u4e5f\u79f0\u4e3a \u7ea6\u4f1a\u5f62\u6001 \uff09\u3002 \u770b\u6da8\u53cd\u51fb\u7ebf\u5f62\u6001 \u51fa\u73b0\u5728\u4e0b\u964d\u884c\u60c5\u4e2d\uff0c\u4e0e[[03. \u523a\u900f\u5f62\u6001]]\u7684\u4e3b\u8981\u533a\u522b\u662f\uff0c\u770b\u6da8\u53cd\u51fb\u7ebf\u901a\u5e38\u5e76\u4e0d\u628a\u6536\u5e02\u4ef7\u5411\u4e0a\u63a8\u8fdb\u5230\u524d\u4e00\u5929\u7684\u7eff\u8272\u5b9e\u4f53\u5185\u90e8\uff0c\u800c\u662f\u4ec5\u4ec5\u56de\u5347\u5230\u524d\u4e00\u5929\u7684\u6536\u5e02\u4ef7\u7684\u4f4d\u7f6e\u3002\u800c\u5728\u523a\u900f\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u6df1\u6df1\u5730\u5411\u4e0a\u7a7f\u5165\u4e86\u524d\u4e00\u4e2a\u7eff\u8272\u5b9e\u4f53\u4e4b\u5185\u3002\u56e0\u6b64\uff0c\u523a\u900f\u5f62\u6001\u4e0e\u770b\u6da8\u53cd\u51fb\u7ebf\u5f62\u6001\u76f8\u6bd4\u8f83\uff0c\u662f\u4e00\u79cd\u66f4\u4e3a\u91cd\u8981\u7684\u5e95\u90e8\u53cd\u8f6c\u4fe1\u53f7\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u770b\u6da8\u53cd\u51fb\u7ebf\u8fd8\u662f\u4e0d\u53ef\u5c0f\u89d1\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u51fa\u73b0\u8868\u660e\u884c\u60c5\u6d41\u52a8\u7684\u65b9\u5411\u6b63\u5728\u6539\u53d8\u3002 \u770b\u8dcc\u53cd\u51fb\u7ebf\u5f62\u6001 \u51fa\u73b0\u5728\u4e0a\u5347\u884c\u60c5\u4e2d\u3002\u5982\u679c\u8bf4\u770b\u6da8\u53cd\u51fb\u7ebf\u5f62\u6001\u4e0e\u523a\u900f\u5f62\u6001\u7531\u6e0a\u6e90\u7684\u8bdd\uff0c\u90a3\u4e48\u770b\u8dcc\u53cd\u51fb\u7ebf\u5f62\u6001\u4e0e[[02. \u4e4c\u4e91\u76d6\u9876\u5f62\u6001]]\u4e5f\u6709\u7c7b\u4f3c\u7684\u5173\u7cfb\u3002\u5728\u7406\u60f3\u7684\u770b\u8dcc\u53cd\u51fb\u7ebf\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u5929\u7684\u5f00\u5e02\u4ef7\u9ad8\u4e8e\u524d\u4e00\u5929\u7684\u6700\u9ad8\u70b9\uff0c\u8fd9\u4e00\u70b9\u4e0e\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u662f\u4e00\u81f4\u7684\u3002\u4e0d\u8fc7\uff0c\u4e0e\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e00\u5929\u7684\u6536\u5e02\u4ef7\u5e76\u6ca1\u6709\u5411\u4e0b\u7a7f\u5165\u524d\u4e00\u5929\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u4e4b\u5185\u3002\u7531\u6b64\u770b\u6765\uff0c\u4e4c\u4e91\u76d6\u9876\u5f62\u6001\u6240\u53d1\u51fa\u7684\u9876\u90e8\u53cd\u8f6c\u4fe1\u53f7\uff0c\u6bd4\u770b\u8dcc\u53cd\u51fb\u7ebf\u5f62\u6001\u66f4\u5f3a\u3002 \u5728\u53cd\u51fb\u7ebf\u5f62\u6001\u4e2d\uff0c\u4e00\u9879\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\u662f\uff0c\u7b2c\u4e8c\u5929\u7684\u5f00\u5e02\u4ef7\u662f\u5426\u5f3a\u52b2\u5730\u4e0a\u5347\u5230\u8f83\u9ad8\u7684\u6c34\u5e73\uff08\u5728\u770b\u8dcc\u53cd\u51fb\u7ebf\u5f62\u6001\u4e2d\uff09\uff0c\u6216\u8005\u662f\u5426\u5267\u70c8\u5730\u4e0b\u964d\u5230\u8f83\u4f4e\u7684\u6c34\u5e73\uff08\u5728\u770b\u6da8\u53cd\u51fb\u7ebf\u5f62\u6001\u4e2d\uff09\u3002\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5728\u8be5\u5f62\u6001\u7684\u7b2c\u4e8c\u5929\u5f00\u5e02\u65f6\uff0c\u5e02\u573a\u672c\u5df2\u7ecf\u987a\u7740\u65e2\u6709\u8d8b\u52bf\u5411\u524d\u8fc8\u4e86\u4e00\u5927\u6b65\uff0c\u4f46\u662f\u540e\u6765\u5374\u53d1\u751f\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u53d8\u6545\u3002\u5230\u5f53\u65e5\u6536\u5e02\u65f6\uff0c\u5e02\u573a\u7adf\u7136\u5b8c\u5168\u8fd4\u56de\u5230\u524d\u4e00\u5929\u6536\u5e02\u4ef7\u7684\u6c34\u5e73\u3002\u5982\u6b64\u4e00\u6765\uff0c\u671d\u5915\u4e4b\u95f4\u7cbe\u626d\u8f6c\u4e86\u884c\u60c5\u57fa\u8c03\u3002","title":"\u53cd\u51fb\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%90%91%E4%B8%8A%E8%B7%B3%E7%A9%BA%E4%B8%A4%E5%8F%AA%E4%B9%8C%E9%B8%A6/","text":"\u5411\u4e0a\u8df3\u7a7a\u4e24\u53ea\u4e4c\u9e26\u5f62\u6001 \uff0c\u201c\u5411\u4e0a\u8df3\u7a7a\u201d\u6307\u7684\u662f\u5c0f\u7eff\u8272\u5b9e\u4f53\u4e0e\u5b83\u4eec\u4e4b\u524d\u7684\u5b9e\u4f53\uff08\u7b2c\u4e00\u4e2a\u5c0f\u7eff\u8272\u5b9e\u4f53\u4e4b\u524d\u7684\u5b9e\u4f53\uff0c\u901a\u5e38\u662f\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\uff09\u4e4b\u95f4\u7684\u4ef7\u683c\u8df3\u7a7a\u3002\u8fd9\u662f\u4e00\u79cd\u770b\u8dcc\u7684\u4ef7\u683c\u5f62\u6001\u3002\u5728\u7406\u60f3\u7684\u5411\u4e0a\u8df3\u7a7a\u4e24\u53ea\u4e4c\u9e26\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u7eff\u8272\u5b9e\u4f53\u7684\u5f00\u5e02\u4ef7\u9ad8\u4e8e\u7b2c\u4e00\u4e2a\u7eff\u8272\u5b9e\u4f53\u7684\u5f00\u5e02\u4ef7\uff0c\u5e76\u4e14\u5b83\u7684\u6536\u5e02\u4ef7\u4f4e\u4e8e\u7b2c\u4e00\u4e2a\u7eff\u8272\u5b9e\u4f53\u7684\u6536\u5e02\u4ef7\u3002 \u8fd9\u4e2a\u5f62\u6001\u5728\u6280\u672f\u4e0a\u770b\u8dcc\u7684\u7406\u8bba\u4f9d\u636e\u5927\u81f4\u5982\u4e0b\uff1a\u5e02\u573a\u672c\u6765\u5904\u4e8e\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5e76\u4e14\u8fd9\u4e00\u5929\u7684\u5f00\u5e02\u4ef7\u540c\u524d\u4e00\u5929\u7684\u6536\u5e02\u4ef7\u76f8\u6bd4\uff0c\u662f\u5411\u4e0a\u8df3\u7a7a\u7684\uff0c\u53ef\u662f\u5e02\u573a\u4e0d\u80fd\u7ef4\u6301\u8fd9\u4e2a\u65b0\u9ad8\u6c34\u5e73\uff0c\u7ed3\u679c\u5f53\u5929\u53cd\u800c\u5f62\u6210\u4e86\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u3002\u5230\u6b64\u65f6\u4e3a\u6b62\uff0c\u591a\u5934\u81f3\u5c11\u8fd8\u80fd\u635e\u7740\u51e0\u6839\u6551\u547d\u7a3b\u8349\uff0c\u56e0\u4e3a\u8fd9\u6839\u7eff\u8272\u8721\u70db\u7ebf\u8fd8\u80fd\u591f\u7ef4\u6301\u5728\u524d\u4e00\u5929\u7684\u6536\u5e02\u4ef7\u4e4b\u4e0a\u3002\u7b2c\u4e09\u5929\uff0c\u53c8\u4e3a\u5e02\u573a\u62b9\u4e0a\u4e86\u66f4\u6df1\u7684\u75b2\u8f6f\u8272\u5f69\uff1a\u5f53\u5929\u5e02\u573a\u66fe\u7ecf\u518d\u5ea6\u521b\u51fa\u65b0\u9ad8\uff0c\u4f46\u662f\u540c\u6837\u672a\u80fd\u5c06\u8fd9\u4e2a\u65b0\u9ad8\u6c34\u5e73\u7ef4\u6301\u5230\u6536\u5e02\u7684\u65f6\u5019\u3002\u7136\u800c\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u7b2c\u4e09\u65e5\u7684\u6536\u5e02\u4ef7\u4f4e\u4e8e\u7b2c\u4e8c\u65e5\u7684\u6536\u5e02\u4ef7\u3002\u5982\u679c\u5e02\u573a\u679c\u771f\u5982\u6b64\u575a\u633a\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u80fd\u7ef4\u6301\u65b0\u9ad8\u6c34\u5e73\u5462\uff1f\u4e3a\u4ec0\u4e48\u5e02\u573a\u7684\u6536\u5e02\u4ef7\u4e0b\u964d\u4e86\u5462\uff1f\u8fd9\u65f6\u5019\uff0c\u591a\u5934\u5fc3\u4e2d\u6050\u6015\u6b63\u5728\u60f4\u60f4\u4e0d\u5b89\u5730\u76d8\u7b97\u7740\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002\u601d\u6765\u60f3\u53bb\uff0c\u7ed3\u8bba\u5f80\u5f80\u662f\uff0c\u5e02\u573a\u4e0d\u5982\u4ed6\u4eec\u5f53\u521d\u6307\u671b\u7684\u90a3\u6837\u575a\u633a\u3002\u5982\u679c\u6b21\u65e5\uff08\u4e5f\u5c31\u662f\u7b2c\u56db\u5929\uff09\u5e02\u573a\u8fd8\u662f\u4e0d\u80fd\u62ff\u4e0b\u524d\u9762\u7684\u5236\u9ad8\u70b9\uff0c\u90a3\u4e48\u53ef\u60f3\u800c\u77e5\uff0c\u5e02\u573a\u5c06\u4f1a\u51fa\u73b0\u66f4\u4f4e\u7684\u4ef7\u683c\u3002","title":"\u5411\u4e0a\u8df3\u7a7a\u4e24\u53ea\u4e4c\u9e26"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%9C%86%E5%BD%A2%E9%A1%B6%E9%83%A8%E5%BD%A2%E6%80%81%E5%92%8C%E5%9C%86%E5%BD%A2%E5%BA%95%E9%83%A8%E5%BD%A2%E6%80%81/","text":"\u5728 \u5706\u5f62\u9876\u90e8\u5f62\u6001 \u4e2d\uff0c\u5e02\u573a\u9010\u6b65\u5f62\u6210\u5411\u4e0a\u51f8\u8d77\u7684\u5706\u5f27\u72b6\u56fe\u6848\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u901a\u5e38\u51fa\u73b0\u7684\u662f\u4e00\u4e9b\u8f83\u5c0f\u7684\u5b9e\u4f53\u3002\u6700\u540e\uff0c\u5f53\u5e02\u573a\u5411\u4e0b\u8df3\u7a7a\u65f6\uff0c\u5c31\u8bc1\u660e\u5706\u5f62\u9876\u90e8\u5f62\u6001\u5df2\u7ecf\u5b8c\u6210\u3002 \u672c\u5f62\u6001\u5e94\u5f53\u5305\u542b\u4e00\u4e2a\u5411\u4e0b\u7684\u8df3\u7a7a\uff0c\u4f5c\u4e3a\u5e02\u573a\u9876\u90e8\u7684\u9644\u52a0\u9a8c\u8bc1\u4fe1\u53f7\u3002 \u5706\u5f62\u5e95\u90e8\u5f62\u6001\u53cd\u6620\u51fa\u5e02\u573a\u8bc1\u5904\u4e8e\u5e95\u90e8\u53cd\u8f6c\u8fc7\u7a0b\u4e2d\uff0c\u5e02\u573a\u9010\u6b65\u5448\u73b0\u51fa\u5411\u4e0b\u51f9\u8fdb\u7684\u5706\u5f27\u72b6\u56fe\u6848\uff0c\u7136\u540e\u5e02\u573a\u5411\u4e0a\u8df3\u7a7a\u3002 \u672c\u5f62\u6001\u5e94\u5f53\u5305\u542b\u4e00\u4e2a\u5411\u4e0a\u7684\u8df3\u7a7a\uff0c\u4ee5\u8bc1\u5b9e\u5e02\u573a\u5e95\u90e8\u7684\u5b8c\u6210\u3002","title":"\u5706\u5f62\u9876\u90e8\u5f62\u6001\u548c\u5706\u5f62\u5e95\u90e8\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%A1%94%E5%BD%A2%E9%A1%B6%E9%83%A8%E5%BD%A2%E6%80%81%E5%92%8C%E5%A1%94%E5%BD%A2%E5%BA%95%E9%83%A8%E5%BD%A2%E6%80%81/","text":"\u5854\u5f62\u9876\u90e8\u5f62\u6001 \u51fa\u73b0\u5728\u9ad8\u4ef7\u683c\u6c34\u5e73\u4e0a\u3002\u5e02\u573a\u672c\u6765\u5904\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u51fa\u73b0\u4e86\u4e00\u6839\u575a\u633a\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u6216\u8005\u4e00\u7cfb\u5217\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u7136\u540e\u5e02\u573a\u653e\u7f13\u4e86\u4e0a\u6da8\u7684\u6b65\u8c03\uff0c\u63a5\u7740\u51fa\u73b0\u4e86\u4e00\u6839\u6216\u8005\u6570\u6839\u5927\u7684\u7eff\u8272\u8721\u70db\u7ebf\uff0c\u4e8e\u662f\u5854\u5f62\u9876\u90e8\u5f62\u6001\u5c31\u5b8c\u6210\u4e86\u3002 \u5854\u5f62\u5e95\u90e8\u5f62\u6001 \u53d1\u751f\u5728\u4e0b\u964d\u884c\u60c5\u4e2d\u3002\u5e02\u573a\u5f62\u6210\u4e86\u4e00\u6839\u6216\u8005\u6570\u6839\u957f\u957f\u7684\u7eff\u8272\u8721\u70db\u7ebf\uff0c\u8868\u793a\u7a7a\u65b9\u52a8\u529b\u4e1d\u6beb\u4e0d\u51cf\u3002\u540e\u6765\u51fa\u73b0\u4e86\u51e0\u6839\u5c0f\u5b9e\u4f53\uff0c\u7f13\u548c\u4e86\u884c\u60c5\u770b\u8dcc\u7684\u6c14\u6c1b\u3002\u6700\u540e\u51fa\u73b0\u4e86\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a\u5854\u5f62\u5e95\u90e8\u5f62\u6001\u3002","title":"\u5854\u5f62\u9876\u90e8\u5f62\u6001\u548c\u5854\u5f62\u5e95\u90e8\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%AD%95%E7%BA%BF%E5%BD%A2%E6%80%81/","text":"\u5b55\u7ebf\u5f62\u6001\u7531\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\uff0c\u5176\u4e2d\u540e\u9762\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u8f83\u5c0f\uff0c\u5e76\u4e14\u88ab\u524d\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u5305\u8fdb\u53bb\u4e86\u3002\u5728\u672c\u5f62\u6001\u4e2d\uff0c\u957f\u7684\u8721\u70db\u7ebf\u662f\u201c\u6bcd\u201d\u8721\u70db\u7ebf\uff0c\u800c\u5c0f\u7684\u8721\u70db\u7ebf\u5219\u662f\u201c\u5b50\u201d\u6216\u201c\u80ce\u201d\u8721\u70db\u7ebf\u3002\u5b55\u7ebf\u5f62\u6001\u7684\u7b2c\u4e8c\u6839\u7ebf\u65e2\u53ef\u4ee5\u662f\u7ea2\u8272\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7eff\u8272\u7684\u3002 \u5b55\u7ebf\u5f62\u6001\u63ed\u793a\u4e86\u5e02\u573a\u5728\u672c\u5f62\u6001\u51fa\u73b0\u524d\u540e\u5065\u5eb7\u72b6\u51b5\u7684\u660e\u663e\u53cd\u5dee\u3002\u5728\u725b\u5e02\u884c\u60c5\u4e2d\uff0c\u5b55\u7ebf\u5f62\u6001\u7684\u524d\u4e00\u4e2a\u957f\u957f\u7684\u7ea2\u8272\u5b9e\u4f53\u8868\u73b0\u51fa\u5e02\u573a\u672c\u6765\u5145\u6ee1\u4e86\u6d3b\u529b\uff0c\u4f46\u662f\u540e\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5b9e\u4f53\u5374\u53cd\u6620\u51fa\u5e02\u573a\u72b9\u7591\u4e0d\u5b9a\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5c0f\u5b9e\u4f53\u7684\u5f00\u5e02\u4ef7\u548c\u6536\u5e02\u4ef7\u90fd\u6536\u7f29\u5230\u524d\u4e00\u6839\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u548c\u6536\u5e02\u4ef7\u7684\u8303\u56f4\u5185\uff0c\u4ece\u53e6\u4e00\u4e2a\u4fa7\u9762\u8868\u660e\u725b\u65b9\u5411\u4e0a\u7684\u63a8\u52a8\u529b\u6b63\u5728\u8870\u9000\u3002\u7531\u6b64\u770b\u6765\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u8d8b\u52bf\u53cd\u8f6c\u3002\u5728\u718a\u5e02\u884c\u60c5\u4e2d\uff0c\u5b55\u7ebf\u5f62\u6001\u7684\u524d\u4e00\u4e2a\u957f\u957f\u7684\u7eff\u8272\u5b9e\u4f53\u53cd\u6620\u4e86\u6c89\u91cd\u7684\u629b\u552e\u538b\u529b\uff0c\u4f46\u662f\uff0c\u968f\u540e\u7684\u5c0f\u5b9e\u4f53\u5374\u8868\u660e\u5e02\u573a\u8e0c\u8e87\u4e0d\u524d\u3002\u7b2c\u4e8c\u5929\u7684\u5c0f\u5b9e\u4f53\u662f\u4e2a\u8b66\u544a\u4fe1\u53f7\uff0c\u8bf4\u660e\u718a\u65b9\u7684\u529b\u91cf\u6b63\u5728\u51cf\u5f31\uff0c\u56e0\u6b64\u672c\u5f62\u6001\u53ef\u80fd\u6784\u6210\u53cd\u8f6c\u4fe1\u53f7\u3002\u4e8e\u662f\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u8d8b\u52bf\u53cd\u8f6c\u3002 \u5b55\u7ebf\u5f62\u6001\u4e0e[[01. \u541e\u6ca1\u5f62\u6001\uff08\u62b1\u7ebf\u5f62\u6001\uff09|\u541e\u6ca1\u5f62\u6001]]\u76f8\u6bd4\uff0c\u4e24\u4e2a\u8721\u70db\u7ebf\u7684\u987a\u5e8f\u6070\u597d\u98a0\u5012\u8fc7\u6765\u3002\u5728\u5b55\u7ebf\u5f62\u6001\u4e2d\uff0c\u524d\u4e00\u4e2a\u662f\u975e\u5e38\u957f\u7684\u5b9e\u4f53\uff0c\u5b83\u5c06\u540e\u4e00\u4e2a\u5c0f\u5b9e\u4f53\u5305\u8d77\u6765\u3002\u800c\u5728\u541e\u6ca1\u5f62\u6001\u4e2d\uff0c\u540e\u9762\u662f\u4e00\u6839\u957f\u957f\u7684\u5b9e\u4f53\uff0c\u5b83\u5c06\u524d\u4e00\u4e2a\u5c0f\u5b9e\u4f53\u8986\u76d6\u8fdb\u53bb\u4e86\u3002 \u5b55\u7ebf\u5f62\u6001\u4e0e\u541e\u6ca1\u5f62\u6001\u7684\u53e6\u4e00\u4e2a\u533a\u522b\u662f\uff0c\u5728\u541e\u6ca1\u5f62\u6001\u4e2d\uff0c\u4e24\u6839\u8721\u70db\u7ebf\u5b9e\u4f53\u7684\u989c\u8272\u5e94\u5f53\u4e92\u4e0d\u76f8\u540c\u3002\u800c\u5728\u5b55\u7ebf\u5f62\u6001\u4e2d\uff0c\u8fd9\u4e00\u70b9\u5012\u4e0d\u662f\u5fc5\u8981\u6761\u4ef6\u3002\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b55\u7ebf\u5f62\u6001\u7684\u4e24\u4e2a\u5b9e\u4f53\u7684\u989c\u8272\u4e5f\u662f\u4e0d\u76f8\u540c\u7684\u3002 \u5341\u5b57\u5b55\u7ebf\u5f62\u6001 \u4f5c\u4e3a\u4e00\u6761\u666e\u904d\u7684\u7ecf\u9a8c\uff0c\u5728\u5b55\u7ebf\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u6839\u5b9e\u4f53\u8d8a\u5c0f\uff0c\u5219\u6574\u4e2a\u5f62\u6001\u8d8a\u6709\u529b\u91cf\u3002\u8fd9\u6761\u7ecf\u9a8c\u901a\u5e38\u90fd\u662f\u6210\u7acb\u7684\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\u8d8a\u5c0f\uff0c\u5e02\u573a\u7684\u77db\u76fe\u5fc3\u6001\u5c31\u8d8a\u751a\uff0c\u6240\u4ee5\u8d8a\u6709\u53ef\u80fd\u5f62\u6210\u8d8b\u52bf\u7684\u53cd\u8f6c\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u968f\u7740\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u4e0e\u6536\u5e02\u4ef7\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u6536\u7a84\uff0c\u5176\u5b9e\u4f53\u4fbf\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6700\u540e\u5c31\u5f62\u6210\u4e86\u4e00\u6839[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\u3002\u5728\u4e0b\u964d\u884c\u60c5\u4e2d\uff0c\u524d\u9762\u662f\u4e00\u6839\u957f\u7eff\u8272\u5b9e\u4f53\uff08\u6216\u8005\u5728\u4e0a\u6da8\u884c\u60c5\u4e2d\u524d\u9762\u662f\u4e00\u6839\u9ad8\u9ad8\u7684\u7ea2\u8272\u5b9e\u4f53\uff09\uff0c\u540e\u9762\u7d27\u8ddf\u7740\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u6784\u6210\u4e86\u4e00\u7c7b\u7279\u6b8a\u7684\u5b55\u7ebf\u5f62\u6001\uff0c \u5341\u5b57\u5b55\u7ebf\u5f62\u6001 \u3002 \u56e0\u4e3a\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u5305\u542b\u4e86\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u6240\u4ee5\u8fd9\u7c7b\u5f62\u6001\u7684\u6280\u672f\u610f\u4e49\u6bd4\u5e38\u89c4\u5b55\u7ebf\u5f62\u6001\u66f4\u5f3a\uff0c\u88ab\u89c6\u4e3a\u66f4\u6709\u6548\u7684\u53cd\u8f6c\u4fe1\u53f7\u3002\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u6709\u65f6\u4e5f\u79f0\u4e3a \u5446\u6ede\u5f62\u6001 \u3002\u4e00\u65e6\u5728\u4e00\u6839\u5f88\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u4e4b\u540e\u51fa\u73b0\u4e86\u4e00\u6839\u5341\u5b57\u8721\u70db\u7ebf\uff0c\u5982\u679c\u591a\u5934\u4ea4\u6613\u5546\u5bf9\u8fd9\u4e2a\u5f62\u6001\u89c6\u800c\u4e0d\u89c1\u7684\u8bdd\uff0c\u5c31\u628a\u81ea\u5df1\u63a8\u5230\u4e86\u5371\u9669\u7684\u5883\u5730\u3002\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u4e5f\u53ef\u80fd\u5f15\u53d1\u5e95\u90e8\u8fc7\u7a0b\uff0c\u4e0d\u8fc7\uff0c \u8fd9\u7c7b\u5f62\u6001\u51fa\u73b0\u5728\u5e02\u573a\u9876\u90e8\u65f6\u66f4\u6709\u6548\u529b \u3002","title":"\u5b55\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%AD%95%E7%BA%BF%E5%BD%A2%E6%80%81/#_1","text":"\u4f5c\u4e3a\u4e00\u6761\u666e\u904d\u7684\u7ecf\u9a8c\uff0c\u5728\u5b55\u7ebf\u5f62\u6001\u4e2d\uff0c\u7b2c\u4e8c\u6839\u5b9e\u4f53\u8d8a\u5c0f\uff0c\u5219\u6574\u4e2a\u5f62\u6001\u8d8a\u6709\u529b\u91cf\u3002\u8fd9\u6761\u7ecf\u9a8c\u901a\u5e38\u90fd\u662f\u6210\u7acb\u7684\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u5b9e\u4f53\u8d8a\u5c0f\uff0c\u5e02\u573a\u7684\u77db\u76fe\u5fc3\u6001\u5c31\u8d8a\u751a\uff0c\u6240\u4ee5\u8d8a\u6709\u53ef\u80fd\u5f62\u6210\u8d8b\u52bf\u7684\u53cd\u8f6c\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u968f\u7740\u7b2c\u4e8c\u6839\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u4e0e\u6536\u5e02\u4ef7\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u6536\u7a84\uff0c\u5176\u5b9e\u4f53\u4fbf\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6700\u540e\u5c31\u5f62\u6210\u4e86\u4e00\u6839[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\u3002\u5728\u4e0b\u964d\u884c\u60c5\u4e2d\uff0c\u524d\u9762\u662f\u4e00\u6839\u957f\u7eff\u8272\u5b9e\u4f53\uff08\u6216\u8005\u5728\u4e0a\u6da8\u884c\u60c5\u4e2d\u524d\u9762\u662f\u4e00\u6839\u9ad8\u9ad8\u7684\u7ea2\u8272\u5b9e\u4f53\uff09\uff0c\u540e\u9762\u7d27\u8ddf\u7740\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u6784\u6210\u4e86\u4e00\u7c7b\u7279\u6b8a\u7684\u5b55\u7ebf\u5f62\u6001\uff0c \u5341\u5b57\u5b55\u7ebf\u5f62\u6001 \u3002 \u56e0\u4e3a\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u5305\u542b\u4e86\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u6240\u4ee5\u8fd9\u7c7b\u5f62\u6001\u7684\u6280\u672f\u610f\u4e49\u6bd4\u5e38\u89c4\u5b55\u7ebf\u5f62\u6001\u66f4\u5f3a\uff0c\u88ab\u89c6\u4e3a\u66f4\u6709\u6548\u7684\u53cd\u8f6c\u4fe1\u53f7\u3002\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u6709\u65f6\u4e5f\u79f0\u4e3a \u5446\u6ede\u5f62\u6001 \u3002\u4e00\u65e6\u5728\u4e00\u6839\u5f88\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u4e4b\u540e\u51fa\u73b0\u4e86\u4e00\u6839\u5341\u5b57\u8721\u70db\u7ebf\uff0c\u5982\u679c\u591a\u5934\u4ea4\u6613\u5546\u5bf9\u8fd9\u4e2a\u5f62\u6001\u89c6\u800c\u4e0d\u89c1\u7684\u8bdd\uff0c\u5c31\u628a\u81ea\u5df1\u63a8\u5230\u4e86\u5371\u9669\u7684\u5883\u5730\u3002\u5341\u5b57\u5b55\u7ebf\u5f62\u6001\u4e5f\u53ef\u80fd\u5f15\u53d1\u5e95\u90e8\u8fc7\u7a0b\uff0c\u4e0d\u8fc7\uff0c \u8fd9\u7c7b\u5f62\u6001\u51fa\u73b0\u5728\u5e02\u573a\u9876\u90e8\u65f6\u66f4\u6709\u6548\u529b \u3002","title":"\u5341\u5b57\u5b55\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E5%B9%B3%E5%A4%B4%E9%A1%B6%E9%83%A8%E5%BD%A2%E6%80%81%E5%92%8C%E5%B9%B3%E5%A4%B4%E5%BA%95%E9%83%A8%E5%BD%A2%E6%80%81/","text":"\u5e73\u5934\u5f62\u6001 \u662f\u7531\u51e0\u4e4e\u5177\u6709\u76f8\u540c\u6c34\u5e73\u7684\u6700\u9ad8\u70b9\u7684\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\u7684\uff0c\u6216\u8005\u662f\u7531\u51e0\u4e4e\u5177\u6709\u76f8\u540c\u7684\u6700\u4f4e\u70b9\u7684\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\u7684\u3002\u4e4b\u6240\u4ee5\u5c06\u8fd9\u79cd\u5f62\u6001\u79f0\u4e3a\u5e73\u5934\u9876\u90e8\u5f62\u6001\u548c\u5e73\u5934\u5e95\u90e8\u5f62\u6001\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8721\u70db\u7ebf\u7684\u7aef\u70b9\u5c31\u50cf\u954a\u5b50\u811a\u4e00\u6837\u5e73\u9f50\u3002\u5728\u4e0a\u5347\u7684\u5e02\u573a\u4e2d\uff0c\u5f53\u51e0\u6839\u8721\u70db\u7ebf\u7684\u6700\u9ad8\u70b9\u7684\u4f4d\u7f6e\u4e0d\u76f8\u4e0a\u4e0b\u65f6\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a \u5e73\u5934\u9876\u90e8\u5f62\u6001 \u3002\u5728\u4e0b\u8dcc\u7684\u5e02\u573a\u4e2d\uff0c\u5f53\u51e0\u6839\u8721\u70db\u7ebf\u7684\u6700\u4f4e\u70b9\u7684\u4f4d\u7f6e\u57fa\u672c\u4e00\u81f4\u65f6\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a \u5e73\u5934\u5e95\u90e8\u5f62\u6001 \u3002\u5e73\u5934\u5f62\u6001\u65e2\u53ef\u4ee5\u7531\u5b9e\u4f53\u6784\u6210\uff0c\u4e5f\u53ef\u4ee5\u7531[[00. \u8721\u70db\u7ebf\u57fa\u7840#^55588a|\u5f71\u7ebf]]\u6216\u8005[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\u6784\u6210\u3002\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5e73\u5934\u5f62\u6001\u5e94\u5f53\u7531\u524d\u4e00\u6839\u957f\u5b9e\u4f53\u8721\u70db\u7ebf\u4e0e\u540e\u4e00\u6839\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u7ec4\u5408\u800c\u6210\u3002\u8fd9\u6837\u5c31\u8868\u660e\uff0c\u65e0\u8bba\u5728\u7b2c\u4e00\u4e2a\u65f6\u6bb5\u5e02\u573a\u5c55\u73b0\u4e86\u4ec0\u4e48\u6837\u7684\u529b\u91cf\uff08\u5982\u679c\u662f\u957f\u7ea2\u8272\u5b9e\u4f53\uff0c\u5c55\u73b0\u7684\u4fbf\u662f\u770b\u6da8\u7684\u529b\u91cf\uff1b\u5982\u679c\u662f\u957f\u7eff\u8272\u5b9e\u4f53\uff0c\u5c55\u73b0\u7684\u4fbf\u662f\u770b\u8dcc\u7684\u529b\u91cf\uff09\uff0c\u5230\u4e86\u7b2c\u4e8c\u4e2a\u65f6\u6bb5\u90fd\u88ab\u74e6\u89e3\u4e86\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u65f6\u6bb5\u662f\u4e00\u4e2a\u5c0f\u5b9e\u4f53\uff0c\u4e14\u5176\u6700\u9ad8\u70b9\u4e0e\u7b2c\u4e00\u4e2a\u65f6\u6bb5\u7684\u9ad8\u70b9\u76f8\u540c\uff08\u5728\u5e73\u5934\u9876\u90e8\u5f62\u6001\u4e2d\uff09\uff0c\u6216\u5176\u4f4e\u70b9\u4e0e\u7b2c\u4e00\u4e2a\u65f6\u6bb5\u7684\u4f4e\u70b9\u76f8\u540c\uff08\u5728\u5e73\u5934\u5e95\u90e8\u5f62\u6001\u4e2d\uff09\u3002\u5982\u679c\u4e00\u4e2a\u770b\u8dcc\u7684\uff08\u5bf9\u4e8e\u9876\u90e8\u53cd\u8f6c\uff09\u8721\u70db\u56fe\u4fe1\u53f7\uff0c\u6216\u770b\u6da8\u7684\uff08\u5bf9\u4e8e\u5e95\u90e8\u53cd\u8f6c\uff09\u8721\u70db\u56fe\u4fe1\u53f7\uff0c\u540c\u4e8b\u6784\u6210\u4e86\u4e00\u4e2a\u5e73\u5934\u5f62\u6001\uff0c\u8be5\u5f62\u6001\u5c31\u591a\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u6280\u672f\u5206\u91cf\u3002","title":"\u5e73\u5934\u9876\u90e8\u5f62\u6001\u548c\u5e73\u5934\u5e95\u90e8\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/01.%20%E8%BE%83%E5%BC%B1%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BD%A2%E6%80%81/%E6%8D%89%E8%85%B0%E5%B8%A6%E7%BA%BF/","text":"\u6349\u8170\u5e26\u5f62\u6001 \u662f\u7531\u5355\u72ec\u4e00\u6839\u8721\u70db\u7ebf\u6784\u6210\u7684\u3002 \u770b\u6da8\u6349\u8170\u5e26\u5f62\u6001 \u662f\u4e00\u6839\u575a\u633a\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u5176\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u672c\u65f6\u6bb5\u7684\u6700\u4f4e\u70b9\uff08\u6216\u8005\uff0c\u8fd9\u6839\u8721\u70db\u7ebf\u53ea\u6709\u6781\u77ed\u7684\u4e0b\u5f71\u7ebf\uff09\uff0c\u7136\u540e\u5e02\u573a\u4e00\u8def\u4e0a\u626c\uff0c\u6536\u5e02\u4ef7\u4f4d\u4e8e\u6216\u63a5\u8fd1\u672c\u65f6\u6bb5\u7684\u6700\u9ad8\u70b9\u3002 \u770b\u6da8\u6349\u8170\u5e26\u7ebf \u53c8\u79f0\u4e3a \u5f00\u76d8\u5149\u811a\u9633\u7ebf \u3002\u5982\u679c\u5e02\u573a\u672c\u6765\u5c31\u5904\u4e8e\u4f4e\u4ef7\u533a\u57df\uff0c\u8fd9\u65f6\u51fa\u73b0\u4e86\u4e00\u6839\u957f\u957f\u7684\u770b\u6da8\u6349\u8170\u5e26\u7ebf\uff0c\u5219\u9884\u793a\u7740\u4e0a\u51b2\u884c\u60c5\u7684\u5230\u6765\u3002 ^0dc784 \u770b\u8dcc\u6349\u8170\u5e26\u5f62\u6001 \u662f\u4e00\u6839\u957f\u957f\u7684\u7eff\u8272\u8721\u70db\u7ebf\uff0c\u5b83\u7684\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u672c\u65f6\u6bb5\u7684\u6700\u9ad8\u70b9\uff08\u6216\u8005\u8ddd\u79bb\u6700\u9ad8\u4ef7\u53ea\u6709\u51e0\u4e2a\u6700\u5c0f\u62a5\u4ef7\u5355\u4f4d\uff09\uff0c\u7136\u540e\u5e02\u573a\u4e00\u8def\u4e0b\u8dcc\u3002\u5728\u5e02\u573a\u5904\u4e8e\u9ad8\u4ef7\u533a\u7684\u6761\u4ef6\u4e0b\uff0c\u770b\u8dcc\u6349\u8170\u5e26\u5f62\u6001\u7684\u51fa\u73b0\uff0c\u5c31\u6784\u6210\u4e86\u9876\u90e8\u53cd\u8f6c\u7684\u4fe1\u53f7\u3002 \u770b\u8dcc\u6349\u8170\u5e26\u7ebf \u6709\u65f6\u4e5f\u79f0\u4e3a \u5f00\u76d8\u5149\u5934\u9634\u7ebf \u3002 \u6349\u8170\u5e26\u8721\u70db\u7ebf\u7684\u957f\u5ea6\u8d8a\u957f\uff0c\u5219\u8be5\u5f62\u6001\u7684\u6280\u672f\u610f\u4e49\u8d8a\u91cd\u5927 \u3002\u5982\u679c\u5e02\u573a\u6536\u5e02\u4e8e\u7eff\u8272\u7684\u770b\u8dcc\u6349\u8170\u5e26\u7ebf\u4e4b\u4e0a\uff0c\u5219\u610f\u5473\u7740\u4e0a\u5347\u8d8b\u52bf\u5df2\u7ecf\u6062\u590d\u3002\u5982\u679c\u5e02\u573a\u6536\u5e02\u4e8e\u7ea2\u8272\u7684\u770b\u6da8\u6349\u8170\u5e26\u7ebf\u4e4b\u4e0b\uff0c\u5219\u610f\u5473\u7740\u5e02\u573a\u7684\u629b\u552e\u538b\u529b\u91cd\u65b0\u805a\u96c6\u8d77\u6765\u4e86\u3002 \u5982\u679c\u6349\u8170\u5e26\u7ebf\u5f97\u5230\u4e86\u963b\u6321\u533a\u57df\u7684\u9a8c\u8bc1\uff0c\u6216\u8005\u63a5\u8fde\u51fa\u73b0\u4e86\u51e0\u6839\u6349\u8170\u5e26\u7ebf\uff0c\u6216\u8005\u6709\u4e00\u9635\u5b50\u6ca1\u6709\u51fa\u73b0\u6349\u8981\u5e26\u7ebf\uff0c\u7a81\u7136\u6765\u4e86\u4e00\u6839\uff0c\u8fd9\u6837\u7684\u6349\u8170\u5e26\u7ebf\u5c31\u66f4\u52a0\u91cd\u8981\u3002","title":"\u6349\u8170\u5e26\u7ebf"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E4%B8%8A%E5%8D%87%E4%B8%89%E6%B3%95%E5%92%8C%E4%B8%8B%E9%99%8D%E4%B8%89%E6%B3%95%E5%BD%A2%E6%80%81/","text":"\u6240\u8c13\u4e09\u6cd5\u5f62\u6001\uff0c\u5305\u62ec\u770b\u6da8\u7684 \u4e0a\u5347\u4e09\u6cd5 \uff08 \u4e0a\u5347\u4e09\u8721\u70db\u7ebf\u6cd5 \uff09\uff0c\u4ee5\u53ca\u770b\u8dcc\u7684 \u4e0b\u964d\u4e09\u6cd5 \uff08 \u4e0b\u964d\u4e09\u8721\u70db\u7ebf\u6cd5 \uff09\u3002\u8fd9\u4e24\u7c7b\u5f62\u6001\u5747\u5c5e\u4e8e\u6301\u7eed\u5f62\u6001\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u770b\u6da8\u7684\u4e0a\u5347\u4e09\u6cd5\u5f62\u6001\u5b8c\u6210\u540e\uff0c\u4e4b\u524d\u7684\u8d8b\u52bf\u5e94\u5f53\u6062\u590d\uff0c\u884c\u60c5\u7ee7\u7eed\u8d70\u9ad8\u3002\u76f8\u5e94\u5730\uff0c\u5728\u770b\u8dcc\u7684\u4e0b\u964d\u4e09\u6cd5\u5f62\u6001\u5b8c\u6210\u540e\uff0c\u4e4b\u524d\u7684\u4e0b\u964d\u8d8b\u52bf\u7ee7\u7eed\u6709\u6548\u3002 \u4e0a\u5347\u4e09\u6cd5\u5f62\u6001\u7531\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7ec4\u6210\uff1a 1. \u9996\u5148\u51fa\u73b0\u7684\u662f\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u3002 2. \u5728\u8fd9\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u4e4b\u540e\uff0c\u7d27\u8ddf\u7740\u4e00\u7fa4\u4e00\u6b21\u4e0b\u964d\u7684\u6216\u8005\u6a2a\u5411\u5ef6\u4f38\u7684\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u3002\u8fd9\u7fa4\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u7684\u7406\u60f3\u6570\u76ee\u662f3\u6839\uff0c\u4f462\u6839\u6216\u80053\u6839\u4ee5\u4e0a\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u6761\u4ef6\u662f\uff1a\u53ea\u8981\u8fd9\u7fa4\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u57fa\u672c\u4e0a\u90fd\u5c40\u9650\u5728\u524d\u9762\u957f\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\u7684\u9ad8\u70b9\u5230\u4f4e\u70b9\u7684\u4ef7\u683c\u8303\u56f4\u4e4b\u5185\u3002\u5c0f\u8721\u70db\u7ebf\u65e2\u53ef\u4ee5\u662f\u7ea2\u8272\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u7eff\u8272\u7684\u3002 3. \u6700\u540e\u4e00\u5929\u5e94\u5f53\u662f\u4e00\u6839\u575a\u633a\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u5e76\u4e14\u5b83\u7684\u6536\u5e02\u4ef7\u9ad8\u4e8e\u7b2c\u4e00\u5929\u7684\u6536\u5e02\u4ef7\uff0c\u540c\u65f6\u5176\u5f00\u5e02\u4ef7\u5e94\u5f53\u9ad8\u4e8e\u524d\u4e00\u5929\u7684\u6536\u5e02\u4ef7\u3002 \u4e0b\u964d\u4e09\u6cd5\u5f62\u6001\u4e0e\u4e0a\u5347\u4e09\u6cd5\u5f62\u6001\u662f\u5b8c\u5168\u5bf9\u7b49\u7684\uff0c\u53ea\u4e0d\u8fc7\u65b9\u5411\u76f8\u53cd\u3002\u8fd9\u7c7b\u5f62\u6001\u7684\u5f62\u6210\u8fc7\u7a0b\u5982\u4e0b\uff1a\u5e02\u573a\u5e94\u5f53\u5904\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\uff0c\u9996\u5148\u51fa\u573a\u7684\u662f\u4e00\u6839\u957f\u957f\u7684\u7eff\u8272\u8721\u70db\u7ebf\u3002\u5728\u8fd9\u6839\u7eff\u8272\u8721\u70db\u7ebf\u4e4b\u540e\uff0c\u8ddf\u968f\u7740\u5927\u7ea63\u6839\u4e00\u6b21\u4e0a\u5347\u7684\u5c0f\u8721\u70db\u7ebf\uff0c\u5e76\u4e14\u8fd9\u7fa4\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u90fd\u5c40\u9650\u5728\u7b2c\u4e00\u6839\u8721\u70db\u7ebf\u7684\u8303\u56f4\u4e4b\u5185\uff08\u5305\u62ec\u5176\u4e0a\u4e0b\u5f71\u7ebf\uff09\u3002\u6700\u540e\u4e00\u5929\uff0c\u5f00\u5e02\u4ef7\u5e94\u4f4e\u4e8e\u524d\u4e00\u5929\u7684\u6536\u5e02\u4ef7\uff0c\u5e76\u4e14\u6536\u5e02\u4ef7\u5e94\u4f4e\u4e8e\u7b2c\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u7684\u6536\u5e02\u4ef7\u3002 \u672c\u5f62\u6001\u7684\u7406\u60f3\u60c5\u5f62\u662f\uff0c\u5728\u7b2c\u4e00\u6839\u957f\u5b9e\u4f53\u4e4b\u540e\uff0c\u5c0f\u5b9e\u4f53\u7684\u989c\u8272\u4e0e\u957f\u5b9e\u4f53\u76f8\u53cd\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u770b\u6da8\u7684\u4e0a\u5347\u4e09\u6cd5\u5f62\u6001\u6765\u8bf4\uff0c\u5e94\u5f53\u662f\u7eff\u8272\u7684\u5c0f\u5b9e\u4f53\uff1b\u800c\u5bf9\u770b\u8dcc\u7684\u4e0b\u964d\u4e09\u6cd5\u6765\u8bf4\uff0c\u5e94\u5f53\u662f\u7ea2\u8272\u7684\u5c0f\u5b9e\u4f53\u3002 \u4ece\u7ecf\u9a8c\u51fa\u53d1\uff0c2\u6839\uff0c\u81f3\u591a5\u6839\u5c0f\u5b9e\u4f53\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u5b8c\u6210\u5f62\u6001\u3002\u540c\u65f6\u5c0f\u5b9e\u4f53\u53ef\u4ee5\u662f\u4efb\u610f\u989c\u8272\u7684\u3002","title":"\u4e0a\u5347\u4e09\u6cd5\u548c\u4e0b\u964d\u4e09\u6cd5\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E5%88%86%E6%89%8B%E7%BA%BF%E5%BD%A2%E6%80%81/","text":"\u5206\u624b\u7ebf\u5f62\u6001 \u662f\u7531\u4e24\u6839\u989c\u8272\u76f8\u53cd\u3001\u5177\u6709\u76f8\u540c\u7684\u5f00\u5e02\u4ef7\u7684\u8721\u70db\u7ebf\u7ec4\u6210\u7684\u3002\u5206\u624b\u7ebf\u5c5e\u4e8e\u6301\u7eed\u4fe1\u53f7\uff0c\u9053\u7406\u5f88\u7b80\u5355\u3002\u5728\u5e02\u573a\u4e0a\u6da8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u4e2a\u7eff\u8272\u5b9e\u4f53\uff08\u5c24\u5176\u662f\u60f3\u591a\u8f83\u957f\u7684\u7eff\u8272\u5b9e\u4f53\u65f6\uff09\uff0c\u5bf9\u591a\u5934\u6765\u8bf4\uff0c\u53ef\u80fd\u6210\u4e3a\u4ed6\u4eec\u7684\u4e00\u5757\u5fc3\u75c5\uff0c\u770b\u7a7a\u5934\u6216\u8bb8\u6b63\u5728\u4e89\u5f97\u4e3b\u52a8\u6743\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5982\u679c\u540e\u4e00\u5929\u5e02\u573a\u5728\u5f00\u5e02\u65f6\u5411\u4e0a\u8df3\u7a7a\uff0c\u5f00\u5e02\u4ef7\u56de\u5230\u4e86\u524d\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u7684\u5f00\u5e02\u4ef7\u6c34\u5e73\uff0c\u5c31\u80fd\u6709\u529b\u5730\u8bc1\u660e\u7a7a\u5934\u5df2\u7ecf\u5931\u53bb\u4e86\u5bf9\u5e02\u573a\u7684\u63a7\u5236\u2014\u2014\u7279\u522b\u662f\u5f53\u5929\u80fd\u591f\u6536\u5e02\u5728\u8f83\u9ad8\u7684\u4f4d\u7f6e\uff0c\u5f62\u6210\u4e86\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u3002\u5728\u8fd9\u91cc\u5f62\u6001\u4e2d\uff0c\u7ea2\u8272\u8721\u70db\u7ebf\u540c\u65f6\u8fd8\u5e94\u5f53\u662f\u4e00\u6839[[\u6349\u8170\u5e26\u7ebf#^0dc784|\u770b\u6da8\u6349\u8170\u5e26\u7ebf]]\uff08\u5373\u5176\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u6216\u63a5\u8fd1\u672c\u65f6\u6bb5\u6700\u4f4e\u70b9\uff0c\u6536\u5e02\u4ef7\u4f4d\u4e8e\u6216\u63a5\u8fd1\u672c\u65f6\u6bb5\u6700\u9ad8\u70b9\uff09\u3002\u770b\u8dcc\u7684\u5206\u624b\u7ebf\u5f62\u6001\u4e0e\u4e0a\u8ff0\u5185\u5bb9\u5b8c\u5168\u5bf9\u5e94\uff0c\u4f46\u65b9\u5411\u76f8\u53cd\u3002\u4e00\u822c\u8ba4\u4e3a\uff0c\u8fd9\u7c7b\u5f62\u6001\u5c5e\u4e8e\u770b\u8dcc\u7684\u6301\u7eed\u5f62\u6001\u3002 \u5206\u624b\u7ebf\u96be\u5f97\u4e00\u89c1\u3002","title":"\u5206\u624b\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E5%90%91%E4%B8%8A%E8%B7%B3%E7%A9%BA%E5%92%8C%E5%90%91%E4%B8%8B%E8%B7%B3%E7%A9%BA%E5%B9%B6%E5%88%97%E9%98%B4%E9%98%B3%E7%BA%BF%E5%BD%A2%E6%80%81/","text":"\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001 \u662f\u7531\u5177\u5907\u7279\u5b9a\u5f62\u6001\u7684\u4e24\u6839\u8721\u70db\u7ebf\u7ec4\u6210\u7684\uff0c\u4e24\u8005\u4e00\u8d77\u5411\u4e0a\u8df3\u7a7a\u6216\u8005\u5411\u4e0b\u8df3\u7a7a\u3002 \u5411\u4e0a\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001 \uff0c\u5176\u4e2d\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u548c\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u5171\u540c\u5f62\u6210\u4e86\u4e00\u4e2a\u5411\u4e0a\u7684\u7a97\u53e3\u3002\u8fd9\u6839\u7eff\u8272\u8721\u70db\u4e0b\u7684\u5f00\u5e02\u4ef7\u4f4d\u4e8e\u524d\u4e00\u4e2a\u7ea2\u8272\u5b9e\u4f53\u4e4b\u5185\uff0c\u6536\u5e02\u4ef7\u4f4d\u4e8e\u524d\u4e00\u4e2a\u7ea2\u8272\u5b9e\u4f53\u4e4b\u4e0b\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6839\u7eff\u8272\u8721\u70db\u7ebf\u7684\u6536\u5e02\u4ef7\uff0c\u5c31\u6784\u6210\u4e86\u4e70\u5356\u53cc\u65b9\u4e89\u593a\u7684\u8981\u70b9\u3002\u5982\u679c\u5e02\u573a\u4ee5\u6536\u5e02\u4ef7\u5411\u4e0b\u7a81\u7834\u5230\u8be5[[\u7a97\u53e3\uff08\u7f3a\u53e3\uff09|\u7a97\u53e3]]\u4e4b\u4e0b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5411\u4e0a\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001\u7684\u770b\u6da8\u610f\u4e49\u5c31\u4e0d\u518d\u6210\u7acb\u4e86\u3002\u5728 \u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001 \u4e2d\uff0c\u57fa\u672c\u6982\u5ff5\u4e0e\u4e0a\u8ff0\u5f62\u6001\u662f\u76f8\u540c\u7684\uff0c\u53ea\u4e0d\u8fc7\u65b9\u5411\u76f8\u53cd\u3002\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\u548c\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u5171\u540c\u6253\u5f00\u4e86\u4e00\u4e2a\u5411\u4e0b\u7684\u7a97\u53e3\u3002\u5728\u5411\u4e0a\u8df3\u7a7a\u548c\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001\u4e2d\uff0c\u4e24\u6839\u8721\u70db\u7ebf\u7684\u5b9e\u4f53\u7684\u5927\u5c0f\u5e94\u5f53\u4e0d\u76f8\u4e0a\u4e0b\u3002 \u4e24\u79cd\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001\u90fd\u5f88\u5c11\u89c1\u3002 \u7531\u4e8e\u8be5\u5f62\u6001\u4e2d\u7684\u7a97\u53e3\u5982\u6b64\u9192\u76ee\uff0c\u4ee5\u81f3\u4e8e\u5728\u7a97\u53e3\u4e4b\u540e\u51fa\u73b0\u4ec0\u4e48\u989c\u8272\u7684\u8721\u70db\u7ebf\u6216\u8005\u4ec0\u4e48\u6837\u7684\u8721\u70db\u7ebf\u7ec4\u5408\u90fd\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002 \u7a97\u53e3\u672c\u8eab\u624d\u662f\u81f3\u5173\u91cd\u8981\u7684 \u3002\u6211\u4eec\u53ea\u8981\u8bb0\u4f4f\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u5411\u4e0a\u7684\u7a97\u53e3\uff08\u4f8b\u5982\u5728\u5411\u4e0a\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001\u4e2d\uff09\uff0c\u4fbf\u6784\u6210\u770b\u6da8\u7684\u4fe1\u53f7\u3002\u5e76\u4e14\u7a97\u53e3\u5e94\u6210\u4e3a\u652f\u6491\u533a\u57df\u3002\u5982\u679c\u5e02\u573a\u6536\u5e02\u4e8e\u8be5\u652f\u6491\u6c34\u5e73\u4e4b\u4e0b\uff0c\u5219\u5bfc\u81f4\u8d8b\u52bf\u65b9\u5411\u8f6c\u5411\u4e0b\u3002\u5bf9\u4e8e\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\uff0c\u9053\u7406\u4e00\u6837\u800c\u65b9\u5411\u76f8\u53cd\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e2\u7136\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5e26\u6709\u4e00\u4e2a\u5411\u4e0b\u7684\u7a97\u53e3\uff0c\u90a3\u4e48\u5b83\u5c06\u6784\u6210\u963b\u6321\u6c34\u5e73\u3002\u5982\u679c\u5e02\u573a\u6536\u5e02\u4e8e\u60f3\u60f3\u7684\u7a97\u53e3\u7684\u9876\u8fb9\u4e4b\u4e0a\uff0c\u5219\u6d88\u9664\u4e86\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u7684\u770b\u8dcc\u610f\u5473\u3002","title":"\u5411\u4e0a\u8df3\u7a7a\u548c\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E7%AA%97%E5%8F%A3%EF%BC%88%E7%BC%BA%E5%8F%A3%EF%BC%89/","text":"\u4e00\u822c\u628a\u4ef7\u683c\u8df3\u7a7a\u79f0\u4e3a \u7a97\u53e3 \u6216 \u7f3a\u53e3 \u3002 \u7a97\u53e3\u6709\u4e24\u79cd\u7c7b\u522b\uff0c\u4e00\u79cd\u662f\u770b\u6da8\u7684\uff0c\u4e00\u79cd\u662f\u770b\u8dcc\u7684\u3002 \u5411\u4e0a\u7684\u7a97\u53e3 \u662f\u770b\u6da8\u4fe1\u53f7\u3002\u5728\u524d\u4e00\u4e2a\u65f6\u6bb5\u6700\u9ad8\u70b9\uff08\u4e5f\u5c31\u662f\u5176\u4e0a\u5f71\u7ebf\u7684\u9876\u7aef\uff09\u4e0e\u672c\u65f6\u6bb5\u6700\u4f4e\u70b9\uff08\u4e5f\u5c31\u662f\u5176\u4e0b\u5f71\u7ebf\u5e95\u7aef\uff09\u4e4b\u95f4\uff0c\u5b58\u5728\u4ef7\u683c\u4e0a\u7684\u771f\u7a7a\u5730\u5e26\u3002 \u5411\u4e0b\u7684\u7a97\u53e3 \u5219\u6b63\u597d\u76f8\u53cd\u3002 \u6839\u636e\u65e5\u672c\u6280\u672f\u5206\u6790\u5e08\u7684\u89c2\u70b9\uff0c\u5e02\u573a\u53c2\u4e0e\u8005\u5e94\u5f53\u987a\u7740\u7a97\u53e3\u5f62\u6210\u7684\u65b9\u5411\u5efa\u7acb\u5934\u5bf8\u3002\u8fd9\u662f\u56e0\u4e3a \u7a97\u53e3\u5c5e\u4e8e\u6301\u7eed\u6027\u8d28\u7684\u6280\u672f\u4fe1\u53f7 \u3002\u56e0\u6b64\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u5411\u4e0a\u7684\u7a97\u53e3\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u5229\u7528\u5e02\u573a\u56de\u843d\u7684\u673a\u4f1a\u9022\u4f4e\u4e70\u8fdb\uff1b\u5982\u679c\u51fa\u73b0\u4e86\u5411\u4e0b\u7684\u7a97\u53e3\uff0c\u5c31\u5e94\u8be5\u5229\u7528\u5e02\u573a\u53cd\u5f39\u7684\u673a\u4f1a\u9022\u9ad8\u5356\u51fa\u3002 \u7a97\u53e3\u53ef\u80fd\u8f6c\u5316\u4e3a\u652f\u6491\u533a\u57df\u6216\u8005\u963b\u6321\u533a\u57df\u3002 \u5982\u679c\u51fa\u73b0\u4e86\u5411\u4e0a\u7684\u7a97\u53e3\uff0c\u5219\u5728\u4eca\u540e\u7684\u5e02\u573a\u5411\u4e0b\u56de\u64a4\u65f6\uff0c\u8fd9\u4e2a\u7a97\u53e3\u5c06\u5f62\u6210\u652f\u6491\u533a\u57df\uff08\u8fd9\u662f\u6307\u7a97\u53e3\u7684\u5168\u90e8\u7a7a\u95f4\uff09\u3002\u5982\u679c\u5e02\u573a\u5728\u5411\u4e0b\u56de\u64a4\u65f6\u6536\u5e02\u4ef7\u8fbe\u5230\u4e86\u7a97\u53e3\u4e0b\u8fb9\u7f18\u4e4b\u4e0b\u7684\u6c34\u5e73\uff0c\u90a3\u4e48\u5148\u524d\u7684\u4e0a\u5347\u8d8b\u52bf\u5c06\u4e0d\u590d\u5b58\u5728\u3002 \u540c\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u4e2a\u5411\u4e0b\u7684\u7a97\u53e3\uff0c\u5219\u610f\u5473\u7740\u5e02\u573a\u8fd8\u5c06\u8fdb\u4e00\u6b65\u4e0b\u964d\u3002\u6b64\u540e\u5f62\u6210\u7684\u4efb\u4f55\u4ef7\u683c\u5411\u4e0a\u53cd\u5f39\uff0c\u90fd\u4f1a\u5728\u8fd9\u4e2a\u7a97\u53e3\u5904\u906d\u9047\u963b\u6321\uff08\u6307\u7a97\u53e3\u7684\u5168\u90e8\u7a7a\u95f4\uff09\u3002\u5982\u679c\u591a\u65b9\u62e5\u6709\u8db3\u591f\u7684\u63a8\u52a8\u529b\uff0c\u5c06\u6536\u5e02\u4ef7\u63a8\u5347\u5230\u5411\u4e0b\u7684\u7a97\u53e3\u4e4b\u4e0a\uff0c\u90a3\u4e48\u4e0b\u964d\u8d8b\u52bf\u5c31\u5b8c\u7ed3\u4e86\u3002","title":"\u7a97\u53e3\uff08\u7f3a\u53e3\uff09"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E8%B7%B3%E7%A9%BA%E5%B9%B6%E5%88%97%E7%BA%A2%E8%89%B2%E8%9C%A1%E7%83%9B%E7%BA%BF%E5%BD%A2%E6%80%81/","text":"\u5728\u4e0a\u6da8\u884c\u60c5\u4e2d\uff0c\u5148\u51fa\u73b0\u4e86\u4e00\u6839\u5411\u4e0a\u8df3\u7a7a\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u968f\u540e\u53c8\u662f\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u5e76\u4e14\u540e\u9762\u8fd9\u6839\u7ebf\u4e0e\u524d\u4e00\u6839\u7ebf\u5927\u5c0f\u76f8\u5f53\uff0c\u4e24\u8005\u7684\u5f00\u5e02\u4ef7\u4e5f\u5dee\u4e0d\u591a\u5904\u4e8e\u540c\u6837\u7684\u6c34\u5e73\u4e0a\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u79cd\u770b\u6da8\u7684\u5f62\u6001\u3002\u8fd9\u79cd\u53cc\u8721\u70db\u7ebf\u5f62\u6001\u79f0\u4e3a \u5411\u4e0a\u8df3\u7a7a\u5e76\u5217\u7ea2\u8272\u8721\u70db\u7ebf\u5f62\u6001 \uff08\u6216\u8005\u79f0\u4e3a \u5411\u4e0a\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001 \uff09\u3002\u8fd9\u79cd\u5f62\u6001\u5f88\u5c11\u89c1\uff0c\u8fd8\u6709\u66f4\u5c11\u89c1\u7684 \u5411\u4e0b\u8df3\u7a7a\u7684\u4e24\u6839\u5e76\u5217\u7ea2\u8272\u8721\u70db\u7ebf \u3002\u5728\u4e0b\u8dcc\u884c\u60c5\u4e2d\uff0c\u5c3d\u7ba1\u5b83\u4eec\u90fd\u662f\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u56e0\u4e3a\u4e4b\u524d\u5411\u4e0b\u7684\u7a97\u53e3\uff0c\u4f9d\u7136\u628a\u5b83\u4eec\u5f52\u7ed3\u4e3a\u770b\u8dcc\u4fe1\u53f7\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e24\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u88ab\u770b\u4f5c\u7a7a\u5934\u5e73\u4ed3\u7684\u8fc7\u7a0b\u3002\u4e00\u65e6\u7a7a\u5934\u5e73\u4ed3\u7684\u8fc7\u7a0b\u5b8c\u6210\u4e86\uff0c\u4ef7\u683c\u5c31\u8981\u8fdb\u4e00\u6b65\u4e0b\u8dcc\u3002\u8fd9\u7c7b\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u7ea2\u8272\u8721\u70db\u7ebf\u5f62\u6001\u4e4b\u6240\u4ee5\u7279\u522b\u7f55\u89c1\uff0c\u5176\u539f\u56e0\u4e0d\u96be\u7406\u89e3\u3002\u5728\u5e02\u573a\u4e0b\u964d\u8d8b\u52bf\u4e2d\uff0c\u5f53\u51fa\u73b0\u5411\u4e0b\u8df3\u7a7a\u65f6\uff0c\u5982\u679c\u5f62\u6210\u8df3\u7a7a\u7684\u8721\u70db\u7ebf\u662f\u4e00\u6839\u7eff\u8272\u8721\u70db\u7ebf\uff0c\u90a3\u4e48\u5f53\u7136\u6bd4\u4e00\u6839\u7ea2\u8272\u8721\u70db\u7ebf\u81ea\u7136\u5f97\u591a\u3002 \u548c[[\u5411\u4e0a\u8df3\u7a7a\u548c\u5411\u4e0b\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf\u5f62\u6001|\u8df3\u7a7a\u5e76\u5217\u9634\u9633\u7ebf]]\u4e00\u6837\uff0c[[\u7a97\u53e3\uff08\u7f3a\u53e3\uff09|\u7a97\u53e3]]\u4e4b\u540e\u7684\u4e24\u6839\u8721\u70db\u7ebf\u7684\u989c\u8272\u5e76\u4e0d\u91cd\u8981\uff0c\u552f\u6709\u7a97\u53e3\u672c\u8eab\u63d0\u4f9b\u4e86\u8d8b\u52bf\u4fe1\u606f\uff0c\u4ee5\u53ca\u652f\u6491\u533a\u57df\u6216\u963b\u6321\u533a\u57df\u3002","title":"\u8df3\u7a7a\u5e76\u5217\u7ea2\u8272\u8721\u70db\u7ebf\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/02.%20%E6%8C%81%E7%BB%AD%E5%BD%A2%E6%80%81/%E9%AB%98%E4%BB%B7%E4%BD%8D%E5%92%8C%E4%BD%8E%E4%BB%B7%E4%BD%8D%E8%B7%B3%E7%A9%BA%E7%AA%81%E7%A0%B4%E5%BD%A2%E6%80%81/","text":"\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5f53\u5e02\u573a\u7ecf\u5386\u4e86\u4e00\u8f6e\u6025\u5267\u7684\u4e0a\u6da8\u540e\uff0c\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u4e00\u4e2a\u8c03\u6574\u6d88\u5316\u7684\u8fc7\u7a0b\u3002\u6709\u65f6\uff0c\u8fd9\u4e2a\u6574\u7406\u8fc7\u7a0b\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u5c0f\u5b9e\u4f53\u6765\u5b8c\u6210\u7684\u3002\u5982\u679c\u5728\u4e00\u6839\u575a\u633a\u7684\u8721\u70db\u7ebf\u4e4b\u540e\uff0c\u51fa\u73b0\u4e86\u4e00\u7fa4\u5c0f\u5b9e\u4f53\u7684\u8721\u70db\u7ebf\uff0c\u5219\u8868\u660e\u5e02\u573a\u5df2\u7ecf\u53d8\u5f97\u72b9\u8c6b\u4e0d\u51b3\u4e86\u3002\u867d\u7136\u8fd9\u7fa4\u5c0f\u5b9e\u4f53\u8868\u793a\u884c\u60c5\u8d8b\u52bf\u5df2\u7ecf\u4ece\u5411\u4e0a\u8f6c\u4e3a\u4e2d\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u51fa\u73b0\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u5065\u5eb7\u7684\uff0c\u56e0\u4e3a\u901a\u8fc7\u8e29\u6c34\u7684\u8fc7\u7a0b\uff0c\u7f13\u89e3\u4e86\u5e02\u573a\u6240\u5904\u7684\u8d85\u4e70\u72b6\u6001\u3002\u4e00\u65e6\u540e\u6765\u67d0\u4e00\u5929\u7684\u884c\u60c5\u4ece\u8fd9\u7fa4\u5c0f\u5b9e\u4f53\u5904\u6253\u5f00\u4e86\u4e00\u4e2a\u5411\u4e0a\u7684[[\u7a97\u53e3\uff08\u7f3a\u53e3\uff09|\u7a97\u53e3]]\uff0c\u5c31\u662f\u770b\u6da8\u7684\u4fe1\u53f7\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a \u9ad8\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001 \u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u79f0\u547c\u8fd9\u7c7b\u5f62\u6001\uff0c\u662f\u56e0\u4e3a\u5728\u8fd9\u7c7b\u5f62\u6001\u4e2d\uff0c\u5e02\u573a\u5148\u662f\u5728\u6700\u8fd1\u884c\u7a0b\u5355\u9ad8\u4ef7\u4f4d\u4e0a\u5f98\u5f8a\uff0c\u540e\u6765\u624d\u4e0b\u5b9a\u51b3\u5fc3\u5411\u4e0a\u8df3\u7a7a\u3002 \u53ef\u60f3\u800c\u77e5\uff0c \u4f4e\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001 \u6b63\u662f\u9ad8\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001\u7684\u53cd\u9762\u89d2\u8272\uff0c\u4e24\u8005\u5bf9\u7b49\u800c\u610f\u4e49\u76f8\u53cd\u3002\u4f4e\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001\u662f\u4e00\u4e2a\u5411\u4e0b\u7684\u7a97\u53e3\uff0c\u662f\u4ece\u4e00\u4e2a\u4f4e\u4ef7\u4f4d\u7684\u6a2a\u5411\u6574\u7406\u533a\u95f4\u5411\u4e0b\u6253\u5f00\u7684\u3002\u8fd9\u4e2a \u6a2a\u5411\u6574\u7406\u533a\u95f4 \uff08\u4e00\u7cfb\u5217\u8f83\u5c0f\u7684\u5b9e\u4f53\uff09\u53d1\u751f\u5728\u4e00\u8f6e\u6025\u5267\u4e0b\u8dcc\u4e4b\u540e\uff0c\u66fe\u7ecf\u662f\u5e02\u573a\u7a33\u5b9a\u4e86\u4e0b\u6765\u3002\u5f53\u521d\uff0c\u4ece\u8fd9\u7fa4\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u7684\u5916\u89c2\u770b\u6765\uff0c\u4f3c\u4e4e\u5e02\u573a\u6b63\u5728\u6784\u7b51\u4e00\u4e2a\u5e95\u90e8\u3002\u4f46\u662f\u540e\u6765\uff0c\u5e02\u573a\u4ee5\u7a97\u53e3\u7684\u5f62\u5f0f\u4ece\u8fd9\u4e2a\u5bc6\u96c6\u533a\u95f4\u5411\u4e0b\u7a81\u7834\uff0c\u6253\u7834\u4e86\u8fd9\u79cd\u770b\u6da8\u7684\u671f\u671b\u3002 \u5728\u4efb\u4f55\u9ad8\u4ef7\u4f4d\u8df3\u7a7a\u5f62\u6001\u4e2d\uff0c\u4e00\u65e6\u5e02\u573a\u6536\u5e02\u4e8e\u5176\u4e2d\u5411\u4e0a\u7684\u7a97\u53e3\u4e4b\u4e0b\uff0c\u5219\u6d88\u9664\u4e86\u5f62\u6001\u7684\u770b\u6da8\u610f\u4e49\u3002\u5bf9\u4f4e\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001\u6765\u8bf4\uff0c\u9053\u7406\u76f8\u540c\u800c\u65b9\u5411\u76f8\u53cd\u3002","title":"\u9ad8\u4ef7\u4f4d\u548c\u4f4e\u4ef7\u4f4d\u8df3\u7a7a\u7a81\u7834\u5f62\u6001"},{"location":"%E7%90%86%E8%B4%A2/%E6%97%A5%E6%9C%AC%E8%9C%A1%E7%83%9B%E5%9B%BE%E6%8A%80%E6%9C%AF/03.%20%E7%A5%9E%E5%A5%87%E7%9A%84%E5%8D%81%E5%AD%97%E7%BA%BF/%E5%8D%81%E5%AD%97%E7%BA%BF%E5%86%8D%E8%BF%B0/","text":"[[00. \u8721\u70db\u7ebf\u57fa\u7840#^7e8f22|\u5341\u5b57\u7ebf]]\u662f\u4e00\u79cd\u72ec\u7279\u7684\u8d8b\u52bf\u8f6c\u6298\u7684\u4fe1\u53f7\uff0c\u7279\u522b\u662f\u5f53\u5b83\u5904\u5728\u4e0a\u6da8\u884c\u60c5\u65f6\u3002\u5728\u5341\u5b57\u7ebf\u51fa\u73b0\u540e\uff0c\u5982\u679c\u53d1\u751f\u4e0b\u5217\u60c5\u5f62\uff0c\u5219\u589e\u52a0\u4e86\u5341\u5b57\u7ebf\u6784\u6210\u53cd\u8f6c\u4fe1\u53f7\u7684\u53ef\u80fd\u6027\u3002 1. \u540e\u7eed\u7684\u8721\u70db\u7ebf\u9a8c\u8bc1\u4e86\u5341\u5b57\u7ebf\u7684\u53cd\u8f6c\u4fe1\u53f7\u3002 2. \u5e02\u573a\u6b63\u5904\u4e8e\u8d85\u4e70\u72b6\u6001\u6216\u8d85\u5356\u72b6\u6001\u3002 3. \u5341\u5b57\u7ebf\u5728\u8be5\u5e02\u573a\u51fa\u73b0\u5f97\u4e0d\u591a\u3002\u5982\u679c\u5728\u67d0\u4e2a\u884c\u60c5\u56fe\u4e0a\u51fa\u73b0\u4e86\u8bb8\u591a\u5341\u5b57\u7ebf\uff0c\u5219\u5373\u4f7f\u51fa\u73b0\u4e86\u65b0\u7684\u5341\u5b57\u7ebf\uff0c\u4e5f\u6ca1\u6709\u591a\u5927\u610f\u4e49\u3002 \u4e0b\u9762\u5217\u4e3e\u4e86\u4e00\u4e9b\u6280\u5de7\uff0c\u53ef\u4ee5\u501f\u52a9\u5b83\u4eec\u6765\u5224\u65ad\u662f\u5426\u628a\u4e00\u6839\u8721\u70db\u7ebf\u5f52\u7ed3\u4e3a\u5e38\u89c4\u5341\u5b57\u7ebf\u5e76\u91c7\u53d6\u76f8\u5e94\u7684\u884c\u52a8\u3002 1. \u770b\u8fd9\u6839\u8fd1\u4f3c\u7684\u5341\u5b57\u7ebf\u4e0e\u5176\u90bb\u8fd1\u7684\u4ef7\u683c\u53d8\u5316\u7684\u76f8\u4e92\u5173\u7cfb\u662f\u600e\u4e48\u6837\u7684\u3002\u5982\u679c\u5728\u8fd9\u6839\u8fd1\u4f3c\u5341\u5b57\u7ebf\u7684\u5468\u56f4\uff0c\u8fd8\u6709\u4e00\u7cfb\u5217\u5c0f\u5b9e\u4f53\uff0c\u90a3\u4e48\u5c31\u4e0d\u5e94\u8be5\u8ba4\u4e3a\u8fd9\u6839\u8721\u70db\u7ebf\u6709\u591a\u5927\u610f\u4e49\uff0c\u56e0\u4e3a\u5728\u5b83\u9644\u8fd1\u6709\u8fd9\u4e48\u591a\u5c0f\u5b9e\u4f53\u8721\u70db\u7ebf\u3002\u7136\u800c\uff0c\u5982\u679c\u5728\u82e5\u5e72\u957f\u8721\u70db\u7ebf\u4e4b\u540e\u51fa\u73b0\u4e86\u4e00\u6839\u8fd1\u4f3c\u5341\u5b57\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8bf4\u8fd9\u4e2a\u65f6\u6bb5\u7684\u53d8\u5316\u5177\u5907\u4e0e\u5341\u5b57\u7ebf\u76f8\u540c\u7684\u542b\u4e49\uff0c\u56e0\u4e3a\u672c\u65f6\u6bb5\u7684\u53d8\u5316\u4e0e\u4e4b\u524d\u7684\u884c\u60c5\u663e\u73b0\u51fa\u672c\u8d28\u4e0a\u7684\u533a\u522b\u3002 2. \u5982\u679c\u5f53\u65f6\u5e02\u573a\u6b63\u5904\u5728\u4e00\u4e2a\u91cd\u8981\u7684\u8f6c\u6298\u70b9\u3002 3. \u5982\u679c\u5e02\u573a\u5df2\u7ecf\u5904\u5728\u6781\u5ea6\u8d85\u4e70\u6216\u8d85\u5356\u72b6\u6001\u3002 4. \u5982\u679c\u5f53\u65f6\u5df2\u7ecf\u6709\u5176\u4ed6\u6280\u672f\u4fe1\u53f7\u53d1\u51fa\u6765\u8b66\u544a\u4fe1\u606f\u3002 \u5341\u5b57\u7ebf\u4e4b\u6240\u4ee5\u5f88\u6709\u4ef7\u503c\uff0c\u662f\u56e0\u4e3a\u5b83\u5728\u63ed\u793a\u5e02\u573a\u9876\u90e8\u65b9\u9762\u6709\u8fc7\u4eba\u7684\u80fd\u529b\u3002\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5982\u679c\u524d\u9762\u5148\u51fa\u73b0\u4e00\u6839\u957f\u957f\u7684\u7ea2\u8272\u8721\u70db\u7ebf\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c24\u5176\u503c\u5f97\u6ce8\u610f\u3002\u56e0\u4e3a\u5341\u5b57\u7ebf\u4ee3\u8868\u7740\u5e02\u573a\u5904\u4e8e\u72b9\u8c6b\u4e0d\u51b3\u7684\u5fc3\u7406\u72b6\u6001\u3002\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\uff0c\u5982\u679c\u4e70\u623f\u72b9\u8c6b\u4e0d\u51b3\u3001\u770b\u4e0d\u51c6\u5e02\u573a\u65b9\u5411\uff0c\u6216\u8005\u4e0d\u80fd\u5f53\u673a\u7acb\u65ad\uff0c\u90a3\u4e48\u5f53\u524d\u4e0a\u5347\u8d8b\u52bf\u662f\u7ef4\u6301\u4e0d\u4e0b\u53bb\u7684\u3002\u53ea\u6709\u5728\u4e70\u623f\u7acb\u573a\u575a\u5b9a\u7684\u6761\u4ef6\u4e0b\uff0c\u4e0a\u6da8\u884c\u60c5\u624d\u80fd\u5f97\u5230\u6709\u529b\u7684\u652f\u6491\u3002\u5728\u5e02\u573a\u5df2\u7ecf\u7ecf\u5386\u4e86\u957f\u671f\u7684\u4e0a\u6da8\u4e4b\u540e\uff0c\u6216\u8005\u5f53\u5e02\u573a\u5904\u4e8e\u8d85\u4e70\u72b6\u6001\u65f6\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u6839\u5341\u5b57\u7ebf\uff0c\u5219\u610f\u5473\u7740\u4e70\u65b9\u642d\u8d77\u6765\u7684\u811a\u624b\u67b6\u9a6c\u4e0a\u5c31\u8981\u5feb\u6389\u4e86\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u867d\u7136\u5341\u5b57\u7ebf\u5728\u5f15\u53d1\u5e02\u573a\u7684\u9876\u90e8\u53cd\u8f6c\u65b9\u9762\u662f\u76f8\u5f53\u6709\u6548\u7684\uff0c\u4f46\u662f\u6839\u636e\u7ecf\u9a8c\u6765\u770b\uff0c\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\u5341\u5b57\u7ebf\u5f80\u5f80\u4e27\u5931\u4e86\u53d1\u6325\u53cd\u8f6c\u4f5c\u7528\u7684\u6f5c\u529b\u3002 \u5f53\u5341\u5b57\u7ebf\u51fa\u73b0\u65f6\uff0c\u5728\u4e0a\u5347\u8d8b\u52bf\u4e2d\u5e02\u573a\u53ef\u80fd\u5411\u4e0b\u53cd\u8f6c\uff0c\u800c\u5728\u4e0b\u964d\u8d8b\u52bf\u4e2d\u5e02\u573a\u5219\u53ef\u80fd\u7ee7\u7eed\u4e0b\u8dcc\u3002 \u5341\u5b57\u7ebf\u5728\u6784\u6210\u5e95\u90e8\u53cd\u8f6c\u4fe1\u53f7\u65f6\uff0c\u6bd4\u4f5c\u4e3a\u9876\u90e8\u53cd\u8f6c\u4fe1\u53f7\u9700\u8981\u66f4\u591a\u7684\u4f50\u8bc1\u3002 \u4e0a\u6da8\u884c\u60c5\u4e2d\u7684\u5341\u5b57\u7ebf\u79f0\u4e3a \u5317\u65b9\u5341\u5b57\u7ebf \uff0c\u4e0b\u964d\u8d8b\u52bf\u4e2d\u7684\u5341\u5b57\u79f0\u4e3a \u5357\u65b9\u5341\u5b57\u7ebf \u3002","title":"\u5341\u5b57\u7ebf\u518d\u8ff0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Socket/","text":"socket \u57fa\u7840 socket \u901a\u5e38\u4e5f\u79f0\u4f5c\u201d\u5957\u63a5\u5b57\u201c\uff0c\u7528\u4e8e\u63cf\u8ff0 IP \u5730\u5740\u548c\u7aef\u53e3\uff0c\u662f\u4e00\u4e2a\u901a\u4fe1\u94fe\u7684\u53e5\u67c4\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u901a\u8fc7\"\u5957\u63a5\u5b57\"\u5411\u7f51\u7edc\u53d1\u51fa\u8bf7\u6c42\u6216\u8005\u5e94\u7b54\u7f51\u7edc\u8bf7\u6c42\u3002 socket \u8d77\u6e90\u4e8e Unix\uff0c\u800c Unix/Linux \u57fa\u672c\u54f2\u5b66\u4e4b\u4e00\u5c31\u662f\u201c\u4e00\u5207\u7686\u6587\u4ef6\u201d\uff0c\u5bf9\u4e8e\u6587\u4ef6\u7528\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011\u6a21\u5f0f\u6765\u64cd\u4f5c\u3002socket \u5c31\u662f\u8be5\u6a21\u5f0f\u7684\u4e00\u4e2a\u5b9e\u73b0\uff0csocket \u5373\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u4e00\u4e9b socket \u51fd\u6570\u5c31\u662f\u5bf9\u5176\u8fdb\u884c\u7684\u64cd\u4f5c\uff08\u8bfb/\u5199 IO\u3001\u6253\u5f00\u3001\u5173\u95ed\uff09\u3002 socket \u548c file \u7684\u533a\u522b\uff1a file \u6a21\u5757\u662f\u9488\u5bf9\u67d0\u4e2a\u6307\u5b9a\u6587\u4ef6\u8fdb\u884c\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011 socket \u6a21\u5757\u662f\u9488\u5bf9\u670d\u52a1\u5668\u7aef\u548c\u5ba2\u6237\u7aef Socket \u8fdb\u884c\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011 \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b \u670d\u52a1\u7aef #include <sys/types.h> #include <sys/socket.h> #include <stdio.h> #include <netinet/in.h> #include <arpa/inet.h> #include <unistd.h> #include <string.h> #include <stdlib.h> #include <iostream> #include <string> #include <typeinfo> #define PORT 7000 #define QUEUE 20 int conn ; using namespace std ; int main () { //\u5b9e\u4f8b\u5316socket\u5bf9\u8c61\uff1a // AF_INET\u4e3a\u5730\u5740\u7c07\uff0c\u9ed8\u8ba4IPV4; // SOCK_STREAM\u4e3a\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3atcp // 0\u4e3a\u534f\u8bae\uff0c\u9ed8\u8ba4\u81ea\u52a8\u9009\u62e9\u5408\u9002\u534f\u8bae int ss = socket ( AF_INET , SOCK_STREAM , 0 ); // \u521b\u5efa\u4e00\u4e2astruct struct sockaddr_in server_sockaddr ; //\u7ed3\u6784\u4f53\u52a0\u5165\u53c2\u6570\uff1a\u7aef\u53e3\u548c\u5730\u5740 server_sockaddr . sin_family = AF_INET ; server_sockaddr . sin_port = htons ( PORT ); server_sockaddr . sin_addr . s_addr = htonl ( INADDR_ANY ); //bind() if ( bind ( ss , ( struct sockaddr * ) & server_sockaddr , sizeof ( server_sockaddr )) == -1 ) { perror ( \"bind\" ); exit ( 1 ); } //listen() if ( listen ( ss , QUEUE ) == -1 ) { perror ( \"listen\" ); exit ( 1 ); } struct sockaddr_in client_addr ; socklen_t length = sizeof ( client_addr ); //accept() //\u6210\u529f\u8fd4\u56de\u975e\u8d1f\u63cf\u8ff0\u5b57\uff0c\u51fa\u9519\u8fd4\u56de-1 conn = accept ( ss , ( struct sockaddr * ) & client_addr , & length ); if ( conn < 0 ) { perror ( \"connect\" ); exit ( 1 ); } char buffer [ 1024 ]; while ( 1 ) { memset ( buffer , 0 , sizeof ( buffer )); //read() int len = recv ( conn , buffer , sizeof ( buffer ), 0 ); if ( strcmp ( buffer , \"exit \\n \" ) == 0 ) break ; printf ( \"buffer: %s\" , buffer ); //send() //\u5fc5\u987b\u8981\u6709\u8fd4\u56de\u6570\u636e\uff0c \u8fd9\u6837\u624d\u7b97\u4e00\u4e2a\u5b8c\u6574\u7684\u8bf7\u6c42 send ( conn , buffer , len , 0 ); } close ( conn ); close ( ss ); return 0 ; } \u5ba2\u6237\u7aef #include <sys/types.h> #include <sys/socket.h> #include <stdio.h> #include <netinet/in.h> #include <arpa/inet.h> #include <unistd.h> #include <string.h> #include <stdlib.h> #include <fcntl.h> #include <sys/shm.h> #define MYPORT 7000 #define BUFFER_SIZE 1024 int main () { ///\u5b9a\u4e49sockfd int sock_cli = socket ( AF_INET , SOCK_STREAM , 0 ); ///\u5b9a\u4e49sockaddr_in struct sockaddr_in servaddr ; memset ( & servaddr , 0 , sizeof ( servaddr )); servaddr . sin_family = AF_INET ; servaddr . sin_port = htons ( MYPORT ); ///\u670d\u52a1\u5668\u7aef\u53e3 servaddr . sin_addr . s_addr = inet_addr ( \"127.0.0.1\" ); ///\u670d\u52a1\u5668ip //\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u6210\u529f\u8fd4\u56de0\uff0c\u9519\u8bef\u8fd4\u56de-1 if ( connect ( sock_cli , ( struct sockaddr * ) & servaddr , sizeof ( servaddr )) < 0 ) { perror ( \"connect\" ); exit ( 1 ); } char sendbuf [ BUFFER_SIZE ]; char recvbuf [ BUFFER_SIZE ]; while ( fgets ( sendbuf , sizeof ( sendbuf ), stdin ) != NULL ) { send ( sock_cli , sendbuf , strlen ( sendbuf ), 0 ); ///\u53d1\u9001 if ( strcmp ( sendbuf , \"exit \\n \" ) == 0 ) break ; recv ( sock_cli , recvbuf , sizeof ( recvbuf ), 0 ); ///\u63a5\u6536 fputs ( recvbuf , stdout ); memset ( sendbuf , 0 , sizeof ( sendbuf )); memset ( recvbuf , 0 , sizeof ( recvbuf )); } close ( sock_cli ); return 0 ; }","title":"socket \u57fa\u7840"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Socket/#socket","text":"socket \u901a\u5e38\u4e5f\u79f0\u4f5c\u201d\u5957\u63a5\u5b57\u201c\uff0c\u7528\u4e8e\u63cf\u8ff0 IP \u5730\u5740\u548c\u7aef\u53e3\uff0c\u662f\u4e00\u4e2a\u901a\u4fe1\u94fe\u7684\u53e5\u67c4\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u901a\u8fc7\"\u5957\u63a5\u5b57\"\u5411\u7f51\u7edc\u53d1\u51fa\u8bf7\u6c42\u6216\u8005\u5e94\u7b54\u7f51\u7edc\u8bf7\u6c42\u3002 socket \u8d77\u6e90\u4e8e Unix\uff0c\u800c Unix/Linux \u57fa\u672c\u54f2\u5b66\u4e4b\u4e00\u5c31\u662f\u201c\u4e00\u5207\u7686\u6587\u4ef6\u201d\uff0c\u5bf9\u4e8e\u6587\u4ef6\u7528\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011\u6a21\u5f0f\u6765\u64cd\u4f5c\u3002socket \u5c31\u662f\u8be5\u6a21\u5f0f\u7684\u4e00\u4e2a\u5b9e\u73b0\uff0csocket \u5373\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u4e00\u4e9b socket \u51fd\u6570\u5c31\u662f\u5bf9\u5176\u8fdb\u884c\u7684\u64cd\u4f5c\uff08\u8bfb/\u5199 IO\u3001\u6253\u5f00\u3001\u5173\u95ed\uff09\u3002 socket \u548c file \u7684\u533a\u522b\uff1a file \u6a21\u5757\u662f\u9488\u5bf9\u67d0\u4e2a\u6307\u5b9a\u6587\u4ef6\u8fdb\u884c\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011 socket \u6a21\u5757\u662f\u9488\u5bf9\u670d\u52a1\u5668\u7aef\u548c\u5ba2\u6237\u7aef Socket \u8fdb\u884c\u3010\u6253\u5f00\u3011\u3010\u8bfb\u5199\u3011\u3010\u5173\u95ed\u3011","title":"socket \u57fa\u7840"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Socket/#_1","text":"\u670d\u52a1\u7aef #include <sys/types.h> #include <sys/socket.h> #include <stdio.h> #include <netinet/in.h> #include <arpa/inet.h> #include <unistd.h> #include <string.h> #include <stdlib.h> #include <iostream> #include <string> #include <typeinfo> #define PORT 7000 #define QUEUE 20 int conn ; using namespace std ; int main () { //\u5b9e\u4f8b\u5316socket\u5bf9\u8c61\uff1a // AF_INET\u4e3a\u5730\u5740\u7c07\uff0c\u9ed8\u8ba4IPV4; // SOCK_STREAM\u4e3a\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3atcp // 0\u4e3a\u534f\u8bae\uff0c\u9ed8\u8ba4\u81ea\u52a8\u9009\u62e9\u5408\u9002\u534f\u8bae int ss = socket ( AF_INET , SOCK_STREAM , 0 ); // \u521b\u5efa\u4e00\u4e2astruct struct sockaddr_in server_sockaddr ; //\u7ed3\u6784\u4f53\u52a0\u5165\u53c2\u6570\uff1a\u7aef\u53e3\u548c\u5730\u5740 server_sockaddr . sin_family = AF_INET ; server_sockaddr . sin_port = htons ( PORT ); server_sockaddr . sin_addr . s_addr = htonl ( INADDR_ANY ); //bind() if ( bind ( ss , ( struct sockaddr * ) & server_sockaddr , sizeof ( server_sockaddr )) == -1 ) { perror ( \"bind\" ); exit ( 1 ); } //listen() if ( listen ( ss , QUEUE ) == -1 ) { perror ( \"listen\" ); exit ( 1 ); } struct sockaddr_in client_addr ; socklen_t length = sizeof ( client_addr ); //accept() //\u6210\u529f\u8fd4\u56de\u975e\u8d1f\u63cf\u8ff0\u5b57\uff0c\u51fa\u9519\u8fd4\u56de-1 conn = accept ( ss , ( struct sockaddr * ) & client_addr , & length ); if ( conn < 0 ) { perror ( \"connect\" ); exit ( 1 ); } char buffer [ 1024 ]; while ( 1 ) { memset ( buffer , 0 , sizeof ( buffer )); //read() int len = recv ( conn , buffer , sizeof ( buffer ), 0 ); if ( strcmp ( buffer , \"exit \\n \" ) == 0 ) break ; printf ( \"buffer: %s\" , buffer ); //send() //\u5fc5\u987b\u8981\u6709\u8fd4\u56de\u6570\u636e\uff0c \u8fd9\u6837\u624d\u7b97\u4e00\u4e2a\u5b8c\u6574\u7684\u8bf7\u6c42 send ( conn , buffer , len , 0 ); } close ( conn ); close ( ss ); return 0 ; } \u5ba2\u6237\u7aef #include <sys/types.h> #include <sys/socket.h> #include <stdio.h> #include <netinet/in.h> #include <arpa/inet.h> #include <unistd.h> #include <string.h> #include <stdlib.h> #include <fcntl.h> #include <sys/shm.h> #define MYPORT 7000 #define BUFFER_SIZE 1024 int main () { ///\u5b9a\u4e49sockfd int sock_cli = socket ( AF_INET , SOCK_STREAM , 0 ); ///\u5b9a\u4e49sockaddr_in struct sockaddr_in servaddr ; memset ( & servaddr , 0 , sizeof ( servaddr )); servaddr . sin_family = AF_INET ; servaddr . sin_port = htons ( MYPORT ); ///\u670d\u52a1\u5668\u7aef\u53e3 servaddr . sin_addr . s_addr = inet_addr ( \"127.0.0.1\" ); ///\u670d\u52a1\u5668ip //\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u6210\u529f\u8fd4\u56de0\uff0c\u9519\u8bef\u8fd4\u56de-1 if ( connect ( sock_cli , ( struct sockaddr * ) & servaddr , sizeof ( servaddr )) < 0 ) { perror ( \"connect\" ); exit ( 1 ); } char sendbuf [ BUFFER_SIZE ]; char recvbuf [ BUFFER_SIZE ]; while ( fgets ( sendbuf , sizeof ( sendbuf ), stdin ) != NULL ) { send ( sock_cli , sendbuf , strlen ( sendbuf ), 0 ); ///\u53d1\u9001 if ( strcmp ( sendbuf , \"exit \\n \" ) == 0 ) break ; recv ( sock_cli , recvbuf , sizeof ( recvbuf ), 0 ); ///\u63a5\u6536 fputs ( recvbuf , stdout ); memset ( sendbuf , 0 , sizeof ( sendbuf )); memset ( recvbuf , 0 , sizeof ( recvbuf )); } close ( sock_cli ); return 0 ; }","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Windows%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","text":"WinSock \u662f Windows \u7cfb\u7edf\u4e0b\u5229\u7528 Socket \u5957\u63a5\u5b57\u8fdb\u884c\u7f51\u7edc\u7f16\u7a0b\u7684\u76f8\u5173\u51fd\u6570\uff0c\u662f Windows \u4e0b\u7684\u7f51\u7edc\u7f16\u7a0b\u63a5\u53e3\u3002 WinSock \u5728\u5e38\u89c1\u7684 Windows \u5e73\u53f0\u4e0a\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u7248\u672c\uff0c\u5373 WinSock1 \u548c WinSock2\u3002\u7f16\u5199\u4e0e WinSock1 \u517c\u5bb9\u7684\u7a0b\u5e8f\u4f60\u9700\u8981\u5f15\u7528\u5934\u6587\u4ef6 WinSock.h\uff0c\u5982\u679c\u7f16\u5199\u4f7f\u7528 WinSock2 \u7684\u7a0b\u5e8f\uff0c\u5219\u9700\u8981\u5f15\u7528 WinSock2.h\u3002\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a MSWSOCK.H \u5934\u6587\u4ef6\uff0c\u5b83\u662f\u4e13\u95e8\u7528\u6765\u652f\u6301\u5728 Windows \u5e73\u53f0\u4e0a\u9ad8\u6027\u80fd\u7f51\u7edc\u7a0b\u5e8f\u6269\u5c55\u529f\u80fd\u7684\u3002\u4f7f\u7528 WinSock.h \u5934\u6587\u4ef6\u65f6\uff0c\u540c\u65f6\u9700\u8981\u5e93\u6587\u4ef6 wsock32.lib\uff0c\u4f7f\u7528 WinSock2.h \u65f6\uff0c\u5219\u9700\u8981ws2_32.lib\uff0c\u5982\u679c\u4f7f\u7528 mswsock.h \u4e2d\u7684\u6269\u5c55 API\uff0c\u5219\u9700\u8981 mswsock.lib\u3002\u6b63\u786e\u5f15\u7528\u4e86\u5934\u6587\u4ef6\uff0c\u5e76\u94fe\u63a5\u4e86\u5bf9\u5e94\u7684\u5e93\u6587\u4ef6\uff0c\u4f60\u5c31\u6784\u5efa\u8d77\u7f16\u5199 WinSock \u7f51\u7edc\u7a0b\u5e8f\u7684\u73af\u5883\u4e86\u3002 Windows \u4e0b\u4f7f\u7528 WinSock \u7f16\u7a0b\u4e0e Linux \u7684\u533a\u522b\u5728\u4e8e Windows \u4e0b\u9700\u8981\u5148\u6709\u4e00\u4e2a\u521d\u59cb\u5316\u7684\u64cd\u4f5c\uff0c\u7ed3\u675f\u7684\u65f6\u5019\u9700\u8981\u4e00\u4e2a\u6e05\u7406\u7684\u64cd\u4f5c\u3002 winsock2.h \u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u66ff\u4ee3 winsock.h\uff0c\u800c\u4e0d\u662f\u6269\u5c55\u5b83\u3002\u5728 winsock.h \u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u5185\u5bb9\u5728 winsock2.h \u4e2d\u4e5f\u90fd\u5b9a\u4e49\u4e86\u3002\u5982\u679c winsock2.h \u5728 winsock.h \u524d\u5305\u542b\uff0cwinsock2.h \u5b9a\u4e49\u4e86 _WINSOCKAPI_ \uff0c\u963b\u6b62\u7f16\u8bd1\u5668\u53bb\u5904\u7406\u540e\u9762\u7684 winsock.h\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u62a5\u9519\u3002\u4f46\u662f\u5982\u679c winsock.h \u5728 winsock2.h \u524d\u5305\u542b\uff0cwinsock2.h \u6ca1\u6709\u68c0\u6d4b\u5230\u8fd9\u4e9b\uff0c\u800c\u53bb\u91cd\u65b0\u5b9a\u4e49 winsock.h \u5df2\u7ecf\u5b9a\u4e49\u7684\u4e1c\u897f\uff0c\u4ece\u800c\u7f16\u8bd1\u62a5\u9519\u3002 \u8981\u4f7f\u7528 WinSock \u4ee5\u4e0b\u56db\u6b65\u5fc5\u4e0d\u53ef\u5c11\uff1a 1. \u5305\u542b WinSock \u5934\u6587\u4ef6\uff1a #include\"WinSock2.h\" 2. \u94fe\u63a5 WinSock \u5bfc\u5165\u5e93\uff1a #pragma comment(lib,\"ws2_32.lib\") 3. \u52a0\u8f7dWinSock\u52a8\u6001\u94fe\u63a5\u5e93 4. \u6ce8\u9500WinSock\u52a8\u6001\u94fe\u63a5\u5e93 \u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b\uff1a \u521d\u59cb\u5316\uff1a #include \"WinSock2.h\" #pragma comment(lib,\"ws2_32.lib\") /*\u52a0\u8f7dWinsock DLL*/ WSADATA wsd ; if ( WSAStartup ( MAKEWORD ( 2 , 2 ) , & wsd ) != 0 ) { printf ( \"Winsock \u521d\u59cb\u5316\u5931\u8d25! \\n \" ); return 1 ; } socket \u76f8\u5173\u51fd\u6570\u8c03\u7528 socket (...) bind (...) listen (...) connect (...) accept (...) send / sendto recv / recvfrom \u6e05\u7406 WSACleanup (); WinSock \u5730\u5740\u7ed3\u6784 in_addr \u7ed3\u6784 struct in_addr { union { struct { u_char s_b1 ; u_char s_b2 ; u_char s_b3 ; u_char s_b4 ; } S_un_b ; struct { u_short s_w1 ; u_short s_w2 ; } S_un_w ; u_long S_addr ; } S_un ; }; \u7528\u4e8e\u5b58\u50a8 IPv4 \u5730\u5740\u3002 sockaddr_in \u7ed3\u6784 // // IPv4 Socket address, Internet style // typedef struct sockaddr_in { #if(_WIN32_WINNT < 0x0600) short sin_family ; #else //(_WIN32_WINNT < 0x0600) ADDRESS_FAMILY sin_family ; #endif //(_WIN32_WINNT < 0x0600) USHORT sin_port ; IN_ADDR sin_addr ; CHAR sin_zero [ 8 ]; } SOCKADDR_IN , * PSOCKADDR_IN ; \u8be5\u7ed3\u6784\u5bf9IP\u5730\u5740\u548c\u534f\u8bae\u53f7\u8fdb\u884c\u4e86\u5c01\u88c5\u3002 sockaddr \u7ed3\u6784 // // Structure used to store most addresses. // typedef struct sockaddr { #if (_WIN32_WINNT < 0x0600) u_short sa_family ; #else ADDRESS_FAMILY sa_family ; // Address family. #endif //(_WIN32_WINNT < 0x0600) CHAR sa_data [ 14 ]; // Up to 14 bytes of direct address. } SOCKADDR , * PSOCKADDR , FAR * LPSOCKADDR ; sockaddr \u4e3a\u901a\u7528\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u3002\u5f53\u4f7f\u7528 TCP/IP \u65f6\uff0c\u8be5\u7ed3\u6784\u5185\u5bb9\u4e0e sockaddr_in \u5b8c\u5168\u76f8\u540c\u3002","title":"Windows \u7f51\u7edc\u7f16\u7a0b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Windows%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#winsock","text":"","title":"WinSock \u5730\u5740\u7ed3\u6784"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Windows%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#in_addr","text":"struct in_addr { union { struct { u_char s_b1 ; u_char s_b2 ; u_char s_b3 ; u_char s_b4 ; } S_un_b ; struct { u_short s_w1 ; u_short s_w2 ; } S_un_w ; u_long S_addr ; } S_un ; }; \u7528\u4e8e\u5b58\u50a8 IPv4 \u5730\u5740\u3002","title":"in_addr\u7ed3\u6784"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Windows%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#sockaddr_in","text":"// // IPv4 Socket address, Internet style // typedef struct sockaddr_in { #if(_WIN32_WINNT < 0x0600) short sin_family ; #else //(_WIN32_WINNT < 0x0600) ADDRESS_FAMILY sin_family ; #endif //(_WIN32_WINNT < 0x0600) USHORT sin_port ; IN_ADDR sin_addr ; CHAR sin_zero [ 8 ]; } SOCKADDR_IN , * PSOCKADDR_IN ; \u8be5\u7ed3\u6784\u5bf9IP\u5730\u5740\u548c\u534f\u8bae\u53f7\u8fdb\u884c\u4e86\u5c01\u88c5\u3002","title":"sockaddr_in\u7ed3\u6784"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Windows%20%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#sockaddr","text":"// // Structure used to store most addresses. // typedef struct sockaddr { #if (_WIN32_WINNT < 0x0600) u_short sa_family ; #else ADDRESS_FAMILY sa_family ; // Address family. #endif //(_WIN32_WINNT < 0x0600) CHAR sa_data [ 14 ]; // Up to 14 bytes of direct address. } SOCKADDR , * PSOCKADDR , FAR * LPSOCKADDR ; sockaddr \u4e3a\u901a\u7528\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u3002\u5f53\u4f7f\u7528 TCP/IP \u65f6\uff0c\u8be5\u7ed3\u6784\u5185\u5bb9\u4e0e sockaddr_in \u5b8c\u5168\u76f8\u540c\u3002","title":"sockaddr\u7ed3\u6784"}]}